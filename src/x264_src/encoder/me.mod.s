	.text
	.file	"me.c"
	.file	0 "/home/yjs/workspace/x264-test/src" "x264_src/encoder/me.c" md5 0xf207a98fe290f3dc3c9af0aa958dfc24
	.file	1 "/usr/include/x86_64-linux-gnu/bits" "types.h" md5 0xd108b5f93a74c50510d7d9bc0ab36df9
	.file	2 "/usr/include/x86_64-linux-gnu/bits" "stdint-uintn.h" md5 0x2bf2ae53c58c01b1a1b9383b5195125c
	.file	3 "/usr/include/x86_64-linux-gnu/bits" "stdint-intn.h" md5 0x55bcbdc3159515ebd91d351a70d505f4
	.file	4 "x264_src/common" "pixel.h" md5 0xe9056d80edbb4dc2514d271d596c298e
	.file	5 "x264_src/common" "common.h" md5 0x5afac7bf2f5673f1628c455d7d320ad7
	.file	6 "x264_src/common" "macroblock.h" md5 0x15f4a9c1d53f4196a5f2b80807bb8b1a
	.file	7 "x264_src/encoder" "me.h" md5 0x9ed8adb24d2511c1244c72a9a0793ae7
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function x264_me_search_ref
.LCPI0_0:
	.long	2                               # 0x2
	.long	2                               # 0x2
	.long	2                               # 0x2
	.long	2                               # 0x2
.LCPI0_1:
	.long	2                               # 0x2
	.long	2                               # 0x2
	.zero	4
	.zero	4
	.text
	.globl	x264_me_search_ref
	.p2align	4, 0x90
	.type	x264_me_search_ref,@function
x264_me_search_ref:                     # @x264_me_search_ref
.Lfunc_begin0:
	.loc	0 174 0                         # x264_src/encoder/me.c:174:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_me_search_ref:h <- $rdi
	#DEBUG_VALUE: x264_me_search_ref:m <- $rsi
	#DEBUG_VALUE: x264_me_search_ref:mvc <- $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- $r8
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$936, %rsp                      # imm = 0x3A8
	.cfi_def_cfa_offset 992
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, 664(%rsp)                  # 8-byte Spill
.Ltmp0:
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	movl	%ecx, %r11d
	movq	%rdx, 48(%rsp)                  # 8-byte Spill
.Ltmp1:
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	movq	%rdi, %rbx
.Ltmp2:
	#DEBUG_VALUE: x264_me_search_ref:bw <- undef
	#DEBUG_VALUE: x264_me_search_ref:bh <- undef
	#DEBUG_VALUE: x264_me_search_ref:i_pixel <- undef
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- undef
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- undef
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- undef
	.loc	0 189 20 prologue_end           # x264_src/encoder/me.c:189:20
	movq	16472(%rdi), %rcx
.Ltmp3:
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- $r11d
	movq	%rcx, %xmm0
	pshufd	$85, %xmm0, %xmm2               # xmm2 = xmm0[1,1,1,1]
	.loc	0 191 20                        # x264_src/encoder/me.c:191:20
	movq	16480(%rdi), %rax
	movq	%rax, %xmm1
	pshufd	$85, %xmm1, %xmm3               # xmm3 = xmm1[1,1,1,1]
	movd	%xmm3, %edi
.Ltmp4:
	#DEBUG_VALUE: x264_me_search_ref:h <- $rbx
	.loc	0 0 20 is_stmt 0                # x264_src/encoder/me.c:0:20
	movq	%rcx, 280(%rsp)                 # 8-byte Spill
	.loc	0 193 34 is_stmt 1              # x264_src/encoder/me.c:193:34
	leal	(,%rcx,4), %r9d
.Ltmp5:
	#DEBUG_VALUE: x264_me_search_ref:mv_x_min_qpel <- $r9d
	#DEBUG_VALUE: x264_me_search_ref:mv_y_min_qpel <- undef
	.loc	0 0 34 is_stmt 0                # x264_src/encoder/me.c:0:34
	movq	%rax, 336(%rsp)                 # 8-byte Spill
	.loc	0 195 34 is_stmt 1              # x264_src/encoder/me.c:195:34
	leal	(,%rax,4), %r10d
.Ltmp6:
	#DEBUG_VALUE: x264_me_search_ref:mv_x_max_qpel <- $r10d
	#DEBUG_VALUE: x264_me_search_ref:mv_y_max_qpel <- undef
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- undef
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- undef
	.loc	0 204 37                        # x264_src/encoder/me.c:204:37
	movq	8(%rsi), %r8
	.loc	0 204 49 is_stmt 0              # x264_src/encoder/me.c:204:49
	movswq	128(%rsi), %rax
	.loc	0 204 47                        # x264_src/encoder/me.c:204:47
	movq	%rax, %rcx
	addq	%rax, %rcx
	movq	%r8, %rdx
	subq	%rcx, %rdx
.Ltmp7:
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- $rdx
	.loc	0 0 47                          # x264_src/encoder/me.c:0:47
	movq	%rdx, 40(%rsp)                  # 8-byte Spill
.Ltmp8:
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	.loc	0 205 49 is_stmt 1              # x264_src/encoder/me.c:205:49
	movswl	130(%rsi), %ecx
	.loc	0 205 47 is_stmt 0              # x264_src/encoder/me.c:205:47
	movslq	%ecx, %rcx
	subq	%rcx, %r8
	subq	%rcx, %r8
.Ltmp9:
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- $r8
	.loc	0 0 47                          # x264_src/encoder/me.c:0:47
	movq	%r8, 24(%rsp)                   # 8-byte Spill
.Ltmp10:
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	.loc	5 202 14 is_stmt 1              # x264_src/common/common.h:202:14
	cmpl	%r10d, %eax
	movl	%r10d, 400(%rsp)                # 4-byte Spill
.Ltmp11:
	#DEBUG_VALUE: x264_me_search_ref:mv_x_max_qpel <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	movl	%r10d, %ebp
	cmovll	%eax, %ebp
.Ltmp12:
	#DEBUG_VALUE: x264_clip3:i_min <- $r9d
	#DEBUG_VALUE: x264_clip3:i_max <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_clip3:v <- $eax
	.loc	5 202 17 is_stmt 0              # x264_src/common/common.h:202:17
	cmpl	%eax, %r9d
	movq	%rdi, 344(%rsp)                 # 8-byte Spill
.Ltmp13:
	.loc	0 196 34 is_stmt 1              # x264_src/encoder/me.c:196:34
	leal	(,%rdi,4), %eax
.Ltmp14:
	#DEBUG_VALUE: x264_me_search_ref:mv_y_max_qpel <- $eax
	.loc	0 0 34 is_stmt 0                # x264_src/encoder/me.c:0:34
	movl	%r9d, 80(%rsp)                  # 4-byte Spill
.Ltmp15:
	#DEBUG_VALUE: x264_clip3:i_min <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_min_qpel <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	.loc	5 202 14 is_stmt 1              # x264_src/common/common.h:202:14
	cmovgl	%r9d, %ebp
.Ltmp16:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $ebp
	.loc	5 202 14 is_stmt 0              # x264_src/common/common.h:202:14
	cmpl	%eax, %ecx
	movl	%eax, 112(%rsp)                 # 4-byte Spill
	movl	%eax, %r15d
	cmovll	%ecx, %r15d
.Ltmp17:
	#DEBUG_VALUE: x264_clip3:i_min <- undef
	#DEBUG_VALUE: x264_clip3:i_max <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_clip3:v <- undef
	.loc	0 189 20 is_stmt 1              # x264_src/encoder/me.c:189:20
	movd	%xmm2, %eax
.Ltmp18:
	.loc	0 0 20 is_stmt 0                # x264_src/encoder/me.c:0:20
	movq	%rax, 392(%rsp)                 # 8-byte Spill
	.loc	0 194 34 is_stmt 1              # x264_src/encoder/me.c:194:34
	leal	(,%rax,4), %eax
.Ltmp19:
	#DEBUG_VALUE: x264_clip3:i_min <- $eax
	#DEBUG_VALUE: x264_me_search_ref:mv_y_min_qpel <- $eax
	.loc	5 202 17                        # x264_src/common/common.h:202:17
	cmpl	%ecx, %eax
	movl	%eax, 352(%rsp)                 # 4-byte Spill
	.loc	5 202 14 is_stmt 0              # x264_src/common/common.h:202:14
	cmovgl	%eax, %r15d
.Ltmp20:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r15d
	.loc	0 210 17 is_stmt 1              # x264_src/encoder/me.c:210:17
	leal	2(%rbp), %eax
.Ltmp21:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	movl	%eax, 232(%rsp)                 # 4-byte Spill
	.loc	0 210 23                        # x264_src/encoder/me.c:210:23
	movl	%eax, %r12d
	sarl	$2, %r12d
.Ltmp22:
	#DEBUG_VALUE: x264_me_search_ref:pmx <- $r12d
	.loc	0 211 17 is_stmt 1              # x264_src/encoder/me.c:211:17
	leal	2(%r15), %eax
	movl	%eax, 272(%rsp)                 # 4-byte Spill
	.loc	0 211 23 is_stmt 0              # x264_src/encoder/me.c:211:23
	movl	%eax, %r14d
	sarl	$2, %r14d
.Ltmp23:
	#DEBUG_VALUE: x264_me_search_ref:pmy <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:bcost <- 268435456
	.loc	0 215 31 is_stmt 1              # x264_src/encoder/me.c:215:31
	cmpl	$3, 16408(%rbx)
.Ltmp24:
	.loc	0 175 39                        # x264_src/encoder/me.c:175:39
	movslq	(%rsi), %r8
	.loc	0 178 24                        # x264_src/encoder/me.c:178:24
	movslq	120(%rsi), %rcx
.Ltmp25:
	#DEBUG_VALUE: x264_me_search_ref:stride <- undef
	.loc	0 179 39                        # x264_src/encoder/me.c:179:39
	movl	416(%rbx), %eax
.Ltmp26:
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- $eax
	.loc	0 0 39 is_stmt 0                # x264_src/encoder/me.c:0:39
	movq	%rax, 320(%rsp)                 # 8-byte Spill
	.loc	0 184 28 is_stmt 1              # x264_src/encoder/me.c:184:28
	movq	80(%rsi), %r9
.Ltmp27:
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- $r9
	.loc	0 0 28 is_stmt 0                # x264_src/encoder/me.c:0:28
	movq	%rsi, 456(%rsp)                 # 8-byte Spill
.Ltmp28:
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	.loc	0 183 23 is_stmt 1              # x264_src/encoder/me.c:183:23
	movq	88(%rsi), %rdi
.Ltmp29:
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- $rdi
	.loc	0 0 23 is_stmt 0                # x264_src/encoder/me.c:0:23
	movq	%rbx, 104(%rsp)                 # 8-byte Spill
.Ltmp30:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	movq	%r14, 432(%rsp)                 # 8-byte Spill
.Ltmp31:
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	movq	%r12, 512(%rsp)                 # 8-byte Spill
.Ltmp32:
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	movq	%r8, 72(%rsp)                   # 8-byte Spill
	movq	%rcx, %r13
	movq	%rcx, 64(%rsp)                  # 8-byte Spill
	movq	%rdi, 56(%rsp)                  # 8-byte Spill
	movq	%r9, 136(%rsp)                  # 8-byte Spill
	movq	%r11, 264(%rsp)                 # 8-byte Spill
.Ltmp33:
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	.loc	0 215 9 is_stmt 1               # x264_src/encoder/me.c:215:9
	jl	.LBB0_8
.Ltmp34:
# %bb.1:                                # %if.then
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_min_qpel <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_min_qpel <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_max_qpel <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_max_qpel <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- 268435456
	#DEBUG_VALUE: pack16to32_mask:a <- $ebp
	#DEBUG_VALUE: pack16to32_mask:b <- $r15d
	.loc	6 345 13                        # x264_src/common/macroblock.h:345:13
	movzwl	%bp, %eax
	.loc	6 345 26 is_stmt 0              # x264_src/common/macroblock.h:345:26
	movl	%r15d, %ecx
	shll	$16, %ecx
	.loc	6 345 22                        # x264_src/common/macroblock.h:345:22
	orl	%eax, %ecx
.Ltmp35:
	#DEBUG_VALUE: x264_me_search_ref:pmv <- $ecx
	.loc	6 0 22                          # x264_src/common/macroblock.h:0:22
	movl	%ecx, 32(%rsp)                  # 4-byte Spill
.Ltmp36:
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 218 13 is_stmt 1              # x264_src/encoder/me.c:218:13
	testl	%r11d, %r11d
.Ltmp37:
	.loc	0 218 13 is_stmt 0              # x264_src/encoder/me.c:218:13
	je	.LBB0_11
.Ltmp38:
# %bb.2:                                # %if.end68
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_min_qpel <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_min_qpel <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_max_qpel <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_max_qpel <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	72(%rsp), %r14                  # 8-byte Reload
	movl	x264_pixel_size(,%r14,8), %ecx
.Ltmp39:
	#DEBUG_VALUE: x264_me_search_ref:bw <- $ecx
	movl	x264_pixel_size+4(,%r14,8), %esi
.Ltmp40:
	#DEBUG_VALUE: x264_me_search_ref:bh <- $esi
	.loc	0 219 13 is_stmt 1              # x264_src/encoder/me.c:219:13
	movl	$16, 160(%rsp)
	movq	456(%rsp), %rax                 # 8-byte Reload
	leaq	32(%rax), %rdx
	movq	24(%rax), %rax
	movq	%rax, 16(%rsp)
	movl	%esi, 288(%rsp)                 # 4-byte Spill
	movl	%esi, 8(%rsp)
	movl	%ecx, 240(%rsp)                 # 4-byte Spill
	movl	%ecx, (%rsp)
	leaq	672(%rsp), %rdi
	leaq	160(%rsp), %rsi
.Ltmp41:
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/me.c:0:13
	movq	%rdx, 152(%rsp)                 # 8-byte Spill
	.loc	0 219 13                        # x264_src/encoder/me.c:219:13
	movl	%r13d, %ecx
.Ltmp42:
	movl	%ebp, %r8d
	movl	%r15d, %r9d
	movq	%r11, %r12
	callq	*32624(%rbx)
.Ltmp43:
	#DEBUG_VALUE: src <- $rax
	movl	160(%rsp), %ecx
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movq	%rax, %rdx
	callq	*31928(%rbx,%r14,8)
.Ltmp44:
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%r12, %rdi
	.loc	0 219 13                        # x264_src/encoder/me.c:219:13
	movslq	%ebp, %rcx
	movq	40(%rsp), %rdx                  # 8-byte Reload
	movzwl	(%rdx,%rcx,2), %ecx
	movslq	%r15d, %rdx
	movq	24(%rsp), %rsi                  # 8-byte Reload
	movzwl	(%rsi,%rdx,2), %edx
	addl	%ecx, %edx
	addl	%eax, %edx
.Ltmp45:
	#DEBUG_VALUE: cost <- $edx
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	xorl	%r14d, %r14d
.Ltmp46:
	.loc	0 219 13                        # x264_src/encoder/me.c:219:13
	cmpl	$268435456, %edx                # imm = 0x10000000
	movl	$268435456, %r8d                # imm = 0x10000000
.Ltmp47:
	.loc	0 219 13                        # x264_src/encoder/me.c:219:13
	cmovll	%edx, %r8d
	cmovgel	%r14d, %r15d
.Ltmp48:
	cmovll	%ebp, %r14d
.Ltmp49:
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- $r8d
	#DEBUG_VALUE: i <- 0
	.loc	0 220 27 is_stmt 1              # x264_src/encoder/me.c:220:27
	testl	%edi, %edi
.Ltmp50:
	.loc	0 220 9 is_stmt 0               # x264_src/encoder/me.c:220:9
	jle	.LBB0_12
.Ltmp51:
# %bb.3:                                # %for.body.lr.ph
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:bw <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bh <- [DW_OP_plus_uconst 288, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_min_qpel <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_min_qpel <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_max_qpel <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_max_qpel <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	0 220 27                        # x264_src/encoder/me.c:220:27
	movl	%edi, %edx
	xorl	%r12d, %r12d
	movq	48(%rsp), %r9                   # 8-byte Reload
	movq	%rdx, 144(%rsp)                 # 8-byte Spill
	jmp	.LBB0_5
.Ltmp52:
	.p2align	4, 0x90
.LBB0_4:                                # %for.inc
                                        #   in Loop: Header=BB0_5 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:bw <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bh <- [DW_OP_plus_uconst 288, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_min_qpel <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_min_qpel <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_max_qpel <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_max_qpel <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- $r8d
	.loc	0 220 37                        # x264_src/encoder/me.c:220:37
	incq	%r12
.Ltmp53:
	#DEBUG_VALUE: i <- $r12
	.loc	0 220 27                        # x264_src/encoder/me.c:220:27
	cmpq	%r12, %rdx
.Ltmp54:
	.loc	0 220 9                         # x264_src/encoder/me.c:220:9
	je	.LBB0_12
.Ltmp55:
.LBB0_5:                                # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:bw <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bh <- [DW_OP_plus_uconst 288, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_min_qpel <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_min_qpel <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_max_qpel <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_max_qpel <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- $r8d
	#DEBUG_VALUE: i <- $r12
	.loc	0 222 17 is_stmt 1              # x264_src/encoder/me.c:222:17
	movl	(%r9,%r12,4), %eax
	testl	%eax, %eax
	.loc	0 222 31 is_stmt 0              # x264_src/encoder/me.c:222:31
	je	.LBB0_4
.Ltmp56:
# %bb.6:                                # %for.body
                                        #   in Loop: Header=BB0_5 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:bw <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bh <- [DW_OP_plus_uconst 288, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_min_qpel <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_min_qpel <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_max_qpel <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_max_qpel <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r12
	cmpl	%eax, 32(%rsp)                  # 4-byte Folded Reload
	je	.LBB0_4
.Ltmp57:
# %bb.7:                                # %if.then80
                                        #   in Loop: Header=BB0_5 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:bw <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bh <- [DW_OP_plus_uconst 288, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_min_qpel <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_min_qpel <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_max_qpel <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_max_qpel <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r12
	.loc	0 224 38 is_stmt 1              # x264_src/encoder/me.c:224:38
	movswl	%ax, %ecx
.Ltmp58:
	#DEBUG_VALUE: x264_clip3:v <- $ecx
	.loc	0 0 38 is_stmt 0                # x264_src/encoder/me.c:0:38
	movl	400(%rsp), %ebp                 # 4-byte Reload
.Ltmp59:
	.loc	5 202 14 is_stmt 1              # x264_src/common/common.h:202:14
	cmpl	%ebp, %ecx
	cmovll	%ecx, %ebp
.Ltmp60:
	#DEBUG_VALUE: x264_clip3:i_min <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_clip3:i_max <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	.loc	5 0 14 is_stmt 0                # x264_src/common/common.h:0:14
	movl	80(%rsp), %edx                  # 4-byte Reload
	.loc	5 202 17                        # x264_src/common/common.h:202:17
	cmpl	%ecx, %edx
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmovgl	%edx, %ebp
.Ltmp61:
	#DEBUG_VALUE: mx <- $ebp
	.loc	0 225 38 is_stmt 1              # x264_src/encoder/me.c:225:38
	sarl	$16, %eax
.Ltmp62:
	#DEBUG_VALUE: x264_clip3:v <- $eax
	.loc	0 0 38 is_stmt 0                # x264_src/encoder/me.c:0:38
	movl	112(%rsp), %ebx                 # 4-byte Reload
.Ltmp63:
	.loc	5 202 14 is_stmt 1              # x264_src/common/common.h:202:14
	cmpl	%ebx, %eax
	movq	%r15, 440(%rsp)                 # 8-byte Spill
.Ltmp64:
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	.loc	5 0 14 is_stmt 0                # x264_src/common/common.h:0:14
	movl	%r8d, %r15d
.Ltmp65:
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- $r15d
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmovll	%eax, %ebx
.Ltmp66:
	#DEBUG_VALUE: x264_clip3:i_min <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_clip3:i_max <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	.loc	5 0 14                          # x264_src/common/common.h:0:14
	movl	352(%rsp), %ecx                 # 4-byte Reload
.Ltmp67:
	.loc	5 202 17                        # x264_src/common/common.h:202:17
	cmpl	%eax, %ecx
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmovgl	%ecx, %ebx
.Ltmp68:
	#DEBUG_VALUE: my <- $ebx
	.loc	0 226 17 is_stmt 1              # x264_src/encoder/me.c:226:17
	movl	$16, 160(%rsp)
	movq	456(%rsp), %rax                 # 8-byte Reload
.Ltmp69:
	movq	24(%rax), %rax
	movq	%rax, 16(%rsp)
	movl	288(%rsp), %eax                 # 4-byte Reload
	movl	%eax, 8(%rsp)
	movl	240(%rsp), %eax                 # 4-byte Reload
	movl	%eax, (%rsp)
	leaq	672(%rsp), %rdi
	leaq	160(%rsp), %rsi
	movq	152(%rsp), %rdx                 # 8-byte Reload
	movl	%r13d, %ecx
	#DEBUG_VALUE: x264_clip3:v <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	movl	%ebp, %r8d
	movl	%ebx, %r9d
	movq	104(%rsp), %r13                 # 8-byte Reload
	callq	*32624(%r13)
.Ltmp70:
	#DEBUG_VALUE: src <- $rax
	movl	160(%rsp), %ecx
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movq	%rax, %rdx
	movq	72(%rsp), %rax                  # 8-byte Reload
.Ltmp71:
	callq	*31928(%r13,%rax,8)
.Ltmp72:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	movq	48(%rsp), %r9                   # 8-byte Reload
	movq	64(%rsp), %r13                  # 8-byte Reload
	.loc	0 226 17                        # x264_src/encoder/me.c:226:17
	movslq	%ebp, %rcx
	movq	40(%rsp), %rdx                  # 8-byte Reload
	movzwl	(%rdx,%rcx,2), %edx
	movslq	%ebx, %rsi
	movl	%r15d, %r8d
	movq	440(%rsp), %r15                 # 8-byte Reload
.Ltmp73:
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	24(%rsp), %rdi                  # 8-byte Reload
	.loc	0 226 17                        # x264_src/encoder/me.c:226:17
	movzwl	(%rdi,%rsi,2), %edi
	addl	%edx, %edi
	movq	144(%rsp), %rdx                 # 8-byte Reload
	addl	%eax, %edi
.Ltmp74:
	#DEBUG_VALUE: cost <- $edi
	.loc	0 226 17                        # x264_src/encoder/me.c:226:17
	cmpl	%r8d, %edi
.Ltmp75:
	.loc	0 226 17                        # x264_src/encoder/me.c:226:17
	cmovll	%edi, %r8d
	cmovll	%esi, %r15d
	cmovll	%ecx, %r14d
.Ltmp76:
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- $r8d
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	jmp	.LBB0_4
.Ltmp77:
.LBB0_8:                                # %if.else
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_min_qpel <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_min_qpel <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_max_qpel <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_max_qpel <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	movdqa	%xmm3, 288(%rsp)                # 16-byte Spill
	movdqa	%xmm2, 80(%rsp)                 # 16-byte Spill
.Ltmp78:
	#DEBUG_VALUE: x264_me_search_ref:mv_x_min_qpel <- undef
	movdqa	%xmm1, 240(%rsp)                # 16-byte Spill
	movdqa	%xmm0, 352(%rsp)                # 16-byte Spill
.Ltmp79:
	#DEBUG_VALUE: x264_me_search_ref:mv_y_min_qpel <- undef
	.loc	0 244 77 is_stmt 1              # x264_src/encoder/me.c:244:77
	movl	%r14d, %eax
	movq	%r13, %rcx
	imull	%ecx, %eax
	.loc	0 244 84 is_stmt 0              # x264_src/encoder/me.c:244:84
	addl	%r12d, %eax
	.loc	0 244 65                        # x264_src/encoder/me.c:244:65
	movslq	%eax, %rdx
	addq	%r9, %rdx
	.loc	0 244 17                        # x264_src/encoder/me.c:244:17
	movl	$16, %esi
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	%r11, %r15
	callq	*31928(%rbx,%r8,8)
.Ltmp80:
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	%r15, %rdx
	.loc	0 244 17                        # x264_src/encoder/me.c:244:17
	movl	%eax, %r8d
.Ltmp81:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: pack16to32_mask:a <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: pack16to32_mask:b <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	.loc	6 345 13 is_stmt 1              # x264_src/common/macroblock.h:345:13
	movzwl	%r12w, %eax
	.loc	6 345 26 is_stmt 0              # x264_src/common/macroblock.h:345:26
	movl	%r14d, %ecx
	shll	$16, %ecx
	.loc	6 345 22                        # x264_src/common/macroblock.h:345:22
	orl	%eax, %ecx
.Ltmp82:
	#DEBUG_VALUE: x264_me_search_ref:pmv <- $ecx
	.loc	6 0 22                          # x264_src/common/macroblock.h:0:22
	movl	%ecx, 32(%rsp)                  # 4-byte Spill
.Ltmp83:
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 246 19 is_stmt 1              # x264_src/encoder/me.c:246:19
	testl	%edx, %edx
.Ltmp84:
	.loc	0 246 13 is_stmt 0              # x264_src/encoder/me.c:246:13
	jle	.LBB0_13
.Ltmp85:
# %bb.9:                                # %for.body.preheader.i
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_max_qpel <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_max_qpel <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:dst <- [DW_OP_plus_uconst 672, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:mvc <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:i_mvc <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:mv_x_min <- undef
	#DEBUG_VALUE: x264_predictor_roundclip:mv_x_max <- undef
	#DEBUG_VALUE: x264_predictor_roundclip:mv_y_min <- undef
	#DEBUG_VALUE: x264_predictor_roundclip:mv_y_max <- undef
	#DEBUG_VALUE: i <- 0
	.loc	5 248 23 is_stmt 1              # x264_src/common/common.h:248:23
	movl	%edx, %eax
.Ltmp86:
	.loc	5 248 5 is_stmt 0               # x264_src/common/common.h:248:5
	cmpl	$16, %edx
	movq	24(%rsp), %r10                  # 8-byte Reload
	jae	.LBB0_15
.Ltmp87:
# %bb.10:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_max_qpel <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_max_qpel <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:dst <- [DW_OP_plus_uconst 672, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:mvc <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:i_mvc <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	5 0 5                           # x264_src/common/common.h:0:5
	movl	$268435456, 452(%rsp)           # 4-byte Folded Spill
                                        # imm = 0x10000000
	xorl	%ecx, %ecx
	movq	48(%rsp), %rdi                  # 8-byte Reload
	movdqa	352(%rsp), %xmm4                # 16-byte Reload
	movdqa	240(%rsp), %xmm5                # 16-byte Reload
	.loc	5 248 5                         # x264_src/common/common.h:248:5
	jmp	.LBB0_18
.Ltmp88:
.LBB0_11:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_min_qpel <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_min_qpel <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_max_qpel <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_max_qpel <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: pack16to32_mask:a <- $ebp
	#DEBUG_VALUE: pack16to32_mask:b <- $r15d
	.loc	5 0 5                           # x264_src/common/common.h:0:5
	xorl	%r15d, %r15d
.Ltmp89:
	movl	$268435456, %r8d                # imm = 0x10000000
	xorl	%r14d, %r14d
.Ltmp90:
.LBB0_12:                               # %for.cond.cleanup
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_min_qpel <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_min_qpel <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_max_qpel <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_max_qpel <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	movl	%r8d, 452(%rsp)                 # 4-byte Spill
	movq	%r14, 544(%rsp)                 # 8-byte Spill
.Ltmp91:
	.loc	0 229 26 is_stmt 1              # x264_src/encoder/me.c:229:26
	leal	2(%r14), %ebx
	.loc	0 229 32 is_stmt 0              # x264_src/encoder/me.c:229:32
	movl	%ebx, %edx
	sarl	$2, %edx
.Ltmp92:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $edx
	.loc	0 230 26 is_stmt 1              # x264_src/encoder/me.c:230:26
	leal	2(%r15), %ebp
	.loc	0 230 32 is_stmt 0              # x264_src/encoder/me.c:230:32
	movl	%ebp, %eax
	sarl	$2, %eax
.Ltmp93:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $eax
	.loc	0 0 32                          # x264_src/encoder/me.c:0:32
	movq	%rax, 112(%rsp)                 # 8-byte Spill
.Ltmp94:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_max_qpel <- undef
                                        # kill: def $eax killed $eax killed $rax
	movq	%r13, %rcx
.Ltmp95:
	.loc	0 231 9 is_stmt 1               # x264_src/encoder/me.c:231:9
	imull	%ecx, %eax
	movq	%rdx, 80(%rsp)                  # 8-byte Spill
.Ltmp96:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_min_qpel <- undef
	addl	%edx, %eax
	movslq	%eax, %rdx
	addq	136(%rsp), %rdx                 # 8-byte Folded Reload
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	104(%rsp), %rax                 # 8-byte Reload
	movq	72(%rsp), %r8                   # 8-byte Reload
	callq	*31928(%rax,%r8,8)
.Ltmp97:
	andl	$-4, %ebx
	movslq	%ebx, %rcx
	movq	40(%rsp), %rdx                  # 8-byte Reload
	movzwl	(%rdx,%rcx,2), %ecx
	andl	$-4, %ebp
	movslq	%ebp, %rdx
	movq	24(%rsp), %r10                  # 8-byte Reload
	movzwl	(%r10,%rdx,2), %edx
	addl	%ecx, %edx
	addl	%eax, %edx
.Ltmp98:
	#DEBUG_VALUE: cost <- $edx
	cmpl	$268435456, %edx                # imm = 0x10000000
	movl	$268435456, %r8d                # imm = 0x10000000
	cmovll	%edx, %r8d
.Ltmp99:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/me.c:0:9
	movq	432(%rsp), %r14                 # 8-byte Reload
.Ltmp100:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 271 9 is_stmt 1               # x264_src/encoder/me.c:271:9
	cmpl	$0, 32(%rsp)                    # 4-byte Folded Reload
.Ltmp101:
	.loc	0 271 9 is_stmt 0               # x264_src/encoder/me.c:271:9
	je	.LBB0_14
.Ltmp102:
.LBB0_28:                               # %if.then243
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	56(%rsp), %rdi                  # 8-byte Reload
.Ltmp103:
	.loc	0 272 9 is_stmt 1               # x264_src/encoder/me.c:272:9
	movl	$16, %esi
	movq	136(%rsp), %rdx                 # 8-byte Reload
	movl	%r13d, %ecx
	movq	104(%rsp), %rbx                 # 8-byte Reload
	movq	72(%rsp), %rax                  # 8-byte Reload
	movl	%r8d, %ebp
.Ltmp104:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	callq	*31928(%rbx,%rax,8)
.Ltmp105:
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/me.c:0:9
	movq	24(%rsp), %r10                  # 8-byte Reload
	movl	%ebp, %r8d
	movq	40(%rsp), %r12                  # 8-byte Reload
	.loc	0 272 9                         # x264_src/encoder/me.c:272:9
	movzwl	(%r12), %ecx
	movzwl	(%r10), %edx
	addl	%ecx, %edx
	addl	%eax, %edx
.Ltmp106:
	#DEBUG_VALUE: cost <- $edx
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	xorl	%eax, %eax
.Ltmp107:
	.loc	0 272 9                         # x264_src/encoder/me.c:272:9
	cmpl	%ebp, %edx
.Ltmp108:
	.loc	0 272 9                         # x264_src/encoder/me.c:272:9
	cmovll	%edx, %r8d
	movq	112(%rsp), %rcx                 # 8-byte Reload
	cmovll	%eax, %ecx
	movq	%rcx, 112(%rsp)                 # 8-byte Spill
.Ltmp109:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	80(%rsp), %rcx                  # 8-byte Reload
	.loc	0 272 9                         # x264_src/encoder/me.c:272:9
	cmovll	%eax, %ecx
.Ltmp110:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $ecx
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	%rcx, 80(%rsp)                  # 8-byte Spill
.Ltmp111:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	jmp	.LBB0_29
.Ltmp112:
.LBB0_13:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_max_qpel <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_max_qpel <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	movl	$268435456, 452(%rsp)           # 4-byte Folded Spill
                                        # imm = 0x10000000
	xorl	%r15d, %r15d
	movq	$0, 544(%rsp)                   # 8-byte Folded Spill
	movl	%r14d, %eax
	movq	%rax, 112(%rsp)                 # 8-byte Spill
.Ltmp113:
	#DEBUG_VALUE: x264_me_search_ref:mv_y_max_qpel <- undef
                                        # kill: def $r12d killed $r12d killed $r12 def $r12
	movq	%r12, 80(%rsp)                  # 8-byte Spill
	movq	24(%rsp), %r10                  # 8-byte Reload
.Ltmp114:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 271 9 is_stmt 1               # x264_src/encoder/me.c:271:9
	cmpl	$0, 32(%rsp)                    # 4-byte Folded Reload
.Ltmp115:
	.loc	0 271 9 is_stmt 0               # x264_src/encoder/me.c:271:9
	jne	.LBB0_28
	jmp	.LBB0_14
.Ltmp116:
.LBB0_15:                               # %vector.ph
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_x_max_qpel <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_y_max_qpel <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:dst <- [DW_OP_plus_uconst 672, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:mvc <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:i_mvc <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	5 248 5 is_stmt 1               # x264_src/common/common.h:248:5
	movl	%eax, %ecx
	andl	$2147483632, %ecx               # imm = 0x7FFFFFF0
	pshufd	$0, 352(%rsp), %xmm0            # 16-byte Folded Reload
                                        # xmm0 = mem[0,0,0,0]
	movdqa	%xmm0, 400(%rsp)                # 16-byte Spill
.Ltmp117:
	#DEBUG_VALUE: x264_me_search_ref:mv_x_max_qpel <- undef
	pshufd	$0, 240(%rsp), %xmm0            # 16-byte Folded Reload
                                        # xmm0 = mem[0,0,0,0]
	movdqa	%xmm0, 112(%rsp)                # 16-byte Spill
.Ltmp118:
	#DEBUG_VALUE: x264_me_search_ref:mv_y_max_qpel <- undef
	movl	%eax, %edx
	shrl	$4, %edx
	andl	$134217727, %edx                # imm = 0x7FFFFFF
	shlq	$6, %rdx
	xorl	%esi, %esi
	movq	48(%rsp), %rdi                  # 8-byte Reload
	movdqa	288(%rsp), %xmm0                # 16-byte Reload
.Ltmp119:
	.p2align	4, 0x90
.LBB0_16:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:dst <- [DW_OP_plus_uconst 672, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:mvc <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:i_mvc <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	5 250 19                        # x264_src/common/common.h:250:19
	movdqu	(%rdi,%rsi), %xmm10
	movdqu	16(%rdi,%rsi), %xmm8
	movdqu	32(%rdi,%rsi), %xmm7
	movdqu	48(%rdi,%rsi), %xmm5
	movdqa	%xmm10, %xmm14
	pslld	$16, %xmm14
	psrad	$16, %xmm14
	movdqa	%xmm8, %xmm13
	pslld	$16, %xmm13
	psrad	$16, %xmm13
	movdqa	%xmm7, %xmm12
	pslld	$16, %xmm12
	psrad	$16, %xmm12
	movdqa	%xmm5, %xmm11
	pslld	$16, %xmm11
	psrad	$16, %xmm11
	movdqa	.LCPI0_0(%rip), %xmm1           # xmm1 = [2,2,2,2]
	.loc	5 250 29 is_stmt 0              # x264_src/common/common.h:250:29
	paddd	%xmm1, %xmm14
	paddd	%xmm1, %xmm13
	paddd	%xmm1, %xmm12
	paddd	%xmm1, %xmm11
	.loc	5 250 34                        # x264_src/common/common.h:250:34
	psrad	$2, %xmm14
	psrad	$2, %xmm13
	psrad	$2, %xmm12
	psrad	$2, %xmm11
	.loc	5 251 19 is_stmt 1              # x264_src/common/common.h:251:19
	psrad	$16, %xmm10
	psrad	$16, %xmm8
	psrad	$16, %xmm7
	psrad	$16, %xmm5
	.loc	5 251 29 is_stmt 0              # x264_src/common/common.h:251:29
	paddd	%xmm1, %xmm10
	paddd	%xmm1, %xmm8
	paddd	%xmm1, %xmm7
	paddd	%xmm1, %xmm5
	.loc	5 251 34                        # x264_src/common/common.h:251:34
	psrad	$2, %xmm10
	psrad	$2, %xmm8
	psrad	$2, %xmm7
	psrad	$2, %xmm5
	movdqa	400(%rsp), %xmm9                # 16-byte Reload
.Ltmp120:
	.loc	5 202 17 is_stmt 1              # x264_src/common/common.h:202:17
	movdqa	%xmm9, %xmm1
	pcmpgtd	%xmm14, %xmm1
	movdqa	%xmm9, %xmm6
	pcmpgtd	%xmm13, %xmm6
	movdqa	%xmm9, %xmm4
	pcmpgtd	%xmm12, %xmm4
	movdqa	%xmm9, %xmm3
	pcmpgtd	%xmm11, %xmm3
	movdqa	112(%rsp), %xmm15               # 16-byte Reload
	.loc	5 202 14 is_stmt 0              # x264_src/common/common.h:202:14
	movdqa	%xmm15, %xmm2
	pcmpgtd	%xmm14, %xmm2
	pand	%xmm2, %xmm14
	pandn	%xmm15, %xmm2
	por	%xmm14, %xmm2
	movdqa	%xmm15, %xmm14
	pcmpgtd	%xmm13, %xmm14
	pand	%xmm14, %xmm13
	pandn	%xmm15, %xmm14
	por	%xmm13, %xmm14
	movdqa	%xmm15, %xmm13
	pcmpgtd	%xmm12, %xmm13
	pand	%xmm13, %xmm12
	pandn	%xmm15, %xmm13
	por	%xmm12, %xmm13
	movdqa	%xmm15, %xmm12
	pcmpgtd	%xmm11, %xmm12
	pand	%xmm12, %xmm11
	pandn	%xmm15, %xmm12
	por	%xmm11, %xmm12
	movdqa	%xmm9, %xmm11
	pand	%xmm1, %xmm11
	pandn	%xmm2, %xmm1
	por	%xmm11, %xmm1
	movdqa	%xmm9, %xmm11
	pand	%xmm6, %xmm11
	pandn	%xmm14, %xmm6
	por	%xmm11, %xmm6
	movdqa	%xmm9, %xmm11
	pand	%xmm4, %xmm11
	pandn	%xmm13, %xmm4
	por	%xmm11, %xmm4
	pand	%xmm3, %xmm9
	pandn	%xmm12, %xmm3
	por	%xmm9, %xmm3
	movdqa	80(%rsp), %xmm2                 # 16-byte Reload
.Ltmp121:
	.loc	5 202 17                        # x264_src/common/common.h:202:17
	movdqa	%xmm2, %xmm14
	pcmpgtd	%xmm10, %xmm14
	movdqa	%xmm2, %xmm13
	pcmpgtd	%xmm8, %xmm13
	movdqa	%xmm2, %xmm12
	pcmpgtd	%xmm7, %xmm12
	movdqa	%xmm2, %xmm11
	pcmpgtd	%xmm5, %xmm11
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	movdqa	%xmm0, %xmm15
	pcmpgtd	%xmm10, %xmm15
	pand	%xmm15, %xmm10
	pandn	%xmm0, %xmm15
	por	%xmm10, %xmm15
	movdqa	%xmm0, %xmm10
	pcmpgtd	%xmm8, %xmm10
	pand	%xmm10, %xmm8
	pandn	%xmm0, %xmm10
	por	%xmm8, %xmm10
	movdqa	%xmm0, %xmm8
	pcmpgtd	%xmm7, %xmm8
	pand	%xmm8, %xmm7
	pandn	%xmm0, %xmm8
	por	%xmm7, %xmm8
	movdqa	%xmm0, %xmm7
	pcmpgtd	%xmm5, %xmm7
	pand	%xmm7, %xmm5
	pandn	%xmm0, %xmm7
	por	%xmm5, %xmm7
	movdqa	%xmm2, %xmm5
	pand	%xmm14, %xmm5
	pandn	%xmm15, %xmm14
	por	%xmm5, %xmm14
	movdqa	%xmm2, %xmm5
	pand	%xmm13, %xmm5
	pandn	%xmm10, %xmm13
	por	%xmm5, %xmm13
	movdqa	%xmm2, %xmm5
	pand	%xmm12, %xmm5
	pandn	%xmm8, %xmm12
	por	%xmm5, %xmm12
	movdqa	%xmm2, %xmm5
	pand	%xmm11, %xmm5
	pandn	%xmm7, %xmm11
	por	%xmm5, %xmm11
.Ltmp122:
	.loc	5 253 19 is_stmt 1              # x264_src/common/common.h:253:19
	movdqa	%xmm1, %xmm5
	punpckldq	%xmm14, %xmm5           # xmm5 = xmm5[0],xmm14[0],xmm5[1],xmm14[1]
	punpckhdq	%xmm14, %xmm1           # xmm1 = xmm1[2],xmm14[2],xmm1[3],xmm14[3]
	pslld	$16, %xmm1
	psrad	$16, %xmm1
	pslld	$16, %xmm5
	psrad	$16, %xmm5
	packssdw	%xmm1, %xmm5
	movdqu	%xmm5, 672(%rsp,%rsi)
	movdqa	%xmm6, %xmm5
	punpckldq	%xmm13, %xmm5           # xmm5 = xmm5[0],xmm13[0],xmm5[1],xmm13[1]
	punpckhdq	%xmm13, %xmm6           # xmm6 = xmm6[2],xmm13[2],xmm6[3],xmm13[3]
	pslld	$16, %xmm6
	psrad	$16, %xmm6
	pslld	$16, %xmm5
	psrad	$16, %xmm5
	packssdw	%xmm6, %xmm5
	movdqu	%xmm5, 688(%rsp,%rsi)
	movdqa	%xmm4, %xmm5
	punpckldq	%xmm12, %xmm5           # xmm5 = xmm5[0],xmm12[0],xmm5[1],xmm12[1]
	punpckhdq	%xmm12, %xmm4           # xmm4 = xmm4[2],xmm12[2],xmm4[3],xmm12[3]
	pslld	$16, %xmm4
	psrad	$16, %xmm4
	pslld	$16, %xmm5
	psrad	$16, %xmm5
	packssdw	%xmm4, %xmm5
	movdqu	%xmm5, 704(%rsp,%rsi)
	movdqa	%xmm3, %xmm4
	punpckldq	%xmm11, %xmm4           # xmm4 = xmm4[0],xmm11[0],xmm4[1],xmm11[1]
	punpckhdq	%xmm11, %xmm3           # xmm3 = xmm3[2],xmm11[2],xmm3[3],xmm11[3]
	pslld	$16, %xmm3
	psrad	$16, %xmm3
	pslld	$16, %xmm4
	psrad	$16, %xmm4
	packssdw	%xmm3, %xmm4
	movdqu	%xmm4, 720(%rsp,%rsi)
.Ltmp123:
	.loc	5 248 33                        # x264_src/common/common.h:248:33
	addq	$64, %rsi
	cmpq	%rsi, %rdx
	jne	.LBB0_16
.Ltmp124:
# %bb.17:                               # %middle.block
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:dst <- [DW_OP_plus_uconst 672, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:mvc <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:i_mvc <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	5 0 33 is_stmt 0                # x264_src/common/common.h:0:33
	movl	$268435456, 452(%rsp)           # 4-byte Folded Spill
                                        # imm = 0x10000000
	.loc	5 248 5                         # x264_src/common/common.h:248:5
	cmpl	%eax, %ecx
	movdqa	352(%rsp), %xmm4                # 16-byte Reload
	movdqa	240(%rsp), %xmm5                # 16-byte Reload
	je	.LBB0_20
.Ltmp125:
.LBB0_18:                               # %for.body.i.preheader
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:dst <- [DW_OP_plus_uconst 672, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:mvc <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:i_mvc <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	5 0 5                           # x264_src/common/common.h:0:5
	movdqa	.LCPI0_1(%rip), %xmm0           # xmm0 = [2,2,u,u]
.Ltmp126:
	.p2align	4, 0x90
.LBB0_19:                               # %for.body.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:dst <- [DW_OP_plus_uconst 672, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:mvc <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_roundclip:i_mvc <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rcx
	#DEBUG_VALUE: mx <- undef
	#DEBUG_VALUE: my <- undef
	#DEBUG_VALUE: x264_clip3:v <- undef
	#DEBUG_VALUE: x264_clip3:i_min <- undef
	#DEBUG_VALUE: x264_clip3:i_max <- undef
	#DEBUG_VALUE: x264_clip3:v <- undef
	#DEBUG_VALUE: x264_clip3:i_min <- undef
	#DEBUG_VALUE: x264_clip3:i_max <- undef
	.loc	5 250 19 is_stmt 1              # x264_src/common/common.h:250:19
	movd	(%rdi,%rcx,4), %xmm1            # xmm1 = mem[0],zero,zero,zero
	pshuflw	$96, %xmm1, %xmm1               # xmm1 = xmm1[0,0,2,1,4,5,6,7]
	psrad	$16, %xmm1
	.loc	5 250 29 is_stmt 0              # x264_src/common/common.h:250:29
	paddd	%xmm0, %xmm1
	.loc	5 250 34                        # x264_src/common/common.h:250:34
	psrad	$2, %xmm1
.Ltmp127:
	.loc	5 202 17 is_stmt 1              # x264_src/common/common.h:202:17
	movdqa	%xmm4, %xmm2
	pcmpgtd	%xmm1, %xmm2
	.loc	5 202 14 is_stmt 0              # x264_src/common/common.h:202:14
	movdqa	%xmm5, %xmm3
	pcmpgtd	%xmm1, %xmm3
	pand	%xmm3, %xmm1
	pandn	%xmm5, %xmm3
	por	%xmm1, %xmm3
	movdqa	%xmm4, %xmm1
	pand	%xmm2, %xmm1
	pandn	%xmm3, %xmm2
	por	%xmm1, %xmm2
.Ltmp128:
	.loc	5 252 21 is_stmt 1              # x264_src/common/common.h:252:21
	pshuflw	$232, %xmm2, %xmm1              # xmm1 = xmm2[0,2,2,3,4,5,6,7]
	.loc	5 252 19 is_stmt 0              # x264_src/common/common.h:252:19
	movd	%xmm1, 672(%rsp,%rcx,4)
.Ltmp129:
	.loc	5 248 33 is_stmt 1              # x264_src/common/common.h:248:33
	incq	%rcx
.Ltmp130:
	#DEBUG_VALUE: i <- $rcx
	.loc	5 248 23 is_stmt 0              # x264_src/common/common.h:248:23
	cmpq	%rcx, %rax
.Ltmp131:
	.loc	5 248 5                         # x264_src/common/common.h:248:5
	jne	.LBB0_19
.Ltmp132:
.LBB0_20:                               # %for.body167.preheader
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_constu 4, DW_OP_shl, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: i <- 1
	.loc	0 250 19 is_stmt 1              # x264_src/encoder/me.c:250:19
	shll	$4, %r8d
.Ltmp133:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	.loc	0 0 19 is_stmt 0                # x264_src/encoder/me.c:0:19
	movq	264(%rsp), %rax                 # 8-byte Reload
.Ltmp134:
	.loc	0 251 13 is_stmt 1              # x264_src/encoder/me.c:251:13
	leal	1(%rax), %ebx
	movl	$1, %r14d
	jmp	.LBB0_22
.Ltmp135:
	.p2align	4, 0x90
.LBB0_21:                               # %for.inc220
                                        #   in Loop: Header=BB0_22 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	.loc	0 251 42 is_stmt 0              # x264_src/encoder/me.c:251:42
	incq	%r14
.Ltmp136:
	#DEBUG_VALUE: i <- $r14
	.loc	0 251 31                        # x264_src/encoder/me.c:251:31
	cmpq	%r14, %rbx
.Ltmp137:
	.loc	0 251 13                        # x264_src/encoder/me.c:251:13
	je	.LBB0_25
.Ltmp138:
.LBB0_22:                               # %for.body167
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: i <- $r14
	.loc	0 253 21 is_stmt 1              # x264_src/encoder/me.c:253:21
	movl	668(%rsp,%r14,4), %ebp
	testl	%ebp, %ebp
	.loc	0 253 42 is_stmt 0              # x264_src/encoder/me.c:253:42
	je	.LBB0_21
.Ltmp139:
# %bb.23:                               # %land.lhs.true173
                                        #   in Loop: Header=BB0_22 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r14
	.loc	0 0 42                          # x264_src/encoder/me.c:0:42
	movl	32(%rsp), %eax                  # 4-byte Reload
	.loc	0 253 50                        # x264_src/encoder/me.c:253:50
	cmpl	-4(%rdi,%r14,4), %eax
.Ltmp140:
	.loc	0 253 21                        # x264_src/encoder/me.c:253:21
	je	.LBB0_21
.Ltmp141:
# %bb.24:                               # %if.then180
                                        #   in Loop: Header=BB0_22 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r14
	.loc	0 255 30 is_stmt 1              # x264_src/encoder/me.c:255:30
	movswl	%bp, %r15d
.Ltmp142:
	#DEBUG_VALUE: mx <- $r15d
	.loc	0 256 30                        # x264_src/encoder/me.c:256:30
	sarl	$16, %ebp
.Ltmp143:
	#DEBUG_VALUE: my <- $ebp
	.loc	0 0 30 is_stmt 0                # x264_src/encoder/me.c:0:30
	movq	%r13, %rcx
	.loc	0 257 91 is_stmt 1              # x264_src/encoder/me.c:257:91
	movl	%ecx, %eax
	imull	%ebp, %eax
	.loc	0 257 98 is_stmt 0              # x264_src/encoder/me.c:257:98
	addl	%r15d, %eax
	.loc	0 257 80                        # x264_src/encoder/me.c:257:80
	movslq	%eax, %rdx
	addq	136(%rsp), %rdx                 # 8-byte Folded Reload
	movq	56(%rsp), %rdi                  # 8-byte Reload
	.loc	0 257 32                        # x264_src/encoder/me.c:257:32
	movl	$16, %esi
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	104(%rsp), %rax                 # 8-byte Reload
	movl	%r8d, %r12d
.Ltmp144:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	.loc	0 0 32                          # x264_src/encoder/me.c:0:32
	movq	72(%rsp), %r8                   # 8-byte Reload
	.loc	0 257 32                        # x264_src/encoder/me.c:257:32
	callq	*31928(%rax,%r8,8)
.Ltmp145:
	.loc	0 0 32                          # x264_src/encoder/me.c:0:32
	movq	48(%rsp), %rdi                  # 8-byte Reload
	movq	24(%rsp), %r10                  # 8-byte Reload
	movl	%r12d, %r8d
	.loc	0 257 115                       # x264_src/encoder/me.c:257:115
	shll	$2, %r15d
.Ltmp146:
	movslq	%r15d, %rcx
	movq	40(%rsp), %rdx                  # 8-byte Reload
	movzwl	(%rdx,%rcx,2), %ecx
	shll	$2, %ebp
.Ltmp147:
	movslq	%ebp, %rdx
	movzwl	(%r10,%rdx,2), %edx
	addl	%ecx, %edx
	.loc	0 257 113                       # x264_src/encoder/me.c:257:113
	addl	%eax, %edx
.Ltmp148:
	#DEBUG_VALUE: cost <- $edx
	.loc	0 258 34 is_stmt 1              # x264_src/encoder/me.c:258:34
	shll	$4, %edx
.Ltmp149:
	#DEBUG_VALUE: cost <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_plus, DW_OP_stack_value] $edx, $r14
	.loc	0 259 21                        # x264_src/encoder/me.c:259:21
	addl	%r14d, %edx
.Ltmp150:
	cmpl	%r12d, %edx
	cmovll	%edx, %r8d
.Ltmp151:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	.loc	0 0 21 is_stmt 0                # x264_src/encoder/me.c:0:21
	jmp	.LBB0_21
.Ltmp152:
.LBB0_25:                               # %for.cond.cleanup166
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 262 22 is_stmt 1              # x264_src/encoder/me.c:262:22
	movl	%r8d, %eax
	movq	432(%rsp), %r14                 # 8-byte Reload
	movl	%r14d, %edx
	movq	512(%rsp), %rcx                 # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx def $rcx
	andl	$15, %eax
.Ltmp153:
	.loc	0 262 17 is_stmt 0              # x264_src/encoder/me.c:262:17
	je	.LBB0_27
.Ltmp154:
# %bb.26:                               # %if.then225
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 264 42 is_stmt 1              # x264_src/encoder/me.c:264:42
	decl	%eax
	.loc	0 264 23 is_stmt 0              # x264_src/encoder/me.c:264:23
	movswl	672(%rsp,%rax,4), %ecx
.Ltmp155:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $ecx
	.loc	0 265 23 is_stmt 1              # x264_src/encoder/me.c:265:23
	movswl	674(%rsp,%rax,4), %edx
.Ltmp156:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $edx
.LBB0_27:                               # %if.end238
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- 0
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- 268435456
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $ecx
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $edx
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $ecx
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $edx
	.loc	0 0 23 is_stmt 0                # x264_src/encoder/me.c:0:23
	movq	%rcx, 80(%rsp)                  # 8-byte Spill
.Ltmp157:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	movq	%rdx, 112(%rsp)                 # 8-byte Spill
.Ltmp158:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	.loc	0 267 19 is_stmt 1              # x264_src/encoder/me.c:267:19
	sarl	$4, %r8d
.Ltmp159:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	.loc	0 0 19 is_stmt 0                # x264_src/encoder/me.c:0:19
	xorl	%r15d, %r15d
	movq	$0, 544(%rsp)                   # 8-byte Folded Spill
.Ltmp160:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 271 9 is_stmt 1               # x264_src/encoder/me.c:271:9
	cmpl	$0, 32(%rsp)                    # 4-byte Folded Reload
.Ltmp161:
	.loc	0 271 9 is_stmt 0               # x264_src/encoder/me.c:271:9
	jne	.LBB0_28
.Ltmp162:
.LBB0_14:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	104(%rsp), %rbx                 # 8-byte Reload
	movq	40(%rsp), %r12                  # 8-byte Reload
.Ltmp163:
.LBB0_29:                               # %if.end264
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	movq	280(%rsp), %rdx                 # 8-byte Reload
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	movl	%r8d, 128(%rsp)                 # 4-byte Spill
.Ltmp164:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	.loc	0 274 19 is_stmt 1              # x264_src/encoder/me.c:274:19
	movl	16404(%rbx), %eax
	cmpq	$4, %rax
	.loc	0 274 5 is_stmt 0               # x264_src/encoder/me.c:274:5
	ja	.LBB0_96
.Ltmp165:
# %bb.30:                               # %if.end264
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 0 5                           # x264_src/encoder/me.c:0:5
	movq	392(%rsp), %r8                  # 8-byte Reload
	movl	%r8d, %esi
	negl	%esi
	movq	336(%rsp), %r10                 # 8-byte Reload
	movl	%r10d, %ecx
	shll	$16, %ecx
	movq	344(%rsp), %rdi                 # 8-byte Reload
	movzwl	%di, %r9d
	orl	%ecx, %r9d
	movl	%edx, %ecx
	shll	$16, %ecx
	andl	$32767, %esi                    # imm = 0x7FFF
	subl	%ecx, %esi
.Ltmp166:
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- $esi
	movl	%esi, 400(%rsp)                 # 4-byte Spill
	orl	$32768, %r9d                    # imm = 0x8000
.Ltmp167:
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- $r9d
	movl	%r9d, 352(%rsp)                 # 4-byte Spill
	movq	%r15, 440(%rsp)                 # 8-byte Spill
.Ltmp168:
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	.loc	0 274 5                         # x264_src/encoder/me.c:274:5
	jmpq	*.LJTI0_0(,%rax,8)
.Ltmp169:
.LBB0_31:                               # %sw.bb3557
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 0 5                           # x264_src/encoder/me.c:0:5
	movq	80(%rsp), %rsi                  # 8-byte Reload
.Ltmp170:
	.loc	0 574 31 is_stmt 1              # x264_src/encoder/me.c:574:31
	movl	%esi, %eax
	movq	320(%rsp), %rcx                 # 8-byte Reload
	subl	%ecx, %eax
	cmpl	%edx, %eax
	cmovlel	%edx, %eax
.Ltmp171:
	#DEBUG_VALUE: min_x <- $eax
	.loc	0 0 31 is_stmt 0                # x264_src/encoder/me.c:0:31
	movl	%eax, 400(%rsp)                 # 4-byte Spill
.Ltmp172:
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- undef
	movq	112(%rsp), %rdx                 # 8-byte Reload
	.loc	0 575 31 is_stmt 1              # x264_src/encoder/me.c:575:31
	movl	%edx, %r9d
	subl	%ecx, %r9d
	cmpl	%r8d, %r9d
	movl	%r8d, %eax
	movl	%r9d, 240(%rsp)                 # 4-byte Spill
	cmovgl	%r9d, %eax
.Ltmp173:
	#DEBUG_VALUE: min_y <- $eax
	.loc	0 0 31 is_stmt 0                # x264_src/encoder/me.c:0:31
	movl	%eax, 48(%rsp)                  # 4-byte Spill
.Ltmp174:
	#DEBUG_VALUE: min_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mvc <- undef
	.loc	0 576 31 is_stmt 1              # x264_src/encoder/me.c:576:31
	leal	(%rsi,%rcx), %eax
	cmpl	%r10d, %eax
	cmovll	%eax, %r10d
.Ltmp175:
	#DEBUG_VALUE: max_x <- $r10d
	.loc	0 0 31 is_stmt 0                # x264_src/encoder/me.c:0:31
	movq	%r10, 336(%rsp)                 # 8-byte Spill
.Ltmp176:
	#DEBUG_VALUE: max_x <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	.loc	0 577 31 is_stmt 1              # x264_src/encoder/me.c:577:31
	leal	(%rdx,%rcx), %eax
	cmpl	%edi, %eax
	cmovll	%eax, %edi
.Ltmp177:
	#DEBUG_VALUE: max_y <- $edi
	#DEBUG_VALUE: width <- undef
	.loc	0 0 31 is_stmt 0                # x264_src/encoder/me.c:0:31
	movq	%rdi, 344(%rsp)                 # 8-byte Spill
.Ltmp178:
	#DEBUG_VALUE: max_y <- [DW_OP_plus_uconst 344, DW_OP_deref] $rsp
	movq	456(%rsp), %rsi                 # 8-byte Reload
	.loc	0 588 38 is_stmt 1              # x264_src/encoder/me.c:588:38
	movq	112(%rsi), %rbp
.Ltmp179:
	#DEBUG_VALUE: sums_base <- $rbp
	.loc	0 593 28                        # x264_src/encoder/me.c:593:28
	xorl	%eax, %eax
	movq	72(%rsp), %r14                  # 8-byte Reload
	cmpl	$4, %r14d
	setge	%al
.Ltmp180:
	#DEBUG_VALUE: sad_size <- undef
	.loc	0 594 25                        # x264_src/encoder/me.c:594:25
	shll	$3, %eax
	leal	(%rax,%rax,2), %eax
	.loc	0 594 51 is_stmt 0              # x264_src/encoder/me.c:594:51
	movslq	x264_pixel_size+24(%rax), %r12
.Ltmp181:
	#DEBUG_VALUE: delta <- $r12d
	.loc	0 595 30 is_stmt 1              # x264_src/encoder/me.c:595:30
	movq	31176(%rbx), %rcx
.Ltmp182:
	#DEBUG_VALUE: xs <- $rcx
	.loc	0 0 30 is_stmt 0                # x264_src/encoder/me.c:0:30
	movq	%rcx, 352(%rsp)                 # 8-byte Spill
.Ltmp183:
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- undef
	.loc	0 597 77 is_stmt 1              # x264_src/encoder/me.c:597:77
	movslq	25792(%rbx), %rcx
	.loc	0 597 55 is_stmt 0              # x264_src/encoder/me.c:597:55
	movq	x264_lambda_tab@GOTPCREL(%rip), %rdx
	movzbl	(%rdx,%rcx), %ecx
	.loc	0 597 39                        # x264_src/encoder/me.c:597:39
	shll	$5, %ecx
	.loc	0 597 42                        # x264_src/encoder/me.c:597:42
	addq	%rbx, %rcx
	.loc	0 597 85                        # x264_src/encoder/me.c:597:85
	movswl	128(%rsi), %edx
	.loc	0 597 84                        # x264_src/encoder/me.c:597:84
	negl	%edx
	.loc	0 597 94                        # x264_src/encoder/me.c:597:94
	movl	%edx, %esi
	andl	$3, %esi
	.loc	0 597 111                       # x264_src/encoder/me.c:597:111
	sarl	$2, %edx
	.loc	0 597 98                        # x264_src/encoder/me.c:597:98
	movslq	%edx, %rdx
	addq	%rdx, %rdx
	addq	4272(%rcx,%rsi,8), %rdx
.Ltmp184:
	#DEBUG_VALUE: cost_fpel_mvx <- $rdx
	.loc	0 0 98                          # x264_src/encoder/me.c:0:98
	movq	%rdx, 32(%rsp)                  # 8-byte Spill
.Ltmp185:
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmv <- undef
	movq	56(%rsp), %rsi                  # 8-byte Reload
	.loc	0 599 59 is_stmt 1              # x264_src/encoder/me.c:599:59
	leaq	(%rsi,%r12), %rdx
	.loc	0 600 29                        # x264_src/encoder/me.c:600:29
	movq	%r12, %r8
	shlq	$4, %r8
	.loc	0 600 23 is_stmt 0              # x264_src/encoder/me.c:600:23
	leaq	(%rsi,%r8), %rcx
	.loc	0 600 55                        # x264_src/encoder/me.c:600:55
	addq	%rdx, %r8
	leaq	608(%rsp), %rdi
	.loc	0 599 13 is_stmt 1              # x264_src/encoder/me.c:599:13
	movq	%rdi, (%rsp)
	movl	$x264_me_search_ref.zero, %edi
	movl	$16, %r9d
	callq	*32320(%rax,%rbx)
.Ltmp186:
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/me.c:0:13
	movq	%r12, 264(%rsp)                 # 8-byte Spill
.Ltmp187:
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- undef
	.loc	0 594 51 is_stmt 1              # x264_src/encoder/me.c:594:51
	cmpq	$4, %r12
	.loc	0 602 17                        # x264_src/encoder/me.c:602:17
	jne	.LBB0_47
.Ltmp188:
# %bb.32:                               # %if.then3634
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_x <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_y <- [DW_OP_plus_uconst 344, DW_OP_deref] $rsp
	#DEBUG_VALUE: sums_base <- $rbp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 603 43                        # x264_src/encoder/me.c:603:43
	movq	14680(%rbx), %rax
	.loc	0 603 40 is_stmt 0              # x264_src/encoder/me.c:603:40
	movslq	128(%rax), %rax
	.loc	0 603 60                        # x264_src/encoder/me.c:603:60
	addq	$64, %rax
	.loc	0 603 37                        # x264_src/encoder/me.c:603:37
	imulq	%r13, %rax
	.loc	0 603 27                        # x264_src/encoder/me.c:603:27
	leaq	(,%rax,2), %rdx
	addq	%rbp, %rdx
.Ltmp189:
	#DEBUG_VALUE: sums_base <- $rdx
	.loc	0 0 27                          # x264_src/encoder/me.c:0:27
	movl	128(%rsp), %r8d                 # 4-byte Reload
	jmp	.LBB0_48
.Ltmp190:
.LBB0_33:                               # %sw.bb1041
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: cross_start <- 1
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	movq	512(%rsp), %r15                 # 8-byte Reload
.Ltmp191:
	.loc	0 387 13 is_stmt 1              # x264_src/encoder/me.c:387:13
	movslq	%r15d, %rax
	addq	136(%rsp), %rax                 # 8-byte Folded Reload
	movl	%r14d, %ecx
	movq	%r13, %r8
	imull	%r8d, %ecx
	movslq	%ecx, %rdi
	leaq	(%rax,%rdi), %rdx
.Ltmp192:
	#DEBUG_VALUE: pix_base <- $rdx
	movq	%rdx, %rsi
	subq	%r13, %rsi
	addq	%r13, %rdx
.Ltmp193:
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/me.c:0:13
	movq	%r13, %r9
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	leaq	(%rdi,%rax), %rcx
	decq	%rcx
	leaq	1(%rdi,%rax), %r8
	leaq	160(%rsp), %rax
	movq	%rax, (%rsp)
	movq	56(%rsp), %rdi                  # 8-byte Reload
                                        # kill: def $r9d killed $r9d killed $r9
	movq	72(%rsp), %rax                  # 8-byte Reload
	callq	*32040(%rbx,%rax,8)
.Ltmp194:
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	24(%rsp), %r9                   # 8-byte Reload
	movl	232(%rsp), %eax                 # 4-byte Reload
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	andl	$-4, %eax
	cltq
	movzwl	(%r12,%rax,2), %ecx
	leal	-1(%r14), %edx
	leal	-4(,%r14,4), %esi
	movslq	%esi, %rsi
	movzwl	(%r9,%rsi,2), %esi
	addl	%ecx, %esi
	addl	160(%rsp), %esi
	movl	%esi, 160(%rsp)
	movzwl	(%r12,%rax,2), %eax
	leal	4(,%r14,4), %ecx
	movslq	%ecx, %rcx
	movzwl	(%r9,%rcx,2), %ecx
	addl	%eax, %ecx
	addl	164(%rsp), %ecx
	movl	128(%rsp), %r8d                 # 4-byte Reload
.Ltmp195:
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	cmpl	%r8d, %esi
.Ltmp196:
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	movl	%r8d, %eax
	cmovll	%esi, %eax
	leal	1(%r14), %edi
	movq	%r12, %r11
	movq	112(%rsp), %rbp                 # 8-byte Reload
	cmovll	%edx, %ebp
.Ltmp197:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- undef
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	cmpl	%eax, %ecx
.Ltmp198:
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	cmovll	%ecx, %eax
.Ltmp199:
	cmovll	%edi, %ebp
.Ltmp200:
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	80(%rsp), %rdi                  # 8-byte Reload
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	cmovll	%r15d, %edi
.Ltmp201:
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	cmpl	%r8d, %esi
.Ltmp202:
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	movl	%ecx, 164(%rsp)
	leal	-4(,%r15,4), %ecx
	movslq	%ecx, %rcx
	movzwl	(%r12,%rcx,2), %ecx
	cmovll	%r15d, %edi
.Ltmp203:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $edi
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	272(%rsp), %edx                 # 4-byte Reload
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	andl	$-4, %edx
	movslq	%edx, %rdx
	movzwl	(%r9,%rdx,2), %esi
	addl	%ecx, %esi
	addl	168(%rsp), %esi
	movl	%esi, 168(%rsp)
	leal	4(,%r15,4), %ecx
	movslq	%ecx, %rcx
	movzwl	(%r12,%rcx,2), %ecx
	movzwl	(%r9,%rdx,2), %edx
	addl	%ecx, %edx
	addl	172(%rsp), %edx
.Ltmp204:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	cmpl	%eax, %esi
.Ltmp205:
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	movl	%eax, %r10d
	cmovll	%esi, %r10d
.Ltmp206:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r10d
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	cmpl	%r10d, %edx
.Ltmp207:
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	cmovll	%r14d, %ebp
.Ltmp208:
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	cmpl	%eax, %esi
.Ltmp209:
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	cmovll	%r14d, %ebp
.Ltmp210:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	leal	-1(%r15), %ecx
.Ltmp211:
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	cmpl	%eax, %esi
.Ltmp212:
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	cmovgel	%edi, %ecx
.Ltmp213:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $ecx
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	cmpl	%r10d, %edx
.Ltmp214:
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	cmovll	%edx, %r10d
.Ltmp215:
	leal	1(%r15), %r12d
	cmovgel	%ecx, %r12d
.Ltmp216:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r12d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	64(%rsp), %rcx                  # 8-byte Reload
	.loc	0 387 13                        # x264_src/encoder/me.c:387:13
	negq	%rcx
	movl	%edx, 172(%rsp)
.Ltmp217:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r10d
	.loc	0 388 21 is_stmt 1              # x264_src/encoder/me.c:388:21
	movl	%r14d, %eax
	orl	%r15d, %eax
	movq	%rcx, 464(%rsp)                 # 8-byte Spill
.Ltmp218:
	.loc	0 388 17 is_stmt 0              # x264_src/encoder/me.c:388:17
	je	.LBB0_141
.Ltmp219:
# %bb.34:                               # %if.then1155
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r12d
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r10d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: cross_start <- 1
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omx <- 0
	#DEBUG_VALUE: x264_me_search_ref:omy <- 0
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	136(%rsp), %rax                 # 8-byte Reload
.Ltmp220:
	.loc	0 389 17 is_stmt 1              # x264_src/encoder/me.c:389:17
	leaq	(%rax,%rcx), %rsi
	movq	%r13, %r9
	leaq	(%rax,%r13), %rdx
	leaq	-1(%rax), %rcx
	leaq	1(%rax), %r8
	leaq	160(%rsp), %rax
	movq	%rax, (%rsp)
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movl	%r10d, 416(%rsp)                # 4-byte Spill
.Ltmp221:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 416, DW_OP_deref] $rsp
                                        # kill: def $r9d killed $r9d killed $r9
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	movq	72(%rsp), %rax                  # 8-byte Reload
	movq	%r11, %r15
	.loc	0 389 17                        # x264_src/encoder/me.c:389:17
	callq	*32040(%rbx,%rax,8)
.Ltmp222:
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	24(%rsp), %r9                   # 8-byte Reload
	.loc	0 389 17                        # x264_src/encoder/me.c:389:17
	movzwl	(%r15), %eax
	movzwl	-8(%r9), %edi
	addl	%eax, %edi
	addl	160(%rsp), %edi
	movl	%edi, 160(%rsp)
	movzwl	(%r15), %eax
	movzwl	8(%r9), %r8d
	addl	%eax, %r8d
	addl	164(%rsp), %r8d
	movl	416(%rsp), %eax                 # 4-byte Reload
.Ltmp223:
	.loc	0 389 17                        # x264_src/encoder/me.c:389:17
	cmpl	%eax, %edi
.Ltmp224:
	.loc	0 389 17                        # x264_src/encoder/me.c:389:17
	movl	%eax, %edx
	movl	%eax, %r10d
	cmovll	%edi, %edx
	movl	$-1, %ecx
	cmovll	%ecx, %ebp
.Ltmp225:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	xorl	%esi, %esi
.Ltmp226:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- undef
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edx
	.loc	0 389 17                        # x264_src/encoder/me.c:389:17
	cmpl	%edx, %r8d
.Ltmp227:
	.loc	0 389 17                        # x264_src/encoder/me.c:389:17
	cmovll	%r8d, %edx
.Ltmp228:
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movl	$1, %eax
	.loc	0 389 17                        # x264_src/encoder/me.c:389:17
	cmovll	%eax, %ebp
.Ltmp229:
	cmovll	%esi, %r12d
.Ltmp230:
	.loc	0 389 17                        # x264_src/encoder/me.c:389:17
	cmpl	%r10d, %edi
.Ltmp231:
	.loc	0 389 17                        # x264_src/encoder/me.c:389:17
	movl	%r8d, 164(%rsp)
	movzwl	-8(%r15), %edi
	movzwl	(%r9), %r8d
	cmovll	%esi, %r12d
.Ltmp232:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r12d
	addl	%edi, %r8d
	addl	168(%rsp), %r8d
	movl	%r8d, 168(%rsp)
	movzwl	8(%r15), %edi
	movzwl	(%r9), %r9d
	addl	%edi, %r9d
	addl	172(%rsp), %r9d
.Ltmp233:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edx
	.loc	0 389 17                        # x264_src/encoder/me.c:389:17
	cmpl	%edx, %r8d
.Ltmp234:
	.loc	0 389 17                        # x264_src/encoder/me.c:389:17
	movl	%edx, %r10d
	cmovll	%r8d, %r10d
.Ltmp235:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r10d
	.loc	0 389 17                        # x264_src/encoder/me.c:389:17
	cmpl	%r10d, %r9d
.Ltmp236:
	.loc	0 389 17                        # x264_src/encoder/me.c:389:17
	cmovll	%esi, %ebp
.Ltmp237:
	.loc	0 389 17                        # x264_src/encoder/me.c:389:17
	cmpl	%edx, %r8d
.Ltmp238:
	.loc	0 389 17                        # x264_src/encoder/me.c:389:17
	cmovll	%ecx, %r12d
.Ltmp239:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r12d
	cmovll	%esi, %ebp
.Ltmp240:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	%rbp, 112(%rsp)                 # 8-byte Spill
.Ltmp241:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	.loc	0 389 17                        # x264_src/encoder/me.c:389:17
	cmpl	%r10d, %r9d
.Ltmp242:
	.loc	0 389 17                        # x264_src/encoder/me.c:389:17
	movl	%r9d, 172(%rsp)
	cmovll	%r9d, %r10d
.Ltmp243:
	cmovll	%eax, %r12d
.Ltmp244:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r12d
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r10d
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	%r12, 80(%rsp)                  # 8-byte Spill
.Ltmp245:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	movq	264(%rsp), %r8                  # 8-byte Reload
.Ltmp246:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r10d
	.loc	0 391 25 is_stmt 1              # x264_src/encoder/me.c:391:25
	cmpl	$6, 72(%rsp)                    # 4-byte Folded Reload
	movq	336(%rsp), %r12                 # 8-byte Reload
.Ltmp247:
	.loc	0 391 17 is_stmt 0              # x264_src/encoder/me.c:391:17
	jne	.LBB0_142
.Ltmp248:
.LBB0_35:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r10d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: cross_start <- 1
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movl	%r10d, %ebp
.Ltmp249:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	.loc	0 391 17                        # x264_src/encoder/me.c:391:17
	jmp	.LBB0_41
.Ltmp250:
.LBB0_36:                               # %sw.bb
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 279 19 is_stmt 1              # x264_src/encoder/me.c:279:19
	shll	$4, 128(%rsp)                   # 4-byte Folded Spill
.Ltmp251:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- undef
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	.loc	0 0 19 is_stmt 0                # x264_src/encoder/me.c:0:19
	movq	%r13, %rbx
	negq	%rbx
	leaq	160(%rsp), %r14
	movq	112(%rsp), %rbp                 # 8-byte Reload
	movq	80(%rsp), %r12                  # 8-byte Reload
.Ltmp252:
	.p2align	4, 0x90
.LBB0_37:                               # %do.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r12d
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r12d
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	.loc	0 283 17 is_stmt 1              # x264_src/encoder/me.c:283:17
	movslq	%r12d, %r15
	movq	136(%rsp), %rax                 # 8-byte Reload
	addq	%r15, %rax
	movl	%ebp, %ecx
	movq	%r13, %r9
	imull	%r9d, %ecx
	movslq	%ecx, %rdi
	leaq	(%rax,%rdi), %rdx
.Ltmp253:
	#DEBUG_VALUE: pix_base <- $rdx
	leaq	(%rdx,%rbx), %rsi
	addq	%r13, %rdx
.Ltmp254:
	leaq	(%rdi,%rax), %rcx
	decq	%rcx
	leaq	1(%rdi,%rax), %r8
	movq	%r14, (%rsp)
	movq	56(%rsp), %rdi                  # 8-byte Reload
                                        # kill: def $r9d killed $r9d killed $r9
	movq	104(%rsp), %rax                 # 8-byte Reload
	movq	72(%rsp), %r10                  # 8-byte Reload
	callq	*32040(%rax,%r10,8)
.Ltmp255:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	movq	24(%rsp), %r10                  # 8-byte Reload
	.loc	0 283 17                        # x264_src/encoder/me.c:283:17
	leal	(,%r15,4), %eax
	movslq	%eax, %rcx
	movq	40(%rsp), %r8                   # 8-byte Reload
	movzwl	(%r8,%rcx,2), %edx
	leal	(,%rbp,4), %esi
	leal	-4(,%rbp,4), %eax
	cltq
	movzwl	(%r10,%rax,2), %eax
	addl	%edx, %eax
	addl	160(%rsp), %eax
	movl	%eax, 160(%rsp)
	movzwl	(%r8,%rcx,2), %edx
	leal	4(,%rbp,4), %ecx
	movslq	%ecx, %rcx
	movzwl	(%r10,%rcx,2), %ecx
	addl	%edx, %ecx
	addl	164(%rsp), %ecx
	movl	%ecx, 164(%rsp)
	leal	-4(,%r15,4), %edx
	movslq	%edx, %rdx
	movzwl	(%r8,%rdx,2), %edi
	movslq	%esi, %rsi
	movzwl	(%r10,%rsi,2), %edx
	addl	%edi, %edx
	addl	168(%rsp), %edx
	movl	%edx, 168(%rsp)
	leal	4(,%r15,4), %edi
	movslq	%edi, %rdi
	movzwl	(%r8,%rdi,2), %edi
	movzwl	(%r10,%rsi,2), %esi
	addl	%edi, %esi
	addl	172(%rsp), %esi
.Ltmp256:
	.loc	0 284 17 is_stmt 1              # x264_src/encoder/me.c:284:17
	shll	$4, %eax
	incl	%eax
	movl	128(%rsp), %edi                 # 4-byte Reload
.Ltmp257:
	.loc	0 284 17 is_stmt 0              # x264_src/encoder/me.c:284:17
	cmpl	%edi, %eax
	cmovgel	%edi, %eax
.Ltmp258:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	.loc	0 285 17 is_stmt 1              # x264_src/encoder/me.c:285:17
	shll	$4, %ecx
	orl	$3, %ecx
.Ltmp259:
	.loc	0 285 17 is_stmt 0              # x264_src/encoder/me.c:285:17
	cmpl	%eax, %ecx
	cmovgel	%eax, %ecx
.Ltmp260:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ecx
	.loc	0 286 17 is_stmt 1              # x264_src/encoder/me.c:286:17
	shll	$4, %edx
	orl	$4, %edx
.Ltmp261:
	.loc	0 286 17 is_stmt 0              # x264_src/encoder/me.c:286:17
	cmpl	%ecx, %edx
	cmovgel	%ecx, %edx
.Ltmp262:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edx
	.loc	0 283 17 is_stmt 1              # x264_src/encoder/me.c:283:17
	movl	%esi, 172(%rsp)
.Ltmp263:
	.loc	0 287 17                        # x264_src/encoder/me.c:287:17
	shll	$4, %esi
	orl	$12, %esi
.Ltmp264:
	.loc	0 287 17 is_stmt 0              # x264_src/encoder/me.c:287:17
	cmpl	%edx, %esi
	cmovgel	%edx, %esi
.Ltmp265:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $esi
	.loc	0 288 28 is_stmt 1              # x264_src/encoder/me.c:288:28
	testb	$15, %sil
.Ltmp266:
	.loc	0 288 21 is_stmt 0              # x264_src/encoder/me.c:288:21
	je	.LBB0_146
.Ltmp267:
# %bb.38:                               # %if.end388
                                        #   in Loop: Header=BB0_37 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r12d
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $esi
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	.loc	0 290 30 is_stmt 1              # x264_src/encoder/me.c:290:30
	movl	%esi, %eax
	shll	$28, %eax
	.loc	0 290 35 is_stmt 0              # x264_src/encoder/me.c:290:35
	sarl	$30, %eax
	.loc	0 290 21                        # x264_src/encoder/me.c:290:21
	subl	%eax, %r12d
.Ltmp268:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r12d
	.loc	0 291 35 is_stmt 1              # x264_src/encoder/me.c:291:35
	movl	%esi, %eax
	shll	$30, %eax
	sarl	$30, %eax
	.loc	0 291 21 is_stmt 0              # x264_src/encoder/me.c:291:21
	subl	%eax, %ebp
.Ltmp269:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	.loc	0 292 23 is_stmt 1              # x264_src/encoder/me.c:292:23
	andl	$-16, %esi
.Ltmp270:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $esi
	.loc	0 0 23 is_stmt 0                # x264_src/encoder/me.c:0:23
	movl	%esi, 128(%rsp)                 # 4-byte Spill
.Ltmp271:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	movq	320(%rsp), %rax                 # 8-byte Reload
.Ltmp272:
	.loc	0 293 22 is_stmt 1              # x264_src/encoder/me.c:293:22
	decl	%eax
.Ltmp273:
	#DEBUG_VALUE: i <- $eax
	.loc	0 0 22 is_stmt 0                # x264_src/encoder/me.c:0:22
	movq	%rax, 320(%rsp)                 # 8-byte Spill
.Ltmp274:
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	.loc	0 293 26                        # x264_src/encoder/me.c:293:26
	je	.LBB0_147
.Ltmp275:
# %bb.39:                               # %land.rhs
                                        #   in Loop: Header=BB0_37 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r12d
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	.loc	0 293 29                        # x264_src/encoder/me.c:293:29
	movl	%r12d, %eax
	shll	$16, %eax
	movl	%ebp, %ecx
	andl	$32767, %ecx                    # imm = 0x7FFF
	orl	%eax, %ecx
	movl	352(%rsp), %eax                 # 4-byte Reload
	subl	%ecx, %eax
	addl	400(%rsp), %ecx                 # 4-byte Folded Reload
	orl	%eax, %ecx
	testl	$-2147467264, %ecx              # imm = 0x80004000
.Ltmp276:
	.loc	0 293 13                        # x264_src/encoder/me.c:293:13
	je	.LBB0_37
	jmp	.LBB0_147
.Ltmp277:
.LBB0_40:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	128(%rsp), %ebp                 # 4-byte Reload
.Ltmp278:
.LBB0_41:                               # %me_hex2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	#DEBUG_LABEL: me_hex2
	.loc	0 321 13 is_stmt 1              # x264_src/encoder/me.c:321:13
	movslq	80(%rsp), %r14                  # 4-byte Folded Reload
	movq	136(%rsp), %rax                 # 8-byte Reload
	leaq	(%rax,%r14), %r15
	movl	%r13d, %eax
	imull	112(%rsp), %eax                 # 4-byte Folded Reload
	movslq	%eax, %r12
	leaq	(%r15,%r12), %rax
.Ltmp279:
	#DEBUG_VALUE: pix_base <- $rax
	leaq	(%r12,%r15), %rsi
	addq	$-2, %rsi
	leaq	-1(%r12,%r15), %rcx
	movq	%rcx, 48(%rsp)                  # 8-byte Spill
	movq	64(%rsp), %rcx                  # 8-byte Reload
	leaq	-1(%rax,%rcx,2), %rdx
	leaq	1(%r12,%r15), %rcx
	movq	%rcx, 240(%rsp)                 # 8-byte Spill
	movq	64(%rsp), %rcx                  # 8-byte Reload
	leaq	1(%rax,%rcx,2), %rcx
	leaq	160(%rsp), %r9
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movq	64(%rsp), %r8                   # 8-byte Reload
                                        # kill: def $r8d killed $r8d killed $r8
	movq	72(%rsp), %r13                  # 8-byte Reload
	callq	*31984(%rbx,%r13,8)
.Ltmp280:
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/me.c:0:13
	movq	%r13, %r11
	movq	%rbx, %r10
	.loc	0 321 13                        # x264_src/encoder/me.c:321:13
	leal	-8(,%r14,4), %eax
	cltq
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movzwl	(%rcx,%rax,2), %eax
	movq	112(%rsp), %rbx                 # 8-byte Reload
	leal	(,%rbx,4), %ecx
	movslq	%ecx, %rdx
	movq	%rdx, 288(%rsp)                 # 8-byte Spill
	movq	24(%rsp), %rcx                  # 8-byte Reload
	movzwl	(%rcx,%rdx,2), %ecx
	addl	%eax, %ecx
	addl	%ecx, 160(%rsp)
	leal	-4(,%r14,4), %eax
	movslq	%eax, %rcx
	movq	%rcx, 32(%rsp)                  # 8-byte Spill
	movq	40(%rsp), %rax                  # 8-byte Reload
	movzwl	(%rax,%rcx,2), %eax
	leal	8(,%rbx,4), %ecx
	movslq	%ecx, %rcx
	movq	24(%rsp), %rdx                  # 8-byte Reload
	movzwl	(%rdx,%rcx,2), %edx
	addl	%eax, %edx
	addl	%edx, 164(%rsp)
	leal	4(,%r14,4), %eax
	movslq	%eax, %rdx
	movq	%rdx, 152(%rsp)                 # 8-byte Spill
	movq	40(%rsp), %rax                  # 8-byte Reload
	movzwl	(%rax,%rdx,2), %eax
	movq	24(%rsp), %rdx                  # 8-byte Reload
	movzwl	(%rdx,%rcx,2), %ecx
	addl	%eax, %ecx
	addl	%ecx, 168(%rsp)
.Ltmp281:
	#DEBUG_VALUE: pix_base <- undef
	.loc	0 322 13 is_stmt 1              # x264_src/encoder/me.c:322:13
	leaq	(%r12,%r15), %rsi
	addq	$2, %rsi
	movq	64(%rsp), %rax                  # 8-byte Reload
	addq	%rax, %rax
	movq	240(%rsp), %rdx                 # 8-byte Reload
	subq	%rax, %rdx
	movq	48(%rsp), %rcx                  # 8-byte Reload
	subq	%rax, %rcx
	leaq	172(%rsp), %r9
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movq	40(%rsp), %r12                  # 8-byte Reload
	movq	64(%rsp), %r13                  # 8-byte Reload
	movq	24(%rsp), %r15                  # 8-byte Reload
	movl	%r13d, %r8d
	callq	*31984(%r10,%r11,8)
.Ltmp282:
	leal	8(,%r14,4), %eax
	movq	%rbx, %r14
	cltq
	movzwl	(%r12,%rax,2), %ecx
	movq	288(%rsp), %rax                 # 8-byte Reload
	movzwl	(%r15,%rax,2), %eax
	addl	%ecx, %eax
	addl	172(%rsp), %eax
	movl	%eax, 172(%rsp)
	movq	152(%rsp), %rcx                 # 8-byte Reload
	movzwl	(%r12,%rcx,2), %edx
	leal	-8(,%rbx,4), %ecx
	movslq	%ecx, %rsi
	movzwl	(%r15,%rsi,2), %ecx
	addl	%edx, %ecx
	addl	176(%rsp), %ecx
	movl	%ecx, 176(%rsp)
	movq	32(%rsp), %rdx                  # 8-byte Reload
	movzwl	(%r12,%rdx,2), %edi
	movzwl	(%r15,%rsi,2), %edx
	addl	%edi, %edx
	addl	180(%rsp), %edx
	movl	%edx, 180(%rsp)
.Ltmp283:
	.loc	0 323 19                        # x264_src/encoder/me.c:323:19
	shll	$3, %ebp
.Ltmp284:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	.loc	0 324 13                        # x264_src/encoder/me.c:324:13
	movl	160(%rsp), %esi
.Ltmp285:
	.loc	0 325 13                        # x264_src/encoder/me.c:325:13
	movl	164(%rsp), %edi
.Ltmp286:
	.loc	0 324 13                        # x264_src/encoder/me.c:324:13
	leal	2(,%rsi,8), %esi
.Ltmp287:
	.loc	0 324 13 is_stmt 0              # x264_src/encoder/me.c:324:13
	cmpl	%ebp, %esi
	cmovll	%esi, %ebp
.Ltmp288:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	.loc	0 325 13 is_stmt 1              # x264_src/encoder/me.c:325:13
	leal	3(,%rdi,8), %esi
.Ltmp289:
	.loc	0 325 13 is_stmt 0              # x264_src/encoder/me.c:325:13
	cmpl	%ebp, %esi
	cmovll	%esi, %ebp
.Ltmp290:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	.loc	0 326 13 is_stmt 1              # x264_src/encoder/me.c:326:13
	movl	168(%rsp), %esi
	leal	4(,%rsi,8), %esi
.Ltmp291:
	.loc	0 326 13 is_stmt 0              # x264_src/encoder/me.c:326:13
	cmpl	%ebp, %esi
	cmovll	%esi, %ebp
.Ltmp292:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	.loc	0 327 13 is_stmt 1              # x264_src/encoder/me.c:327:13
	leal	5(,%rax,8), %eax
.Ltmp293:
	.loc	0 327 13 is_stmt 0              # x264_src/encoder/me.c:327:13
	cmpl	%ebp, %eax
	cmovll	%eax, %ebp
.Ltmp294:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	.loc	0 328 13 is_stmt 1              # x264_src/encoder/me.c:328:13
	leal	6(,%rcx,8), %eax
.Ltmp295:
	.loc	0 328 13 is_stmt 0              # x264_src/encoder/me.c:328:13
	cmpl	%ebp, %eax
	cmovll	%eax, %ebp
.Ltmp296:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	.loc	0 329 13 is_stmt 1              # x264_src/encoder/me.c:329:13
	leal	7(,%rdx,8), %eax
.Ltmp297:
	.loc	0 329 13 is_stmt 0              # x264_src/encoder/me.c:329:13
	cmpl	%ebp, %eax
	cmovll	%eax, %ebp
.Ltmp298:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	.loc	0 331 22 is_stmt 1              # x264_src/encoder/me.c:331:22
	movl	%ebp, %eax
	andl	$7, %eax
	movl	%ebp, 128(%rsp)                 # 4-byte Spill
.Ltmp299:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	.loc	0 331 17 is_stmt 0              # x264_src/encoder/me.c:331:17
	je	.LBB0_97
.Ltmp300:
# %bb.42:                               # %if.then603
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: dir <- [DW_OP_constu 2, DW_OP_minus, DW_OP_stack_value] $eax
	.loc	0 334 32 is_stmt 1              # x264_src/encoder/me.c:334:32
	leal	-1(%rax), %edx
	.loc	0 334 24 is_stmt 0              # x264_src/encoder/me.c:334:24
	movsbl	hex2(%rdx,%rdx), %ecx
	movq	80(%rsp), %r11                  # 8-byte Reload
	.loc	0 334 21                        # x264_src/encoder/me.c:334:21
	addl	%ecx, %r11d
.Ltmp301:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r11d
	.loc	0 335 24 is_stmt 1              # x264_src/encoder/me.c:335:24
	movsbl	hex2+1(%rdx,%rdx), %edx
	.loc	0 335 21 is_stmt 0              # x264_src/encoder/me.c:335:21
	addl	%edx, %r14d
.Ltmp302:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r14d
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	320(%rsp), %r9                  # 8-byte Reload
.Ltmp303:
	.loc	0 338 41 is_stmt 1              # x264_src/encoder/me.c:338:41
	sarl	%r9d
.Ltmp304:
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r9d
	.loc	0 338 53 is_stmt 0              # x264_src/encoder/me.c:338:53
	cmpl	$2, %r9d
	.loc	0 338 57                        # x264_src/encoder/me.c:338:57
	jl	.LBB0_166
.Ltmp305:
# %bb.43:                               # %land.rhs624.preheader
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r11d
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: dir <- [DW_OP_constu 2, DW_OP_minus, DW_OP_stack_value] $eax
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r9d
	.loc	0 333 36 is_stmt 1              # x264_src/encoder/me.c:333:36
	addl	$-2, %eax
.Ltmp306:
	#DEBUG_VALUE: dir <- $eax
	.loc	0 338 17                        # x264_src/encoder/me.c:338:17
	incl	%r9d
.Ltmp307:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	movq	136(%rsp), %r8                  # 8-byte Reload
.Ltmp308:
	.p2align	4, 0x90
.LBB0_44:                               # %land.rhs624
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r11d
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: dir <- $eax
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r11d
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: dir <- $eax
	.loc	0 338 60                        # x264_src/encoder/me.c:338:60
	movl	%r11d, %esi
	shll	$16, %esi
	movl	%r14d, %edi
	andl	$32767, %edi                    # imm = 0x7FFF
	orl	%esi, %edi
	movl	352(%rsp), %esi                 # 4-byte Reload
	subl	%edi, %esi
	addl	400(%rsp), %edi                 # 4-byte Folded Reload
	orl	%esi, %edi
	testl	$-2147467264, %edi              # imm = 0x80004000
.Ltmp309:
	.loc	0 338 17                        # x264_src/encoder/me.c:338:17
	jne	.LBB0_167
.Ltmp310:
# %bb.45:                               # %for.body639
                                        #   in Loop: Header=BB0_44 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r11d
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: dir <- $eax
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	%r9, 320(%rsp)                  # 8-byte Spill
.Ltmp311:
	.loc	0 340 21 is_stmt 1              # x264_src/encoder/me.c:340:21
	movslq	%r11d, %rsi
	addq	%r8, %rsi
	movl	%r14d, %edi
	imull	%r13d, %edi
	movslq	%edi, %rdi
	addq	%rsi, %rdi
.Ltmp312:
	#DEBUG_VALUE: pix_base <- $rdi
	movslq	%eax, %r9
	movsbl	hex2(%r9,%r9), %eax
.Ltmp313:
	movslq	%eax, %r12
	leaq	(%rdi,%r12), %rax
	movq	%r13, %r8
	movsbl	hex2+1(%r9,%r9), %r13d
	movl	%r8d, %esi
	imull	%r13d, %esi
	movslq	%esi, %rsi
	addq	%rax, %rsi
	movsbq	%cl, %rax
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	addq	%rdi, %rax
	movsbl	%dl, %ebp
	movl	%r8d, %ecx
	imull	%ebp, %ecx
	movslq	%ecx, %rdx
	addq	%rax, %rdx
	movq	%r9, 112(%rsp)                  # 8-byte Spill
	leal	2(%r9), %eax
	movsbl	hex2(%rax,%rax), %ecx
	movslq	%ecx, %r15
	addq	%r15, %rdi
.Ltmp314:
	.loc	0 0 21 is_stmt 0                # x264_src/encoder/me.c:0:21
	movq	%r11, 80(%rsp)                  # 8-byte Spill
.Ltmp315:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	.loc	0 340 21                        # x264_src/encoder/me.c:340:21
	movsbl	hex2+1(%rax,%rax), %ebx
	movl	%r8d, %eax
	imull	%ebx, %eax
	movslq	%eax, %rcx
	addq	%rdi, %rcx
	movq	56(%rsp), %rdi                  # 8-byte Reload
                                        # kill: def $r8d killed $r8d killed $r8
	leaq	160(%rsp), %r9
	movq	104(%rsp), %rax                 # 8-byte Reload
	movq	72(%rsp), %r10                  # 8-byte Reload
	callq	*31984(%rax,%r10,8)
.Ltmp316:
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	80(%rsp), %r11                  # 8-byte Reload
	.loc	0 340 21                        # x264_src/encoder/me.c:340:21
	addl	%r11d, %r12d
	shll	$2, %r12d
	movslq	%r12d, %rax
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movzwl	(%rcx,%rax,2), %ecx
	addl	%r14d, %r13d
	shll	$2, %r13d
	movslq	%r13d, %rax
	movq	24(%rsp), %rdi                  # 8-byte Reload
	movzwl	(%rdi,%rax,2), %eax
	addl	%ecx, %eax
	addl	160(%rsp), %eax
	movl	%eax, 160(%rsp)
	movsbl	32(%rsp), %ecx                  # 1-byte Folded Reload
	addl	%r11d, %ecx
	shll	$2, %ecx
	movslq	%ecx, %rcx
	movq	40(%rsp), %rdx                  # 8-byte Reload
	movzwl	(%rdx,%rcx,2), %edx
	addl	%r14d, %ebp
	shll	$2, %ebp
	movslq	%ebp, %rcx
	movzwl	(%rdi,%rcx,2), %ecx
	addl	%edx, %ecx
	addl	164(%rsp), %ecx
	movl	%ecx, 164(%rsp)
	addl	%r11d, %r15d
	shll	$2, %r15d
	movslq	%r15d, %rdx
	movq	40(%rsp), %rsi                  # 8-byte Reload
	movzwl	(%rsi,%rdx,2), %edx
	addl	%r14d, %ebx
	shll	$2, %ebx
	movslq	%ebx, %rsi
	movzwl	(%rdi,%rsi,2), %esi
	addl	%edx, %esi
	addl	168(%rsp), %esi
	movl	%esi, 168(%rsp)
	movl	128(%rsp), %edx                 # 4-byte Reload
.Ltmp317:
	.loc	0 344 27 is_stmt 1              # x264_src/encoder/me.c:344:27
	andl	$-8, %edx
.Ltmp318:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edx
	.loc	0 345 21                        # x264_src/encoder/me.c:345:21
	leal	1(,%rax,8), %eax
.Ltmp319:
	.loc	0 345 21 is_stmt 0              # x264_src/encoder/me.c:345:21
	cmpl	%edx, %eax
	cmovll	%eax, %edx
.Ltmp320:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edx
	.loc	0 346 21 is_stmt 1              # x264_src/encoder/me.c:346:21
	leal	2(,%rcx,8), %eax
.Ltmp321:
	.loc	0 346 21 is_stmt 0              # x264_src/encoder/me.c:346:21
	cmpl	%edx, %eax
	cmovll	%eax, %edx
.Ltmp322:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edx
	.loc	0 347 21 is_stmt 1              # x264_src/encoder/me.c:347:21
	leal	3(,%rsi,8), %eax
.Ltmp323:
	.loc	0 347 21 is_stmt 0              # x264_src/encoder/me.c:347:21
	cmpl	%edx, %eax
	cmovll	%eax, %edx
.Ltmp324:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edx
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%edx, 128(%rsp)                 # 4-byte Spill
.Ltmp325:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	.loc	0 348 32 is_stmt 1              # x264_src/encoder/me.c:348:32
	movl	%edx, %eax
	andl	$3, %eax
.Ltmp326:
	.loc	0 348 25 is_stmt 0              # x264_src/encoder/me.c:348:25
	je	.LBB0_165
.Ltmp327:
# %bb.46:                               # %if.end799
                                        #   in Loop: Header=BB0_44 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: dir <- undef
	.loc	0 0 25                          # x264_src/encoder/me.c:0:25
	movq	112(%rsp), %rcx                 # 8-byte Reload
	.loc	0 351 27 is_stmt 1              # x264_src/encoder/me.c:351:27
	movzbl	mod6m1-1(%rcx,%rax), %eax
.Ltmp328:
	#DEBUG_VALUE: dir <- $eax
	.loc	0 352 36                        # x264_src/encoder/me.c:352:36
	leal	(%rax,%rax), %edx
	.loc	0 352 28 is_stmt 0              # x264_src/encoder/me.c:352:28
	movsbl	hex2+2(%rdx), %ecx
	.loc	0 352 25                        # x264_src/encoder/me.c:352:25
	addl	%ecx, %r11d
.Ltmp329:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r11d
	.loc	0 353 28 is_stmt 1              # x264_src/encoder/me.c:353:28
	movsbl	hex2+3(%rdx), %edx
	.loc	0 353 25 is_stmt 0              # x264_src/encoder/me.c:353:25
	addl	%edx, %r14d
.Ltmp330:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 320, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	.loc	0 0 25                          # x264_src/encoder/me.c:0:25
	movq	320(%rsp), %r9                  # 8-byte Reload
.Ltmp331:
	.loc	0 338 53 is_stmt 1              # x264_src/encoder/me.c:338:53
	decl	%r9d
	cmpl	$2, %r9d
	movq	64(%rsp), %r13                  # 8-byte Reload
	movq	136(%rsp), %r8                  # 8-byte Reload
	.loc	0 338 57 is_stmt 0              # x264_src/encoder/me.c:338:57
	ja	.LBB0_44
	jmp	.LBB0_167
.Ltmp332:
.LBB0_47:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_x <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_y <- [DW_OP_plus_uconst 344, DW_OP_deref] $rsp
	#DEBUG_VALUE: sums_base <- $rbp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 0 57                          # x264_src/encoder/me.c:0:57
	movl	128(%rsp), %r8d                 # 4-byte Reload
	movq	%rbp, %rdx
.Ltmp333:
.LBB0_48:                               # %if.end3640
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_x <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_y <- [DW_OP_plus_uconst 344, DW_OP_deref] $rsp
	#DEBUG_VALUE: sums_base <- $rdx
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	movq	336(%rsp), %rbp                 # 8-byte Reload
	subl	400(%rsp), %ebp                 # 4-byte Folded Reload
	#DEBUG_VALUE: sums_base <- $rdx
.Ltmp334:
	.loc	0 604 40 is_stmt 1              # x264_src/encoder/me.c:604:40
	cmpl	$5, %r14d
	movq	352(%rsp), %rcx                 # 8-byte Reload
	ja	.LBB0_51
.Ltmp335:
# %bb.49:                               # %if.end3640
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_x <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_y <- [DW_OP_plus_uconst 344, DW_OP_deref] $rsp
	#DEBUG_VALUE: sums_base <- $rdx
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 0 40 is_stmt 0                # x264_src/encoder/me.c:0:40
	movl	$37, %eax
	btl	%r14d, %eax
	jae	.LBB0_51
.Ltmp336:
# %bb.50:                               # %if.then3648
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_x <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_y <- [DW_OP_plus_uconst 344, DW_OP_deref] $rsp
	#DEBUG_VALUE: sums_base <- $rdx
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	movq	264(%rsp), %rax                 # 8-byte Reload
	.loc	0 605 23 is_stmt 1              # x264_src/encoder/me.c:605:23
	imull	%r13d, %eax
.Ltmp337:
	#DEBUG_VALUE: delta <- $eax
	.loc	0 0 23 is_stmt 0                # x264_src/encoder/me.c:0:23
	movq	%rax, 264(%rsp)                 # 8-byte Spill
.Ltmp338:
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
.LBB0_51:                               # %if.end3650
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_x <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_y <- [DW_OP_plus_uconst 344, DW_OP_deref] $rsp
	#DEBUG_VALUE: sums_base <- $rdx
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	addl	$3, %ebp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
.Ltmp339:
	.loc	0 606 39 is_stmt 1              # x264_src/encoder/me.c:606:39
	cmpl	$5, %r14d
	je	.LBB0_53
.Ltmp340:
# %bb.52:                               # %if.end3650
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_x <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_y <- [DW_OP_plus_uconst 344, DW_OP_deref] $rsp
	#DEBUG_VALUE: sums_base <- $rdx
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	cmpl	$2, %r14d
	jne	.LBB0_54
.Ltmp341:
.LBB0_53:                               # %if.then3656
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_x <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_y <- [DW_OP_plus_uconst 344, DW_OP_deref] $rsp
	#DEBUG_VALUE: sums_base <- $rdx
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 607 29                        # x264_src/encoder/me.c:607:29
	movl	616(%rsp), %eax
	.loc	0 607 27 is_stmt 0              # x264_src/encoder/me.c:607:27
	movl	%eax, 612(%rsp)
.Ltmp342:
.LBB0_54:                               # %if.end3659
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_x <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_y <- [DW_OP_plus_uconst 344, DW_OP_deref] $rsp
	#DEBUG_VALUE: sums_base <- $rdx
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 0 27                          # x264_src/encoder/me.c:0:27
	andl	$-4, %ebp
.Ltmp343:
	#DEBUG_VALUE: width <- $ebp
	.loc	0 609 35 is_stmt 1              # x264_src/encoder/me.c:609:35
	cmpl	$4, 16404(%rbx)
	movslq	400(%rsp), %rax                 # 4-byte Folded Reload
	movq	%rax, 288(%rsp)                 # 8-byte Spill
	movq	%rbp, 336(%rsp)                 # 8-byte Spill
.Ltmp344:
	#DEBUG_VALUE: max_x <- undef
	.loc	0 609 17 is_stmt 0              # x264_src/encoder/me.c:609:17
	jne	.LBB0_94
.Ltmp345:
# %bb.55:                               # %if.then3664
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_y <- [DW_OP_plus_uconst 344, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: sums_base <- $rdx
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	%rdx, 144(%rsp)                 # 8-byte Spill
.Ltmp346:
	#DEBUG_VALUE: sums_base <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	.loc	0 612 59 is_stmt 1              # x264_src/encoder/me.c:612:59
	leal	15(%rbp), %eax
	.loc	0 612 63 is_stmt 0              # x264_src/encoder/me.c:612:63
	andl	$-16, %eax
	.loc	0 612 50                        # x264_src/encoder/me.c:612:50
	cltq
	movq	%rax, 312(%rsp)                 # 8-byte Spill
	leaq	(%rcx,%rax,2), %r15
.Ltmp347:
	#DEBUG_VALUE: mvsads <- $r15
	.loc	0 614 34 is_stmt 1              # x264_src/encoder/me.c:614:34
	xorl	%eax, %eax
	movq	320(%rsp), %rcx                 # 8-byte Reload
	cmpl	$25, %ecx
	setge	%al
	addl	$11, %eax
.Ltmp348:
	#DEBUG_VALUE: nmvsad <- 0
	.loc	0 614 45 is_stmt 0              # x264_src/encoder/me.c:614:45
	cmpl	$17, %ecx
	movl	$10, %ecx
	.loc	0 614 34                        # x264_src/encoder/me.c:614:34
	cmovgel	%eax, %ecx
.Ltmp349:
	#DEBUG_VALUE: sad_thresh <- $ecx
	.loc	0 0 34                          # x264_src/encoder/me.c:0:34
	movl	%ecx, 152(%rsp)                 # 4-byte Spill
.Ltmp350:
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	movq	112(%rsp), %rbp                 # 8-byte Reload
	.loc	0 615 83 is_stmt 1              # x264_src/encoder/me.c:615:83
	movl	%ebp, %eax
	movq	%r13, %rcx
	imull	%ecx, %eax
	.loc	0 615 79 is_stmt 0              # x264_src/encoder/me.c:615:79
	cltq
	movq	80(%rsp), %r12                  # 8-byte Reload
	.loc	0 615 90                        # x264_src/encoder/me.c:615:90
	movslq	%r12d, %rdx
	.loc	0 615 79                        # x264_src/encoder/me.c:615:79
	addq	136(%rsp), %rdx                 # 8-byte Folded Reload
	.loc	0 615 90                        # x264_src/encoder/me.c:615:90
	addq	%rax, %rdx
	movq	56(%rsp), %rdi                  # 8-byte Reload
	.loc	0 615 28                        # x264_src/encoder/me.c:615:28
	movl	$16, %esi
                                        # kill: def $ecx killed $ecx killed $rcx
	callq	*31560(%rbx,%r14,8)
.Ltmp351:
	.loc	0 616 28 is_stmt 1              # x264_src/encoder/me.c:616:28
	leal	(,%r12,4), %ecx
	movslq	%ecx, %rcx
	movq	40(%rsp), %rdx                  # 8-byte Reload
	movzwl	(%rdx,%rcx,2), %edx
	leal	(,%rbp,4), %ecx
	movslq	%ecx, %rcx
	movq	24(%rsp), %r10                  # 8-byte Reload
	movzwl	(%r10,%rcx,2), %ecx
	addl	%edx, %ecx
	.loc	0 616 26 is_stmt 0              # x264_src/encoder/me.c:616:26
	addl	%eax, %ecx
.Ltmp352:
	#DEBUG_VALUE: bsad <- $ecx
	.loc	0 0 26                          # x264_src/encoder/me.c:0:26
	xorl	%r14d, %r14d
.Ltmp353:
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	movq	344(%rsp), %rdx                 # 8-byte Reload
	movl	48(%rsp), %edi                  # 4-byte Reload
.Ltmp354:
	.loc	0 617 41 is_stmt 1              # x264_src/encoder/me.c:617:41
	cmpl	%edx, %edi
.Ltmp355:
	.loc	0 617 17 is_stmt 0              # x264_src/encoder/me.c:617:17
	jle	.LBB0_99
.Ltmp356:
.LBB0_56:                               # %for.cond.cleanup3701
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- $ecx
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	320(%rsp), %rbx                 # 8-byte Reload
	.loc	0 661 36 is_stmt 1              # x264_src/encoder/me.c:661:36
	movl	%ebx, %edx
	sarl	%edx
.Ltmp357:
	#DEBUG_VALUE: limit <- $edx
	#DEBUG_VALUE: sad_thresh <- undef
	.loc	0 0 36 is_stmt 0                # x264_src/encoder/me.c:0:36
	andl	$-2, %ebx
.Ltmp358:
	#DEBUG_VALUE: nmvsad <- $r14d
	.loc	0 663 31 is_stmt 1              # x264_src/encoder/me.c:663:31
	cmpl	%ebx, %r14d
	.loc	0 663 17 is_stmt 0              # x264_src/encoder/me.c:663:17
	jle	.LBB0_73
.Ltmp359:
# %bb.57:                               # %for.cond.cleanup3701
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movl	152(%rsp), %edi                 # 4-byte Reload
	imull	%ecx, %edi
	sarl	$3, %edi
.Ltmp360:
	#DEBUG_VALUE: sad_thresh <- $edi
	.loc	0 663 17                        # x264_src/encoder/me.c:663:17
	cmpl	%ecx, %edi
	jle	.LBB0_73
.Ltmp361:
# %bb.58:                               # %while.body.preheader
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- $edi
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	352(%rsp), %rax                 # 8-byte Reload
	movq	312(%rsp), %rsi                 # 8-byte Reload
	.loc	0 663 17                        # x264_src/encoder/me.c:663:17
	leaq	(%rax,%rsi,2), %rax
	addq	$8, %rax
.Ltmp362:
	.p2align	4, 0x90
.LBB0_59:                               # %while.body
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_61 Depth 2
                                        #     Child Loop BB0_70 Depth 2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- $edi
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	#DEBUG_VALUE: sad_thresh <- $edi
	#DEBUG_VALUE: nmvsad <- $r14d
	.loc	0 667 46 is_stmt 1              # x264_src/encoder/me.c:667:46
	movl	%r14d, %esi
	addl	%ecx, %edi
.Ltmp363:
	.loc	0 667 54 is_stmt 0              # x264_src/encoder/me.c:667:54
	sarl	%edi
.Ltmp364:
	#DEBUG_VALUE: sad_thresh <- $edi
	#DEBUG_VALUE: i <- 0
	.loc	0 668 35 is_stmt 1              # x264_src/encoder/me.c:668:35
	testl	%r14d, %r14d
	movl	$0, %r14d
.Ltmp365:
	#DEBUG_VALUE: nmvsad <- $esi
	.loc	0 668 44 is_stmt 0              # x264_src/encoder/me.c:668:44
	jle	.LBB0_64
.Ltmp366:
# %bb.60:                               # %land.rhs3888.preheader
                                        #   in Loop: Header=BB0_59 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $esi
	#DEBUG_VALUE: sad_thresh <- $edi
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	#DEBUG_VALUE: i <- 0
	.loc	0 0 44                          # x264_src/encoder/me.c:0:44
	xorl	%r14d, %r14d
.Ltmp367:
	.p2align	4, 0x90
.LBB0_61:                               # %land.rhs3888
                                        #   Parent Loop BB0_59 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $esi
	#DEBUG_VALUE: sad_thresh <- $edi
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	#DEBUG_VALUE: i <- $r14
	.loc	0 668 61                        # x264_src/encoder/me.c:668:61
	cmpl	%edi, (%r15,%r14,8)
.Ltmp368:
	.loc	0 668 21                        # x264_src/encoder/me.c:668:21
	jg	.LBB0_64
.Ltmp369:
# %bb.62:                               # %for.inc3896
                                        #   in Loop: Header=BB0_61 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $esi
	#DEBUG_VALUE: sad_thresh <- $edi
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	#DEBUG_VALUE: i <- $r14
	.loc	0 668 77                        # x264_src/encoder/me.c:668:77
	incq	%r14
.Ltmp370:
	#DEBUG_VALUE: i <- $r14
	.loc	0 668 35                        # x264_src/encoder/me.c:668:35
	cmpq	%r14, %rsi
	.loc	0 668 44                        # x264_src/encoder/me.c:668:44
	jne	.LBB0_61
.Ltmp371:
# %bb.63:                               # %while.cond.loopexit.loopexit1
                                        #   in Loop: Header=BB0_59 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $esi
	#DEBUG_VALUE: sad_thresh <- $edi
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	#DEBUG_VALUE: i <- $r14
	.loc	0 0 44                          # x264_src/encoder/me.c:0:44
	movl	%edi, %r12d
.Ltmp372:
	#DEBUG_VALUE: sad_thresh <- $r12d
	movl	%esi, %r14d
.Ltmp373:
	jmp	.LBB0_71
.Ltmp374:
	.p2align	4, 0x90
.LBB0_64:                               # %for.end3898
                                        #   in Loop: Header=BB0_59 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $esi
	#DEBUG_VALUE: sad_thresh <- $edi
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	#DEBUG_VALUE: j <- $r14d
	#DEBUG_VALUE: i <- $r14d
	.loc	0 669 39 is_stmt 1              # x264_src/encoder/me.c:669:39
	cmpl	%r14d, %esi
.Ltmp375:
	.loc	0 669 21 is_stmt 0              # x264_src/encoder/me.c:669:21
	jle	.LBB0_67
.Ltmp376:
# %bb.65:                               # %for.body3904.lr.ph
                                        #   in Loop: Header=BB0_59 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $esi
	#DEBUG_VALUE: sad_thresh <- $edi
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	#DEBUG_VALUE: i <- $r14d
	#DEBUG_VALUE: j <- $r14d
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%edi, %r12d
	notl	%edi
.Ltmp377:
	#DEBUG_VALUE: sad_thresh <- $r12d
	.loc	0 669 21                        # x264_src/encoder/me.c:669:21
	movl	%r14d, %r8d
	movl	%esi, %r9d
	subl	%r14d, %r9d
	testb	$1, %r9b
	jne	.LBB0_68
.Ltmp378:
# %bb.66:                               #   in Loop: Header=BB0_59 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $esi
	#DEBUG_VALUE: sad_thresh <- $r12d
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	#DEBUG_VALUE: i <- $r14d
	#DEBUG_VALUE: j <- $r14d
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%r14d, %r10d
	incl	%r14d
.Ltmp379:
	#DEBUG_VALUE: j <- $r10d
	#DEBUG_VALUE: i <- $r10d
	.loc	0 669 21                        # x264_src/encoder/me.c:669:21
	cmpl	%r14d, %esi
	movl	%r10d, %r14d
	jne	.LBB0_69
	jmp	.LBB0_71
.Ltmp380:
	.p2align	4, 0x90
.LBB0_67:                               #   in Loop: Header=BB0_59 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $esi
	#DEBUG_VALUE: sad_thresh <- $edi
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	#DEBUG_VALUE: i <- $r14d
	#DEBUG_VALUE: j <- $r14d
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%edi, %r12d
.Ltmp381:
	#DEBUG_VALUE: sad_thresh <- $r12d
	.loc	0 669 21                        # x264_src/encoder/me.c:669:21
	jmp	.LBB0_71
.Ltmp382:
.LBB0_68:                               # %for.body3904.prol
                                        #   in Loop: Header=BB0_59 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $esi
	#DEBUG_VALUE: sad_thresh <- $r12d
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	#DEBUG_VALUE: i <- $r14d
	#DEBUG_VALUE: j <- $r14d
	#DEBUG_VALUE: j <- $r14d
	#DEBUG_VALUE: i <- $r14d
	.loc	0 674 66 is_stmt 1              # x264_src/encoder/me.c:674:66
	movq	(%r15,%r8,8), %r10
	.loc	0 674 46 is_stmt 0              # x264_src/encoder/me.c:674:46
	movslq	%r14d, %r9
	.loc	0 674 64                        # x264_src/encoder/me.c:674:64
	movq	%r10, (%r15,%r9,8)
.Ltmp383:
	#DEBUG_VALUE: mvsad <- $r10
	#DEBUG_VALUE: sad <- $r10d
	.loc	0 686 35 is_stmt 1              # x264_src/encoder/me.c:686:35
	addl	%edi, %r10d
.Ltmp384:
	.loc	0 686 53 is_stmt 0              # x264_src/encoder/me.c:686:53
	shrl	$31, %r10d
	.loc	0 686 27                        # x264_src/encoder/me.c:686:27
	addl	%r14d, %r10d
.Ltmp385:
	#DEBUG_VALUE: i <- $r10d
	.loc	0 669 50 is_stmt 1              # x264_src/encoder/me.c:669:50
	incq	%r8
.Ltmp386:
	#DEBUG_VALUE: j <- $r8
	.loc	0 0 50 is_stmt 0                # x264_src/encoder/me.c:0:50
	incl	%r14d
.Ltmp387:
	.loc	0 669 21                        # x264_src/encoder/me.c:669:21
	cmpl	%r14d, %esi
	movl	%r10d, %r14d
	je	.LBB0_71
.Ltmp388:
.LBB0_69:                               # %for.body3904.preheader
                                        #   in Loop: Header=BB0_59 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $esi
	#DEBUG_VALUE: sad_thresh <- $r12d
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	#DEBUG_VALUE: i <- $r10d
	leaq	(%rax,%r8,8), %r9
	movl	%r10d, %r14d
.Ltmp389:
	.p2align	4, 0x90
.LBB0_70:                               # %for.body3904
                                        #   Parent Loop BB0_59 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $esi
	#DEBUG_VALUE: sad_thresh <- $r12d
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	#DEBUG_VALUE: i <- $r14d
	#DEBUG_VALUE: j <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 32 7, DW_OP_minus, DW_OP_consts 2, DW_OP_div, DW_OP_consts 2, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef
	#DEBUG_VALUE: i <- $r14d
	.loc	0 674 66 is_stmt 1              # x264_src/encoder/me.c:674:66
	movq	-8(%r9), %r10
	.loc	0 674 46 is_stmt 0              # x264_src/encoder/me.c:674:46
	movslq	%r14d, %r11
	.loc	0 674 64                        # x264_src/encoder/me.c:674:64
	movq	%r10, (%r15,%r11,8)
.Ltmp390:
	#DEBUG_VALUE: mvsad <- $r10
	#DEBUG_VALUE: sad <- $r10d
	.loc	0 686 35 is_stmt 1              # x264_src/encoder/me.c:686:35
	addl	%edi, %r10d
.Ltmp391:
	.loc	0 686 53 is_stmt 0              # x264_src/encoder/me.c:686:53
	shrl	$31, %r10d
	.loc	0 686 27                        # x264_src/encoder/me.c:686:27
	addl	%r10d, %r11d
.Ltmp392:
	#DEBUG_VALUE: i <- $r11d
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r8d
	.loc	0 674 66 is_stmt 1              # x264_src/encoder/me.c:674:66
	movq	(%r9), %r10
	.loc	0 674 46 is_stmt 0              # x264_src/encoder/me.c:674:46
	movslq	%r11d, %r14
	.loc	0 674 64                        # x264_src/encoder/me.c:674:64
	movq	%r10, (%r15,%r14,8)
.Ltmp393:
	#DEBUG_VALUE: mvsad <- $r10
	#DEBUG_VALUE: sad <- $r10d
	.loc	0 686 35 is_stmt 1              # x264_src/encoder/me.c:686:35
	addl	%edi, %r10d
.Ltmp394:
	.loc	0 686 53 is_stmt 0              # x264_src/encoder/me.c:686:53
	shrl	$31, %r10d
	.loc	0 686 27                        # x264_src/encoder/me.c:686:27
	addl	%r10d, %r14d
.Ltmp395:
	#DEBUG_VALUE: i <- $r14d
	#DEBUG_VALUE: j <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 32 7, DW_OP_minus, DW_OP_consts 2, DW_OP_div, DW_OP_consts 2, DW_OP_mul, DW_OP_consts 2, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef
	.loc	0 669 39 is_stmt 1              # x264_src/encoder/me.c:669:39
	addl	$2, %r8d
	addq	$16, %r9
	cmpl	%r8d, %esi
.Ltmp396:
	.loc	0 669 21 is_stmt 0              # x264_src/encoder/me.c:669:21
	jg	.LBB0_70
.Ltmp397:
	.p2align	4, 0x90
.LBB0_71:                               # %while.cond.loopexit
                                        #   in Loop: Header=BB0_59 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $esi
	#DEBUG_VALUE: sad_thresh <- $r12d
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	#DEBUG_VALUE: sad_thresh <- $r12d
	#DEBUG_VALUE: nmvsad <- $r14d
	.loc	0 663 31 is_stmt 1              # x264_src/encoder/me.c:663:31
	cmpl	%ebx, %r14d
	.loc	0 663 17 is_stmt 0              # x264_src/encoder/me.c:663:17
	jle	.LBB0_149
.Ltmp398:
# %bb.72:                               # %while.cond.loopexit
                                        #   in Loop: Header=BB0_59 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- $r12d
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movl	%r12d, %edi
	.loc	0 663 17                        # x264_src/encoder/me.c:663:17
	cmpl	%ecx, %r12d
	movq	24(%rsp), %r10                  # 8-byte Reload
	jg	.LBB0_59
.Ltmp399:
.LBB0_73:                               # %while.cond3919.preheader
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	#DEBUG_VALUE: nmvsad <- $r14d
	.loc	0 690 31 is_stmt 1              # x264_src/encoder/me.c:690:31
	cmpl	%edx, %r14d
	.loc	0 690 17 is_stmt 0              # x264_src/encoder/me.c:690:17
	jle	.LBB0_150
.Ltmp400:
.LBB0_74:                               # %for.cond3924.preheader.preheader
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	movslq	%r14d, %rax
	movslq	%edx, %rcx
.Ltmp401:
	leal	3(%r14), %edx
.Ltmp402:
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	xorl	%esi, %esi
	jmp	.LBB0_76
.Ltmp403:
	.p2align	4, 0x90
.LBB0_75:                               # %for.cond.cleanup3927
                                        #   in Loop: Header=BB0_76 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $rax
	.loc	0 698 25 is_stmt 1              # x264_src/encoder/me.c:698:25
	movq	-8(%r15,%rax,8), %rdi
.Ltmp404:
	.loc	0 696 27                        # x264_src/encoder/me.c:696:27
	decq	%rax
.Ltmp405:
	#DEBUG_VALUE: nmvsad <- $rax
	.loc	0 698 25                        # x264_src/encoder/me.c:698:25
	movslq	%r10d, %r8
	movq	%rdi, (%r15,%r8,8)
.Ltmp406:
	.loc	0 690 17                        # x264_src/encoder/me.c:690:17
	incl	%esi
	addb	$3, %dl
	.loc	0 690 31 is_stmt 0              # x264_src/encoder/me.c:690:31
	cmpq	%rcx, %rax
	.loc	0 690 17                        # x264_src/encoder/me.c:690:17
	jle	.LBB0_120
.Ltmp407:
.LBB0_76:                               # %for.cond3924.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_86 Depth 2
                                        #     Child Loop BB0_82 Depth 2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	.loc	0 693 39 is_stmt 1              # x264_src/encoder/me.c:693:39
	movzbl	%dl, %edx
	andl	$3, %edx
.Ltmp408:
	#DEBUG_VALUE: nmvsad <- $rax
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: bi <- 0
	.loc	0 0 39 is_stmt 0                # x264_src/encoder/me.c:0:39
	movl	$0, %r10d
	.loc	0 693 39                        # x264_src/encoder/me.c:693:39
	cmpq	$2, %rax
.Ltmp409:
	.loc	0 693 21                        # x264_src/encoder/me.c:693:21
	jl	.LBB0_75
.Ltmp410:
# %bb.77:                               # %for.body3928.preheader
                                        #   in Loop: Header=BB0_76 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $rax
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: bi <- 0
	.loc	0 693 39                        # x264_src/encoder/me.c:693:39
	movl	%r14d, %edi
	subl	%esi, %edi
	leaq	-1(%rdi), %r8
	addq	$-2, %rdi
.Ltmp411:
	.loc	0 693 21                        # x264_src/encoder/me.c:693:21
	cmpq	$3, %rdi
	jae	.LBB0_84
.Ltmp412:
# %bb.78:                               #   in Loop: Header=BB0_76 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $rax
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: bi <- 0
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	xorl	%r9d, %r9d
	movl	$1, %edi
.Ltmp413:
.LBB0_79:                               # %for.cond.cleanup3927.loopexit.unr-lcssa
                                        #   in Loop: Header=BB0_76 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $rax
	movl	%r9d, %r10d
	.loc	0 693 21                        # x264_src/encoder/me.c:693:21
	testb	$3, %r8b
	je	.LBB0_75
.Ltmp414:
# %bb.80:                               # %for.body3928.epil.preheader
                                        #   in Loop: Header=BB0_76 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $rax
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	%rdx, %r8
	jmp	.LBB0_82
.Ltmp415:
	.p2align	4, 0x90
.LBB0_81:                               # %for.body3928.epil
                                        #   in Loop: Header=BB0_82 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $rax
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: bi <- $r9d
	#DEBUG_VALUE: bi <- $r10d
	.loc	0 693 50                        # x264_src/encoder/me.c:693:50
	incq	%rdi
.Ltmp416:
	#DEBUG_VALUE: i <- $rdi
	.loc	0 0 50                          # x264_src/encoder/me.c:0:50
	movl	%r10d, %r9d
.Ltmp417:
	.loc	0 693 21                        # x264_src/encoder/me.c:693:21
	decq	%r8
	je	.LBB0_75
.Ltmp418:
.LBB0_82:                               # %for.body3928.epil
                                        #   Parent Loop BB0_76 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $rax
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: bi <- $r9d
	.loc	0 694 39 is_stmt 1              # x264_src/encoder/me.c:694:39
	movl	(%r15,%rdi,8), %r11d
	.loc	0 694 45 is_stmt 0              # x264_src/encoder/me.c:694:45
	movslq	%r9d, %rbx
	movl	%edi, %r10d
	.loc	0 694 43                        # x264_src/encoder/me.c:694:43
	cmpl	(%r15,%rbx,8), %r11d
.Ltmp419:
	.loc	0 694 29                        # x264_src/encoder/me.c:694:29
	jg	.LBB0_81
.Ltmp420:
# %bb.83:                               # %for.body3928.epil
                                        #   in Loop: Header=BB0_82 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $rax
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: bi <- $r9d
	.loc	0 0 29                          # x264_src/encoder/me.c:0:29
	movl	%r9d, %r10d
	jmp	.LBB0_81
.Ltmp421:
	.p2align	4, 0x90
.LBB0_84:                               # %for.body3928.preheader.new
                                        #   in Loop: Header=BB0_76 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $rax
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: bi <- 0
	.loc	0 693 21 is_stmt 1              # x264_src/encoder/me.c:693:21
	movq	%r8, %r10
	andq	$-4, %r10
	xorl	%ebx, %ebx
	movl	$1, %edi
	xorl	%r11d, %r11d
	jmp	.LBB0_86
.Ltmp422:
	.p2align	4, 0x90
.LBB0_85:                               # %for.body3928
                                        #   in Loop: Header=BB0_86 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $rax
	#DEBUG_VALUE: bi <- $r9d
	.loc	0 693 50 is_stmt 0              # x264_src/encoder/me.c:693:50
	addq	$4, %rdi
.Ltmp423:
	#DEBUG_VALUE: i <- $rdi
	.loc	0 693 21                        # x264_src/encoder/me.c:693:21
	addq	$4, %r11
	movl	%r9d, %ebx
	cmpq	%r10, %r11
	je	.LBB0_79
.Ltmp424:
.LBB0_86:                               # %for.body3928
                                        #   Parent Loop BB0_76 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $rax
	.loc	0 694 45 is_stmt 1              # x264_src/encoder/me.c:694:45
	movslq	%ebx, %r12
.Ltmp425:
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: bi <- $ebx
	.loc	0 694 39 is_stmt 0              # x264_src/encoder/me.c:694:39
	movl	(%r15,%rdi,8), %ebp
.Ltmp426:
	#DEBUG_VALUE: i <- undef
	.loc	0 0 39                          # x264_src/encoder/me.c:0:39
	movl	%edi, %r9d
	.loc	0 694 43                        # x264_src/encoder/me.c:694:43
	cmpl	(%r15,%r12,8), %ebp
.Ltmp427:
	.loc	0 694 29                        # x264_src/encoder/me.c:694:29
	jg	.LBB0_87
.Ltmp428:
# %bb.90:                               # %for.body3928
                                        #   in Loop: Header=BB0_86 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $rax
	#DEBUG_VALUE: bi <- $ebx
	.loc	0 0 29                          # x264_src/encoder/me.c:0:29
	movl	%ebx, %r9d
	movl	8(%r15,%rdi,8), %ebx
.Ltmp429:
	#DEBUG_VALUE: bi <- $r9d
	#DEBUG_VALUE: bi <- $r9d
	.loc	0 694 45                        # x264_src/encoder/me.c:694:45
	movslq	%r9d, %r12
	.loc	0 694 43                        # x264_src/encoder/me.c:694:43
	cmpl	(%r15,%r12,8), %ebx
.Ltmp430:
	.loc	0 694 29                        # x264_src/encoder/me.c:694:29
	jle	.LBB0_88
.Ltmp431:
.LBB0_91:                               #   in Loop: Header=BB0_86 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $rax
	#DEBUG_VALUE: bi <- $r9d
	.loc	0 0 0                           # x264_src/encoder/me.c:0:0
	leal	1(%rdi), %r9d
.Ltmp432:
	#DEBUG_VALUE: bi <- $r9d
	#DEBUG_VALUE: i <- undef
	.loc	0 694 39                        # x264_src/encoder/me.c:694:39
	movl	16(%r15,%rdi,8), %ebx
	.loc	0 694 45                        # x264_src/encoder/me.c:694:45
	movslq	%r9d, %r12
	.loc	0 694 43                        # x264_src/encoder/me.c:694:43
	cmpl	(%r15,%r12,8), %ebx
.Ltmp433:
	.loc	0 694 29                        # x264_src/encoder/me.c:694:29
	jle	.LBB0_89
.Ltmp434:
.LBB0_92:                               #   in Loop: Header=BB0_86 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $rax
	#DEBUG_VALUE: bi <- $r9d
	.loc	0 0 0                           # x264_src/encoder/me.c:0:0
	leal	2(%rdi), %r9d
.Ltmp435:
	#DEBUG_VALUE: bi <- $r9d
	#DEBUG_VALUE: i <- undef
	.loc	0 694 39                        # x264_src/encoder/me.c:694:39
	movl	24(%r15,%rdi,8), %ebx
	.loc	0 694 45                        # x264_src/encoder/me.c:694:45
	movslq	%r9d, %r12
	.loc	0 694 43                        # x264_src/encoder/me.c:694:43
	cmpl	(%r15,%r12,8), %ebx
.Ltmp436:
	.loc	0 694 29                        # x264_src/encoder/me.c:694:29
	jle	.LBB0_85
	jmp	.LBB0_93
.Ltmp437:
	.p2align	4, 0x90
.LBB0_87:                               # %for.body3928
                                        #   in Loop: Header=BB0_86 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $rax
	#DEBUG_VALUE: bi <- $ebx
	.loc	0 0 0                           # x264_src/encoder/me.c:0:0
	movl	8(%r15,%rdi,8), %ebx
.Ltmp438:
	#DEBUG_VALUE: bi <- $edi
	.loc	0 694 45                        # x264_src/encoder/me.c:694:45
	movslq	%r9d, %r12
	.loc	0 694 43                        # x264_src/encoder/me.c:694:43
	cmpl	(%r15,%r12,8), %ebx
.Ltmp439:
	.loc	0 694 29                        # x264_src/encoder/me.c:694:29
	jg	.LBB0_91
.Ltmp440:
.LBB0_88:                               # %for.body3928
                                        #   in Loop: Header=BB0_86 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $rax
	#DEBUG_VALUE: bi <- $r9d
	#DEBUG_VALUE: bi <- $r9d
	#DEBUG_VALUE: i <- undef
	.loc	0 694 39                        # x264_src/encoder/me.c:694:39
	movl	16(%r15,%rdi,8), %ebx
	.loc	0 694 45                        # x264_src/encoder/me.c:694:45
	movslq	%r9d, %r12
	.loc	0 694 43                        # x264_src/encoder/me.c:694:43
	cmpl	(%r15,%r12,8), %ebx
.Ltmp441:
	.loc	0 694 29                        # x264_src/encoder/me.c:694:29
	jg	.LBB0_92
.Ltmp442:
.LBB0_89:                               # %for.body3928
                                        #   in Loop: Header=BB0_86 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $rax
	#DEBUG_VALUE: bi <- $r9d
	#DEBUG_VALUE: bi <- $r9d
	#DEBUG_VALUE: i <- undef
	.loc	0 694 39                        # x264_src/encoder/me.c:694:39
	movl	24(%r15,%rdi,8), %ebx
	.loc	0 694 45                        # x264_src/encoder/me.c:694:45
	movslq	%r9d, %r12
	.loc	0 694 43                        # x264_src/encoder/me.c:694:43
	cmpl	(%r15,%r12,8), %ebx
.Ltmp443:
	.loc	0 694 29                        # x264_src/encoder/me.c:694:29
	jle	.LBB0_85
.Ltmp444:
.LBB0_93:                               #   in Loop: Header=BB0_86 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $rax
	#DEBUG_VALUE: bi <- $r9d
	.loc	0 0 0                           # x264_src/encoder/me.c:0:0
	leal	3(%rdi), %r9d
.Ltmp445:
	jmp	.LBB0_85
.Ltmp446:
.LBB0_94:                               # %for.cond4015.preheader
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_y <- [DW_OP_plus_uconst 344, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: sums_base <- $rdx
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	movq	344(%rsp), %rax                 # 8-byte Reload
	movl	48(%rsp), %esi                  # 4-byte Reload
.Ltmp447:
	.loc	0 708 41 is_stmt 1              # x264_src/encoder/me.c:708:41
	cmpl	%eax, %esi
.Ltmp448:
	.loc	0 708 17 is_stmt 0              # x264_src/encoder/me.c:708:17
	jle	.LBB0_121
.Ltmp449:
# %bb.95:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_y <- [DW_OP_plus_uconst 344, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: sums_base <- $rdx
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	24(%rsp), %r10                  # 8-byte Reload
	.loc	0 708 17                        # x264_src/encoder/me.c:708:17
	jmp	.LBB0_153
.Ltmp450:
.LBB0_96:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movl	128(%rsp), %ebp                 # 4-byte Reload
.Ltmp451:
	.loc	0 407 37 is_stmt 1              # x264_src/encoder/me.c:407:37
	jmp	.LBB0_169
.Ltmp452:
.LBB0_97:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	.loc	0 0 37 is_stmt 0                # x264_src/encoder/me.c:0:37
	movq	136(%rsp), %r8                  # 8-byte Reload
	movq	80(%rsp), %r11                  # 8-byte Reload
.Ltmp453:
	.loc	0 331 17 is_stmt 1              # x264_src/encoder/me.c:331:17
	jmp	.LBB0_167
.Ltmp454:
.LBB0_99:                               # %for.body3702.lr.ph
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_y <- [DW_OP_plus_uconst 344, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: sums_base <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- 0
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	movq	288(%rsp), %rsi                 # 8-byte Reload
	movq	144(%rsp), %rax                 # 8-byte Reload
	leaq	(%rax,%rsi,2), %rax
	movq	%rax, 272(%rsp)                 # 8-byte Spill
	movq	32(%rsp), %rax                  # 8-byte Reload
	leaq	(%rax,%rsi,2), %rax
	movq	%rax, 232(%rsp)                 # 8-byte Spill
	movq	392(%rsp), %rax                 # 8-byte Reload
	movl	240(%rsp), %r8d                 # 4-byte Reload
.Ltmp455:
	.loc	0 617 17 is_stmt 1              # x264_src/encoder/me.c:617:17
	cmpl	%r8d, %eax
	cmovgl	%eax, %r8d
	movq	136(%rsp), %rax                 # 8-byte Reload
	addq	%rsi, %rax
	movq	%rax, 328(%rsp)                 # 8-byte Spill
	movslq	%r8d, %rsi
	addl	%esi, %edx
	subl	%edi, %edx
	incl	%edx
	xorl	%r14d, %r14d
	movq	336(%rsp), %r9                  # 8-byte Reload
	movq	%rdx, 344(%rsp)                 # 8-byte Spill
.Ltmp456:
	#DEBUG_VALUE: max_y <- undef
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	jmp	.LBB0_102
.Ltmp457:
	.p2align	4, 0x90
.LBB0_100:                              # %for.end3862
                                        #   in Loop: Header=BB0_102 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 280, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 240, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	.loc	0 658 26 is_stmt 1              # x264_src/encoder/me.c:658:26
	addl	48(%rsp), %ebp                  # 4-byte Folded Reload
.Ltmp458:
	#DEBUG_VALUE: bsad <- $ebp
	.loc	0 0 26 is_stmt 0                # x264_src/encoder/me.c:0:26
	movl	%ebp, %ecx
	movq	104(%rsp), %rbx                 # 8-byte Reload
	movq	24(%rsp), %r10                  # 8-byte Reload
	movq	64(%rsp), %r13                  # 8-byte Reload
	movq	336(%rsp), %r9                  # 8-byte Reload
	movq	344(%rsp), %rdx                 # 8-byte Reload
.Ltmp459:
.LBB0_101:                              # %cleanup3864
                                        #   in Loop: Header=BB0_102 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: my <- $rsi
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: nmvsad <- $r14d
	.loc	0 617 53 is_stmt 1              # x264_src/encoder/me.c:617:53
	incq	%rsi
.Ltmp460:
	#DEBUG_VALUE: my <- $rsi
	.loc	0 617 41 is_stmt 0              # x264_src/encoder/me.c:617:41
	cmpl	%esi, %edx
.Ltmp461:
	.loc	0 617 17                        # x264_src/encoder/me.c:617:17
	je	.LBB0_56
.Ltmp462:
.LBB0_102:                              # %for.body3702
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_106 Depth 2
                                        #     Child Loop BB0_118 Depth 2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: my <- $rsi
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: nmvsad <- $r14d
	.loc	0 620 46 is_stmt 1              # x264_src/encoder/me.c:620:46
	leal	(,%rsi,4), %eax
	.loc	0 620 33 is_stmt 0              # x264_src/encoder/me.c:620:33
	cltq
	movzwl	(%r10,%rax,2), %eax
.Ltmp463:
	#DEBUG_VALUE: ycost <- $eax
	.loc	0 621 30 is_stmt 1              # x264_src/encoder/me.c:621:30
	movl	%ecx, %ebp
	movl	%eax, 48(%rsp)                  # 4-byte Spill
.Ltmp464:
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	subl	%eax, %ebp
	jle	.LBB0_101
.Ltmp465:
# %bb.103:                              # %if.end3711
                                        #   in Loop: Header=BB0_102 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: my <- $rsi
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- undef
	.loc	0 0 30 is_stmt 0                # x264_src/encoder/me.c:0:30
	movq	%rsi, 240(%rsp)                 # 8-byte Spill
.Ltmp466:
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 240, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 624 79 is_stmt 1              # x264_src/encoder/me.c:624:79
	imulq	%r13, %rsi
	movq	%rsi, %r13
	movq	272(%rsp), %rax                 # 8-byte Reload
	.loc	0 624 74 is_stmt 0              # x264_src/encoder/me.c:624:74
	leaq	(%rax,%rsi,2), %rsi
	.loc	0 625 84 is_stmt 1              # x264_src/encoder/me.c:625:84
	movl	%ebp, %eax
	shll	$4, %eax
	movl	%ebp, %ecx
	addl	%eax, %ecx
	.loc	0 625 87 is_stmt 0              # x264_src/encoder/me.c:625:87
	leal	15(%rbp,%rax), %eax
	cmovnsl	%ecx, %eax
	sarl	$4, %eax
	.loc	0 624 26 is_stmt 1              # x264_src/encoder/me.c:624:26
	movl	%eax, (%rsp)
	leaq	608(%rsp), %rdi
	movq	264(%rsp), %rdx                 # 8-byte Reload
                                        # kill: def $edx killed $edx killed $rdx
	movq	232(%rsp), %rcx                 # 8-byte Reload
	movq	352(%rsp), %r8                  # 8-byte Reload
                                        # kill: def $r9d killed $r9d killed $r9
	movq	72(%rsp), %rax                  # 8-byte Reload
	callq	*32464(%rbx,%rax,8)
.Ltmp467:
                                        # kill: def $eax killed $eax def $rax
	#DEBUG_VALUE: xn <- $eax
	#DEBUG_VALUE: i <- 0
	.loc	0 0 26 is_stmt 0                # x264_src/encoder/me.c:0:26
	xorl	%r12d, %r12d
	#DEBUG_VALUE: nmvsad <- $r14d
.Ltmp468:
	.loc	0 626 35 is_stmt 1              # x264_src/encoder/me.c:626:35
	cmpl	$3, %eax
	movq	%rax, 280(%rsp)                 # 8-byte Spill
.Ltmp469:
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 280, DW_OP_deref] $rsp
	.loc	0 626 21 is_stmt 0              # x264_src/encoder/me.c:626:21
	jl	.LBB0_113
.Ltmp470:
# %bb.104:                              # %for.body3730.lr.ph
                                        #   in Loop: Header=BB0_102 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 280, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 240, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	addl	$-2, %eax
	movl	%eax, 392(%rsp)                 # 4-byte Spill
	movq	328(%rsp), %rax                 # 8-byte Reload
	movq	%r13, 144(%rsp)                 # 8-byte Spill
	addq	%rax, %r13
	xorl	%r12d, %r12d
	movq	352(%rsp), %rdi                 # 8-byte Reload
	jmp	.LBB0_106
.Ltmp471:
	.p2align	4, 0x90
.LBB0_105:                              # %if.end3801.2
                                        #   in Loop: Header=BB0_106 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 280, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 240, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: j <- 2
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: j <- 3
	.loc	0 626 45                        # x264_src/encoder/me.c:626:45
	addq	$3, %r12
.Ltmp472:
	#DEBUG_VALUE: i <- $r12
	.loc	0 626 35                        # x264_src/encoder/me.c:626:35
	cmpl	%r12d, 392(%rsp)                # 4-byte Folded Reload
.Ltmp473:
	.loc	0 626 21                        # x264_src/encoder/me.c:626:21
	jle	.LBB0_114
.Ltmp474:
.LBB0_106:                              # %for.body3730
                                        #   Parent Loop BB0_102 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 280, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 240, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: ref <- $r13
	.loc	0 630 62 is_stmt 1              # x264_src/encoder/me.c:630:62
	movswq	(%rdi,%r12,2), %rsi
	.loc	0 630 61 is_stmt 0              # x264_src/encoder/me.c:630:61
	addq	%r13, %rsi
	.loc	0 630 73                        # x264_src/encoder/me.c:630:73
	movswq	2(%rdi,%r12,2), %rdx
	.loc	0 630 72                        # x264_src/encoder/me.c:630:72
	addq	%r13, %rdx
	.loc	0 630 86                        # x264_src/encoder/me.c:630:86
	movswq	4(%rdi,%r12,2), %rcx
	.loc	0 630 85                        # x264_src/encoder/me.c:630:85
	addq	%r13, %rcx
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movq	64(%rsp), %r8                   # 8-byte Reload
                                        # kill: def $r8d killed $r8d killed $r8
	.loc	0 630 25                        # x264_src/encoder/me.c:630:25
	leaq	160(%rsp), %r9
	movq	72(%rsp), %rax                  # 8-byte Reload
	callq	*32240(%rbx,%rax,8)
.Ltmp475:
	.loc	0 0 25                          # x264_src/encoder/me.c:0:25
	movq	352(%rsp), %rdi                 # 8-byte Reload
.Ltmp476:
	#DEBUG_VALUE: j <- 0
	.loc	0 633 63 is_stmt 1              # x264_src/encoder/me.c:633:63
	movswq	(%rdi,%r12,2), %rax
	movq	32(%rsp), %rcx                  # 8-byte Reload
	.loc	0 633 49 is_stmt 0              # x264_src/encoder/me.c:633:49
	movzwl	(%rcx,%rax,2), %ecx
	.loc	0 633 47                        # x264_src/encoder/me.c:633:47
	addl	160(%rsp), %ecx
.Ltmp477:
	#DEBUG_VALUE: sad <- $ecx
	.loc	0 634 43 is_stmt 1              # x264_src/encoder/me.c:634:43
	movl	%ebp, %eax
	movl	152(%rsp), %edx                 # 4-byte Reload
	imull	%edx, %eax
	.loc	0 634 54 is_stmt 0              # x264_src/encoder/me.c:634:54
	sarl	$3, %eax
	.loc	0 634 37                        # x264_src/encoder/me.c:634:37
	cmpl	%eax, %ecx
.Ltmp478:
	.loc	0 634 33                        # x264_src/encoder/me.c:634:33
	jge	.LBB0_108
.Ltmp479:
# %bb.107:                              # %if.then3777
                                        #   in Loop: Header=BB0_106 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 280, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 240, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: ref <- $r13
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: sad <- $ecx
	.loc	0 636 33 is_stmt 1              # x264_src/encoder/me.c:636:33
	cmpl	%ebp, %ecx
	cmovll	%ecx, %ebp
.Ltmp480:
	#DEBUG_VALUE: bsad <- $ebp
	.loc	0 637 58                        # x264_src/encoder/me.c:637:58
	addl	48(%rsp), %ecx                  # 4-byte Folded Reload
.Ltmp481:
	.loc	0 637 33 is_stmt 0              # x264_src/encoder/me.c:637:33
	movslq	%r14d, %r14
.Ltmp482:
	.loc	0 637 52                        # x264_src/encoder/me.c:637:52
	movl	%ecx, (%r15,%r14,8)
	movzwl	(%rdi,%r12,2), %eax
	.loc	0 638 56 is_stmt 1              # x264_src/encoder/me.c:638:56
	addw	400(%rsp), %ax                  # 2-byte Folded Reload
	.loc	0 638 54 is_stmt 0              # x264_src/encoder/me.c:638:54
	movw	%ax, 4(%r15,%r14,8)
	movq	240(%rsp), %r8                  # 8-byte Reload
	.loc	0 639 54 is_stmt 1              # x264_src/encoder/me.c:639:54
	movw	%r8w, 6(%r15,%r14,8)
	.loc	0 640 39                        # x264_src/encoder/me.c:640:39
	incl	%r14d
.Ltmp483:
	#DEBUG_VALUE: nmvsad <- $r14d
	.loc	0 634 43                        # x264_src/encoder/me.c:634:43
	movl	%ebp, %eax
	imull	%edx, %eax
	.loc	0 634 54 is_stmt 0              # x264_src/encoder/me.c:634:54
	sarl	$3, %eax
	jmp	.LBB0_109
.Ltmp484:
	.p2align	4, 0x90
.LBB0_108:                              #   in Loop: Header=BB0_106 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 280, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 240, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: ref <- $r13
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: sad <- $ecx
	.loc	0 0 54                          # x264_src/encoder/me.c:0:54
	movq	240(%rsp), %r8                  # 8-byte Reload
.Ltmp485:
.LBB0_109:                              # %if.end3801
                                        #   in Loop: Header=BB0_106 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 280, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 240, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: ref <- $r13
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: j <- 1
	.loc	0 633 63 is_stmt 1              # x264_src/encoder/me.c:633:63
	movswq	2(%rdi,%r12,2), %rcx
	movq	32(%rsp), %rsi                  # 8-byte Reload
	.loc	0 633 49 is_stmt 0              # x264_src/encoder/me.c:633:49
	movzwl	(%rsi,%rcx,2), %ecx
	.loc	0 633 47                        # x264_src/encoder/me.c:633:47
	addl	164(%rsp), %ecx
.Ltmp486:
	#DEBUG_VALUE: sad <- $ecx
	.loc	0 634 37 is_stmt 1              # x264_src/encoder/me.c:634:37
	cmpl	%eax, %ecx
.Ltmp487:
	.loc	0 634 33 is_stmt 0              # x264_src/encoder/me.c:634:33
	jge	.LBB0_111
.Ltmp488:
# %bb.110:                              # %if.then3777.1
                                        #   in Loop: Header=BB0_106 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 280, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 240, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: ref <- $r13
	#DEBUG_VALUE: j <- 1
	#DEBUG_VALUE: sad <- $ecx
	.loc	0 636 33 is_stmt 1              # x264_src/encoder/me.c:636:33
	cmpl	%ebp, %ecx
	cmovll	%ecx, %ebp
.Ltmp489:
	#DEBUG_VALUE: bsad <- $ebp
	.loc	0 637 58                        # x264_src/encoder/me.c:637:58
	addl	48(%rsp), %ecx                  # 4-byte Folded Reload
.Ltmp490:
	.loc	0 637 33 is_stmt 0              # x264_src/encoder/me.c:637:33
	movslq	%r14d, %r14
.Ltmp491:
	.loc	0 637 52                        # x264_src/encoder/me.c:637:52
	movl	%ecx, (%r15,%r14,8)
	movzwl	2(%rdi,%r12,2), %eax
	.loc	0 638 56 is_stmt 1              # x264_src/encoder/me.c:638:56
	addw	400(%rsp), %ax                  # 2-byte Folded Reload
	.loc	0 638 54 is_stmt 0              # x264_src/encoder/me.c:638:54
	movw	%ax, 4(%r15,%r14,8)
	.loc	0 639 54 is_stmt 1              # x264_src/encoder/me.c:639:54
	movw	%r8w, 6(%r15,%r14,8)
	.loc	0 640 39                        # x264_src/encoder/me.c:640:39
	incl	%r14d
.Ltmp492:
	#DEBUG_VALUE: nmvsad <- $r14d
	.loc	0 634 43                        # x264_src/encoder/me.c:634:43
	movl	%ebp, %eax
	imull	%edx, %eax
	.loc	0 634 54 is_stmt 0              # x264_src/encoder/me.c:634:54
	sarl	$3, %eax
.Ltmp493:
.LBB0_111:                              # %if.end3801.1
                                        #   in Loop: Header=BB0_106 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 280, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 240, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: ref <- $r13
	#DEBUG_VALUE: j <- 1
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: j <- 2
	.loc	0 633 63 is_stmt 1              # x264_src/encoder/me.c:633:63
	movswq	4(%rdi,%r12,2), %rcx
	movq	32(%rsp), %rdx                  # 8-byte Reload
	.loc	0 633 49 is_stmt 0              # x264_src/encoder/me.c:633:49
	movzwl	(%rdx,%rcx,2), %ecx
	.loc	0 633 47                        # x264_src/encoder/me.c:633:47
	addl	168(%rsp), %ecx
.Ltmp494:
	#DEBUG_VALUE: sad <- $ecx
	.loc	0 634 37 is_stmt 1              # x264_src/encoder/me.c:634:37
	cmpl	%eax, %ecx
.Ltmp495:
	.loc	0 634 33 is_stmt 0              # x264_src/encoder/me.c:634:33
	jge	.LBB0_105
.Ltmp496:
# %bb.112:                              # %if.then3777.2
                                        #   in Loop: Header=BB0_106 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 280, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 240, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: ref <- $r13
	#DEBUG_VALUE: j <- 2
	#DEBUG_VALUE: sad <- $ecx
	.loc	0 636 33 is_stmt 1              # x264_src/encoder/me.c:636:33
	cmpl	%ebp, %ecx
	cmovll	%ecx, %ebp
.Ltmp497:
	#DEBUG_VALUE: bsad <- $ebp
	.loc	0 637 58                        # x264_src/encoder/me.c:637:58
	addl	48(%rsp), %ecx                  # 4-byte Folded Reload
.Ltmp498:
	.loc	0 637 33 is_stmt 0              # x264_src/encoder/me.c:637:33
	movslq	%r14d, %r14
.Ltmp499:
	.loc	0 637 52                        # x264_src/encoder/me.c:637:52
	movl	%ecx, (%r15,%r14,8)
	movzwl	4(%rdi,%r12,2), %eax
	.loc	0 638 56 is_stmt 1              # x264_src/encoder/me.c:638:56
	addw	400(%rsp), %ax                  # 2-byte Folded Reload
	.loc	0 638 54 is_stmt 0              # x264_src/encoder/me.c:638:54
	movw	%ax, 4(%r15,%r14,8)
	.loc	0 639 54 is_stmt 1              # x264_src/encoder/me.c:639:54
	movw	%r8w, 6(%r15,%r14,8)
	.loc	0 640 39                        # x264_src/encoder/me.c:640:39
	incl	%r14d
.Ltmp500:
	#DEBUG_VALUE: nmvsad <- $r14d
	.loc	0 0 39 is_stmt 0                # x264_src/encoder/me.c:0:39
	jmp	.LBB0_105
.Ltmp501:
	.p2align	4, 0x90
.LBB0_113:                              #   in Loop: Header=BB0_102 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 280, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 240, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	movq	352(%rsp), %rdi                 # 8-byte Reload
	movq	240(%rsp), %rsi                 # 8-byte Reload
.Ltmp502:
	#DEBUG_VALUE: i <- $r12d
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: nmvsad <- $r14d
	.loc	0 644 30 is_stmt 1              # x264_src/encoder/me.c:644:30
	cmpl	%eax, %r12d
.Ltmp503:
	.loc	0 644 21 is_stmt 0              # x264_src/encoder/me.c:644:21
	jl	.LBB0_115
	jmp	.LBB0_100
.Ltmp504:
	.p2align	4, 0x90
.LBB0_114:                              # %for.cond3809.preheader.loopexit
                                        #   in Loop: Header=BB0_102 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 280, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 240, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r12
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	240(%rsp), %rsi                 # 8-byte Reload
	movq	144(%rsp), %r13                 # 8-byte Reload
	movq	280(%rsp), %rax                 # 8-byte Reload
.Ltmp505:
	#DEBUG_VALUE: i <- $r12d
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: nmvsad <- $r14d
	.loc	0 644 30                        # x264_src/encoder/me.c:644:30
	cmpl	%eax, %r12d
.Ltmp506:
	.loc	0 644 21                        # x264_src/encoder/me.c:644:21
	jge	.LBB0_100
.Ltmp507:
.LBB0_115:                              # %for.body3812.lr.ph
                                        #   in Loop: Header=BB0_102 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 280, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 240, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r12d
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	addq	136(%rsp), %r13                 # 8-byte Folded Reload
	movq	%r13, 144(%rsp)                 # 8-byte Spill
	.loc	0 644 21                        # x264_src/encoder/me.c:644:21
	movl	%r12d, %eax
	leaq	(%rdi,%rax,2), %r13
	jmp	.LBB0_118
.Ltmp508:
	.p2align	4, 0x90
.LBB0_116:                              # %if.then3839
                                        #   in Loop: Header=BB0_118 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 280, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 240, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: mx <- $ebx
	#DEBUG_VALUE: sad <- $ecx
	.loc	0 651 29 is_stmt 1              # x264_src/encoder/me.c:651:29
	cmpl	%ebp, %ecx
	cmovll	%ecx, %ebp
.Ltmp509:
	#DEBUG_VALUE: bsad <- $ebp
	.loc	0 652 54                        # x264_src/encoder/me.c:652:54
	addl	48(%rsp), %ecx                  # 4-byte Folded Reload
.Ltmp510:
	.loc	0 652 29 is_stmt 0              # x264_src/encoder/me.c:652:29
	movslq	%r14d, %r14
.Ltmp511:
	.loc	0 652 48                        # x264_src/encoder/me.c:652:48
	movl	%ecx, (%r15,%r14,8)
	.loc	0 653 50 is_stmt 1              # x264_src/encoder/me.c:653:50
	movw	%bx, 4(%r15,%r14,8)
	movq	240(%rsp), %rsi                 # 8-byte Reload
	.loc	0 654 50                        # x264_src/encoder/me.c:654:50
	movw	%si, 6(%r15,%r14,8)
	.loc	0 655 35                        # x264_src/encoder/me.c:655:35
	incl	%r14d
.Ltmp512:
	#DEBUG_VALUE: nmvsad <- $r14d
.LBB0_117:                              # %if.end3859
                                        #   in Loop: Header=BB0_118 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 280, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 240, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	.loc	0 0 35 is_stmt 0                # x264_src/encoder/me.c:0:35
	movq	280(%rsp), %rax                 # 8-byte Reload
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: nmvsad <- $r14d
.Ltmp513:
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 1, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 7, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef
	.loc	0 644 30 is_stmt 1              # x264_src/encoder/me.c:644:30
	incl	%r12d
	addq	$2, %r13
	cmpl	%r12d, %eax
.Ltmp514:
	.loc	0 644 21 is_stmt 0              # x264_src/encoder/me.c:644:21
	jle	.LBB0_100
.Ltmp515:
.LBB0_118:                              # %for.body3812
                                        #   Parent Loop BB0_102 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 280, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 240, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 7, DW_OP_plus, DW_OP_stack_value] undef, undef
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: nmvsad <- $r14d
	.loc	0 646 40 is_stmt 1              # x264_src/encoder/me.c:646:40
	movswq	(%r13), %rbx
	.loc	0 646 39 is_stmt 0              # x264_src/encoder/me.c:646:39
	addq	288(%rsp), %rbx                 # 8-byte Folded Reload
.Ltmp516:
	#DEBUG_VALUE: mx <- $ebx
	.loc	0 0 39                          # x264_src/encoder/me.c:0:39
	movq	144(%rsp), %rax                 # 8-byte Reload
	.loc	0 647 89 is_stmt 1              # x264_src/encoder/me.c:647:89
	leaq	(%rax,%rbx), %rdx
	movq	56(%rsp), %rdi                  # 8-byte Reload
	.loc	0 647 35 is_stmt 0              # x264_src/encoder/me.c:647:35
	movl	$16, %esi
	movq	64(%rsp), %rcx                  # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	104(%rsp), %rax                 # 8-byte Reload
	movq	72(%rsp), %r8                   # 8-byte Reload
	callq	*31560(%rax,%r8,8)
.Ltmp517:
	.loc	0 648 49 is_stmt 1              # x264_src/encoder/me.c:648:49
	movswq	(%r13), %rcx
	movq	32(%rsp), %rdx                  # 8-byte Reload
	.loc	0 648 35 is_stmt 0              # x264_src/encoder/me.c:648:35
	movzwl	(%rdx,%rcx,2), %ecx
	.loc	0 648 33                        # x264_src/encoder/me.c:648:33
	addl	%eax, %ecx
.Ltmp518:
	#DEBUG_VALUE: sad <- $ecx
	.loc	0 649 39 is_stmt 1              # x264_src/encoder/me.c:649:39
	movl	%ebp, %eax
	imull	152(%rsp), %eax                 # 4-byte Folded Reload
	.loc	0 649 50 is_stmt 0              # x264_src/encoder/me.c:649:50
	sarl	$3, %eax
	.loc	0 649 33                        # x264_src/encoder/me.c:649:33
	cmpl	%eax, %ecx
.Ltmp519:
	.loc	0 649 29                        # x264_src/encoder/me.c:649:29
	jl	.LBB0_116
.Ltmp520:
# %bb.119:                              #   in Loop: Header=BB0_118 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 280, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: bsad <- $ebp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 240, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: mx <- $ebx
	#DEBUG_VALUE: sad <- $ecx
	.loc	0 0 29                          # x264_src/encoder/me.c:0:29
	movq	240(%rsp), %rsi                 # 8-byte Reload
	jmp	.LBB0_117
.Ltmp521:
.LBB0_120:                              # %for.cond3950.preheader.loopexit
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $rax
	movl	%eax, %r14d
	movl	128(%rsp), %r8d                 # 4-byte Reload
	movq	24(%rsp), %r10                  # 8-byte Reload
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
.Ltmp522:
	#DEBUG_VALUE: i <- 0
	.loc	0 702 35 is_stmt 1              # x264_src/encoder/me.c:702:35
	testl	%r14d, %r14d
.Ltmp523:
	.loc	0 702 17 is_stmt 0              # x264_src/encoder/me.c:702:17
	jg	.LBB0_151
	jmp	.LBB0_153
.Ltmp524:
.LBB0_121:                              # %for.body4019.lr.ph
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: max_y <- [DW_OP_plus_uconst 344, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: sums_base <- $rdx
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	288(%rsp), %rcx                 # 8-byte Reload
	leaq	(%rdx,%rcx,2), %rdx
.Ltmp525:
	movq	%rdx, 280(%rsp)                 # 8-byte Spill
	movq	32(%rsp), %rdx                  # 8-byte Reload
	leaq	(%rdx,%rcx,2), %rcx
	movq	%rcx, 320(%rsp)                 # 8-byte Spill
.Ltmp526:
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- undef
	movq	392(%rsp), %rcx                 # 8-byte Reload
	movl	240(%rsp), %edx                 # 4-byte Reload
.Ltmp527:
	.loc	0 708 17 is_stmt 1              # x264_src/encoder/me.c:708:17
	cmpl	%edx, %ecx
	cmovgl	%ecx, %edx
	movslq	%edx, %rdi
	addl	%edi, %eax
	subl	%esi, %eax
	incl	%eax
	movq	24(%rsp), %r10                  # 8-byte Reload
	movq	%rax, 344(%rsp)                 # 8-byte Spill
.Ltmp528:
	#DEBUG_VALUE: max_y <- undef
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	jmp	.LBB0_125
.Ltmp529:
	.p2align	4, 0x90
.LBB0_122:                              #   in Loop: Header=BB0_125 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- $rdi
	#DEBUG_VALUE: ycost <- $ecx
	movq	112(%rsp), %rbp                 # 8-byte Reload
.Ltmp530:
.LBB0_123:                              # %cleanup4194
                                        #   in Loop: Header=BB0_125 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- $rdi
	movq	80(%rsp), %r13                  # 8-byte Reload
.Ltmp531:
.LBB0_124:                              # %cleanup4194
                                        #   in Loop: Header=BB0_125 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r13d
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r13d
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	movq	%r13, 80(%rsp)                  # 8-byte Spill
.Ltmp532:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	movq	%rbp, 112(%rsp)                 # 8-byte Spill
.Ltmp533:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	.loc	0 708 53                        # x264_src/encoder/me.c:708:53
	incq	%rdi
.Ltmp534:
	#DEBUG_VALUE: my <- $rdi
	.loc	0 0 53                          # x264_src/encoder/me.c:0:53
	movq	344(%rsp), %rax                 # 8-byte Reload
	.loc	0 708 41                        # x264_src/encoder/me.c:708:41
	cmpl	%edi, %eax
	movq	64(%rsp), %r13                  # 8-byte Reload
.Ltmp535:
	.loc	0 708 17                        # x264_src/encoder/me.c:708:17
	je	.LBB0_153
.Ltmp536:
.LBB0_125:                              # %for.body4019
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_129 Depth 2
                                        #     Child Loop BB0_139 Depth 2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: my <- $rdi
	.loc	0 711 46 is_stmt 1              # x264_src/encoder/me.c:711:46
	leal	(,%rdi,4), %eax
	.loc	0 711 33 is_stmt 0              # x264_src/encoder/me.c:711:33
	cltq
	movzwl	(%r10,%rax,2), %ecx
.Ltmp537:
	#DEBUG_VALUE: ycost <- $ecx
	.loc	0 712 31 is_stmt 1              # x264_src/encoder/me.c:712:31
	movl	%r8d, %r12d
	subl	%ecx, %r12d
.Ltmp538:
	.loc	0 712 25 is_stmt 0              # x264_src/encoder/me.c:712:25
	jle	.LBB0_122
.Ltmp539:
# %bb.126:                              # %if.end4029
                                        #   in Loop: Header=BB0_125 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- $rdi
	#DEBUG_VALUE: ycost <- $ecx
	#DEBUG_VALUE: x264_me_search_ref:bcost <- undef
	.loc	0 0 25                          # x264_src/encoder/me.c:0:25
	movl	%ecx, 144(%rsp)                 # 4-byte Spill
.Ltmp540:
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	movq	%rax, 152(%rsp)                 # 8-byte Spill
	movq	%r10, %r15
	movq	%rdi, 32(%rsp)                  # 8-byte Spill
.Ltmp541:
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 715 79 is_stmt 1              # x264_src/encoder/me.c:715:79
	movq	%rdi, %rbx
	imulq	%r13, %rbx
	movq	280(%rsp), %rax                 # 8-byte Reload
	.loc	0 715 74 is_stmt 0              # x264_src/encoder/me.c:715:74
	leaq	(%rax,%rbx,2), %rsi
	.loc	0 715 26                        # x264_src/encoder/me.c:715:26
	movl	%r12d, (%rsp)
	leaq	608(%rsp), %rdi
	movq	264(%rsp), %rdx                 # 8-byte Reload
                                        # kill: def $edx killed $edx killed $rdx
	movq	320(%rsp), %rcx                 # 8-byte Reload
	movq	352(%rsp), %r8                  # 8-byte Reload
	movq	336(%rsp), %r9                  # 8-byte Reload
                                        # kill: def $r9d killed $r9d killed $r9
	movq	104(%rsp), %r13                 # 8-byte Reload
	movq	72(%rsp), %rax                  # 8-byte Reload
	callq	*32464(%r13,%rax,8)
.Ltmp542:
                                        # kill: def $eax killed $eax def $rax
	#DEBUG_VALUE: xn <- $eax
	#DEBUG_VALUE: i <- 0
	.loc	0 0 26                          # x264_src/encoder/me.c:0:26
	xorl	%r14d, %r14d
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
.Ltmp543:
	.loc	0 717 35 is_stmt 1              # x264_src/encoder/me.c:717:35
	cmpl	$3, %eax
	movq	%rax, 240(%rsp)                 # 8-byte Spill
.Ltmp544:
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	.loc	0 0 35 is_stmt 0                # x264_src/encoder/me.c:0:35
	movq	%rbx, 48(%rsp)                  # 8-byte Spill
.Ltmp545:
	.loc	0 717 21                        # x264_src/encoder/me.c:717:21
	jl	.LBB0_135
.Ltmp546:
# %bb.127:                              # %for.body4048.preheader
                                        #   in Loop: Header=BB0_125 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	leal	-2(%rax), %r13d
	movq	136(%rsp), %rax                 # 8-byte Reload
	leaq	(%rax,%rbx), %rbp
	xorl	%r14d, %r14d
	movq	112(%rsp), %rbx                 # 8-byte Reload
	movq	352(%rsp), %rdi                 # 8-byte Reload
	movl	400(%rsp), %r15d                # 4-byte Reload
	jmp	.LBB0_129
.Ltmp547:
	.p2align	4, 0x90
.LBB0_128:                              # %for.inc4147
                                        #   in Loop: Header=BB0_129 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebx
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	.loc	0 717 45                        # x264_src/encoder/me.c:717:45
	addq	$3, %r14
.Ltmp548:
	#DEBUG_VALUE: i <- $r14
	.loc	0 717 35                        # x264_src/encoder/me.c:717:35
	cmpl	%r14d, %r13d
.Ltmp549:
	.loc	0 717 21                        # x264_src/encoder/me.c:717:21
	jle	.LBB0_136
.Ltmp550:
.LBB0_129:                              # %for.body4048
                                        #   Parent Loop BB0_125 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebx
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebx
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: i <- $r14
	.loc	0 718 25 is_stmt 1              # x264_src/encoder/me.c:718:25
	movswq	(%rdi,%r14,2), %rsi
	movq	288(%rsp), %rax                 # 8-byte Reload
	addq	%rax, %rsi
	addq	%rbp, %rsi
	movswq	2(%rdi,%r14,2), %rdx
	addq	%rax, %rdx
	addq	%rbp, %rdx
	movswq	4(%rdi,%r14,2), %rcx
	addq	%rax, %rcx
	addq	%rbp, %rcx
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movq	64(%rsp), %r8                   # 8-byte Reload
                                        # kill: def $r8d killed $r8d killed $r8
	leaq	160(%rsp), %r9
	movq	72(%rsp), %rax                  # 8-byte Reload
	movq	104(%rsp), %r10                 # 8-byte Reload
	callq	*31984(%r10,%rax,8)
.Ltmp551:
	.loc	0 0 25 is_stmt 0                # x264_src/encoder/me.c:0:25
	movq	352(%rsp), %rdi                 # 8-byte Reload
	.loc	0 718 25                        # x264_src/encoder/me.c:718:25
	movswl	(%rdi,%r14,2), %eax
	addl	%r15d, %eax
	shll	$2, %eax
	cltq
	movq	40(%rsp), %rsi                  # 8-byte Reload
	movzwl	(%rsi,%rax,2), %edx
	addl	160(%rsp), %edx
	movl	%edx, 160(%rsp)
	movswl	2(%rdi,%r14,2), %eax
	addl	%r15d, %eax
	shll	$2, %eax
	cltq
	movzwl	(%rsi,%rax,2), %ecx
	addl	164(%rsp), %ecx
	movl	%ecx, 164(%rsp)
	movswl	4(%rdi,%r14,2), %eax
	addl	%r15d, %eax
	shll	$2, %eax
	cltq
	movzwl	(%rsi,%rax,2), %eax
	addl	168(%rsp), %eax
	movl	%eax, 168(%rsp)
.Ltmp552:
	.loc	0 718 25                        # x264_src/encoder/me.c:718:25
	cmpl	%r12d, %edx
	movq	32(%rsp), %r8                   # 8-byte Reload
.Ltmp553:
	.loc	0 718 25                        # x264_src/encoder/me.c:718:25
	jge	.LBB0_130
.Ltmp554:
# %bb.132:                              # %if.then4118
                                        #   in Loop: Header=BB0_129 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebx
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edx
	.loc	0 718 25                        # x264_src/encoder/me.c:718:25
	movswl	(%rdi,%r14,2), %esi
	addl	%r15d, %esi
.Ltmp555:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $esi
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 0 25                          # x264_src/encoder/me.c:0:25
	movq	%rsi, 80(%rsp)                  # 8-byte Spill
.Ltmp556:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	movl	%edx, %r12d
.Ltmp557:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	movl	%r8d, %ebx
.Ltmp558:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebx
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	.loc	0 718 25                        # x264_src/encoder/me.c:718:25
	cmpl	%r12d, %ecx
.Ltmp559:
	.loc	0 718 25                        # x264_src/encoder/me.c:718:25
	jl	.LBB0_133
.Ltmp560:
.LBB0_131:                              # %if.end4135
                                        #   in Loop: Header=BB0_129 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebx
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebx
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	.loc	0 718 25                        # x264_src/encoder/me.c:718:25
	cmpl	%r12d, %eax
.Ltmp561:
	.loc	0 718 25                        # x264_src/encoder/me.c:718:25
	jge	.LBB0_128
	jmp	.LBB0_134
.Ltmp562:
	.p2align	4, 0x90
.LBB0_130:                              # %if.end4124
                                        #   in Loop: Header=BB0_129 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebx
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebx
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	.loc	0 718 25                        # x264_src/encoder/me.c:718:25
	cmpl	%r12d, %ecx
.Ltmp563:
	.loc	0 718 25                        # x264_src/encoder/me.c:718:25
	jge	.LBB0_131
.Ltmp564:
.LBB0_133:                              # %if.then4128
                                        #   in Loop: Header=BB0_129 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebx
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ecx
	.loc	0 718 25                        # x264_src/encoder/me.c:718:25
	movswl	2(%rdi,%r14,2), %edx
	addl	%r15d, %edx
.Ltmp565:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $edx
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 0 25                          # x264_src/encoder/me.c:0:25
	movq	%rdx, 80(%rsp)                  # 8-byte Spill
.Ltmp566:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	movl	%ecx, %r12d
.Ltmp567:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	movl	%r8d, %ebx
.Ltmp568:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebx
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	.loc	0 718 25                        # x264_src/encoder/me.c:718:25
	cmpl	%r12d, %eax
.Ltmp569:
	.loc	0 718 25                        # x264_src/encoder/me.c:718:25
	jge	.LBB0_128
.Ltmp570:
.LBB0_134:                              # %if.then4139
                                        #   in Loop: Header=BB0_129 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebx
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	.loc	0 718 25                        # x264_src/encoder/me.c:718:25
	movswl	4(%rdi,%r14,2), %ecx
	addl	%r15d, %ecx
.Ltmp571:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $ecx
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 0 25                          # x264_src/encoder/me.c:0:25
	movq	%rcx, 80(%rsp)                  # 8-byte Spill
.Ltmp572:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	movl	%eax, %r12d
.Ltmp573:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	movl	%r8d, %ebx
	jmp	.LBB0_128
.Ltmp574:
	.p2align	4, 0x90
.LBB0_135:                              #   in Loop: Header=BB0_125 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	movq	112(%rsp), %rbx                 # 8-byte Reload
	movq	%r15, %r10
	movl	400(%rsp), %r15d                # 4-byte Reload
	movq	32(%rsp), %rdi                  # 8-byte Reload
	.loc	0 717 21 is_stmt 1              # x264_src/encoder/me.c:717:21
	jmp	.LBB0_137
.Ltmp575:
	.p2align	4, 0x90
.LBB0_136:                              # %for.end4149.loopexit
                                        #   in Loop: Header=BB0_125 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebx
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r14
	.loc	0 0 21 is_stmt 0                # x264_src/encoder/me.c:0:21
	movq	24(%rsp), %r10                  # 8-byte Reload
	movq	32(%rsp), %rdi                  # 8-byte Reload
	movq	240(%rsp), %rax                 # 8-byte Reload
.Ltmp576:
.LBB0_137:                              # %for.end4149
                                        #   in Loop: Header=BB0_125 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebx
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	movq	%rbx, %rbp
	.loc	0 719 27 is_stmt 1              # x264_src/encoder/me.c:719:27
	movl	%r12d, %r8d
	addl	144(%rsp), %r8d                 # 4-byte Folded Reload
.Ltmp577:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebx
	#DEBUG_VALUE: i <- $r14d
	.loc	0 720 30                        # x264_src/encoder/me.c:720:30
	cmpl	%eax, %r14d
.Ltmp578:
	.loc	0 720 21 is_stmt 0              # x264_src/encoder/me.c:720:21
	jge	.LBB0_123
.Ltmp579:
# %bb.138:                              # %for.body4154.lr.ph
                                        #   in Loop: Header=BB0_125 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebx
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r14d
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	48(%rsp), %r9                   # 8-byte Reload
	addl	%r15d, %r9d
	.loc	0 720 21                        # x264_src/encoder/me.c:720:21
	movl	%r14d, %eax
	movq	352(%rsp), %rcx                 # 8-byte Reload
	leaq	(%rcx,%rax,2), %r12
	movq	80(%rsp), %r13                  # 8-byte Reload
	movq	%r9, 48(%rsp)                   # 8-byte Spill
.Ltmp580:
	.p2align	4, 0x90
.LBB0_139:                              # %for.body4154
                                        #   Parent Loop BB0_125 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r13d
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: my <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: ycost <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: xn <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r13d
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 7, DW_OP_plus, DW_OP_stack_value] undef, undef
	.loc	0 721 25 is_stmt 1              # x264_src/encoder/me.c:721:25
	movswl	(%r12), %eax
	addl	%r9d, %eax
	movslq	%eax, %rdx
	addq	136(%rsp), %rdx                 # 8-byte Folded Reload
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movq	64(%rsp), %rcx                  # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx
	movl	%r8d, %ebx
.Ltmp581:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebx
	.loc	0 0 25 is_stmt 0                # x264_src/encoder/me.c:0:25
	movq	%r10, %r15
	movq	72(%rsp), %rax                  # 8-byte Reload
	movq	104(%rsp), %r8                  # 8-byte Reload
	.loc	0 721 25                        # x264_src/encoder/me.c:721:25
	callq	*31928(%r8,%rax,8)
.Ltmp582:
	.loc	0 0 25                          # x264_src/encoder/me.c:0:25
	movq	32(%rsp), %rdi                  # 8-byte Reload
	movq	%r15, %r10
	movl	%ebx, %r8d
	movq	48(%rsp), %r9                   # 8-byte Reload
	.loc	0 721 25                        # x264_src/encoder/me.c:721:25
	movswl	(%r12), %ecx
	addl	400(%rsp), %ecx                 # 4-byte Folded Reload
	leal	(,%rcx,4), %edx
	movslq	%edx, %rdx
	movq	40(%rsp), %rsi                  # 8-byte Reload
	movzwl	(%rsi,%rdx,2), %edx
	movq	152(%rsp), %rsi                 # 8-byte Reload
	movzwl	(%r15,%rsi,2), %esi
	addl	%eax, %edx
	addl	%esi, %edx
.Ltmp583:
	#DEBUG_VALUE: cost <- $edx
	.loc	0 721 25                        # x264_src/encoder/me.c:721:25
	cmpl	%ebx, %edx
.Ltmp584:
	.loc	0 721 25                        # x264_src/encoder/me.c:721:25
	cmovll	%edx, %r8d
	cmovll	%edi, %ebp
.Ltmp585:
	cmovll	%ecx, %r13d
.Ltmp586:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 1, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 7, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	.loc	0 720 30 is_stmt 1              # x264_src/encoder/me.c:720:30
	incl	%r14d
	addq	$2, %r12
	cmpl	%r14d, 240(%rsp)                # 4-byte Folded Reload
.Ltmp587:
	.loc	0 720 21 is_stmt 0              # x264_src/encoder/me.c:720:21
	jg	.LBB0_139
	jmp	.LBB0_124
.Ltmp588:
.LBB0_141:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r12d
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r10d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: cross_start <- 1
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	%r12, 80(%rsp)                  # 8-byte Spill
.Ltmp589:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	movq	%rbp, 112(%rsp)                 # 8-byte Spill
.Ltmp590:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	movq	264(%rsp), %r8                  # 8-byte Reload
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r10d
.Ltmp591:
	.loc	0 391 25 is_stmt 1              # x264_src/encoder/me.c:391:25
	cmpl	$6, 72(%rsp)                    # 4-byte Folded Reload
	movq	336(%rsp), %r12                 # 8-byte Reload
.Ltmp592:
	.loc	0 391 17 is_stmt 0              # x264_src/encoder/me.c:391:17
	je	.LBB0_35
.Ltmp593:
.LBB0_142:                              # %if.end1271
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r10d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: cross_start <- 1
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: ucost2 <- $r10d
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	80(%rsp), %rdx                  # 8-byte Reload
.Ltmp594:
	.loc	0 395 22 is_stmt 1              # x264_src/encoder/me.c:395:22
	movl	%edx, %eax
	movq	112(%rsp), %rcx                 # 8-byte Reload
	orl	%ecx, %eax
	.loc	0 395 29 is_stmt 0              # x264_src/encoder/me.c:395:29
	je	.LBB0_155
.Ltmp595:
# %bb.143:                              # %land.lhs.true1274
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r10d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: cross_start <- 1
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: ucost2 <- $r10d
	.loc	0 395 43                        # x264_src/encoder/me.c:395:43
	cmpl	%r14d, %ecx
	movq	280(%rsp), %rdx                 # 8-byte Reload
.Ltmp596:
	.loc	0 395 17                        # x264_src/encoder/me.c:395:17
	jne	.LBB0_145
.Ltmp597:
# %bb.144:                              # %land.lhs.true1274
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r10d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: cross_start <- 1
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: ucost2 <- $r10d
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	512(%rsp), %rax                 # 8-byte Reload
	movl	%eax, %ecx
	movq	%rcx, 32(%rsp)                  # 8-byte Spill
.Ltmp598:
	#DEBUG_VALUE: x264_me_search_ref:pmv <- undef
	movl	%r14d, %r15d
	.loc	0 395 17                        # x264_src/encoder/me.c:395:17
	cmpl	%eax, 80(%rsp)                  # 4-byte Folded Reload
	je	.LBB0_156
.Ltmp599:
.LBB0_145:                              # %if.end1391
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r10d
	#DEBUG_VALUE: cross_start <- 1
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: ucost2 <- $r10d
	#DEBUG_VALUE: x264_me_search_ref:omx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	80(%rsp), %r15                  # 8-byte Reload
.Ltmp600:
	.loc	0 396 17 is_stmt 1              # x264_src/encoder/me.c:396:17
	movslq	%r15d, %rax
	addq	136(%rsp), %rax                 # 8-byte Folded Reload
	movq	112(%rsp), %r14                 # 8-byte Reload
	movl	%r14d, %ecx
	movq	%r13, %r9
	imull	%r9d, %ecx
	movslq	%ecx, %rdi
	leaq	(%rax,%rdi), %rdx
.Ltmp601:
	#DEBUG_VALUE: pix_base <- $rdx
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	movq	464(%rsp), %rcx                 # 8-byte Reload
	.loc	0 396 17                        # x264_src/encoder/me.c:396:17
	leaq	(%rdx,%rcx), %rsi
	addq	%r13, %rdx
.Ltmp602:
	leaq	(%rdi,%rax), %rcx
	decq	%rcx
	leaq	1(%rdi,%rax), %r8
	leaq	160(%rsp), %rax
	movq	%rax, (%rsp)
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movl	%r10d, %ebp
.Ltmp603:
	#DEBUG_VALUE: ucost2 <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
                                        # kill: def $r9d killed $r9d killed $r9
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	72(%rsp), %rax                  # 8-byte Reload
	.loc	0 396 17                        # x264_src/encoder/me.c:396:17
	callq	*32040(%rbx,%rax,8)
.Ltmp604:
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	24(%rsp), %r9                   # 8-byte Reload
	.loc	0 396 17                        # x264_src/encoder/me.c:396:17
	leal	(,%r15,4), %eax
	movslq	%eax, %rcx
	movq	40(%rsp), %r8                   # 8-byte Reload
	movzwl	(%r8,%rcx,2), %edx
	leal	-4(,%r14,4), %eax
	cltq
	movzwl	(%r9,%rax,2), %eax
	addl	%edx, %eax
	addl	160(%rsp), %eax
	movl	%eax, 160(%rsp)
	movzwl	(%r8,%rcx,2), %ecx
	leal	4(,%r14,4), %edx
	movslq	%edx, %rdx
	movzwl	(%r9,%rdx,2), %edx
	addl	%ecx, %edx
	addl	164(%rsp), %edx
	movl	%edx, 164(%rsp)
	leal	-4(,%r15,4), %ecx
	movslq	%ecx, %rcx
	movzwl	(%r8,%rcx,2), %esi
	leal	(,%r14,4), %ecx
	movslq	%ecx, %rdi
	movzwl	(%r9,%rdi,2), %ecx
	addl	%esi, %ecx
	addl	168(%rsp), %ecx
	movl	%ecx, 168(%rsp)
	leal	4(,%r15,4), %esi
	movslq	%esi, %rsi
	movzwl	(%r8,%rsi,2), %r8d
	movzwl	(%r9,%rdi,2), %esi
	movl	%ebp, %r10d
	addl	%r8d, %esi
	addl	172(%rsp), %esi
	leal	-1(%r14), %r8d
.Ltmp605:
	.loc	0 396 17                        # x264_src/encoder/me.c:396:17
	cmpl	%ebp, %eax
.Ltmp606:
	.loc	0 396 17                        # x264_src/encoder/me.c:396:17
	cmovgel	%ebp, %eax
	leal	1(%r14), %edi
	cmovgel	%r14d, %r8d
.Ltmp607:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	.loc	0 396 17                        # x264_src/encoder/me.c:396:17
	cmpl	%eax, %edx
.Ltmp608:
	.loc	0 396 17                        # x264_src/encoder/me.c:396:17
	cmovll	%edx, %eax
.Ltmp609:
	cmovll	%edi, %r8d
.Ltmp610:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	.loc	0 396 17                        # x264_src/encoder/me.c:396:17
	cmpl	%eax, %ecx
.Ltmp611:
	.loc	0 396 17                        # x264_src/encoder/me.c:396:17
	movl	%eax, %r11d
	cmovll	%ecx, %r11d
.Ltmp612:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 396 17                        # x264_src/encoder/me.c:396:17
	cmpl	%r11d, %esi
.Ltmp613:
	.loc	0 396 17                        # x264_src/encoder/me.c:396:17
	cmovll	%r14d, %r8d
.Ltmp614:
	.loc	0 396 17                        # x264_src/encoder/me.c:396:17
	cmpl	%eax, %ecx
.Ltmp615:
	.loc	0 396 17                        # x264_src/encoder/me.c:396:17
	cmovll	%r14d, %r8d
.Ltmp616:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:bcost <- undef
	#DEBUG_VALUE: x264_me_search_ref:omy <- $r8d
	leal	-1(%r15), %edx
.Ltmp617:
	.loc	0 396 17                        # x264_src/encoder/me.c:396:17
	cmpl	%eax, %ecx
.Ltmp618:
	.loc	0 396 17                        # x264_src/encoder/me.c:396:17
	cmovgel	%r15d, %edx
.Ltmp619:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $edx
	incl	%r15d
.Ltmp620:
	.loc	0 396 17                        # x264_src/encoder/me.c:396:17
	cmpl	%r11d, %esi
.Ltmp621:
	.loc	0 396 17                        # x264_src/encoder/me.c:396:17
	movl	%esi, 172(%rsp)
	cmovll	%esi, %r11d
.Ltmp622:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	cmovgel	%edx, %r15d
.Ltmp623:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r15d
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	280(%rsp), %rdx                 # 8-byte Reload
	movl	$1, %ebp
.Ltmp624:
	#DEBUG_VALUE: ucost2 <- $r10d
	#DEBUG_VALUE: x264_me_search_ref:omx <- $r15d
	movq	%r15, 80(%rsp)                  # 8-byte Spill
.Ltmp625:
	#DEBUG_VALUE: x264_me_search_ref:omx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
                                        # kill: def $r15d killed $r15d killed $r15 def $r15
	movq	%r15, 32(%rsp)                  # 8-byte Spill
	movq	%r8, %r15
	movq	264(%rsp), %r8                  # 8-byte Reload
.Ltmp626:
	movl	%r15d, %eax
	movq	%rax, 112(%rsp)                 # 8-byte Spill
.Ltmp627:
	.loc	0 397 23 is_stmt 1              # x264_src/encoder/me.c:397:23
	cmpl	%r10d, %r11d
.Ltmp628:
	#DEBUG_VALUE: cross_start <- undef
	.loc	0 403 33                        # x264_src/encoder/me.c:403:33
	je	.LBB0_156
	jmp	.LBB0_161
.Ltmp629:
.LBB0_146:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r12d
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $esi
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/me.c:0:33
	movl	%esi, 128(%rsp)                 # 4-byte Spill
.Ltmp630:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
.LBB0_147:                              # %do.end
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r12d
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $esi
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r12d
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	movq	%r12, 80(%rsp)                  # 8-byte Spill
.Ltmp631:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	movq	%rbp, 112(%rsp)                 # 8-byte Spill
.Ltmp632:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	movl	128(%rsp), %ebp                 # 4-byte Reload
.Ltmp633:
	.loc	0 294 19 is_stmt 1              # x264_src/encoder/me.c:294:19
	sarl	$4, %ebp
.Ltmp634:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
.LBB0_148:                              # %sw.epilog
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	.loc	0 0 19 is_stmt 0                # x264_src/encoder/me.c:0:19
	movq	104(%rsp), %rbx                 # 8-byte Reload
	jmp	.LBB0_168
.Ltmp635:
.LBB0_149:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: sad_thresh <- $r12d
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	movq	24(%rsp), %r10                  # 8-byte Reload
	#DEBUG_VALUE: nmvsad <- $r14d
.Ltmp636:
	.loc	0 690 31 is_stmt 1              # x264_src/encoder/me.c:690:31
	cmpl	%edx, %r14d
	.loc	0 690 17 is_stmt 0              # x264_src/encoder/me.c:690:17
	jg	.LBB0_74
.Ltmp637:
.LBB0_150:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: nmvsad <- $r14d
	#DEBUG_VALUE: bsad <- $ecx
	#DEBUG_VALUE: limit <- $edx
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movl	128(%rsp), %r8d                 # 4-byte Reload
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
.Ltmp638:
	#DEBUG_VALUE: i <- 0
	.loc	0 702 35 is_stmt 1              # x264_src/encoder/me.c:702:35
	testl	%r14d, %r14d
.Ltmp639:
	.loc	0 702 17 is_stmt 0              # x264_src/encoder/me.c:702:17
	jle	.LBB0_153
.Ltmp640:
.LBB0_151:                              # %for.body3954.lr.ph
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvsads <- $r15
	#DEBUG_VALUE: i <- 0
	.loc	0 702 35                        # x264_src/encoder/me.c:702:35
	movl	%r14d, %r14d
	movq	352(%rsp), %rax                 # 8-byte Reload
	movq	312(%rsp), %rcx                 # 8-byte Reload
.Ltmp641:
	.loc	0 702 17                        # x264_src/encoder/me.c:702:17
	leaq	(%rax,%rcx,2), %rbx
	addq	$6, %rbx
	xorl	%r15d, %r15d
.Ltmp642:
	.p2align	4, 0x90
.LBB0_152:                              # %for.body3954
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: min_x <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: width <- [DW_OP_plus_uconst 336, DW_OP_deref] $rsp
	#DEBUG_VALUE: delta <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: xs <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost_fpel_mvx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: i <- $r15
	.loc	0 703 21 is_stmt 1              # x264_src/encoder/me.c:703:21
	movswq	(%rbx,%r15,8), %rax
	movq	%r13, %rcx
	imulq	%r13, %rax
	movswq	-2(%rbx,%r15,8), %rdx
	addq	136(%rsp), %rdx                 # 8-byte Folded Reload
	addq	%rax, %rdx
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	104(%rsp), %rax                 # 8-byte Reload
	movl	%r8d, %ebp
.Ltmp643:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	.loc	0 0 21 is_stmt 0                # x264_src/encoder/me.c:0:21
	movq	72(%rsp), %r8                   # 8-byte Reload
	.loc	0 703 21                        # x264_src/encoder/me.c:703:21
	callq	*31928(%rax,%r8,8)
.Ltmp644:
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	24(%rsp), %r10                  # 8-byte Reload
	movl	%ebp, %r8d
	.loc	0 703 21                        # x264_src/encoder/me.c:703:21
	movswl	-2(%rbx,%r15,8), %ecx
	movslq	%ecx, %rcx
	movq	40(%rsp), %rdx                  # 8-byte Reload
	movzwl	(%rdx,%rcx,8), %edx
	movswl	(%rbx,%r15,8), %esi
	movslq	%esi, %rsi
	movzwl	(%r10,%rsi,8), %edi
	addl	%edx, %edi
	addl	%eax, %edi
.Ltmp645:
	#DEBUG_VALUE: cost <- $edi
	.loc	0 703 21                        # x264_src/encoder/me.c:703:21
	cmpl	%ebp, %edi
.Ltmp646:
	.loc	0 703 21                        # x264_src/encoder/me.c:703:21
	cmovll	%edi, %r8d
	movq	112(%rsp), %rax                 # 8-byte Reload
	cmovll	%esi, %eax
	movq	%rax, 112(%rsp)                 # 8-byte Spill
.Ltmp647:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	80(%rsp), %rax                  # 8-byte Reload
	.loc	0 703 21                        # x264_src/encoder/me.c:703:21
	cmovll	%ecx, %eax
.Ltmp648:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	%rax, 80(%rsp)                  # 8-byte Spill
.Ltmp649:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	.loc	0 702 46 is_stmt 1              # x264_src/encoder/me.c:702:46
	incq	%r15
.Ltmp650:
	#DEBUG_VALUE: i <- $r15
	.loc	0 702 35 is_stmt 0              # x264_src/encoder/me.c:702:35
	cmpq	%r15, %r14
.Ltmp651:
	.loc	0 702 17                        # x264_src/encoder/me.c:702:17
	jne	.LBB0_152
.Ltmp652:
.LBB0_153:                              # %if.end4202
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	104(%rsp), %rbx                 # 8-byte Reload
	movq	432(%rsp), %r14                 # 8-byte Reload
	movq	440(%rsp), %r15                 # 8-byte Reload
.Ltmp653:
.LBB0_154:                              # %sw.epilog
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	movl	%r8d, %ebp
.Ltmp654:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	jmp	.LBB0_169
.Ltmp655:
.LBB0_155:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r10d
	#DEBUG_VALUE: x264_me_search_ref:pmv <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: cross_start <- 1
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: ucost2 <- $r10d
                                        # kill: def $edx killed $edx killed $rdx def $rdx
	movq	%rdx, 32(%rsp)                  # 8-byte Spill
.Ltmp656:
	#DEBUG_VALUE: x264_me_search_ref:pmv <- undef
	movl	%ecx, %r15d
	movq	280(%rsp), %rdx                 # 8-byte Reload
.Ltmp657:
.LBB0_156:                              # %land.lhs.true1398
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	movq	72(%rsp), %r11                  # 8-byte Reload
.Ltmp658:
	.loc	0 403 36 is_stmt 1              # x264_src/encoder/me.c:403:36
	movzbl	x264_me_search_ref.x264_pixel_size_shift(%r11), %ecx
	movl	$2000, %eax                     # imm = 0x7D0
	shrl	%cl, %eax
	movl	$3, %ebp
	cmpl	%eax, %r10d
.Ltmp659:
	.loc	0 403 17 is_stmt 0              # x264_src/encoder/me.c:403:17
	jge	.LBB0_160
.Ltmp660:
# %bb.157:                              # %if.then1405
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	.loc	0 405 17 is_stmt 1              # x264_src/encoder/me.c:405:17
	movslq	32(%rsp), %r14                  # 4-byte Folded Reload
	movq	136(%rsp), %rax                 # 8-byte Reload
	leaq	(%rax,%r14), %rdi
	movq	%rdi, 600(%rsp)                 # 8-byte Spill
	movl	%r15d, %eax
	movq	%r13, %rdx
	imull	%edx, %eax
	movslq	%eax, %r12
	movq	%r12, 384(%rsp)                 # 8-byte Spill
	leaq	(%rdi,%r12), %r8
.Ltmp661:
	#DEBUG_VALUE: pix_base <- $r8
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	movq	%r8, 272(%rsp)                  # 8-byte Spill
.Ltmp662:
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	leaq	(%r13,%r13), %rax
	movq	%r13, %r9
	movl	%ecx, 232(%rsp)                 # 4-byte Spill
	movq	%r8, %rsi
	movq	%rax, 488(%rsp)                 # 8-byte Spill
	subq	%rax, %rsi
	movq	464(%rsp), %rax                 # 8-byte Reload
	leaq	(%rax,%r8), %rdx
	decq	%rdx
	leaq	1(%rax,%r8), %rcx
	leaq	-2(%r12,%rdi), %r8
	leaq	160(%rsp), %rax
	movq	%rax, (%rsp)
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movq	%r8, 592(%rsp)                  # 8-byte Spill
	movl	%r10d, %ebp
                                        # kill: def $r9d killed $r9d killed $r9
	movq	%r11, %r12
	callq	*32040(%rbx,%r11,8)
.Ltmp663:
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	%r12, %r11
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	leal	(,%r14,4), %eax
	movq	%rax, 504(%rsp)                 # 8-byte Spill
	cltq
	movq	%rax, 152(%rsp)                 # 8-byte Spill
	movq	40(%rsp), %rdi                  # 8-byte Reload
	movzwl	(%rdi,%rax,2), %ecx
	leal	-8(,%r15,4), %eax
	movslq	%eax, %rdx
	movq	24(%rsp), %rax                  # 8-byte Reload
	movq	%rdx, 640(%rsp)                 # 8-byte Spill
	movzwl	(%rax,%rdx,2), %eax
	addl	%ecx, %eax
	addl	160(%rsp), %eax
	movl	%eax, 160(%rsp)
	leal	-4(,%r14,4), %ecx
	movslq	%ecx, %rcx
	movq	%rcx, 528(%rsp)                 # 8-byte Spill
	movzwl	(%rdi,%rcx,2), %ecx
	leal	-4(,%r15,4), %edx
	movslq	%edx, %r8
	movq	24(%rsp), %rdx                  # 8-byte Reload
	movzwl	(%rdx,%r8,2), %edx
	addl	%ecx, %edx
	addl	164(%rsp), %edx
	movl	%edx, 164(%rsp)
	leal	4(,%r14,4), %ecx
	movslq	%ecx, %rcx
	movq	%rcx, 520(%rsp)                 # 8-byte Spill
	movzwl	(%rdi,%rcx,2), %esi
	movq	24(%rsp), %rcx                  # 8-byte Reload
	movq	%r8, 648(%rsp)                  # 8-byte Spill
	movzwl	(%rcx,%r8,2), %ecx
	addl	%esi, %ecx
	addl	168(%rsp), %ecx
	leal	-2(%r15), %r8d
.Ltmp664:
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	cmpl	%ebp, %eax
	movl	%ebp, 416(%rsp)                 # 4-byte Spill
.Ltmp665:
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	cmovgel	%ebp, %eax
	leal	-1(%r15), %esi
	movl	%r15d, %r12d
	movl	%r8d, 560(%rsp)                 # 4-byte Spill
	cmovll	%r8d, %r12d
.Ltmp666:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r12d
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	cmpl	%eax, %edx
	movq	%rbx, %r10
.Ltmp667:
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	movl	%eax, %ebx
	cmovll	%edx, %ebx
.Ltmp668:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebx
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	cmpl	%ebx, %ecx
.Ltmp669:
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	cmovll	%esi, %r12d
.Ltmp670:
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	cmpl	%eax, %edx
	movl	%esi, 564(%rsp)                 # 4-byte Spill
.Ltmp671:
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	cmovll	%esi, %r12d
.Ltmp672:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r12d
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	%r14, 376(%rsp)                 # 8-byte Spill
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	leal	-1(%r14), %esi
	movl	%esi, 472(%rsp)                 # 4-byte Spill
.Ltmp673:
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	cmpl	%eax, %edx
	movq	%r15, 240(%rsp)                 # 8-byte Spill
	movq	32(%rsp), %rax                  # 8-byte Reload
.Ltmp674:
                                        # kill: def $eax killed $eax killed $rax def $rax
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	cmovll	%esi, %eax
.Ltmp675:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	%rax, %rsi
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	leal	1(%r14), %edx
	movl	%edx, 476(%rsp)                 # 4-byte Spill
.Ltmp676:
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	cmpl	%ebx, %ecx
.Ltmp677:
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	movl	%ecx, 168(%rsp)
	leal	-8(,%r14,4), %eax
.Ltmp678:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $esi
	cltq
	cmovll	%ecx, %ebx
.Ltmp679:
	cmovll	%edx, %esi
.Ltmp680:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $esi
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	%rsi, 80(%rsp)                  # 8-byte Spill
.Ltmp681:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	movq	%rax, 584(%rsp)                 # 8-byte Spill
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	movzwl	(%rdi,%rax,2), %eax
	movq	240(%rsp), %rcx                 # 8-byte Reload
	leal	(,%rcx,4), %ecx
	movq	%rcx, 144(%rsp)                 # 8-byte Spill
	movslq	%ecx, %r15
	movq	24(%rsp), %rcx                  # 8-byte Reload
	movzwl	(%rcx,%r15,2), %r14d
	addl	%eax, %r14d
	addl	172(%rsp), %r14d
	movl	%r14d, 172(%rsp)
.Ltmp682:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebx
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	cmpl	%ebx, %r14d
.Ltmp683:
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	movl	%ebx, %ebp
	cmovll	%r14d, %ebp
.Ltmp684:
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	384(%rsp), %rax                 # 8-byte Reload
	movq	600(%rsp), %rcx                 # 8-byte Reload
.Ltmp685:
	.loc	0 406 17 is_stmt 1              # x264_src/encoder/me.c:406:17
	leaq	2(%rax,%rcx), %rsi
	movq	272(%rsp), %rax                 # 8-byte Reload
	movq	64(%rsp), %r9                   # 8-byte Reload
	leaq	-1(%r9,%rax), %rdx
	leaq	1(%r9,%rax), %rcx
	leaq	(%rax,%r9,2), %r8
	leaq	160(%rsp), %rax
	movq	%rax, (%rsp)
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movq	%rsi, 576(%rsp)                 # 8-byte Spill
                                        # kill: def $r9d killed $r9d killed $r9
	callq	*32040(%r10,%r11,8)
.Ltmp686:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	movq	24(%rsp), %r10                  # 8-byte Reload
	movq	376(%rsp), %rdx                 # 8-byte Reload
	.loc	0 406 17                        # x264_src/encoder/me.c:406:17
	leal	8(,%rdx,4), %eax
	movslq	%eax, %rcx
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	%rcx, 568(%rsp)                 # 8-byte Spill
	movzwl	(%rax,%rcx,2), %ecx
	movq	%r15, 288(%rsp)                 # 8-byte Spill
	movzwl	(%r10,%r15,2), %eax
	addl	%ecx, %eax
	addl	160(%rsp), %eax
.Ltmp687:
	.loc	0 406 17                        # x264_src/encoder/me.c:406:17
	cmpl	%ebp, %eax
.Ltmp688:
	.loc	0 406 17                        # x264_src/encoder/me.c:406:17
	cmovll	240(%rsp), %r12d                # 4-byte Folded Reload
.Ltmp689:
	.loc	0 405 17 is_stmt 1              # x264_src/encoder/me.c:405:17
	cmpl	%ebx, %r14d
.Ltmp690:
	.loc	0 406 17                        # x264_src/encoder/me.c:406:17
	cmovll	240(%rsp), %r12d                # 4-byte Folded Reload
.Ltmp691:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r12d
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	leal	-2(%rdx), %ecx
.Ltmp692:
	.loc	0 405 17 is_stmt 0              # x264_src/encoder/me.c:405:17
	cmpl	%ebx, %r14d
	movq	80(%rsp), %r8                   # 8-byte Reload
	movq	240(%rsp), %r15                 # 8-byte Reload
	movq	%r12, %rdi
	movl	%ecx, 500(%rsp)                 # 4-byte Spill
.Ltmp693:
	.loc	0 405 17                        # x264_src/encoder/me.c:405:17
	cmovll	%ecx, %r8d
.Ltmp694:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r8d
	.loc	0 406 17 is_stmt 1              # x264_src/encoder/me.c:406:17
	leal	2(%rdx), %ebx
.Ltmp695:
	.loc	0 406 17 is_stmt 0              # x264_src/encoder/me.c:406:17
	cmpl	%ebp, %eax
.Ltmp696:
	.loc	0 406 17                        # x264_src/encoder/me.c:406:17
	movl	%eax, 160(%rsp)
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	528(%rsp), %rdx                 # 8-byte Reload
	movzwl	(%rcx,%rdx,2), %ecx
	leal	4(,%r15,4), %edx
	movslq	%edx, %r14
	cmovgel	%ebp, %eax
	movq	40(%rsp), %r9                   # 8-byte Reload
	movzwl	(%r10,%r14,2), %edx
	cmovll	%ebx, %r8d
.Ltmp697:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r8d
	addl	%ecx, %edx
	addl	164(%rsp), %edx
	movl	%edx, 164(%rsp)
	movq	520(%rsp), %rcx                 # 8-byte Reload
	movzwl	(%r9,%rcx,2), %ecx
	movzwl	(%r10,%r14,2), %esi
	addl	%ecx, %esi
	addl	168(%rsp), %esi
.Ltmp698:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	.loc	0 406 17                        # x264_src/encoder/me.c:406:17
	cmpl	%eax, %edx
.Ltmp699:
	.loc	0 406 17                        # x264_src/encoder/me.c:406:17
	movl	%eax, %ecx
	cmovll	%edx, %ecx
.Ltmp700:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ecx
	leal	1(%r15), %r12d
.Ltmp701:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $edi
	.loc	0 406 17                        # x264_src/encoder/me.c:406:17
	cmpl	%ecx, %esi
.Ltmp702:
	.loc	0 406 17                        # x264_src/encoder/me.c:406:17
	cmovll	%r12d, %edi
.Ltmp703:
	.loc	0 406 17                        # x264_src/encoder/me.c:406:17
	cmpl	%eax, %edx
.Ltmp704:
	.loc	0 406 17                        # x264_src/encoder/me.c:406:17
	cmovll	472(%rsp), %r8d                 # 4-byte Folded Reload
.Ltmp705:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r8d
	cmovll	%r12d, %edi
.Ltmp706:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $edi
	.loc	0 406 17                        # x264_src/encoder/me.c:406:17
	cmpl	%ecx, %esi
.Ltmp707:
	.loc	0 406 17                        # x264_src/encoder/me.c:406:17
	cmovll	%esi, %ecx
.Ltmp708:
	cmovll	476(%rsp), %r8d                 # 4-byte Folded Reload
.Ltmp709:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r8d
	movl	%esi, 168(%rsp)
	movq	152(%rsp), %rax                 # 8-byte Reload
	movzwl	(%r9,%rax,2), %eax
	leal	8(,%r15,4), %edx
	movslq	%edx, %rdx
	movzwl	(%r10,%rdx,2), %r11d
	addl	%eax, %r11d
	leal	2(%r15), %ebp
	addl	172(%rsp), %r11d
	movl	%r11d, 172(%rsp)
.Ltmp710:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ecx
	.loc	0 406 17                        # x264_src/encoder/me.c:406:17
	cmpl	%ecx, %r11d
.Ltmp711:
	.loc	0 406 17                        # x264_src/encoder/me.c:406:17
	cmovgel	%ecx, %r11d
	cmovll	%ebp, %edi
.Ltmp712:
	cmovll	32(%rsp), %r8d                  # 4-byte Folded Reload
.Ltmp713:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r8d
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movl	$500, %eax                      # imm = 0x1F4
	movl	232(%rsp), %ecx                 # 4-byte Reload
.Ltmp714:
                                        # kill: def $cl killed $cl killed $ecx
	shrl	%cl, %eax
.Ltmp715:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $edi
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 407 27 is_stmt 1              # x264_src/encoder/me.c:407:27
	cmpl	128(%rsp), %r11d                # 4-byte Folded Reload
	movq	%rdi, 112(%rsp)                 # 8-byte Spill
.Ltmp716:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	.loc	0 0 27 is_stmt 0                # x264_src/encoder/me.c:0:27
	movq	%r8, 80(%rsp)                   # 8-byte Spill
.Ltmp717:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	.loc	0 407 37                        # x264_src/encoder/me.c:407:37
	jne	.LBB0_178
.Ltmp718:
# %bb.158:                              # %if.then1405
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	cmpl	%eax, %r11d
	jge	.LBB0_178
.Ltmp719:
# %bb.159:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	.loc	0 0 37                          # x264_src/encoder/me.c:0:37
	movq	104(%rsp), %rbx                 # 8-byte Reload
	movq	432(%rsp), %r14                 # 8-byte Reload
	movq	440(%rsp), %r15                 # 8-byte Reload
	movl	128(%rsp), %ebp                 # 4-byte Reload
	.loc	0 407 37                        # x264_src/encoder/me.c:407:37
	jmp	.LBB0_169
.Ltmp720:
.LBB0_160:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	.loc	0 0 37                          # x264_src/encoder/me.c:0:37
	movl	%r10d, %r11d
	movl	%r15d, %eax
	movq	%rax, 112(%rsp)                 # 8-byte Spill
	movq	32(%rsp), %rax                  # 8-byte Reload
                                        # kill: def $eax killed $eax killed $rax def $rax
	movq	%rax, 80(%rsp)                  # 8-byte Spill
.Ltmp721:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- undef
.LBB0_161:                              # %if.end2306
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- $ebp
	.loc	0 422 17 is_stmt 1              # x264_src/encoder/me.c:422:17
	testl	%r8d, %r8d
	movq	%r15, 240(%rsp)                 # 8-byte Spill
	je	.LBB0_250
.Ltmp722:
.LBB0_162:                              # %if.end2306
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- $ebp
	cmpl	$1, %r8d
	movq	320(%rsp), %r9                  # 8-byte Reload
	jne	.LBB0_176
.Ltmp723:
# %bb.163:                              # %if.then2311
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- $ebp
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	movl	$1, %eax
	movq	72(%rsp), %r14                  # 8-byte Reload
.Ltmp724:
	.loc	0 440 33 is_stmt 1              # x264_src/encoder/me.c:440:33
	testl	%r14d, %r14d
.Ltmp725:
	.loc	0 440 25 is_stmt 0              # x264_src/encoder/me.c:440:25
	je	.LBB0_194
.Ltmp726:
# %bb.164:                              # %if.else2315
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- $ebp
	.loc	0 0 25                          # x264_src/encoder/me.c:0:25
	movq	456(%rsp), %rsi                 # 8-byte Reload
.Ltmp727:
	.loc	0 445 36 is_stmt 1              # x264_src/encoder/me.c:445:36
	movswl	128(%rsi), %ecx
	movq	48(%rsp), %rdi                  # 8-byte Reload
	.loc	0 445 48 is_stmt 0              # x264_src/encoder/me.c:445:48
	movswl	(%rdi), %edx
	.loc	0 445 31                        # x264_src/encoder/me.c:445:31
	subl	%edx, %ecx
	movl	%ecx, %edx
	negl	%edx
	cmovsl	%ecx, %edx
	movzwl	%dx, %ecx
	.loc	0 446 36 is_stmt 1              # x264_src/encoder/me.c:446:36
	movswl	130(%rsi), %edx
	.loc	0 446 48 is_stmt 0              # x264_src/encoder/me.c:446:48
	movswl	2(%rdi), %esi
	.loc	0 446 31                        # x264_src/encoder/me.c:446:31
	subl	%esi, %edx
	movl	%edx, %esi
	negl	%esi
	cmovsl	%edx, %esi
	movzwl	%si, %edi
	.loc	0 446 29                        # x264_src/encoder/me.c:446:29
	addl	%ecx, %edi
.Ltmp728:
	#DEBUG_VALUE: mvd <- $edi
	.loc	0 0 29                          # x264_src/encoder/me.c:0:29
	jmp	.LBB0_206
.Ltmp729:
.LBB0_165:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	movq	64(%rsp), %r13                  # 8-byte Reload
.Ltmp730:
.LBB0_166:                              # %if.end822
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	movq	136(%rsp), %r8                  # 8-byte Reload
.Ltmp731:
.LBB0_167:                              # %if.end822
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r11d
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	movq	%r14, 112(%rsp)                 # 8-byte Spill
.Ltmp732:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	movl	128(%rsp), %r12d                # 4-byte Reload
.Ltmp733:
	.loc	0 356 19 is_stmt 1              # x264_src/encoder/me.c:356:19
	sarl	$3, %r12d
.Ltmp734:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: dir <- 0
	.loc	0 360 13                        # x264_src/encoder/me.c:360:13
	movslq	%r11d, %rbp
	addq	%rbp, %r8
	movl	%r13d, %eax
	imull	%r14d, %eax
	cltq
	leaq	(%r8,%rax), %rbx
.Ltmp735:
	#DEBUG_VALUE: pix_base <- $rbx
	movq	%rbx, %rsi
	subq	%r13, %rsi
	leaq	(%rbx,%r13), %rdx
	leaq	(%rax,%r8), %rcx
	decq	%rcx
	movq	%rcx, 136(%rsp)                 # 8-byte Spill
.Ltmp736:
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- undef
	leaq	1(%rax,%r8), %r8
	movq	%r8, 400(%rsp)                  # 8-byte Spill
.Ltmp737:
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- undef
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/me.c:0:13
	leaq	160(%rsp), %r14
	.loc	0 360 13                        # x264_src/encoder/me.c:360:13
	movq	%r14, (%rsp)
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movl	%r13d, %r9d
	movq	104(%rsp), %r15                 # 8-byte Reload
	movq	72(%rsp), %r14                  # 8-byte Reload
	callq	*32040(%r15,%r14,8)
.Ltmp738:
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%r15, %r9
	movq	%r14, %r10
	movq	%rbp, 32(%rsp)                  # 8-byte Spill
	.loc	0 360 13                        # x264_src/encoder/me.c:360:13
	leal	(,%rbp,4), %eax
	cltq
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movzwl	(%rcx,%rax,2), %ecx
	movq	112(%rsp), %r15                 # 8-byte Reload
	leal	(,%r15,4), %edx
	leal	-4(,%r15,4), %esi
	movq	%r15, %rdi
	movslq	%esi, %r8
	movq	%r8, 80(%rsp)                   # 8-byte Spill
	movq	24(%rsp), %rsi                  # 8-byte Reload
	movzwl	(%rsi,%r8,2), %r15d
	addl	%ecx, %r15d
	addl	160(%rsp), %r15d
	movl	%r15d, 160(%rsp)
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movzwl	(%rcx,%rax,2), %ecx
	leal	4(,%rdi,4), %eax
	movslq	%eax, %rsi
	movq	%rsi, 352(%rsp)                 # 8-byte Spill
.Ltmp739:
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- undef
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	24(%rsp), %rax                  # 8-byte Reload
	.loc	0 360 13                        # x264_src/encoder/me.c:360:13
	movzwl	(%rax,%rsi,2), %eax
	addl	%ecx, %eax
	addl	164(%rsp), %eax
	movl	%eax, 164(%rsp)
	leal	-4(,%rbp,4), %ecx
	movslq	%ecx, %rsi
	movq	%rsi, 240(%rsp)                 # 8-byte Spill
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movzwl	(%rcx,%rsi,2), %esi
	movslq	%edx, %rdx
	movq	24(%rsp), %rcx                  # 8-byte Reload
	movzwl	(%rcx,%rdx,2), %ecx
	addl	%esi, %ecx
	addl	168(%rsp), %ecx
	movl	%ecx, 168(%rsp)
	leal	4(,%rbp,4), %esi
	movslq	%esi, %rdi
	movq	%rdi, 48(%rsp)                  # 8-byte Spill
	movq	40(%rsp), %rsi                  # 8-byte Reload
	movzwl	(%rsi,%rdi,2), %esi
	movq	24(%rsp), %rdi                  # 8-byte Reload
	movzwl	(%rdi,%rdx,2), %edx
	addl	%esi, %edx
	addl	172(%rsp), %edx
.Ltmp740:
	.loc	0 361 13 is_stmt 1              # x264_src/encoder/me.c:361:13
	xorl	%esi, %esi
	cmpl	%r12d, %r15d
	setl	%sil
.Ltmp741:
	.loc	0 361 13 is_stmt 0              # x264_src/encoder/me.c:361:13
	cmovgel	%r12d, %r15d
.Ltmp742:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r15d
	#DEBUG_VALUE: dir <- undef
	.loc	0 362 13 is_stmt 1              # x264_src/encoder/me.c:362:13
	cmpl	%r15d, %eax
	movl	$2, %edi
.Ltmp743:
	.loc	0 362 13 is_stmt 0              # x264_src/encoder/me.c:362:13
	cmovgeq	%rsi, %rdi
	cmovll	%eax, %r15d
.Ltmp744:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r15d
	.loc	0 363 13 is_stmt 1              # x264_src/encoder/me.c:363:13
	cmpl	%r15d, %ecx
	movl	$3, %eax
.Ltmp745:
	.loc	0 363 13 is_stmt 0              # x264_src/encoder/me.c:363:13
	cmovgeq	%rdi, %rax
	cmovll	%ecx, %r15d
.Ltmp746:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r15d
	.loc	0 364 13 is_stmt 1              # x264_src/encoder/me.c:364:13
	cmpl	%r15d, %edx
	movl	$4, %r12d
.Ltmp747:
	.loc	0 364 13 is_stmt 0              # x264_src/encoder/me.c:364:13
	cmovgeq	%rax, %r12
.Ltmp748:
	.loc	0 360 13 is_stmt 1              # x264_src/encoder/me.c:360:13
	movl	%edx, 172(%rsp)
.Ltmp749:
	.loc	0 364 13                        # x264_src/encoder/me.c:364:13
	cmovll	%edx, %r15d
.Ltmp750:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r15d
	#DEBUG_VALUE: pix_base <- $rbx
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/me.c:0:13
	movq	136(%rsp), %rsi                 # 8-byte Reload
.Ltmp751:
	.loc	0 365 13 is_stmt 1              # x264_src/encoder/me.c:365:13
	subq	%r13, %rsi
	leaq	(%rbx,%r13), %rdx
	decq	%rdx
	movq	400(%rsp), %rcx                 # 8-byte Reload
	subq	%r13, %rcx
	leaq	(%rbx,%r13), %r8
	incq	%r8
	movq	%r9, %rbx
.Ltmp752:
	leaq	160(%rsp), %rax
	movq	%rax, (%rsp)
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movq	40(%rsp), %r14                  # 8-byte Reload
	movq	24(%rsp), %rbp                  # 8-byte Reload
	movl	%r13d, %r9d
	callq	*32040(%rbx,%r10,8)
.Ltmp753:
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/me.c:0:13
	movq	%rbp, %r10
	movq	240(%rsp), %rcx                 # 8-byte Reload
	.loc	0 365 13                        # x264_src/encoder/me.c:365:13
	movzwl	(%r14,%rcx,2), %eax
	movq	80(%rsp), %rdx                  # 8-byte Reload
	movzwl	(%rbp,%rdx,2), %ebp
	addl	%eax, %ebp
	addl	160(%rsp), %ebp
	movl	%ebp, 160(%rsp)
	movzwl	(%r14,%rcx,2), %ecx
	movq	352(%rsp), %rsi                 # 8-byte Reload
	movzwl	(%r10,%rsi,2), %eax
	addl	%ecx, %eax
	addl	164(%rsp), %eax
	movl	%eax, 164(%rsp)
	movq	48(%rsp), %rdi                  # 8-byte Reload
	movzwl	(%r14,%rdi,2), %ecx
	movzwl	(%r10,%rdx,2), %edx
	addl	%ecx, %edx
	addl	168(%rsp), %edx
	movl	%edx, 168(%rsp)
	movzwl	(%r14,%rdi,2), %ecx
	movzwl	(%r10,%rsi,2), %esi
	addl	%ecx, %esi
	addl	172(%rsp), %esi
.Ltmp754:
	.loc	0 366 13 is_stmt 1              # x264_src/encoder/me.c:366:13
	cmpl	%r15d, %ebp
	movl	$5, %ecx
.Ltmp755:
	.loc	0 366 13 is_stmt 0              # x264_src/encoder/me.c:366:13
	cmovgeq	%r12, %rcx
	cmovgel	%r15d, %ebp
.Ltmp756:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	.loc	0 367 13 is_stmt 1              # x264_src/encoder/me.c:367:13
	cmpl	%ebp, %eax
	movl	$6, %edi
.Ltmp757:
	.loc	0 367 13 is_stmt 0              # x264_src/encoder/me.c:367:13
	cmovgeq	%rcx, %rdi
	cmovll	%eax, %ebp
.Ltmp758:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	.loc	0 368 13 is_stmt 1              # x264_src/encoder/me.c:368:13
	cmpl	%ebp, %edx
	movl	$7, %eax
.Ltmp759:
	.loc	0 368 13 is_stmt 0              # x264_src/encoder/me.c:368:13
	cmovgeq	%rdi, %rax
	cmovll	%edx, %ebp
.Ltmp760:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	.loc	0 369 13 is_stmt 1              # x264_src/encoder/me.c:369:13
	cmpl	%ebp, %esi
	movl	$8, %ecx
.Ltmp761:
	.loc	0 369 13 is_stmt 0              # x264_src/encoder/me.c:369:13
	cmovgeq	%rax, %rcx
.Ltmp762:
	.loc	0 365 13 is_stmt 1              # x264_src/encoder/me.c:365:13
	movl	%esi, 172(%rsp)
.Ltmp763:
	.loc	0 369 13                        # x264_src/encoder/me.c:369:13
	cmovll	%esi, %ebp
.Ltmp764:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	.loc	0 370 20                        # x264_src/encoder/me.c:370:20
	movsbl	square1(%rcx,%rcx), %eax
	.loc	0 370 17 is_stmt 0              # x264_src/encoder/me.c:370:17
	addl	32(%rsp), %eax                  # 4-byte Folded Reload
.Ltmp765:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	%rax, 80(%rsp)                  # 8-byte Spill
.Ltmp766:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	.loc	0 371 20 is_stmt 1              # x264_src/encoder/me.c:371:20
	movsbl	square1+1(%rcx,%rcx), %eax
	.loc	0 371 17 is_stmt 0              # x264_src/encoder/me.c:371:17
	addl	112(%rsp), %eax                 # 4-byte Folded Reload
.Ltmp767:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $eax
                                        # kill: def $eax killed $eax def $rax
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	%rax, 112(%rsp)                 # 8-byte Spill
.Ltmp768:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
.LBB0_168:                              # %sw.epilog
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	movq	432(%rsp), %r14                 # 8-byte Reload
	movq	440(%rsp), %r15                 # 8-byte Reload
.Ltmp769:
.LBB0_169:                              # %sw.epilog
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	movq	80(%rsp), %r8                   # 8-byte Reload
	.loc	0 730 9 is_stmt 1               # x264_src/encoder/me.c:730:9
	leal	(,%r8,4), %eax
	movq	112(%rsp), %rdi                 # 8-byte Reload
	leal	(,%rdi,4), %ecx
	movl	452(%rsp), %edx                 # 4-byte Reload
.Ltmp770:
	.loc	0 730 20 is_stmt 0              # x264_src/encoder/me.c:730:20
	cmpl	%ebp, %edx
.Ltmp771:
	.loc	0 730 9                         # x264_src/encoder/me.c:730:9
	cmovll	544(%rsp), %eax                 # 4-byte Folded Reload
	cmovll	%r15d, %ecx
	cmovll	%edx, %ebp
.Ltmp772:
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	456(%rsp), %rsi                 # 8-byte Reload
.Ltmp773:
	movw	%ax, 140(%rsi)
	movw	%cx, 142(%rsi)
	movl	%ebp, 136(%rsi)
.Ltmp774:
	.loc	0 744 18 is_stmt 1              # x264_src/encoder/me.c:744:18
	movswq	%ax, %rax
	movq	40(%rsp), %rdx                  # 8-byte Reload
	movzwl	(%rdx,%rax,2), %edx
	.loc	0 744 43 is_stmt 0              # x264_src/encoder/me.c:744:43
	movswq	%cx, %rax
	movzwl	(%r10,%rax,2), %eax
	.loc	0 744 41                        # x264_src/encoder/me.c:744:41
	addl	%edx, %eax
	.loc	0 744 16                        # x264_src/encoder/me.c:744:16
	movl	%eax, 132(%rsi)
.Ltmp775:
	.loc	0 745 13 is_stmt 1              # x264_src/encoder/me.c:745:13
	cmpl	512(%rsp), %r8d                 # 4-byte Folded Reload
	.loc	0 745 20 is_stmt 0              # x264_src/encoder/me.c:745:20
	jne	.LBB0_173
.Ltmp776:
# %bb.170:                              # %sw.epilog
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	cmpl	%r14d, %edi
	jne	.LBB0_173
.Ltmp777:
# %bb.171:                              # %land.lhs.true4240
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	.loc	0 745 43                        # x264_src/encoder/me.c:745:43
	movl	16408(%rbx), %ecx
	.loc	0 745 59                        # x264_src/encoder/me.c:745:59
	cmpl	$2, %ecx
.Ltmp778:
	.loc	0 745 9                         # x264_src/encoder/me.c:745:9
	jg	.LBB0_174
.Ltmp779:
# %bb.172:                              # %if.then4245
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movl	%ebp, %r9d
.Ltmp780:
	.loc	0 746 17 is_stmt 1              # x264_src/encoder/me.c:746:17
	addl	%eax, %r9d
	movq	456(%rsp), %rax                 # 8-byte Reload
	movl	%r9d, 136(%rax)
.Ltmp781:
.LBB0_173:                              # %if.end4249
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	.loc	0 749 15                        # x264_src/encoder/me.c:749:15
	movl	16408(%rbx), %ecx
	.loc	0 749 31 is_stmt 0              # x264_src/encoder/me.c:749:31
	cmpl	$2, %ecx
.Ltmp782:
	.loc	0 749 9                         # x264_src/encoder/me.c:749:9
	jl	.LBB0_175
.Ltmp783:
.LBB0_174:                              # %if.then4254
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	.loc	0 751 20 is_stmt 1              # x264_src/encoder/me.c:751:20
	movl	%ecx, %eax
	movzbl	subpel_iterations+2(,%rax,4), %edx
.Ltmp784:
	#DEBUG_VALUE: hpel <- $edx
	.loc	0 752 20                        # x264_src/encoder/me.c:752:20
	movzbl	subpel_iterations+3(,%rax,4), %ecx
.Ltmp785:
	#DEBUG_VALUE: qpel <- $ecx
	.loc	0 753 9                         # x264_src/encoder/me.c:753:9
	movq	%rbx, %rdi
	movq	456(%rsp), %rsi                 # 8-byte Reload
	movq	664(%rsp), %r8                  # 8-byte Reload
	xorl	%r9d, %r9d
	callq	refine_subpel
.Ltmp786:
.LBB0_175:                              # %if.end4267
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- $r15d
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	.loc	0 755 1 epilogue_begin          # x264_src/encoder/me.c:755:1
	addq	$936, %rsp                      # imm = 0x3A8
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp787:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp788:
.LBB0_176:                              # %if.else2332
	.cfi_def_cfa_offset 992
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: denom <- undef
	.loc	0 0 1 is_stmt 0                 # x264_src/encoder/me.c:0:1
	xorl	%edi, %edi
.Ltmp789:
	#DEBUG_VALUE: mvd <- 0
	movq	72(%rsp), %r14                  # 8-byte Reload
	movl	%r11d, %r12d
.Ltmp790:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	.loc	0 455 33 is_stmt 1              # x264_src/encoder/me.c:455:33
	testl	%r14d, %r14d
.Ltmp791:
	.loc	0 455 25 is_stmt 0              # x264_src/encoder/me.c:455:25
	je	.LBB0_195
.Ltmp792:
# %bb.177:                              # %if.then2336
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: mvd <- 0
	.loc	0 0 25                          # x264_src/encoder/me.c:0:25
	movq	456(%rsp), %rdx                 # 8-byte Reload
.Ltmp793:
	.loc	0 457 36 is_stmt 1              # x264_src/encoder/me.c:457:36
	movswl	128(%rdx), %eax
	movq	48(%rsp), %rsi                  # 8-byte Reload
	.loc	0 457 48 is_stmt 0              # x264_src/encoder/me.c:457:48
	movswl	(%rsi), %ecx
	.loc	0 457 31                        # x264_src/encoder/me.c:457:31
	subl	%ecx, %eax
	movl	%eax, %ecx
	negl	%ecx
	cmovsl	%eax, %ecx
	.loc	0 458 36 is_stmt 1              # x264_src/encoder/me.c:458:36
	movswl	130(%rdx), %eax
	.loc	0 458 48 is_stmt 0              # x264_src/encoder/me.c:458:48
	movswl	2(%rsi), %edx
	.loc	0 458 31                        # x264_src/encoder/me.c:458:31
	subl	%edx, %eax
	movl	%eax, %edx
	negl	%edx
	cmovsl	%eax, %edx
	.loc	0 457 31 is_stmt 1              # x264_src/encoder/me.c:457:31
	movzwl	%cx, %eax
	.loc	0 458 31                        # x264_src/encoder/me.c:458:31
	movzwl	%dx, %ecx
	.loc	0 458 29 is_stmt 0              # x264_src/encoder/me.c:458:29
	addl	%eax, %ecx
.Ltmp794:
	#DEBUG_VALUE: mvd <- $ecx
	#DEBUG_VALUE: denom <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	.loc	0 0 29                          # x264_src/encoder/me.c:0:29
	movl	%r8d, %eax
	jmp	.LBB0_196
.Ltmp795:
.LBB0_178:                              # %if.end1638
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	.loc	0 409 27 is_stmt 1              # x264_src/encoder/me.c:409:27
	cmpl	416(%rsp), %r11d                # 4-byte Folded Reload
.Ltmp796:
	.loc	0 409 21 is_stmt 0              # x264_src/encoder/me.c:409:21
	jne	.LBB0_193
.Ltmp797:
# %bb.179:                              # %if.then1641
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	%rdx, 624(%rsp)                 # 8-byte Spill
	movq	320(%rsp), %rax                 # 8-byte Reload
.Ltmp798:
	.loc	0 411 44 is_stmt 1              # x264_src/encoder/me.c:411:44
	movl	%eax, %r9d
	sarl	%r9d
	.loc	0 411 49 is_stmt 0              # x264_src/encoder/me.c:411:49
	orl	$1, %r9d
.Ltmp799:
	#DEBUG_VALUE: range <- $r9d
	#DEBUG_VALUE: i <- 3
	.loc	0 0 49                          # x264_src/encoder/me.c:0:49
	movq	336(%rsp), %rdx                 # 8-byte Reload
.Ltmp800:
	.loc	0 412 21 is_stmt 1              # x264_src/encoder/me.c:412:21
	movl	%edx, %eax
	movq	32(%rsp), %rsi                  # 8-byte Reload
	subl	%esi, %eax
	movl	%esi, %ecx
	subl	280(%rsp), %ecx                 # 4-byte Folded Reload
	cmpl	%ecx, %eax
	cmovll	%eax, %ecx
	cmpl	%ecx, %r9d
	setg	%al
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	cmpl	$6, %r9d
	setl	%cl
	movl	$3, %r15d
.Ltmp801:
	.loc	0 412 21 is_stmt 0              # x264_src/encoder/me.c:412:21
	orb	%al, %cl
	movq	%r9, 424(%rsp)                  # 8-byte Spill
.Ltmp802:
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%ebx, 496(%rsp)                 # 4-byte Spill
	movl	%ebp, 556(%rsp)                 # 4-byte Spill
	movq	%r14, 632(%rsp)                 # 8-byte Spill
	movl	%r12d, 552(%rsp)                # 4-byte Spill
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jne	.LBB0_215
.Ltmp803:
# %bb.180:                              # %for.body1658.preheader
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 3
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	leal	-2(%r9), %eax
	movq	%rax, 536(%rsp)                 # 8-byte Spill
.Ltmp804:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	leal	-5(%rsi), %ebp
	movl	%esi, %eax
	movq	%rax, 480(%rsp)                 # 8-byte Spill
	movq	384(%rsp), %rax                 # 8-byte Reload
	movq	376(%rsp), %rcx                 # 8-byte Reload
	addq	%rcx, %rax
	movq	136(%rsp), %rcx                 # 8-byte Reload
	leaq	-5(%rcx,%rax), %r14
	movl	$-12, %eax
	movl	$12, %ecx
	movl	$-20, %r12d
	movl	$20, %r13d
	xorl	%ebx, %ebx
	movl	416(%rsp), %r11d                # 4-byte Reload
.Ltmp805:
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	jmp	.LBB0_182
.Ltmp806:
.LBB0_181:                              # %for.body1658
                                        #   in Loop: Header=BB0_182 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $esi
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	leaq	4(%rbx), %r15
	addq	$7, %rbx
.Ltmp807:
	addl	$-4, %ebp
	movq	128(%rsp), %rax                 # 8-byte Reload
	addl	$-16, %eax
	movq	232(%rsp), %rcx                 # 8-byte Reload
	addl	$16, %ecx
	addl	$-16, %r12d
	addq	$-4, %r14
	addl	$16, %r13d
	cmpq	536(%rsp), %rbx                 # 8-byte Folded Reload
	movq	%r15, %rbx
.Ltmp808:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jae	.LBB0_216
.Ltmp809:
.LBB0_182:                              # %for.body1658
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	%r13, 312(%rsp)                 # 8-byte Spill
	movq	%r12, 328(%rsp)                 # 8-byte Spill
	movq	%rax, %r12
	movq	272(%rsp), %rax                 # 8-byte Reload
.Ltmp810:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	leaq	(%rax,%rbx), %rsi
	addq	$3, %rsi
	leaq	2(%r14), %rdx
	movq	%rcx, %r13
	leaq	5(%rax,%rbx), %rcx
	leaq	160(%rsp), %rax
	movq	%rax, (%rsp)
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movq	%r14, %r8
	movq	64(%rsp), %r9                   # 8-byte Reload
                                        # kill: def $r9d killed $r9d killed $r9
	movq	104(%rsp), %rax                 # 8-byte Reload
	movq	72(%rsp), %r10                  # 8-byte Reload
	movl	%r11d, %r15d
.Ltmp811:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r15d
	callq	*32040(%rax,%r10,8)
.Ltmp812:
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%r15d, %r8d
	movq	504(%rsp), %r9                  # 8-byte Reload
	movq	%r13, 232(%rsp)                 # 8-byte Spill
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	leal	(%r9,%r13), %eax
	cltq
	movq	40(%rsp), %rsi                  # 8-byte Reload
	movzwl	(%rsi,%rax,2), %eax
	movq	24(%rsp), %rcx                  # 8-byte Reload
	movq	288(%rsp), %rdi                 # 8-byte Reload
	movzwl	(%rcx,%rdi,2), %edx
	addl	%eax, %edx
	addl	160(%rsp), %edx
	movl	%edx, 160(%rsp)
	movq	%r12, 128(%rsp)                 # 8-byte Spill
	leal	(%r9,%r12), %eax
	cltq
	movzwl	(%rsi,%rax,2), %eax
	movzwl	(%rcx,%rdi,2), %esi
	addl	%eax, %esi
	addl	164(%rsp), %esi
.Ltmp813:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%r15d, %edx
.Ltmp814:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	movl	%r15d, %ecx
	cmovll	%edx, %ecx
	movq	480(%rsp), %rax                 # 8-byte Reload
	leal	3(%rax,%rbx), %eax
	cmovgel	80(%rsp), %eax                  # 4-byte Folded Reload
.Ltmp815:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ecx
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%ecx, %esi
.Ltmp816:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jl	.LBB0_184
.Ltmp817:
# %bb.183:                              # %for.body1658
                                        #   in Loop: Header=BB0_182 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ecx
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	112(%rsp), %rdi                 # 8-byte Reload
	movq	240(%rsp), %r10                 # 8-byte Reload
	jmp	.LBB0_185
.Ltmp818:
.LBB0_184:                              #   in Loop: Header=BB0_182 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ecx
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	leal	2(%rbp), %eax
.Ltmp819:
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%esi, %ecx
.Ltmp820:
	movq	240(%rsp), %r10                 # 8-byte Reload
	movl	%r10d, %edi
.Ltmp821:
.LBB0_185:                              # %for.body1658
                                        #   in Loop: Header=BB0_182 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	movq	328(%rsp), %r12                 # 8-byte Reload
	movq	312(%rsp), %r13                 # 8-byte Reload
.Ltmp822:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%r8d, %edx
.Ltmp823:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	movl	%esi, 164(%rsp)
	movl	%edi, %edx
	cmovll	%r10d, %edx
	leal	(%r9,%r13), %esi
	movslq	%esi, %rsi
	movq	%r9, %r11
	movq	40(%rsp), %r9                   # 8-byte Reload
	movzwl	(%r9,%rsi,2), %esi
	movq	24(%rsp), %r8                   # 8-byte Reload
	movq	288(%rsp), %r15                 # 8-byte Reload
	movzwl	(%r8,%r15,2), %edi
	addl	%esi, %edi
	addl	168(%rsp), %edi
	movl	%edi, 168(%rsp)
	leal	(%r11,%r12), %esi
	movslq	%esi, %rsi
	movzwl	(%r9,%rsi,2), %esi
	movzwl	(%r8,%r15,2), %r11d
	addl	%esi, %r11d
	addl	172(%rsp), %r11d
.Ltmp824:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ecx
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%edi, %esi
.Ltmp825:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%ecx, %edi
.Ltmp826:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jl	.LBB0_186
.Ltmp827:
# %bb.191:                              # %for.body1658
                                        #   in Loop: Header=BB0_182 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ecx
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%ecx, %esi
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ecx
	movl	%r10d, %r8d
	movq	%r8, 112(%rsp)                  # 8-byte Spill
.Ltmp828:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%esi, %r11d
.Ltmp829:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jge	.LBB0_192
.Ltmp830:
.LBB0_187:                              # %for.body1658
                                        #   in Loop: Header=BB0_182 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $esi
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%ecx, %edi
.Ltmp831:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jge	.LBB0_189
.Ltmp832:
.LBB0_188:                              #   in Loop: Header=BB0_182 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $esi
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	480(%rsp), %rax                 # 8-byte Reload
.Ltmp833:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	addl	%ebx, %eax
	addl	$5, %eax
	movl	%r10d, %ecx
	movq	%rcx, 112(%rsp)                 # 8-byte Spill
.Ltmp834:
.LBB0_189:                              # %for.body1658
                                        #   in Loop: Header=BB0_182 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $esi
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	movl	%r11d, 172(%rsp)
	movl	%ebp, %ecx
	movq	%rcx, 80(%rsp)                  # 8-byte Spill
.Ltmp835:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%esi, %r11d
.Ltmp836:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jl	.LBB0_181
.Ltmp837:
# %bb.190:                              # %for.body1658
                                        #   in Loop: Header=BB0_182 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $esi
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%esi, %r11d
                                        # kill: def $eax killed $eax def $rax
	movq	%rax, 80(%rsp)                  # 8-byte Spill
.Ltmp838:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	jmp	.LBB0_181
.Ltmp839:
.LBB0_186:                              # %for.body1658
                                        #   in Loop: Header=BB0_182 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ecx
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edi
	movl	%r10d, %r8d
	movq	%r8, 112(%rsp)                  # 8-byte Spill
.Ltmp840:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%esi, %r11d
.Ltmp841:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jl	.LBB0_187
.Ltmp842:
.LBB0_192:                              # %for.body1658
                                        #   in Loop: Header=BB0_182 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $esi
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
                                        # kill: def $edx killed $edx def $rdx
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	%rdx, 112(%rsp)                 # 8-byte Spill
.Ltmp843:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%ecx, %edi
.Ltmp844:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jl	.LBB0_188
	jmp	.LBB0_189
.Ltmp845:
.LBB0_193:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	336(%rsp), %r12                 # 8-byte Reload
	movq	280(%rsp), %rdx                 # 8-byte Reload
	movl	$3, %ebp
	jmp	.LBB0_249
.Ltmp846:
.LBB0_194:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- $ebp
	movl	$25, %edi
.Ltmp847:
	.loc	0 440 25 is_stmt 1              # x264_src/encoder/me.c:440:25
	jmp	.LBB0_206
.Ltmp848:
.LBB0_195:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: mvd <- 0
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/me.c:0:0
	leal	-1(%r8), %eax
.Ltmp849:
	#DEBUG_VALUE: denom <- $eax
	xorl	%ecx, %ecx
.Ltmp850:
.LBB0_196:                              # %if.end2353
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: mvd <- $ecx
	#DEBUG_VALUE: denom <- $eax
	#DEBUG_VALUE: x264_predictor_difference:mvc <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_difference:i_mvc <- [DW_OP_plus_uconst 264, DW_OP_deref_size 4, DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: x264_predictor_difference:sum <- 0
	.loc	5 229 23 is_stmt 1              # x264_src/common/common.h:229:23
	cmpl	$2, %r8d
	movq	48(%rsp), %rdx                  # 8-byte Reload
.Ltmp851:
	.loc	5 229 5 is_stmt 0               # x264_src/common/common.h:229:5
	jl	.LBB0_205
.Ltmp852:
# %bb.197:                              # %for.body.preheader.i6206
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: denom <- $eax
	#DEBUG_VALUE: mvd <- $ecx
	#DEBUG_VALUE: x264_predictor_difference:mvc <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_difference:i_mvc <- [DW_OP_plus_uconst 264, DW_OP_deref_size 4, DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: x264_predictor_difference:sum <- 0
	#DEBUG_VALUE: x264_predictor_difference:i_mvc <- [DW_OP_plus_uconst 264, DW_OP_deref_size 4, DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $rsp
	.loc	5 231 21 is_stmt 1              # x264_src/common/common.h:231:21
	movzwl	(%rdx), %r9d
	movq	%r8, %rsi
	.loc	5 232 21                        # x264_src/common/common.h:232:21
	movzwl	2(%rdx), %r8d
	addl	$-2, %esi
.Ltmp853:
	.loc	5 229 5                         # x264_src/common/common.h:229:5
	leaq	1(%rsi), %rdx
	cmpl	$15, %esi
	jae	.LBB0_199
.Ltmp854:
# %bb.198:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: denom <- $eax
	#DEBUG_VALUE: mvd <- $ecx
	#DEBUG_VALUE: x264_predictor_difference:mvc <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_difference:i_mvc <- [DW_OP_plus_uconst 264, DW_OP_deref_size 4, DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: x264_predictor_difference:sum <- 0
	.loc	5 0 5 is_stmt 0                 # x264_src/common/common.h:0:5
	xorl	%esi, %esi
	xorl	%edi, %edi
	.loc	5 229 5                         # x264_src/common/common.h:229:5
	jmp	.LBB0_203
.Ltmp855:
.LBB0_199:                              # %vector.ph6650
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: denom <- $eax
	#DEBUG_VALUE: mvd <- $ecx
	#DEBUG_VALUE: x264_predictor_difference:mvc <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_difference:i_mvc <- [DW_OP_plus_uconst 264, DW_OP_deref_size 4, DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: x264_predictor_difference:sum <- 0
	movl	%edx, %esi
	andl	$-16, %esi
	movd	%r8d, %xmm3
	psllq	$48, %xmm3
	movd	%r9d, %xmm13
	psllq	$48, %xmm13
	pxor	%xmm9, %xmm9
	xorl	%edi, %edi
	pxor	%xmm8, %xmm8
	pxor	%xmm7, %xmm7
	pxor	%xmm5, %xmm5
	movq	48(%rsp), %r8                   # 8-byte Reload
.Ltmp856:
.LBB0_200:                              # %vector.body6654
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: denom <- $eax
	#DEBUG_VALUE: mvd <- $ecx
	#DEBUG_VALUE: x264_predictor_difference:mvc <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_difference:i_mvc <- [DW_OP_plus_uconst 264, DW_OP_deref_size 4, DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: x264_predictor_difference:sum <- 0
	.loc	5 0 5                           # x264_src/common/common.h:0:5
	movdqa	%xmm13, %xmm0
.Ltmp857:
	.loc	5 231 33 is_stmt 1              # x264_src/common/common.h:231:33
	movdqu	4(%r8,%rdi,4), %xmm6
	movdqu	20(%r8,%rdi,4), %xmm4
	movdqu	36(%r8,%rdi,4), %xmm2
	movdqu	52(%r8,%rdi,4), %xmm1
	pshuflw	$232, %xmm6, %xmm10             # xmm10 = xmm6[0,2,2,3,4,5,6,7]
	pshufhw	$232, %xmm10, %xmm10            # xmm10 = xmm10[0,1,2,3,4,6,6,7]
	pshufd	$232, %xmm10, %xmm13            # xmm13 = xmm10[0,2,2,3]
	pshuflw	$232, %xmm4, %xmm10             # xmm10 = xmm4[0,2,2,3,4,5,6,7]
	pshufhw	$232, %xmm10, %xmm10            # xmm10 = xmm10[0,1,2,3,4,6,6,7]
	pshufd	$232, %xmm10, %xmm11            # xmm11 = xmm10[0,2,2,3]
	pshuflw	$232, %xmm2, %xmm10             # xmm10 = xmm2[0,2,2,3,4,5,6,7]
	pshufhw	$232, %xmm10, %xmm10            # xmm10 = xmm10[0,1,2,3,4,6,6,7]
	pshufd	$232, %xmm10, %xmm10            # xmm10 = xmm10[0,2,2,3]
	pshuflw	$232, %xmm1, %xmm12             # xmm12 = xmm1[0,2,2,3,4,5,6,7]
	pshufhw	$232, %xmm12, %xmm14            # xmm14 = xmm12[0,1,2,3,4,6,6,7]
	.loc	5 231 21 is_stmt 0              # x264_src/common/common.h:231:21
	movdqa	%xmm10, %xmm12
	punpcklwd	%xmm11, %xmm12          # xmm12 = xmm12[0],xmm11[0],xmm12[1],xmm11[1],xmm12[2],xmm11[2],xmm12[3],xmm11[3]
	punpcklwd	%xmm13, %xmm11          # xmm11 = xmm11[0],xmm13[0],xmm11[1],xmm13[1],xmm11[2],xmm13[2],xmm11[3],xmm13[3]
	punpcklwd	%xmm0, %xmm13           # xmm13 = xmm13[0],xmm0[0],xmm13[1],xmm0[1],xmm13[2],xmm0[2],xmm13[3],xmm0[3]
	movdqa	%xmm3, %xmm0
	.loc	5 231 33                        # x264_src/common/common.h:231:33
	pshufd	$232, %xmm14, %xmm3             # xmm3 = xmm14[0,2,2,3]
	.loc	5 231 21                        # x264_src/common/common.h:231:21
	pshufd	$108, %xmm13, %xmm13            # xmm13 = xmm13[0,3,2,1]
	pshuflw	$44, %xmm13, %xmm13             # xmm13 = xmm13[0,3,2,0,4,5,6,7]
	pshufhw	$40, %xmm13, %xmm14             # xmm14 = xmm13[0,1,2,3,4,6,6,4]
	psrad	$16, %xmm14
	movdqa	%xmm3, %xmm13
	punpcklwd	%xmm10, %xmm13          # xmm13 = xmm13[0],xmm10[0],xmm13[1],xmm10[1],xmm13[2],xmm10[2],xmm13[3],xmm10[3]
	.loc	5 231 33                        # x264_src/common/common.h:231:33
	movdqa	%xmm6, %xmm15
	pslld	$16, %xmm15
	psrad	$16, %xmm15
	.loc	5 231 16                        # x264_src/common/common.h:231:16
	movdqa	%xmm14, %xmm10
	pcmpgtd	%xmm15, %xmm10
	psubd	%xmm15, %xmm14
	movdqa	%xmm0, 288(%rsp)                # 16-byte Spill
	.loc	5 231 21                        # x264_src/common/common.h:231:21
	pshufd	$108, %xmm11, %xmm11            # xmm11 = xmm11[0,3,2,1]
	pshuflw	$44, %xmm11, %xmm11             # xmm11 = xmm11[0,3,2,0,4,5,6,7]
	pshufhw	$40, %xmm11, %xmm15             # xmm15 = xmm11[0,1,2,3,4,6,6,4]
	psrad	$16, %xmm15
	.loc	5 231 16                        # x264_src/common/common.h:231:16
	pxor	%xmm10, %xmm14
	psubd	%xmm14, %xmm10
	.loc	5 231 33                        # x264_src/common/common.h:231:33
	movdqa	%xmm4, %xmm14
	pslld	$16, %xmm14
	psrad	$16, %xmm14
	.loc	5 232 14 is_stmt 1              # x264_src/common/common.h:232:14
	paddd	%xmm9, %xmm10
	.loc	5 231 16                        # x264_src/common/common.h:231:16
	movdqa	%xmm15, %xmm11
	pcmpgtd	%xmm14, %xmm11
	psubd	%xmm14, %xmm15
	.loc	5 231 33 is_stmt 0              # x264_src/common/common.h:231:33
	pshuflw	$231, %xmm6, %xmm9              # xmm9 = xmm6[3,1,2,3,4,5,6,7]
	pshufhw	$231, %xmm9, %xmm9              # xmm9 = xmm9[0,1,2,3,7,5,6,7]
	pshufd	$232, %xmm9, %xmm9              # xmm9 = xmm9[0,2,2,3]
	pshuflw	$177, %xmm9, %xmm9              # xmm9 = xmm9[1,0,3,2,4,5,6,7]
	.loc	5 231 21                        # x264_src/common/common.h:231:21
	pshufd	$108, %xmm12, %xmm12            # xmm12 = xmm12[0,3,2,1]
	pshuflw	$44, %xmm12, %xmm12             # xmm12 = xmm12[0,3,2,0,4,5,6,7]
	pshufhw	$40, %xmm12, %xmm14             # xmm14 = xmm12[0,1,2,3,4,6,6,4]
	psrad	$16, %xmm14
	.loc	5 231 16                        # x264_src/common/common.h:231:16
	pxor	%xmm11, %xmm15
	psubd	%xmm15, %xmm11
	.loc	5 231 33                        # x264_src/common/common.h:231:33
	movdqa	%xmm2, %xmm15
	pslld	$16, %xmm15
	psrad	$16, %xmm15
	.loc	5 232 14 is_stmt 1              # x264_src/common/common.h:232:14
	paddd	%xmm8, %xmm11
	.loc	5 231 16                        # x264_src/common/common.h:231:16
	movdqa	%xmm14, %xmm12
	pcmpgtd	%xmm15, %xmm12
	psubd	%xmm15, %xmm14
	.loc	5 231 33 is_stmt 0              # x264_src/common/common.h:231:33
	pshuflw	$231, %xmm4, %xmm8              # xmm8 = xmm4[3,1,2,3,4,5,6,7]
	pshufhw	$231, %xmm8, %xmm8              # xmm8 = xmm8[0,1,2,3,7,5,6,7]
	pshufd	$232, %xmm8, %xmm8              # xmm8 = xmm8[0,2,2,3]
	pshuflw	$177, %xmm8, %xmm8              # xmm8 = xmm8[1,0,3,2,4,5,6,7]
	.loc	5 231 21                        # x264_src/common/common.h:231:21
	pshufd	$108, %xmm13, %xmm13            # xmm13 = xmm13[0,3,2,1]
	pshuflw	$44, %xmm13, %xmm13             # xmm13 = xmm13[0,3,2,0,4,5,6,7]
	pshufhw	$40, %xmm13, %xmm13             # xmm13 = xmm13[0,1,2,3,4,6,6,4]
	psrad	$16, %xmm13
	.loc	5 231 16                        # x264_src/common/common.h:231:16
	pxor	%xmm12, %xmm14
	psubd	%xmm14, %xmm12
	.loc	5 231 33                        # x264_src/common/common.h:231:33
	movdqa	%xmm1, %xmm14
	pslld	$16, %xmm14
	psrad	$16, %xmm14
	.loc	5 232 14 is_stmt 1              # x264_src/common/common.h:232:14
	paddd	%xmm7, %xmm12
	.loc	5 231 16                        # x264_src/common/common.h:231:16
	movdqa	%xmm13, %xmm0
	pcmpgtd	%xmm14, %xmm0
	psubd	%xmm14, %xmm13
	.loc	5 231 33 is_stmt 0              # x264_src/common/common.h:231:33
	pshuflw	$231, %xmm2, %xmm7              # xmm7 = xmm2[3,1,2,3,4,5,6,7]
	pshufhw	$231, %xmm7, %xmm7              # xmm7 = xmm7[0,1,2,3,7,5,6,7]
	pshufd	$232, %xmm7, %xmm7              # xmm7 = xmm7[0,2,2,3]
	pshuflw	$177, %xmm7, %xmm15             # xmm15 = xmm7[1,0,3,2,4,5,6,7]
	.loc	5 231 16                        # x264_src/common/common.h:231:16
	pxor	%xmm0, %xmm13
	psubd	%xmm13, %xmm0
	movdqa	%xmm3, %xmm13
	.loc	5 232 21 is_stmt 1              # x264_src/common/common.h:232:21
	movdqa	%xmm15, %xmm7
	punpcklwd	%xmm8, %xmm7            # xmm7 = xmm7[0],xmm8[0],xmm7[1],xmm8[1],xmm7[2],xmm8[2],xmm7[3],xmm8[3]
	punpcklwd	%xmm9, %xmm8            # xmm8 = xmm8[0],xmm9[0],xmm8[1],xmm9[1],xmm8[2],xmm9[2],xmm8[3],xmm9[3]
	punpcklwd	288(%rsp), %xmm9        # 16-byte Folded Reload
                                        # xmm9 = xmm9[0],mem[0],xmm9[1],mem[1],xmm9[2],mem[2],xmm9[3],mem[3]
	.loc	5 231 33                        # x264_src/common/common.h:231:33
	pshuflw	$231, %xmm1, %xmm3              # xmm3 = xmm1[3,1,2,3,4,5,6,7]
	pshufhw	$231, %xmm3, %xmm3              # xmm3 = xmm3[0,1,2,3,7,5,6,7]
	pshufd	$232, %xmm3, %xmm3              # xmm3 = xmm3[0,2,2,3]
	pshuflw	$177, %xmm3, %xmm3              # xmm3 = xmm3[1,0,3,2,4,5,6,7]
	.loc	5 232 14                        # x264_src/common/common.h:232:14
	paddd	%xmm5, %xmm0
	.loc	5 232 21 is_stmt 0              # x264_src/common/common.h:232:21
	pshufd	$108, %xmm9, %xmm5              # xmm5 = xmm9[0,3,2,1]
	pshuflw	$44, %xmm5, %xmm5               # xmm5 = xmm5[0,3,2,0,4,5,6,7]
	pshufhw	$40, %xmm5, %xmm14              # xmm14 = xmm5[0,1,2,3,4,6,6,4]
	psrad	$16, %xmm14
	movdqa	%xmm3, %xmm5
	punpcklwd	%xmm15, %xmm5           # xmm5 = xmm5[0],xmm15[0],xmm5[1],xmm15[1],xmm5[2],xmm15[2],xmm5[3],xmm15[3]
	.loc	5 232 33                        # x264_src/common/common.h:232:33
	psrad	$16, %xmm6
	.loc	5 232 16                        # x264_src/common/common.h:232:16
	movdqa	%xmm14, %xmm9
	pcmpgtd	%xmm6, %xmm9
	psubd	%xmm6, %xmm14
	pxor	%xmm9, %xmm14
	psubd	%xmm14, %xmm9
	.loc	5 232 21                        # x264_src/common/common.h:232:21
	pshufd	$108, %xmm8, %xmm6              # xmm6 = xmm8[0,3,2,1]
	pshuflw	$44, %xmm6, %xmm6               # xmm6 = xmm6[0,3,2,0,4,5,6,7]
	pshufhw	$40, %xmm6, %xmm6               # xmm6 = xmm6[0,1,2,3,4,6,6,4]
	psrad	$16, %xmm6
	.loc	5 232 33                        # x264_src/common/common.h:232:33
	psrad	$16, %xmm4
	.loc	5 231 13 is_stmt 1              # x264_src/common/common.h:231:13
	paddd	%xmm10, %xmm9
	.loc	5 232 16                        # x264_src/common/common.h:232:16
	movdqa	%xmm6, %xmm8
	pcmpgtd	%xmm4, %xmm8
	psubd	%xmm4, %xmm6
	pxor	%xmm8, %xmm6
	psubd	%xmm6, %xmm8
	.loc	5 232 21 is_stmt 0              # x264_src/common/common.h:232:21
	pshufd	$108, %xmm7, %xmm4              # xmm4 = xmm7[0,3,2,1]
	pshuflw	$44, %xmm4, %xmm4               # xmm4 = xmm4[0,3,2,0,4,5,6,7]
	pshufhw	$40, %xmm4, %xmm4               # xmm4 = xmm4[0,1,2,3,4,6,6,4]
	psrad	$16, %xmm4
	.loc	5 232 33                        # x264_src/common/common.h:232:33
	psrad	$16, %xmm2
	.loc	5 231 13 is_stmt 1              # x264_src/common/common.h:231:13
	paddd	%xmm11, %xmm8
	.loc	5 232 16                        # x264_src/common/common.h:232:16
	movdqa	%xmm4, %xmm7
	pcmpgtd	%xmm2, %xmm7
	psubd	%xmm2, %xmm4
	pxor	%xmm7, %xmm4
	psubd	%xmm4, %xmm7
	.loc	5 232 21 is_stmt 0              # x264_src/common/common.h:232:21
	pshufd	$108, %xmm5, %xmm2              # xmm2 = xmm5[0,3,2,1]
	pshuflw	$44, %xmm2, %xmm2               # xmm2 = xmm2[0,3,2,0,4,5,6,7]
	pshufhw	$40, %xmm2, %xmm2               # xmm2 = xmm2[0,1,2,3,4,6,6,4]
	psrad	$16, %xmm2
	.loc	5 232 33                        # x264_src/common/common.h:232:33
	psrad	$16, %xmm1
	.loc	5 231 13 is_stmt 1              # x264_src/common/common.h:231:13
	paddd	%xmm12, %xmm7
	.loc	5 232 16                        # x264_src/common/common.h:232:16
	movdqa	%xmm2, %xmm5
	pcmpgtd	%xmm1, %xmm5
	psubd	%xmm1, %xmm2
	pxor	%xmm5, %xmm2
	psubd	%xmm2, %xmm5
	.loc	5 231 13                        # x264_src/common/common.h:231:13
	paddd	%xmm0, %xmm5
	.loc	5 231 38 is_stmt 0              # x264_src/common/common.h:231:38
	addq	$16, %rdi
	cmpq	%rdi, %rsi
	jne	.LBB0_200
.Ltmp858:
# %bb.201:                              # %middle.block6647
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: denom <- $eax
	#DEBUG_VALUE: mvd <- $ecx
	#DEBUG_VALUE: x264_predictor_difference:mvc <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_difference:i_mvc <- [DW_OP_plus_uconst 264, DW_OP_deref_size 4, DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: x264_predictor_difference:sum <- 0
	.loc	5 229 5 is_stmt 1               # x264_src/common/common.h:229:5
	paddd	%xmm9, %xmm8
	paddd	%xmm8, %xmm7
	paddd	%xmm7, %xmm5
	pshufd	$238, %xmm5, %xmm0              # xmm0 = xmm5[2,3,2,3]
	paddd	%xmm5, %xmm0
	pshufd	$85, %xmm0, %xmm1               # xmm1 = xmm0[1,1,1,1]
	paddd	%xmm0, %xmm1
	movd	%xmm1, %edi
	cmpq	%rsi, %rdx
	je	.LBB0_205
.Ltmp859:
# %bb.202:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: denom <- $eax
	#DEBUG_VALUE: mvd <- $ecx
	#DEBUG_VALUE: x264_predictor_difference:mvc <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_difference:i_mvc <- [DW_OP_plus_uconst 264, DW_OP_deref_size 4, DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: x264_predictor_difference:sum <- 0
	.loc	5 0 5 is_stmt 0                 # x264_src/common/common.h:0:5
	pextrw	$3, %xmm3, %r8d
	pextrw	$3, %xmm13, %r9d
.Ltmp860:
.LBB0_203:                              # %for.body.i6207.preheader
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: denom <- $eax
	#DEBUG_VALUE: mvd <- $ecx
	#DEBUG_VALUE: x264_predictor_difference:mvc <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_difference:i_mvc <- [DW_OP_plus_uconst 264, DW_OP_deref_size 4, DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: x264_predictor_difference:sum <- 0
	movl	%edi, %r10d
	movq	48(%rsp), %r15                  # 8-byte Reload
.Ltmp861:
	.p2align	4, 0x90
.LBB0_204:                              # %for.body.i6207
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: denom <- $eax
	#DEBUG_VALUE: mvd <- $ecx
	#DEBUG_VALUE: x264_predictor_difference:mvc <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_predictor_difference:i_mvc <- [DW_OP_plus_uconst 264, DW_OP_deref_size 4, DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- $rsi
	#DEBUG_VALUE: x264_predictor_difference:sum <- $r10d
	.loc	5 231 16 is_stmt 1              # x264_src/common/common.h:231:16
	movswl	%r9w, %edi
	.loc	5 231 33 is_stmt 0              # x264_src/common/common.h:231:33
	movswl	4(%r15,%rsi,4), %r9d
	.loc	5 232 16 is_stmt 1              # x264_src/common/common.h:232:16
	movswl	%r8w, %r8d
	.loc	5 232 33 is_stmt 0              # x264_src/common/common.h:232:33
	movswl	6(%r15,%rsi,4), %r11d
	.loc	5 231 38 is_stmt 1              # x264_src/common/common.h:231:38
	leaq	1(%rsi), %rbx
	.loc	5 231 16 is_stmt 0              # x264_src/common/common.h:231:16
	subl	%r9d, %edi
	movl	%edi, %esi
.Ltmp862:
	negl	%esi
	cmovsl	%edi, %esi
	movzwl	%si, %edi
	.loc	5 232 16 is_stmt 1              # x264_src/common/common.h:232:16
	subl	%r11d, %r8d
	movl	%r8d, %esi
	negl	%esi
	cmovsl	%r8d, %esi
	movzwl	%si, %esi
	.loc	5 232 14 is_stmt 0              # x264_src/common/common.h:232:14
	addl	%r10d, %edi
	.loc	5 231 13 is_stmt 1              # x264_src/common/common.h:231:13
	addl	%esi, %edi
.Ltmp863:
	#DEBUG_VALUE: x264_predictor_difference:sum <- $edi
	#DEBUG_VALUE: i <- $rbx
	.loc	5 0 13 is_stmt 0                # x264_src/common/common.h:0:13
	movl	%r11d, %r8d
                                        # kill: def $r9w killed $r9w killed $r9d def $r9d
	movq	%rbx, %rsi
	movl	%edi, %r10d
.Ltmp864:
	.loc	5 229 23 is_stmt 1              # x264_src/common/common.h:229:23
	cmpq	%rbx, %rdx
.Ltmp865:
	.loc	5 229 5 is_stmt 0               # x264_src/common/common.h:229:5
	jne	.LBB0_204
.Ltmp866:
.LBB0_205:                              # %x264_predictor_difference.exit
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: denom <- $eax
	#DEBUG_VALUE: mvd <- $ecx
	.loc	0 461 25 is_stmt 1              # x264_src/encoder/me.c:461:25
	addl	%ecx, %edi
.Ltmp867:
	#DEBUG_VALUE: mvd <- $edi
	.loc	0 0 25 is_stmt 0                # x264_src/encoder/me.c:0:25
	movq	320(%rsp), %r9                  # 8-byte Reload
	movq	240(%rsp), %r15                 # 8-byte Reload
	movl	%r12d, %r11d
	movq	336(%rsp), %r12                 # 8-byte Reload
.Ltmp868:
.LBB0_206:                              # %if.end2357
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: mvd <- $edi
	#DEBUG_VALUE: denom <- $eax
	.loc	0 464 27 is_stmt 1              # x264_src/encoder/me.c:464:27
	movzbl	x264_me_search_ref.x264_pixel_size_shift(%r14), %ecx
	movl	$1000, %edx                     # imm = 0x3E8
	shrl	%cl, %edx
	cmpl	%edx, %r11d
	jge	.LBB0_208
.Ltmp869:
# %bb.207:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: denom <- $eax
	#DEBUG_VALUE: mvd <- $edi
	.loc	0 0 27 is_stmt 0                # x264_src/encoder/me.c:0:27
	xorl	%edx, %edx
	movq	136(%rsp), %r8                  # 8-byte Reload
	.loc	0 464 27                        # x264_src/encoder/me.c:464:27
	jmp	.LBB0_210
.Ltmp870:
.LBB0_208:                              # %cond.false2365
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: denom <- $eax
	#DEBUG_VALUE: mvd <- $edi
	.loc	0 0 27                          # x264_src/encoder/me.c:0:27
	movl	$2000, %esi                     # imm = 0x7D0
	.loc	0 465 27 is_stmt 1              # x264_src/encoder/me.c:465:27
	shrl	%cl, %esi
	movl	$1, %edx
	cmpl	%esi, %r11d
	movq	136(%rsp), %r8                  # 8-byte Reload
	jb	.LBB0_210
.Ltmp871:
# %bb.209:                              # %cond.false2373
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: denom <- $eax
	#DEBUG_VALUE: mvd <- $edi
	.loc	0 0 27 is_stmt 0                # x264_src/encoder/me.c:0:27
	movl	$4000, %edx                     # imm = 0xFA0
                                        # kill: def $cl killed $cl killed $ecx
	.loc	0 466 27 is_stmt 1              # x264_src/encoder/me.c:466:27
	shrl	%cl, %edx
	cmpl	%edx, %r11d
	movl	$3, %edx
	sbbq	$0, %rdx
.Ltmp872:
.LBB0_210:                              # %cond.end2383
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: denom <- $eax
	#DEBUG_VALUE: mvd <- $edi
	#DEBUG_VALUE: sad_ctx <- undef
	.loc	0 467 35                        # x264_src/encoder/me.c:467:35
	leal	(%rax,%rax), %ecx
	leal	(%rcx,%rcx,4), %ecx
	.loc	0 467 31 is_stmt 0              # x264_src/encoder/me.c:467:31
	cmpl	%ecx, %edi
	.loc	0 467 27                        # x264_src/encoder/me.c:467:27
	jge	.LBB0_212
.Ltmp873:
# %bb.211:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: denom <- $eax
	#DEBUG_VALUE: mvd <- $edi
	.loc	0 0 27                          # x264_src/encoder/me.c:0:27
	xorl	%ecx, %ecx
	.loc	0 467 27                        # x264_src/encoder/me.c:467:27
	jmp	.LBB0_214
.Ltmp874:
.LBB0_212:                              # %cond.false2389
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: denom <- $eax
	#DEBUG_VALUE: mvd <- $edi
	.loc	0 468 35 is_stmt 1              # x264_src/encoder/me.c:468:35
	leal	(,%rax,4), %ecx
	leal	(%rcx,%rcx,4), %esi
	movl	$1, %ecx
	.loc	0 468 31 is_stmt 0              # x264_src/encoder/me.c:468:31
	cmpl	%esi, %edi
	.loc	0 468 27                        # x264_src/encoder/me.c:468:27
	jl	.LBB0_214
.Ltmp875:
# %bb.213:                              # %cond.false2394
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: denom <- $eax
	#DEBUG_VALUE: mvd <- $edi
	.loc	0 469 35 is_stmt 1              # x264_src/encoder/me.c:469:35
	shll	$3, %eax
.Ltmp876:
	leal	(%rax,%rax,4), %eax
	.loc	0 469 31 is_stmt 0              # x264_src/encoder/me.c:469:31
	xorl	%ecx, %ecx
	cmpl	%eax, %edi
	setl	%cl
	.loc	0 469 27                        # x264_src/encoder/me.c:469:27
	xorq	$3, %rcx
.Ltmp877:
.LBB0_214:                              # %cond.end2401
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: mvd <- $edi
	#DEBUG_VALUE: mvd_ctx <- $rcx
	.loc	0 471 43 is_stmt 1              # x264_src/encoder/me.c:471:43
	movzbl	x264_me_search_ref.range_mul(%rdx,%rcx,4), %eax
	.loc	0 471 41 is_stmt 0              # x264_src/encoder/me.c:471:41
	imull	%eax, %r9d
	.loc	0 471 71                        # x264_src/encoder/me.c:471:71
	sarl	$2, %r9d
.Ltmp878:
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- $r9d
	.loc	0 0 71                          # x264_src/encoder/me.c:0:71
	movq	280(%rsp), %rdx                 # 8-byte Reload
	jmp	.LBB0_251
.Ltmp879:
.LBB0_215:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: ucost1 <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 3
	movl	416(%rsp), %r11d                # 4-byte Reload
.Ltmp880:
	.loc	0 412 21 is_stmt 1              # x264_src/encoder/me.c:412:21
	jmp	.LBB0_217
.Ltmp881:
.LBB0_216:                              # %if.end1789.loopexit
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 412 21 is_stmt 0              # x264_src/encoder/me.c:412:21
	addl	$3, %r15d
	movq	336(%rsp), %rdx                 # 8-byte Reload
	movq	424(%rsp), %r9                  # 8-byte Reload
.Ltmp882:
.LBB0_217:                              # %if.end1789
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: i <- $r15d
	cmpl	%r9d, %r15d
.Ltmp883:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jge	.LBB0_224
.Ltmp884:
# %bb.218:                              # %for.body1793.lr.ph
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r15d
	movl	%r15d, %ebx
	movslq	%edx, %rax
	movq	%rax, 128(%rsp)                 # 8-byte Spill
	movslq	280(%rsp), %rax                 # 4-byte Folded Reload
	movq	%rax, 232(%rsp)                 # 8-byte Spill
	movslq	%r9d, %r13
	movq	136(%rsp), %rax                 # 8-byte Reload
	movq	384(%rsp), %rcx                 # 8-byte Reload
	addq	%rcx, %rax
	movq	%rax, 328(%rsp)                 # 8-byte Spill
	leal	(,%r15,4), %eax
	movq	504(%rsp), %r12                 # 8-byte Reload
	subl	%eax, %r12d
	movq	376(%rsp), %rbp                 # 8-byte Reload
	subq	%rbx, %rbp
	movq	32(%rsp), %rax                  # 8-byte Reload
	movl	%eax, %ecx
	movq	%rcx, 312(%rsp)                 # 8-byte Spill
	addl	%eax, %r15d
.Ltmp885:
	#DEBUG_VALUE: i <- $ebx
	shll	$2, %r15d
	jmp	.LBB0_220
.Ltmp886:
.LBB0_219:                              # %for.inc1858
                                        #   in Loop: Header=BB0_220 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rbx
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	addq	$2, %rbx
.Ltmp887:
	#DEBUG_VALUE: i <- $rbx
	addq	$-2, %rbp
	addl	$-8, %r12d
	addl	$8, %r15d
	cmpq	%r13, %rbx
.Ltmp888:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jge	.LBB0_224
.Ltmp889:
.LBB0_220:                              # %for.body1793
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: i <- $rbx
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	376(%rsp), %rax                 # 8-byte Reload
.Ltmp890:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	addq	%rbx, %rax
	cmpq	128(%rsp), %rax                 # 8-byte Folded Reload
.Ltmp891:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jg	.LBB0_222
.Ltmp892:
# %bb.221:                              # %if.then1797
                                        #   in Loop: Header=BB0_220 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rbx
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	272(%rsp), %rax                 # 8-byte Reload
.Ltmp893:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	leaq	(%rax,%rbx), %rdx
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movq	64(%rsp), %rcx                  # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	104(%rsp), %rax                 # 8-byte Reload
	movq	72(%rsp), %r8                   # 8-byte Reload
	movl	%r11d, %r14d
.Ltmp894:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r14d
	callq	*31928(%rax,%r8,8)
.Ltmp895:
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%r14d, %r11d
	movq	312(%rsp), %rcx                 # 8-byte Reload
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	addl	%ebx, %ecx
	movslq	%r15d, %rdx
	movq	40(%rsp), %rsi                  # 8-byte Reload
	movzwl	(%rsi,%rdx,2), %edx
	movq	24(%rsp), %rsi                  # 8-byte Reload
	movq	288(%rsp), %rdi                 # 8-byte Reload
	movzwl	(%rsi,%rdi,2), %esi
	addl	%eax, %edx
	addl	%esi, %edx
.Ltmp896:
	#DEBUG_VALUE: cost <- $edx
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%r14d, %edx
.Ltmp897:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmovll	%edx, %r11d
	movq	112(%rsp), %rax                 # 8-byte Reload
	cmovll	240(%rsp), %eax                 # 4-byte Folded Reload
	movq	%rax, 112(%rsp)                 # 8-byte Spill
.Ltmp898:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	80(%rsp), %rax                  # 8-byte Reload
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmovll	%ecx, %eax
.Ltmp899:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	%rax, 80(%rsp)                  # 8-byte Spill
.Ltmp900:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
.LBB0_222:                              # %if.end1825
                                        #   in Loop: Header=BB0_220 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rbx
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpq	232(%rsp), %rbp                 # 8-byte Folded Reload
.Ltmp901:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jl	.LBB0_219
.Ltmp902:
# %bb.223:                              # %if.then1829
                                        #   in Loop: Header=BB0_220 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rbx
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	328(%rsp), %rax                 # 8-byte Reload
.Ltmp903:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	leaq	(%rax,%rbp), %rdx
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movq	64(%rsp), %rcx                  # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	104(%rsp), %rax                 # 8-byte Reload
	movq	72(%rsp), %r8                   # 8-byte Reload
	movl	%r11d, %r14d
.Ltmp904:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r14d
	callq	*31928(%rax,%r8,8)
.Ltmp905:
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%r14d, %r11d
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	movslq	%r12d, %rcx
	movq	40(%rsp), %rdx                  # 8-byte Reload
	movzwl	(%rdx,%rcx,2), %ecx
	movq	24(%rsp), %rdx                  # 8-byte Reload
	movq	288(%rsp), %rdi                 # 8-byte Reload
	movzwl	(%rdx,%rdi,2), %edx
	addl	%eax, %ecx
	addl	%edx, %ecx
.Ltmp906:
	#DEBUG_VALUE: cost <- $ecx
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%r14d, %ecx
.Ltmp907:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmovll	%ecx, %r11d
	movq	112(%rsp), %rax                 # 8-byte Reload
	cmovll	240(%rsp), %eax                 # 4-byte Folded Reload
	movq	%rax, 112(%rsp)                 # 8-byte Spill
.Ltmp908:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	80(%rsp), %rax                  # 8-byte Reload
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmovll	%ebp, %eax
.Ltmp909:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	%rax, 80(%rsp)                  # 8-byte Spill
.Ltmp910:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	jmp	.LBB0_219
.Ltmp911:
.LBB0_224:                              # %for.end1860
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 3
	movq	344(%rsp), %rax                 # 8-byte Reload
                                        # kill: def $eax killed $eax killed $rax
	movq	240(%rsp), %rdx                 # 8-byte Reload
.Ltmp912:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	subl	%edx, %eax
	movl	%edx, %ecx
	subl	392(%rsp), %ecx                 # 4-byte Folded Reload
	cmpl	%ecx, %eax
	cmovll	%eax, %ecx
	movq	424(%rsp), %rsi                 # 8-byte Reload
	cmpl	%ecx, %esi
	setg	%al
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	cmpl	$6, %esi
	setl	%cl
	movl	$3, %r13d
.Ltmp913:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	orb	%al, %cl
	jne	.LBB0_238
.Ltmp914:
# %bb.225:                              # %for.body1878.preheader
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 3
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	leal	-2(%rsi), %eax
	movq	%rax, 480(%rsp)                 # 8-byte Spill
.Ltmp915:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	leal	-5(%rdx), %eax
	movq	%rax, 288(%rsp)                 # 8-byte Spill
	movl	%edx, %eax
	movq	%rax, 312(%rsp)                 # 8-byte Spill
	movq	64(%rsp), %rcx                  # 8-byte Reload
	leaq	(%rcx,%rcx,4), %rdi
	movq	376(%rsp), %rsi                 # 8-byte Reload
	movq	%rsi, %r8
	subq	%rdi, %r8
	movq	136(%rsp), %rdx                 # 8-byte Reload
	addq	%rdx, %r8
	leaq	(,%rcx,4), %rax
	movq	%rax, 504(%rsp)                 # 8-byte Spill
	negq	%rax
	movq	%rax, 536(%rsp)                 # 8-byte Spill
	addq	%rsi, %rdi
	addq	%rdx, %rdi
	movq	%rcx, %rax
	shlq	$32, %rax
	leaq	(%rax,%rax,2), %r9
	negq	%r9
	movq	%rcx, %rax
	shlq	$34, %rax
	movq	%rax, 656(%rsp)                 # 8-byte Spill
	leaq	(%rcx,%rcx,2), %rbx
	addq	%rsi, %rbx
	addq	%rdx, %rbx
	movl	$-12, %ebp
	xorl	%r14d, %r14d
	movl	$-20, %r12d
	xorl	%r15d, %r15d
	jmp	.LBB0_227
.Ltmp916:
.LBB0_226:                              # %for.body1878
                                        #   in Loop: Header=BB0_227 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edi
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $r15
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 7, DW_OP_stack_value] $r15
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	leaq	4(%r15), %r13
	addq	$7, %r15
.Ltmp917:
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	288(%rsp), %rax                 # 8-byte Reload
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	addl	$-4, %eax
	movq	%rax, 288(%rsp)                 # 8-byte Spill
	addl	$-16, %ebp
	addl	$16, %r14d
	addl	$-16, %r12d
	movq	232(%rsp), %r8                  # 8-byte Reload
	addq	536(%rsp), %r8                  # 8-byte Folded Reload
	movq	128(%rsp), %rdi                 # 8-byte Reload
	movq	504(%rsp), %rax                 # 8-byte Reload
	addq	%rax, %rdi
	movq	328(%rsp), %r9                  # 8-byte Reload
	subq	656(%rsp), %r9                  # 8-byte Folded Reload
	addq	%rax, %rbx
	cmpq	480(%rsp), %r15                 # 8-byte Folded Reload
	movq	%r13, %r15
.Ltmp918:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jae	.LBB0_237
.Ltmp919:
.LBB0_227:                              # %for.body1878
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $r15
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	384(%rsp), %rax                 # 8-byte Reload
.Ltmp920:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	leaq	(%rbx,%rax), %rsi
	movq	%r9, 328(%rsp)                  # 8-byte Spill
	movq	%r9, %rdx
	sarq	$32, %rdx
	addq	272(%rsp), %rdx                 # 8-byte Folded Reload
	movq	%rdi, 128(%rsp)                 # 8-byte Spill
	leaq	(%rdi,%rax), %rcx
	movq	%r8, 232(%rsp)                  # 8-byte Spill
	addq	%rax, %r8
	leaq	160(%rsp), %rax
	movq	%rax, (%rsp)
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movq	64(%rsp), %r9                   # 8-byte Reload
                                        # kill: def $r9d killed $r9d killed $r9
	movq	104(%rsp), %rax                 # 8-byte Reload
	movq	72(%rsp), %r10                  # 8-byte Reload
	movl	%r11d, %r13d
.Ltmp921:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r13d
	callq	*32040(%rax,%r10,8)
.Ltmp922:
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%r13d, %r11d
	movq	40(%rsp), %rsi                  # 8-byte Reload
	movq	152(%rsp), %rdi                 # 8-byte Reload
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	movzwl	(%rsi,%rdi,2), %eax
	movq	144(%rsp), %r13                 # 8-byte Reload
.Ltmp923:
	leal	12(%r13,%r14), %ecx
	movslq	%ecx, %rcx
	movq	24(%rsp), %r8                   # 8-byte Reload
	movzwl	(%r8,%rcx,2), %edx
	addl	%eax, %edx
	addl	160(%rsp), %edx
	movl	%edx, 160(%rsp)
	movzwl	(%rsi,%rdi,2), %eax
	leal	(%r13,%rbp), %ecx
	movslq	%ecx, %rcx
	movzwl	(%r8,%rcx,2), %esi
	addl	%eax, %esi
	addl	164(%rsp), %esi
.Ltmp924:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%r11d, %edx
.Ltmp925:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	movl	%r11d, %eax
	cmovll	%edx, %eax
	movq	312(%rsp), %rcx                 # 8-byte Reload
	leal	3(%rcx,%r15), %ecx
	cmovgel	112(%rsp), %ecx                 # 4-byte Folded Reload
.Ltmp926:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ecx
	#DEBUG_VALUE: x264_me_search_ref:bmx <- undef
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%eax, %esi
.Ltmp927:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jl	.LBB0_229
.Ltmp928:
# %bb.228:                              # %for.body1878
                                        #   in Loop: Header=BB0_227 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ecx
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $r15
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	80(%rsp), %r9                   # 8-byte Reload
	movq	32(%rsp), %r10                  # 8-byte Reload
	jmp	.LBB0_230
.Ltmp929:
.LBB0_229:                              #   in Loop: Header=BB0_227 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ecx
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $r15
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	movq	288(%rsp), %rax                 # 8-byte Reload
.Ltmp930:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	leal	2(%rax), %ecx
.Ltmp931:
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%esi, %eax
.Ltmp932:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 288, DW_OP_deref] $rsp
	movq	32(%rsp), %r10                  # 8-byte Reload
	movl	%r10d, %r9d
.Ltmp933:
.LBB0_230:                              # %for.body1878
                                        #   in Loop: Header=BB0_227 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $r15
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%r11d, %edx
.Ltmp934:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	movl	%esi, 164(%rsp)
	movq	40(%rsp), %rdi                  # 8-byte Reload
	movq	152(%rsp), %r11                 # 8-byte Reload
	movzwl	(%rdi,%r11,2), %esi
	leal	20(%r13,%r14), %edx
	movslq	%edx, %rdx
	movzwl	(%r8,%rdx,2), %edx
	cmovll	%r10d, %r9d
	addl	%esi, %edx
	addl	168(%rsp), %edx
	movl	%edx, 168(%rsp)
	movzwl	(%rdi,%r11,2), %edi
	leal	(%r12,%r13), %esi
	movslq	%esi, %rsi
	movzwl	(%r8,%rsi,2), %esi
	addl	%edi, %esi
	addl	172(%rsp), %esi
.Ltmp935:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ecx
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%eax, %edx
.Ltmp936:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jl	.LBB0_232
.Ltmp937:
# %bb.231:                              # %for.body1878
                                        #   in Loop: Header=BB0_227 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ecx
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $r15
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%eax, %edi
	jmp	.LBB0_233
.Ltmp938:
.LBB0_232:                              #   in Loop: Header=BB0_227 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ecx
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $r15
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	movq	312(%rsp), %rcx                 # 8-byte Reload
.Ltmp939:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	addl	%r15d, %ecx
	addl	$5, %ecx
	movl	%edx, %edi
.Ltmp940:
.LBB0_233:                              # %for.body1878
                                        #   in Loop: Header=BB0_227 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $r15
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ecx
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edi
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%esi, %r11d
	movq	288(%rsp), %r8                  # 8-byte Reload
                                        # kill: def $r8d killed $r8d killed $r8 def $r8
	movq	%r8, 112(%rsp)                  # 8-byte Spill
	movl	%r10d, %r8d
.Ltmp941:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%edi, %esi
.Ltmp942:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jl	.LBB0_235
.Ltmp943:
# %bb.234:                              # %for.body1878
                                        #   in Loop: Header=BB0_227 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ecx
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edi
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $r15
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%edi, %r11d
                                        # kill: def $ecx killed $ecx def $rcx
	movq	%rcx, 112(%rsp)                 # 8-byte Spill
.Ltmp944:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	movl	%r9d, %r8d
.Ltmp945:
.LBB0_235:                              # %for.body1878
                                        #   in Loop: Header=BB0_227 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ecx
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edi
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $r15
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	movl	%esi, 172(%rsp)
	movl	%r10d, %ecx
.Ltmp946:
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	%rcx, 80(%rsp)                  # 8-byte Spill
.Ltmp947:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%eax, %edx
.Ltmp948:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jl	.LBB0_226
.Ltmp949:
# %bb.236:                              # %for.body1878
                                        #   in Loop: Header=BB0_227 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edi
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $r15
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%r8d, %eax
	movq	%rax, 80(%rsp)                  # 8-byte Spill
	jmp	.LBB0_226
.Ltmp950:
.LBB0_237:                              # %if.end2005.loopexit
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	addl	$3, %r13d
	movq	240(%rsp), %rdx                 # 8-byte Reload
	movq	424(%rsp), %rsi                 # 8-byte Reload
.Ltmp951:
.LBB0_238:                              # %if.end2005
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	488(%rsp), %rax                 # 8-byte Reload
	negq	%rax
	movq	%rax, 288(%rsp)                 # 8-byte Spill
	movq	600(%rsp), %rdi                 # 8-byte Reload
	movq	384(%rsp), %rax                 # 8-byte Reload
	leaq	(%rax,%rdi), %rcx
	decq	%rcx
	movq	%rcx, 376(%rsp)                 # 8-byte Spill
	addq	%rdi, %rax
	incq	%rax
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
.Ltmp952:
	#DEBUG_VALUE: i <- $r13d
	movq	%rax, 384(%rsp)                 # 8-byte Spill
.Ltmp953:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%esi, %r13d
.Ltmp954:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jge	.LBB0_246
.Ltmp955:
# %bb.239:                              # %for.body2009.lr.ph
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r13d
	movl	%r13d, %ebx
	movslq	%edx, %r8
	movslq	344(%rsp), %rax                 # 4-byte Folded Reload
	movq	%rax, 272(%rsp)                 # 8-byte Spill
	movslq	392(%rsp), %rax                 # 4-byte Folded Reload
	movq	%rax, 232(%rsp)                 # 8-byte Spill
	movslq	%esi, %rax
	movq	%rax, 328(%rsp)                 # 8-byte Spill
	leal	(,%r13,4), %eax
	movq	144(%rsp), %rcx                 # 8-byte Reload
	subl	%eax, %ecx
	movq	%rcx, 144(%rsp)                 # 8-byte Spill
	movq	%r8, %r15
	subq	%rbx, %r15
	movq	%r15, %r14
	movq	64(%rsp), %rax                  # 8-byte Reload
	imulq	%rax, %r14
	addq	%rdi, %r14
	movq	%r8, 128(%rsp)                  # 8-byte Spill
	leaq	(%r8,%rbx), %rbp
	imulq	%rax, %rbp
	addq	%rdi, %rbp
	movl	%edx, %eax
	movq	%rax, 312(%rsp)                 # 8-byte Spill
	addl	%edx, %r13d
.Ltmp956:
	#DEBUG_VALUE: i <- $ebx
	shll	$2, %r13d
	jmp	.LBB0_242
.Ltmp957:
.LBB0_240:                              # %if.then2045
                                        #   in Loop: Header=BB0_242 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rbx
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	56(%rsp), %rdi                  # 8-byte Reload
.Ltmp958:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	movl	$16, %esi
	movq	%r14, %rdx
	movq	64(%rsp), %rcx                  # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	104(%rsp), %rax                 # 8-byte Reload
	movq	72(%rsp), %r8                   # 8-byte Reload
	movl	%r11d, %r12d
.Ltmp959:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	callq	*31928(%rax,%r8,8)
.Ltmp960:
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%r12d, %r11d
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	152(%rsp), %rdx                 # 8-byte Reload
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	movzwl	(%rcx,%rdx,2), %ecx
	movq	144(%rsp), %rdi                 # 8-byte Reload
	movslq	%edi, %rdx
	movq	24(%rsp), %rsi                  # 8-byte Reload
	movzwl	(%rsi,%rdx,2), %edx
	addl	%eax, %ecx
	addl	%edx, %ecx
.Ltmp961:
	#DEBUG_VALUE: cost <- $ecx
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%r12d, %ecx
.Ltmp962:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmovll	%ecx, %r11d
	movq	112(%rsp), %rax                 # 8-byte Reload
	cmovll	%r15d, %eax
	movq	%rax, 112(%rsp)                 # 8-byte Spill
.Ltmp963:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	80(%rsp), %rax                  # 8-byte Reload
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmovll	32(%rsp), %eax                  # 4-byte Folded Reload
.Ltmp964:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	%rax, 80(%rsp)                  # 8-byte Spill
.Ltmp965:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
.LBB0_241:                              # %for.inc2074
                                        #   in Loop: Header=BB0_242 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rbx
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	addq	$2, %rbx
.Ltmp966:
	#DEBUG_VALUE: i <- $rbx
	addq	$-2, %r15
	addl	$-8, %edi
	movq	%rdi, 144(%rsp)                 # 8-byte Spill
	addq	288(%rsp), %r14                 # 8-byte Folded Reload
	addl	$8, %r13d
	addq	488(%rsp), %rbp                 # 8-byte Folded Reload
	cmpq	328(%rsp), %rbx                 # 8-byte Folded Reload
.Ltmp967:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jge	.LBB0_246
.Ltmp968:
.LBB0_242:                              # %for.body2009
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: i <- $rbx
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	128(%rsp), %rax                 # 8-byte Reload
.Ltmp969:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	addq	%rbx, %rax
	cmpq	272(%rsp), %rax                 # 8-byte Folded Reload
.Ltmp970:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jg	.LBB0_244
.Ltmp971:
# %bb.243:                              # %if.then2013
                                        #   in Loop: Header=BB0_242 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rbx
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	56(%rsp), %rdi                  # 8-byte Reload
.Ltmp972:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	movl	$16, %esi
	movq	%rbp, %rdx
	movq	64(%rsp), %rcx                  # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	104(%rsp), %rax                 # 8-byte Reload
	movq	72(%rsp), %r8                   # 8-byte Reload
	movl	%r11d, %r12d
.Ltmp973:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	callq	*31928(%rax,%r8,8)
.Ltmp974:
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	%r12d, %r11d
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	152(%rsp), %rdx                 # 8-byte Reload
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	movzwl	(%rcx,%rdx,2), %ecx
	movq	312(%rsp), %rdx                 # 8-byte Reload
	addl	%ebx, %edx
	movslq	%r13d, %rsi
	movq	24(%rsp), %rdi                  # 8-byte Reload
	movzwl	(%rdi,%rsi,2), %esi
	addl	%eax, %ecx
	addl	%esi, %ecx
.Ltmp975:
	#DEBUG_VALUE: cost <- $ecx
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpl	%r12d, %ecx
.Ltmp976:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmovll	%ecx, %r11d
	movq	112(%rsp), %rax                 # 8-byte Reload
	cmovll	%edx, %eax
	movq	%rax, 112(%rsp)                 # 8-byte Spill
.Ltmp977:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	80(%rsp), %rax                  # 8-byte Reload
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmovll	32(%rsp), %eax                  # 4-byte Folded Reload
.Ltmp978:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	%rax, 80(%rsp)                  # 8-byte Spill
.Ltmp979:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
.LBB0_244:                              # %if.end2041
                                        #   in Loop: Header=BB0_242 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rbx
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	cmpq	232(%rsp), %r15                 # 8-byte Folded Reload
.Ltmp980:
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jge	.LBB0_240
.Ltmp981:
# %bb.245:                              #   in Loop: Header=BB0_242 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rbx
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	144(%rsp), %rdi                 # 8-byte Reload
	.loc	0 412 21                        # x264_src/encoder/me.c:412:21
	jmp	.LBB0_241
.Ltmp982:
.LBB0_246:                              # %for.end2076
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: pix_base <- undef
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	288(%rsp), %rdx                 # 8-byte Reload
	movq	376(%rsp), %rax                 # 8-byte Reload
.Ltmp983:
	.loc	0 413 21 is_stmt 1              # x264_src/encoder/me.c:413:21
	leaq	(%rax,%rdx), %rsi
	addq	384(%rsp), %rdx                 # 8-byte Folded Reload
	movq	464(%rsp), %r8                  # 8-byte Reload
	movq	592(%rsp), %rax                 # 8-byte Reload
	leaq	(%rax,%r8), %rcx
	addq	576(%rsp), %r8                  # 8-byte Folded Reload
	leaq	160(%rsp), %rax
	movq	%rax, (%rsp)
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movq	64(%rsp), %r13                  # 8-byte Reload
	movl	%r13d, %r9d
	movq	104(%rsp), %r14                 # 8-byte Reload
	movq	72(%rsp), %r15                  # 8-byte Reload
	movl	%r11d, %ebx
.Ltmp984:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebx
	callq	*32040(%r14,%r15,8)
.Ltmp985:
	.loc	0 0 21 is_stmt 0                # x264_src/encoder/me.c:0:21
	movq	%r15, %r11
	movq	%r14, %r10
	movq	40(%rsp), %r15                  # 8-byte Reload
	movq	528(%rsp), %rax                 # 8-byte Reload
	.loc	0 413 21                        # x264_src/encoder/me.c:413:21
	movzwl	(%r15,%rax,2), %eax
	movq	24(%rsp), %r12                  # 8-byte Reload
	movq	640(%rsp), %rdx                 # 8-byte Reload
	movzwl	(%r12,%rdx,2), %ecx
	addl	%eax, %ecx
	addl	160(%rsp), %ecx
	movl	%ecx, 160(%rsp)
	movq	520(%rsp), %rax                 # 8-byte Reload
	movzwl	(%r15,%rax,2), %eax
	movzwl	(%r12,%rdx,2), %edx
	addl	%eax, %edx
	addl	164(%rsp), %edx
.Ltmp986:
	.loc	0 413 21                        # x264_src/encoder/me.c:413:21
	cmpl	%ebx, %ecx
.Ltmp987:
	.loc	0 413 21                        # x264_src/encoder/me.c:413:21
	movl	%ebx, %eax
	cmovll	%ecx, %eax
.Ltmp988:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	.loc	0 413 21                        # x264_src/encoder/me.c:413:21
	cmpl	%eax, %edx
	movq	112(%rsp), %rbp                 # 8-byte Reload
	movl	560(%rsp), %esi                 # 4-byte Reload
.Ltmp989:
	.loc	0 413 21                        # x264_src/encoder/me.c:413:21
	cmovll	%esi, %ebp
.Ltmp990:
	.loc	0 413 21                        # x264_src/encoder/me.c:413:21
	cmpl	%ebx, %ecx
	movq	80(%rsp), %r14                  # 8-byte Reload
.Ltmp991:
	.loc	0 413 21                        # x264_src/encoder/me.c:413:21
	cmovll	472(%rsp), %r14d                # 4-byte Folded Reload
.Ltmp992:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r14d
	cmovll	%esi, %ebp
.Ltmp993:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	.loc	0 413 21                        # x264_src/encoder/me.c:413:21
	cmpl	%eax, %edx
.Ltmp994:
	.loc	0 413 21                        # x264_src/encoder/me.c:413:21
	movl	%edx, 164(%rsp)
	movq	584(%rsp), %rcx                 # 8-byte Reload
	movzwl	(%r15,%rcx,2), %ecx
	cmovll	%edx, %eax
.Ltmp995:
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	648(%rsp), %rsi                 # 8-byte Reload
	.loc	0 413 21                        # x264_src/encoder/me.c:413:21
	movzwl	(%r12,%rsi,2), %edx
	cmovll	476(%rsp), %r14d                # 4-byte Folded Reload
.Ltmp996:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r14d
	addl	%ecx, %edx
	addl	168(%rsp), %edx
	movl	%edx, 168(%rsp)
	movq	568(%rsp), %rcx                 # 8-byte Reload
	movzwl	(%r15,%rcx,2), %ecx
	movzwl	(%r12,%rsi,2), %esi
	addl	%ecx, %esi
	addl	172(%rsp), %esi
.Ltmp997:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	.loc	0 413 21                        # x264_src/encoder/me.c:413:21
	cmpl	%eax, %edx
.Ltmp998:
	.loc	0 413 21                        # x264_src/encoder/me.c:413:21
	movl	%eax, %ebx
	cmovll	%edx, %ebx
.Ltmp999:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebx
	.loc	0 413 21                        # x264_src/encoder/me.c:413:21
	cmpl	%ebx, %esi
	movl	564(%rsp), %ecx                 # 4-byte Reload
.Ltmp1000:
	.loc	0 413 21                        # x264_src/encoder/me.c:413:21
	cmovll	%ecx, %ebp
.Ltmp1001:
	.loc	0 413 21                        # x264_src/encoder/me.c:413:21
	cmpl	%eax, %edx
.Ltmp1002:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- undef
	.loc	0 413 21                        # x264_src/encoder/me.c:413:21
	cmovll	%ecx, %ebp
.Ltmp1003:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	cmovll	500(%rsp), %r14d                # 4-byte Folded Reload
.Ltmp1004:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r14d
	.loc	0 413 21                        # x264_src/encoder/me.c:413:21
	cmpl	%ebx, %esi
.Ltmp1005:
	.loc	0 413 21                        # x264_src/encoder/me.c:413:21
	movl	%esi, 172(%rsp)
	cmovll	%esi, %ebx
.Ltmp1006:
	cmovll	496(%rsp), %r14d                # 4-byte Folded Reload
.Ltmp1007:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r14d
	#DEBUG_VALUE: pix_base <- undef
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebx
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	488(%rsp), %rax                 # 8-byte Reload
	movq	376(%rsp), %rcx                 # 8-byte Reload
.Ltmp1008:
	.loc	0 414 21 is_stmt 1              # x264_src/encoder/me.c:414:21
	addq	%rax, %rcx
	movq	384(%rsp), %r8                  # 8-byte Reload
	addq	%rax, %r8
	movq	592(%rsp), %rsi                 # 8-byte Reload
	addq	%r13, %rsi
	movq	576(%rsp), %rdx                 # 8-byte Reload
	addq	%r13, %rdx
	movq	%r13, %r9
	leaq	160(%rsp), %rax
	movq	%rax, (%rsp)
	movq	56(%rsp), %rdi                  # 8-byte Reload
                                        # kill: def $r9d killed $r9d killed $r9
	callq	*32040(%r10,%r11,8)
.Ltmp1009:
	.loc	0 0 21 is_stmt 0                # x264_src/encoder/me.c:0:21
	movq	584(%rsp), %rax                 # 8-byte Reload
	.loc	0 414 21                        # x264_src/encoder/me.c:414:21
	movzwl	(%r15,%rax,2), %eax
	movq	632(%rsp), %rdx                 # 8-byte Reload
	movzwl	(%r12,%rdx,2), %ecx
	addl	%eax, %ecx
	addl	160(%rsp), %ecx
	movl	%ecx, 160(%rsp)
	movq	568(%rsp), %rax                 # 8-byte Reload
	movzwl	(%r15,%rax,2), %eax
	movzwl	(%r12,%rdx,2), %edx
	addl	%eax, %edx
	addl	164(%rsp), %edx
.Ltmp1010:
	.loc	0 414 21                        # x264_src/encoder/me.c:414:21
	cmpl	%ebx, %ecx
.Ltmp1011:
	.loc	0 414 21                        # x264_src/encoder/me.c:414:21
	movl	%ebx, %eax
	cmovll	%ecx, %eax
.Ltmp1012:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	.loc	0 414 21                        # x264_src/encoder/me.c:414:21
	cmpl	%eax, %edx
	movl	552(%rsp), %esi                 # 4-byte Reload
.Ltmp1013:
	.loc	0 414 21                        # x264_src/encoder/me.c:414:21
	cmovll	%esi, %ebp
.Ltmp1014:
	.loc	0 414 21                        # x264_src/encoder/me.c:414:21
	cmpl	%ebx, %ecx
.Ltmp1015:
	.loc	0 414 21                        # x264_src/encoder/me.c:414:21
	cmovll	500(%rsp), %r14d                # 4-byte Folded Reload
.Ltmp1016:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r14d
	cmovll	%esi, %ebp
.Ltmp1017:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	.loc	0 414 21                        # x264_src/encoder/me.c:414:21
	cmpl	%eax, %edx
.Ltmp1018:
	.loc	0 414 21                        # x264_src/encoder/me.c:414:21
	movl	%edx, 164(%rsp)
	cmovll	%edx, %eax
.Ltmp1019:
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	528(%rsp), %rcx                 # 8-byte Reload
	.loc	0 414 21                        # x264_src/encoder/me.c:414:21
	movzwl	(%r15,%rcx,2), %ecx
	cmovll	496(%rsp), %r14d                # 4-byte Folded Reload
.Ltmp1020:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r14d
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	624(%rsp), %rsi                 # 8-byte Reload
	.loc	0 414 21                        # x264_src/encoder/me.c:414:21
	movzwl	(%r12,%rsi,2), %edx
	addl	%ecx, %edx
	addl	168(%rsp), %edx
	movl	%edx, 168(%rsp)
	movq	520(%rsp), %rcx                 # 8-byte Reload
	movzwl	(%r15,%rcx,2), %ecx
	movzwl	(%r12,%rsi,2), %esi
	addl	%ecx, %esi
	addl	172(%rsp), %esi
.Ltmp1021:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	.loc	0 414 21                        # x264_src/encoder/me.c:414:21
	cmpl	%eax, %edx
.Ltmp1022:
	.loc	0 414 21                        # x264_src/encoder/me.c:414:21
	movl	%eax, %r11d
	cmovll	%edx, %r11d
.Ltmp1023:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 414 21                        # x264_src/encoder/me.c:414:21
	cmpl	%r11d, %esi
	movl	556(%rsp), %ecx                 # 4-byte Reload
.Ltmp1024:
	.loc	0 414 21                        # x264_src/encoder/me.c:414:21
	cmovll	%ecx, %ebp
.Ltmp1025:
	.loc	0 414 21                        # x264_src/encoder/me.c:414:21
	cmpl	%eax, %edx
.Ltmp1026:
	.loc	0 414 21                        # x264_src/encoder/me.c:414:21
	cmovll	472(%rsp), %r14d                # 4-byte Folded Reload
.Ltmp1027:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r14d
	cmovll	%ecx, %ebp
.Ltmp1028:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	%rbp, 112(%rsp)                 # 8-byte Spill
.Ltmp1029:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	.loc	0 414 21                        # x264_src/encoder/me.c:414:21
	cmpl	%r11d, %esi
.Ltmp1030:
	.loc	0 414 21                        # x264_src/encoder/me.c:414:21
	cmovll	%esi, %r11d
.Ltmp1031:
	movl	%esi, 172(%rsp)
	cmovll	476(%rsp), %r14d                # 4-byte Folded Reload
.Ltmp1032:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r14d
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	%r14, 80(%rsp)                  # 8-byte Spill
.Ltmp1033:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	movl	416(%rsp), %ebp                 # 4-byte Reload
.Ltmp1034:
	.loc	0 415 31 is_stmt 1              # x264_src/encoder/me.c:415:31
	cmpl	%ebp, %r11d
.Ltmp1035:
	#DEBUG_VALUE: cross_start <- undef
	.loc	0 0 31 is_stmt 0                # x264_src/encoder/me.c:0:31
	jne	.LBB0_248
.Ltmp1036:
# %bb.247:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	movq	%r12, %r10
	jmp	.LBB0_148
.Ltmp1037:
.LBB0_248:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: range <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	movq	424(%rsp), %rbp                 # 8-byte Reload
	addl	$2, %ebp
	movq	336(%rsp), %r12                 # 8-byte Reload
	movq	280(%rsp), %rdx                 # 8-byte Reload
	movq	240(%rsp), %r15                 # 8-byte Reload
.Ltmp1038:
.LBB0_249:                              # %if.end2306
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	movq	264(%rsp), %r8                  # 8-byte Reload
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
.Ltmp1039:
	#DEBUG_VALUE: cross_start <- $ebp
	.loc	0 422 17 is_stmt 1              # x264_src/encoder/me.c:422:17
	testl	%r8d, %r8d
	movq	%r15, 240(%rsp)                 # 8-byte Spill
	jne	.LBB0_162
.Ltmp1040:
.LBB0_250:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- $ebp
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	movq	136(%rsp), %r8                  # 8-byte Reload
	movq	320(%rsp), %r9                  # 8-byte Reload
.Ltmp1041:
.LBB0_251:                              # %if.end2410
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- $r9d
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- $r9d
	#DEBUG_VALUE: i <- undef
	.loc	0 476 13 is_stmt 1              # x264_src/encoder/me.c:476:13
	movl	%r12d, %eax
	movq	32(%rsp), %rcx                  # 8-byte Reload
	subl	%ecx, %eax
                                        # kill: def $ecx killed $ecx killed $rcx
	subl	%edx, %ecx
	cmpl	%ecx, %eax
	cmovll	%eax, %ecx
	cmpl	%ecx, %r9d
	movq	%r9, 320(%rsp)                  # 8-byte Spill
.Ltmp1042:
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/me.c:0:13
	movq	%rbp, 424(%rsp)                 # 8-byte Spill
.Ltmp1043:
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jg	.LBB0_252
.Ltmp1044:
# %bb.253:                              # %for.cond2425.preheader
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	leal	-2(%r9), %eax
.Ltmp1045:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- undef
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	#DEBUG_VALUE: x264_me_search_ref:bcost <- undef
	#DEBUG_VALUE: i <- undef
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%eax, %ebp
.Ltmp1046:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jge	.LBB0_252
.Ltmp1047:
# %bb.254:                              # %for.body2429.lr.ph
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%r11d, 48(%rsp)                 # 4-byte Spill
.Ltmp1048:
	#DEBUG_VALUE: x264_me_search_ref:mvc <- undef
	movq	32(%rsp), %rsi                  # 8-byte Reload
	movslq	%esi, %rcx
	movl	%r15d, %edx
	imull	%r13d, %edx
	movslq	%edx, %rdx
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	addq	%rcx, %rdx
	leal	(,%r15,4), %ecx
	movslq	%ecx, %r9
	movslq	%ebp, %rcx
	cltq
	movq	%rax, 128(%rsp)                 # 8-byte Spill
	movl	%esi, %edi
	subl	%ebp, %edi
	leal	(,%rsi,4), %r10d
	leal	(,%rbp,4), %r12d
	movl	%r12d, %r13d
	negl	%r13d
	leal	(%rsi,%rbp), %eax
	movq	%rax, 288(%rsp)                 # 8-byte Spill
	movq	%rdi, 272(%rsp)                 # 8-byte Spill
                                        # kill: def $edi killed $edi killed $rdi def $rdi
	addl	$-2, %edi
	movq	%rdi, 232(%rsp)                 # 8-byte Spill
	movq	%rdx, %rax
	subq	%rcx, %rax
	addq	%r8, %rax
	movq	%rax, 264(%rsp)                 # 8-byte Spill
.Ltmp1049:
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- undef
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%rcx, 144(%rsp)                 # 8-byte Spill
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	addq	%rcx, %rdx
	addq	%r8, %rdx
	movq	%rdx, 152(%rsp)                 # 8-byte Spill
	xorl	%r14d, %r14d
	xorl	%ebx, %ebx
	jmp	.LBB0_257
.Ltmp1050:
	.p2align	4, 0x90
.LBB0_255:                              # %for.body2429
                                        #   in Loop: Header=BB0_257 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edx
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%edx, 48(%rsp)                  # 4-byte Spill
.Ltmp1051:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
.LBB0_256:                              # %for.body2429
                                        #   in Loop: Header=BB0_257 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edx
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	movq	144(%rsp), %rax                 # 8-byte Reload
.Ltmp1052:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	addq	%rbx, %rax
	addq	$4, %rax
.Ltmp1053:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_consts 4, DW_OP_div, DW_OP_consts 4, DW_OP_mul, DW_OP_consts 4, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 5, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	addq	$4, %rbx
	addq	$-4, %r14
	addl	$-16, %r13d
	addl	$16, %r12d
	cmpq	128(%rsp), %rax                 # 8-byte Folded Reload
.Ltmp1054:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jge	.LBB0_269
.Ltmp1055:
.LBB0_257:                              # %for.body2429
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	80(%rsp), %rax                  # 8-byte Reload
                                        # kill: def $eax killed $eax killed $rax
.Ltmp1056:
	#DEBUG_VALUE: pix_base <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_stack_value] undef
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_consts 4, DW_OP_div, DW_OP_consts 4, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 5, DW_OP_plus, DW_OP_stack_value] undef, undef
	movl	%eax, 80(%rsp)                  # 4-byte Spill
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
.Ltmp1057:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	movq	152(%rsp), %rax                 # 8-byte Reload
.Ltmp1058:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	leaq	(%rax,%rbx), %rsi
	movq	264(%rsp), %rdi                 # 8-byte Reload
	leaq	(%rdi,%r14), %rdx
	leaq	2(%rax,%rbx), %rcx
	leaq	-2(%rdi,%r14), %r8
	leaq	160(%rsp), %rax
	movq	%rax, (%rsp)
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movq	%r9, %rbp
	movq	64(%rsp), %r9                   # 8-byte Reload
                                        # kill: def $r9d killed $r9d killed $r9
	movq	104(%rsp), %rax                 # 8-byte Reload
	movq	%r10, %r15
	movq	72(%rsp), %r10                  # 8-byte Reload
	callq	*32040(%rax,%r10,8)
.Ltmp1059:
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%r15, %r10
	movq	%rbp, %r9
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	leal	(%r15,%r12), %eax
	cltq
	movq	40(%rsp), %rsi                  # 8-byte Reload
	movzwl	(%rsi,%rax,2), %eax
	movq	24(%rsp), %rdx                  # 8-byte Reload
	movzwl	(%rdx,%rbp,2), %ecx
	addl	%eax, %ecx
	addl	160(%rsp), %ecx
	movl	%ecx, 160(%rsp)
	leal	(%r15,%r13), %eax
	cltq
	movzwl	(%rsi,%rax,2), %eax
	movzwl	(%rdx,%rbp,2), %edx
	addl	%eax, %edx
	addl	164(%rsp), %edx
	movl	48(%rsp), %edi                  # 4-byte Reload
.Ltmp1060:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%edi, %ecx
.Ltmp1061:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	movl	%edi, %eax
	cmovll	%ecx, %eax
	movq	288(%rsp), %rsi                 # 8-byte Reload
	leal	(%rsi,%rbx), %esi
	cmovgel	80(%rsp), %esi                  # 4-byte Folded Reload
.Ltmp1062:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $esi
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%rsi, 80(%rsp)                  # 8-byte Spill
.Ltmp1063:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%eax, %edx
.Ltmp1064:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jl	.LBB0_259
.Ltmp1065:
# %bb.258:                              # %for.body2429
                                        #   in Loop: Header=BB0_257 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	112(%rsp), %rsi                 # 8-byte Reload
	movq	240(%rsp), %r15                 # 8-byte Reload
	jmp	.LBB0_260
.Ltmp1066:
	.p2align	4, 0x90
.LBB0_259:                              #   in Loop: Header=BB0_257 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	movq	272(%rsp), %rax                 # 8-byte Reload
.Ltmp1067:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	addl	%r14d, %eax
	movq	%rax, 80(%rsp)                  # 8-byte Spill
.Ltmp1068:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $esi
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%edx, %eax
.Ltmp1069:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	movq	240(%rsp), %r15                 # 8-byte Reload
	movl	%r15d, %esi
.Ltmp1070:
.LBB0_260:                              # %for.body2429
                                        #   in Loop: Header=BB0_257 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%edi, %ecx
.Ltmp1071:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	movl	%edx, 164(%rsp)
	leal	8(%r10,%r12), %ecx
	movslq	%ecx, %rcx
	movq	40(%rsp), %r8                   # 8-byte Reload
	movzwl	(%r8,%rcx,2), %edx
	movq	24(%rsp), %rdi                  # 8-byte Reload
	movzwl	(%rdi,%r9,2), %ecx
                                        # kill: def $esi killed $esi killed $rsi
	cmovll	%r15d, %esi
	addl	%edx, %ecx
	addl	168(%rsp), %ecx
	movl	%ecx, 168(%rsp)
	leal	(%r10,%r13), %edx
	addl	$-8, %edx
	movslq	%edx, %rdx
	movzwl	(%r8,%rdx,2), %edx
	movzwl	(%rdi,%r9,2), %r8d
	addl	%edx, %r8d
	addl	172(%rsp), %r8d
.Ltmp1072:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%ecx, %edx
.Ltmp1073:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%eax, %ecx
.Ltmp1074:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jl	.LBB0_261
.Ltmp1075:
# %bb.264:                              # %for.body2429
                                        #   in Loop: Header=BB0_257 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%eax, %edx
.Ltmp1076:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edx
	movl	%r15d, %edi
	movq	%rdi, 112(%rsp)                 # 8-byte Spill
.Ltmp1077:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%edx, %r8d
.Ltmp1078:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jge	.LBB0_265
.Ltmp1079:
.LBB0_262:                              # %for.body2429
                                        #   in Loop: Header=BB0_257 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edx
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%eax, %ecx
.Ltmp1080:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jl	.LBB0_266
.Ltmp1081:
.LBB0_263:                              # %for.body2429
                                        #   in Loop: Header=BB0_257 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edx
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	movl	%r8d, 172(%rsp)
.Ltmp1082:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%edx, %r8d
.Ltmp1083:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jge	.LBB0_255
	jmp	.LBB0_267
.Ltmp1084:
	.p2align	4, 0x90
.LBB0_261:                              # %for.body2429
                                        #   in Loop: Header=BB0_257 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ecx
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%r15d, %edi
	movq	%rdi, 112(%rsp)                 # 8-byte Spill
.Ltmp1085:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%edx, %r8d
.Ltmp1086:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jl	.LBB0_262
.Ltmp1087:
.LBB0_265:                              # %for.body2429
                                        #   in Loop: Header=BB0_257 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edx
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
                                        # kill: def $esi killed $esi def $rsi
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%rsi, 112(%rsp)                 # 8-byte Spill
.Ltmp1088:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%eax, %ecx
.Ltmp1089:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jge	.LBB0_263
.Ltmp1090:
.LBB0_266:                              #   in Loop: Header=BB0_257 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edx
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	288(%rsp), %rax                 # 8-byte Reload
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	addl	%ebx, %eax
	addl	$2, %eax
	movq	%rax, 80(%rsp)                  # 8-byte Spill
.Ltmp1091:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- undef
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%r15d, %eax
	movq	%rax, 112(%rsp)                 # 8-byte Spill
.Ltmp1092:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	movl	%r8d, 172(%rsp)
.Ltmp1093:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%edx, %r8d
.Ltmp1094:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jge	.LBB0_255
.Ltmp1095:
.LBB0_267:                              #   in Loop: Header=BB0_257 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edx
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%r8d, 48(%rsp)                  # 4-byte Spill
	movq	232(%rsp), %rax                 # 8-byte Reload
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	addl	%r14d, %eax
	movq	%rax, 80(%rsp)                  # 8-byte Spill
.Ltmp1096:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- undef
	jmp	.LBB0_256
.Ltmp1097:
.LBB0_252:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_plus_uconst 264] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%ebp, %ebx
.Ltmp1098:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	movq	320(%rsp), %rdx                 # 8-byte Reload
.Ltmp1099:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%edx, %ebx
.Ltmp1100:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jge	.LBB0_277
	jmp	.LBB0_271
.Ltmp1101:
.LBB0_269:                              # %if.end2560.loopexit
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	addl	424(%rsp), %ebx                 # 4-byte Folded Reload
	movq	64(%rsp), %r13                  # 8-byte Reload
	movq	136(%rsp), %r8                  # 8-byte Reload
	movq	336(%rsp), %r12                 # 8-byte Reload
	movl	48(%rsp), %r11d                 # 4-byte Reload
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
.Ltmp1102:
	#DEBUG_VALUE: i <- $ebx
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	320(%rsp), %rdx                 # 8-byte Reload
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%edx, %ebx
.Ltmp1103:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jge	.LBB0_277
.Ltmp1104:
.LBB0_271:                              # %for.body2564.lr.ph
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $ebx
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%r15d, %eax
	imull	%r13d, %eax
	leal	(,%r15,4), %ecx
	movslq	%ecx, %rcx
	movq	%rcx, 48(%rsp)                  # 8-byte Spill
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	movslq	%ebx, %rsi
	movq	32(%rsp), %rcx                  # 8-byte Reload
	movslq	%ecx, %rdi
	movslq	%r12d, %r9
	movq	%r9, 144(%rsp)                  # 8-byte Spill
	movslq	%eax, %r9
	movslq	280(%rsp), %rax                 # 4-byte Folded Reload
	movq	%rax, 128(%rsp)                 # 8-byte Spill
	movslq	%edx, %rax
	movq	%rax, 264(%rsp)                 # 8-byte Spill
	leaq	(%r8,%r9), %rax
	movq	%rax, 232(%rsp)                 # 8-byte Spill
	leal	(,%rcx,4), %r13d
	leal	(,%rbx,4), %eax
	subl	%eax, %r13d
	movq	%rdi, %r12
	subq	%rsi, %r12
	addl	%ecx, %ebx
.Ltmp1105:
	movl	%ebx, %r14d
	shll	$2, %r14d
	movq	%rsi, 288(%rsp)                 # 8-byte Spill
	addq	%rsi, %rdi
	movq	%rdi, 152(%rsp)                 # 8-byte Spill
	addq	%rdi, %r9
	addq	%r8, %r9
	movq	%r9, 272(%rsp)                  # 8-byte Spill
	xorl	%r15d, %r15d
	jmp	.LBB0_273
.Ltmp1106:
	.p2align	4, 0x90
.LBB0_272:                              # %for.inc2629
                                        #   in Loop: Header=BB0_273 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	288(%rsp), %rax                 # 8-byte Reload
.Ltmp1107:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	addq	%r15, %rax
	addq	$2, %rax
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
.Ltmp1108:
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_div, DW_OP_consts 2, DW_OP_mul, DW_OP_consts 2, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 5, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef
	addq	$2, %r15
	addq	$-2, %r12
	addl	$-8, %r13d
	addl	$8, %r14d
	cmpq	264(%rsp), %rax                 # 8-byte Folded Reload
.Ltmp1109:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jge	.LBB0_277
.Ltmp1110:
.LBB0_273:                              # %for.body2564
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_div, DW_OP_consts 2, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 5, DW_OP_plus, DW_OP_stack_value] undef, undef
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	152(%rsp), %rax                 # 8-byte Reload
.Ltmp1111:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	addq	%r15, %rax
	cmpq	144(%rsp), %rax                 # 8-byte Folded Reload
.Ltmp1112:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jg	.LBB0_275
.Ltmp1113:
# %bb.274:                              # %if.then2568
                                        #   in Loop: Header=BB0_273 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	272(%rsp), %rax                 # 8-byte Reload
.Ltmp1114:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	leaq	(%rax,%r15), %rdx
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movq	64(%rsp), %rcx                  # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	104(%rsp), %rax                 # 8-byte Reload
	movq	72(%rsp), %r8                   # 8-byte Reload
	movl	%r11d, %ebp
.Ltmp1115:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	callq	*31928(%rax,%r8,8)
.Ltmp1116:
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%ebp, %r11d
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	leal	(%rbx,%r15), %ecx
	movslq	%r14d, %rdx
	movq	40(%rsp), %rsi                  # 8-byte Reload
	movzwl	(%rsi,%rdx,2), %edx
	movq	24(%rsp), %rsi                  # 8-byte Reload
	movq	48(%rsp), %rdi                  # 8-byte Reload
	movzwl	(%rsi,%rdi,2), %esi
	addl	%eax, %edx
	addl	%esi, %edx
.Ltmp1117:
	#DEBUG_VALUE: cost <- $edx
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%ebp, %edx
.Ltmp1118:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmovll	%edx, %r11d
	movq	112(%rsp), %rax                 # 8-byte Reload
	cmovll	240(%rsp), %eax                 # 4-byte Folded Reload
	movq	%rax, 112(%rsp)                 # 8-byte Spill
.Ltmp1119:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	80(%rsp), %rax                  # 8-byte Reload
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmovll	%ecx, %eax
.Ltmp1120:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%rax, 80(%rsp)                  # 8-byte Spill
.Ltmp1121:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
.LBB0_275:                              # %if.end2596
                                        #   in Loop: Header=BB0_273 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpq	128(%rsp), %r12                 # 8-byte Folded Reload
.Ltmp1122:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jl	.LBB0_272
.Ltmp1123:
# %bb.276:                              # %if.then2600
                                        #   in Loop: Header=BB0_273 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	232(%rsp), %rax                 # 8-byte Reload
.Ltmp1124:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	leaq	(%rax,%r12), %rdx
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movq	64(%rsp), %rcx                  # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	104(%rsp), %rax                 # 8-byte Reload
	movq	72(%rsp), %r8                   # 8-byte Reload
	movl	%r11d, %ebp
.Ltmp1125:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	callq	*31928(%rax,%r8,8)
.Ltmp1126:
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%ebp, %r11d
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	movslq	%r13d, %rcx
	movq	40(%rsp), %rdx                  # 8-byte Reload
	movzwl	(%rdx,%rcx,2), %ecx
	movq	24(%rsp), %rdx                  # 8-byte Reload
	movq	48(%rsp), %rsi                  # 8-byte Reload
	movzwl	(%rdx,%rsi,2), %edx
	addl	%eax, %ecx
	addl	%edx, %ecx
.Ltmp1127:
	#DEBUG_VALUE: cost <- $ecx
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%ebp, %ecx
.Ltmp1128:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmovll	%ecx, %r11d
	movq	112(%rsp), %rax                 # 8-byte Reload
	cmovll	240(%rsp), %eax                 # 4-byte Folded Reload
	movq	%rax, 112(%rsp)                 # 8-byte Spill
.Ltmp1129:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	80(%rsp), %rax                  # 8-byte Reload
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmovll	%r12d, %eax
.Ltmp1130:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%rax, 80(%rsp)                  # 8-byte Spill
.Ltmp1131:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	jmp	.LBB0_272
.Ltmp1132:
.LBB0_277:                              # %for.end2631
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- undef
	movq	320(%rsp), %rax                 # 8-byte Reload
.Ltmp1133:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	movl	%eax, %r9d
	sarl	%r9d
	movq	344(%rsp), %rdx                 # 8-byte Reload
	movl	%edx, %eax
	movq	240(%rsp), %r15                 # 8-byte Reload
	subl	%r15d, %eax
	movl	%r15d, %ecx
	movq	392(%rsp), %rsi                 # 8-byte Reload
	subl	%esi, %ecx
	cmpl	%ecx, %eax
	cmovll	%eax, %ecx
	cmpl	%ecx, %r9d
.Ltmp1134:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jle	.LBB0_279
.Ltmp1135:
# %bb.278:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	24(%rsp), %r12                  # 8-byte Reload
	movq	64(%rsp), %r13                  # 8-byte Reload
	movq	136(%rsp), %rdi                 # 8-byte Reload
	movq	424(%rsp), %r8                  # 8-byte Reload
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jmp	.LBB0_294
.Ltmp1136:
.LBB0_279:                              # %for.cond2646.preheader
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	leal	-2(%r9), %ecx
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
.Ltmp1137:
	#DEBUG_VALUE: i <- undef
	movq	424(%rsp), %r8                  # 8-byte Reload
.Ltmp1138:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%ecx, %r8d
	movq	64(%rsp), %r13                  # 8-byte Reload
	movq	136(%rsp), %rdi                 # 8-byte Reload
.Ltmp1139:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jge	.LBB0_292
.Ltmp1140:
# %bb.280:                              # %for.body2651.lr.ph
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%r9, 376(%rsp)                  # 8-byte Spill
	movq	32(%rsp), %rsi                  # 8-byte Reload
	movslq	%esi, %rax
	leaq	(%rdi,%rax), %r9
	movl	%r15d, %edx
	imull	%r13d, %edx
	movslq	%edx, %rdx
	movq	%rdx, 232(%rsp)                 # 8-byte Spill
	addq	%rdx, %r9
	movq	%r9, 272(%rsp)                  # 8-byte Spill
	leal	(,%rsi,4), %edx
	movslq	%edx, %r10
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	movslq	%r8d, %rbp
	movslq	%ecx, %rcx
	movq	%rcx, 312(%rsp)                 # 8-byte Spill
	movl	%r15d, %r12d
	subl	%r8d, %r12d
	movq	%r13, %rcx
	leal	(,%r8,4), %r13d
	movl	%r13d, %ebx
	negl	%ebx
	movq	$-2, %r9
	subq	%rbp, %r9
	imulq	%rcx, %r9
	addq	%rax, %r9
	addq	%rdi, %r9
	leaq	(,%rcx,4), %rdx
	movq	%rdx, 416(%rsp)                 # 8-byte Spill
	negq	%rdx
	movq	%rdx, 464(%rsp)                 # 8-byte Spill
	leaq	2(%rbp), %rsi
	imulq	%rcx, %rsi
	addq	%rax, %rsi
	addq	%rdi, %rsi
	movq	%rbp, 328(%rsp)                 # 8-byte Spill
	imulq	%rcx, %rbp
	movq	%r15, %rdx
	movq	%rbp, %r15
	shlq	$32, %r15
	negq	%r15
	addq	%rax, %rbp
	shlq	$34, %rcx
	movq	%rcx, 384(%rsp)                 # 8-byte Spill
	addq	%rdi, %rbp
	movq	%rsi, %rdi
	leal	(,%rdx,4), %eax
	movq	%rax, 48(%rsp)                  # 8-byte Spill
	leal	(%rdx,%r8), %eax
	movq	%rax, 264(%rsp)                 # 8-byte Spill
	xorl	%r14d, %r14d
	jmp	.LBB0_282
.Ltmp1141:
	.p2align	4, 0x90
.LBB0_281:                              # %for.body2651
                                        #   in Loop: Header=BB0_282 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	328(%rsp), %rax                 # 8-byte Reload
.Ltmp1142:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	addq	%r14, %rax
	addq	$4, %rax
.Ltmp1143:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_consts 4, DW_OP_div, DW_OP_consts 4, DW_OP_mul, DW_OP_consts 4, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 5, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	addq	$4, %r14
	addl	$-4, %r12d
	addl	$-16, %ebx
	addl	$16, %r13d
	addq	464(%rsp), %r9                  # 8-byte Folded Reload
	movq	416(%rsp), %rcx                 # 8-byte Reload
	movq	152(%rsp), %rdi                 # 8-byte Reload
	addq	%rcx, %rdi
	subq	384(%rsp), %r15                 # 8-byte Folded Reload
	addq	%rcx, %rbp
	cmpq	312(%rsp), %rax                 # 8-byte Folded Reload
.Ltmp1144:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jge	.LBB0_293
.Ltmp1145:
.LBB0_282:                              # %for.body2651
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_consts 4, DW_OP_div, DW_OP_consts 4, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 5, DW_OP_plus, DW_OP_stack_value] undef, undef
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	232(%rsp), %rax                 # 8-byte Reload
	movq	%rbp, 144(%rsp)                 # 8-byte Spill
.Ltmp1146:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	leaq	(%rax,%rbp), %rsi
	movq	%r15, 128(%rsp)                 # 8-byte Spill
	movq	%r15, %rdx
	sarq	$32, %rdx
	addq	272(%rsp), %rdx                 # 8-byte Folded Reload
	movq	%rdi, 152(%rsp)                 # 8-byte Spill
	leaq	(%rdi,%rax), %rcx
	movq	%r9, 288(%rsp)                  # 8-byte Spill
	leaq	(%r9,%rax), %r8
	leaq	160(%rsp), %rax
	movq	%rax, (%rsp)
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movq	64(%rsp), %r9                   # 8-byte Reload
                                        # kill: def $r9d killed $r9d killed $r9
	movq	104(%rsp), %rax                 # 8-byte Reload
	movq	%r10, %r15
	movq	72(%rsp), %r10                  # 8-byte Reload
	movq	%r13, %rbp
	movq	%r12, %r13
	movl	%r11d, %r12d
.Ltmp1147:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	callq	*32040(%rax,%r10,8)
.Ltmp1148:
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%r15, %r10
	movl	%r12d, %r9d
	movq	%r13, %r12
.Ltmp1149:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r9d
	movq	%rbp, %r13
	movq	40(%rsp), %r8                   # 8-byte Reload
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	movzwl	(%r8,%r15,2), %eax
	movq	264(%rsp), %rcx                 # 8-byte Reload
	leal	(%rcx,%r14), %esi
	movq	48(%rsp), %r11                  # 8-byte Reload
	leal	(%r11,%rbp), %ecx
	movslq	%ecx, %rcx
	movq	24(%rsp), %rdi                  # 8-byte Reload
	movzwl	(%rdi,%rcx,2), %edx
	addl	%eax, %edx
	addl	160(%rsp), %edx
	movl	%edx, 160(%rsp)
	movzwl	(%r8,%r15,2), %eax
	leal	(%r11,%rbx), %ecx
	movslq	%ecx, %rcx
	movzwl	(%rdi,%rcx,2), %edi
	addl	%eax, %edi
	addl	164(%rsp), %edi
.Ltmp1150:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%r9d, %edx
.Ltmp1151:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	movl	%r9d, %r8d
	cmovll	%edx, %r8d
	cmovgel	112(%rsp), %esi                 # 4-byte Folded Reload
.Ltmp1152:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $esi
	#DEBUG_VALUE: x264_me_search_ref:bmx <- undef
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%edi, %eax
	movl	%r12d, %ecx
	movq	%rcx, 112(%rsp)                 # 8-byte Spill
	movq	32(%rsp), %rcx                  # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx
.Ltmp1153:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%r8d, %edi
.Ltmp1154:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jl	.LBB0_284
.Ltmp1155:
# %bb.283:                              # %for.body2651
                                        #   in Loop: Header=BB0_282 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $esi
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%r8d, %eax
	movl	%esi, %ecx
	movq	%rcx, 112(%rsp)                 # 8-byte Spill
	movq	80(%rsp), %rcx                  # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx
.Ltmp1156:
.LBB0_284:                              # %for.body2651
                                        #   in Loop: Header=BB0_282 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $esi
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%r9d, %edx
.Ltmp1157:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	movl	%edi, 164(%rsp)
	movq	40(%rsp), %rdi                  # 8-byte Reload
	movzwl	(%rdi,%r10,2), %esi
.Ltmp1158:
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	48(%rsp), %r9                   # 8-byte Reload
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	leal	8(%r9,%r13), %edx
	movslq	%edx, %rdx
	movq	24(%rsp), %r8                   # 8-byte Reload
.Ltmp1159:
	movzwl	(%r8,%rdx,2), %edx
	cmovll	32(%rsp), %ecx                  # 4-byte Folded Reload
	addl	%esi, %edx
	addl	168(%rsp), %edx
	movl	%edx, 168(%rsp)
	movzwl	(%rdi,%r10,2), %edi
	leal	(%r9,%rbx), %esi
	addl	$-8, %esi
	movslq	%esi, %rsi
	movzwl	(%r8,%rsi,2), %esi
	addl	%edi, %esi
	addl	172(%rsp), %esi
.Ltmp1160:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%eax, %edx
.Ltmp1161:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jl	.LBB0_286
.Ltmp1162:
# %bb.285:                              # %for.body2651
                                        #   in Loop: Header=BB0_282 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%eax, %r11d
	jmp	.LBB0_287
.Ltmp1163:
	.p2align	4, 0x90
.LBB0_286:                              #   in Loop: Header=BB0_282 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	movq	264(%rsp), %rdi                 # 8-byte Reload
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	addl	%r14d, %edi
	addl	$2, %edi
	movq	%rdi, 112(%rsp)                 # 8-byte Spill
.Ltmp1164:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%edx, %r11d
.Ltmp1165:
.LBB0_287:                              # %for.body2651
                                        #   in Loop: Header=BB0_282 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	movq	288(%rsp), %r9                  # 8-byte Reload
	movq	144(%rsp), %rbp                 # 8-byte Reload
	movq	128(%rsp), %r15                 # 8-byte Reload
.Ltmp1166:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%r11d, %esi
.Ltmp1167:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jl	.LBB0_289
.Ltmp1168:
# %bb.288:                              # %for.body2651
                                        #   in Loop: Header=BB0_282 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	32(%rsp), %rdi                  # 8-byte Reload
	jmp	.LBB0_290
.Ltmp1169:
	.p2align	4, 0x90
.LBB0_289:                              #   in Loop: Header=BB0_282 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	leal	-2(%r12), %ecx
	movq	%rcx, 112(%rsp)                 # 8-byte Spill
.Ltmp1170:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	movl	%esi, %r11d
.Ltmp1171:
	movq	32(%rsp), %rdi                  # 8-byte Reload
	movl	%edi, %ecx
.Ltmp1172:
.LBB0_290:                              # %for.body2651
                                        #   in Loop: Header=BB0_282 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	movl	%esi, 172(%rsp)
	movl	%edi, %esi
	movq	%rsi, 80(%rsp)                  # 8-byte Spill
.Ltmp1173:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%eax, %edx
.Ltmp1174:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jl	.LBB0_281
.Ltmp1175:
# %bb.291:                              # %for.body2651
                                        #   in Loop: Header=BB0_282 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%ecx, %eax
	movq	%rax, 80(%rsp)                  # 8-byte Spill
	jmp	.LBB0_281
.Ltmp1176:
.LBB0_292:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	movq	24(%rsp), %r12                  # 8-byte Reload
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jmp	.LBB0_294
.Ltmp1177:
.LBB0_293:                              # %if.end2778.loopexit
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	424(%rsp), %r8                  # 8-byte Reload
.Ltmp1178:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	addl	%r14d, %r8d
	movq	24(%rsp), %r12                  # 8-byte Reload
	movq	64(%rsp), %r13                  # 8-byte Reload
	movq	136(%rsp), %rdi                 # 8-byte Reload
	movq	344(%rsp), %rdx                 # 8-byte Reload
	movq	392(%rsp), %rsi                 # 8-byte Reload
	movq	240(%rsp), %r15                 # 8-byte Reload
	movq	376(%rsp), %r9                  # 8-byte Reload
.Ltmp1179:
.LBB0_294:                              # %if.end2778
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: i <- $r8d
	cmpl	%r9d, %r8d
.Ltmp1180:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jge	.LBB0_302
.Ltmp1181:
# %bb.295:                              # %for.body2783.lr.ph
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r8d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%rdi, %r10
	movq	32(%rsp), %rdi                  # 8-byte Reload
	leal	(,%rdi,4), %eax
	cltq
	movq	%rax, 152(%rsp)                 # 8-byte Spill
	movq	%r13, %rcx
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	movslq	%r8d, %r13
	movslq	%r15d, %r14
	movslq	%edx, %rax
	movq	%rax, 128(%rsp)                 # 8-byte Spill
	movslq	%edi, %rdx
	movslq	%esi, %rax
	movq	%rax, 264(%rsp)                 # 8-byte Spill
	movslq	%r9d, %rax
	movq	%rax, 272(%rsp)                 # 8-byte Spill
	leal	(,%r15,4), %edi
	leal	(,%r8,4), %eax
	subl	%eax, %edi
	movq	%r14, %rbp
	subq	%r13, %rbp
	movq	%rbp, %rbx
	imulq	%rcx, %rbx
	addq	%rdx, %rbx
	addq	%r10, %rbx
	leaq	(%rcx,%rcx), %rax
	movq	%rax, 232(%rsp)                 # 8-byte Spill
	negq	%rax
	movq	%rax, 328(%rsp)                 # 8-byte Spill
	addl	%r15d, %r8d
.Ltmp1182:
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%r8, %r12
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	leal	(,%r8,4), %r15d
	movq	%r14, 144(%rsp)                 # 8-byte Spill
	addq	%r13, %r14
	imulq	%rcx, %r14
	movq	%rdx, 312(%rsp)                 # 8-byte Spill
	addq	%rdx, %r14
	addq	%r10, %r14
	jmp	.LBB0_298
.Ltmp1183:
	.p2align	4, 0x90
.LBB0_296:                              # %if.then2819
                                        #   in Loop: Header=BB0_298 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r13
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	56(%rsp), %rdi                  # 8-byte Reload
.Ltmp1184:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	movl	$16, %esi
	movq	%rbx, %rdx
	movq	64(%rsp), %rcx                  # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	104(%rsp), %rax                 # 8-byte Reload
	movq	72(%rsp), %r8                   # 8-byte Reload
	movl	%r11d, 48(%rsp)                 # 4-byte Spill
.Ltmp1185:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	callq	*31928(%rax,%r8,8)
.Ltmp1186:
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	48(%rsp), %r11d                 # 4-byte Reload
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	152(%rsp), %rdx                 # 8-byte Reload
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	movzwl	(%rcx,%rdx,2), %ecx
	movl	288(%rsp), %edi                 # 4-byte Reload
	movslq	%edi, %rdx
	movq	24(%rsp), %rsi                  # 8-byte Reload
	movzwl	(%rsi,%rdx,2), %edx
	addl	%eax, %ecx
	addl	%edx, %ecx
.Ltmp1187:
	#DEBUG_VALUE: cost <- $ecx
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%r11d, %ecx
.Ltmp1188:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmovll	%ecx, %r11d
	movq	112(%rsp), %rax                 # 8-byte Reload
	cmovll	%ebp, %eax
	movq	%rax, 112(%rsp)                 # 8-byte Spill
.Ltmp1189:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	80(%rsp), %rax                  # 8-byte Reload
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmovll	32(%rsp), %eax                  # 4-byte Folded Reload
.Ltmp1190:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%rax, 80(%rsp)                  # 8-byte Spill
.Ltmp1191:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
.LBB0_297:                              # %for.inc2848
                                        #   in Loop: Header=BB0_298 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r13
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	addq	$2, %r13
.Ltmp1192:
	#DEBUG_VALUE: i <- $r13
	addq	$-2, %rbp
	addl	$-8, %edi
	addq	328(%rsp), %rbx                 # 8-byte Folded Reload
	addl	$2, %r12d
	addl	$8, %r15d
	addq	232(%rsp), %r14                 # 8-byte Folded Reload
	cmpq	272(%rsp), %r13                 # 8-byte Folded Reload
.Ltmp1193:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jge	.LBB0_303
.Ltmp1194:
.LBB0_298:                              # %for.body2783
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: i <- $r13
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	144(%rsp), %rax                 # 8-byte Reload
.Ltmp1195:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	addq	%r13, %rax
	cmpq	128(%rsp), %rax                 # 8-byte Folded Reload
	movl	%edi, 288(%rsp)                 # 4-byte Spill
.Ltmp1196:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jg	.LBB0_300
.Ltmp1197:
# %bb.299:                              # %if.then2787
                                        #   in Loop: Header=BB0_298 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r13
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	56(%rsp), %rdi                  # 8-byte Reload
.Ltmp1198:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	movl	$16, %esi
	movq	%r14, %rdx
	movq	64(%rsp), %rcx                  # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	104(%rsp), %rax                 # 8-byte Reload
	movq	72(%rsp), %r8                   # 8-byte Reload
	movl	%r11d, 48(%rsp)                 # 4-byte Spill
.Ltmp1199:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	callq	*31928(%rax,%r8,8)
.Ltmp1200:
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	48(%rsp), %r11d                 # 4-byte Reload
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	152(%rsp), %rdx                 # 8-byte Reload
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	movzwl	(%rcx,%rdx,2), %ecx
	movslq	%r15d, %rdx
	movq	24(%rsp), %rsi                  # 8-byte Reload
	movzwl	(%rsi,%rdx,2), %edx
	addl	%eax, %ecx
	addl	%edx, %ecx
.Ltmp1201:
	#DEBUG_VALUE: cost <- $ecx
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpl	%r11d, %ecx
.Ltmp1202:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmovll	%ecx, %r11d
	movq	112(%rsp), %rax                 # 8-byte Reload
	cmovll	%r12d, %eax
	movq	%rax, 112(%rsp)                 # 8-byte Spill
.Ltmp1203:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	80(%rsp), %rax                  # 8-byte Reload
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmovll	32(%rsp), %eax                  # 4-byte Folded Reload
.Ltmp1204:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%rax, 80(%rsp)                  # 8-byte Spill
.Ltmp1205:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
.LBB0_300:                              # %if.end2815
                                        #   in Loop: Header=BB0_298 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r13
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	cmpq	264(%rsp), %rbp                 # 8-byte Folded Reload
.Ltmp1206:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jge	.LBB0_296
.Ltmp1207:
# %bb.301:                              #   in Loop: Header=BB0_298 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r13
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	288(%rsp), %edi                 # 4-byte Reload
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jmp	.LBB0_297
.Ltmp1208:
.LBB0_302:                              # %if.end2778.for.end2850_crit_edge
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r8d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%r11d, %r14d
.Ltmp1209:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r14d
	movq	32(%rsp), %rbp                  # 8-byte Reload
.Ltmp1210:
	.loc	0 478 13 is_stmt 1              # x264_src/encoder/me.c:478:13
	movslq	%ebp, %rax
	movq	104(%rsp), %r10                 # 8-byte Reload
	movq	40(%rsp), %rbx                  # 8-byte Reload
	movq	72(%rsp), %r11                  # 8-byte Reload
.Ltmp1211:
	.loc	0 476 13                        # x264_src/encoder/me.c:476:13
	jmp	.LBB0_304
.Ltmp1212:
.LBB0_303:
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r11d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r13
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/me.c:0:13
	movl	%r11d, %r14d
.Ltmp1213:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r14d
	movq	104(%rsp), %r10                 # 8-byte Reload
	movq	24(%rsp), %r12                  # 8-byte Reload
	movq	40(%rsp), %rbx                  # 8-byte Reload
	movq	72(%rsp), %r11                  # 8-byte Reload
	movq	64(%rsp), %r13                  # 8-byte Reload
	movq	136(%rsp), %rdi                 # 8-byte Reload
	movq	32(%rsp), %rbp                  # 8-byte Reload
	movq	240(%rsp), %r15                 # 8-byte Reload
	movq	312(%rsp), %rax                 # 8-byte Reload
.Ltmp1214:
.LBB0_304:                              # %for.end2850
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r14d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	.loc	0 478 13 is_stmt 1              # x264_src/encoder/me.c:478:13
	addq	%rdi, %rax
	movq	%rax, %rcx
	movl	%r15d, %eax
	movq	%r13, %r9
	imull	%r9d, %eax
	cltq
	leaq	(%rcx,%rax), %rdi
.Ltmp1215:
	#DEBUG_VALUE: pix_base <- $rdi
	leaq	(%rax,%rcx), %rsi
	addq	$-2, %rsi
	leaq	(,%r13,2), %r8
	subq	%r8, %rsi
	leaq	(%rdi,%r13,2), %rdx
	addq	$-2, %rdx
	addq	%rax, %rcx
	addq	$2, %rcx
	subq	%r8, %rcx
	leaq	(%rdi,%r13,2), %r8
	addq	$2, %r8
	leaq	160(%rsp), %rax
	movq	%rax, (%rsp)
	movq	56(%rsp), %rdi                  # 8-byte Reload
.Ltmp1216:
                                        # kill: def $r9d killed $r9d killed $r9
	callq	*32040(%r10,%r11,8)
.Ltmp1217:
	leal	-8(,%rbp,4), %eax
	movslq	%eax, %rcx
	movzwl	(%rbx,%rcx,2), %edx
	leal	-2(%r15), %eax
	leal	-8(,%r15,4), %esi
	movslq	%esi, %rsi
	movzwl	(%r12,%rsi,2), %r8d
	addl	%edx, %r8d
	addl	160(%rsp), %r8d
	movl	%r8d, 160(%rsp)
	movzwl	(%rbx,%rcx,2), %edx
	movl	%r15d, %ecx
	addl	$2, %ecx
	leal	8(,%r15,4), %edi
	movslq	%edi, %rdi
	movzwl	(%r12,%rdi,2), %r9d
	addl	%edx, %r9d
	addl	164(%rsp), %r9d
.Ltmp1218:
	.loc	0 478 13 is_stmt 0              # x264_src/encoder/me.c:478:13
	cmpl	%r14d, %r8d
.Ltmp1219:
	.loc	0 478 13                        # x264_src/encoder/me.c:478:13
	movl	%r14d, %edx
	cmovll	%r8d, %edx
	movq	112(%rsp), %r11                 # 8-byte Reload
	cmovll	%eax, %r11d
.Ltmp1220:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r11d
	#DEBUG_VALUE: x264_me_search_ref:bmx <- undef
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edx
	leal	-2(%rbp), %r10d
.Ltmp1221:
	.loc	0 478 13                        # x264_src/encoder/me.c:478:13
	cmpl	%edx, %r9d
.Ltmp1222:
	.loc	0 478 13                        # x264_src/encoder/me.c:478:13
	cmovll	%r9d, %edx
.Ltmp1223:
	cmovll	%ecx, %r11d
.Ltmp1224:
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	80(%rsp), %r15                  # 8-byte Reload
	.loc	0 478 13                        # x264_src/encoder/me.c:478:13
	cmovll	%r10d, %r15d
.Ltmp1225:
	.loc	0 478 13                        # x264_src/encoder/me.c:478:13
	cmpl	%r14d, %r8d
.Ltmp1226:
	.loc	0 478 13                        # x264_src/encoder/me.c:478:13
	movl	%r9d, 164(%rsp)
	leal	8(,%rbp,4), %r8d
	movslq	%r8d, %r8
	movzwl	(%rbx,%r8,2), %r9d
	movzwl	(%r12,%rsi,2), %esi
	cmovll	%r10d, %r15d
.Ltmp1227:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r15d
	addl	$2, %ebp
	addl	%r9d, %esi
	addl	168(%rsp), %esi
	movl	%esi, 168(%rsp)
	movzwl	(%rbx,%r8,2), %r8d
	movzwl	(%r12,%rdi,2), %edi
	addl	%r8d, %edi
	addl	172(%rsp), %edi
.Ltmp1228:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r11d
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $edx
	.loc	0 478 13                        # x264_src/encoder/me.c:478:13
	cmpl	%edx, %esi
.Ltmp1229:
	.loc	0 478 13                        # x264_src/encoder/me.c:478:13
	movl	%edx, %r8d
	cmovll	%esi, %r8d
	cmovll	%eax, %r11d
.Ltmp1230:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r11d
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	.loc	0 478 13                        # x264_src/encoder/me.c:478:13
	cmpl	%r8d, %edi
.Ltmp1231:
	.loc	0 478 13                        # x264_src/encoder/me.c:478:13
	cmovll	%edi, %r8d
.Ltmp1232:
                                        # kill: def $r11d killed $r11d killed $r11 def $r11
	cmovll	%ecx, %r11d
.Ltmp1233:
	cmovll	%ebp, %r15d
.Ltmp1234:
	.loc	0 478 13                        # x264_src/encoder/me.c:478:13
	cmpl	%edx, %esi
.Ltmp1235:
	.loc	0 478 13                        # x264_src/encoder/me.c:478:13
	movl	%r15d, %r9d
	cmovll	%ebp, %r9d
.Ltmp1236:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $r9d
	#DEBUG_VALUE: x264_me_search_ref:omx <- $r9d
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r11d
	#DEBUG_VALUE: x264_me_search_ref:omy <- $r11d
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%r11, %rbp
	.loc	0 478 13                        # x264_src/encoder/me.c:478:13
	movl	%edi, 172(%rsp)
.Ltmp1237:
	.loc	0 482 59 is_stmt 1              # x264_src/encoder/me.c:482:59
	leal	(,%r9,4), %eax
	.loc	0 482 54 is_stmt 0              # x264_src/encoder/me.c:482:54
	cltq
	leaq	(%rbx,%rax,2), %rax
.Ltmp1238:
	#DEBUG_VALUE: p_cost_omvx <- $rax
	.loc	0 0 54                          # x264_src/encoder/me.c:0:54
	movq	%rax, 464(%rsp)                 # 8-byte Spill
.Ltmp1239:
	#DEBUG_VALUE: p_cost_omvx <- [DW_OP_plus_uconst 464, DW_OP_deref] $rsp
	.loc	0 483 59 is_stmt 1              # x264_src/encoder/me.c:483:59
	leal	(,%r11,4), %eax
.Ltmp1240:
	#DEBUG_VALUE: p_cost_omvy <- undef
	#DEBUG_VALUE: i <- 1
	.loc	0 0 59 is_stmt 0                # x264_src/encoder/me.c:0:59
	movq	336(%rsp), %rbx                 # 8-byte Reload
	movl	%ebx, %ecx
	subl	%r9d, %ecx
	movl	%r9d, %edx
	subl	280(%rsp), %edx                 # 4-byte Folded Reload
	movq	344(%rsp), %rsi                 # 8-byte Reload
                                        # kill: def $esi killed $esi killed $rsi
	subl	%ebp, %esi
	movl	%ebp, %edi
	subl	392(%rsp), %edi                 # 4-byte Folded Reload
	cmpl	%edi, %esi
	cmovll	%esi, %edi
	.loc	0 483 54                        # x264_src/encoder/me.c:483:54
	cltq
	cmpl	%edi, %edx
	cmovll	%edx, %edi
	leaq	(%r12,%rax,2), %rax
.Ltmp1241:
	#DEBUG_VALUE: p_cost_omvy <- $rax
	.loc	0 0 54                          # x264_src/encoder/me.c:0:54
	movq	%rax, 384(%rsp)                 # 8-byte Spill
	cmpl	%edi, %ecx
	cmovll	%ecx, %edi
	movslq	%r9d, %rcx
	addq	136(%rsp), %rcx                 # 8-byte Folded Reload
	movq	320(%rsp), %rax                 # 8-byte Reload
.Ltmp1242:
                                        # kill: def $eax killed $eax killed $rax
	sarl	$2, %eax
	.loc	0 485 13 is_stmt 1              # x264_src/encoder/me.c:485:13
	movslq	%ebp, %rdx
	movslq	%edi, %rsi
	movq	%rsi, 288(%rsp)                 # 8-byte Spill
	movq	%rdx, 480(%rsp)                 # 8-byte Spill
	imulq	64(%rsp), %rdx                  # 8-byte Folded Reload
	movq	%rcx, 376(%rsp)                 # 8-byte Spill
	addq	%rcx, %rdx
	movq	%rdx, 488(%rsp)                 # 8-byte Spill
	cmpl	$2, %eax
	movl	$1, %ecx
	cmovgel	%eax, %ecx
	incl	%ecx
	movq	%rcx, 152(%rsp)                 # 8-byte Spill
	movl	$1, %r11d
.Ltmp1243:
	#DEBUG_VALUE: x264_me_search_ref:omy <- $ebp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $ebp
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/me.c:0:13
	movl	%ebp, %eax
	movq	%rax, 112(%rsp)                 # 8-byte Spill
	movl	%r9d, %eax
	movq	%rax, 80(%rsp)                  # 8-byte Spill
	movl	400(%rsp), %edx                 # 4-byte Reload
	movl	352(%rsp), %esi                 # 4-byte Reload
	movq	%r12, %r10
	movq	%r9, 48(%rsp)                   # 8-byte Spill
.Ltmp1244:
	#DEBUG_VALUE: x264_me_search_ref:omx <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	movq	%rbp, 240(%rsp)                 # 8-byte Spill
.Ltmp1245:
	#DEBUG_VALUE: x264_me_search_ref:omy <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	jmp	.LBB0_308
.Ltmp1246:
	.p2align	4, 0x90
.LBB0_305:                              # %if.else3098
                                        #   in Loop: Header=BB0_308 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omx <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omy <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvx <- [DW_OP_plus_uconst 464, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvy <- [DW_OP_plus_uconst 384, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: dir <- 0
	movq	480(%rsp), %rbx                 # 8-byte Reload
.Ltmp1247:
	.loc	0 508 62 is_stmt 1              # x264_src/encoder/me.c:508:62
	subq	%r12, %rbx
	movq	%r13, %r9
	.loc	0 508 67 is_stmt 0              # x264_src/encoder/me.c:508:67
	imulq	%r13, %rbx
	.loc	0 508 56                        # x264_src/encoder/me.c:508:56
	addq	376(%rsp), %rbx                 # 8-byte Folded Reload
.Ltmp1248:
	#DEBUG_VALUE: pix_base <- $rbx
	.loc	0 509 31 is_stmt 1              # x264_src/encoder/me.c:509:31
	movq	%r11, %r14
	imulq	%r13, %r14
.Ltmp1249:
	#DEBUG_VALUE: dy <- $r14
	.loc	0 520 21                        # x264_src/encoder/me.c:520:21
	leaq	(%rbx,%r14,8), %rdx
	leaq	(%r11,%r11), %rax
	movq	%rax, 144(%rsp)                 # 8-byte Spill
	movq	%rbx, %rcx
	subq	%rax, %rcx
	addq	%r14, %rcx
	movl	%r8d, 128(%rsp)                 # 4-byte Spill
.Ltmp1250:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	leaq	(%rbx,%r11,2), %r8
	addq	%r14, %r8
	leaq	160(%rsp), %rax
	movq	%rax, (%rsp)
	movq	56(%rsp), %r13                  # 8-byte Reload
	movq	%r13, %rdi
	movq	%rbx, %rsi
                                        # kill: def $r9d killed $r9d killed $r9
	movq	72(%rsp), %r15                  # 8-byte Reload
	movq	104(%rsp), %rax                 # 8-byte Reload
	callq	*32040(%rax,%r15,8)
.Ltmp1251:
	leaq	(%rbx,%r14,2), %rdx
.Ltmp1252:
	#DEBUG_VALUE: pix_base <- $rdx
	.loc	0 521 21                        # x264_src/encoder/me.c:521:21
	movq	%rdx, %rsi
	subq	%r12, %rsi
	addq	%r12, %rdx
.Ltmp1253:
	leaq	(%rsi,%r14), %rcx
	leaq	(%rdx,%r14), %r8
	leaq	176(%rsp), %rax
	movq	%rax, (%rsp)
	movq	%r13, %rdi
	movq	64(%rsp), %r13                  # 8-byte Reload
	movl	%r13d, %r9d
	movq	104(%rsp), %rax                 # 8-byte Reload
	callq	*32040(%rax,%r15,8)
.Ltmp1254:
	#DEBUG_VALUE: pix_base <- [DW_OP_plus_uconst 488, DW_OP_deref] $rsp
	.loc	0 0 21 is_stmt 0                # x264_src/encoder/me.c:0:21
	movq	488(%rsp), %rbx                 # 8-byte Reload
	.loc	0 522 21 is_stmt 1              # x264_src/encoder/me.c:522:21
	movq	%rbx, %rsi
	subq	%r12, %rsi
	leaq	(%rbx,%r12), %rdx
	leaq	(%rsi,%r14), %rcx
	leaq	(%rdx,%r14), %r8
	leaq	192(%rsp), %rax
	movq	%rax, (%rsp)
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movl	%r13d, %r9d
	movq	104(%rsp), %r13                 # 8-byte Reload
	callq	*32040(%r13,%r15,8)
.Ltmp1255:
	leaq	(%rbx,%r14,2), %rcx
.Ltmp1256:
	#DEBUG_VALUE: pix_base <- $rcx
	.loc	0 523 21                        # x264_src/encoder/me.c:523:21
	movq	%rcx, %rsi
	subq	%r12, %rsi
	leaq	(%rcx,%r12), %rdx
	movq	32(%rsp), %rbx                  # 8-byte Reload
	leaq	(%rcx,%rbx,2), %r8
	subq	144(%rsp), %rcx                 # 8-byte Folded Reload
.Ltmp1257:
	addq	%r14, %rcx
	addq	%r14, %r8
	leaq	208(%rsp), %rax
	movq	%rax, (%rsp)
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movq	64(%rsp), %r9                   # 8-byte Reload
                                        # kill: def $r9d killed $r9d killed $r9
	callq	*32040(%r13,%r15,8)
.Ltmp1258:
	#DEBUG_VALUE: pix_base <- undef
	.loc	0 0 21 is_stmt 0                # x264_src/encoder/me.c:0:21
	movq	464(%rsp), %rsi                 # 8-byte Reload
	.loc	0 524 21 is_stmt 1              # x264_src/encoder/me.c:524:21
	movzwl	(%rsi), %edx
	movq	%rbx, %r10
	shlq	$5, %r10
	movq	384(%rsp), %rcx                 # 8-byte Reload
	movq	%rcx, %rax
	subq	%r10, %rax
	movzwl	(%rax), %eax
	addl	%edx, %eax
	addl	160(%rsp), %eax
	movl	%eax, 160(%rsp)
	.loc	0 525 21                        # x264_src/encoder/me.c:525:21
	movzwl	(%rsi), %edx
	movzwl	(%rcx,%r10), %r8d
	addl	%edx, %r8d
	addl	164(%rsp), %r8d
	movl	%r8d, 144(%rsp)                 # 4-byte Spill
	movl	%r8d, 164(%rsp)
	.loc	0 526 21                        # x264_src/encoder/me.c:526:21
	movq	%rbx, %r13
	shlq	$4, %r13
	movq	%rsi, %rdx
	subq	%r13, %rdx
	movq	%rdx, 416(%rsp)                 # 8-byte Spill
	movzwl	(%rdx), %edx
	leaq	(,%rbx,8), %r14
.Ltmp1259:
	leaq	(%r14,%r14,2), %rdi
	movq	%rcx, %r8
	subq	%rdi, %r8
	negq	%rdi
	movzwl	(%r8), %r8d
	addl	%edx, %r8d
	addl	168(%rsp), %r8d
	movl	%r8d, 264(%rsp)                 # 4-byte Spill
	movl	%r8d, 168(%rsp)
	.loc	0 527 21                        # x264_src/encoder/me.c:527:21
	movzwl	(%rsi,%r13), %edx
	movzwl	(%rcx,%rdi), %edi
	addl	%edx, %edi
	addl	172(%rsp), %edi
	movl	%edi, 272(%rsp)                 # 4-byte Spill
	movl	%edi, 172(%rsp)
	.loc	0 528 21                        # x264_src/encoder/me.c:528:21
	movq	%rsi, %rdx
	subq	%r10, %rdx
	movzwl	(%rdx), %r8d
	movq	%rcx, %r9
	subq	%r13, %r9
	movzwl	(%r9), %edi
	addl	%r8d, %edi
	addl	176(%rsp), %edi
	movl	%edi, 232(%rsp)                 # 4-byte Spill
	movl	%edi, 176(%rsp)
	.loc	0 529 21                        # x264_src/encoder/me.c:529:21
	movzwl	(%rsi,%r10), %r11d
	movzwl	(%r9), %edi
	addl	%r11d, %edi
	addl	180(%rsp), %edi
	movl	%edi, 328(%rsp)                 # 4-byte Spill
	movl	%edi, 180(%rsp)
	.loc	0 530 21                        # x264_src/encoder/me.c:530:21
	movzwl	(%rdx), %r11d
	movq	%rcx, %rbx
	subq	%r14, %rbx
	movzwl	(%rbx), %edi
	addl	%r11d, %edi
	addl	184(%rsp), %edi
	movl	%edi, 312(%rsp)                 # 4-byte Spill
	movl	%edi, 184(%rsp)
	.loc	0 531 21                        # x264_src/encoder/me.c:531:21
	movzwl	(%rsi,%r10), %edi
	movzwl	(%rbx), %r11d
	addl	%edi, %r11d
	addl	188(%rsp), %r11d
	movl	%r11d, 188(%rsp)
	.loc	0 532 21                        # x264_src/encoder/me.c:532:21
	movzwl	(%rdx), %edi
	movzwl	(%rcx), %ebx
	addl	%edi, %ebx
	addl	192(%rsp), %ebx
	movl	%ebx, 192(%rsp)
	.loc	0 533 21                        # x264_src/encoder/me.c:533:21
	movzwl	(%rsi,%r10), %r14d
	movzwl	(%rcx), %r9d
	addl	%r14d, %r9d
	addl	196(%rsp), %r9d
	movl	%r9d, 196(%rsp)
	.loc	0 534 21                        # x264_src/encoder/me.c:534:21
	movzwl	(%rdx), %r15d
	movzwl	(%rcx,%r12,2), %r14d
	addl	%r15d, %r14d
	addl	200(%rsp), %r14d
	movl	%r14d, 200(%rsp)
	.loc	0 535 21                        # x264_src/encoder/me.c:535:21
	movzwl	(%rcx,%r12,2), %r12d
	movzwl	(%rsi,%r10), %r15d
	addl	%r15d, %r12d
	addl	204(%rsp), %r12d
	movl	%r12d, 204(%rsp)
	.loc	0 536 21                        # x264_src/encoder/me.c:536:21
	movzwl	(%rdx), %edx
	movzwl	(%rcx,%r13), %r15d
	addl	%edx, %r15d
	addl	208(%rsp), %r15d
	movl	%r15d, 208(%rsp)
	.loc	0 537 21                        # x264_src/encoder/me.c:537:21
	movzwl	(%rsi,%r10), %r10d
	movzwl	(%rcx,%r13), %r8d
	addl	%r10d, %r8d
	addl	212(%rsp), %r8d
	movl	%r8d, 212(%rsp)
	movq	416(%rsp), %rdx                 # 8-byte Reload
	.loc	0 538 21                        # x264_src/encoder/me.c:538:21
	movzwl	(%rdx), %r10d
	movq	32(%rsp), %rdx                  # 8-byte Reload
	leaq	(%rdx,%rdx,2), %rdx
	movzwl	(%rcx,%rdx,8), %edi
	addl	%r10d, %edi
	addl	216(%rsp), %edi
	movl	%edi, 216(%rsp)
	.loc	0 539 21                        # x264_src/encoder/me.c:539:21
	movzwl	(%rsi,%r13), %r10d
	movzwl	(%rcx,%rdx,8), %r13d
	addl	%r10d, %r13d
	addl	220(%rsp), %r13d
	movl	128(%rsp), %ecx                 # 4-byte Reload
.Ltmp1260:
	.loc	0 540 21                        # x264_src/encoder/me.c:540:21
	cmpl	%ecx, %eax
.Ltmp1261:
	.loc	0 540 21 is_stmt 0              # x264_src/encoder/me.c:540:21
	cmovgel	%ecx, %eax
.Ltmp1262:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: dir <- undef
	movl	$0, %r10d
	movl	$12, %ecx
	cmovll	%ecx, %r10d
.Ltmp1263:
	#DEBUG_VALUE: dir <- $r10d
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	144(%rsp), %ecx                 # 4-byte Reload
.Ltmp1264:
	.loc	0 541 21 is_stmt 1              # x264_src/encoder/me.c:541:21
	cmpl	%eax, %ecx
.Ltmp1265:
	.loc	0 541 21 is_stmt 0              # x264_src/encoder/me.c:541:21
	cmovll	%ecx, %eax
.Ltmp1266:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: dir <- undef
	movl	$4, %ecx
	cmovll	%ecx, %r10d
.Ltmp1267:
	#DEBUG_VALUE: dir <- $r10d
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	264(%rsp), %ecx                 # 4-byte Reload
.Ltmp1268:
	.loc	0 542 21 is_stmt 1              # x264_src/encoder/me.c:542:21
	cmpl	%eax, %ecx
.Ltmp1269:
	.loc	0 542 21 is_stmt 0              # x264_src/encoder/me.c:542:21
	cmovll	%ecx, %eax
.Ltmp1270:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: dir <- undef
	movl	$-19, %ecx
	cmovll	%ecx, %r10d
.Ltmp1271:
	#DEBUG_VALUE: dir <- $r10d
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	272(%rsp), %ecx                 # 4-byte Reload
.Ltmp1272:
	.loc	0 543 21 is_stmt 1              # x264_src/encoder/me.c:543:21
	cmpl	%eax, %ecx
.Ltmp1273:
	.loc	0 543 21 is_stmt 0              # x264_src/encoder/me.c:543:21
	cmovll	%ecx, %eax
.Ltmp1274:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: dir <- undef
	movl	$45, %ecx
	cmovll	%ecx, %r10d
.Ltmp1275:
	#DEBUG_VALUE: dir <- $r10d
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	232(%rsp), %ecx                 # 4-byte Reload
.Ltmp1276:
	.loc	0 544 21 is_stmt 1              # x264_src/encoder/me.c:544:21
	cmpl	%eax, %ecx
.Ltmp1277:
	.loc	0 544 21 is_stmt 0              # x264_src/encoder/me.c:544:21
	cmovll	%ecx, %eax
.Ltmp1278:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: dir <- undef
	movl	$-50, %ecx
	cmovll	%ecx, %r10d
.Ltmp1279:
	#DEBUG_VALUE: dir <- $r10d
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	328(%rsp), %ecx                 # 4-byte Reload
.Ltmp1280:
	.loc	0 545 21 is_stmt 1              # x264_src/encoder/me.c:545:21
	cmpl	%eax, %ecx
.Ltmp1281:
	.loc	0 545 21 is_stmt 0              # x264_src/encoder/me.c:545:21
	cmovll	%ecx, %eax
.Ltmp1282:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: dir <- undef
	movl	$78, %ecx
	cmovll	%ecx, %r10d
.Ltmp1283:
	#DEBUG_VALUE: dir <- $r10d
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	312(%rsp), %ecx                 # 4-byte Reload
.Ltmp1284:
	.loc	0 546 21 is_stmt 1              # x264_src/encoder/me.c:546:21
	cmpl	%eax, %ecx
.Ltmp1285:
	.loc	0 546 21 is_stmt 0              # x264_src/encoder/me.c:546:21
	cmovll	%ecx, %eax
.Ltmp1286:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: dir <- undef
	movl	$-49, %ecx
	cmovll	%ecx, %r10d
.Ltmp1287:
	#DEBUG_VALUE: dir <- $r10d
	.loc	0 547 21 is_stmt 1              # x264_src/encoder/me.c:547:21
	cmpl	%eax, %r11d
.Ltmp1288:
	.loc	0 547 21 is_stmt 0              # x264_src/encoder/me.c:547:21
	cmovll	%r11d, %eax
.Ltmp1289:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: dir <- undef
	movl	$79, %ecx
	cmovll	%ecx, %r10d
.Ltmp1290:
	#DEBUG_VALUE: dir <- $r10d
	.loc	0 548 21 is_stmt 1              # x264_src/encoder/me.c:548:21
	cmpl	%eax, %ebx
.Ltmp1291:
	.loc	0 548 21 is_stmt 0              # x264_src/encoder/me.c:548:21
	cmovll	%ebx, %eax
.Ltmp1292:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: dir <- undef
	movl	$-64, %ecx
	cmovll	%ecx, %r10d
.Ltmp1293:
	#DEBUG_VALUE: dir <- $r10d
	.loc	0 549 21 is_stmt 1              # x264_src/encoder/me.c:549:21
	cmpl	%eax, %r9d
.Ltmp1294:
	.loc	0 549 21 is_stmt 0              # x264_src/encoder/me.c:549:21
	cmovll	%r9d, %eax
.Ltmp1295:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: dir <- undef
	movl	$64, %ecx
	cmovll	%ecx, %r10d
.Ltmp1296:
	#DEBUG_VALUE: dir <- $r10d
	.loc	0 550 21 is_stmt 1              # x264_src/encoder/me.c:550:21
	cmpl	%eax, %r14d
.Ltmp1297:
	.loc	0 550 21 is_stmt 0              # x264_src/encoder/me.c:550:21
	cmovll	%r14d, %eax
.Ltmp1298:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: dir <- undef
	movl	$-63, %ecx
	cmovll	%ecx, %r10d
.Ltmp1299:
	#DEBUG_VALUE: dir <- $r10d
	.loc	0 551 21 is_stmt 1              # x264_src/encoder/me.c:551:21
	cmpl	%eax, %r12d
.Ltmp1300:
	.loc	0 551 21 is_stmt 0              # x264_src/encoder/me.c:551:21
	cmovll	%r12d, %eax
.Ltmp1301:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: dir <- undef
	movl	$65, %ecx
	cmovll	%ecx, %r10d
.Ltmp1302:
	#DEBUG_VALUE: dir <- $r10d
	.loc	0 552 21 is_stmt 1              # x264_src/encoder/me.c:552:21
	cmpl	%eax, %r15d
.Ltmp1303:
	.loc	0 552 21 is_stmt 0              # x264_src/encoder/me.c:552:21
	cmovll	%r15d, %eax
.Ltmp1304:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: dir <- undef
	movl	$-62, %ecx
	cmovll	%ecx, %r10d
.Ltmp1305:
	#DEBUG_VALUE: dir <- $r10d
	.loc	0 553 21 is_stmt 1              # x264_src/encoder/me.c:553:21
	cmpl	%eax, %r8d
.Ltmp1306:
	.loc	0 553 21 is_stmt 0              # x264_src/encoder/me.c:553:21
	cmovll	%r8d, %eax
.Ltmp1307:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: dir <- undef
	movl	$66, %ecx
	cmovll	%ecx, %r10d
.Ltmp1308:
	#DEBUG_VALUE: dir <- $r10d
	.loc	0 554 21 is_stmt 1              # x264_src/encoder/me.c:554:21
	cmpl	%eax, %edi
.Ltmp1309:
	.loc	0 554 21 is_stmt 0              # x264_src/encoder/me.c:554:21
	cmovll	%edi, %eax
.Ltmp1310:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $eax
	#DEBUG_VALUE: dir <- undef
	movl	$-29, %ecx
	cmovll	%ecx, %r10d
.Ltmp1311:
	#DEBUG_VALUE: dir <- $r10d
	.loc	0 555 21 is_stmt 1              # x264_src/encoder/me.c:555:21
	cmpl	%eax, %r13d
.Ltmp1312:
	.loc	0 555 21 is_stmt 0              # x264_src/encoder/me.c:555:21
	movl	%eax, %r8d
	cmovll	%r13d, %r8d
.Ltmp1313:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: dir <- undef
	.loc	0 539 21 is_stmt 1              # x264_src/encoder/me.c:539:21
	movl	%r13d, 220(%rsp)
	.loc	0 555 21                        # x264_src/encoder/me.c:555:21
	movl	$35, %eax
	cmovll	%eax, %r10d
.Ltmp1314:
	#DEBUG_VALUE: dir <- $r10d
	.loc	0 559 24                        # x264_src/encoder/me.c:559:24
	testl	%r10d, %r10d
.Ltmp1315:
	.loc	0 559 24 is_stmt 0              # x264_src/encoder/me.c:559:24
	je	.LBB0_313
.Ltmp1316:
# %bb.306:                              # %if.then3521
                                        #   in Loop: Header=BB0_308 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omx <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omy <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvx <- [DW_OP_plus_uconst 464, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvy <- [DW_OP_plus_uconst 384, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: dir <- $r10d
	.loc	0 561 43 is_stmt 1              # x264_src/encoder/me.c:561:43
	movl	%r10d, %eax
	sarl	$4, %eax
	movq	32(%rsp), %r11                  # 8-byte Reload
	.loc	0 561 38 is_stmt 0              # x264_src/encoder/me.c:561:38
	imull	%r11d, %eax
	movq	48(%rsp), %r9                   # 8-byte Reload
	.loc	0 561 35                        # x264_src/encoder/me.c:561:35
	addl	%r9d, %eax
.Ltmp1317:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	.loc	0 0 35                          # x264_src/encoder/me.c:0:35
	movq	%rax, 80(%rsp)                  # 8-byte Spill
.Ltmp1318:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	.loc	0 562 49 is_stmt 1              # x264_src/encoder/me.c:562:49
	shll	$28, %r10d
.Ltmp1319:
	sarl	$28, %r10d
	.loc	0 562 38 is_stmt 0              # x264_src/encoder/me.c:562:38
	imull	%r11d, %r10d
	.loc	0 562 35                        # x264_src/encoder/me.c:562:35
	addl	%ebp, %r10d
.Ltmp1320:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- $r10d
	.loc	0 0 35                          # x264_src/encoder/me.c:0:35
	movl	%r10d, %eax
	movq	%rax, 112(%rsp)                 # 8-byte Spill
	movq	24(%rsp), %r10                  # 8-byte Reload
.Ltmp1321:
	movq	64(%rsp), %r13                  # 8-byte Reload
	movl	400(%rsp), %edx                 # 4-byte Reload
	movl	352(%rsp), %esi                 # 4-byte Reload
.Ltmp1322:
.LBB0_307:                              # %do.cond3531
                                        #   in Loop: Header=BB0_308 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omx <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omy <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvx <- [DW_OP_plus_uconst 464, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvy <- [DW_OP_plus_uconst 384, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	.loc	0 565 22 is_stmt 1              # x264_src/encoder/me.c:565:22
	incq	%r11
.Ltmp1323:
	#DEBUG_VALUE: i <- $r11
	.loc	0 565 26 is_stmt 0              # x264_src/encoder/me.c:565:26
	cmpq	152(%rsp), %r11                 # 8-byte Folded Reload
.Ltmp1324:
	.loc	0 565 13                        # x264_src/encoder/me.c:565:13
	je	.LBB0_314
.Ltmp1325:
.LBB0_308:                              # %do.body2969
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_311 Depth 2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omx <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omy <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvx <- [DW_OP_plus_uconst 464, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvy <- [DW_OP_plus_uconst 384, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: i <- $r11
	.loc	0 494 22 is_stmt 1              # x264_src/encoder/me.c:494:22
	leaq	(,%r11,4), %r12
	.loc	0 494 25 is_stmt 0              # x264_src/encoder/me.c:494:25
	cmpq	288(%rsp), %r12                 # 8-byte Folded Reload
	movq	%r11, 32(%rsp)                  # 8-byte Spill
.Ltmp1326:
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 494 21                        # x264_src/encoder/me.c:494:21
	jle	.LBB0_305
.Ltmp1327:
# %bb.309:                              # %for.body3042.preheader
                                        #   in Loop: Header=BB0_308 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omx <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omy <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvx <- [DW_OP_plus_uconst 464, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvy <- [DW_OP_plus_uconst 384, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movq	$-32, %rbx
	jmp	.LBB0_311
.Ltmp1328:
	.p2align	4, 0x90
.LBB0_310:                              # %if.end3093
                                        #   in Loop: Header=BB0_311 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omx <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omy <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvx <- [DW_OP_plus_uconst 464, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvy <- [DW_OP_plus_uconst 384, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: j <- [DW_OP_consts 18446744073709551584, DW_OP_minus, DW_OP_consts 2, DW_OP_div, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: j <- [DW_OP_consts 18446744073709551584, DW_OP_minus, DW_OP_consts 2, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rbx
	.loc	0 497 39 is_stmt 1              # x264_src/encoder/me.c:497:39
	addq	$2, %rbx
.Ltmp1329:
	.loc	0 497 21 is_stmt 0              # x264_src/encoder/me.c:497:21
	je	.LBB0_307
.Ltmp1330:
.LBB0_311:                              # %for.body3042
                                        #   Parent Loop BB0_308 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omx <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omy <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvx <- [DW_OP_plus_uconst 464, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvy <- [DW_OP_plus_uconst 384, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: j <- [DW_OP_consts 18446744073709551584, DW_OP_minus, DW_OP_consts 2, DW_OP_div, DW_OP_stack_value] $rbx
	.loc	0 499 40 is_stmt 1              # x264_src/encoder/me.c:499:40
	movsbl	x264_me_search_ref.hex4+32(%rbx), %r14d
	.loc	0 499 50 is_stmt 0              # x264_src/encoder/me.c:499:50
	imull	%r11d, %r14d
	.loc	0 499 38                        # x264_src/encoder/me.c:499:38
	addl	%r9d, %r14d
.Ltmp1331:
	#DEBUG_VALUE: mx <- $r14d
	.loc	0 500 40 is_stmt 1              # x264_src/encoder/me.c:500:40
	movsbl	x264_me_search_ref.hex4+33(%rbx), %r15d
	.loc	0 500 50 is_stmt 0              # x264_src/encoder/me.c:500:50
	imull	%r11d, %r15d
	.loc	0 500 38                        # x264_src/encoder/me.c:500:38
	addl	%ebp, %r15d
.Ltmp1332:
	#DEBUG_VALUE: my <- $r15d
	.loc	0 501 29 is_stmt 1              # x264_src/encoder/me.c:501:29
	movl	%r14d, %eax
	shll	$16, %eax
	movl	%r15d, %ecx
	andl	$32767, %ecx                    # imm = 0x7FFF
	orl	%eax, %ecx
	movl	%esi, %eax
	subl	%ecx, %eax
	addl	%edx, %ecx
	orl	%eax, %ecx
	testl	$-2147467264, %ecx              # imm = 0x80004000
.Ltmp1333:
	.loc	0 501 29 is_stmt 0              # x264_src/encoder/me.c:501:29
	jne	.LBB0_310
.Ltmp1334:
# %bb.312:                              # %if.then3068
                                        #   in Loop: Header=BB0_311 Depth=2
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omx <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omy <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvx <- [DW_OP_plus_uconst 464, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvy <- [DW_OP_plus_uconst 384, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: j <- [DW_OP_consts 18446744073709551584, DW_OP_minus, DW_OP_consts 2, DW_OP_div, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: mx <- $r14d
	#DEBUG_VALUE: my <- $r15d
	.loc	0 502 29 is_stmt 1              # x264_src/encoder/me.c:502:29
	movl	%r15d, %eax
	imull	%r13d, %eax
	addl	%r14d, %eax
	movslq	%eax, %rdx
	addq	136(%rsp), %rdx                 # 8-byte Folded Reload
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movl	%r13d, %ecx
	movq	104(%rsp), %rax                 # 8-byte Reload
	movl	%r8d, %r12d
.Ltmp1335:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r12d
	.loc	0 0 29 is_stmt 0                # x264_src/encoder/me.c:0:29
	movq	72(%rsp), %r8                   # 8-byte Reload
	movq	%r13, %rbp
	movq	%r10, %r13
	.loc	0 502 29                        # x264_src/encoder/me.c:502:29
	callq	*31928(%rax,%r8,8)
.Ltmp1336:
	.loc	0 0 29                          # x264_src/encoder/me.c:0:29
	movq	32(%rsp), %r11                  # 8-byte Reload
	movq	48(%rsp), %r9                   # 8-byte Reload
	movq	%r13, %r10
	movq	%rbp, %r13
	movq	240(%rsp), %rbp                 # 8-byte Reload
	movl	%r12d, %r8d
	movl	352(%rsp), %esi                 # 4-byte Reload
	.loc	0 502 29                        # x264_src/encoder/me.c:502:29
	leal	(,%r14,4), %ecx
	movslq	%ecx, %rcx
	movq	40(%rsp), %rdx                  # 8-byte Reload
	movzwl	(%rdx,%rcx,2), %ecx
	leal	(,%r15,4), %edx
	movslq	%edx, %rdx
	movzwl	(%r10,%rdx,2), %edx
	addl	%ecx, %edx
	addl	%eax, %edx
.Ltmp1337:
	#DEBUG_VALUE: cost <- $edx
	.loc	0 502 29                        # x264_src/encoder/me.c:502:29
	cmpl	%r12d, %edx
.Ltmp1338:
	.loc	0 502 29                        # x264_src/encoder/me.c:502:29
	cmovll	%edx, %r8d
	movl	400(%rsp), %edx                 # 4-byte Reload
.Ltmp1339:
	.loc	0 0 29                          # x264_src/encoder/me.c:0:29
	movq	112(%rsp), %rax                 # 8-byte Reload
	.loc	0 502 29                        # x264_src/encoder/me.c:502:29
	cmovll	%r15d, %eax
	movq	%rax, 112(%rsp)                 # 8-byte Spill
.Ltmp1340:
	#DEBUG_VALUE: x264_me_search_ref:bmy <- undef
	.loc	0 0 29                          # x264_src/encoder/me.c:0:29
	movq	80(%rsp), %rax                  # 8-byte Reload
	.loc	0 502 29                        # x264_src/encoder/me.c:502:29
	cmovll	%r14d, %eax
.Ltmp1341:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- $eax
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	.loc	0 0 29                          # x264_src/encoder/me.c:0:29
	movq	%rax, 80(%rsp)                  # 8-byte Spill
.Ltmp1342:
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	jmp	.LBB0_310
.Ltmp1343:
.LBB0_313:                              #   in Loop: Header=BB0_308 Depth=1
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omx <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omy <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvx <- [DW_OP_plus_uconst 464, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvy <- [DW_OP_plus_uconst 384, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: dir <- $r10d
	movq	24(%rsp), %r10                  # 8-byte Reload
	movq	64(%rsp), %r13                  # 8-byte Reload
	movl	400(%rsp), %edx                 # 4-byte Reload
	movl	352(%rsp), %esi                 # 4-byte Reload
	movq	48(%rsp), %r9                   # 8-byte Reload
	movq	32(%rsp), %r11                  # 8-byte Reload
.Ltmp1344:
	.loc	0 559 24 is_stmt 1              # x264_src/encoder/me.c:559:24
	jmp	.LBB0_307
.Ltmp1345:
.LBB0_314:                              # %cleanup3553
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omx <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omy <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvx <- [DW_OP_plus_uconst 464, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvy <- [DW_OP_plus_uconst 384, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r11
	.loc	0 0 24 is_stmt 0                # x264_src/encoder/me.c:0:24
	movq	112(%rsp), %rax                 # 8-byte Reload
.Ltmp1346:
	.loc	0 566 21 is_stmt 1              # x264_src/encoder/me.c:566:21
	cmpl	344(%rsp), %eax                 # 4-byte Folded Reload
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	jg	.LBB0_153
.Ltmp1347:
# %bb.315:                              # %cleanup3553
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omx <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omy <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvx <- [DW_OP_plus_uconst 464, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvy <- [DW_OP_plus_uconst 384, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r11
	.loc	0 0 21 is_stmt 0                # x264_src/encoder/me.c:0:21
	cmpl	392(%rsp), %eax                 # 4-byte Folded Reload
	movq	104(%rsp), %rbx                 # 8-byte Reload
	movq	432(%rsp), %r14                 # 8-byte Reload
	movq	440(%rsp), %r15                 # 8-byte Reload
	jl	.LBB0_154
.Ltmp1348:
# %bb.316:                              # %cleanup3553
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $r8d
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omx <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omy <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvx <- [DW_OP_plus_uconst 464, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvy <- [DW_OP_plus_uconst 384, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r11
	movl	%r8d, %ebp
.Ltmp1349:
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	movq	80(%rsp), %rax                  # 8-byte Reload
	cmpl	336(%rsp), %eax                 # 4-byte Folded Reload
	jg	.LBB0_169
.Ltmp1350:
# %bb.317:                              # %cleanup3553
	#DEBUG_VALUE: x264_me_search_ref:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:m <- [DW_OP_plus_uconst 456] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:mvc <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_search_ref:i_mvc <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_search_ref:p_halfpel_thresh <- [DW_OP_plus_uconst 664] [$rsp+0]
	#DEBUG_VALUE: x264_me_search_ref:i_me_range <- [DW_OP_plus_uconst 320, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fref_w <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_mx <- [DW_OP_plus_uconst 544, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_my <- [DW_OP_plus_uconst 440, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bpred_cost <- [DW_OP_plus_uconst 452, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_fenc <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_min <- [DW_OP_plus_uconst 400, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:mv_max <- [DW_OP_plus_uconst 352, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvx <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:p_cost_mvy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmx <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmx <- [DW_OP_plus_uconst 512, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:pmy <- [DW_OP_plus_uconst 432, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:bcost <- $ebp
	#DEBUG_VALUE: cross_start <- [DW_OP_plus_uconst 424, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omx <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_search_ref:omy <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvx <- [DW_OP_plus_uconst 464, DW_OP_deref] $rsp
	#DEBUG_VALUE: p_cost_omvy <- [DW_OP_plus_uconst 384, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $r11
	cmpl	280(%rsp), %eax                 # 4-byte Folded Reload
	jge	.LBB0_41
	jmp	.LBB0_169
.Lfunc_end0:
	.size	x264_me_search_ref, .Lfunc_end0-x264_me_search_ref
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3, 0x0
.LJTI0_0:
	.quad	.LBB0_36
	.quad	.LBB0_40
	.quad	.LBB0_33
	.quad	.LBB0_31
	.quad	.LBB0_31
	.file	8 "/usr/include" "stdint.h" md5 0xa48e64edacc5b19f56c99745232c963c
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function refine_subpel
	.type	refine_subpel,@function
refine_subpel:                          # @refine_subpel
.Lfunc_begin1:
	.loc	0 810 0 is_stmt 1               # x264_src/encoder/me.c:810:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: refine_subpel:h <- $rdi
	#DEBUG_VALUE: refine_subpel:m <- $rsi
	#DEBUG_VALUE: refine_subpel:hpel_iters <- $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- $r9d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$1400, %rsp                     # imm = 0x578
	.cfi_def_cfa_offset 1456
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%r9d, 116(%rsp)                 # 4-byte Spill
.Ltmp1351:
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	movq	%r8, %r14
	movl	%edx, %ebp
	movq	%rsi, %r15
	movq	%rdi, %r13
.Ltmp1352:
	.loc	0 811 39 prologue_end           # x264_src/encoder/me.c:811:39
	movslq	(%rsi), %rdx
.Ltmp1353:
	#DEBUG_VALUE: refine_subpel:hpel_iters <- $ebp
	.loc	0 0 39 is_stmt 0                # x264_src/encoder/me.c:0:39
	movq	%rdx, 88(%rsp)                  # 8-byte Spill
	.loc	0 811 39                        # x264_src/encoder/me.c:811:39
	cmpq	$4, %rdx
	setl	15(%rsp)                        # 1-byte Folded Spill
.Ltmp1354:
	#DEBUG_VALUE: refine_subpel:bw <- undef
	#DEBUG_VALUE: refine_subpel:bh <- undef
	.loc	0 813 37 is_stmt 1              # x264_src/encoder/me.c:813:37
	movq	8(%rsi), %r8
.Ltmp1355:
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- $r14
	.loc	0 813 49 is_stmt 0              # x264_src/encoder/me.c:813:49
	movswq	128(%rsi), %r9
	.loc	0 813 47                        # x264_src/encoder/me.c:813:47
	leaq	(%r9,%r9), %rdx
.Ltmp1356:
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- undef
	.loc	0 814 49 is_stmt 1              # x264_src/encoder/me.c:814:49
	movswq	130(%rsi), %rax
	.loc	0 814 47 is_stmt 0              # x264_src/encoder/me.c:814:47
	leaq	(%rax,%rax), %rsi
.Ltmp1357:
	#DEBUG_VALUE: refine_subpel:m <- $r15
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- undef
	#DEBUG_VALUE: refine_subpel:i_pixel <- undef
	.loc	0 816 29 is_stmt 1              # x264_src/encoder/me.c:816:29
	cmpl	$0, 16412(%rdi)
	setne	%r10b
.Ltmp1358:
	#DEBUG_VALUE: refine_subpel:b_chroma_me <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] undef
	.loc	0 817 52                        # x264_src/encoder/me.c:817:52
	movl	20(%r15), %edi
.Ltmp1359:
	#DEBUG_VALUE: refine_subpel:h <- $r13
	.loc	0 817 47 is_stmt 0              # x264_src/encoder/me.c:817:47
	testl	%edi, 16436(%r13)
	movl	%ecx, 208(%rsp)                 # 4-byte Spill
.Ltmp1360:
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	.loc	0 0 47                          # x264_src/encoder/me.c:0:47
	movb	%r10b, 192(%rsp)                # 1-byte Spill
	.loc	0 817 28                        # x264_src/encoder/me.c:817:28
	je	.LBB1_1
.Ltmp1361:
# %bb.2:                                # %cond.true
	#DEBUG_VALUE: refine_subpel:h <- $r13
	#DEBUG_VALUE: refine_subpel:m <- $r15
	#DEBUG_VALUE: refine_subpel:hpel_iters <- $ebp
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- $r14
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	.loc	0 817 67                        # x264_src/encoder/me.c:817:67
	movl	16388(%r13), %edi
	.loc	0 817 78                        # x264_src/encoder/me.c:817:78
	andl	$1, %edi
	.loc	0 817 81                        # x264_src/encoder/me.c:817:81
	leal	-2(,%rdi,4), %ecx
	movq	%rcx, 216(%rsp)                 # 8-byte Spill
	jmp	.LBB1_3
.Ltmp1362:
.LBB1_1:
	#DEBUG_VALUE: refine_subpel:h <- $r13
	#DEBUG_VALUE: refine_subpel:m <- $r15
	#DEBUG_VALUE: refine_subpel:hpel_iters <- $ebp
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- $r14
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	.loc	0 0 81                          # x264_src/encoder/me.c:0:81
	movq	$0, 216(%rsp)                   # 8-byte Folded Spill
.Ltmp1363:
.LBB1_3:                                # %cond.end
	#DEBUG_VALUE: refine_subpel:h <- $r13
	#DEBUG_VALUE: refine_subpel:m <- $r15
	#DEBUG_VALUE: refine_subpel:hpel_iters <- $ebp
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- $r14
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	movq	88(%rsp), %rdi                  # 8-byte Reload
	movl	x264_pixel_size(,%rdi,8), %r10d
.Ltmp1364:
	#DEBUG_VALUE: refine_subpel:bw <- $r10d
	movl	x264_pixel_size+4(,%rdi,8), %r12d
.Ltmp1365:
	#DEBUG_VALUE: refine_subpel:bh <- $r12d
	movq	%r8, %rdi
	subq	%rdx, %rdi
.Ltmp1366:
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- $rdi
	movq	%rdi, 136(%rsp)                 # 8-byte Spill
	subq	%rsi, %r8
.Ltmp1367:
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- $r8
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	movq	%r8, 144(%rsp)                  # 8-byte Spill
	.loc	0 821 15 is_stmt 1              # x264_src/encoder/me.c:821:15
	movswl	140(%r15), %r8d
.Ltmp1368:
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	.loc	0 822 15                        # x264_src/encoder/me.c:822:15
	movswl	142(%r15), %ebx
.Ltmp1369:
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	.loc	0 823 20                        # x264_src/encoder/me.c:823:20
	movl	136(%r15), %r11d
.Ltmp1370:
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	.loc	0 827 9                         # x264_src/encoder/me.c:827:9
	testl	%ebp, %ebp
	movq	%r15, 56(%rsp)                  # 8-byte Spill
.Ltmp1371:
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/me.c:0:9
	movq	%r13, 104(%rsp)                 # 8-byte Spill
.Ltmp1372:
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	movq	%r10, 96(%rsp)                  # 8-byte Spill
	movq	%r12, 200(%rsp)                 # 8-byte Spill
	movq	%r14, 120(%rsp)                 # 8-byte Spill
.Ltmp1373:
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	.loc	0 827 20                        # x264_src/encoder/me.c:827:20
	je	.LBB1_4
.Ltmp1374:
# %bb.5:                                # %land.lhs.true
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- $ebp
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	.loc	0 827 45                        # x264_src/encoder/me.c:827:45
	cmpl	$2, 16408(%r13)
.Ltmp1375:
	.loc	0 827 9                         # x264_src/encoder/me.c:827:9
	jg	.LBB1_10
.Ltmp1376:
# %bb.6:                                # %if.then
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- $ebp
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	%rbx, 24(%rsp)                  # 8-byte Spill
.Ltmp1377:
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	.loc	0 829 41 is_stmt 1              # x264_src/encoder/me.c:829:41
	movl	16456(%r13), %edx
	.loc	0 830 41                        # x264_src/encoder/me.c:830:41
	movl	16460(%r13), %esi
	.loc	0 829 61                        # x264_src/encoder/me.c:829:61
	addl	$2, %edx
	.loc	0 829 65 is_stmt 0              # x264_src/encoder/me.c:829:65
	movl	16464(%r13), %ebx
	.loc	0 829 85                        # x264_src/encoder/me.c:829:85
	addl	$-2, %ebx
.Ltmp1378:
	#DEBUG_VALUE: x264_clip3:i_max <- $ebx
	.loc	5 202 14 is_stmt 1              # x264_src/common/common.h:202:14
	cmpl	%ebx, %r9d
	cmovll	%r9d, %ebx
.Ltmp1379:
	#DEBUG_VALUE: x264_clip3:v <- $r9d
	#DEBUG_VALUE: x264_clip3:i_min <- $edx
	.loc	5 202 17 is_stmt 0              # x264_src/common/common.h:202:17
	cmpl	%r9d, %edx
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmovgl	%edx, %ebx
.Ltmp1380:
	#DEBUG_VALUE: mx <- $ebx
	.loc	0 830 61 is_stmt 1              # x264_src/encoder/me.c:830:61
	addl	$2, %esi
	.loc	0 830 65 is_stmt 0              # x264_src/encoder/me.c:830:65
	movl	16468(%r13), %r14d
	.loc	0 830 85                        # x264_src/encoder/me.c:830:85
	addl	$-2, %r14d
.Ltmp1381:
	#DEBUG_VALUE: x264_clip3:i_max <- $r14d
	.loc	5 202 14 is_stmt 1              # x264_src/common/common.h:202:14
	cmpl	%r14d, %eax
	cmovll	%eax, %r14d
.Ltmp1382:
	#DEBUG_VALUE: x264_clip3:v <- $eax
	#DEBUG_VALUE: x264_clip3:i_min <- $esi
	.loc	5 202 17 is_stmt 0              # x264_src/common/common.h:202:17
	cmpl	%eax, %esi
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmovgl	%esi, %r14d
.Ltmp1383:
	#DEBUG_VALUE: my <- $r14d
	.loc	0 831 21 is_stmt 1              # x264_src/encoder/me.c:831:21
	cmpl	%r8d, %ebx
.Ltmp1384:
	.loc	0 831 13 is_stmt 0              # x264_src/encoder/me.c:831:13
	jne	.LBB1_9
.Ltmp1385:
# %bb.7:                                # %if.then
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- $ebp
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: mx <- $ebx
	#DEBUG_VALUE: my <- $r14d
	cmpl	24(%rsp), %r14d                 # 4-byte Folded Reload
	jne	.LBB1_9
.Ltmp1386:
# %bb.8:
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- $ebp
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: mx <- $ebx
	#DEBUG_VALUE: my <- $r14d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	24(%rsp), %rbx                  # 8-byte Reload
.Ltmp1387:
.LBB1_10:                               # %if.end75
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- $ebp
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: i <- $ebp
	movq	%r11, 16(%rsp)                  # 8-byte Spill
.Ltmp1388:
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 836 32 is_stmt 1              # x264_src/encoder/me.c:836:32
	testl	%ebp, %ebp
.Ltmp1389:
	.loc	0 836 5 is_stmt 0               # x264_src/encoder/me.c:836:5
	jle	.LBB1_21
.Ltmp1390:
.LBB1_11:                               # %for.body.lr.ph
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- $ebp
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: i <- $ebp
	.loc	0 0 5                           # x264_src/encoder/me.c:0:5
	leaq	32(%r15), %rax
	movq	%rax, 128(%rsp)                 # 8-byte Spill
	leal	1(%r12), %eax
	movq	%rax, 152(%rsp)                 # 8-byte Spill
	leal	4(%r10), %eax
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	.loc	0 836 5                         # x264_src/encoder/me.c:836:5
	incl	%ebp
.Ltmp1391:
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	.loc	0 0 5                           # x264_src/encoder/me.c:0:5
	movq	56(%rsp), %r12                  # 8-byte Reload
	.loc	0 836 5                         # x264_src/encoder/me.c:836:5
	jmp	.LBB1_13
.Ltmp1392:
	.p2align	4, 0x90
.LBB1_12:                               # %for.cond
                                        #   in Loop: Header=BB1_13 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_constu 2, DW_OP_minus, DW_OP_stack_value] $rsp
	.loc	0 836 32                        # x264_src/encoder/me.c:836:32
	decl	%ebp
	cmpl	$2, %ebp
.Ltmp1393:
	.loc	0 836 5                         # x264_src/encoder/me.c:836:5
	jl	.LBB1_21
.Ltmp1394:
.LBB1_13:                               # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:odir <- -1
	.loc	0 0 5                           # x264_src/encoder/me.c:0:5
	movl	%ebp, 40(%rsp)                  # 4-byte Spill
	movl	%ebx, %r15d
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
.Ltmp1395:
	#DEBUG_VALUE: refine_subpel:bmy <- $r15d
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- $r8d
	#DEBUG_VALUE: omy <- $r15d
	.loc	0 840 13 is_stmt 1              # x264_src/encoder/me.c:840:13
	movl	$64, 212(%rsp)
	.loc	0 842 59                        # x264_src/encoder/me.c:842:59
	movl	120(%r12), %ecx
	.loc	0 842 83 is_stmt 0              # x264_src/encoder/me.c:842:83
	leal	-2(%r15), %r9d
	movl	%r9d, 24(%rsp)                  # 4-byte Spill
	.loc	0 842 16                        # x264_src/encoder/me.c:842:16
	subq	$8, %rsp
.Ltmp1396:
	.cfi_adjust_cfa_offset 8
	leaq	248(%rsp), %rdi
	leaq	220(%rsp), %rsi
	movq	136(%rsp), %rbx                 # 8-byte Reload
	movq	%rbx, %rdx
	movq	%r8, %rbp
	pushq	24(%r12)
	.cfi_adjust_cfa_offset 8
	pushq	168(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	callq	*32624(%r13)
.Ltmp1397:
	#DEBUG_VALUE: omx <- $ebp
	#DEBUG_VALUE: refine_subpel:bmx <- $ebp
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movq	%rax, %r13
.Ltmp1398:
	#DEBUG_VALUE: src0 <- $r13
	.loc	0 843 59 is_stmt 1              # x264_src/encoder/me.c:843:59
	movl	120(%r12), %ecx
	.loc	0 843 78 is_stmt 0              # x264_src/encoder/me.c:843:78
	leal	-2(%rbp), %r14d
	.loc	0 843 16                        # x264_src/encoder/me.c:843:16
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	leaq	280(%rsp), %rdi
	leaq	220(%rsp), %rsi
	movq	%rbx, %rdx
	movl	%r14d, %r8d
	movl	%r15d, %r9d
	pushq	24(%r12)
	.cfi_adjust_cfa_offset 8
	pushq	216(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	pushq	56(%rsp)                        # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	movq	136(%rsp), %rax                 # 8-byte Reload
	callq	*32624(%rax)
.Ltmp1399:
	#DEBUG_VALUE: src2 <- $rax
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	.loc	0 844 23 is_stmt 1              # x264_src/encoder/me.c:844:23
	movslq	212(%rsp), %r9
	.loc	0 844 21 is_stmt 0              # x264_src/encoder/me.c:844:21
	movq	%r9, %rdx
	addq	%r13, %rdx
.Ltmp1400:
	#DEBUG_VALUE: src1 <- $rdx
	.loc	0 845 21 is_stmt 1              # x264_src/encoder/me.c:845:21
	leaq	1(%rax), %r8
.Ltmp1401:
	#DEBUG_VALUE: src3 <- $r8
	.loc	0 846 38                        # x264_src/encoder/me.c:846:38
	movq	88(%r12), %rdi
	.loc	0 846 9 is_stmt 0               # x264_src/encoder/me.c:846:9
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	movq	%r13, %rsi
	movq	112(%rsp), %r13                 # 8-byte Reload
.Ltmp1402:
	movq	%rax, %rcx
                                        # kill: def $r9d killed $r9d killed $r9
	leaq	72(%rsp), %rax
.Ltmp1403:
	#DEBUG_VALUE: src2 <- $rcx
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	movq	104(%rsp), %rax                 # 8-byte Reload
	callq	*32040(%r13,%rax,8)
.Ltmp1404:
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movl	40(%rsp), %r11d                 # 4-byte Reload
	.loc	0 846 9                         # x264_src/encoder/me.c:846:9
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movq	%rbp, %r10
.Ltmp1405:
	.loc	0 847 9 is_stmt 1               # x264_src/encoder/me.c:847:9
	movslq	%ebp, %rcx
	movq	136(%rsp), %rax                 # 8-byte Reload
	movzwl	(%rax,%rcx,2), %edx
	movl	64(%rsp), %eax
	addl	%edx, %eax
	movslq	%r15d, %rsi
	movq	144(%rsp), %rdi                 # 8-byte Reload
	movzwl	-4(%rdi,%rsi,2), %r8d
	addl	%eax, %r8d
	movq	16(%rsp), %rax                  # 8-byte Reload
	cmpl	%eax, %r8d
.Ltmp1406:
	.loc	0 847 9 is_stmt 0               # x264_src/encoder/me.c:847:9
	jl	.LBB1_15
.Ltmp1407:
# %bb.14:                               # %for.body
                                        #   in Loop: Header=BB1_13 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $ebp
	#DEBUG_VALUE: refine_subpel:bmy <- $r15d
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- $ebp
	#DEBUG_VALUE: omy <- $r15d
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movl	%eax, %r8d
	movl	%r15d, %r11d
.Ltmp1408:
.LBB1_15:                               # %for.body
                                        #   in Loop: Header=BB1_13 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $ebp
	#DEBUG_VALUE: refine_subpel:bmy <- $r15d
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- $ebp
	#DEBUG_VALUE: omy <- $r15d
	#DEBUG_VALUE: refine_subpel:bmy <- $r11d
	#DEBUG_VALUE: refine_subpel:bcost <- $r8d
	.loc	0 848 9 is_stmt 1               # x264_src/encoder/me.c:848:9
	addl	68(%rsp), %edx
	leal	2(%rsi), %edi
	movq	144(%rsp), %r9                  # 8-byte Reload
	movzwl	4(%r9,%rsi,2), %eax
	addl	%edx, %eax
	cmpl	%r8d, %eax
.Ltmp1409:
	.loc	0 848 9 is_stmt 0               # x264_src/encoder/me.c:848:9
	cmovgel	%r8d, %eax
	cmovgel	%r11d, %edi
.Ltmp1410:
	#DEBUG_VALUE: refine_subpel:bmy <- $edi
	#DEBUG_VALUE: refine_subpel:bcost <- $eax
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	136(%rsp), %r8                  # 8-byte Reload
.Ltmp1411:
	.loc	0 849 9 is_stmt 1               # x264_src/encoder/me.c:849:9
	movzwl	-4(%r8,%rcx,2), %edx
	addl	72(%rsp), %edx
	movzwl	(%r9,%rsi,2), %esi
	addl	%esi, %edx
	cmpl	%eax, %edx
.Ltmp1412:
	.loc	0 849 9 is_stmt 0               # x264_src/encoder/me.c:849:9
	movl	%eax, %r9d
	cmovll	%edx, %r9d
.Ltmp1413:
	.loc	0 850 9 is_stmt 1               # x264_src/encoder/me.c:850:9
	addl	76(%rsp), %esi
	movzwl	4(%r8,%rcx,2), %ecx
	addl	%ecx, %esi
	movl	%r15d, %ebx
	cmpl	%r9d, %esi
.Ltmp1414:
	.loc	0 850 9 is_stmt 0               # x264_src/encoder/me.c:850:9
	jl	.LBB1_17
.Ltmp1415:
# %bb.16:                               # %for.body
                                        #   in Loop: Header=BB1_13 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $ebp
	#DEBUG_VALUE: refine_subpel:bmy <- $edi
	#DEBUG_VALUE: refine_subpel:bcost <- $eax
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- $ebp
	#DEBUG_VALUE: omy <- $r15d
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movl	%edi, %ebx
.Ltmp1416:
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
.LBB1_17:                               # %for.body
                                        #   in Loop: Header=BB1_13 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $ebp
	#DEBUG_VALUE: refine_subpel:bmy <- $edi
	#DEBUG_VALUE: refine_subpel:bcost <- $eax
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- $ebp
	#DEBUG_VALUE: omy <- $r15d
	.loc	0 849 9 is_stmt 1               # x264_src/encoder/me.c:849:9
	cmpl	%eax, %edx
	movq	%r10, %r8
.Ltmp1417:
	.loc	0 849 9 is_stmt 0               # x264_src/encoder/me.c:849:9
	cmovgel	%r8d, %r14d
.Ltmp1418:
	#DEBUG_VALUE: refine_subpel:bmx <- $r14d
	.loc	0 850 9 is_stmt 1               # x264_src/encoder/me.c:850:9
	cmovll	%r15d, %ebx
.Ltmp1419:
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bmy <- undef
	#DEBUG_VALUE: refine_subpel:bcost <- $r9d
	.loc	0 850 9 is_stmt 0               # x264_src/encoder/me.c:850:9
	addl	$2, %r8d
	cmpl	%r9d, %esi
.Ltmp1420:
	.loc	0 850 9                         # x264_src/encoder/me.c:850:9
	cmovll	%esi, %r9d
.Ltmp1421:
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	%r9, 16(%rsp)                   # 8-byte Spill
	.loc	0 850 9                         # x264_src/encoder/me.c:850:9
	cmovgel	%r14d, %r8d
.Ltmp1422:
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	96(%rsp), %r10                  # 8-byte Reload
	movl	40(%rsp), %ebp                  # 4-byte Reload
.Ltmp1423:
	jl	.LBB1_12
.Ltmp1424:
# %bb.18:                               # %for.body
                                        #   in Loop: Header=BB1_13 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omy <- $r15d
	cmpl	%eax, %edx
	jl	.LBB1_12
.Ltmp1425:
# %bb.19:                               # %for.body
                                        #   in Loop: Header=BB1_13 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omy <- $r15d
	cmpl	%r15d, %ebx
	jne	.LBB1_12
.Ltmp1426:
# %bb.20:
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omy <- $r15d
	movl	%r15d, %ebx
	jmp	.LBB1_21
.Ltmp1427:
.LBB1_4:
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- $ebp
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	movq	%r11, 16(%rsp)                  # 8-byte Spill
.Ltmp1428:
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
.LBB1_21:                               # %cleanup228
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- -1
	movzbl	15(%rsp), %ebp                  # 1-byte Folded Reload
	andb	192(%rsp), %bpl                 # 1-byte Folded Reload
.Ltmp1429:
	#DEBUG_VALUE: refine_subpel:b_chroma_me <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $bpl
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 855 10 is_stmt 1              # x264_src/encoder/me.c:855:10
	cmpl	$0, 116(%rsp)                   # 4-byte Folded Reload
	.loc	0 855 24 is_stmt 0              # x264_src/encoder/me.c:855:24
	je	.LBB1_23
.Ltmp1430:
# %bb.22:
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:b_chroma_me <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $bpl
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- -1
	.loc	0 0 24                          # x264_src/encoder/me.c:0:24
	movq	56(%rsp), %r15                  # 8-byte Reload
	movq	200(%rsp), %r12                 # 8-byte Reload
	movq	16(%rsp), %r11                  # 8-byte Reload
	movq	120(%rsp), %rdx                 # 8-byte Reload
	.loc	0 855 24                        # x264_src/encoder/me.c:855:24
	jmp	.LBB1_35
.Ltmp1431:
.LBB1_23:                               # %land.lhs.true230
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:b_chroma_me <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $bpl
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- -1
	.loc	0 855 28                        # x264_src/encoder/me.c:855:28
	movq	31872(%r13), %rax
	.loc	0 855 55                        # x264_src/encoder/me.c:855:55
	cmpq	31928(%r13), %rax
	setne	%al
	.loc	0 855 77                        # x264_src/encoder/me.c:855:77
	orb	%bpl, %al
	cmpb	$1, %al
	movq	56(%rsp), %r15                  # 8-byte Reload
	movq	200(%rsp), %r12                 # 8-byte Reload
	movq	16(%rsp), %r11                  # 8-byte Reload
	movq	120(%rsp), %rdx                 # 8-byte Reload
	jne	.LBB1_35
.Ltmp1432:
# %bb.24:                               # %if.then244
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:b_chroma_me <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $bpl
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: refine_subpel:bcost <- 268435456
	.loc	0 858 9 is_stmt 1               # x264_src/encoder/me.c:858:9
	movl	$16, 64(%rsp)
	leaq	32(%r15), %rdx
	movl	120(%r15), %ecx
	subq	$8, %rsp
.Ltmp1433:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/me.c:0:9
	leaq	248(%rsp), %rdi
	leaq	72(%rsp), %rsi
	movq	%r8, 40(%rsp)                   # 8-byte Spill
.Ltmp1434:
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	movq	40(%rsp), %r8                   # 8-byte Reload
                                        # kill: def $r8d killed $r8d killed $r8
	.loc	0 858 9                         # x264_src/encoder/me.c:858:9
	movl	%ebx, %r9d
	pushq	24(%r15)
.Ltmp1435:
	.cfi_adjust_cfa_offset 8
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	movq	%rbx, %r14
	movq	%r10, %rbx
.Ltmp1436:
	#DEBUG_VALUE: refine_subpel:bmy <- $r14d
	callq	*32624(%r13)
.Ltmp1437:
	#DEBUG_VALUE: src <- $rax
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movq	88(%r15), %rdi
	movl	64(%rsp), %ecx
	movl	$16, %esi
	movq	%rax, %rdx
	movq	88(%rsp), %rax                  # 8-byte Reload
.Ltmp1438:
	callq	*31872(%r13,%rax,8)
.Ltmp1439:
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	32(%rsp), %r8                   # 8-byte Reload
	.loc	0 858 9                         # x264_src/encoder/me.c:858:9
	movslq	%r8d, %rcx
	movq	136(%rsp), %rdx                 # 8-byte Reload
	movzwl	(%rdx,%rcx,2), %ecx
	movslq	%r14d, %rdx
	movq	144(%rsp), %rsi                 # 8-byte Reload
	movl	%ebp, %edi
	movzwl	(%rsi,%rdx,2), %ebp
.Ltmp1440:
	#DEBUG_VALUE: refine_subpel:b_chroma_me <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $dil
	addl	%ecx, %ebp
	addl	%eax, %ebp
.Ltmp1441:
	#DEBUG_VALUE: cost <- $ebp
	.loc	0 858 9                         # x264_src/encoder/me.c:858:9
	cmpl	$268435456, %ebp                # imm = 0x10000000
	setl	%al
	movb	%dil, 15(%rsp)                  # 1-byte Spill
.Ltmp1442:
	#DEBUG_VALUE: refine_subpel:b_chroma_me <- [DW_OP_plus_uconst 15, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	andb	%dil, %al
	cmpb	$1, %al
	jne	.LBB1_25
.Ltmp1443:
# %bb.26:                               # %if.then277
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:b_chroma_me <- [DW_OP_plus_uconst 15, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $r14d
	#DEBUG_VALUE: refine_subpel:bcost <- 268435456
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: cost <- $ebp
	.loc	0 858 9                         # x264_src/encoder/me.c:858:9
	movq	64(%r15), %rdx
	movl	124(%r15), %ecx
	movq	%r14, 24(%rsp)                  # 8-byte Spill
.Ltmp1444:
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	216(%rsp), %rax                 # 8-byte Reload
	.loc	0 858 9                         # x264_src/encoder/me.c:858:9
	leal	(%r14,%rax), %r9d
	movl	%ebx, %r14d
	shrl	$31, %r14d
	addl	%ebx, %r14d
	sarl	%r14d
	movl	%r12d, %r15d
	shrl	$31, %r15d
	addl	%r12d, %r15d
	sarl	%r15d
	leaq	240(%rsp), %rdi
	movl	$8, %esi
                                        # kill: def $r8d killed $r8d killed $r8
	movl	%r9d, 16(%rsp)                  # 4-byte Spill
	pushq	%r15
.Ltmp1445:
	.cfi_adjust_cfa_offset 8
	pushq	%r14
	.cfi_adjust_cfa_offset 8
	callq	*32632(%r13)
.Ltmp1446:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movq	56(%rsp), %rax                  # 8-byte Reload
.Ltmp1447:
	.loc	0 858 9                         # x264_src/encoder/me.c:858:9
	movq	24(%rax), %r8
	movq	112(%r8), %rax
	testq	%rax, %rax
.Ltmp1448:
	.loc	0 858 9                         # x264_src/encoder/me.c:858:9
	je	.LBB1_28
.Ltmp1449:
# %bb.27:                               # %if.then289
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:b_chroma_me <- [DW_OP_plus_uconst 15, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- 268435456
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: cost <- $ebp
	.loc	0 858 9                         # x264_src/encoder/me.c:858:9
	addq	$64, %r8
	movl	%ebx, %ecx
	sarl	$3, %ecx
	movslq	%ecx, %r10
	movl	%r12d, %r9d
	sarl	%r9d
	leaq	240(%rsp), %rdi
	movl	$8, %esi
	movq	%rdi, %rdx
	movl	$8, %ecx
	callq	*(%rax,%r10,8)
.Ltmp1450:
.LBB1_28:                               # %if.end306
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:b_chroma_me <- [DW_OP_plus_uconst 15, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- 268435456
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: cost <- $ebp
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	%r12, %rbx
	movq	56(%rsp), %r12                  # 8-byte Reload
	.loc	0 858 9                         # x264_src/encoder/me.c:858:9
	movq	96(%r12), %rdi
	leaq	240(%rsp), %rdx
	movl	$16, %esi
	movl	$8, %ecx
	movq	88(%rsp), %rax                  # 8-byte Reload
	callq	*31840(%r13,%rax,8)
.Ltmp1451:
	addl	%eax, %ebp
.Ltmp1452:
	#DEBUG_VALUE: cost <- $ebp
	.loc	0 858 9                         # x264_src/encoder/me.c:858:9
	cmpl	$268435455, %ebp                # imm = 0xFFFFFFF
.Ltmp1453:
	.loc	0 858 9                         # x264_src/encoder/me.c:858:9
	jg	.LBB1_29
.Ltmp1454:
# %bb.30:                               # %if.then318
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:b_chroma_me <- [DW_OP_plus_uconst 15, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- 268435456
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: cost <- $ebp
	.loc	0 858 9                         # x264_src/encoder/me.c:858:9
	movq	72(%r12), %rdx
	movl	124(%r12), %ecx
	leaq	240(%rsp), %rdi
	movl	$8, %esi
	movq	32(%rsp), %r8                   # 8-byte Reload
                                        # kill: def $r8d killed $r8d killed $r8
	movl	16(%rsp), %r9d                  # 4-byte Reload
	pushq	%r15
.Ltmp1455:
	.cfi_adjust_cfa_offset 8
	pushq	%r14
	.cfi_adjust_cfa_offset 8
	callq	*32632(%r13)
.Ltmp1456:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
.Ltmp1457:
	.loc	0 858 9                         # x264_src/encoder/me.c:858:9
	movq	24(%r12), %r8
	movq	176(%r8), %rax
	testq	%rax, %rax
	movq	%r12, %r15
	movq	%rbx, %r12
.Ltmp1458:
	.loc	0 858 9                         # x264_src/encoder/me.c:858:9
	je	.LBB1_32
.Ltmp1459:
# %bb.31:                               # %if.then333
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:b_chroma_me <- [DW_OP_plus_uconst 15, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- 268435456
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: cost <- $ebp
	.loc	0 858 9                         # x264_src/encoder/me.c:858:9
	subq	$-128, %r8
	movq	96(%rsp), %rcx                  # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx
	sarl	$3, %ecx
	movslq	%ecx, %r10
	movl	%r12d, %r9d
	sarl	%r9d
	leaq	240(%rsp), %rdi
	movl	$8, %esi
	movq	%rdi, %rdx
	movl	$8, %ecx
	callq	*(%rax,%r10,8)
.Ltmp1460:
.LBB1_32:                               # %if.end351
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:b_chroma_me <- [DW_OP_plus_uconst 15, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- 268435456
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: cost <- $ebp
	.loc	0 858 9                         # x264_src/encoder/me.c:858:9
	movq	104(%r15), %rdi
	leaq	240(%rsp), %rdx
	movl	$16, %esi
	movl	$8, %ecx
	movq	88(%rsp), %rax                  # 8-byte Reload
	callq	*31840(%r13,%rax,8)
.Ltmp1461:
	addl	%eax, %ebp
.Ltmp1462:
	#DEBUG_VALUE: cost <- $ebp
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	96(%rsp), %r10                  # 8-byte Reload
	jmp	.LBB1_33
.Ltmp1463:
.LBB1_9:                                # %if.then53
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- $ebp
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: mx <- $ebx
	#DEBUG_VALUE: my <- $r14d
	.loc	0 832 13 is_stmt 1              # x264_src/encoder/me.c:832:13
	movl	$16, 64(%rsp)
	leaq	32(%r15), %rdx
	movl	120(%r15), %ecx
	subq	$8, %rsp
.Ltmp1464:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/me.c:0:13
	leaq	248(%rsp), %rdi
	leaq	72(%rsp), %rsi
	movl	%ebp, 48(%rsp)                  # 4-byte Spill
.Ltmp1465:
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_plus_uconst 40] [$rsp+0]
	movq	%r8, %rbp
	.loc	0 832 13                        # x264_src/encoder/me.c:832:13
	movl	%ebx, %r8d
.Ltmp1466:
	#DEBUG_VALUE: refine_subpel:bmx <- $ebp
	movl	%r14d, %r9d
	pushq	24(%r15)
.Ltmp1467:
	.cfi_adjust_cfa_offset 8
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	movq	%r11, 48(%rsp)                  # 8-byte Spill
.Ltmp1468:
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	callq	*32624(%r13)
.Ltmp1469:
	#DEBUG_VALUE: src <- $rax
	addq	$32, %rsp
.Ltmp1470:
	.cfi_adjust_cfa_offset -32
	movq	88(%r15), %rdi
	movl	64(%rsp), %ecx
	movl	$16, %esi
	movq	%rax, %rdx
	movq	88(%rsp), %rax                  # 8-byte Reload
.Ltmp1471:
	callq	*31928(%r13,%rax,8)
.Ltmp1472:
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%rbp, %r8
	movl	40(%rsp), %ebp                  # 4-byte Reload
.Ltmp1473:
	movq	16(%rsp), %r11                  # 8-byte Reload
	movq	96(%rsp), %r10                  # 8-byte Reload
	.loc	0 832 13                        # x264_src/encoder/me.c:832:13
	movslq	%ebx, %rcx
	movq	136(%rsp), %rdx                 # 8-byte Reload
	movzwl	(%rdx,%rcx,2), %ecx
	movslq	%r14d, %rdx
	movq	144(%rsp), %rsi                 # 8-byte Reload
	movzwl	(%rsi,%rdx,2), %edx
	addl	%ecx, %edx
	addl	%eax, %edx
.Ltmp1474:
	#DEBUG_VALUE: cost <- $edx
	.loc	0 832 13                        # x264_src/encoder/me.c:832:13
	cmpl	%r11d, %edx
.Ltmp1475:
	.loc	0 832 13                        # x264_src/encoder/me.c:832:13
	cmovll	%edx, %r11d
	movq	24(%rsp), %rax                  # 8-byte Reload
	cmovll	%r14d, %eax
	cmovll	%ebx, %r8d
.Ltmp1476:
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $eax
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%rax, %rbx
.Ltmp1477:
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	movq	%r11, 16(%rsp)                  # 8-byte Spill
.Ltmp1478:
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 836 32 is_stmt 1              # x264_src/encoder/me.c:836:32
	testl	%ebp, %ebp
.Ltmp1479:
	.loc	0 836 5 is_stmt 0               # x264_src/encoder/me.c:836:5
	jg	.LBB1_11
	jmp	.LBB1_21
.Ltmp1480:
.LBB1_25:
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:b_chroma_me <- [DW_OP_plus_uconst 15, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $r14d
	#DEBUG_VALUE: refine_subpel:bcost <- 268435456
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: cost <- $ebp
	.loc	0 0 5                           # x264_src/encoder/me.c:0:5
	movq	%rbx, %r10
	movq	%r14, %rbx
	jmp	.LBB1_34
.Ltmp1481:
.LBB1_29:
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:b_chroma_me <- [DW_OP_plus_uconst 15, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- 268435456
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: cost <- $ebp
	movq	%r12, %r15
	movq	96(%rsp), %r10                  # 8-byte Reload
	movq	%rbx, %r12
.Ltmp1482:
.LBB1_33:                               # %if.end363
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:b_chroma_me <- [DW_OP_plus_uconst 15, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- 268435456
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: cost <- $ebp
	movq	24(%rsp), %rbx                  # 8-byte Reload
	movq	32(%rsp), %r8                   # 8-byte Reload
.Ltmp1483:
.LBB1_34:                               # %if.end363
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:b_chroma_me <- [DW_OP_plus_uconst 15, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- 268435456
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: cost <- $ebp
	movq	120(%rsp), %rdx                 # 8-byte Reload
	#DEBUG_VALUE: cost <- $ebp
.Ltmp1484:
	.loc	0 858 9 is_stmt 1               # x264_src/encoder/me.c:858:9
	cmpl	$268435456, %ebp                # imm = 0x10000000
	movl	$268435456, %r11d               # imm = 0x10000000
	cmovll	%ebp, %r11d
.Ltmp1485:
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/me.c:0:9
	movzbl	15(%rsp), %ebp                  # 1-byte Folded Reload
.Ltmp1486:
.LBB1_35:                               # %if.end369
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: refine_subpel:bmx <- undef
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	.loc	0 862 9 is_stmt 1               # x264_src/encoder/me.c:862:9
	testq	%rdx, %rdx
.Ltmp1487:
	.loc	0 862 9 is_stmt 0               # x264_src/encoder/me.c:862:9
	je	.LBB1_40
.Ltmp1488:
# %bb.36:                               # %if.then371
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	.loc	0 864 19 is_stmt 1              # x264_src/encoder/me.c:864:19
	leal	(,%r11,8), %ecx
	subl	%r11d, %ecx
	.loc	0 864 22 is_stmt 0              # x264_src/encoder/me.c:864:22
	sarl	$3, %ecx
	.loc	0 864 28                        # x264_src/encoder/me.c:864:28
	movl	(%rdx), %eax
	.loc	0 864 26                        # x264_src/encoder/me.c:864:26
	cmpl	%eax, %ecx
.Ltmp1489:
	.loc	0 864 13                        # x264_src/encoder/me.c:864:13
	jle	.LBB1_38
.Ltmp1490:
# %bb.37:                               # %if.then376
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	.loc	0 866 21 is_stmt 1              # x264_src/encoder/me.c:866:21
	movl	%r11d, 136(%r15)
	.loc	0 867 22                        # x264_src/encoder/me.c:867:22
	movw	%r8w, 140(%r15)
	.loc	0 868 22                        # x264_src/encoder/me.c:868:22
	movw	%bx, 142(%r15)
	.loc	0 870 13                        # x264_src/encoder/me.c:870:13
	jmp	.LBB1_111
.Ltmp1491:
.LBB1_38:                               # %if.else
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	.loc	0 872 24                        # x264_src/encoder/me.c:872:24
	cmpl	%eax, %r11d
.Ltmp1492:
	.loc	0 872 18 is_stmt 0              # x264_src/encoder/me.c:872:18
	jge	.LBB1_40
.Ltmp1493:
# %bb.39:                               # %if.then386
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	.loc	0 873 31 is_stmt 1              # x264_src/encoder/me.c:873:31
	movl	%r11d, (%rdx)
.Ltmp1494:
.LBB1_40:                               # %if.end389
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	.loc	0 877 31                        # x264_src/encoder/me.c:877:31
	cmpl	$2, 16408(%r13)
.Ltmp1495:
	.loc	0 877 9 is_stmt 0               # x264_src/encoder/me.c:877:9
	jl	.LBB1_105
.Ltmp1496:
# %bb.41:                               # %for.cond396.preheader
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: refine_subpel:bmx <- undef
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:bdir <- -1
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movl	208(%rsp), %ecx                 # 4-byte Reload
.Ltmp1497:
	.loc	0 880 36 is_stmt 1              # x264_src/encoder/me.c:880:36
	testl	%ecx, %ecx
.Ltmp1498:
	.loc	0 880 9 is_stmt 0               # x264_src/encoder/me.c:880:9
	jle	.LBB1_110
.Ltmp1499:
# %bb.42:                               # %for.body400.lr.ph
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: refine_subpel:bdir <- -1
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movb	%bpl, 15(%rsp)                  # 1-byte Spill
	leaq	32(%r15), %rax
	movq	%rax, 120(%rsp)                 # 8-byte Spill
.Ltmp1500:
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- $rdx
	movl	%r10d, %eax
	shrl	$31, %eax
	addl	%r10d, %eax
	sarl	%eax
	movq	%rax, 184(%rsp)                 # 8-byte Spill
	movl	%r12d, %eax
	shrl	$31, %eax
	addl	%r12d, %eax
	sarl	%eax
	movq	%rax, 176(%rsp)                 # 8-byte Spill
	movl	%r10d, %eax
	sarl	$3, %eax
	cltq
	movq	%rax, 160(%rsp)                 # 8-byte Spill
	movl	%r12d, %eax
	sarl	%eax
	movl	%eax, 52(%rsp)                  # 4-byte Spill
	movq	88(%rsp), %rax                  # 8-byte Reload
	addl	$3, %eax
	cltq
	movq	%rax, 168(%rsp)                 # 8-byte Spill
	.loc	0 880 9                         # x264_src/encoder/me.c:880:9
	incl	%ecx
	movl	$-1, %eax
	jmp	.LBB1_44
.Ltmp1501:
	.p2align	4, 0x90
.LBB1_43:                               # %for.cond396
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:bdir <- $eax
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:bdir <- $eax
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 2, DW_OP_minus, DW_OP_stack_value] $rsp
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movl	208(%rsp), %ecx                 # 4-byte Reload
.Ltmp1502:
	.loc	0 880 36                        # x264_src/encoder/me.c:880:36
	decl	%ecx
	cmpl	$2, %ecx
.Ltmp1503:
	.loc	0 880 9                         # x264_src/encoder/me.c:880:9
	jl	.LBB1_110
.Ltmp1504:
.LBB1_44:                               # %for.body400
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movl	%ecx, 208(%rsp)                 # 4-byte Spill
                                        # kill: def $ebx killed $ebx killed $rbx def $rbx
	movl	%r8d, %r14d
.Ltmp1505:
	#DEBUG_VALUE: refine_subpel:bmx <- $r14d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:bdir <- $eax
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	movq	%rbx, 40(%rsp)                  # 8-byte Spill
.Ltmp1506:
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	.loc	0 882 21 is_stmt 1              # x264_src/encoder/me.c:882:21
	cmpl	16460(%r13), %ebx
	.loc	0 882 45 is_stmt 0              # x264_src/encoder/me.c:882:45
	jle	.LBB1_45
.Ltmp1507:
# %bb.46:                               # %lor.lhs.false406
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r14d
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:bdir <- $eax
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	.loc	0 0 45                          # x264_src/encoder/me.c:0:45
	movq	40(%rsp), %rcx                  # 8-byte Reload
	.loc	0 882 52                        # x264_src/encoder/me.c:882:52
	cmpl	16468(%r13), %ecx
	.loc	0 882 76                        # x264_src/encoder/me.c:882:76
	jge	.LBB1_45
.Ltmp1508:
# %bb.47:                               # %lor.lhs.false412
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r14d
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:bdir <- $eax
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	.loc	0 882 83                        # x264_src/encoder/me.c:882:83
	cmpl	16456(%r13), %r14d
	.loc	0 882 107                       # x264_src/encoder/me.c:882:107
	jle	.LBB1_45
.Ltmp1509:
# %bb.48:                               # %lor.lhs.false418
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r14d
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:bdir <- $eax
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	.loc	0 882 114                       # x264_src/encoder/me.c:882:114
	cmpl	16464(%r13), %r14d
.Ltmp1510:
	.loc	0 882 17                        # x264_src/encoder/me.c:882:17
	jge	.LBB1_45
.Ltmp1511:
# %bb.49:                               # %if.end425
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r14d
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:bdir <- $eax
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	.loc	0 855 10 is_stmt 1              # x264_src/encoder/me.c:855:10
	cmpl	$0, 116(%rsp)                   # 4-byte Folded Reload
.Ltmp1512:
	#DEBUG_VALUE: refine_subpel:odir <- $eax
	#DEBUG_VALUE: omx <- $r14d
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	.loc	0 0 10 is_stmt 0                # x264_src/encoder/me.c:0:10
	movq	%r14, 128(%rsp)                 # 8-byte Spill
.Ltmp1513:
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	movl	%eax, 32(%rsp)                  # 4-byte Spill
.Ltmp1514:
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 886 13 is_stmt 1              # x264_src/encoder/me.c:886:13
	jne	.LBB1_52
.Ltmp1515:
# %bb.50:                               # %if.end425
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	cmpl	$1, %eax
	jne	.LBB1_52
.Ltmp1516:
# %bb.51:                               # %if.end425.if.then571_crit_edge
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/me.c:0:13
	movslq	%r14d, %rcx
	movl	$1, 152(%rsp)                   # 4-byte Folded Spill
	movq	40(%rsp), %rax                  # 8-byte Reload
                                        # kill: def $eax killed $eax killed $rax def $rax
	movq	%rax, 24(%rsp)                  # 8-byte Spill
	movq	%r11, %rbp
	leaq	240(%rsp), %r13
	.loc	0 886 13                        # x264_src/encoder/me.c:886:13
	jmp	.LBB1_63
.Ltmp1517:
	.p2align	4, 0x90
.LBB1_52:                               # %if.then432
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	.loc	0 886 13                        # x264_src/encoder/me.c:886:13
	movl	$16, 64(%rsp)
	movl	120(%r15), %ecx
	movq	40(%rsp), %r12                  # 8-byte Reload
	leal	-1(%r12), %ebx
	subq	$8, %rsp
.Ltmp1518:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	leaq	248(%rsp), %rbp
	.loc	0 886 13                        # x264_src/encoder/me.c:886:13
	movq	%rbp, %rdi
	leaq	72(%rsp), %rsi
	movq	128(%rsp), %rdx                 # 8-byte Reload
	movl	%r14d, %r8d
	movl	%ebx, %r9d
	pushq	24(%r15)
	.cfi_adjust_cfa_offset 8
	pushq	216(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	movq	%r11, 48(%rsp)                  # 8-byte Spill
.Ltmp1519:
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	callq	*32624(%r13)
.Ltmp1520:
	#DEBUG_VALUE: src <- $rax
	addq	$32, %rsp
.Ltmp1521:
	.cfi_adjust_cfa_offset -32
	movq	88(%r15), %rdi
	movl	64(%rsp), %ecx
	movl	$16, %esi
	movq	%rax, %rdx
	movq	88(%rsp), %rax                  # 8-byte Reload
.Ltmp1522:
	callq	*31872(%r13,%rax,8)
.Ltmp1523:
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	16(%rsp), %rdi                  # 8-byte Reload
	.loc	0 886 13                        # x264_src/encoder/me.c:886:13
	movslq	%r14d, %r9
	movq	136(%rsp), %rcx                 # 8-byte Reload
	movzwl	(%rcx,%r9,2), %ecx
	movslq	%r12d, %rdx
	movq	144(%rsp), %rsi                 # 8-byte Reload
	movq	%r14, %r8
	movzwl	-2(%rsi,%rdx,2), %r14d
	addl	%ecx, %r14d
	addl	%eax, %r14d
.Ltmp1524:
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 886 13                        # x264_src/encoder/me.c:886:13
	cmpl	%edi, %r14d
	setl	%al
	andb	15(%rsp), %al                   # 1-byte Folded Reload
	cmpb	$1, %al
	movq	%rbx, 24(%rsp)                  # 8-byte Spill
	movq	%r9, 192(%rsp)                  # 8-byte Spill
	jne	.LBB1_53
.Ltmp1525:
# %bb.54:                               # %if.then467
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 886 13                        # x264_src/encoder/me.c:886:13
	movq	64(%r15), %rdx
	movl	124(%r15), %ecx
	movq	216(%rsp), %rax                 # 8-byte Reload
	leal	(%rbx,%rax), %r12d
	movq	%rbp, %rdi
	movl	$8, %esi
                                        # kill: def $r8d killed $r8d killed $r8
	movl	%r12d, %r9d
	pushq	176(%rsp)                       # 8-byte Folded Reload
.Ltmp1526:
	.cfi_adjust_cfa_offset 8
	pushq	192(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	callq	*32632(%r13)
.Ltmp1527:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
.Ltmp1528:
	.loc	0 886 13                        # x264_src/encoder/me.c:886:13
	movq	24(%r15), %r8
	movq	112(%r8), %rax
	testq	%rax, %rax
	movq	%rbp, %r13
.Ltmp1529:
	.loc	0 886 13                        # x264_src/encoder/me.c:886:13
	je	.LBB1_56
.Ltmp1530:
# %bb.55:                               # %if.then483
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 886 13                        # x264_src/encoder/me.c:886:13
	addq	$64, %r8
	movq	%r13, %rdi
	movl	$8, %esi
	movq	%r13, %rdx
	movl	$8, %ecx
	movl	52(%rsp), %r9d                  # 4-byte Reload
	movq	160(%rsp), %r10                 # 8-byte Reload
	callq	*(%rax,%r10,8)
.Ltmp1531:
.LBB1_56:                               # %if.end501
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 886 13                        # x264_src/encoder/me.c:886:13
	movq	96(%r15), %rdi
	movl	$16, %esi
	movq	%r13, %rdx
	movl	$8, %ecx
	movq	104(%rsp), %rbx                 # 8-byte Reload
	movq	168(%rsp), %rax                 # 8-byte Reload
	callq	*31816(%rbx,%rax,8)
.Ltmp1532:
	addl	%eax, %r14d
.Ltmp1533:
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	16(%rsp), %rdi                  # 8-byte Reload
.Ltmp1534:
	.loc	0 886 13                        # x264_src/encoder/me.c:886:13
	cmpl	%edi, %r14d
	movl	32(%rsp), %ebp                  # 4-byte Reload
.Ltmp1535:
	.loc	0 886 13                        # x264_src/encoder/me.c:886:13
	jge	.LBB1_60
.Ltmp1536:
# %bb.57:                               # %if.then514
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 886 13                        # x264_src/encoder/me.c:886:13
	movq	72(%r15), %rdx
	movl	124(%r15), %ecx
	movq	%r13, %rdi
	movl	$8, %esi
	movq	128(%rsp), %r8                  # 8-byte Reload
                                        # kill: def $r8d killed $r8d killed $r8
	movl	%r12d, %r9d
	pushq	176(%rsp)                       # 8-byte Folded Reload
.Ltmp1537:
	.cfi_adjust_cfa_offset 8
	pushq	192(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	callq	*32632(%rbx)
.Ltmp1538:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
.Ltmp1539:
	.loc	0 886 13                        # x264_src/encoder/me.c:886:13
	movq	24(%r15), %r8
	movq	176(%r8), %rax
	testq	%rax, %rax
.Ltmp1540:
	.loc	0 886 13                        # x264_src/encoder/me.c:886:13
	je	.LBB1_59
.Ltmp1541:
# %bb.58:                               # %if.then530
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 886 13                        # x264_src/encoder/me.c:886:13
	subq	$-128, %r8
	movq	%r13, %rdi
	movl	$8, %esi
	movq	%r13, %rdx
	movl	$8, %ecx
	movl	52(%rsp), %r9d                  # 4-byte Reload
	movq	160(%rsp), %r10                 # 8-byte Reload
	callq	*(%rax,%r10,8)
.Ltmp1542:
.LBB1_59:                               # %if.end548
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 886 13                        # x264_src/encoder/me.c:886:13
	movq	104(%r15), %rdi
	movl	$16, %esi
	movq	%r13, %rdx
	movl	$8, %ecx
	movq	104(%rsp), %rax                 # 8-byte Reload
	movq	168(%rsp), %r8                  # 8-byte Reload
	callq	*31816(%rax,%r8,8)
.Ltmp1543:
	addl	%eax, %r14d
.Ltmp1544:
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	16(%rsp), %rdi                  # 8-byte Reload
	jmp	.LBB1_60
.Ltmp1545:
	.p2align	4, 0x90
.LBB1_53:                               #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	movq	%rbp, %r13
	movl	32(%rsp), %ebp                  # 4-byte Reload
.Ltmp1546:
.LBB1_60:                               # %if.end566
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	#DEBUG_VALUE: cost <- $r14d
	xorl	%ecx, %ecx
.Ltmp1547:
	.loc	0 886 13                        # x264_src/encoder/me.c:886:13
	cmpl	%edi, %r14d
	movq	96(%rsp), %r10                  # 8-byte Reload
.Ltmp1548:
	.loc	0 886 13                        # x264_src/encoder/me.c:886:13
	jl	.LBB1_62
.Ltmp1549:
# %bb.61:                               # %if.end566
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%ebp, %ecx
	movl	%edi, %r14d
	movq	40(%rsp), %rax                  # 8-byte Reload
                                        # kill: def $eax killed $eax killed $rax def $rax
	movq	%rax, 24(%rsp)                  # 8-byte Spill
.Ltmp1550:
.LBB1_62:                               # %if.end566
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- $ecx
	#DEBUG_VALUE: refine_subpel:bcost <- $r14d
	movl	%ecx, 152(%rsp)                 # 4-byte Spill
.Ltmp1551:
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	movl	116(%rsp), %eax                 # 4-byte Reload
.Ltmp1552:
	.loc	0 887 13 is_stmt 1              # x264_src/encoder/me.c:887:13
	orl	%ebp, %eax
	movl	%r14d, %ebp
.Ltmp1553:
	#DEBUG_VALUE: refine_subpel:bcost <- $ebp
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/me.c:0:13
	movq	128(%rsp), %r14                 # 8-byte Reload
	movq	192(%rsp), %rcx                 # 8-byte Reload
	.loc	0 887 13                        # x264_src/encoder/me.c:887:13
	je	.LBB1_77
.Ltmp1554:
.LBB1_63:                               # %if.then571
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- $ebp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%rcx, 192(%rsp)                 # 8-byte Spill
.Ltmp1555:
	.loc	0 887 13                        # x264_src/encoder/me.c:887:13
	movl	$16, 64(%rsp)
	movq	%r15, %rbx
	movl	120(%r15), %ecx
	movq	%r13, %r12
	movq	40(%rsp), %r15                  # 8-byte Reload
	leal	1(%r15), %r9d
	subq	$8, %rsp
.Ltmp1556:
	.cfi_adjust_cfa_offset 8
	movq	%r13, %rdi
	leaq	72(%rsp), %rsi
	movq	128(%rsp), %rdx                 # 8-byte Reload
	movl	%r14d, %r8d
	movq	%r9, 232(%rsp)                  # 8-byte Spill
                                        # kill: def $r9d killed $r9d killed $r9
	pushq	24(%rbx)
	.cfi_adjust_cfa_offset 8
	pushq	216(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	movq	136(%rsp), %r13                 # 8-byte Reload
	callq	*32624(%r13)
.Ltmp1557:
	#DEBUG_VALUE: src <- $rax
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movq	88(%rbx), %rdi
	movl	64(%rsp), %ecx
	movl	$16, %esi
	movq	%rax, %rdx
	movq	88(%rsp), %rax                  # 8-byte Reload
.Ltmp1558:
	callq	*31872(%r13,%rax,8)
.Ltmp1559:
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	136(%rsp), %rcx                 # 8-byte Reload
	movq	192(%rsp), %rdx                 # 8-byte Reload
	.loc	0 887 13                        # x264_src/encoder/me.c:887:13
	movzwl	(%rcx,%rdx,2), %ecx
	movslq	%r15d, %rsi
	movq	144(%rsp), %rdx                 # 8-byte Reload
	movq	%rsi, 192(%rsp)                 # 8-byte Spill
	movzwl	2(%rdx,%rsi,2), %r15d
	addl	%ecx, %r15d
	addl	%eax, %r15d
.Ltmp1560:
	#DEBUG_VALUE: cost <- $r15d
	.loc	0 887 13                        # x264_src/encoder/me.c:887:13
	cmpl	%ebp, %r15d
	setl	%al
	andb	15(%rsp), %al                   # 1-byte Folded Reload
	cmpb	$1, %al
	movq	%rbp, %r11
	jne	.LBB1_64
.Ltmp1561:
# %bb.65:                               # %if.then606
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- $ebp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r15d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%r14, %r8
	movq	%r12, %r14
	movq	%r11, 16(%rsp)                  # 8-byte Spill
.Ltmp1562:
	.loc	0 887 13                        # x264_src/encoder/me.c:887:13
	movq	64(%rbx), %rdx
	movl	124(%rbx), %ecx
	movq	216(%rsp), %rax                 # 8-byte Reload
	movq	224(%rsp), %r12                 # 8-byte Reload
	leal	(%r12,%rax), %r9d
	movq	%r14, %rdi
	movl	$8, %esi
                                        # kill: def $r8d killed $r8d killed $r8
	movl	%r9d, %ebp
.Ltmp1563:
	pushq	176(%rsp)                       # 8-byte Folded Reload
.Ltmp1564:
	.cfi_adjust_cfa_offset 8
	pushq	192(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	callq	*32632(%r13)
.Ltmp1565:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
.Ltmp1566:
	.loc	0 887 13                        # x264_src/encoder/me.c:887:13
	movq	24(%rbx), %r8
	movq	112(%r8), %rax
	testq	%rax, %rax
.Ltmp1567:
	.loc	0 887 13                        # x264_src/encoder/me.c:887:13
	je	.LBB1_67
.Ltmp1568:
# %bb.66:                               # %if.then622
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r15d
	.loc	0 887 13                        # x264_src/encoder/me.c:887:13
	addq	$64, %r8
	movq	%r14, %rdi
	movl	$8, %esi
	movq	%r14, %rdx
	movl	$8, %ecx
	movl	52(%rsp), %r9d                  # 4-byte Reload
	movq	160(%rsp), %r10                 # 8-byte Reload
	callq	*(%rax,%r10,8)
.Ltmp1569:
.LBB1_67:                               # %if.end640
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r15d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	56(%rsp), %r13                  # 8-byte Reload
	.loc	0 887 13                        # x264_src/encoder/me.c:887:13
	movq	96(%r13), %rdi
	movl	$16, %esi
	movq	%r14, %rdx
	movl	$8, %ecx
	movq	104(%rsp), %rbx                 # 8-byte Reload
	movq	168(%rsp), %rax                 # 8-byte Reload
	callq	*31816(%rbx,%rax,8)
.Ltmp1570:
	addl	%eax, %r15d
.Ltmp1571:
	#DEBUG_VALUE: cost <- $r15d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	16(%rsp), %r11                  # 8-byte Reload
.Ltmp1572:
	.loc	0 887 13                        # x264_src/encoder/me.c:887:13
	cmpl	%r11d, %r15d
.Ltmp1573:
	.loc	0 887 13                        # x264_src/encoder/me.c:887:13
	jge	.LBB1_68
.Ltmp1574:
# %bb.69:                               # %if.then653
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r15d
	.loc	0 887 13                        # x264_src/encoder/me.c:887:13
	movq	72(%r13), %rdx
	movl	124(%r13), %ecx
	movq	%r14, %rdi
	movl	$8, %esi
	movq	128(%rsp), %r8                  # 8-byte Reload
                                        # kill: def $r8d killed $r8d killed $r8
	movl	%ebp, %r9d
	pushq	176(%rsp)                       # 8-byte Folded Reload
.Ltmp1575:
	.cfi_adjust_cfa_offset 8
	pushq	192(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	callq	*32632(%rbx)
.Ltmp1576:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
.Ltmp1577:
	.loc	0 887 13                        # x264_src/encoder/me.c:887:13
	movq	24(%r13), %r8
	movq	176(%r8), %rax
	testq	%rax, %rax
.Ltmp1578:
	.loc	0 887 13                        # x264_src/encoder/me.c:887:13
	je	.LBB1_71
.Ltmp1579:
# %bb.70:                               # %if.then669
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r15d
	.loc	0 887 13                        # x264_src/encoder/me.c:887:13
	subq	$-128, %r8
	movq	%r14, %rdi
	movl	$8, %esi
	movq	%r14, %rdx
	movl	$8, %ecx
	movl	52(%rsp), %r9d                  # 4-byte Reload
	movq	160(%rsp), %r10                 # 8-byte Reload
	callq	*(%rax,%r10,8)
.Ltmp1580:
.LBB1_71:                               # %if.end687
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r15d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	56(%rsp), %rax                  # 8-byte Reload
	.loc	0 887 13                        # x264_src/encoder/me.c:887:13
	movq	104(%rax), %rdi
	movl	$16, %esi
	movq	%r14, %rdx
	movl	$8, %ecx
	movq	104(%rsp), %r13                 # 8-byte Reload
	movq	168(%rsp), %rax                 # 8-byte Reload
	callq	*31816(%r13,%rax,8)
.Ltmp1581:
	addl	%eax, %r15d
.Ltmp1582:
	#DEBUG_VALUE: cost <- $r15d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	24(%rsp), %rbx                  # 8-byte Reload
	movq	16(%rsp), %r11                  # 8-byte Reload
	jmp	.LBB1_72
.Ltmp1583:
	.p2align	4, 0x90
.LBB1_64:                               #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- $ebp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r15d
	movq	24(%rsp), %rbx                  # 8-byte Reload
	movq	224(%rsp), %r12                 # 8-byte Reload
	.loc	0 887 13                        # x264_src/encoder/me.c:887:13
	jmp	.LBB1_72
.Ltmp1584:
.LBB1_68:                               #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r15d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%rbx, %r13
	movq	24(%rsp), %rbx                  # 8-byte Reload
.Ltmp1585:
.LBB1_72:                               # %if.end705
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r15d
	#DEBUG_VALUE: cost <- $r15d
	.loc	0 887 13                        # x264_src/encoder/me.c:887:13
	cmpl	%r11d, %r15d
.Ltmp1586:
	.loc	0 887 13                        # x264_src/encoder/me.c:887:13
	movl	$1, %eax
	movl	152(%rsp), %ecx                 # 4-byte Reload
	cmovll	%eax, %ecx
	cmovll	%r15d, %r11d
	cmovll	%r12d, %ebx
.Ltmp1587:
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	.loc	0 855 10 is_stmt 1              # x264_src/encoder/me.c:855:10
	cmpl	$0, 116(%rsp)                   # 4-byte Folded Reload
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
.Ltmp1588:
	#DEBUG_VALUE: refine_subpel:bdir <- $ecx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	.loc	0 0 10 is_stmt 0                # x264_src/encoder/me.c:0:10
	movq	96(%rsp), %r10                  # 8-byte Reload
	movq	128(%rsp), %r14                 # 8-byte Reload
	movl	32(%rsp), %eax                  # 4-byte Reload
.Ltmp1589:
	.loc	0 888 13 is_stmt 1              # x264_src/encoder/me.c:888:13
	jne	.LBB1_73
.Ltmp1590:
# %bb.74:                               # %if.end705
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- $ecx
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	cmpl	$3, %eax
	movq	56(%rsp), %r15                  # 8-byte Reload
	jne	.LBB1_75
.Ltmp1591:
# %bb.112:                              # %if.end705.if.then849_crit_edge
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- $ecx
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/me.c:0:13
	movl	%r14d, %r8d
	.loc	0 888 13                        # x264_src/encoder/me.c:888:13
	jmp	.LBB1_92
.Ltmp1592:
.LBB1_75:                               #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- $ecx
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%ecx, 152(%rsp)                 # 4-byte Spill
.Ltmp1593:
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	movq	%rbx, 24(%rsp)                  # 8-byte Spill
.Ltmp1594:
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	jmp	.LBB1_76
.Ltmp1595:
.LBB1_73:                               #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- $ecx
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r15d
	movl	%ecx, 152(%rsp)                 # 4-byte Spill
.Ltmp1596:
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	movq	%rbx, 24(%rsp)                  # 8-byte Spill
.Ltmp1597:
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	movq	56(%rsp), %r15                  # 8-byte Reload
.Ltmp1598:
.LBB1_76:                               # %if.then710
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	movq	%r11, %rbp
	leaq	240(%rsp), %r13
.Ltmp1599:
.LBB1_77:                               # %if.then710
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- $ebp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	movq	40(%rsp), %r9                   # 8-byte Reload
	movslq	%r9d, %r12
.Ltmp1600:
	.loc	0 888 13                        # x264_src/encoder/me.c:888:13
	movl	$16, 64(%rsp)
	movl	120(%r15), %ecx
	leal	-1(%r14), %r8d
	subq	$8, %rsp
.Ltmp1601:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%r13, %rbx
	.loc	0 888 13                        # x264_src/encoder/me.c:888:13
	movq	%r13, %rdi
	leaq	72(%rsp), %rsi
	movq	128(%rsp), %rdx                 # 8-byte Reload
	movl	%r8d, 232(%rsp)                 # 4-byte Spill
                                        # kill: def $r9d killed $r9d killed $r9
	pushq	24(%r15)
	.cfi_adjust_cfa_offset 8
	pushq	216(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	movq	136(%rsp), %r13                 # 8-byte Reload
	callq	*32624(%r13)
.Ltmp1602:
	#DEBUG_VALUE: src <- $rax
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movq	88(%r15), %rdi
	movl	64(%rsp), %ecx
	movl	$16, %esi
	movq	%rax, %rdx
	movq	88(%rsp), %rax                  # 8-byte Reload
.Ltmp1603:
	callq	*31872(%r13,%rax,8)
.Ltmp1604:
	movslq	%r14d, %rcx
	movq	136(%rsp), %rdx                 # 8-byte Reload
	movzwl	-2(%rdx,%rcx,2), %ecx
	movq	144(%rsp), %rdx                 # 8-byte Reload
	movq	%r12, 192(%rsp)                 # 8-byte Spill
	movzwl	(%rdx,%r12,2), %r14d
	addl	%ecx, %r14d
	addl	%eax, %r14d
.Ltmp1605:
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 888 13                        # x264_src/encoder/me.c:888:13
	cmpl	%ebp, %r14d
	setl	%al
	andb	15(%rsp), %al                   # 1-byte Folded Reload
	cmpb	$1, %al
	movq	%rbp, %r11
	jne	.LBB1_78
.Ltmp1606:
# %bb.79:                               # %if.then745
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- $ebp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%r11, 16(%rsp)                  # 8-byte Spill
.Ltmp1607:
	.loc	0 888 13                        # x264_src/encoder/me.c:888:13
	movq	64(%r15), %rdx
	movl	124(%r15), %ecx
	movq	216(%rsp), %rax                 # 8-byte Reload
	movq	40(%rsp), %rsi                  # 8-byte Reload
	leal	(%rsi,%rax), %r9d
	movq	%rbx, %rdi
	movl	$8, %esi
	movl	224(%rsp), %r12d                # 4-byte Reload
	movl	%r12d, %r8d
	movl	%r9d, 236(%rsp)                 # 4-byte Spill
	pushq	176(%rsp)                       # 8-byte Folded Reload
.Ltmp1608:
	.cfi_adjust_cfa_offset 8
	pushq	192(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	callq	*32632(%r13)
.Ltmp1609:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movq	%r15, %rbp
.Ltmp1610:
	.loc	0 888 13                        # x264_src/encoder/me.c:888:13
	movq	24(%r15), %r8
	movq	112(%r8), %rax
	testq	%rax, %rax
.Ltmp1611:
	.loc	0 888 13                        # x264_src/encoder/me.c:888:13
	je	.LBB1_81
.Ltmp1612:
# %bb.80:                               # %if.then761
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 888 13                        # x264_src/encoder/me.c:888:13
	addq	$64, %r8
	movq	%rbx, %rdi
	movl	$8, %esi
	movq	%rbx, %rdx
	movl	$8, %ecx
	movl	52(%rsp), %r9d                  # 4-byte Reload
	movq	160(%rsp), %r10                 # 8-byte Reload
	callq	*(%rax,%r10,8)
.Ltmp1613:
.LBB1_81:                               # %if.end779
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%rbp, %r15
	.loc	0 888 13                        # x264_src/encoder/me.c:888:13
	movq	96(%rbp), %rdi
	movl	$16, %esi
	movq	%rbx, %rdx
	movl	$8, %ecx
	movq	168(%rsp), %rax                 # 8-byte Reload
	callq	*31816(%r13,%rax,8)
.Ltmp1614:
	addl	%eax, %r14d
.Ltmp1615:
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	16(%rsp), %r11                  # 8-byte Reload
.Ltmp1616:
	.loc	0 888 13                        # x264_src/encoder/me.c:888:13
	cmpl	%r11d, %r14d
.Ltmp1617:
	.loc	0 888 13                        # x264_src/encoder/me.c:888:13
	jge	.LBB1_82
.Ltmp1618:
# %bb.83:                               # %if.then792
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 888 13                        # x264_src/encoder/me.c:888:13
	movq	72(%r15), %rdx
	movl	124(%r15), %ecx
	movq	%rbx, %rdi
	movl	$8, %esi
	movl	%r12d, %r8d
	movl	236(%rsp), %r9d                 # 4-byte Reload
	pushq	176(%rsp)                       # 8-byte Folded Reload
.Ltmp1619:
	.cfi_adjust_cfa_offset 8
	pushq	192(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	callq	*32632(%r13)
.Ltmp1620:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
.Ltmp1621:
	.loc	0 888 13                        # x264_src/encoder/me.c:888:13
	movq	24(%r15), %r8
	movq	176(%r8), %rax
	testq	%rax, %rax
.Ltmp1622:
	.loc	0 888 13                        # x264_src/encoder/me.c:888:13
	je	.LBB1_85
.Ltmp1623:
# %bb.84:                               # %if.then808
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 888 13                        # x264_src/encoder/me.c:888:13
	subq	$-128, %r8
	movq	%rbx, %rdi
	movl	$8, %esi
	movq	%rbx, %rdx
	movl	$8, %ecx
	movl	52(%rsp), %r9d                  # 4-byte Reload
	movq	160(%rsp), %r10                 # 8-byte Reload
	callq	*(%rax,%r10,8)
.Ltmp1624:
.LBB1_85:                               # %if.end826
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 888 13                        # x264_src/encoder/me.c:888:13
	movq	104(%r15), %rdi
	movl	$16, %esi
	movq	%rbx, %rdx
	movl	$8, %ecx
	movq	168(%rsp), %rax                 # 8-byte Reload
	callq	*31816(%r13,%rax,8)
.Ltmp1625:
	addl	%eax, %r14d
.Ltmp1626:
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	24(%rsp), %rbx                  # 8-byte Reload
	movq	16(%rsp), %r11                  # 8-byte Reload
	jmp	.LBB1_86
.Ltmp1627:
	.p2align	4, 0x90
.LBB1_78:                               #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- $ebp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	movq	24(%rsp), %rbx                  # 8-byte Reload
	movl	32(%rsp), %eax                  # 4-byte Reload
	movl	224(%rsp), %r12d                # 4-byte Reload
	.loc	0 888 13                        # x264_src/encoder/me.c:888:13
	jmp	.LBB1_87
.Ltmp1628:
.LBB1_82:                               #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	24(%rsp), %rbx                  # 8-byte Reload
.Ltmp1629:
.LBB1_86:                               # %if.end838
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	movl	32(%rsp), %eax                  # 4-byte Reload
.Ltmp1630:
.LBB1_87:                               # %if.end838
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	#DEBUG_VALUE: cost <- $r14d
	movq	128(%rsp), %r8                  # 8-byte Reload
                                        # kill: def $r8d killed $r8d killed $r8 def $r8
.Ltmp1631:
	.loc	0 888 13                        # x264_src/encoder/me.c:888:13
	cmpl	%r11d, %r14d
	movq	96(%rsp), %r10                  # 8-byte Reload
	movl	152(%rsp), %ecx                 # 4-byte Reload
.Ltmp1632:
	.loc	0 888 13                        # x264_src/encoder/me.c:888:13
	jge	.LBB1_89
.Ltmp1633:
# %bb.88:                               # %if.then841
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	$2, %ecx
.Ltmp1634:
	#DEBUG_VALUE: refine_subpel:bcost <- $r14d
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- 2
	movl	%r14d, %r11d
	movq	40(%rsp), %rbx                  # 8-byte Reload
                                        # kill: def $ebx killed $ebx killed $rbx def $rbx
	movl	%r12d, %r8d
.Ltmp1635:
.LBB1_89:                               # %if.end844
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	.loc	0 855 10 is_stmt 1              # x264_src/encoder/me.c:855:10
	cmpl	$0, 116(%rsp)                   # 4-byte Folded Reload
.Ltmp1636:
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:bdir <- $ecx
	.loc	0 889 13                        # x264_src/encoder/me.c:889:13
	jne	.LBB1_90
.Ltmp1637:
# %bb.91:                               # %if.end844
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- $ecx
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	cmpl	$2, %eax
	movl	%ecx, %eax
	movq	128(%rsp), %r14                 # 8-byte Reload
	jne	.LBB1_92
.Ltmp1638:
# %bb.103:                              # %if.end983
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- $ecx
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:bdir <- $ecx
	.loc	0 890 37                        # x264_src/encoder/me.c:890:37
	cmpl	40(%rsp), %ebx                  # 4-byte Folded Reload
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	je	.LBB1_104
	jmp	.LBB1_43
.Ltmp1639:
.LBB1_90:                               #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- $ecx
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	.loc	0 0 37 is_stmt 0                # x264_src/encoder/me.c:0:37
	movq	128(%rsp), %r14                 # 8-byte Reload
.Ltmp1640:
.LBB1_92:                               # %if.then849
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- $ecx
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	movl	%ecx, 152(%rsp)                 # 4-byte Spill
.Ltmp1641:
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	movq	%r8, 32(%rsp)                   # 8-byte Spill
.Ltmp1642:
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:odir <- undef
	movq	%r11, 16(%rsp)                  # 8-byte Spill
.Ltmp1643:
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 889 13 is_stmt 1              # x264_src/encoder/me.c:889:13
	movl	$16, 64(%rsp)
	movl	120(%r15), %ecx
	leal	1(%r14), %r12d
	subq	$8, %rsp
.Ltmp1644:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/me.c:0:13
	leaq	248(%rsp), %rbp
	.loc	0 889 13                        # x264_src/encoder/me.c:889:13
	movq	%rbp, %rdi
	leaq	72(%rsp), %rsi
	movq	128(%rsp), %rdx                 # 8-byte Reload
	movl	%r12d, %r8d
	movq	48(%rsp), %r9                   # 8-byte Reload
                                        # kill: def $r9d killed $r9d killed $r9
	pushq	24(%r15)
	.cfi_adjust_cfa_offset 8
	pushq	216(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	callq	*32624(%r13)
.Ltmp1645:
	#DEBUG_VALUE: src <- $rax
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movq	88(%r15), %rdi
	movl	64(%rsp), %ecx
	movl	$16, %esi
	movq	%rax, %rdx
	movq	88(%rsp), %rax                  # 8-byte Reload
.Ltmp1646:
	callq	*31872(%r13,%rax,8)
.Ltmp1647:
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	16(%rsp), %r11                  # 8-byte Reload
	.loc	0 889 13                        # x264_src/encoder/me.c:889:13
	movslq	%r14d, %rcx
	movq	136(%rsp), %rdx                 # 8-byte Reload
	movzwl	2(%rdx,%rcx,2), %ecx
	movq	144(%rsp), %rdx                 # 8-byte Reload
	movq	192(%rsp), %rsi                 # 8-byte Reload
	movzwl	(%rdx,%rsi,2), %r14d
	addl	%ecx, %r14d
	addl	%eax, %r14d
.Ltmp1648:
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 889 13                        # x264_src/encoder/me.c:889:13
	cmpl	%r11d, %r14d
	setl	%al
	andb	15(%rsp), %al                   # 1-byte Folded Reload
	cmpb	$1, %al
	jne	.LBB1_100
.Ltmp1649:
# %bb.93:                               # %if.then884
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	%rbx, 24(%rsp)                  # 8-byte Spill
.Ltmp1650:
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	.loc	0 889 13                        # x264_src/encoder/me.c:889:13
	movq	64(%r15), %rdx
	movl	124(%r15), %ecx
	movq	216(%rsp), %rax                 # 8-byte Reload
	movq	40(%rsp), %rsi                  # 8-byte Reload
	leal	(%rsi,%rax), %ebx
	movq	%rbp, %rdi
	movl	$8, %esi
	movl	%r12d, %r8d
	movl	%ebx, %r9d
	pushq	176(%rsp)                       # 8-byte Folded Reload
.Ltmp1651:
	.cfi_adjust_cfa_offset 8
	pushq	192(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	callq	*32632(%r13)
.Ltmp1652:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
.Ltmp1653:
	.loc	0 889 13                        # x264_src/encoder/me.c:889:13
	movq	24(%r15), %r8
	movq	112(%r8), %rax
	testq	%rax, %rax
.Ltmp1654:
	.loc	0 889 13                        # x264_src/encoder/me.c:889:13
	je	.LBB1_95
.Ltmp1655:
# %bb.94:                               # %if.then900
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 889 13                        # x264_src/encoder/me.c:889:13
	addq	$64, %r8
	movq	%rbp, %rdi
	movl	$8, %esi
	movq	%rbp, %rdx
	movl	$8, %ecx
	movl	52(%rsp), %r9d                  # 4-byte Reload
	movq	160(%rsp), %r10                 # 8-byte Reload
	callq	*(%rax,%r10,8)
.Ltmp1656:
.LBB1_95:                               # %if.end918
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 889 13                        # x264_src/encoder/me.c:889:13
	movq	96(%r15), %rdi
	movl	$16, %esi
	movq	%rbp, %rdx
	movl	$8, %ecx
	movq	168(%rsp), %rax                 # 8-byte Reload
	callq	*31816(%r13,%rax,8)
.Ltmp1657:
	addl	%eax, %r14d
.Ltmp1658:
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	16(%rsp), %r11                  # 8-byte Reload
.Ltmp1659:
	.loc	0 889 13                        # x264_src/encoder/me.c:889:13
	cmpl	%r11d, %r14d
.Ltmp1660:
	.loc	0 889 13                        # x264_src/encoder/me.c:889:13
	jge	.LBB1_96
.Ltmp1661:
# %bb.97:                               # %if.then931
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 889 13                        # x264_src/encoder/me.c:889:13
	movq	72(%r15), %rdx
	movl	124(%r15), %ecx
	movq	%rbp, %rdi
	movl	$8, %esi
	movl	%r12d, %r8d
	movl	%ebx, %r9d
	pushq	176(%rsp)                       # 8-byte Folded Reload
.Ltmp1662:
	.cfi_adjust_cfa_offset 8
	pushq	192(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	callq	*32632(%r13)
.Ltmp1663:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
.Ltmp1664:
	.loc	0 889 13                        # x264_src/encoder/me.c:889:13
	movq	24(%r15), %r8
	movq	176(%r8), %rax
	testq	%rax, %rax
.Ltmp1665:
	.loc	0 889 13                        # x264_src/encoder/me.c:889:13
	je	.LBB1_99
.Ltmp1666:
# %bb.98:                               # %if.then947
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 889 13                        # x264_src/encoder/me.c:889:13
	subq	$-128, %r8
	movq	%rbp, %rdi
	movl	$8, %esi
	movq	%rbp, %rdx
	movl	$8, %ecx
	movl	52(%rsp), %r9d                  # 4-byte Reload
	movq	160(%rsp), %r10                 # 8-byte Reload
	callq	*(%rax,%r10,8)
.Ltmp1667:
.LBB1_99:                               # %if.end965
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 889 13                        # x264_src/encoder/me.c:889:13
	movq	104(%r15), %rdi
	movl	$16, %esi
	movq	%rbp, %rdx
	movl	$8, %ecx
	movq	168(%rsp), %rax                 # 8-byte Reload
	callq	*31816(%r13,%rax,8)
.Ltmp1668:
	addl	%eax, %r14d
.Ltmp1669:
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movq	24(%rsp), %rbx                  # 8-byte Reload
	movq	16(%rsp), %r11                  # 8-byte Reload
	jmp	.LBB1_100
.Ltmp1670:
.LBB1_96:                               #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	movq	24(%rsp), %rbx                  # 8-byte Reload
.Ltmp1671:
.LBB1_100:                              # %if.end977
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 889 13                        # x264_src/encoder/me.c:889:13
	cmpl	%r11d, %r14d
	movq	96(%rsp), %r10                  # 8-byte Reload
	movq	32(%rsp), %r8                   # 8-byte Reload
	movl	152(%rsp), %eax                 # 4-byte Reload
.Ltmp1672:
	.loc	0 889 13                        # x264_src/encoder/me.c:889:13
	jge	.LBB1_102
.Ltmp1673:
# %bb.101:                              # %if.then980
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: cost <- $r14d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	$3, %eax
.Ltmp1674:
	#DEBUG_VALUE: refine_subpel:bcost <- $r14d
	#DEBUG_VALUE: refine_subpel:bmx <- $r12d
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bdir <- 3
	movl	%r14d, %r11d
	movq	40(%rsp), %rbx                  # 8-byte Reload
                                        # kill: def $ebx killed $ebx killed $rbx def $rbx
	movl	%r12d, %r8d
.Ltmp1675:
.LBB1_102:                              # %if.end982
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:bdir <- $eax
	movq	128(%rsp), %r14                 # 8-byte Reload
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:bdir <- $eax
.Ltmp1676:
	.loc	0 890 37 is_stmt 1              # x264_src/encoder/me.c:890:37
	cmpl	40(%rsp), %ebx                  # 4-byte Folded Reload
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	jne	.LBB1_43
.Ltmp1677:
.LBB1_104:                              # %if.end983
                                        #   in Loop: Header=BB1_44 Depth=1
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:bdir <- $eax
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: omx <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	.loc	0 0 37 is_stmt 0                # x264_src/encoder/me.c:0:37
	cmpl	%r14d, %r8d
	jne	.LBB1_43
.Ltmp1678:
.LBB1_45:
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:bdir <- $eax
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rsp
	movq	40(%rsp), %rbx                  # 8-byte Reload
.Ltmp1679:
                                        # kill: def $ebx killed $ebx killed $rbx def $rbx
	movl	%r14d, %r8d
.Ltmp1680:
	.loc	0 882 45 is_stmt 1              # x264_src/encoder/me.c:882:45
	jmp	.LBB1_110
.Ltmp1681:
.LBB1_105:                              # %if.else1000
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	.loc	0 895 18                        # x264_src/encoder/me.c:895:18
	cmpl	16460(%r13), %ebx
	.loc	0 895 41 is_stmt 0              # x264_src/encoder/me.c:895:41
	jle	.LBB1_110
.Ltmp1682:
# %bb.106:                              # %land.lhs.true1006
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	.loc	0 895 48                        # x264_src/encoder/me.c:895:48
	cmpl	16468(%r13), %ebx
	.loc	0 895 71                        # x264_src/encoder/me.c:895:71
	jge	.LBB1_110
.Ltmp1683:
# %bb.107:                              # %land.lhs.true1012
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	.loc	0 895 78                        # x264_src/encoder/me.c:895:78
	cmpl	16456(%r13), %r8d
	.loc	0 895 101                       # x264_src/encoder/me.c:895:101
	jle	.LBB1_110
.Ltmp1684:
# %bb.108:                              # %land.lhs.true1018
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	.loc	0 895 108                       # x264_src/encoder/me.c:895:108
	cmpl	16464(%r13), %r8d
.Ltmp1685:
	.loc	0 895 14                        # x264_src/encoder/me.c:895:14
	jge	.LBB1_110
.Ltmp1686:
# %bb.109:                              # %if.then1024
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bw <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:odir <- -1
	#DEBUG_VALUE: omx <- undef
	#DEBUG_VALUE: omy <- $ebx
	.loc	0 900 39 is_stmt 1              # x264_src/encoder/me.c:900:39
	leaq	32(%r15), %rdx
	movq	%rdx, 104(%rsp)                 # 8-byte Spill
.Ltmp1687:
	#DEBUG_VALUE: refine_subpel:h <- $r13
	.loc	0 900 47 is_stmt 0              # x264_src/encoder/me.c:900:47
	movl	120(%r15), %ecx
	.loc	0 900 71                        # x264_src/encoder/me.c:900:71
	leal	-1(%rbx), %ebp
	movq	%rbx, 24(%rsp)                  # 8-byte Spill
.Ltmp1688:
	#DEBUG_VALUE: omy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	.loc	0 900 9                         # x264_src/encoder/me.c:900:9
	subq	$8, %rsp
.Ltmp1689:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	leaq	248(%rsp), %rdi
	.loc	0 900 9                         # x264_src/encoder/me.c:900:9
	movl	$64, %esi
	movq	%r8, 40(%rsp)                   # 8-byte Spill
	movq	40(%rsp), %r8                   # 8-byte Reload
                                        # kill: def $r8d killed $r8d killed $r8
	movl	%ebp, %r9d
	pushq	24(%r15)
	.cfi_adjust_cfa_offset 8
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	movq	%r10, %r14
	movq	%r11, 48(%rsp)                  # 8-byte Spill
.Ltmp1690:
	#DEBUG_VALUE: refine_subpel:bcost <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	callq	*32616(%r13)
.Ltmp1691:
	addq	$32, %rsp
.Ltmp1692:
	.cfi_adjust_cfa_offset -32
	.loc	0 901 27 is_stmt 1              # x264_src/encoder/me.c:901:27
	leaq	256(%rsp), %rdi
	.loc	0 901 47 is_stmt 0              # x264_src/encoder/me.c:901:47
	movl	120(%r15), %ecx
	.loc	0 901 71                        # x264_src/encoder/me.c:901:71
	leal	1(%rbx), %r9d
	movl	%r9d, 40(%rsp)                  # 4-byte Spill
	.loc	0 901 9                         # x264_src/encoder/me.c:901:9
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	movl	$64, %esi
	movq	112(%rsp), %rbx                 # 8-byte Reload
	movq	%rbx, %rdx
	movq	40(%rsp), %r8                   # 8-byte Reload
                                        # kill: def $r8d killed $r8d killed $r8
	pushq	24(%r15)
	.cfi_adjust_cfa_offset 8
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	pushq	%r14
	.cfi_adjust_cfa_offset 8
	callq	*32616(%r13)
.Ltmp1693:
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	.loc	0 902 27 is_stmt 1              # x264_src/encoder/me.c:902:27
	leaq	272(%rsp), %rdi
	.loc	0 902 47 is_stmt 0              # x264_src/encoder/me.c:902:47
	movl	120(%r15), %ecx
	movq	32(%rsp), %rax                  # 8-byte Reload
	.loc	0 902 66                        # x264_src/encoder/me.c:902:66
	leal	-1(%rax), %r8d
	movl	%r8d, 96(%rsp)                  # 4-byte Spill
.Ltmp1694:
	#DEBUG_VALUE: refine_subpel:bw <- undef
	.loc	0 902 9                         # x264_src/encoder/me.c:902:9
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	movl	$64, %esi
	movq	%rbx, %rdx
	movq	32(%rsp), %rbx                  # 8-byte Reload
	movl	%ebx, %r9d
	movq	64(%rsp), %rax                  # 8-byte Reload
	pushq	24(%rax)
	.cfi_adjust_cfa_offset 8
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	movq	%r14, %r15
	pushq	%r14
	.cfi_adjust_cfa_offset 8
	callq	*32616(%r13)
.Ltmp1695:
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	.loc	0 903 27 is_stmt 1              # x264_src/encoder/me.c:903:27
	leaq	288(%rsp), %r14
	movq	56(%rsp), %rax                  # 8-byte Reload
	.loc	0 903 47 is_stmt 0              # x264_src/encoder/me.c:903:47
	movl	120(%rax), %ecx
	movq	%r12, %r10
	movq	32(%rsp), %rax                  # 8-byte Reload
	.loc	0 903 66                        # x264_src/encoder/me.c:903:66
	leal	1(%rax), %r12d
	.loc	0 903 9                         # x264_src/encoder/me.c:903:9
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	movq	%r14, %rdi
	movl	$64, %esi
	movq	112(%rsp), %rdx                 # 8-byte Reload
	movl	%r12d, %r8d
	movl	%ebx, %r9d
	movq	64(%rsp), %rax                  # 8-byte Reload
	pushq	24(%rax)
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	pushq	%r15
	.cfi_adjust_cfa_offset 8
	callq	*32616(%r13)
.Ltmp1696:
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movq	56(%rsp), %rax                  # 8-byte Reload
	.loc	0 904 38 is_stmt 1              # x264_src/encoder/me.c:904:38
	movq	88(%rax), %rdi
	.loc	0 904 9 is_stmt 0               # x264_src/encoder/me.c:904:9
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	leaq	72(%rsp), %rax
	leaq	248(%rsp), %rsi
	leaq	264(%rsp), %rdx
	leaq	280(%rsp), %rcx
	movq	%r14, %r8
	movl	$64, %r9d
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	movq	104(%rsp), %rax                 # 8-byte Reload
	callq	*32040(%r13,%rax,8)
.Ltmp1697:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
.Ltmp1698:
	.loc	0 905 9 is_stmt 1               # x264_src/encoder/me.c:905:9
	movslq	32(%rsp), %rax                  # 4-byte Folded Reload
	movq	136(%rsp), %r9                  # 8-byte Reload
	movzwl	(%r9,%rax,2), %ecx
	movl	64(%rsp), %edx
	addl	%ecx, %edx
	movslq	%ebx, %rsi
	movq	144(%rsp), %r8                  # 8-byte Reload
	movzwl	-2(%r8,%rsi,2), %edi
	addl	%edx, %edi
	movq	16(%rsp), %rdx                  # 8-byte Reload
	cmpl	%edx, %edi
.Ltmp1699:
	.loc	0 905 9 is_stmt 0               # x264_src/encoder/me.c:905:9
	cmovgel	%edx, %edi
	cmovgel	%ebx, %ebp
.Ltmp1700:
	#DEBUG_VALUE: refine_subpel:bmy <- $ebp
	#DEBUG_VALUE: refine_subpel:bcost <- $edi
	.loc	0 906 9 is_stmt 1               # x264_src/encoder/me.c:906:9
	addl	68(%rsp), %ecx
	movzwl	2(%r8,%rsi,2), %edx
	addl	%ecx, %edx
	cmpl	%edi, %edx
.Ltmp1701:
	.loc	0 906 9 is_stmt 0               # x264_src/encoder/me.c:906:9
	cmovgel	%edi, %edx
	cmovll	40(%rsp), %ebp                  # 4-byte Folded Reload
.Ltmp1702:
	#DEBUG_VALUE: refine_subpel:bmy <- $ebp
	#DEBUG_VALUE: refine_subpel:bcost <- $edx
	.loc	0 907 9 is_stmt 1               # x264_src/encoder/me.c:907:9
	movzwl	-2(%r9,%rax,2), %ecx
	addl	72(%rsp), %ecx
	movzwl	(%r8,%rsi,2), %r11d
	movq	32(%rsp), %r8                   # 8-byte Reload
	addl	%r11d, %ecx
	cmpl	%edx, %ecx
.Ltmp1703:
	.loc	0 907 9 is_stmt 0               # x264_src/encoder/me.c:907:9
	movl	%edx, %esi
	cmovll	%ecx, %esi
.Ltmp1704:
	#DEBUG_VALUE: refine_subpel:bmy <- undef
	#DEBUG_VALUE: refine_subpel:bcost <- $esi
	.loc	0 908 9 is_stmt 1               # x264_src/encoder/me.c:908:9
	movzwl	2(%r9,%rax,2), %eax
	addl	76(%rsp), %r11d
	addl	%eax, %r11d
	cmpl	%esi, %r11d
.Ltmp1705:
	.loc	0 908 9 is_stmt 0               # x264_src/encoder/me.c:908:9
	cmovll	%ebx, %ebp
.Ltmp1706:
	.loc	0 907 9 is_stmt 1               # x264_src/encoder/me.c:907:9
	cmpl	%edx, %ecx
.Ltmp1707:
	.loc	0 907 9 is_stmt 0               # x264_src/encoder/me.c:907:9
	cmovll	96(%rsp), %r8d                  # 4-byte Folded Reload
.Ltmp1708:
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	56(%rsp), %r15                  # 8-byte Reload
	.loc	0 908 9 is_stmt 1               # x264_src/encoder/me.c:908:9
	cmovll	%ebx, %ebp
.Ltmp1709:
	#DEBUG_VALUE: refine_subpel:bmy <- $ebp
	.loc	0 908 9 is_stmt 0               # x264_src/encoder/me.c:908:9
	cmpl	%esi, %r11d
.Ltmp1710:
	.loc	0 908 9                         # x264_src/encoder/me.c:908:9
	cmovgel	%esi, %r11d
	cmovll	%r12d, %r8d
.Ltmp1711:
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movl	%ebp, %ebx
.Ltmp1712:
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
.LBB1_110:                              # %if.end1185
	#DEBUG_VALUE: refine_subpel:h <- $r13
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	#DEBUG_VALUE: refine_subpel:bmx <- $r8d
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	.loc	0 911 13 is_stmt 1              # x264_src/encoder/me.c:911:13
	movl	%r11d, 136(%r15)
	.loc	0 912 14                        # x264_src/encoder/me.c:912:14
	movw	%r8w, 140(%r15)
	.loc	0 913 14                        # x264_src/encoder/me.c:913:14
	movw	%bx, 142(%r15)
	.loc	0 914 18                        # x264_src/encoder/me.c:914:18
	movslq	%r8d, %rax
	movq	136(%rsp), %rcx                 # 8-byte Reload
	movzwl	(%rcx,%rax,2), %eax
	.loc	0 914 36 is_stmt 0              # x264_src/encoder/me.c:914:36
	movslq	%ebx, %rcx
	movq	144(%rsp), %rdx                 # 8-byte Reload
	movzwl	(%rdx,%rcx,2), %ecx
	.loc	0 914 34                        # x264_src/encoder/me.c:914:34
	addl	%eax, %ecx
	.loc	0 914 16                        # x264_src/encoder/me.c:914:16
	movl	%ecx, 132(%r15)
.Ltmp1713:
.LBB1_111:                              # %cleanup1200
	#DEBUG_VALUE: refine_subpel:h <- $r13
	#DEBUG_VALUE: refine_subpel:m <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:hpel_iters <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: refine_subpel:qpel_iters <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: refine_subpel:p_halfpel_thresh <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: refine_subpel:b_refine_qpel <- [DW_OP_plus_uconst 116] [$rsp+0]
	#DEBUG_VALUE: refine_subpel:bh <- [DW_OP_plus_uconst 200, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvx <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:p_cost_mvy <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:mvy_offset <- [DW_OP_plus_uconst 216, DW_OP_deref] $rsp
	#DEBUG_VALUE: refine_subpel:bmy <- $ebx
	#DEBUG_VALUE: refine_subpel:bcost <- $r11d
	.loc	0 915 1 epilogue_begin is_stmt 1 # x264_src/encoder/me.c:915:1
	addq	$1400, %rsp                     # imm = 0x578
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp1714:
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp1715:
	#DEBUG_VALUE: refine_subpel:h <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1716:
.Lfunc_end1:
	.size	refine_subpel, .Lfunc_end1-refine_subpel
	.cfi_endproc
                                        # -- End function
	.globl	x264_me_refine_qpel             # -- Begin function x264_me_refine_qpel
	.p2align	4, 0x90
	.type	x264_me_refine_qpel,@function
x264_me_refine_qpel:                    # @x264_me_refine_qpel
.Lfunc_begin2:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_me_refine_qpel:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_qpel:m <- $rsi
	.loc	0 760 40 prologue_end           # x264_src/encoder/me.c:760:40
	movslq	16408(%rdi), %rax
	.loc	0 760 16 is_stmt 0              # x264_src/encoder/me.c:760:16
	movzbl	subpel_iterations(,%rax,4), %edx
.Ltmp1717:
	#DEBUG_VALUE: x264_me_refine_qpel:hpel <- undef
	.loc	0 761 16 is_stmt 1              # x264_src/encoder/me.c:761:16
	movzbl	subpel_iterations+1(,%rax,4), %ecx
.Ltmp1718:
	#DEBUG_VALUE: x264_me_refine_qpel:qpel <- undef
	.loc	0 763 20                        # x264_src/encoder/me.c:763:20
	cmpl	$3, (%rsi)
.Ltmp1719:
	.loc	0 763 9 is_stmt 0               # x264_src/encoder/me.c:763:9
	jg	.LBB2_2
.Ltmp1720:
# %bb.1:                                # %if.then
	#DEBUG_VALUE: x264_me_refine_qpel:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_qpel:m <- $rsi
	.loc	0 764 23 is_stmt 1              # x264_src/encoder/me.c:764:23
	movl	16(%rsi), %eax
	.loc	0 764 17 is_stmt 0              # x264_src/encoder/me.c:764:17
	subl	%eax, 136(%rsi)
.Ltmp1721:
.LBB2_2:                                # %if.end
	#DEBUG_VALUE: x264_me_refine_qpel:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_qpel:m <- $rsi
	#DEBUG_VALUE: x264_me_refine_qpel:qpel <- $ecx
	#DEBUG_VALUE: x264_me_refine_qpel:hpel <- $edx
	.loc	0 766 5 is_stmt 1               # x264_src/encoder/me.c:766:5
	xorl	%r8d, %r8d
	movl	$1, %r9d
.Ltmp1722:
	jmp	refine_subpel                   # TAILCALL
.Ltmp1723:
.Lfunc_end2:
	.size	x264_me_refine_qpel, .Lfunc_end2-x264_me_refine_qpel
	.cfi_endproc
                                        # -- End function
	.globl	x264_me_refine_qpel_refdupe     # -- Begin function x264_me_refine_qpel_refdupe
	.p2align	4, 0x90
	.type	x264_me_refine_qpel_refdupe,@function
x264_me_refine_qpel_refdupe:            # @x264_me_refine_qpel_refdupe
.Lfunc_begin3:
	.loc	0 770 0                         # x264_src/encoder/me.c:770:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_me_refine_qpel_refdupe:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_qpel_refdupe:m <- $rsi
	#DEBUG_VALUE: x264_me_refine_qpel_refdupe:p_halfpel_thresh <- $rdx
	movq	%rdx, %r8
.Ltmp1724:
	.loc	0 771 29 prologue_end           # x264_src/encoder/me.c:771:29
	movslq	16408(%rdi), %rax
	leaq	-8(%rax), %rdx
.Ltmp1725:
	#DEBUG_VALUE: x264_me_refine_qpel_refdupe:p_halfpel_thresh <- $r8
	.loc	0 0 29 is_stmt 0                # x264_src/encoder/me.c:0:29
	movl	$2, %ecx
	.loc	0 771 29                        # x264_src/encoder/me.c:771:29
	cmpq	$3, %rdx
	jb	.LBB3_2
.Ltmp1726:
# %bb.1:                                # %cond.false
	#DEBUG_VALUE: x264_me_refine_qpel_refdupe:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_qpel_refdupe:m <- $rsi
	#DEBUG_VALUE: x264_me_refine_qpel_refdupe:p_halfpel_thresh <- $r8
	movzbl	subpel_iterations+3(,%rax,4), %ecx
.Ltmp1727:
.LBB3_2:                                # %cond.end
	#DEBUG_VALUE: x264_me_refine_qpel_refdupe:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_qpel_refdupe:m <- $rsi
	#DEBUG_VALUE: x264_me_refine_qpel_refdupe:p_halfpel_thresh <- $r8
	.loc	0 771 5                         # x264_src/encoder/me.c:771:5
	xorl	%edx, %edx
	xorl	%r9d, %r9d
.Ltmp1728:
	jmp	refine_subpel                   # TAILCALL
.Ltmp1729:
.Lfunc_end3:
	.size	x264_me_refine_qpel_refdupe, .Lfunc_end3-x264_me_refine_qpel_refdupe
	.cfi_endproc
                                        # -- End function
	.globl	x264_me_refine_bidir_satd       # -- Begin function x264_me_refine_bidir_satd
	.p2align	4, 0x90
	.type	x264_me_refine_bidir_satd,@function
x264_me_refine_bidir_satd:              # @x264_me_refine_bidir_satd
.Lfunc_begin4:
	.loc	0 1082 0 is_stmt 1              # x264_src/encoder/me.c:1082:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_me_refine_bidir_satd:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_bidir_satd:m0 <- $rsi
	#DEBUG_VALUE: x264_me_refine_bidir_satd:m1 <- $rdx
	#DEBUG_VALUE: x264_me_refine_bidir_satd:i_weight <- $ecx
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1730:
	.loc	0 1083 5 prologue_end           # x264_src/encoder/me.c:1083:5
	movl	$0, (%rsp)
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	callq	x264_me_refine_bidir
.Ltmp1731:
	#DEBUG_VALUE: x264_me_refine_bidir_satd:i_weight <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_refine_bidir_satd:m1 <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_refine_bidir_satd:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir_satd:h <- [DW_OP_LLVM_entry_value 1] $rdi
	.loc	0 1084 1 epilogue_begin         # x264_src/encoder/me.c:1084:1
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp1732:
.Lfunc_end4:
	.size	x264_me_refine_bidir_satd, .Lfunc_end4-x264_me_refine_bidir_satd
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_me_refine_bidir
	.type	x264_me_refine_bidir,@function
x264_me_refine_bidir:                   # @x264_me_refine_bidir
.Lfunc_begin5:
	.loc	0 939 0                         # x264_src/encoder/me.c:939:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_me_refine_bidir:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- $rdx
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- $ecx
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- $r8d
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- $r9d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$7960, %rsp                     # imm = 0x1F18
	.cfi_def_cfa_offset 8016
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp1733:
	#DEBUG_VALUE: x264_me_refine_bidir:rd <- [DW_OP_plus_uconst 8016] [$rsp+0]
	movl	%r9d, 124(%rsp)                 # 4-byte Spill
.Ltmp1734:
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
                                        # kill: def $r8d killed $r8d def $r8
                                        # kill: def $ecx killed $ecx def $rcx
	movq	%rcx, 152(%rsp)                 # 8-byte Spill
.Ltmp1735:
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	movq	%rdx, %r14
.Ltmp1736:
	.loc	0 940 57 prologue_end           # x264_src/encoder/me.c:940:57
	leal	(,%r8,4), %eax
	movl	%eax, 44(%rsp)                  # 4-byte Spill
	.loc	0 940 44 is_stmt 0              # x264_src/encoder/me.c:940:44
	cltq
	movslq	x264_scan8(,%rax,4), %rax
.Ltmp1737:
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] undef, undef
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rdi, $rax
	#DEBUG_VALUE: x264_me_refine_bidir:i_pixel <- undef
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- undef
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- undef
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- undef
	#DEBUG_VALUE: x264_me_refine_bidir:pixu <- undef
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- undef
	.loc	0 952 22 is_stmt 1              # x264_src/encoder/me.c:952:22
	movsbl	25120(%rdi,%rax), %edx
.Ltmp1738:
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- $r14
	#DEBUG_VALUE: x264_me_refine_bidir:ref0 <- $edx
	.loc	0 0 22 is_stmt 0                # x264_src/encoder/me.c:0:22
	movq	%rax, 216(%rsp)                 # 8-byte Spill
.Ltmp1739:
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rdi, $rsp
	.loc	0 953 22 is_stmt 1              # x264_src/encoder/me.c:953:22
	movsbl	25160(%rdi,%rax), %eax
.Ltmp1740:
	#DEBUG_VALUE: x264_me_refine_bidir:ref1 <- $eax
	.loc	0 954 35                        # x264_src/encoder/me.c:954:35
	movl	16436(%rdi), %ecx
	movl	$0, 52(%rsp)                    # 4-byte Folded Spill
	movl	$0, 48(%rsp)                    # 4-byte Folded Spill
	.loc	0 954 48 is_stmt 0              # x264_src/encoder/me.c:954:48
	testl	%edx, %ecx
	.loc	0 954 29                        # x264_src/encoder/me.c:954:29
	je	.LBB5_2
.Ltmp1741:
# %bb.1:                                # %cond.true
	#DEBUG_VALUE: x264_me_refine_bidir:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- $r14
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- $r8d
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:rd <- [DW_OP_plus_uconst 8016] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rdi, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:ref0 <- $edx
	#DEBUG_VALUE: x264_me_refine_bidir:ref1 <- $eax
	.loc	0 954 64                        # x264_src/encoder/me.c:954:64
	movl	16388(%rdi), %edx
.Ltmp1742:
	.loc	0 954 75                        # x264_src/encoder/me.c:954:75
	andl	$1, %edx
	.loc	0 954 78                        # x264_src/encoder/me.c:954:78
	leal	-2(,%rdx,4), %edx
	movl	%edx, 48(%rsp)                  # 4-byte Spill
.Ltmp1743:
.LBB5_2:                                # %cond.end
	#DEBUG_VALUE: x264_me_refine_bidir:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- $r14
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- $r8d
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:rd <- [DW_OP_plus_uconst 8016] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rdi, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:ref1 <- $eax
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	.loc	0 955 48 is_stmt 1              # x264_src/encoder/me.c:955:48
	testl	%eax, %ecx
	.loc	0 955 29 is_stmt 0              # x264_src/encoder/me.c:955:29
	je	.LBB5_4
.Ltmp1744:
# %bb.3:                                # %cond.true78
	#DEBUG_VALUE: x264_me_refine_bidir:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- $r14
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- $r8d
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:rd <- [DW_OP_plus_uconst 8016] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rdi, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:ref1 <- $eax
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	.loc	0 955 64                        # x264_src/encoder/me.c:955:64
	movl	16388(%rdi), %eax
.Ltmp1745:
	.loc	0 955 75                        # x264_src/encoder/me.c:955:75
	andl	$1, %eax
	.loc	0 955 78                        # x264_src/encoder/me.c:955:78
	leal	-2(,%rax,4), %eax
	movl	%eax, 52(%rsp)                  # 4-byte Spill
.Ltmp1746:
.LBB5_4:                                # %cond.end85
	#DEBUG_VALUE: x264_me_refine_bidir:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- $r14
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- $r8d
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:rd <- [DW_OP_plus_uconst 8016] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rdi, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- undef
	.loc	0 958 16 is_stmt 1              # x264_src/encoder/me.c:958:16
	movswl	142(%rsi), %r13d
.Ltmp1747:
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- undef
	.loc	0 960 16                        # x264_src/encoder/me.c:960:16
	movswl	142(%r14), %ebp
.Ltmp1748:
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- 268435456
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list0 <- 1
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list1 <- 1
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- 1152921504606846976
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	.loc	0 986 16                        # x264_src/encoder/me.c:986:16
	movl	16460(%rdi), %eax
	.loc	0 986 37 is_stmt 0              # x264_src/encoder/me.c:986:37
	addl	$8, %eax
	.loc	0 986 14                        # x264_src/encoder/me.c:986:14
	cmpl	%r13d, %eax
	setg	%cl
	cmpl	%ebp, %eax
	setg	%al
	.loc	0 986 41                        # x264_src/encoder/me.c:986:41
	orb	%cl, %al
	jne	.LBB5_121
.Ltmp1749:
# %bb.5:                                # %lor.lhs.false109
	#DEBUG_VALUE: x264_me_refine_bidir:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- $r14
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- $r8d
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:rd <- [DW_OP_plus_uconst 8016] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rdi, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- 268435456
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list0 <- 1
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list1 <- 1
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- 1152921504606846976
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	.loc	0 987 16 is_stmt 1              # x264_src/encoder/me.c:987:16
	movl	16468(%rdi), %eax
	.loc	0 987 37 is_stmt 0              # x264_src/encoder/me.c:987:37
	addl	$-8, %eax
	.loc	0 987 14                        # x264_src/encoder/me.c:987:14
	cmpl	%r13d, %eax
	setl	%cl
	cmpl	%ebp, %eax
	setl	%al
	.loc	0 987 41                        # x264_src/encoder/me.c:987:41
	orb	%cl, %al
	jne	.LBB5_121
.Ltmp1750:
# %bb.6:                                # %lor.lhs.false122
	#DEBUG_VALUE: x264_me_refine_bidir:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- $r14
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- $r8d
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:rd <- [DW_OP_plus_uconst 8016] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rdi, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- 268435456
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list0 <- 1
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list1 <- 1
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- 1152921504606846976
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	.loc	0 0 0                           # x264_src/encoder/me.c:0:0
	movswl	140(%rsi), %edx
.Ltmp1751:
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- $edx
	movswl	140(%r14), %r12d
.Ltmp1752:
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- $r12d
	.loc	0 988 16 is_stmt 1              # x264_src/encoder/me.c:988:16
	movl	16456(%rdi), %eax
	.loc	0 988 37 is_stmt 0              # x264_src/encoder/me.c:988:37
	addl	$8, %eax
	.loc	0 988 14                        # x264_src/encoder/me.c:988:14
	cmpl	%edx, %eax
	setg	%cl
	cmpl	%r12d, %eax
	setg	%al
	.loc	0 988 41                        # x264_src/encoder/me.c:988:41
	orb	%cl, %al
	jne	.LBB5_121
.Ltmp1753:
# %bb.7:                                # %lor.lhs.false136
	#DEBUG_VALUE: x264_me_refine_bidir:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- $r14
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- $r8d
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:rd <- [DW_OP_plus_uconst 8016] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rdi, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- $edx
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- $r12d
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- 268435456
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list0 <- 1
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list1 <- 1
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- 1152921504606846976
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	.loc	0 989 16 is_stmt 1              # x264_src/encoder/me.c:989:16
	movl	16464(%rdi), %eax
	.loc	0 989 37 is_stmt 0              # x264_src/encoder/me.c:989:37
	addl	$-8, %eax
	.loc	0 989 14                        # x264_src/encoder/me.c:989:14
	cmpl	%edx, %eax
	setl	%cl
	cmpl	%r12d, %eax
	setl	%al
	.loc	0 989 41                        # x264_src/encoder/me.c:989:41
	orb	%cl, %al
	jne	.LBB5_121
.Ltmp1754:
# %bb.8:                                # %if.end
	#DEBUG_VALUE: x264_me_refine_bidir:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- $r14
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- $r8d
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:rd <- [DW_OP_plus_uconst 8016] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rdi, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- $edx
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- $r12d
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- 268435456
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list0 <- 1
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list1 <- 1
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- 1152921504606846976
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	.loc	0 0 41                          # x264_src/encoder/me.c:0:41
	movl	%edx, 12(%rsp)                  # 4-byte Spill
.Ltmp1755:
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	movl	%r12d, 8(%rsp)                  # 4-byte Spill
.Ltmp1756:
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	movl	%r8d, %eax
	sarl	%eax
	movl	%eax, %ecx
	shll	$8, %ecx
	movl	%r8d, %edx
	andl	$1, %edx
	shll	$7, %eax
	leal	(%rcx,%rdx,8), %ecx
	movq	%rdx, 176(%rsp)                 # 8-byte Spill
	leal	(%rax,%rdx,4), %eax
	movslq	(%rsi), %r12
	movslq	%ecx, %rcx
	movslq	%eax, %rdx
	movl	x264_pixel_size(,%r12,8), %r15d
.Ltmp1757:
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- $r15d
	movl	x264_pixel_size+4(,%r12,8), %eax
.Ltmp1758:
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- $eax
	movq	%rax, 72(%rsp)                  # 8-byte Spill
	addq	21392(%rdi), %rcx
.Ltmp1759:
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- $rcx
	movq	%rcx, 272(%rsp)                 # 8-byte Spill
	movq	21400(%rdi), %rax
.Ltmp1760:
	addq	%rdx, %rax
	movq	%rax, 200(%rsp)                 # 8-byte Spill
	addq	21408(%rdi), %rdx
.Ltmp1761:
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- $rdx
	movq	%rdx, 208(%rsp)                 # 8-byte Spill
.Ltmp1762:
	.loc	0 992 9 is_stmt 1               # x264_src/encoder/me.c:992:9
	cmpl	$0, 8016(%rsp)
	movq	%rdi, 16(%rsp)                  # 8-byte Spill
.Ltmp1763:
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/me.c:0:9
	movq	%r8, 184(%rsp)                  # 8-byte Spill
.Ltmp1764:
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	movq	%r15, 64(%rsp)                  # 8-byte Spill
	movq	%r12, 144(%rsp)                 # 8-byte Spill
	.loc	0 992 12                        # x264_src/encoder/me.c:992:12
	je	.LBB5_11
.Ltmp1765:
# %bb.9:                                # %land.lhs.true
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- $r14
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:rd <- [DW_OP_plus_uconst 8016] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- 268435456
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list0 <- 1
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list1 <- 1
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- 1152921504606846976
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	.loc	0 992 27                        # x264_src/encoder/me.c:992:27
	testl	%r12d, %r12d
	sete	%al
	testl	%r8d, %r8d
	sete	%cl
	.loc	0 992 42                        # x264_src/encoder/me.c:992:42
	orb	%al, %cl
	jne	.LBB5_11
.Ltmp1766:
# %bb.10:                               # %if.then157
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- $r14
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:rd <- [DW_OP_plus_uconst 8016] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- 268435456
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list0 <- 1
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list1 <- 1
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- 1152921504606846976
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	.loc	0 994 44 is_stmt 1              # x264_src/encoder/me.c:994:44
	movl	%r15d, %ebx
	sarl	$2, %ebx
	.loc	0 994 53 is_stmt 0              # x264_src/encoder/me.c:994:53
	leaq	128(%rsi), %r8
	movq	16(%rsp), %rdi                  # 8-byte Reload
	movq	%rsi, %r12
.Ltmp1767:
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- $r12
	.loc	0 994 9                         # x264_src/encoder/me.c:994:9
	xorl	%esi, %esi
	movl	44(%rsp), %r15d                 # 4-byte Reload
	movl	%r15d, %edx
	movl	%ebx, %ecx
	callq	x264_mb_predict_mv@PLT
.Ltmp1768:
	.loc	0 995 53 is_stmt 1              # x264_src/encoder/me.c:995:53
	leaq	128(%r14), %r8
	movq	16(%rsp), %rdi                  # 8-byte Reload
	.loc	0 995 9 is_stmt 0               # x264_src/encoder/me.c:995:9
	movl	$1, %esi
	movl	%r15d, %edx
	movq	64(%rsp), %r15                  # 8-byte Reload
	movl	%ebx, %ecx
	callq	x264_mb_predict_mv@PLT
.Ltmp1769:
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	16(%rsp), %rdi                  # 8-byte Reload
	movq	%r12, %rsi
	movq	144(%rsp), %r12                 # 8-byte Reload
.Ltmp1770:
.LBB5_11:                               # %if.end164
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- $r14
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:rd <- [DW_OP_plus_uconst 8016] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- 268435456
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list0 <- 1
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list1 <- 1
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- 1152921504606846976
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	leaq	25200(%rdi), %rax
.Ltmp1771:
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rax, $rsp
	movq	%rax, 56(%rsp)                  # 8-byte Spill
	.loc	0 998 38 is_stmt 1              # x264_src/encoder/me.c:998:38
	movq	8(%rsi), %rcx
	.loc	0 998 50 is_stmt 0              # x264_src/encoder/me.c:998:50
	movswq	128(%rsi), %rax
.Ltmp1772:
	.loc	0 998 48                        # x264_src/encoder/me.c:998:48
	addq	%rax, %rax
	movq	%rcx, %rdx
	subq	%rax, %rdx
.Ltmp1773:
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- $rdx
	.loc	0 0 48                          # x264_src/encoder/me.c:0:48
	movq	%rdx, 256(%rsp)                 # 8-byte Spill
.Ltmp1774:
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	.loc	0 999 50 is_stmt 1              # x264_src/encoder/me.c:999:50
	movswq	130(%rsi), %rax
	.loc	0 999 48 is_stmt 0              # x264_src/encoder/me.c:999:48
	addq	%rax, %rax
	subq	%rax, %rcx
.Ltmp1775:
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- $rcx
	.loc	0 0 48                          # x264_src/encoder/me.c:0:48
	movq	%rcx, 264(%rsp)                 # 8-byte Spill
.Ltmp1776:
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	.loc	0 1000 38 is_stmt 1             # x264_src/encoder/me.c:1000:38
	movq	8(%r14), %rcx
	.loc	0 1000 50 is_stmt 0             # x264_src/encoder/me.c:1000:50
	movswq	128(%r14), %rax
	.loc	0 1000 48                       # x264_src/encoder/me.c:1000:48
	addq	%rax, %rax
	movq	%rcx, %rdx
	subq	%rax, %rdx
.Ltmp1777:
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- $rdx
	.loc	0 0 48                          # x264_src/encoder/me.c:0:48
	movq	%rdx, 240(%rsp)                 # 8-byte Spill
.Ltmp1778:
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	.loc	0 1001 50 is_stmt 1             # x264_src/encoder/me.c:1001:50
	movswq	130(%r14), %rax
	.loc	0 1001 48 is_stmt 0             # x264_src/encoder/me.c:1001:48
	addq	%rax, %rax
	subq	%rax, %rcx
.Ltmp1779:
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- $rcx
	.loc	0 0 48                          # x264_src/encoder/me.c:0:48
	movq	%rcx, 248(%rsp)                 # 8-byte Spill
.Ltmp1780:
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	movq	%rdi, %rax
	leaq	528(%rsp), %rdi
	movq	%rsi, %rbx
	.loc	0 1003 5 is_stmt 1              # x264_src/encoder/me.c:1003:5
	movl	$512, %esi                      # imm = 0x200
	callq	*32824(%rax)
.Ltmp1781:
	#DEBUG_VALUE: pass <- 0
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- 268435456
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list0 <- 1
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list1 <- 1
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- 1152921504606846976
	.loc	0 0 5 is_stmt 0                 # x264_src/encoder/me.c:0:5
	movq	%rbx, 104(%rsp)                 # 8-byte Spill
	leaq	32(%rbx), %rax
	movq	%rax, 232(%rsp)                 # 8-byte Spill
                                        # kill: def $r15d killed $r15d killed $r15 def $r15
	sarl	%r15d
	movq	%r15, 96(%rsp)                  # 8-byte Spill
	movq	72(%rsp), %rax                  # 8-byte Reload
                                        # kill: def $eax killed $eax killed $rax def $rax
	sarl	%eax
	movq	%rax, 88(%rsp)                  # 8-byte Spill
	movq	%r14, 128(%rsp)                 # 8-byte Spill
.Ltmp1782:
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	leaq	32(%r14), %rax
	movq	%rax, 224(%rsp)                 # 8-byte Spill
	leal	3(%r12), %eax
	cltq
	movq	%rax, 192(%rsp)                 # 8-byte Spill
	movl	$0, 36(%rsp)                    # 4-byte Folded Spill
	movabsq	$1152921504606846976, %rax      # imm = 0x1000000000000000
	movq	%rax, 136(%rsp)                 # 8-byte Spill
	movl	$1, %eax
	movl	$268435456, %ecx                # imm = 0x10000000
	movq	%rcx, 80(%rsp)                  # 8-byte Spill
	movl	$1, %edx
	movl	%ebp, %r11d
	movl	8(%rsp), %r10d                  # 4-byte Reload
.Ltmp1783:
	.p2align	4, 0x90
.LBB5_12:                               # %for.body
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB5_14 Depth 2
                                        #     Child Loop BB5_20 Depth 2
                                        #     Child Loop BB5_24 Depth 2
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- $r10d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list0 <- $eax
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list1 <- $edx
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- 0
	movl	%r13d, 40(%rsp)                 # 4-byte Spill
.Ltmp1784:
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	.loc	0 1012 13 is_stmt 1             # x264_src/encoder/me.c:1012:13
	testl	%eax, %eax
	setne	%al
.Ltmp1785:
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/me.c:0:13
	movslq	x264_iter_kludge(%rip), %r14
	#DEBUG_VALUE: j <- $r14d
	cmpq	$9, %r14
	setl	%cl
.Ltmp1786:
	.loc	0 1012 13                       # x264_src/encoder/me.c:1012:13
	andb	%al, %cl
	cmpb	$1, %cl
	movl	%r11d, 28(%rsp)                 # 4-byte Spill
.Ltmp1787:
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%r10d, 8(%rsp)                  # 4-byte Spill
.Ltmp1788:
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	.loc	0 1012 13                       # x264_src/encoder/me.c:1012:13
	jne	.LBB5_18
.Ltmp1789:
# %bb.13:                               # %for.body198.preheader
                                        #   in Loop: Header=BB5_12 Depth=1
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list1 <- $edx
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- 0
	#DEBUG_VALUE: j <- $r14d
	.loc	0 0 13                          # x264_src/encoder/me.c:0:13
	movl	%edx, 112(%rsp)                 # 4-byte Spill
.Ltmp1790:
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list1 <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	.loc	0 1013 13 is_stmt 1             # x264_src/encoder/me.c:1013:13
	incq	%r14
.Ltmp1791:
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/me.c:0:13
	jmp	.LBB5_14
.Ltmp1792:
	.p2align	4, 0x90
.LBB5_16:                               # %if.end263
                                        #   in Loop: Header=BB5_14 Depth=2
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list1 <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- 0
	#DEBUG_VALUE: j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r14
	#DEBUG_VALUE: j <- $r14
	.loc	0 1013 13                       # x264_src/encoder/me.c:1013:13
	movq	%r14, %rax
	incq	%rax
.Ltmp1793:
	.loc	0 1013 46                       # x264_src/encoder/me.c:1013:46
	cmpl	$9, %r14d
	movq	%rax, %r14
.Ltmp1794:
	.loc	0 1013 13                       # x264_src/encoder/me.c:1013:13
	je	.LBB5_17
.Ltmp1795:
.LBB5_14:                               # %for.body198
                                        #   Parent Loop BB5_12 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list1 <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- 0
	#DEBUG_VALUE: j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r14
	#DEBUG_VALUE: m <- undef
	.loc	0 1014 17 is_stmt 1             # x264_src/encoder/me.c:1014:17
	movsbl	square1-2(%r14,%r14), %r12d
	leal	(%r12,%r12,2), %eax
	movsbl	square1-1(%r14,%r14), %ebx
	addl	%ebx, %eax
	movslq	%eax, %r13
	leaq	4(%r13), %r15
.Ltmp1796:
	#DEBUG_VALUE: i <- undef
	addl	12(%rsp), %r12d                 # 4-byte Folded Reload
.Ltmp1797:
	#DEBUG_VALUE: mvx <- $r12d
	addl	40(%rsp), %ebx                  # 4-byte Folded Reload
.Ltmp1798:
	#DEBUG_VALUE: mvy <- $ebx
	leaq	(%rsp,%r13,4), %rsi
	addq	$320, %rsi                      # imm = 0x140
	movq	64(%rsp), %r10                  # 8-byte Reload
	movl	%r10d, 320(%rsp,%r13,4)
	movq	%r15, %rax
	shlq	$8, %rax
	leaq	(%rsp,%rax), %rdi
	addq	$3344, %rdi                     # imm = 0xD10
	movq	104(%rsp), %rbp                 # 8-byte Reload
	movl	120(%rbp), %ecx
	subq	$8, %rsp
.Ltmp1799:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	movq	240(%rsp), %rdx                 # 8-byte Reload
	.loc	0 1014 17                       # x264_src/encoder/me.c:1014:17
	movl	%r12d, %r8d
	movl	%ebx, %r9d
	pushq	weight_none@GOTPCREL(%rip)
	.cfi_adjust_cfa_offset 8
	pushq	88(%rsp)                        # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	movq	48(%rsp), %rax                  # 8-byte Reload
	callq	*32624(%rax)
.Ltmp1800:
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movq	%rax, 416(%rsp,%r13,8)
.Ltmp1801:
	.loc	0 992 9 is_stmt 1               # x264_src/encoder/me.c:992:9
	cmpl	$0, 8016(%rsp)
.Ltmp1802:
	.loc	0 1014 17                       # x264_src/encoder/me.c:1014:17
	je	.LBB5_16
.Ltmp1803:
# %bb.15:                               # %if.then237
                                        #   in Loop: Header=BB5_14 Depth=2
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list1 <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- 0
	#DEBUG_VALUE: j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r14
	#DEBUG_VALUE: mvx <- $r12d
	#DEBUG_VALUE: mvy <- $ebx
	.loc	0 1014 17 is_stmt 0             # x264_src/encoder/me.c:1014:17
	shlq	$6, %r15
	leaq	(%rsp,%r15), %rdi
	addq	$2192, %rdi                     # imm = 0x890
	movq	64(%rbp), %rdx
	movl	124(%rbp), %ecx
	addl	48(%rsp), %ebx                  # 4-byte Folded Reload
.Ltmp1804:
	movl	$8, %esi
	movl	%r12d, %r8d
	movl	%ebx, %r9d
	pushq	88(%rsp)                        # 8-byte Folded Reload
.Ltmp1805:
	.cfi_adjust_cfa_offset 8
	pushq	104(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	movq	32(%rsp), %r13                  # 8-byte Reload
	callq	*32632(%r13)
.Ltmp1806:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	leaq	(%rsp,%r15), %rdi
	addq	$1040, %rdi                     # imm = 0x410
	movq	72(%rbp), %rdx
	movl	124(%rbp), %ecx
	movl	$8, %esi
	movl	%r12d, %r8d
	movl	%ebx, %r9d
	pushq	88(%rsp)                        # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	pushq	104(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	callq	*32632(%r13)
.Ltmp1807:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	jmp	.LBB5_16
.Ltmp1808:
	.p2align	4, 0x90
.LBB5_17:                               # %if.end264.loopexit
                                        #   in Loop: Header=BB5_12 Depth=1
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list1 <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- 0
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movl	x264_iter_kludge(%rip), %r14d
	movl	28(%rsp), %r11d                 # 4-byte Reload
	movl	8(%rsp), %r10d                  # 4-byte Reload
	movl	112(%rsp), %edx                 # 4-byte Reload
.Ltmp1809:
.LBB5_18:                               # %if.end264
                                        #   in Loop: Header=BB5_12 Depth=1
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list1 <- $edx
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- 0
	.loc	0 1016 13 is_stmt 1             # x264_src/encoder/me.c:1016:13
	testl	%edx, %edx
	setne	%al
	#DEBUG_VALUE: j <- $r14d
	cmpl	$9, %r14d
	setl	%cl
.Ltmp1810:
	.loc	0 1016 13 is_stmt 0             # x264_src/encoder/me.c:1016:13
	andb	%al, %cl
	cmpb	$1, %cl
	movq	128(%rsp), %rbp                 # 8-byte Reload
	jne	.LBB5_23
.Ltmp1811:
# %bb.19:                               # %for.body272.preheader
                                        #   in Loop: Header=BB5_12 Depth=1
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list1 <- $edx
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- 0
	#DEBUG_VALUE: j <- $r14d
	.loc	0 1017 13 is_stmt 1             # x264_src/encoder/me.c:1017:13
	movslq	%r14d, %r14
.Ltmp1812:
	incq	%r14
	jmp	.LBB5_20
.Ltmp1813:
	.p2align	4, 0x90
.LBB5_22:                               # %if.end346
                                        #   in Loop: Header=BB5_20 Depth=2
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- 0
	#DEBUG_VALUE: j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r14
	#DEBUG_VALUE: j <- $r14
	movq	%r14, %rax
	incq	%rax
.Ltmp1814:
	.loc	0 1017 46 is_stmt 0             # x264_src/encoder/me.c:1017:46
	cmpl	$9, %r14d
	movq	%rax, %r14
.Ltmp1815:
	.loc	0 0 46                          # x264_src/encoder/me.c:0:46
	movl	28(%rsp), %r11d                 # 4-byte Reload
	movl	8(%rsp), %r10d                  # 4-byte Reload
.Ltmp1816:
	.loc	0 1017 13                       # x264_src/encoder/me.c:1017:13
	je	.LBB5_23
.Ltmp1817:
.LBB5_20:                               # %for.body272
                                        #   Parent Loop BB5_12 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- 0
	#DEBUG_VALUE: j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r14
	#DEBUG_VALUE: m <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	.loc	0 1018 17 is_stmt 1             # x264_src/encoder/me.c:1018:17
	movsbl	square1-2(%r14,%r14), %r12d
	leal	(%r12,%r12,2), %eax
	movsbl	square1-1(%r14,%r14), %ebx
	addl	%ebx, %eax
	movslq	%eax, %r15
	leaq	4(%r15), %r13
.Ltmp1818:
	#DEBUG_VALUE: i <- undef
	addl	%r10d, %r12d
.Ltmp1819:
	#DEBUG_VALUE: mvx <- $r12d
	addl	%r11d, %ebx
.Ltmp1820:
	#DEBUG_VALUE: mvy <- $ebx
	leaq	340(%rsp), %rax
	leaq	(%rax,%r15,4), %rsi
	addq	$16, %rsi
	movq	64(%rsp), %rax                  # 8-byte Reload
	movl	%eax, 356(%rsp,%r15,4)
	movq	%r13, %rdi
	shlq	$8, %rdi
	leaq	5648(%rsp), %rcx
	addq	%rcx, %rdi
	movl	120(%rbp), %ecx
	subq	$8, %rsp
.Ltmp1821:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	movq	232(%rsp), %rdx                 # 8-byte Reload
	.loc	0 1018 17                       # x264_src/encoder/me.c:1018:17
	movl	%r12d, %r8d
	movl	%ebx, %r9d
	pushq	weight_none@GOTPCREL(%rip)
	.cfi_adjust_cfa_offset 8
	pushq	88(%rsp)                        # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	movq	48(%rsp), %rax                  # 8-byte Reload
	callq	*32624(%rax)
.Ltmp1822:
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movq	%rax, 488(%rsp,%r15,8)
.Ltmp1823:
	.loc	0 992 9 is_stmt 1               # x264_src/encoder/me.c:992:9
	cmpl	$0, 8016(%rsp)
.Ltmp1824:
	.loc	0 1018 17                       # x264_src/encoder/me.c:1018:17
	je	.LBB5_22
.Ltmp1825:
# %bb.21:                               # %if.then319
                                        #   in Loop: Header=BB5_20 Depth=2
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- 0
	#DEBUG_VALUE: j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r14
	#DEBUG_VALUE: m <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvx <- $r12d
	#DEBUG_VALUE: mvy <- $ebx
	.loc	0 1018 17 is_stmt 0             # x264_src/encoder/me.c:1018:17
	shlq	$6, %r13
	leaq	2768(%rsp), %rax
	leaq	(%rax,%r13), %rdi
	movq	64(%rbp), %rdx
	movl	124(%rbp), %ecx
	addl	52(%rsp), %ebx                  # 4-byte Folded Reload
.Ltmp1826:
	movl	$8, %esi
	movl	%r12d, %r8d
	movl	%ebx, %r9d
	pushq	88(%rsp)                        # 8-byte Folded Reload
.Ltmp1827:
	.cfi_adjust_cfa_offset 8
	pushq	104(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	movq	32(%rsp), %r15                  # 8-byte Reload
	callq	*32632(%r15)
.Ltmp1828:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	leaq	1616(%rsp), %rax
	addq	%rax, %r13
	movq	72(%rbp), %rdx
	movl	124(%rbp), %ecx
	movq	%r13, %rdi
	movl	$8, %esi
	movl	%r12d, %r8d
	movl	%ebx, %r9d
	pushq	88(%rsp)                        # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	pushq	104(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	callq	*32632(%r15)
.Ltmp1829:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	jmp	.LBB5_22
.Ltmp1830:
	.p2align	4, 0x90
.LBB5_23:                               # %if.end350
                                        #   in Loop: Header=BB5_12 Depth=1
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- 0
	.loc	0 1020 23 is_stmt 1             # x264_src/encoder/me.c:1020:23
	xorl	%r12d, %r12d
	cmpl	$0, 36(%rsp)                    # 4-byte Folded Reload
	setne	%r12b
.Ltmp1831:
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r12b
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- 0
	.loc	0 0 23 is_stmt 0                # x264_src/encoder/me.c:0:23
	movl	$0, 32(%rsp)                    # 4-byte Folded Spill
	movl	40(%rsp), %r13d                 # 4-byte Reload
	movl	12(%rsp), %edx                  # 4-byte Reload
	jmp	.LBB5_24
.Ltmp1832:
	.p2align	4, 0x90
.LBB5_45:                               # %if.else
                                        #   in Loop: Header=BB5_24 Depth=2
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- $r12
	#DEBUG_VALUE: m0x <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: m0y <- $r14d
	#DEBUG_VALUE: m1x <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: m1y <- $r13d
	#DEBUG_VALUE: cost <- $eax
	movq	80(%rsp), %rcx                  # 8-byte Reload
.Ltmp1833:
	.loc	0 1048 21 is_stmt 1             # x264_src/encoder/me.c:1048:21
	cmpl	%ecx, %eax
	movl	32(%rsp), %edx                  # 4-byte Reload
.Ltmp1834:
	.loc	0 1048 21 is_stmt 0             # x264_src/encoder/me.c:1048:21
	cmovll	%r12d, %edx
	movl	%edx, 32(%rsp)                  # 4-byte Spill
.Ltmp1835:
	#DEBUG_VALUE: bestj <- undef
	cmovll	%eax, %ecx
	movq	%rcx, 80(%rsp)                  # 8-byte Spill
.Ltmp1836:
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- undef
.LBB5_46:                               # %if.end519
                                        #   in Loop: Header=BB5_24 Depth=2
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- $r12
	#DEBUG_VALUE: m0x <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: m1x <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	.loc	0 0 21                          # x264_src/encoder/me.c:0:21
	movl	28(%rsp), %r11d                 # 4-byte Reload
.Ltmp1837:
.LBB5_47:                               # %if.end519
                                        #   in Loop: Header=BB5_24 Depth=2
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- $r12
	movl	8(%rsp), %r10d                  # 4-byte Reload
.Ltmp1838:
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 1020 39 is_stmt 1             # x264_src/encoder/me.c:1020:39
	incq	%r12
.Ltmp1839:
	#DEBUG_VALUE: j <- $r12
	.loc	0 1020 32 is_stmt 0             # x264_src/encoder/me.c:1020:32
	cmpq	$33, %r12
	movl	40(%rsp), %r13d                 # 4-byte Reload
	movl	12(%rsp), %edx                  # 4-byte Reload
.Ltmp1840:
	.loc	0 1020 9                        # x264_src/encoder/me.c:1020:9
	je	.LBB5_26
.Ltmp1841:
.LBB5_24:                               # %for.body358
                                        #   Parent Loop BB5_12 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- $r12
	#DEBUG_VALUE: bestj <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 1022 23 is_stmt 1             # x264_src/encoder/me.c:1022:23
	movsbq	x264_me_refine_bidir.dia4d(,%r12,4), %rax
	.loc	0 1022 35 is_stmt 0             # x264_src/encoder/me.c:1022:35
	movslq	%edx, %rbx
	addq	%rax, %rbx
	.loc	0 1023 23 is_stmt 1             # x264_src/encoder/me.c:1023:23
	movsbq	x264_me_refine_bidir.dia4d+1(,%r12,4), %rbp
	.loc	0 1023 35 is_stmt 0             # x264_src/encoder/me.c:1023:35
	movslq	%r13d, %r14
	addq	%rbp, %r14
	.loc	0 1024 23 is_stmt 1             # x264_src/encoder/me.c:1024:23
	movsbq	x264_me_refine_bidir.dia4d+2(,%r12,4), %rdx
	.loc	0 1024 35 is_stmt 0             # x264_src/encoder/me.c:1024:35
	movslq	%r10d, %r15
	addq	%rdx, %r15
	.loc	0 1025 23 is_stmt 1             # x264_src/encoder/me.c:1025:23
	movsbq	x264_me_refine_bidir.dia4d+3(,%r12,4), %r10
	.loc	0 1025 35 is_stmt 0             # x264_src/encoder/me.c:1025:35
	movslq	%r11d, %r13
	addq	%r10, %r13
.Ltmp1842:
	.loc	0 1020 23 is_stmt 1             # x264_src/encoder/me.c:1020:23
	cmpl	$0, 36(%rsp)                    # 4-byte Folded Reload
.Ltmp1843:
	#DEBUG_VALUE: m0x <- $ebx
	#DEBUG_VALUE: m0y <- $r14d
	#DEBUG_VALUE: m1x <- $r15d
	#DEBUG_VALUE: m1y <- $r13d
	.loc	0 0 23 is_stmt 0                # x264_src/encoder/me.c:0:23
	movq	%r10, 112(%rsp)                 # 8-byte Spill
.Ltmp1844:
	.loc	0 1026 23 is_stmt 1             # x264_src/encoder/me.c:1026:23
	je	.LBB5_25
.Ltmp1845:
# %bb.40:                               # %lor.lhs.false380
                                        #   in Loop: Header=BB5_24 Depth=2
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- $r12
	#DEBUG_VALUE: m0x <- $ebx
	#DEBUG_VALUE: m0y <- $r14d
	#DEBUG_VALUE: m1x <- $r15d
	#DEBUG_VALUE: m1y <- $r13d
	.loc	0 1026 42 is_stmt 0             # x264_src/encoder/me.c:1026:42
	movl	%ebx, %esi
	andl	$7, %esi
	.loc	0 1026 51                       # x264_src/encoder/me.c:1026:51
	movl	%r14d, %edi
	andl	$7, %edi
	.loc	0 1026 60                       # x264_src/encoder/me.c:1026:60
	movl	%r15d, %r8d
	andl	$7, %r8d
	.loc	0 1026 29                       # x264_src/encoder/me.c:1026:29
	movl	%esi, %ecx
	shll	$6, %ecx
	addq	%rsp, %rcx
	addq	$528, %rcx                      # imm = 0x210
	leaq	(%rcx,%rdi,8), %r10
	.loc	0 1026 68                       # x264_src/encoder/me.c:1026:68
	movl	%r13d, %ecx
	andb	$7, %cl
	movl	$1, %r9d
	shll	%cl, %r9d
	.loc	0 1026 29                       # x264_src/encoder/me.c:1026:29
	movzbl	(%r8,%r10), %ecx
	.loc	0 1026 64                       # x264_src/encoder/me.c:1026:64
	movl	%r13d, %r10d
	andl	$7, %r10d
	btl	%r10d, %ecx
.Ltmp1846:
	.loc	0 1026 17                       # x264_src/encoder/me.c:1026:17
	jb	.LBB5_47
.Ltmp1847:
# %bb.41:                               #   in Loop: Header=BB5_24 Depth=2
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- $r12
	#DEBUG_VALUE: m0x <- $ebx
	#DEBUG_VALUE: m0y <- $r14d
	#DEBUG_VALUE: m1x <- $r15d
	#DEBUG_VALUE: m1y <- $r13d
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	%rbx, 168(%rsp)                 # 8-byte Spill
.Ltmp1848:
	#DEBUG_VALUE: m0x <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	movq	%r15, 160(%rsp)                 # 8-byte Spill
.Ltmp1849:
	#DEBUG_VALUE: m1x <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	movq	112(%rsp), %r10                 # 8-byte Reload
	jmp	.LBB5_42
.Ltmp1850:
	.p2align	4, 0x90
.LBB5_25:                               # %for.body358.if.then395_crit_edge
                                        #   in Loop: Header=BB5_24 Depth=2
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- $r12
	#DEBUG_VALUE: m0x <- $ebx
	#DEBUG_VALUE: m0y <- $r14d
	#DEBUG_VALUE: m1x <- $r15d
	#DEBUG_VALUE: m1y <- $r13d
	.loc	0 1030 57 is_stmt 1             # x264_src/encoder/me.c:1030:57
	movl	%r13d, %ecx
	andb	$7, %cl
	movl	$1, %r9d
	shll	%cl, %r9d
	.loc	0 1030 30 is_stmt 0             # x264_src/encoder/me.c:1030:30
	movl	%ebx, %esi
	andl	$7, %esi
	.loc	0 1030 39                       # x264_src/encoder/me.c:1030:39
	movl	%r14d, %edi
	andl	$7, %edi
	.loc	0 1030 48                       # x264_src/encoder/me.c:1030:48
	movl	%r15d, %r8d
	andl	$7, %r8d
	movq	%rbx, 168(%rsp)                 # 8-byte Spill
.Ltmp1851:
	#DEBUG_VALUE: m0x <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	.loc	0 0 48                          # x264_src/encoder/me.c:0:48
	movq	%r15, 160(%rsp)                 # 8-byte Spill
.Ltmp1852:
	#DEBUG_VALUE: m1x <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
.LBB5_42:                               # %if.then395
                                        #   in Loop: Header=BB5_24 Depth=2
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- $r12
	#DEBUG_VALUE: m0x <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: m0y <- $r14d
	#DEBUG_VALUE: m1x <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: m1y <- $r13d
	.loc	0 1028 31 is_stmt 1             # x264_src/encoder/me.c:1028:31
	leaq	(%rax,%rax,2), %rcx
	movq	%rbp, 296(%rsp)                 # 8-byte Spill
	movq	%rcx, 288(%rsp)                 # 8-byte Spill
	.loc	0 1028 28 is_stmt 0             # x264_src/encoder/me.c:1028:28
	leaq	(%rcx,%rbp), %rax
.Ltmp1853:
	#DEBUG_VALUE: i0 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_convert 8 5, DW_OP_LLVM_convert 32 5, DW_OP_constu 3, DW_OP_mul, DW_OP_plus_uconst 4, DW_OP_LLVM_arg 0, DW_OP_LLVM_convert 8 5, DW_OP_LLVM_convert 32 5, DW_OP_plus, DW_OP_stack_value] undef
	.loc	0 1029 31 is_stmt 1             # x264_src/encoder/me.c:1029:31
	leaq	(%rdx,%rdx,2), %rdx
	movq	%rdx, 280(%rsp)                 # 8-byte Spill
	.loc	0 1029 28 is_stmt 0             # x264_src/encoder/me.c:1029:28
	addq	%rdx, %r10
.Ltmp1854:
	#DEBUG_VALUE: i1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_convert 8 5, DW_OP_LLVM_convert 32 5, DW_OP_constu 3, DW_OP_mul, DW_OP_plus_uconst 4, DW_OP_LLVM_arg 0, DW_OP_LLVM_convert 8 5, DW_OP_LLVM_convert 32 5, DW_OP_plus, DW_OP_stack_value] undef
	.loc	0 1030 17 is_stmt 1             # x264_src/encoder/me.c:1030:17
	shll	$6, %esi
	leaq	(%rsp,%rsi), %rcx
	addq	$528, %rcx                      # imm = 0x210
	leaq	(%rcx,%rdi,8), %rcx
	.loc	0 1030 52 is_stmt 0             # x264_src/encoder/me.c:1030:52
	orb	%r9b, (%r8,%rcx)
	.loc	0 1031 55 is_stmt 1             # x264_src/encoder/me.c:1031:55
	movq	416(%rsp,%rax,8), %rdx
	.loc	0 1031 67 is_stmt 0             # x264_src/encoder/me.c:1031:67
	movl	320(%rsp,%rax,4), %ecx
	.loc	0 1031 82                       # x264_src/encoder/me.c:1031:82
	movq	488(%rsp,%r10,8), %r8
	.loc	0 1031 94                       # x264_src/encoder/me.c:1031:94
	movl	356(%rsp,%r10,4), %r9d
	.loc	0 1031 17                       # x264_src/encoder/me.c:1031:17
	subq	$8, %rsp
.Ltmp1855:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	280(%rsp), %rbp                 # 8-byte Reload
	.loc	0 1031 17                       # x264_src/encoder/me.c:1031:17
	movq	%rbp, %rdi
	movl	$32, %esi
	pushq	160(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	movq	32(%rsp), %rbx                  # 8-byte Reload
	movq	160(%rsp), %r15                 # 8-byte Reload
	callq	*32640(%rbx,%r15,8)
.Ltmp1856:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movq	104(%rsp), %rax                 # 8-byte Reload
	.loc	0 1032 52 is_stmt 1             # x264_src/encoder/me.c:1032:52
	movq	88(%rax), %rdi
	.loc	0 1032 28 is_stmt 0             # x264_src/encoder/me.c:1032:28
	movl	$16, %esi
	movq	%rbp, %rdx
	movl	$32, %ecx
	callq	*31816(%rbx,%r15,8)
.Ltmp1857:
	.loc	0 0 28                          # x264_src/encoder/me.c:0:28
	movq	256(%rsp), %rcx                 # 8-byte Reload
	movq	168(%rsp), %rdi                 # 8-byte Reload
	.loc	0 1033 28 is_stmt 1             # x264_src/encoder/me.c:1033:28
	movzwl	(%rcx,%rdi,2), %ecx
	.loc	0 1033 26 is_stmt 0             # x264_src/encoder/me.c:1033:26
	addl	%eax, %ecx
	movq	264(%rsp), %rax                 # 8-byte Reload
	.loc	0 1033 46                       # x264_src/encoder/me.c:1033:46
	movzwl	(%rax,%r14,2), %eax
	movq	240(%rsp), %rdx                 # 8-byte Reload
	movq	160(%rsp), %r8                  # 8-byte Reload
	.loc	0 1033 64                       # x264_src/encoder/me.c:1033:64
	movzwl	(%rdx,%r8,2), %edx
	.loc	0 1033 44                       # x264_src/encoder/me.c:1033:44
	addl	%eax, %edx
	.loc	0 1033 62                       # x264_src/encoder/me.c:1033:62
	addl	%ecx, %edx
	movq	248(%rsp), %rax                 # 8-byte Reload
	.loc	0 1033 82                       # x264_src/encoder/me.c:1033:82
	movzwl	(%rax,%r13,2), %eax
	.loc	0 1033 80                       # x264_src/encoder/me.c:1033:80
	addl	%edx, %eax
.Ltmp1858:
	#DEBUG_VALUE: cost <- $eax
	.loc	0 992 9 is_stmt 1               # x264_src/encoder/me.c:992:9
	cmpl	$0, 8016(%rsp)
.Ltmp1859:
	.loc	0 1034 21                       # x264_src/encoder/me.c:1034:21
	je	.LBB5_45
.Ltmp1860:
# %bb.43:                               # %if.then467
                                        #   in Loop: Header=BB5_24 Depth=2
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- $r12
	#DEBUG_VALUE: m0x <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: m0y <- $r14d
	#DEBUG_VALUE: m1x <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: m1y <- $r13d
	#DEBUG_VALUE: cost <- $eax
	.loc	0 0 21 is_stmt 0                # x264_src/encoder/me.c:0:21
	movq	80(%rsp), %rsi                  # 8-byte Reload
.Ltmp1861:
	.loc	0 1036 38 is_stmt 1             # x264_src/encoder/me.c:1036:38
	movl	%esi, %ecx
	shll	$4, %ecx
	movl	%esi, %edx
	addl	%ecx, %edx
	.loc	0 1036 40 is_stmt 0             # x264_src/encoder/me.c:1036:40
	leal	15(%rsi,%rcx), %ecx
	cmovnsl	%edx, %ecx
	sarl	$4, %ecx
	.loc	0 1036 30                       # x264_src/encoder/me.c:1036:30
	cmpl	%ecx, %eax
.Ltmp1862:
	.loc	0 1036 25                       # x264_src/encoder/me.c:1036:25
	jge	.LBB5_46
.Ltmp1863:
# %bb.44:                               # %if.then471
                                        #   in Loop: Header=BB5_24 Depth=2
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- $r12
	#DEBUG_VALUE: m0x <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: m0y <- $r14d
	#DEBUG_VALUE: m1x <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: m1y <- $r13d
	#DEBUG_VALUE: cost <- $eax
	.loc	0 0 25                          # x264_src/encoder/me.c:0:25
	movq	296(%rsp), %rcx                 # 8-byte Reload
	movq	288(%rsp), %rdx                 # 8-byte Reload
	leaq	(%rcx,%rdx), %rbp
	addq	$4, %rbp
	movq	112(%rsp), %rcx                 # 8-byte Reload
	movq	280(%rsp), %rdx                 # 8-byte Reload
	leaq	(%rcx,%rdx), %rbx
	addq	$4, %rbx
.Ltmp1864:
	.loc	0 1038 33 is_stmt 1             # x264_src/encoder/me.c:1038:33
	cmpl	%esi, %eax
	cmovll	%eax, %esi
.Ltmp1865:
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- $esi
	#DEBUG_VALUE: pack16to32_mask:a <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: pack16to32_mask:b <- $r14d
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/me.c:0:33
	movq	%rsi, 80(%rsp)                  # 8-byte Spill
.Ltmp1866:
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	.loc	6 345 13 is_stmt 1              # x264_src/common/macroblock.h:345:13
	movzwl	%di, %eax
.Ltmp1867:
	.loc	6 345 26 is_stmt 0              # x264_src/common/macroblock.h:345:26
	shll	$16, %r14d
.Ltmp1868:
	.loc	6 345 22                        # x264_src/common/macroblock.h:345:22
	orl	%eax, %r14d
	movq	16(%rsp), %r15                  # 8-byte Reload
	movq	216(%rsp), %rcx                 # 8-byte Reload
.Ltmp1869:
	.loc	0 1039 42 is_stmt 1             # x264_src/encoder/me.c:1039:42
	movl	%r14d, 25200(%r15,%rcx,4)
.Ltmp1870:
	#DEBUG_VALUE: pack16to32_mask:a <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: pack16to32_mask:b <- $r13d
	.loc	6 345 13                        # x264_src/common/macroblock.h:345:13
	movzwl	%r8w, %eax
	.loc	6 345 26 is_stmt 0              # x264_src/common/macroblock.h:345:26
	shll	$16, %r13d
.Ltmp1871:
	.loc	6 345 22                        # x264_src/common/macroblock.h:345:22
	orl	%eax, %r13d
.Ltmp1872:
	.loc	0 1040 42 is_stmt 1             # x264_src/encoder/me.c:1040:42
	movl	%r13d, 25360(%r15,%rcx,4)
	.loc	0 1041 66                       # x264_src/encoder/me.c:1041:66
	shlq	$6, %rbp
	leaq	(%rsp,%rbp), %rdx
	addq	$2192, %rdx                     # imm = 0x890
	.loc	0 1041 86 is_stmt 0             # x264_src/encoder/me.c:1041:86
	shlq	$6, %rbx
	leaq	2768(%rsp), %rax
	leaq	(%rax,%rbx), %r8
	.loc	0 1041 25                       # x264_src/encoder/me.c:1041:25
	subq	$8, %rsp
.Ltmp1873:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 25                          # x264_src/encoder/me.c:0:25
	movq	208(%rsp), %rdi                 # 8-byte Reload
	.loc	0 1041 25                       # x264_src/encoder/me.c:1041:25
	movl	$32, %esi
	movl	$8, %ecx
	movl	$8, %r9d
	movq	160(%rsp), %r14                 # 8-byte Reload
	pushq	%r14
	.cfi_adjust_cfa_offset 8
	movq	208(%rsp), %r13                 # 8-byte Reload
	callq	*32640(%r15,%r13,8)
.Ltmp1874:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	.loc	0 1042 66 is_stmt 1             # x264_src/encoder/me.c:1042:66
	leaq	(%rsp,%rbp), %rdx
	addq	$1040, %rdx                     # imm = 0x410
	.loc	0 1042 86 is_stmt 0             # x264_src/encoder/me.c:1042:86
	leaq	1616(%rsp), %rax
	addq	%rax, %rbx
	.loc	0 1042 25                       # x264_src/encoder/me.c:1042:25
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	movq	216(%rsp), %rdi                 # 8-byte Reload
	movl	$32, %esi
	movl	$8, %ecx
	movq	%rbx, %r8
	movl	$8, %r9d
	pushq	%r14
	.cfi_adjust_cfa_offset 8
	callq	*32640(%r15,%r13,8)
.Ltmp1875:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movq	104(%rsp), %rax                 # 8-byte Reload
	.loc	0 1043 86 is_stmt 1             # x264_src/encoder/me.c:1043:86
	movl	(%rax), %ecx
	.loc	0 1043 43 is_stmt 0             # x264_src/encoder/me.c:1043:43
	movq	%r15, %rdi
	movl	124(%rsp), %esi                 # 4-byte Reload
	movl	44(%rsp), %edx                  # 4-byte Reload
	callq	x264_rd_cost_part@PLT
.Ltmp1876:
	#DEBUG_VALUE: costrd <- $rax
	.loc	0 0 43                          # x264_src/encoder/me.c:0:43
	movq	136(%rsp), %rcx                 # 8-byte Reload
.Ltmp1877:
	.loc	0 1044 25 is_stmt 1             # x264_src/encoder/me.c:1044:25
	cmpq	%rcx, %rax
	movl	32(%rsp), %edx                  # 4-byte Reload
.Ltmp1878:
	.loc	0 1044 25 is_stmt 0             # x264_src/encoder/me.c:1044:25
	cmovbl	%r12d, %edx
	movl	%edx, 32(%rsp)                  # 4-byte Spill
.Ltmp1879:
	#DEBUG_VALUE: bestj <- undef
	cmovbq	%rax, %rcx
.Ltmp1880:
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- $rcx
	#DEBUG_VALUE: bestj <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 0 25                          # x264_src/encoder/me.c:0:25
	movq	%rcx, 136(%rsp)                 # 8-byte Spill
.Ltmp1881:
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	jmp	.LBB5_46
.Ltmp1882:
	.p2align	4, 0x90
.LBB5_26:                               # %for.cond.cleanup357
                                        #   in Loop: Header=BB5_12 Depth=1
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	movl	32(%rsp), %eax                  # 4-byte Reload
.Ltmp1883:
	.loc	0 1052 14 is_stmt 1             # x264_src/encoder/me.c:1052:14
	testl	%eax, %eax
.Ltmp1884:
	.loc	0 1052 13 is_stmt 0             # x264_src/encoder/me.c:1052:13
	je	.LBB5_28
.Ltmp1885:
# %bb.27:                               # %for.inc554
                                        #   in Loop: Header=BB5_12 Depth=1
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: bestj <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 1055 17 is_stmt 1             # x264_src/encoder/me.c:1055:17
	movslq	%eax, %rcx
	movsbl	x264_me_refine_bidir.dia4d(,%rcx,4), %eax
	.loc	0 1055 14 is_stmt 0             # x264_src/encoder/me.c:1055:14
	addl	%eax, %edx
.Ltmp1886:
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- $edx
	.loc	0 0 14                          # x264_src/encoder/me.c:0:14
	movl	%edx, 12(%rsp)                  # 4-byte Spill
.Ltmp1887:
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	.loc	0 1056 17 is_stmt 1             # x264_src/encoder/me.c:1056:17
	movsbl	x264_me_refine_bidir.dia4d+1(,%rcx,4), %eax
	.loc	0 1056 14 is_stmt 0             # x264_src/encoder/me.c:1056:14
	addl	%eax, %r13d
.Ltmp1888:
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	.loc	0 1057 17 is_stmt 1             # x264_src/encoder/me.c:1057:17
	movsbl	x264_me_refine_bidir.dia4d+2(,%rcx,4), %eax
	.loc	0 1057 14 is_stmt 0             # x264_src/encoder/me.c:1057:14
	addl	%eax, %r10d
.Ltmp1889:
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- $r10d
	.loc	0 1058 17 is_stmt 1             # x264_src/encoder/me.c:1058:17
	movsbl	x264_me_refine_bidir.dia4d+3(,%rcx,4), %eax
	.loc	0 1058 14 is_stmt 0             # x264_src/encoder/me.c:1058:14
	addl	%eax, %r11d
.Ltmp1890:
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	.loc	0 1060 20 is_stmt 1             # x264_src/encoder/me.c:1060:20
	movzwl	x264_me_refine_bidir.dia4d(,%rcx,4), %eax
.Ltmp1891:
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list0 <- $eax
	.loc	0 1061 20                       # x264_src/encoder/me.c:1061:20
	movzwl	x264_me_refine_bidir.dia4d+2(,%rcx,4), %edx
.Ltmp1892:
	#DEBUG_VALUE: x264_me_refine_bidir:mc_list1 <- $edx
	.loc	0 0 20 is_stmt 0                # x264_src/encoder/me.c:0:20
	movl	36(%rsp), %ecx                  # 4-byte Reload
.Ltmp1893:
	.loc	0 1005 38 is_stmt 1             # x264_src/encoder/me.c:1005:38
	incl	%ecx
.Ltmp1894:
	#DEBUG_VALUE: pass <- $ecx
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	.loc	0 0 38 is_stmt 0                # x264_src/encoder/me.c:0:38
	movl	%ecx, 36(%rsp)                  # 4-byte Spill
.Ltmp1895:
	#DEBUG_VALUE: pass <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	.loc	0 1005 29                       # x264_src/encoder/me.c:1005:29
	cmpl	$8, %ecx
.Ltmp1896:
	.loc	0 1005 5                        # x264_src/encoder/me.c:1005:5
	jne	.LBB5_12
.Ltmp1897:
.LBB5_28:                               # %cleanup556
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- $r10d
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	.loc	0 992 9 is_stmt 1               # x264_src/encoder/me.c:992:9
	cmpl	$0, 8016(%rsp)
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- $r10d
.Ltmp1898:
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/me.c:0:9
	movq	128(%rsp), %r15                 # 8-byte Reload
	movq	104(%rsp), %r12                 # 8-byte Reload
	movl	12(%rsp), %ebx                  # 4-byte Reload
	movq	72(%rsp), %r14                  # 8-byte Reload
.Ltmp1899:
	.loc	0 1064 9 is_stmt 1              # x264_src/encoder/me.c:1064:9
	je	.LBB5_120
.Ltmp1900:
# %bb.29:                               # %if.then559
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- $r10d
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/me.c:0:9
	movq	64(%rsp), %rdi                  # 8-byte Reload
.Ltmp1901:
	.loc	0 1066 62 is_stmt 1             # x264_src/encoder/me.c:1066:62
	movl	%edi, %ecx
	sarl	$2, %ecx
	.loc	0 1066 69 is_stmt 0             # x264_src/encoder/me.c:1066:69
	sarl	$2, %r14d
.Ltmp1902:
	#DEBUG_VALUE: pack16to32_mask:a <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: pack16to32_mask:b <- $r13d
	.loc	6 345 13 is_stmt 1              # x264_src/common/macroblock.h:345:13
	movzwl	%bx, %eax
	.loc	6 345 26 is_stmt 0              # x264_src/common/macroblock.h:345:26
	movl	%r13d, %r8d
	shll	$16, %r8d
	.loc	6 345 22                        # x264_src/common/macroblock.h:345:22
	orl	%eax, %r8d
.Ltmp1903:
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- undef
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	.loc	6 0 22                          # x264_src/common/macroblock.h:0:22
	movq	184(%rsp), %rax                 # 8-byte Reload
.Ltmp1904:
	.file	9 "x264_src/common" "rectangle.h" md5 0xd042158b8d3023ac6d42be3fb9b0d384
	.loc	9 112 62 is_stmt 1              # x264_src/common/rectangle.h:112:62
	shll	$3, %eax
	movq	176(%rsp), %rdx                 # 8-byte Reload
	.loc	9 112 60 is_stmt 0              # x264_src/common/rectangle.h:112:60
	leal	(%rax,%rdx,2), %eax
	orl	$12, %eax
	.loc	9 112 23                        # x264_src/common/rectangle.h:112:23
	cltq
	movq	56(%rsp), %rbp                  # 8-byte Reload
	leaq	(,%rax,4), %rdx
	addq	%rbp, %rdx
.Ltmp1905:
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rdx
	.loc	9 116 52 is_stmt 1              # x264_src/common/rectangle.h:116:52
	andl	$-4, %edi
.Ltmp1906:
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 4
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	.loc	9 30 9                          # x264_src/common/rectangle.h:30:9
	addl	$-2, %edi
.Ltmp1907:
	.loc	9 0 9 is_stmt 0                 # x264_src/common/rectangle.h:0:9
	movl	$2, %esi
	.loc	9 30 9                          # x264_src/common/rectangle.h:30:9
	shldl	$31, %edi, %esi
	cmpl	$1, %esi
	movl	%r10d, 8(%rsp)                  # 4-byte Spill
.Ltmp1908:
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	je	.LBB5_51
.Ltmp1909:
# %bb.30:                               # %if.then559
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	.loc	9 0 0                           # x264_src/common/rectangle.h:0:0
	movq	%r8, %rdi
	shlq	$32, %rdi
	orq	%r8, %rdi
.Ltmp1910:
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 30 9                          # x264_src/common/rectangle.h:30:9
	cmpl	$3, %esi
	je	.LBB5_54
.Ltmp1911:
# %bb.31:                               # %if.then559
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	cmpl	$7, %esi
	jne	.LBB5_57
.Ltmp1912:
# %bb.32:                               # %do.body.i.i.preheader
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 79 13 is_stmt 1               # x264_src/common/rectangle.h:79:13
	leal	-2(%r14), %r9d
	cmpl	$5, %r9d
	ja	.LBB5_48
.Ltmp1913:
# %bb.33:
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 0 13 is_stmt 0                # x264_src/common/rectangle.h:0:13
	movl	%r14d, %r8d
.Ltmp1914:
	jmp	.LBB5_34
.Ltmp1915:
.LBB5_54:                               # %if.then63.i.i
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 52 26 is_stmt 1               # x264_src/common/rectangle.h:52:26
	movq	%rdi, (%rdx)
.Ltmp1916:
	.loc	9 53 19                         # x264_src/common/rectangle.h:53:19
	cmpl	$1, %r14d
.Ltmp1917:
	.loc	9 53 17 is_stmt 0               # x264_src/common/rectangle.h:53:17
	je	.LBB5_57
.Ltmp1918:
# %bb.55:                               # %if.end70.i.i
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 54 26 is_stmt 1               # x264_src/common/rectangle.h:54:26
	movq	%rdi, 32(%rdx)
.Ltmp1919:
	.loc	9 55 19                         # x264_src/common/rectangle.h:55:19
	cmpl	$2, %r14d
.Ltmp1920:
	.loc	9 55 17 is_stmt 0               # x264_src/common/rectangle.h:55:17
	je	.LBB5_57
.Ltmp1921:
# %bb.56:                               # %if.end77.i.i
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 56 26 is_stmt 1               # x264_src/common/rectangle.h:56:26
	movq	%rdi, 64(%rdx)
	.loc	9 57 26                         # x264_src/common/rectangle.h:57:26
	movq	%rdi, 96(%rdx)
	jmp	.LBB5_57
.Ltmp1922:
.LBB5_51:                               # %if.then39.i.i
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	.loc	9 41 22                         # x264_src/common/rectangle.h:41:22
	movl	%r8d, (%rdx)
.Ltmp1923:
	.loc	9 42 15                         # x264_src/common/rectangle.h:42:15
	cmpl	$1, %r14d
.Ltmp1924:
	.loc	9 42 13 is_stmt 0               # x264_src/common/rectangle.h:42:13
	je	.LBB5_57
.Ltmp1925:
# %bb.52:                               # %if.end46.i.i
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	.loc	9 43 22 is_stmt 1               # x264_src/common/rectangle.h:43:22
	movl	%r8d, 32(%rdx)
.Ltmp1926:
	.loc	9 44 15                         # x264_src/common/rectangle.h:44:15
	cmpl	$2, %r14d
.Ltmp1927:
	.loc	9 44 13 is_stmt 0               # x264_src/common/rectangle.h:44:13
	je	.LBB5_57
.Ltmp1928:
# %bb.53:                               # %if.end53.i.i
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	.loc	9 45 22 is_stmt 1               # x264_src/common/rectangle.h:45:22
	movl	%r8d, 64(%rdx)
	.loc	9 46 22                         # x264_src/common/rectangle.h:46:22
	movl	%r8d, 96(%rdx)
	.loc	9 47 5                          # x264_src/common/rectangle.h:47:5
	jmp	.LBB5_57
.Ltmp1929:
.LBB5_48:                               # %vector.ph
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 0 5 is_stmt 0                 # x264_src/common/rectangle.h:0:5
	movl	%r11d, %ebp
.Ltmp1930:
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	.loc	9 79 13 is_stmt 1               # x264_src/common/rectangle.h:79:13
	shrl	%r9d
	incl	%r9d
	movl	%r9d, %r10d
	andl	$-4, %r10d
	movq	%r10, %r8
.Ltmp1931:
	shlq	$6, %r8
	addq	%r8, %rdx
.Ltmp1932:
	movl	%r14d, %r8d
	subl	%r10d, %r8d
	subl	%r10d, %r8d
	movq	16(%rsp), %r11                  # 8-byte Reload
	leaq	(%r11,%rax,4), %r11
	addq	$25432, %r11                    # imm = 0x6358
	movq	%r10, %rbx
.Ltmp1933:
.LBB5_49:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, -232(%r11)
	movq	%rdi, -168(%r11)
	movq	%rdi, -104(%r11)
	movq	%rdi, -40(%r11)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, -224(%r11)
	movq	%rdi, -160(%r11)
	movq	%rdi, -96(%r11)
	movq	%rdi, -32(%r11)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, -200(%r11)
	movq	%rdi, -136(%r11)
	movq	%rdi, -72(%r11)
	movq	%rdi, -8(%r11)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, -192(%r11)
	movq	%rdi, -128(%r11)
	movq	%rdi, -64(%r11)
	movq	%rdi, (%r11)
	addq	$256, %r11                      # imm = 0x100
	addq	$-4, %rbx
	jne	.LBB5_49
.Ltmp1934:
# %bb.50:                               # %middle.block
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	cmpl	%r9d, %r10d
	movl	%ebp, %r11d
	movl	12(%rsp), %ebx                  # 4-byte Reload
	movq	56(%rsp), %rbp                  # 8-byte Reload
.Ltmp1935:
	je	.LBB5_57
.Ltmp1936:
.LBB5_34:                               # %do.body.i.i.preheader1180
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 79 13                         # x264_src/common/rectangle.h:79:13
	leal	-2(%r8), %r9d
	movl	%r9d, %r10d
	shrl	%r10d
	incl	%r10d
	andl	$3, %r10d
	je	.LBB5_38
.Ltmp1937:
# %bb.35:                               # %do.body.i.i.prol.preheader
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 0 13 is_stmt 0                # x264_src/common/rectangle.h:0:13
	movl	%r11d, %ebx
.Ltmp1938:
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebx
	.loc	9 87 13 is_stmt 1               # x264_src/common/rectangle.h:87:13
	addl	%r10d, %r10d
	xorl	%r11d, %r11d
.Ltmp1939:
.LBB5_36:                               # %do.body.i.i.prol
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebx
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_div, DW_OP_consts 18446744073709551614, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r11d, $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdx
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, (%rdx)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 8(%rdx)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 32(%rdx)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 40(%rdx)
.Ltmp1940:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_div, DW_OP_consts 18446744073709551614, DW_OP_mul, DW_OP_consts 18446744073709551614, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $r11d, $r8d
	.loc	9 86 19                         # x264_src/common/rectangle.h:86:19
	addq	$64, %rdx
.Ltmp1941:
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdx
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	addl	$2, %r11d
.Ltmp1942:
	cmpl	%r11d, %r10d
	jne	.LBB5_36
.Ltmp1943:
# %bb.37:                               # %do.body.i.i.prol.loopexit.loopexit
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebx
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 79 13                         # x264_src/common/rectangle.h:79:13
	subl	%r11d, %r8d
	movl	%ebx, %r11d
	movl	12(%rsp), %ebx                  # 4-byte Reload
.Ltmp1944:
.LBB5_38:                               # %do.body.i.i.prol.loopexit
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	cmpl	$6, %r9d
	jb	.LBB5_57
.Ltmp1945:
.LBB5_39:                               # %do.body.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdx
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, (%rdx)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 8(%rdx)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 32(%rdx)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 40(%rdx)
.Ltmp1946:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_constu 2, DW_OP_minus, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- [DW_OP_plus_uconst 64, DW_OP_stack_value] $rdx
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, 64(%rdx)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 72(%rdx)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 96(%rdx)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 104(%rdx)
.Ltmp1947:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_constu 4, DW_OP_minus, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- [DW_OP_plus_uconst 128, DW_OP_stack_value] $rdx
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, 128(%rdx)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 136(%rdx)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 160(%rdx)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 168(%rdx)
.Ltmp1948:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_constu 6, DW_OP_minus, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- [DW_OP_plus_uconst 192, DW_OP_stack_value] $rdx
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, 192(%rdx)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 200(%rdx)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 224(%rdx)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 232(%rdx)
	.loc	9 86 19                         # x264_src/common/rectangle.h:86:19
	addq	$256, %rdx                      # imm = 0x100
.Ltmp1949:
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdx
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	addl	$-8, %r8d
.Ltmp1950:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r8d
	.loc	9 0 13 is_stmt 0                # x264_src/common/rectangle.h:0:13
	jne	.LBB5_39
.Ltmp1951:
.LBB5_57:                               # %x264_macroblock_cache_mv.exit
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	.loc	0 1067 27 is_stmt 1             # x264_src/encoder/me.c:1067:27
	movswl	128(%r12), %edx
	movl	%ebx, %r8d
	subl	%edx, %r8d
	movl	%r8d, %edi
	negl	%edi
	cmovsl	%r8d, %edi
	cmpl	$33, %edi
	movl	$33, %edx
	cmovael	%edx, %edi
	.loc	0 1067 64 is_stmt 0             # x264_src/encoder/me.c:1067:64
	movswl	130(%r12), %r8d
	movl	%r13d, %r10d
	subl	%r8d, %r10d
	movl	%r10d, %r9d
	negl	%r9d
	cmovsl	%r10d, %r9d
	cmpl	$33, %r9d
	cmovael	%edx, %r9d
.Ltmp1952:
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- undef
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- undef
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:width <- $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 2
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	.loc	0 0 64                          # x264_src/encoder/me.c:0:64
	movabsq	$4294967297, %rdx               # imm = 0x100000001
.Ltmp1953:
	.loc	9 30 9 is_stmt 1                # x264_src/common/rectangle.h:30:9
	decl	%ecx
.Ltmp1954:
	andl	$2147483647, %ecx               # imm = 0x7FFFFFFF
	cmpl	$7, %ecx
	ja	.LBB5_79
.Ltmp1955:
# %bb.58:                               # %x264_macroblock_cache_mv.exit
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/me.c:0:0
	shll	$8, %r9d
	orl	%edi, %r9d
.Ltmp1956:
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r9w
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $r9w
	movq	16(%rsp), %rdi                  # 8-byte Reload
.Ltmp1957:
	leaq	(%rdi,%rax,2), %rdi
	addq	$25520, %rdi                    # imm = 0x63B0
.Ltmp1958:
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rdi
	movl	%r9d, %r10d
	shll	$16, %r10d
	addl	%r9d, %r10d
.Ltmp1959:
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r10d
	movq	%r10, %r8
	imulq	%rdx, %r8
.Ltmp1960:
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	.loc	9 30 9                          # x264_src/common/rectangle.h:30:9
	jmpq	*.LJTI5_0(,%rcx,8)
.Ltmp1961:
.LBB5_70:                               # %if.then.i.i
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r10d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	.loc	9 32 22 is_stmt 1               # x264_src/common/rectangle.h:32:22
	movw	%r9w, (%rdi)
.Ltmp1962:
	.loc	9 33 15                         # x264_src/common/rectangle.h:33:15
	cmpl	$1, %r14d
.Ltmp1963:
	.loc	9 33 13 is_stmt 0               # x264_src/common/rectangle.h:33:13
	je	.LBB5_79
.Ltmp1964:
# %bb.71:                               # %if.end.i.i
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r10d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	.loc	9 34 22 is_stmt 1               # x264_src/common/rectangle.h:34:22
	movw	%r9w, 16(%rdi)
.Ltmp1965:
	.loc	9 35 15                         # x264_src/common/rectangle.h:35:15
	cmpl	$2, %r14d
.Ltmp1966:
	.loc	9 35 13 is_stmt 0               # x264_src/common/rectangle.h:35:13
	je	.LBB5_79
.Ltmp1967:
# %bb.72:                               # %if.end30.i.i
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r10d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	.loc	9 36 22 is_stmt 1               # x264_src/common/rectangle.h:36:22
	movw	%r9w, 32(%rdi)
	.loc	9 37 22                         # x264_src/common/rectangle.h:37:22
	movw	%r9w, 48(%rdi)
	.loc	9 38 5                          # x264_src/common/rectangle.h:38:5
	jmp	.LBB5_79
.Ltmp1968:
.LBB5_76:                               # %if.then63.i.i965
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r10d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	.loc	9 52 26                         # x264_src/common/rectangle.h:52:26
	movq	%r8, (%rdi)
.Ltmp1969:
	.loc	9 53 19                         # x264_src/common/rectangle.h:53:19
	cmpl	$1, %r14d
.Ltmp1970:
	.loc	9 53 17 is_stmt 0               # x264_src/common/rectangle.h:53:17
	je	.LBB5_79
.Ltmp1971:
# %bb.77:                               # %if.end70.i.i967
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r10d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	.loc	9 54 26 is_stmt 1               # x264_src/common/rectangle.h:54:26
	movq	%r8, 16(%rdi)
.Ltmp1972:
	.loc	9 55 19                         # x264_src/common/rectangle.h:55:19
	cmpl	$2, %r14d
.Ltmp1973:
	.loc	9 55 17 is_stmt 0               # x264_src/common/rectangle.h:55:17
	je	.LBB5_79
.Ltmp1974:
# %bb.78:                               # %if.end77.i.i970
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r10d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	.loc	9 56 26 is_stmt 1               # x264_src/common/rectangle.h:56:26
	movq	%r8, 32(%rdi)
	.loc	9 57 26                         # x264_src/common/rectangle.h:57:26
	movq	%r8, 48(%rdi)
	jmp	.LBB5_79
.Ltmp1975:
.LBB5_73:                               # %if.then39.i.i973
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r10d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	.loc	9 41 22                         # x264_src/common/rectangle.h:41:22
	movl	%r10d, (%rdi)
.Ltmp1976:
	.loc	9 42 15                         # x264_src/common/rectangle.h:42:15
	cmpl	$1, %r14d
.Ltmp1977:
	.loc	9 42 13 is_stmt 0               # x264_src/common/rectangle.h:42:13
	je	.LBB5_79
.Ltmp1978:
# %bb.74:                               # %if.end46.i.i975
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r10d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	.loc	9 43 22 is_stmt 1               # x264_src/common/rectangle.h:43:22
	movl	%r10d, 16(%rdi)
.Ltmp1979:
	.loc	9 44 15                         # x264_src/common/rectangle.h:44:15
	cmpl	$2, %r14d
.Ltmp1980:
	.loc	9 44 13 is_stmt 0               # x264_src/common/rectangle.h:44:13
	je	.LBB5_79
.Ltmp1981:
# %bb.75:                               # %if.end53.i.i978
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r10d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	.loc	9 45 22 is_stmt 1               # x264_src/common/rectangle.h:45:22
	movl	%r10d, 32(%rdi)
	.loc	9 46 22                         # x264_src/common/rectangle.h:46:22
	movl	%r10d, 48(%rdi)
	.loc	9 47 5                          # x264_src/common/rectangle.h:47:5
	jmp	.LBB5_79
.Ltmp1982:
.LBB5_59:                               # %do.body.i.i956.preheader
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r10d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	.loc	9 79 13                         # x264_src/common/rectangle.h:79:13
	leal	-2(%r14), %r10d
.Ltmp1983:
	cmpl	$5, %r10d
	ja	.LBB5_67
.Ltmp1984:
# %bb.60:
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	.loc	9 0 13 is_stmt 0                # x264_src/common/rectangle.h:0:13
	movl	%r14d, %r9d
.Ltmp1985:
	jmp	.LBB5_61
.Ltmp1986:
.LBB5_67:                               # %vector.ph1117
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r9w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	movl	%r11d, 28(%rsp)                 # 4-byte Spill
.Ltmp1987:
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	9 79 13                         # x264_src/common/rectangle.h:79:13
	shrl	%r10d
	incl	%r10d
	movl	%r10d, %r11d
	andl	$-4, %r11d
	movq	%r11, %r9
.Ltmp1988:
	shlq	$5, %r9
	addq	%r9, %rdi
.Ltmp1989:
	.loc	9 0 13                          # x264_src/common/rectangle.h:0:13
	movq	%r14, %rbp
	.loc	9 79 13                         # x264_src/common/rectangle.h:79:13
	movl	%r14d, %r9d
	subl	%r11d, %r9d
	subl	%r11d, %r9d
	movq	16(%rsp), %rbx                  # 8-byte Reload
	leaq	(%rbx,%rax,2), %rbx
	addq	$25640, %rbx                    # imm = 0x6428
	movq	%r11, %r14
.Ltmp1990:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $ebp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $ebp
.LBB5_68:                               # %vector.body1125
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $ebp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $ebp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	.loc	9 81 32 is_stmt 1               # x264_src/common/rectangle.h:81:32
	movq	%r8, -120(%rbx)
	movq	%r8, -88(%rbx)
	movq	%r8, -56(%rbx)
	movq	%r8, -24(%rbx)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%r8, -112(%rbx)
	movq	%r8, -80(%rbx)
	movq	%r8, -48(%rbx)
	movq	%r8, -16(%rbx)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%r8, -104(%rbx)
	movq	%r8, -72(%rbx)
	movq	%r8, -40(%rbx)
	movq	%r8, -8(%rbx)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%r8, -96(%rbx)
	movq	%r8, -64(%rbx)
	movq	%r8, -32(%rbx)
	movq	%r8, (%rbx)
	subq	$-128, %rbx
	addq	$-4, %r14
	jne	.LBB5_68
.Ltmp1991:
# %bb.69:                               # %middle.block1114
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $ebp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $ebp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	cmpl	%r10d, %r11d
	movl	28(%rsp), %r11d                 # 4-byte Reload
	movl	12(%rsp), %ebx                  # 4-byte Reload
	movq	%rbp, %r14
	movq	56(%rsp), %rbp                  # 8-byte Reload
.Ltmp1992:
	je	.LBB5_79
.Ltmp1993:
.LBB5_61:                               # %do.body.i.i956.preheader1179
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	.loc	9 0 13 is_stmt 0                # x264_src/common/rectangle.h:0:13
	movl	%r11d, %ebp
.Ltmp1994:
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	.loc	9 79 13 is_stmt 1               # x264_src/common/rectangle.h:79:13
	leal	-2(%r9), %r10d
	movl	%r10d, %r11d
	shrl	%r11d
	incl	%r11d
	andl	$3, %r11d
	je	.LBB5_65
.Ltmp1995:
# %bb.62:                               # %do.body.i.i956.prol.preheader
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	addl	%r11d, %r11d
	xorl	%ebx, %ebx
.Ltmp1996:
.LBB5_63:                               # %do.body.i.i956.prol
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_div, DW_OP_consts 18446744073709551614, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $ebx, $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%r8, (%rdi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%r8, 8(%rdi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%r8, 16(%rdi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%r8, 24(%rdi)
.Ltmp1997:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_div, DW_OP_consts 18446744073709551614, DW_OP_mul, DW_OP_consts 18446744073709551614, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $ebx, $r9d
	.loc	9 86 19                         # x264_src/common/rectangle.h:86:19
	addq	$32, %rdi
.Ltmp1998:
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdi
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	addl	$2, %ebx
.Ltmp1999:
	cmpl	%ebx, %r11d
	jne	.LBB5_63
.Ltmp2000:
# %bb.64:                               # %do.body.i.i956.prol.loopexit.loopexit
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	.loc	9 79 13                         # x264_src/common/rectangle.h:79:13
	subl	%ebx, %r9d
	movl	12(%rsp), %ebx                  # 4-byte Reload
.Ltmp2001:
.LBB5_65:                               # %do.body.i.i956.prol.loopexit
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	cmpl	$6, %r10d
	movl	%ebp, %r11d
	movq	56(%rsp), %rbp                  # 8-byte Reload
.Ltmp2002:
	jb	.LBB5_79
.Ltmp2003:
.LBB5_66:                               # %do.body.i.i956
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 0
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%r8, (%rdi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%r8, 8(%rdi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%r8, 16(%rdi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%r8, 24(%rdi)
.Ltmp2004:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_constu 2, DW_OP_minus, DW_OP_stack_value] $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- [DW_OP_plus_uconst 32, DW_OP_stack_value] $rdi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%r8, 32(%rdi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%r8, 40(%rdi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%r8, 48(%rdi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%r8, 56(%rdi)
.Ltmp2005:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_constu 4, DW_OP_minus, DW_OP_stack_value] $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- [DW_OP_plus_uconst 64, DW_OP_stack_value] $rdi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%r8, 64(%rdi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%r8, 72(%rdi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%r8, 80(%rdi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%r8, 88(%rdi)
.Ltmp2006:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_constu 6, DW_OP_minus, DW_OP_stack_value] $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rdi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%r8, 96(%rdi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%r8, 104(%rdi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%r8, 112(%rdi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%r8, 120(%rdi)
	.loc	9 86 19                         # x264_src/common/rectangle.h:86:19
	subq	$-128, %rdi
.Ltmp2007:
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rdi
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	addl	$-8, %r9d
.Ltmp2008:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r9d
	.loc	9 0 13 is_stmt 0                # x264_src/common/rectangle.h:0:13
	jne	.LBB5_66
.Ltmp2009:
.LBB5_79:                               # %x264_macroblock_cache_mvd.exit
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: pack16to32_mask:a <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: pack16to32_mask:b <- $r11d
	movl	8(%rsp), %r10d                  # 4-byte Reload
.Ltmp2010:
	.loc	6 345 13 is_stmt 1              # x264_src/common/macroblock.h:345:13
	movzwl	%r10w, %r8d
	.loc	6 345 26 is_stmt 0              # x264_src/common/macroblock.h:345:26
	movl	%r11d, %edi
	shll	$16, %edi
	.loc	6 345 22                        # x264_src/common/macroblock.h:345:22
	orl	%r8d, %edi
.Ltmp2011:
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- undef
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	.loc	9 112 23 is_stmt 1              # x264_src/common/rectangle.h:112:23
	leaq	160(,%rax,4), %r8
	addq	%rbp, %r8
.Ltmp2012:
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 4
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	.loc	9 30 9                          # x264_src/common/rectangle.h:30:9
	cmpl	$1, %esi
	je	.LBB5_93
.Ltmp2013:
# %bb.80:                               # %x264_macroblock_cache_mvd.exit
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	.loc	9 0 0 is_stmt 0                 # x264_src/common/rectangle.h:0:0
	imulq	%rdx, %rdi
.Ltmp2014:
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 30 9                          # x264_src/common/rectangle.h:30:9
	cmpl	$3, %esi
	je	.LBB5_96
.Ltmp2015:
# %bb.81:                               # %x264_macroblock_cache_mvd.exit
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	cmpl	$7, %esi
	jne	.LBB5_99
.Ltmp2016:
# %bb.82:                               # %do.body.i.i1009.preheader
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 79 13 is_stmt 1               # x264_src/common/rectangle.h:79:13
	leal	-2(%r14), %r9d
	cmpl	$5, %r9d
	ja	.LBB5_90
.Ltmp2017:
# %bb.83:
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 0 13 is_stmt 0                # x264_src/common/rectangle.h:0:13
	movl	%r14d, %esi
	jmp	.LBB5_84
.Ltmp2018:
.LBB5_96:                               # %if.then63.i.i993
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 52 26 is_stmt 1               # x264_src/common/rectangle.h:52:26
	movq	%rdi, (%r8)
.Ltmp2019:
	.loc	9 53 19                         # x264_src/common/rectangle.h:53:19
	cmpl	$1, %r14d
.Ltmp2020:
	.loc	9 53 17 is_stmt 0               # x264_src/common/rectangle.h:53:17
	je	.LBB5_99
.Ltmp2021:
# %bb.97:                               # %if.end70.i.i995
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 54 26 is_stmt 1               # x264_src/common/rectangle.h:54:26
	movq	%rdi, 32(%r8)
.Ltmp2022:
	.loc	9 55 19                         # x264_src/common/rectangle.h:55:19
	cmpl	$2, %r14d
.Ltmp2023:
	.loc	9 55 17 is_stmt 0               # x264_src/common/rectangle.h:55:17
	je	.LBB5_99
.Ltmp2024:
# %bb.98:                               # %if.end77.i.i998
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 56 26 is_stmt 1               # x264_src/common/rectangle.h:56:26
	movq	%rdi, 64(%r8)
	.loc	9 57 26                         # x264_src/common/rectangle.h:57:26
	movq	%rdi, 96(%r8)
	jmp	.LBB5_99
.Ltmp2025:
.LBB5_93:                               # %if.then39.i.i1001
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	.loc	9 41 22                         # x264_src/common/rectangle.h:41:22
	movl	%edi, (%r8)
.Ltmp2026:
	.loc	9 42 15                         # x264_src/common/rectangle.h:42:15
	cmpl	$1, %r14d
.Ltmp2027:
	.loc	9 42 13 is_stmt 0               # x264_src/common/rectangle.h:42:13
	je	.LBB5_99
.Ltmp2028:
# %bb.94:                               # %if.end46.i.i1003
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	.loc	9 43 22 is_stmt 1               # x264_src/common/rectangle.h:43:22
	movl	%edi, 32(%r8)
.Ltmp2029:
	.loc	9 44 15                         # x264_src/common/rectangle.h:44:15
	cmpl	$2, %r14d
.Ltmp2030:
	.loc	9 44 13 is_stmt 0               # x264_src/common/rectangle.h:44:13
	je	.LBB5_99
.Ltmp2031:
# %bb.95:                               # %if.end53.i.i1006
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	.loc	9 45 22 is_stmt 1               # x264_src/common/rectangle.h:45:22
	movl	%edi, 64(%r8)
	.loc	9 46 22                         # x264_src/common/rectangle.h:46:22
	movl	%edi, 96(%r8)
	.loc	9 47 5                          # x264_src/common/rectangle.h:47:5
	jmp	.LBB5_99
.Ltmp2032:
.LBB5_90:                               # %vector.ph1137
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 0 5 is_stmt 0                 # x264_src/common/rectangle.h:0:5
	movl	%r11d, %ebp
.Ltmp2033:
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	.loc	9 79 13 is_stmt 1               # x264_src/common/rectangle.h:79:13
	shrl	%r9d
	incl	%r9d
	movl	%r9d, %r10d
	andl	$-4, %r10d
	movq	%r10, %rsi
	shlq	$6, %rsi
	addq	%rsi, %r8
.Ltmp2034:
	movl	%r14d, %esi
	subl	%r10d, %esi
	subl	%r10d, %esi
	movq	16(%rsp), %r11                  # 8-byte Reload
	leaq	(%r11,%rax,4), %r11
	addq	$25592, %r11                    # imm = 0x63F8
	movq	%r10, %rbx
.Ltmp2035:
.LBB5_91:                               # %vector.body1145
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, -232(%r11)
	movq	%rdi, -168(%r11)
	movq	%rdi, -104(%r11)
	movq	%rdi, -40(%r11)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, -224(%r11)
	movq	%rdi, -160(%r11)
	movq	%rdi, -96(%r11)
	movq	%rdi, -32(%r11)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, -200(%r11)
	movq	%rdi, -136(%r11)
	movq	%rdi, -72(%r11)
	movq	%rdi, -8(%r11)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, -192(%r11)
	movq	%rdi, -128(%r11)
	movq	%rdi, -64(%r11)
	movq	%rdi, (%r11)
	addq	$256, %r11                      # imm = 0x100
	addq	$-4, %rbx
	jne	.LBB5_91
.Ltmp2036:
# %bb.92:                               # %middle.block1134
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	cmpl	%r9d, %r10d
	movl	%ebp, %r11d
	movl	8(%rsp), %r10d                  # 4-byte Reload
	movl	12(%rsp), %ebx                  # 4-byte Reload
	je	.LBB5_99
.Ltmp2037:
.LBB5_84:                               # %do.body.i.i1009.preheader1178
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 79 13                         # x264_src/common/rectangle.h:79:13
	leal	-2(%rsi), %r9d
	movl	%r9d, %r10d
	shrl	%r10d
	incl	%r10d
	andl	$3, %r10d
	je	.LBB5_88
.Ltmp2038:
# %bb.85:                               # %do.body.i.i1009.prol.preheader
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 0 13 is_stmt 0                # x264_src/common/rectangle.h:0:13
	movl	%r11d, %ebx
.Ltmp2039:
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebx
	.loc	9 87 13 is_stmt 1               # x264_src/common/rectangle.h:87:13
	addl	%r10d, %r10d
	xorl	%r11d, %r11d
.Ltmp2040:
.LBB5_86:                               # %do.body.i.i1009.prol
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebx
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_div, DW_OP_consts 18446744073709551614, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r11d, $esi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $r8
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, (%r8)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 8(%r8)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 32(%r8)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 40(%r8)
.Ltmp2041:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_div, DW_OP_consts 18446744073709551614, DW_OP_mul, DW_OP_consts 18446744073709551614, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $r11d, $esi
	.loc	9 86 19                         # x264_src/common/rectangle.h:86:19
	addq	$64, %r8
.Ltmp2042:
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $r8
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	addl	$2, %r11d
.Ltmp2043:
	cmpl	%r11d, %r10d
	jne	.LBB5_86
.Ltmp2044:
# %bb.87:                               # %do.body.i.i1009.prol.loopexit.loopexit
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $ebx
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $r8
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 79 13                         # x264_src/common/rectangle.h:79:13
	subl	%r11d, %esi
	movl	%ebx, %r11d
	movl	12(%rsp), %ebx                  # 4-byte Reload
.Ltmp2045:
.LBB5_88:                               # %do.body.i.i1009.prol.loopexit
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	cmpl	$6, %r9d
	movl	8(%rsp), %r10d                  # 4-byte Reload
	jb	.LBB5_99
.Ltmp2046:
.LBB5_89:                               # %do.body.i.i1009
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_plus_uconst 64, DW_OP_deref, DW_OP_constu 18446744073709551612, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $esi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $r8
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, (%r8)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 8(%r8)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 32(%r8)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 40(%r8)
.Ltmp2047:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_constu 2, DW_OP_minus, DW_OP_stack_value] $esi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- [DW_OP_plus_uconst 64, DW_OP_stack_value] $r8
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, 64(%r8)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 72(%r8)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 96(%r8)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 104(%r8)
.Ltmp2048:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_constu 4, DW_OP_minus, DW_OP_stack_value] $esi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- [DW_OP_plus_uconst 128, DW_OP_stack_value] $r8
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, 128(%r8)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 136(%r8)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 160(%r8)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 168(%r8)
.Ltmp2049:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_constu 6, DW_OP_minus, DW_OP_stack_value] $esi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- [DW_OP_plus_uconst 192, DW_OP_stack_value] $r8
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, 192(%r8)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 200(%r8)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 224(%r8)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 232(%r8)
	.loc	9 86 19                         # x264_src/common/rectangle.h:86:19
	addq	$256, %r8                       # imm = 0x100
.Ltmp2050:
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $r8
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	addl	$-8, %esi
.Ltmp2051:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $esi
	.loc	9 0 13 is_stmt 0                # x264_src/common/rectangle.h:0:13
	jne	.LBB5_89
.Ltmp2052:
.LBB5_99:                               # %x264_macroblock_cache_mv.exit1018
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	.loc	0 1071 27 is_stmt 1             # x264_src/encoder/me.c:1071:27
	movswl	128(%r15), %esi
	movl	%r10d, %edi
	subl	%esi, %edi
	movl	%edi, %esi
	negl	%esi
	cmovsl	%edi, %esi
	cmpl	$33, %esi
	movl	$33, %r8d
	cmovael	%r8d, %esi
	.loc	0 1071 64 is_stmt 0             # x264_src/encoder/me.c:1071:64
	movswl	130(%r15), %edi
	movl	%r11d, %r9d
	subl	%edi, %r9d
	movl	%r9d, %edi
	negl	%edi
	cmovsl	%r9d, %edi
	cmpl	$33, %edi
	cmovael	%r8d, %edi
.Ltmp2053:
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- undef
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- undef
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:width <- undef
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 2
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	.loc	9 30 9 is_stmt 1                # x264_src/common/rectangle.h:30:9
	cmpl	$7, %ecx
	ja	.LBB5_120
.Ltmp2054:
# %bb.100:                              # %x264_macroblock_cache_mv.exit1018
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	.loc	9 0 9 is_stmt 0                 # x264_src/common/rectangle.h:0:9
	movq	16(%rsp), %r8                   # 8-byte Reload
	addq	$25520, %r8                     # imm = 0x63B0
	shll	$8, %edi
	orl	%esi, %edi
.Ltmp2055:
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $di
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $di
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $di
	leaq	(%r8,%rax,2), %rsi
	addq	$80, %rsi
.Ltmp2056:
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	movl	%edi, %r8d
	shll	$16, %r8d
	addl	%edi, %r8d
.Ltmp2057:
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	imulq	%r8, %rdx
.Ltmp2058:
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	.loc	9 30 9                          # x264_src/common/rectangle.h:30:9
	movl	%ecx, %ecx
	jmpq	*.LJTI5_1(,%rcx,8)
.Ltmp2059:
.LBB5_111:                              # %if.then.i.i1056
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $di
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	.loc	9 32 22 is_stmt 1               # x264_src/common/rectangle.h:32:22
	movw	%di, (%rsi)
.Ltmp2060:
	.loc	9 33 15                         # x264_src/common/rectangle.h:33:15
	cmpl	$1, %r14d
.Ltmp2061:
	.loc	9 33 13 is_stmt 0               # x264_src/common/rectangle.h:33:13
	je	.LBB5_120
.Ltmp2062:
# %bb.112:                              # %if.end.i.i1058
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $di
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	.loc	9 34 22 is_stmt 1               # x264_src/common/rectangle.h:34:22
	movw	%di, 16(%rsi)
.Ltmp2063:
	.loc	9 35 15                         # x264_src/common/rectangle.h:35:15
	cmpl	$2, %r14d
.Ltmp2064:
	.loc	9 35 13 is_stmt 0               # x264_src/common/rectangle.h:35:13
	je	.LBB5_120
.Ltmp2065:
# %bb.113:                              # %if.end30.i.i1061
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $di
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	.loc	9 36 22 is_stmt 1               # x264_src/common/rectangle.h:36:22
	movw	%di, 32(%rsi)
	.loc	9 37 22                         # x264_src/common/rectangle.h:37:22
	movw	%di, 48(%rsi)
	.loc	9 38 5                          # x264_src/common/rectangle.h:38:5
	jmp	.LBB5_120
.Ltmp2066:
.LBB5_117:                              # %if.then63.i.i1040
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $di
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	.loc	9 52 26                         # x264_src/common/rectangle.h:52:26
	movq	%rdx, (%rsi)
.Ltmp2067:
	.loc	9 53 19                         # x264_src/common/rectangle.h:53:19
	cmpl	$1, %r14d
.Ltmp2068:
	.loc	9 53 17 is_stmt 0               # x264_src/common/rectangle.h:53:17
	je	.LBB5_120
.Ltmp2069:
# %bb.118:                              # %if.end70.i.i1042
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $di
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	.loc	9 54 26 is_stmt 1               # x264_src/common/rectangle.h:54:26
	movq	%rdx, 16(%rsi)
.Ltmp2070:
	.loc	9 55 19                         # x264_src/common/rectangle.h:55:19
	cmpl	$2, %r14d
.Ltmp2071:
	.loc	9 55 17 is_stmt 0               # x264_src/common/rectangle.h:55:17
	je	.LBB5_120
.Ltmp2072:
# %bb.119:                              # %if.end77.i.i1045
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $di
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	.loc	9 56 26 is_stmt 1               # x264_src/common/rectangle.h:56:26
	movq	%rdx, 32(%rsi)
	.loc	9 57 26                         # x264_src/common/rectangle.h:57:26
	movq	%rdx, 48(%rsi)
	jmp	.LBB5_120
.Ltmp2073:
.LBB5_114:                              # %if.then39.i.i1048
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $di
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	.loc	9 41 22                         # x264_src/common/rectangle.h:41:22
	movl	%r8d, (%rsi)
.Ltmp2074:
	.loc	9 42 15                         # x264_src/common/rectangle.h:42:15
	cmpl	$1, %r14d
.Ltmp2075:
	.loc	9 42 13 is_stmt 0               # x264_src/common/rectangle.h:42:13
	je	.LBB5_120
.Ltmp2076:
# %bb.115:                              # %if.end46.i.i1050
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $di
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	.loc	9 43 22 is_stmt 1               # x264_src/common/rectangle.h:43:22
	movl	%r8d, 16(%rsi)
.Ltmp2077:
	.loc	9 44 15                         # x264_src/common/rectangle.h:44:15
	cmpl	$2, %r14d
.Ltmp2078:
	.loc	9 44 13 is_stmt 0               # x264_src/common/rectangle.h:44:13
	je	.LBB5_120
.Ltmp2079:
# %bb.116:                              # %if.end53.i.i1053
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $di
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	.loc	9 45 22 is_stmt 1               # x264_src/common/rectangle.h:45:22
	movl	%r8d, 32(%rsi)
	.loc	9 46 22                         # x264_src/common/rectangle.h:46:22
	movl	%r8d, 48(%rsi)
	.loc	9 47 5                          # x264_src/common/rectangle.h:47:5
	jmp	.LBB5_120
.Ltmp2080:
.LBB5_101:                              # %do.body.i.i1031.preheader
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $di
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	.loc	9 79 13                         # x264_src/common/rectangle.h:79:13
	leal	-2(%r14), %ecx
	cmpl	$5, %ecx
	jbe	.LBB5_102
.Ltmp2081:
# %bb.108:                              # %vector.ph1157
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:amvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $di
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $di
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	shrl	%ecx
	incl	%ecx
	movl	%ecx, %edi
.Ltmp2082:
	andl	$-4, %edi
	movq	%rdi, %r8
.Ltmp2083:
	shlq	$5, %r8
	addq	%r8, %rsi
.Ltmp2084:
	subl	%edi, %r14d
.Ltmp2085:
	subl	%edi, %r14d
	movq	16(%rsp), %r8                   # 8-byte Reload
	leaq	(%r8,%rax,2), %rax
	addq	$25720, %rax                    # imm = 0x6478
	movq	%rdi, %r8
.Ltmp2086:
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
.LBB5_109:                              # %vector.body1165
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdx, -120(%rax)
	movq	%rdx, -88(%rax)
	movq	%rdx, -56(%rax)
	movq	%rdx, -24(%rax)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdx, -112(%rax)
	movq	%rdx, -80(%rax)
	movq	%rdx, -48(%rax)
	movq	%rdx, -16(%rax)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdx, -104(%rax)
	movq	%rdx, -72(%rax)
	movq	%rdx, -40(%rax)
	movq	%rdx, -8(%rax)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdx, -96(%rax)
	movq	%rdx, -64(%rax)
	movq	%rdx, -32(%rax)
	movq	%rdx, (%rax)
	subq	$-128, %rax
	addq	$-4, %r8
	jne	.LBB5_109
.Ltmp2087:
# %bb.110:                              # %middle.block1154
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	cmpl	%ecx, %edi
	je	.LBB5_120
.Ltmp2088:
.LBB5_102:                              # %do.body.i.i1031.preheader1177
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	.loc	9 79 13                         # x264_src/common/rectangle.h:79:13
	leal	-2(%r14), %eax
	movl	%eax, %ecx
	shrl	%ecx
	incl	%ecx
	andl	$3, %ecx
	je	.LBB5_106
.Ltmp2089:
# %bb.103:                              # %do.body.i.i1031.prol.preheader
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	addl	%ecx, %ecx
	xorl	%edi, %edi
.Ltmp2090:
.LBB5_104:                              # %do.body.i.i1031.prol
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_div, DW_OP_consts 18446744073709551614, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $edi, $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdx, (%rsi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdx, 8(%rsi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdx, 16(%rsi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdx, 24(%rsi)
.Ltmp2091:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_div, DW_OP_consts 18446744073709551614, DW_OP_mul, DW_OP_consts 18446744073709551614, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $edi, $r14d
	.loc	9 86 19                         # x264_src/common/rectangle.h:86:19
	addq	$32, %rsi
.Ltmp2092:
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	addl	$2, %edi
.Ltmp2093:
	cmpl	%edi, %ecx
	jne	.LBB5_104
.Ltmp2094:
# %bb.105:                              # %do.body.i.i1031.prol.loopexit.loopexit
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	.loc	9 79 13                         # x264_src/common/rectangle.h:79:13
	subl	%edi, %r14d
.Ltmp2095:
.LBB5_106:                              # %do.body.i.i1031.prol.loopexit
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	cmpl	$6, %eax
	jb	.LBB5_120
.Ltmp2096:
.LBB5_107:                              # %do.body.i.i1031
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_constu 18446744073709551614, DW_OP_and, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- 1
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdx, (%rsi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdx, 8(%rsi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdx, 16(%rsi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdx, 24(%rsi)
.Ltmp2097:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_constu 2, DW_OP_minus, DW_OP_stack_value] $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- [DW_OP_plus_uconst 32, DW_OP_stack_value] $rsi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdx, 32(%rsi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdx, 40(%rsi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdx, 48(%rsi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdx, 56(%rsi)
.Ltmp2098:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_constu 4, DW_OP_minus, DW_OP_stack_value] $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- [DW_OP_plus_uconst 64, DW_OP_stack_value] $rsi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdx, 64(%rsi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdx, 72(%rsi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdx, 80(%rsi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdx, 88(%rsi)
.Ltmp2099:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_constu 6, DW_OP_minus, DW_OP_stack_value] $r14d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdx, 96(%rsi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdx, 104(%rsi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdx, 112(%rsi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdx, 120(%rsi)
	.loc	9 86 19                         # x264_src/common/rectangle.h:86:19
	subq	$-128, %rsi
.Ltmp2100:
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	addl	$-8, %r14d
.Ltmp2101:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r14d
	.loc	9 0 13 is_stmt 0                # x264_src/common/rectangle.h:0:13
	jne	.LBB5_107
.Ltmp2102:
.LBB5_120:                              # %if.end646
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_plus_uconst 184] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:cache0_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 56, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:cache1_mv <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_plus_uconst 25360, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_constu 4, DW_OP_mul, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bw <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bh <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pix <- [DW_OP_plus_uconst 272, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:pixv <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0x <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	#DEBUG_VALUE: x264_me_refine_bidir:bm1x <- $r10d
	#DEBUG_VALUE: x264_me_refine_bidir:bcost <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bcostrd <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm1y <- $r11d
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0x <- [DW_OP_plus_uconst 256, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m0y <- [DW_OP_plus_uconst 264, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1x <- [DW_OP_plus_uconst 240, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:p_cost_m1y <- [DW_OP_plus_uconst 248, DW_OP_deref] $rsp
	.loc	0 1075 15 is_stmt 1             # x264_src/encoder/me.c:1075:15
	movw	%bx, 140(%r12)
	.loc	0 1076 15                       # x264_src/encoder/me.c:1076:15
	movw	%r13w, 142(%r12)
	.loc	0 1077 15                       # x264_src/encoder/me.c:1077:15
	movw	%r10w, 140(%r15)
	.loc	0 1078 15                       # x264_src/encoder/me.c:1078:15
	movw	%r11w, 142(%r15)
.Ltmp2103:
.LBB5_121:                              # %cleanup659
	#DEBUG_VALUE: x264_me_refine_bidir:h <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_me_refine_bidir:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir:m1 <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_refine_bidir:i_weight <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:i8 <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_bidir:i_lambda2 <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_bidir:mv0y_offset <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:mv1y_offset <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_bidir:bm0y <- $r13d
	.loc	0 1079 1 epilogue_begin         # x264_src/encoder/me.c:1079:1
	addq	$7960, %rsp                     # imm = 0x1F18
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp2104:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2105:
.Lfunc_end5:
	.size	x264_me_refine_bidir, .Lfunc_end5-x264_me_refine_bidir
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3, 0x0
.LJTI5_0:
	.quad	.LBB5_70
	.quad	.LBB5_73
	.quad	.LBB5_79
	.quad	.LBB5_76
	.quad	.LBB5_79
	.quad	.LBB5_79
	.quad	.LBB5_79
	.quad	.LBB5_59
.LJTI5_1:
	.quad	.LBB5_111
	.quad	.LBB5_114
	.quad	.LBB5_120
	.quad	.LBB5_117
	.quad	.LBB5_120
	.quad	.LBB5_120
	.quad	.LBB5_120
	.quad	.LBB5_101
	.file	10 "x264_src" "x264.h" md5 0x0b04871e4f52d5a4d8833c501cba2584
	.file	11 "x264_src/common" "bs.h" md5 0x5e3e135f4389fadb006d4bc4f2055a86
	.file	12 "x264_src/common" "set.h" md5 0x36bc2db0356ac829288e85d371259e00
	.file	13 "x264_src/common" "mc.h" md5 0x04d0fbb98b637fe4174e4cc20d723861
	.file	14 "x264_src/common" "cabac.h" md5 0x22d062fb0f207ca9dcf17e0003a54ffb
	.file	15 "x264_src/common" "frame.h" md5 0x4a274a9291201f03b4af1f57e6a86f6f
	.file	16 "x264_src/common" "predict.h" md5 0x5f9c3dfea82ca04aa9f99900c2f3609a
	.file	17 "/home/yjs/workspace" "GPUISel-llvm/build/lib/clang/19/include/__stddef_size_t.h" md5 0x2c44e821a2b1951cde2eb0fb2e656867
	.file	18 "x264_src/common" "dct.h" md5 0xd983c98245ed7221137d0c4902e9385f
	.file	19 "x264_src/common" "quant.h" md5 0xd1558a6947b2031223cf5868b45335f7
                                        # -- End function
	.text
	.globl	x264_me_refine_bidir_rd         # -- Begin function x264_me_refine_bidir_rd
	.p2align	4, 0x90
	.type	x264_me_refine_bidir_rd,@function
x264_me_refine_bidir_rd:                # @x264_me_refine_bidir_rd
.Lfunc_begin6:
	.loc	0 1087 0                        # x264_src/encoder/me.c:1087:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_me_refine_bidir_rd:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_bidir_rd:m0 <- $rsi
	#DEBUG_VALUE: x264_me_refine_bidir_rd:m1 <- $rdx
	#DEBUG_VALUE: x264_me_refine_bidir_rd:i_weight <- $ecx
	#DEBUG_VALUE: x264_me_refine_bidir_rd:i8 <- $r8d
	#DEBUG_VALUE: x264_me_refine_bidir_rd:i_lambda2 <- $r9d
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp2106:
	.loc	0 1090 21 prologue_end          # x264_src/encoder/me.c:1090:21
	movl	$1, 17420(%rdi)
	.loc	0 1091 5                        # x264_src/encoder/me.c:1091:5
	movl	$1, (%rsp)
	callq	x264_me_refine_bidir
.Ltmp2107:
	#DEBUG_VALUE: x264_me_refine_bidir_rd:i_lambda2 <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: x264_me_refine_bidir_rd:i8 <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_bidir_rd:i_weight <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_me_refine_bidir_rd:m1 <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_me_refine_bidir_rd:m0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_me_refine_bidir_rd:h <- $rbx
	.loc	0 1092 21                       # x264_src/encoder/me.c:1092:21
	movl	$0, 17420(%rbx)
	.loc	0 1093 1 epilogue_begin         # x264_src/encoder/me.c:1093:1
	addq	$16, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
.Ltmp2108:
	#DEBUG_VALUE: x264_me_refine_bidir_rd:h <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 8
	retq
.Ltmp2109:
.Lfunc_end6:
	.size	x264_me_refine_bidir_rd, .Lfunc_end6-x264_me_refine_bidir_rd
	.cfi_endproc
                                        # -- End function
	.globl	x264_me_refine_qpel_rd          # -- Begin function x264_me_refine_qpel_rd
	.p2align	4, 0x90
	.type	x264_me_refine_qpel_rd,@function
x264_me_refine_qpel_rd:                 # @x264_me_refine_qpel_rd
.Lfunc_begin7:
	.loc	0 1126 0                        # x264_src/encoder/me.c:1126:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- $rsi
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- $edx
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- $ecx
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- $r8d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$264, %rsp                      # imm = 0x108
	.cfi_def_cfa_offset 320
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%edx, 108(%rsp)                 # 4-byte Spill
.Ltmp2110:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	movq	%rsi, %r14
.Ltmp2111:
	.loc	0 1127 25 prologue_end          # x264_src/encoder/me.c:1127:25
	movslq	%r8d, %rax
	movl	%ecx, 84(%rsp)                  # 4-byte Spill
.Ltmp2112:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	.loc	0 1127 48 is_stmt 0             # x264_src/encoder/me.c:1127:48
	movslq	%ecx, %rdx
	.loc	0 1127 25                       # x264_src/encoder/me.c:1127:25
	leaq	(%rax,%rax,4), %rax
	movq	%rax, 240(%rsp)                 # 8-byte Spill
	movq	%rax, %rcx
	shlq	$5, %rcx
.Ltmp2113:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- undef
	.loc	0 1129 39 is_stmt 1             # x264_src/encoder/me.c:1129:39
	movslq	(%rsi), %rax
.Ltmp2114:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- undef
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- undef
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_pixel <- undef
	.loc	0 0 39 is_stmt 0                # x264_src/encoder/me.c:0:39
	movq	%rax, 144(%rsp)                 # 8-byte Spill
	.loc	0 1132 52 is_stmt 1             # x264_src/encoder/me.c:1132:52
	movl	20(%rsi), %eax
	.loc	0 1132 47 is_stmt 0             # x264_src/encoder/me.c:1132:47
	testl	%eax, 16436(%rdi)
	.loc	0 1132 28                       # x264_src/encoder/me.c:1132:28
	je	.LBB7_1
.Ltmp2115:
# %bb.2:                                # %cond.true
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- $r14
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- $r8d
	.loc	0 1132 67                       # x264_src/encoder/me.c:1132:67
	movl	16388(%rdi), %eax
	.loc	0 1132 78                       # x264_src/encoder/me.c:1132:78
	andl	$1, %eax
	.loc	0 1132 81                       # x264_src/encoder/me.c:1132:81
	leal	-2(,%rax,4), %eax
	movq	%rax, 136(%rsp)                 # 8-byte Spill
	jmp	.LBB7_3
.Ltmp2116:
.LBB7_1:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- $r14
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- $r8d
	.loc	0 0 81                          # x264_src/encoder/me.c:0:81
	movq	$0, 136(%rsp)                   # 8-byte Folded Spill
.Ltmp2117:
.LBB7_3:                                # %cond.end
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- $rdi
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- $r14
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- $r8d
	movslq	x264_scan8(,%rdx,4), %rbx
	movq	%rcx, 256(%rsp)                 # 8-byte Spill
	leaq	(%rdi,%rcx), %r13
	addq	$25200, %r13                    # imm = 0x6270
	movq	144(%rsp), %rcx                 # 8-byte Reload
	movl	x264_pixel_size(,%rcx,8), %eax
.Ltmp2118:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- $eax
	movq	%rax, 120(%rsp)                 # 8-byte Spill
	movl	x264_pixel_size+4(,%rcx,8), %r10d
.Ltmp2119:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- 1152921504606846976
	.loc	0 1135 15 is_stmt 1             # x264_src/encoder/me.c:1135:15
	movswl	140(%r14), %eax
.Ltmp2120:
	.loc	0 0 15 is_stmt 0                # x264_src/encoder/me.c:0:15
	movl	%eax, 12(%rsp)                  # 4-byte Spill
.Ltmp2121:
	.loc	0 1160 5 is_stmt 1              # x264_src/encoder/me.c:1160:5
	movslq	%eax, %r11
.Ltmp2122:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	.loc	0 1136 15                       # x264_src/encoder/me.c:1136:15
	movswl	142(%r14), %eax
	movq	%rax, 32(%rsp)                  # 8-byte Spill
.Ltmp2123:
	.loc	0 1160 5                        # x264_src/encoder/me.c:1160:5
	movslq	%eax, %r12
.Ltmp2124:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 1148 42                       # x264_src/encoder/me.c:1148:42
	movzwl	block_idx_xy_fdec(%rdx,%rdx), %eax
	.loc	0 1148 22 is_stmt 0             # x264_src/encoder/me.c:1148:22
	addq	21392(%rdi), %rax
.Ltmp2125:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- $rax
	.loc	0 0 22                          # x264_src/encoder/me.c:0:22
	movq	%rax, 184(%rsp)                 # 8-byte Spill
.Ltmp2126:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	.loc	0 1149 51 is_stmt 1             # x264_src/encoder/me.c:1149:51
	movl	%edx, %eax
	shll	$4, %eax
	andl	$-128, %eax
	.loc	0 1149 67 is_stmt 0             # x264_src/encoder/me.c:1149:67
	movl	%edx, %ecx
	andl	$4, %ecx
	.loc	0 1149 63                       # x264_src/encoder/me.c:1149:63
	orl	%eax, %ecx
	.loc	0 1149 22                       # x264_src/encoder/me.c:1149:22
	movslq	%ecx, %rax
	movq	21400(%rdi), %rcx
	addq	%rax, %rcx
.Ltmp2127:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixu <- undef
	.loc	0 0 22                          # x264_src/encoder/me.c:0:22
	movq	%rcx, 152(%rsp)                 # 8-byte Spill
	.loc	0 1150 22 is_stmt 1             # x264_src/encoder/me.c:1150:22
	addq	21408(%rdi), %rax
.Ltmp2128:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- $rax
	.loc	0 0 22 is_stmt 0                # x264_src/encoder/me.c:0:22
	movq	%rax, 160(%rsp)                 # 8-byte Spill
.Ltmp2129:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	movq	%rdi, 24(%rsp)                  # 8-byte Spill
.Ltmp2130:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	.loc	0 1152 21 is_stmt 1             # x264_src/encoder/me.c:1152:21
	movl	$1, 17420(%rdi)
	movq	%rdx, 248(%rsp)                 # 8-byte Spill
	testl	%edx, %edx
	movq	%r10, 48(%rsp)                  # 8-byte Spill
.Ltmp2131:
	.loc	0 1154 35                       # x264_src/encoder/me.c:1154:35
	je	.LBB7_6
.Ltmp2132:
# %bb.4:                                # %cond.end
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- $r14
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- 1152921504606846976
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	cmpl	$0, (%r14)
	je	.LBB7_6
.Ltmp2133:
# %bb.5:                                # %if.then
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- $r14
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- 1152921504606846976
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	.loc	0 0 35 is_stmt 0                # x264_src/encoder/me.c:0:35
	movq	120(%rsp), %rax                 # 8-byte Reload
	.loc	0 1155 46 is_stmt 1             # x264_src/encoder/me.c:1155:46
	movl	%eax, %ecx
	sarl	$2, %ecx
	.loc	0 1155 54 is_stmt 0             # x264_src/encoder/me.c:1155:54
	leaq	128(%r14), %rax
	movq	24(%rsp), %rdi                  # 8-byte Reload
	.loc	0 1155 9                        # x264_src/encoder/me.c:1155:9
	movl	%r8d, %esi
	movl	84(%rsp), %edx                  # 4-byte Reload
	movq	%rax, %r8
.Ltmp2134:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- $esi
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	%r11, %r15
	.loc	0 1155 9                        # x264_src/encoder/me.c:1155:9
	callq	x264_mb_predict_mv@PLT
.Ltmp2135:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	%r15, %r11
	movq	48(%rsp), %r10                  # 8-byte Reload
.Ltmp2136:
.LBB7_6:                                # %if.end
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- $r14
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- 1152921504606846976
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	movq	%r11, 176(%rsp)                 # 8-byte Spill
	leaq	(,%rbx,4), %rax
	addq	%r13, %rax
.Ltmp2137:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- $rax
	movq	%rax, 168(%rsp)                 # 8-byte Spill
	.loc	0 1156 11 is_stmt 1             # x264_src/encoder/me.c:1156:11
	movswq	128(%r14), %rax
.Ltmp2138:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- $eax
	.loc	0 1157 11                       # x264_src/encoder/me.c:1157:11
	movswq	130(%r14), %rcx
.Ltmp2139:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- $ecx
	.loc	0 1158 21                       # x264_src/encoder/me.c:1158:21
	movq	8(%r14), %r15
	movq	%rax, 16(%rsp)                  # 8-byte Spill
.Ltmp2140:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 1158 31 is_stmt 0             # x264_src/encoder/me.c:1158:31
	addq	%rax, %rax
	movq	%r15, %rbx
	subq	%rax, %rbx
.Ltmp2141:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- $rbx
	.loc	0 0 31                          # x264_src/encoder/me.c:0:31
	movq	%rcx, 72(%rsp)                  # 8-byte Spill
.Ltmp2142:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 1159 31 is_stmt 1             # x264_src/encoder/me.c:1159:31
	movq	%rcx, %rax
	addq	%rcx, %rax
	movq	%r15, 112(%rsp)                 # 8-byte Spill
	subq	%rax, %r15
.Ltmp2143:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- $r15
	.loc	0 1160 5                        # x264_src/encoder/me.c:1160:5
	leaq	32(%r14), %rdx
	movl	120(%r14), %ecx
	subq	$8, %rsp
.Ltmp2144:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 5 is_stmt 0                 # x264_src/encoder/me.c:0:5
	movq	192(%rsp), %rbp                 # 8-byte Reload
	.loc	0 1160 5                        # x264_src/encoder/me.c:1160:5
	movq	%rbp, %rdi
	movl	$32, %esi
	movq	%rdx, 208(%rsp)                 # 8-byte Spill
	movl	%r11d, %r8d
	movl	%r12d, %r9d
	pushq	24(%r14)
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	pushq	144(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	movq	56(%rsp), %r13                  # 8-byte Reload
	callq	*32616(%r13)
.Ltmp2145:
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movq	88(%r14), %rdi
	movl	$16, %esi
	movq	%rbp, %rdx
	movl	$32, %ecx
	movq	144(%rsp), %rax                 # 8-byte Reload
	callq	*31816(%r13,%rax,8)
.Ltmp2146:
	.loc	0 0 5                           # x264_src/encoder/me.c:0:5
	movq	%rbx, 224(%rsp)                 # 8-byte Spill
.Ltmp2147:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	movq	176(%rsp), %rcx                 # 8-byte Reload
	.loc	0 1160 5                        # x264_src/encoder/me.c:1160:5
	movzwl	(%rbx,%rcx,2), %ecx
	movq	%r15, 176(%rsp)                 # 8-byte Spill
.Ltmp2148:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	movzwl	(%r15,%r12,2), %r13d
	addl	%ecx, %r13d
	addl	%eax, %r13d
.Ltmp2149:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 0 5                           # x264_src/encoder/me.c:0:5
	movq	%r14, 40(%rsp)                  # 8-byte Spill
.Ltmp2150:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	.loc	0 1161 20 is_stmt 1             # x264_src/encoder/me.c:1161:20
	cmpl	$0, (%r14)
.Ltmp2151:
	.loc	0 1161 9 is_stmt 0              # x264_src/encoder/me.c:1161:9
	je	.LBB7_12
.Ltmp2152:
# %bb.7:                                # %if.then88
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- 1152921504606846976
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 1162 9 is_stmt 1              # x264_src/encoder/me.c:1162:9
	testl	%r13d, %r13d
	movl	12(%rsp), %ebp                  # 4-byte Reload
	movq	32(%rsp), %r15                  # 8-byte Reload
.Ltmp2153:
	.loc	0 1162 9 is_stmt 0              # x264_src/encoder/me.c:1162:9
	js	.LBB7_8
.Ltmp2154:
# %bb.9:                                # %if.then92
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- 1152921504606846976
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: pack16to32_mask:a <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: pack16to32_mask:b <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	6 345 13 is_stmt 1              # x264_src/common/macroblock.h:345:13
	movzwl	%bp, %eax
	.loc	6 345 26 is_stmt 0              # x264_src/common/macroblock.h:345:26
	movl	%r15d, %ecx
	shll	$16, %ecx
	.loc	6 345 22                        # x264_src/common/macroblock.h:345:22
	orl	%eax, %ecx
	movq	168(%rsp), %rax                 # 8-byte Reload
.Ltmp2155:
	.loc	0 1162 9 is_stmt 1              # x264_src/encoder/me.c:1162:9
	movl	%ecx, (%rax)
	movq	40(%rsp), %rax                  # 8-byte Reload
.Ltmp2156:
	.loc	0 1162 9 is_stmt 0              # x264_src/encoder/me.c:1162:9
	movl	(%rax), %ecx
	cmpl	$3, %ecx
	movq	24(%rsp), %rbx                  # 8-byte Reload
.Ltmp2157:
	.loc	0 1162 9                        # x264_src/encoder/me.c:1162:9
	jg	.LBB7_11
.Ltmp2158:
# %bb.10:                               # %if.then97
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- 1152921504606846976
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	40(%rsp), %r14                  # 8-byte Reload
.Ltmp2159:
	.loc	0 1162 9                        # x264_src/encoder/me.c:1162:9
	movq	64(%r14), %rdx
	movl	124(%r14), %ecx
	movq	136(%rsp), %rax                 # 8-byte Reload
	leal	(%rax,%r15), %ebx
	movq	120(%rsp), %r12                 # 8-byte Reload
                                        # kill: def $r12d killed $r12d killed $r12 def $r12
	sarl	%r12d
	movq	48(%rsp), %r15                  # 8-byte Reload
                                        # kill: def $r15d killed $r15d killed $r15 def $r15
	sarl	%r15d
	movq	152(%rsp), %rdi                 # 8-byte Reload
	movl	$32, %esi
	movl	%ebp, %r8d
	movl	%ebx, %r9d
	pushq	%r15
.Ltmp2160:
	.cfi_adjust_cfa_offset 8
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	movq	40(%rsp), %rax                  # 8-byte Reload
	callq	*32632(%rax)
.Ltmp2161:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movq	72(%r14), %rdx
	movl	124(%r14), %ecx
	movq	160(%rsp), %rdi                 # 8-byte Reload
	movl	$32, %esi
	movl	%ebp, %r8d
	movl	%ebx, %r9d
	pushq	%r15
	movq	40(%rsp), %r15                  # 8-byte Reload
	.cfi_adjust_cfa_offset 8
	pushq	%r12
	movq	40(%rsp), %rbx                  # 8-byte Reload
	.cfi_adjust_cfa_offset 8
	callq	*32632(%rbx)
.Ltmp2162:
	addq	$16, %rsp
.Ltmp2163:
	.cfi_adjust_cfa_offset -16
	.loc	0 1162 9                        # x264_src/encoder/me.c:1162:9
	movl	(%r14), %ecx
.Ltmp2164:
.LBB7_11:                               # %if.end115
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- 1152921504606846976
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	movq	%rbx, %rdi
	movl	108(%rsp), %esi                 # 4-byte Reload
	movl	84(%rsp), %edx                  # 4-byte Reload
	callq	x264_rd_cost_part@PLT
.Ltmp2165:
	#DEBUG_VALUE: cost <- $rax
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movabsq	$1152921504606846976, %rcx      # imm = 0x1000000000000000
	.loc	0 1162 9                        # x264_src/encoder/me.c:1162:9
	cmpq	%rcx, %rax
	cmovbq	%rax, %rcx
.Ltmp2166:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- $rcx
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	%rcx, 96(%rsp)                  # 8-byte Spill
.Ltmp2167:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	.loc	0 1162 9                        # x264_src/encoder/me.c:1162:9
	jmp	.LBB7_13
.Ltmp2168:
.LBB7_12:                               # %if.else
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- 1152921504606846976
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	40(%rsp), %rax                  # 8-byte Reload
	.loc	0 1164 20 is_stmt 1             # x264_src/encoder/me.c:1164:20
	movslq	136(%rax), %rax
.Ltmp2169:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- $rax
	.loc	0 0 20 is_stmt 0                # x264_src/encoder/me.c:0:20
	movq	%rax, 96(%rsp)                  # 8-byte Spill
.Ltmp2170:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	movq	24(%rsp), %rbx                  # 8-byte Reload
	movl	12(%rsp), %ebp                  # 4-byte Reload
	movq	32(%rsp), %r15                  # 8-byte Reload
	jmp	.LBB7_13
.Ltmp2171:
.LBB7_8:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- 1152921504606846976
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	movabsq	$1152921504606846976, %rax      # imm = 0x1000000000000000
	movq	%rax, 96(%rsp)                  # 8-byte Spill
	movq	24(%rsp), %rbx                  # 8-byte Reload
.Ltmp2172:
.LBB7_13:                               # %if.end125
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	.loc	0 1167 14 is_stmt 1             # x264_src/encoder/me.c:1167:14
	movl	%ebp, %eax
	movq	16(%rsp), %r8                   # 8-byte Reload
	xorl	%r8d, %eax
	movl	%r15d, %ecx
	movq	72(%rsp), %r9                   # 8-byte Reload
	xorl	%r9d, %ecx
	.loc	0 1167 21 is_stmt 0             # x264_src/encoder/me.c:1167:21
	orw	%cx, %ax
	movq	48(%rsp), %r11                  # 8-byte Reload
	je	.LBB7_14
.Ltmp2173:
# %bb.16:                               # %land.lhs.true130
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 1168 16 is_stmt 1             # x264_src/encoder/me.c:1168:16
	cmpl	%r8d, 16456(%rbx)
	.loc	0 1168 40 is_stmt 0             # x264_src/encoder/me.c:1168:40
	jg	.LBB7_14
.Ltmp2174:
# %bb.17:                               # %land.lhs.true135
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 1168 47                       # x264_src/encoder/me.c:1168:47
	cmpl	%r8d, 16464(%rbx)
	.loc	0 1169 9 is_stmt 1              # x264_src/encoder/me.c:1169:9
	jl	.LBB7_14
.Ltmp2175:
# %bb.18:                               # %land.lhs.true140
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 1169 16 is_stmt 0             # x264_src/encoder/me.c:1169:16
	cmpl	%r9d, 16460(%rbx)
	.loc	0 1169 40                       # x264_src/encoder/me.c:1169:40
	jg	.LBB7_14
.Ltmp2176:
# %bb.19:                               # %land.lhs.true146
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 1169 47                       # x264_src/encoder/me.c:1169:47
	cmpl	%r9d, 16468(%rbx)
.Ltmp2177:
	.loc	0 1167 9 is_stmt 1              # x264_src/encoder/me.c:1167:9
	jge	.LBB7_20
.Ltmp2178:
.LBB7_14:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/me.c:0:9
	movl	%r9d, %r12d
	movl	%r8d, %edx
	movl	%r15d, %r10d
.Ltmp2179:
.LBB7_15:                               # %if.end230
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	movl	%ebp, %eax
	movq	%rax, 16(%rsp)                  # 8-byte Spill
.Ltmp2180:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- $edx
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- $edx
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- $r12d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 1182 15 is_stmt 1             # x264_src/encoder/me.c:1182:15
	movl	16460(%rbx), %eax
	.loc	0 1182 36 is_stmt 0             # x264_src/encoder/me.c:1182:36
	addl	$3, %eax
	.loc	0 1182 13                       # x264_src/encoder/me.c:1182:13
	cmpl	%eax, %r10d
	.loc	0 1182 40                       # x264_src/encoder/me.c:1182:40
	jl	.LBB7_122
.Ltmp2181:
.LBB7_31:                               # %lor.lhs.false237
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- $edx
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- $r12d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 1182 49                       # x264_src/encoder/me.c:1182:49
	movl	16468(%rbx), %eax
	.loc	0 1182 70                       # x264_src/encoder/me.c:1182:70
	addl	$-3, %eax
	.loc	0 1182 47                       # x264_src/encoder/me.c:1182:47
	cmpl	%eax, %r10d
	.loc	0 1182 74                       # x264_src/encoder/me.c:1182:74
	jg	.LBB7_122
.Ltmp2182:
# %bb.32:                               # %lor.lhs.false244
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- $edx
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- $r12d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 1183 15 is_stmt 1             # x264_src/encoder/me.c:1183:15
	movl	16456(%rbx), %eax
	.loc	0 1183 36 is_stmt 0             # x264_src/encoder/me.c:1183:36
	addl	$3, %eax
	.loc	0 1183 13                       # x264_src/encoder/me.c:1183:13
	cmpl	%eax, 16(%rsp)                  # 4-byte Folded Reload
	.loc	0 1183 40                       # x264_src/encoder/me.c:1183:40
	jl	.LBB7_122
.Ltmp2183:
# %bb.33:                               # %lor.lhs.false251
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- $edx
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- $r12d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 1183 49                       # x264_src/encoder/me.c:1183:49
	movl	16464(%rbx), %eax
	.loc	0 1183 70                       # x264_src/encoder/me.c:1183:70
	addl	$-3, %eax
	.loc	0 1183 47                       # x264_src/encoder/me.c:1183:47
	cmpl	%eax, 16(%rsp)                  # 4-byte Folded Reload
.Ltmp2184:
	.loc	0 1182 9 is_stmt 1              # x264_src/encoder/me.c:1182:9
	jle	.LBB7_34
.Ltmp2185:
.LBB7_122:                              # %cleanup846
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/me.c:0:0
	movl	$0, 17420(%rbx)
	.loc	0 1237 1 epilogue_begin is_stmt 1 # x264_src/encoder/me.c:1237:1
	addq	$264, %rsp                      # imm = 0x108
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2186:
.LBB7_34:                               # %for.cond.preheader
	.cfi_def_cfa_offset 320
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- $edx
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- $r12d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/me.c:0:0
	leaq	25200(%rbx), %rax
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	movq	%rax, 232(%rsp)                 # 8-byte Spill
	movq	120(%rsp), %rax                 # 8-byte Reload
                                        # kill: def $eax killed $eax killed $rax def $rax
	sarl	%eax
	movq	%rax, 216(%rsp)                 # 8-byte Spill
	movl	%r11d, %eax
	sarl	%eax
	movq	%rax, 128(%rsp)                 # 8-byte Spill
	movl	$-2, 68(%rsp)                   # 4-byte Folded Spill
	xorl	%ebx, %ebx
	movslq	16(%rsp), %rax                  # 4-byte Folded Reload
	movslq	%r10d, %rcx
	movl	%r12d, 112(%rsp)                # 4-byte Spill
.Ltmp2187:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	movl	%edx, 12(%rsp)                  # 4-byte Spill
.Ltmp2188:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	movq	%rax, 56(%rsp)                  # 8-byte Spill
	movq	%rcx, 88(%rsp)                  # 8-byte Spill
	jmp	.LBB7_35
.Ltmp2189:
	.p2align	4, 0x90
.LBB7_38:                               #   in Loop: Header=BB7_35 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:satd <- $eax
	#DEBUG_VALUE: j <- $rbx
	movq	48(%rsp), %r11                  # 8-byte Reload
	movq	72(%rsp), %r10                  # 8-byte Reload
	movl	112(%rsp), %r12d                # 4-byte Reload
.Ltmp2190:
.LBB7_46:                               # %for.inc
                                        #   in Loop: Header=BB7_35 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: j <- $rbx
	movl	12(%rsp), %edx                  # 4-byte Reload
	movq	56(%rsp), %rax                  # 8-byte Reload
	movq	88(%rsp), %rcx                  # 8-byte Reload
.Ltmp2191:
.LBB7_47:                               # %for.inc
                                        #   in Loop: Header=BB7_35 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: j <- $rbx
	incq	%rbx
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
.Ltmp2192:
	#DEBUG_VALUE: j <- $rbx
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	.loc	0 1193 23 is_stmt 1             # x264_src/encoder/me.c:1193:23
	cmpq	$6, %rbx
.Ltmp2193:
	.loc	0 1193 5 is_stmt 0              # x264_src/encoder/me.c:1193:5
	je	.LBB7_39
.Ltmp2194:
.LBB7_35:                               # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: j <- $rbx
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	.loc	0 1195 9 is_stmt 1              # x264_src/encoder/me.c:1195:9
	movsbq	hex2+2(%rbx,%rbx), %rbp
	addq	%rax, %rbp
	movsbq	hex2+3(%rbx,%rbx), %r15
	addq	%rcx, %r15
	cmpl	%edx, %ebp
	jne	.LBB7_37
.Ltmp2195:
# %bb.36:                               # %for.body
                                        #   in Loop: Header=BB7_35 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: j <- $rbx
	cmpl	%r12d, %r15d
	je	.LBB7_47
.Ltmp2196:
.LBB7_37:                               # %if.end334
                                        #   in Loop: Header=BB7_35 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: j <- $rbx
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/me.c:0:9
	movq	%r10, 72(%rsp)                  # 8-byte Spill
.Ltmp2197:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	movq	40(%rsp), %r14                  # 8-byte Reload
.Ltmp2198:
	.loc	0 1195 9                        # x264_src/encoder/me.c:1195:9
	movl	120(%r14), %ecx
	subq	$8, %rsp
.Ltmp2199:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	192(%rsp), %r12                 # 8-byte Reload
	.loc	0 1195 9                        # x264_src/encoder/me.c:1195:9
	movq	%r12, %rdi
	movl	$32, %esi
	movq	208(%rsp), %rdx                 # 8-byte Reload
	movl	%ebp, %r8d
	movl	%r15d, %r9d
	pushq	24(%r14)
	.cfi_adjust_cfa_offset 8
	pushq	%r11
	.cfi_adjust_cfa_offset 8
	pushq	144(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	movq	%r13, 64(%rsp)                  # 8-byte Spill
.Ltmp2200:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	56(%rsp), %r13                  # 8-byte Reload
	.loc	0 1195 9                        # x264_src/encoder/me.c:1195:9
	callq	*32616(%r13)
.Ltmp2201:
	addq	$32, %rsp
.Ltmp2202:
	.cfi_adjust_cfa_offset -32
	movq	88(%r14), %rdi
	movl	$16, %esi
	movq	%r12, %rdx
	movl	$32, %ecx
	movq	144(%rsp), %rax                 # 8-byte Reload
	callq	*31816(%r13,%rax,8)
.Ltmp2203:
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	32(%rsp), %r13                  # 8-byte Reload
	movq	224(%rsp), %rcx                 # 8-byte Reload
	.loc	0 1195 9                        # x264_src/encoder/me.c:1195:9
	movzwl	(%rcx,%rbp,2), %ecx
	addl	%eax, %ecx
	movq	176(%rsp), %rax                 # 8-byte Reload
	movzwl	(%rax,%r15,2), %eax
	addl	%ecx, %eax
.Ltmp2204:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:satd <- $eax
	cmpl	%r13d, %eax
	cmovll	%eax, %r13d
.Ltmp2205:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 1196 9 is_stmt 1              # x264_src/encoder/me.c:1196:9
	movl	%r13d, %ecx
	shll	$4, %ecx
	movl	%r13d, %edx
	addl	%ecx, %edx
	leal	15(%r13,%rcx), %ecx
	cmovnsl	%edx, %ecx
	sarl	$4, %ecx
	cmpl	%ecx, %eax
.Ltmp2206:
	.loc	0 1196 9 is_stmt 0              # x264_src/encoder/me.c:1196:9
	jg	.LBB7_38
.Ltmp2207:
# %bb.41:                               # %if.then339
                                        #   in Loop: Header=BB7_35 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:satd <- $eax
	#DEBUG_VALUE: j <- $rbx
	#DEBUG_VALUE: pack16to32_mask:a <- $ebp
	#DEBUG_VALUE: pack16to32_mask:b <- $r15d
	.loc	6 345 13 is_stmt 1              # x264_src/common/macroblock.h:345:13
	movzwl	%bp, %eax
.Ltmp2208:
	.loc	6 345 26 is_stmt 0              # x264_src/common/macroblock.h:345:26
	movl	%r15d, %ecx
	shll	$16, %ecx
	.loc	6 345 22                        # x264_src/common/macroblock.h:345:22
	orl	%eax, %ecx
	movq	168(%rsp), %rax                 # 8-byte Reload
.Ltmp2209:
	.loc	0 1196 9 is_stmt 1              # x264_src/encoder/me.c:1196:9
	movl	%ecx, (%rax)
	movq	40(%rsp), %rax                  # 8-byte Reload
.Ltmp2210:
	.loc	0 1196 9 is_stmt 0              # x264_src/encoder/me.c:1196:9
	movl	(%rax), %ecx
	cmpl	$3, %ecx
.Ltmp2211:
	.loc	0 1196 9                        # x264_src/encoder/me.c:1196:9
	jg	.LBB7_43
.Ltmp2212:
# %bb.42:                               # %if.then357
                                        #   in Loop: Header=BB7_35 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: j <- $rbx
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	40(%rsp), %r12                  # 8-byte Reload
.Ltmp2213:
	.loc	0 1196 9                        # x264_src/encoder/me.c:1196:9
	movq	64(%r12), %rdx
	movl	124(%r12), %ecx
	movq	136(%rsp), %rax                 # 8-byte Reload
	leal	(%r15,%rax), %r9d
	movl	%r9d, 32(%rsp)                  # 4-byte Spill
	movq	152(%rsp), %rdi                 # 8-byte Reload
	movl	$32, %esi
	movl	%ebp, %r8d
	pushq	128(%rsp)                       # 8-byte Folded Reload
.Ltmp2214:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	224(%rsp), %r14                 # 8-byte Reload
	.loc	0 1196 9                        # x264_src/encoder/me.c:1196:9
	pushq	%r14
	.cfi_adjust_cfa_offset 8
	movq	40(%rsp), %rax                  # 8-byte Reload
	callq	*32632(%rax)
.Ltmp2215:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movq	72(%r12), %rdx
	movl	124(%r12), %ecx
	movq	160(%rsp), %rdi                 # 8-byte Reload
	movl	$32, %esi
	movl	%ebp, %r8d
	movl	32(%rsp), %r9d                  # 4-byte Reload
	pushq	128(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	pushq	%r14
	.cfi_adjust_cfa_offset 8
	movq	40(%rsp), %rax                  # 8-byte Reload
	callq	*32632(%rax)
.Ltmp2216:
	addq	$16, %rsp
.Ltmp2217:
	.cfi_adjust_cfa_offset -16
	.loc	0 1196 9                        # x264_src/encoder/me.c:1196:9
	movl	(%r12), %ecx
.Ltmp2218:
.LBB7_43:                               # %if.end400
                                        #   in Loop: Header=BB7_35 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: j <- $rbx
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	24(%rsp), %rdi                  # 8-byte Reload
	movl	108(%rsp), %esi                 # 4-byte Reload
	movl	84(%rsp), %edx                  # 4-byte Reload
	.loc	0 1196 9                        # x264_src/encoder/me.c:1196:9
	callq	x264_rd_cost_part@PLT
.Ltmp2219:
	#DEBUG_VALUE: cost <- $rax
	.loc	0 1196 9                        # x264_src/encoder/me.c:1196:9
	cmpq	96(%rsp), %rax                  # 8-byte Folded Reload
	movl	112(%rsp), %r12d                # 4-byte Reload
.Ltmp2220:
	.loc	0 1196 9                        # x264_src/encoder/me.c:1196:9
	jae	.LBB7_44
.Ltmp2221:
# %bb.45:                               # %if.then405
                                        #   in Loop: Header=BB7_35 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: j <- $rbx
	#DEBUG_VALUE: cost <- $rax
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- $rax
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r15d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $rbx
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movl	%ebx, 68(%rsp)                  # 4-byte Spill
	movl	%r15d, %r10d
                                        # kill: def $ebp killed $ebp killed $rbp def $rbp
	movq	%rbp, 16(%rsp)                  # 8-byte Spill
.Ltmp2222:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	movq	%rax, 96(%rsp)                  # 8-byte Spill
	#DEBUG_VALUE: cost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
.Ltmp2223:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	movq	48(%rsp), %r11                  # 8-byte Reload
	jmp	.LBB7_46
.Ltmp2224:
.LBB7_44:                               #   in Loop: Header=BB7_35 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: j <- $rbx
	#DEBUG_VALUE: cost <- $rax
	movq	48(%rsp), %r11                  # 8-byte Reload
	movq	72(%rsp), %r10                  # 8-byte Reload
	jmp	.LBB7_46
.Ltmp2225:
.LBB7_39:                               # %for.cond.cleanup
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	movl	68(%rsp), %ebp                  # 4-byte Reload
.Ltmp2226:
	.loc	0 1199 13 is_stmt 1             # x264_src/encoder/me.c:1199:13
	cmpl	$-2, %ebp
.Ltmp2227:
	.loc	0 1199 9 is_stmt 0              # x264_src/encoder/me.c:1199:9
	jne	.LBB7_40
.Ltmp2228:
.LBB7_85:                               # %if.end622
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- undef
	#DEBUG_VALUE: x264_me_refine_qpel_rd:omx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:omy <- $r10d
	#DEBUG_VALUE: i <- 0
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	$-16, %rbx
	movslq	16(%rsp), %rax                  # 4-byte Folded Reload
	movslq	%r10d, %rcx
	movq	%rax, 56(%rsp)                  # 8-byte Spill
	movq	%rcx, 88(%rsp)                  # 8-byte Spill
	jmp	.LBB7_86
.Ltmp2229:
	.p2align	4, 0x90
.LBB7_89:                               #   in Loop: Header=BB7_86 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:satd <- $eax
	#DEBUG_VALUE: i <- [DW_OP_consts 18446744073709551600, DW_OP_minus, DW_OP_consts 2, DW_OP_div, DW_OP_stack_value] $rbx
	movq	48(%rsp), %r11                  # 8-byte Reload
	movq	72(%rsp), %r10                  # 8-byte Reload
	movl	112(%rsp), %r12d                # 4-byte Reload
.Ltmp2230:
.LBB7_137:                              # %for.inc785
                                        #   in Loop: Header=BB7_86 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_consts 18446744073709551600, DW_OP_minus, DW_OP_consts 2, DW_OP_div, DW_OP_stack_value] $rbx
	movl	12(%rsp), %edx                  # 4-byte Reload
	movq	56(%rsp), %rax                  # 8-byte Reload
	movq	88(%rsp), %rcx                  # 8-byte Reload
.Ltmp2231:
.LBB7_138:                              # %for.inc785
                                        #   in Loop: Header=BB7_86 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_consts 18446744073709551600, DW_OP_minus, DW_OP_consts 2, DW_OP_div, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_consts 18446744073709551600, DW_OP_minus, DW_OP_consts 2, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- undef
	.loc	0 1224 23 is_stmt 1             # x264_src/encoder/me.c:1224:23
	addq	$2, %rbx
.Ltmp2232:
	.loc	0 1224 5 is_stmt 0              # x264_src/encoder/me.c:1224:5
	je	.LBB7_90
.Ltmp2233:
.LBB7_86:                               # %for.body628
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_consts 18446744073709551600, DW_OP_minus, DW_OP_consts 2, DW_OP_div, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 1226 9 is_stmt 1              # x264_src/encoder/me.c:1226:9
	movsbq	square1+18(%rbx), %rbp
	addq	%rax, %rbp
	movsbq	square1+19(%rbx), %r15
	addq	%rcx, %r15
	cmpl	%edx, %ebp
	jne	.LBB7_88
.Ltmp2234:
# %bb.87:                               # %for.body628
                                        #   in Loop: Header=BB7_86 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_consts 18446744073709551600, DW_OP_minus, DW_OP_consts 2, DW_OP_div, DW_OP_stack_value] $rbx
	cmpl	%r12d, %r15d
	je	.LBB7_138
.Ltmp2235:
.LBB7_88:                               # %if.end699
                                        #   in Loop: Header=BB7_86 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_consts 18446744073709551600, DW_OP_minus, DW_OP_consts 2, DW_OP_div, DW_OP_stack_value] $rbx
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/me.c:0:9
	movq	%r10, 72(%rsp)                  # 8-byte Spill
.Ltmp2236:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	movq	40(%rsp), %r14                  # 8-byte Reload
.Ltmp2237:
	.loc	0 1226 9                        # x264_src/encoder/me.c:1226:9
	movl	120(%r14), %ecx
	subq	$8, %rsp
.Ltmp2238:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	192(%rsp), %r12                 # 8-byte Reload
	.loc	0 1226 9                        # x264_src/encoder/me.c:1226:9
	movq	%r12, %rdi
	movl	$32, %esi
	movq	208(%rsp), %rdx                 # 8-byte Reload
	movl	%ebp, %r8d
	movl	%r15d, %r9d
	pushq	24(%r14)
	.cfi_adjust_cfa_offset 8
	pushq	%r11
	.cfi_adjust_cfa_offset 8
	pushq	144(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	movq	%r13, 64(%rsp)                  # 8-byte Spill
.Ltmp2239:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	56(%rsp), %r13                  # 8-byte Reload
	.loc	0 1226 9                        # x264_src/encoder/me.c:1226:9
	callq	*32616(%r13)
.Ltmp2240:
	addq	$32, %rsp
.Ltmp2241:
	.cfi_adjust_cfa_offset -32
	movq	88(%r14), %rdi
	movl	$16, %esi
	movq	%r12, %rdx
	movl	$32, %ecx
	movq	144(%rsp), %rax                 # 8-byte Reload
	callq	*31816(%r13,%rax,8)
.Ltmp2242:
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	32(%rsp), %r13                  # 8-byte Reload
	movq	224(%rsp), %rcx                 # 8-byte Reload
	.loc	0 1226 9                        # x264_src/encoder/me.c:1226:9
	movzwl	(%rcx,%rbp,2), %ecx
	addl	%eax, %ecx
	movq	176(%rsp), %rax                 # 8-byte Reload
	movzwl	(%rax,%r15,2), %eax
	addl	%ecx, %eax
.Ltmp2243:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:satd <- $eax
	cmpl	%r13d, %eax
	cmovll	%eax, %r13d
.Ltmp2244:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 1227 9 is_stmt 1              # x264_src/encoder/me.c:1227:9
	movl	%r13d, %ecx
	shll	$4, %ecx
	movl	%r13d, %edx
	addl	%ecx, %edx
	leal	15(%r13,%rcx), %ecx
	cmovnsl	%edx, %ecx
	sarl	$4, %ecx
	cmpl	%ecx, %eax
.Ltmp2245:
	.loc	0 1227 9 is_stmt 0              # x264_src/encoder/me.c:1227:9
	jg	.LBB7_89
.Ltmp2246:
# %bb.132:                              # %if.then704
                                        #   in Loop: Header=BB7_86 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:satd <- $eax
	#DEBUG_VALUE: i <- [DW_OP_consts 18446744073709551600, DW_OP_minus, DW_OP_consts 2, DW_OP_div, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: pack16to32_mask:a <- $ebp
	#DEBUG_VALUE: pack16to32_mask:b <- $r15d
	.loc	6 345 13 is_stmt 1              # x264_src/common/macroblock.h:345:13
	movzwl	%bp, %eax
.Ltmp2247:
	.loc	6 345 26 is_stmt 0              # x264_src/common/macroblock.h:345:26
	movl	%r15d, %ecx
	shll	$16, %ecx
	.loc	6 345 22                        # x264_src/common/macroblock.h:345:22
	orl	%eax, %ecx
	movq	168(%rsp), %rax                 # 8-byte Reload
.Ltmp2248:
	.loc	0 1227 9 is_stmt 1              # x264_src/encoder/me.c:1227:9
	movl	%ecx, (%rax)
	movq	40(%rsp), %rax                  # 8-byte Reload
.Ltmp2249:
	.loc	0 1227 9 is_stmt 0              # x264_src/encoder/me.c:1227:9
	movl	(%rax), %ecx
	cmpl	$3, %ecx
.Ltmp2250:
	.loc	0 1227 9                        # x264_src/encoder/me.c:1227:9
	jg	.LBB7_134
.Ltmp2251:
# %bb.133:                              # %if.then722
                                        #   in Loop: Header=BB7_86 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_consts 18446744073709551600, DW_OP_minus, DW_OP_consts 2, DW_OP_div, DW_OP_stack_value] $rbx
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	40(%rsp), %r14                  # 8-byte Reload
.Ltmp2252:
	.loc	0 1227 9                        # x264_src/encoder/me.c:1227:9
	movq	64(%r14), %rdx
	movl	124(%r14), %ecx
	movq	136(%rsp), %rax                 # 8-byte Reload
	leal	(%r15,%rax), %r9d
	movl	%r9d, 32(%rsp)                  # 4-byte Spill
	movq	152(%rsp), %rdi                 # 8-byte Reload
	movl	$32, %esi
	movl	%ebp, %r8d
	pushq	128(%rsp)                       # 8-byte Folded Reload
.Ltmp2253:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	224(%rsp), %r12                 # 8-byte Reload
	.loc	0 1227 9                        # x264_src/encoder/me.c:1227:9
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	movq	40(%rsp), %rax                  # 8-byte Reload
	callq	*32632(%rax)
.Ltmp2254:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movq	72(%r14), %rdx
	movl	124(%r14), %ecx
	movq	160(%rsp), %rdi                 # 8-byte Reload
	movl	$32, %esi
	movl	%ebp, %r8d
	movl	32(%rsp), %r9d                  # 4-byte Reload
	pushq	128(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	movq	40(%rsp), %rax                  # 8-byte Reload
	callq	*32632(%rax)
.Ltmp2255:
	addq	$16, %rsp
.Ltmp2256:
	.cfi_adjust_cfa_offset -16
	.loc	0 1227 9                        # x264_src/encoder/me.c:1227:9
	movl	(%r14), %ecx
.Ltmp2257:
.LBB7_134:                              # %if.end765
                                        #   in Loop: Header=BB7_86 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_consts 18446744073709551600, DW_OP_minus, DW_OP_consts 2, DW_OP_div, DW_OP_stack_value] $rbx
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	24(%rsp), %rdi                  # 8-byte Reload
	movl	108(%rsp), %esi                 # 4-byte Reload
	movl	84(%rsp), %edx                  # 4-byte Reload
	.loc	0 1227 9                        # x264_src/encoder/me.c:1227:9
	callq	x264_rd_cost_part@PLT
.Ltmp2258:
	#DEBUG_VALUE: cost <- $rax
	.loc	0 1227 9                        # x264_src/encoder/me.c:1227:9
	cmpq	96(%rsp), %rax                  # 8-byte Folded Reload
	movl	112(%rsp), %r12d                # 4-byte Reload
.Ltmp2259:
	.loc	0 1227 9                        # x264_src/encoder/me.c:1227:9
	jae	.LBB7_135
.Ltmp2260:
# %bb.136:                              # %if.then770
                                        #   in Loop: Header=BB7_86 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_consts 18446744073709551600, DW_OP_minus, DW_OP_consts 2, DW_OP_div, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: cost <- $rax
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- $rax
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r15d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- undef
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movl	%r15d, %r10d
                                        # kill: def $ebp killed $ebp killed $rbp def $rbp
	movq	%rbp, 16(%rsp)                  # 8-byte Spill
.Ltmp2261:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	movq	%rax, 96(%rsp)                  # 8-byte Spill
	#DEBUG_VALUE: cost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
.Ltmp2262:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	movq	48(%rsp), %r11                  # 8-byte Reload
	jmp	.LBB7_137
.Ltmp2263:
.LBB7_135:                              #   in Loop: Header=BB7_86 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_consts 18446744073709551600, DW_OP_minus, DW_OP_consts 2, DW_OP_div, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: cost <- $rax
	movq	48(%rsp), %r11                  # 8-byte Reload
	movq	72(%rsp), %r10                  # 8-byte Reload
	jmp	.LBB7_137
.Ltmp2264:
.LBB7_90:                               # %for.cond.cleanup627
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	movq	96(%rsp), %rax                  # 8-byte Reload
	movq	40(%rsp), %rcx                  # 8-byte Reload
	.loc	0 1230 13 is_stmt 1             # x264_src/encoder/me.c:1230:13
	movl	%eax, 136(%rcx)
	movq	16(%rsp), %rsi                  # 8-byte Reload
	.loc	0 1231 14                       # x264_src/encoder/me.c:1231:14
	movw	%si, 140(%rcx)
	.loc	0 1232 14                       # x264_src/encoder/me.c:1232:14
	movw	%r10w, 142(%rcx)
	movq	248(%rsp), %rcx                 # 8-byte Reload
	.loc	0 1233 35                       # x264_src/encoder/me.c:1233:35
	movzbl	block_idx_x(%rcx), %eax
	.loc	0 1233 52 is_stmt 0             # x264_src/encoder/me.c:1233:52
	movzbl	block_idx_y(%rcx), %ecx
	movq	120(%rsp), %rdi                 # 8-byte Reload
	.loc	0 1233 71                       # x264_src/encoder/me.c:1233:71
	movl	%edi, %edx
	sarl	$2, %edx
	.loc	0 1233 78                       # x264_src/encoder/me.c:1233:78
	sarl	$2, %r11d
.Ltmp2265:
	#DEBUG_VALUE: pack16to32_mask:a <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: pack16to32_mask:b <- $r10d
	.loc	6 345 13 is_stmt 1              # x264_src/common/macroblock.h:345:13
	movzwl	%si, %esi
	.loc	6 345 26 is_stmt 0              # x264_src/common/macroblock.h:345:26
	movl	%r10d, %r8d
	shll	$16, %r8d
	.loc	6 345 22                        # x264_src/common/macroblock.h:345:22
	orl	%esi, %r8d
.Ltmp2266:
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:x <- undef
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mv:i_list <- undef
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	.loc	9 112 58 is_stmt 1              # x264_src/common/rectangle.h:112:58
	leaq	(%rax,%rcx,8), %rsi
	movq	256(%rsp), %rbx                 # 8-byte Reload
	movq	232(%rsp), %r9                  # 8-byte Reload
	.loc	9 112 23 is_stmt 0              # x264_src/common/rectangle.h:112:23
	addq	%rbx, %r9
	leaq	(%r9,%rsi,4), %rsi
	addq	$48, %rsi
.Ltmp2267:
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	.loc	9 116 52 is_stmt 1              # x264_src/common/rectangle.h:116:52
	andl	$-4, %edi
.Ltmp2268:
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- $edi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 4
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	.loc	9 30 9                          # x264_src/common/rectangle.h:30:9
	addl	$-2, %edi
.Ltmp2269:
	.loc	9 0 9 is_stmt 0                 # x264_src/common/rectangle.h:0:9
	movl	$2, %r9d
	.loc	9 30 9                          # x264_src/common/rectangle.h:30:9
	shldl	$31, %edi, %r9d
	cmpl	$1, %r9d
	je	.LBB7_104
.Ltmp2270:
# %bb.91:                               # %for.cond.cleanup627
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	.loc	9 0 0                           # x264_src/common/rectangle.h:0:0
	movq	%r8, %rdi
	shlq	$32, %rdi
	orq	%r8, %rdi
.Ltmp2271:
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 30 9                          # x264_src/common/rectangle.h:30:9
	cmpl	$3, %r9d
	je	.LBB7_107
.Ltmp2272:
# %bb.92:                               # %for.cond.cleanup627
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	cmpl	$7, %r9d
	jne	.LBB7_110
.Ltmp2273:
# %bb.93:                               # %do.body.i.i.preheader
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 79 13 is_stmt 1               # x264_src/common/rectangle.h:79:13
	leal	-2(%r11), %r9d
	cmpl	$5, %r9d
	ja	.LBB7_101
.Ltmp2274:
# %bb.94:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 0 13 is_stmt 0                # x264_src/common/rectangle.h:0:13
	movl	%r11d, %r8d
	jmp	.LBB7_95
.Ltmp2275:
.LBB7_20:                               # %if.then152
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	movq	40(%rsp), %r14                  # 8-byte Reload
.Ltmp2276:
	.loc	0 1171 9 is_stmt 1              # x264_src/encoder/me.c:1171:9
	movl	120(%r14), %ecx
	subq	$8, %rsp
.Ltmp2277:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/me.c:0:9
	movq	192(%rsp), %rbp                 # 8-byte Reload
	.loc	0 1171 9                        # x264_src/encoder/me.c:1171:9
	movq	%rbp, %rdi
	movl	$32, %esi
	movq	208(%rsp), %rdx                 # 8-byte Reload
	pushq	24(%r14)
	.cfi_adjust_cfa_offset 8
	pushq	%r11
	.cfi_adjust_cfa_offset 8
	pushq	144(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	movq	%r9, %r12
	movq	%r8, %r15
	callq	*32616(%rbx)
.Ltmp2278:
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movq	88(%r14), %rdi
	movl	$16, %esi
	movq	%rbp, %rdx
	movl	$32, %ecx
	movq	144(%rsp), %rax                 # 8-byte Reload
	callq	*31816(%rbx,%rax,8)
.Ltmp2279:
                                        # kill: def $eax killed $eax def $rax
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	112(%rsp), %rcx                 # 8-byte Reload
	.loc	0 1171 9                        # x264_src/encoder/me.c:1171:9
	movzwl	(%rcx), %ecx
	leal	(%rax,%rcx,2), %eax
.Ltmp2280:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:satd <- $eax
	cmpl	%r13d, %eax
	cmovll	%eax, %r13d
.Ltmp2281:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 1172 9 is_stmt 1              # x264_src/encoder/me.c:1172:9
	movl	%r13d, %ecx
	shll	$4, %ecx
	movl	%r13d, %edx
	addl	%ecx, %edx
	leal	15(%r13,%rcx), %ecx
	cmovnsl	%edx, %ecx
	sarl	$4, %ecx
	cmpl	%ecx, %eax
.Ltmp2282:
	.loc	0 1172 9 is_stmt 0              # x264_src/encoder/me.c:1172:9
	jle	.LBB7_22
.Ltmp2283:
# %bb.21:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:satd <- $eax
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	%r12, %r10
	movl	12(%rsp), %ebp                  # 4-byte Reload
	.loc	0 1172 9                        # x264_src/encoder/me.c:1172:9
	jmp	.LBB7_25
.Ltmp2284:
.LBB7_40:                               # %for.body427.preheader
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movl	$9, %esi
.Ltmp2285:
	.p2align	4, 0x90
.LBB7_50:                               # %for.body427
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: i <- [DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $esi
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	#DEBUG_VALUE: odir <- undef
	movq	24(%rsp), %rcx                  # 8-byte Reload
.Ltmp2286:
	.loc	0 1205 23 is_stmt 1             # x264_src/encoder/me.c:1205:23
	movl	16460(%rcx), %eax
	.loc	0 1205 44 is_stmt 0             # x264_src/encoder/me.c:1205:44
	addl	$3, %eax
	.loc	0 1205 21                       # x264_src/encoder/me.c:1205:21
	cmpl	%eax, %r10d
	.loc	0 1205 48                       # x264_src/encoder/me.c:1205:48
	jl	.LBB7_85
.Ltmp2287:
# %bb.51:                               # %lor.lhs.false438
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $esi
	.loc	0 1206 23 is_stmt 1             # x264_src/encoder/me.c:1206:23
	movl	16468(%rcx), %eax
	.loc	0 1206 44 is_stmt 0             # x264_src/encoder/me.c:1206:44
	addl	$-3, %eax
	.loc	0 1206 21                       # x264_src/encoder/me.c:1206:21
	cmpl	%eax, %r10d
.Ltmp2288:
	.loc	0 1205 17 is_stmt 1             # x264_src/encoder/me.c:1205:17
	jg	.LBB7_85
.Ltmp2289:
# %bb.52:                               # %for.cond448.preheader
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $esi
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	movl	%esi, 196(%rsp)                 # 4-byte Spill
.Ltmp2290:
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	movslq	%ebp, %rax
	movzbl	mod6m1+1(%rax), %r15d
.Ltmp2291:
	#DEBUG_VALUE: odir <- $r15d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: j <- 0
	.loc	0 1213 17 is_stmt 1             # x264_src/encoder/me.c:1213:17
	leal	(%r15,%r15), %eax
	movsbq	hex2(%rax), %rbp
	movslq	16(%rsp), %rsi                  # 4-byte Folded Reload
	addq	%rsi, %rbp
	movsbq	hex2+1(%rax), %rax
	movslq	%r10d, %rdi
	addq	%rdi, %rax
	movl	$-2, 68(%rsp)                   # 4-byte Folded Spill
	cmpl	%edx, %ebp
	movq	%r15, 208(%rsp)                 # 8-byte Spill
	movq	%rsi, 32(%rsp)                  # 8-byte Spill
	movq	%rdi, 56(%rsp)                  # 8-byte Spill
	jne	.LBB7_55
.Ltmp2292:
# %bb.53:                               # %for.cond448.preheader
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 0
	cmpl	%r12d, %eax
	jne	.LBB7_55
.Ltmp2293:
# %bb.54:                               #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 0
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	movl	%r10d, %r14d
	movq	16(%rsp), %rbp                  # 8-byte Reload
                                        # kill: def $ebp killed $ebp killed $rbp def $rbp
	.loc	0 1213 17                       # x264_src/encoder/me.c:1213:17
	jmp	.LBB7_64
.Ltmp2294:
.LBB7_55:                               # %if.end523
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 0
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	%r10, 72(%rsp)                  # 8-byte Spill
.Ltmp2295:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	movq	%rax, 88(%rsp)                  # 8-byte Spill
	movq	40(%rsp), %r14                  # 8-byte Reload
.Ltmp2296:
	.loc	0 1213 17                       # x264_src/encoder/me.c:1213:17
	movl	120(%r14), %ecx
	subq	$8, %rsp
.Ltmp2297:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	192(%rsp), %r15                 # 8-byte Reload
	.loc	0 1213 17                       # x264_src/encoder/me.c:1213:17
	movq	%r15, %rdi
	movl	$32, %esi
	movq	208(%rsp), %rdx                 # 8-byte Reload
	movl	%ebp, %r8d
	movq	96(%rsp), %r9                   # 8-byte Reload
                                        # kill: def $r9d killed $r9d killed $r9
	pushq	24(%r14)
	.cfi_adjust_cfa_offset 8
	pushq	%r11
	.cfi_adjust_cfa_offset 8
	pushq	144(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	movq	56(%rsp), %rbx                  # 8-byte Reload
	callq	*32616(%rbx)
.Ltmp2298:
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movq	88(%r14), %rdi
	movq	88(%rsp), %r14                  # 8-byte Reload
	movl	$16, %esi
	movq	%r15, %rdx
	movl	$32, %ecx
	movq	144(%rsp), %rax                 # 8-byte Reload
	callq	*31816(%rbx,%rax,8)
.Ltmp2299:
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	224(%rsp), %rcx                 # 8-byte Reload
	.loc	0 1213 17                       # x264_src/encoder/me.c:1213:17
	movzwl	(%rcx,%rbp,2), %ecx
	addl	%eax, %ecx
	movq	176(%rsp), %rax                 # 8-byte Reload
	movzwl	(%rax,%r14,2), %eax
	addl	%ecx, %eax
.Ltmp2300:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:satd <- $eax
	cmpl	%r13d, %eax
	cmovll	%eax, %r13d
.Ltmp2301:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 1214 17 is_stmt 1             # x264_src/encoder/me.c:1214:17
	movl	%r13d, %ecx
	shll	$4, %ecx
	movl	%r13d, %edx
	addl	%ecx, %edx
	leal	15(%r13,%rcx), %ecx
	cmovnsl	%edx, %ecx
	sarl	$4, %ecx
	cmpl	%ecx, %eax
.Ltmp2302:
	.loc	0 1214 17 is_stmt 0             # x264_src/encoder/me.c:1214:17
	jle	.LBB7_57
.Ltmp2303:
# %bb.56:                               #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:satd <- $eax
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 0
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	72(%rsp), %rax                  # 8-byte Reload
.Ltmp2304:
	movl	%eax, %r14d
	movq	16(%rsp), %rbp                  # 8-byte Reload
                                        # kill: def $ebp killed $ebp killed $rbp def $rbp
	movq	48(%rsp), %r11                  # 8-byte Reload
	movl	12(%rsp), %edx                  # 4-byte Reload
	movq	208(%rsp), %r15                 # 8-byte Reload
	movq	32(%rsp), %rsi                  # 8-byte Reload
	jmp	.LBB7_63
.Ltmp2305:
.LBB7_57:                               # %if.then528
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:satd <- $eax
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: pack16to32_mask:a <- $ebp
	#DEBUG_VALUE: pack16to32_mask:b <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	.loc	6 345 13 is_stmt 1              # x264_src/common/macroblock.h:345:13
	movzwl	%bp, %eax
.Ltmp2306:
	.loc	6 345 26 is_stmt 0              # x264_src/common/macroblock.h:345:26
	movl	%r14d, %ecx
	shll	$16, %ecx
	.loc	6 345 22                        # x264_src/common/macroblock.h:345:22
	orl	%eax, %ecx
	movq	168(%rsp), %rax                 # 8-byte Reload
.Ltmp2307:
	.loc	0 1214 17 is_stmt 1             # x264_src/encoder/me.c:1214:17
	movl	%ecx, (%rax)
	movq	40(%rsp), %rax                  # 8-byte Reload
.Ltmp2308:
	.loc	0 1214 17 is_stmt 0             # x264_src/encoder/me.c:1214:17
	movl	(%rax), %ecx
	cmpl	$3, %ecx
.Ltmp2309:
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	jg	.LBB7_59
.Ltmp2310:
# %bb.58:                               # %if.then546
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 0
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	40(%rsp), %r14                  # 8-byte Reload
.Ltmp2311:
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	movq	64(%r14), %rdx
	movl	124(%r14), %ecx
	movq	136(%rsp), %rax                 # 8-byte Reload
	movq	88(%rsp), %rsi                  # 8-byte Reload
	leal	(%rsi,%rax), %r9d
	movl	%r9d, 192(%rsp)                 # 4-byte Spill
	movq	152(%rsp), %rdi                 # 8-byte Reload
	movl	$32, %esi
	movl	%ebp, %r8d
	pushq	128(%rsp)                       # 8-byte Folded Reload
.Ltmp2312:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	224(%rsp), %r15                 # 8-byte Reload
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	pushq	%r15
	.cfi_adjust_cfa_offset 8
	movq	40(%rsp), %rbx                  # 8-byte Reload
	callq	*32632(%rbx)
.Ltmp2313:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movq	72(%r14), %rdx
	movl	124(%r14), %ecx
	movq	160(%rsp), %rdi                 # 8-byte Reload
	movl	$32, %esi
	movl	%ebp, %r8d
	movl	192(%rsp), %r9d                 # 4-byte Reload
	pushq	128(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	pushq	%r15
	.cfi_adjust_cfa_offset 8
	callq	*32632(%rbx)
.Ltmp2314:
	addq	$16, %rsp
.Ltmp2315:
	.cfi_adjust_cfa_offset -16
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	movl	(%r14), %ecx
	movq	88(%rsp), %r14                  # 8-byte Reload
.Ltmp2316:
.LBB7_59:                               # %if.end589
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 0
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	24(%rsp), %rdi                  # 8-byte Reload
	movl	108(%rsp), %esi                 # 4-byte Reload
	movl	84(%rsp), %edx                  # 4-byte Reload
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	callq	x264_rd_cost_part@PLT
.Ltmp2317:
	#DEBUG_VALUE: cost <- $rax
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	cmpq	96(%rsp), %rax                  # 8-byte Folded Reload
	movq	208(%rsp), %r15                 # 8-byte Reload
	movq	32(%rsp), %rsi                  # 8-byte Reload
.Ltmp2318:
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	jae	.LBB7_60
.Ltmp2319:
# %bb.61:                               # %if.then594
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: cost <- $rax
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	leal	-1(%r15), %ecx
.Ltmp2320:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- $rax
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 64 7, DW_OP_stack_value] $ecx
	movl	%ecx, 68(%rsp)                  # 4-byte Spill
.Ltmp2321:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 64 7, DW_OP_stack_value] $rsp
	movq	%rax, 96(%rsp)                  # 8-byte Spill
	#DEBUG_VALUE: cost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
.Ltmp2322:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	jmp	.LBB7_62
.Ltmp2323:
.LBB7_60:                               #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: cost <- $rax
	movq	72(%rsp), %rax                  # 8-byte Reload
	movl	%eax, %r14d
	movq	16(%rsp), %rbp                  # 8-byte Reload
                                        # kill: def $ebp killed $ebp killed $rbp def $rbp
.Ltmp2324:
.LBB7_62:                               # %for.inc611
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r14d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 0
	movq	48(%rsp), %r11                  # 8-byte Reload
	movl	12(%rsp), %edx                  # 4-byte Reload
.Ltmp2325:
.LBB7_63:                               # %for.inc611
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r14d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 0
	movq	56(%rsp), %rdi                  # 8-byte Reload
.Ltmp2326:
.LBB7_64:                               # %for.inc611
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r14d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 0
	movl	%r15d, %ebx
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r14d
.Ltmp2327:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 1213 17 is_stmt 1             # x264_src/encoder/me.c:1213:17
	leal	(%rbx,%rbx), %eax
	movsbq	hex2+2(%rax), %r8
	addq	%rsi, %r8
	movsbq	hex2+3(%rax), %r9
	addq	%rdi, %r9
	cmpl	%edx, %r8d
	jne	.LBB7_67
.Ltmp2328:
# %bb.65:                               # %for.inc611
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r14d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 1
	cmpl	%r12d, %r9d
	jne	.LBB7_67
.Ltmp2329:
# %bb.66:                               #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r14d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 1
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	movl	%r14d, %r10d
                                        # kill: def $ebp killed $ebp killed $rbp def $rbp
	movq	%rbp, 16(%rsp)                  # 8-byte Spill
.Ltmp2330:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	movl	68(%rsp), %ebp                  # 4-byte Reload
	.loc	0 1213 17                       # x264_src/encoder/me.c:1213:17
	jmp	.LBB7_75
.Ltmp2331:
.LBB7_67:                               # %if.end523.1
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r14d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 1
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	%r14, 88(%rsp)                  # 8-byte Spill
.Ltmp2332:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	movq	40(%rsp), %r14                  # 8-byte Reload
.Ltmp2333:
	.loc	0 1213 17                       # x264_src/encoder/me.c:1213:17
	movl	120(%r14), %ecx
	subq	$8, %rsp
.Ltmp2334:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	192(%rsp), %r12                 # 8-byte Reload
	.loc	0 1213 17                       # x264_src/encoder/me.c:1213:17
	movq	%r12, %rdi
	movl	$32, %esi
	movq	208(%rsp), %rdx                 # 8-byte Reload
	pushq	24(%r14)
	.cfi_adjust_cfa_offset 8
	pushq	%r11
	.cfi_adjust_cfa_offset 8
	pushq	144(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	movq	56(%rsp), %r15                  # 8-byte Reload
	movq	%r9, 104(%rsp)                  # 8-byte Spill
	movq	%r8, 48(%rsp)                   # 8-byte Spill
	callq	*32616(%r15)
.Ltmp2335:
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movq	88(%r14), %rdi
	movl	$16, %esi
	movq	%r12, %rdx
	movl	$32, %ecx
	movq	144(%rsp), %rax                 # 8-byte Reload
	callq	*31816(%r15,%rax,8)
.Ltmp2336:
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	16(%rsp), %rdi                  # 8-byte Reload
	movq	72(%rsp), %rsi                  # 8-byte Reload
	movq	224(%rsp), %rcx                 # 8-byte Reload
	.loc	0 1213 17                       # x264_src/encoder/me.c:1213:17
	movzwl	(%rcx,%rdi,2), %ecx
	addl	%eax, %ecx
	movq	176(%rsp), %rax                 # 8-byte Reload
	movzwl	(%rax,%rsi,2), %eax
	addl	%ecx, %eax
.Ltmp2337:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:satd <- $eax
	cmpl	%r13d, %eax
	cmovll	%eax, %r13d
.Ltmp2338:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 1214 17 is_stmt 1             # x264_src/encoder/me.c:1214:17
	movl	%r13d, %ecx
	shll	$4, %ecx
	movl	%r13d, %edx
	addl	%ecx, %edx
	leal	15(%r13,%rcx), %ecx
	cmovnsl	%edx, %ecx
	sarl	$4, %ecx
	cmpl	%ecx, %eax
.Ltmp2339:
	.loc	0 1214 17 is_stmt 0             # x264_src/encoder/me.c:1214:17
	jle	.LBB7_69
.Ltmp2340:
# %bb.68:                               #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:satd <- $eax
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 1
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	88(%rsp), %r10                  # 8-byte Reload
                                        # kill: def $r10d killed $r10d killed $r10 def $r10
                                        # kill: def $ebp killed $ebp killed $rbp def $rbp
	movq	%rbp, 16(%rsp)                  # 8-byte Spill
.Ltmp2341:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	movq	48(%rsp), %r11                  # 8-byte Reload
	movl	112(%rsp), %r12d                # 4-byte Reload
	movl	12(%rsp), %edx                  # 4-byte Reload
	movl	68(%rsp), %ebp                  # 4-byte Reload
	movq	208(%rsp), %r15                 # 8-byte Reload
	movq	32(%rsp), %rsi                  # 8-byte Reload
	jmp	.LBB7_74
.Ltmp2342:
.LBB7_69:                               # %if.then528.1
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:satd <- $eax
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 1
	#DEBUG_VALUE: pack16to32_mask:a <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: pack16to32_mask:b <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	6 345 13 is_stmt 1              # x264_src/common/macroblock.h:345:13
	movzwl	%di, %eax
.Ltmp2343:
	.loc	6 345 26 is_stmt 0              # x264_src/common/macroblock.h:345:26
	movl	%esi, %ecx
	shll	$16, %ecx
	.loc	6 345 22                        # x264_src/common/macroblock.h:345:22
	orl	%eax, %ecx
	movq	168(%rsp), %rax                 # 8-byte Reload
.Ltmp2344:
	.loc	0 1214 17 is_stmt 1             # x264_src/encoder/me.c:1214:17
	movl	%ecx, (%rax)
	movq	40(%rsp), %rax                  # 8-byte Reload
.Ltmp2345:
	.loc	0 1214 17 is_stmt 0             # x264_src/encoder/me.c:1214:17
	movl	(%rax), %ecx
	cmpl	$3, %ecx
.Ltmp2346:
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	jg	.LBB7_71
.Ltmp2347:
# %bb.70:                               # %if.then546.1
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 1
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	40(%rsp), %r14                  # 8-byte Reload
.Ltmp2348:
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	movq	64(%r14), %rdx
	movl	124(%r14), %ecx
	movq	72(%rsp), %rax                  # 8-byte Reload
	movq	136(%rsp), %rsi                 # 8-byte Reload
	leal	(%rax,%rsi), %r9d
	movl	%r9d, 192(%rsp)                 # 4-byte Spill
	movq	152(%rsp), %rdi                 # 8-byte Reload
	movl	$32, %esi
	movq	16(%rsp), %r8                   # 8-byte Reload
                                        # kill: def $r8d killed $r8d killed $r8
	pushq	128(%rsp)                       # 8-byte Folded Reload
.Ltmp2349:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	224(%rsp), %r12                 # 8-byte Reload
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	movq	40(%rsp), %r15                  # 8-byte Reload
	callq	*32632(%r15)
.Ltmp2350:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movq	72(%r14), %rdx
	movl	124(%r14), %ecx
	movq	160(%rsp), %rdi                 # 8-byte Reload
	movl	$32, %esi
	movq	16(%rsp), %r8                   # 8-byte Reload
                                        # kill: def $r8d killed $r8d killed $r8
	movl	192(%rsp), %r9d                 # 4-byte Reload
	pushq	128(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	callq	*32632(%r15)
.Ltmp2351:
	addq	$16, %rsp
.Ltmp2352:
	.cfi_adjust_cfa_offset -16
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	movl	(%r14), %ecx
.Ltmp2353:
.LBB7_71:                               # %if.end589.1
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 1
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	24(%rsp), %rdi                  # 8-byte Reload
	movl	108(%rsp), %esi                 # 4-byte Reload
	movl	84(%rsp), %edx                  # 4-byte Reload
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	callq	x264_rd_cost_part@PLT
.Ltmp2354:
	#DEBUG_VALUE: cost <- $rax
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	cmpq	96(%rsp), %rax                  # 8-byte Folded Reload
	movl	112(%rsp), %r12d                # 4-byte Reload
	movq	208(%rsp), %r15                 # 8-byte Reload
	movq	32(%rsp), %rsi                  # 8-byte Reload
	movq	88(%rsp), %r10                  # 8-byte Reload
.Ltmp2355:
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	jae	.LBB7_72
.Ltmp2356:
# %bb.73:                               # %if.then594.1
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 1
	#DEBUG_VALUE: cost <- $rax
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- $rax
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 64 7, DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movl	%r15d, %ebp
	movq	%rax, 96(%rsp)                  # 8-byte Spill
	#DEBUG_VALUE: cost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
.Ltmp2357:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	movq	48(%rsp), %r11                  # 8-byte Reload
	movq	72(%rsp), %r10                  # 8-byte Reload
	movl	12(%rsp), %edx                  # 4-byte Reload
	jmp	.LBB7_74
.Ltmp2358:
.LBB7_72:                               #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 1
	#DEBUG_VALUE: cost <- $rax
                                        # kill: def $r10d killed $r10d killed $r10 def $r10
                                        # kill: def $ebp killed $ebp killed $rbp def $rbp
	movq	%rbp, 16(%rsp)                  # 8-byte Spill
.Ltmp2359:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	movq	48(%rsp), %r11                  # 8-byte Reload
	movl	12(%rsp), %edx                  # 4-byte Reload
	movl	68(%rsp), %ebp                  # 4-byte Reload
.Ltmp2360:
.LBB7_74:                               # %for.inc611.1
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 1
	movq	56(%rsp), %rdi                  # 8-byte Reload
.Ltmp2361:
.LBB7_75:                               # %for.inc611.1
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	#DEBUG_VALUE: j <- 2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 1213 17 is_stmt 1             # x264_src/encoder/me.c:1213:17
	addl	%ebx, %ebx
	movsbq	hex2+4(%rbx), %rax
	addq	%rax, %rsi
	movsbq	hex2+5(%rbx), %rax
	addq	%rax, %rdi
	cmpl	%edx, %esi
	jne	.LBB7_78
.Ltmp2362:
# %bb.76:                               # %for.inc611.1
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 2
	cmpl	%r12d, %edi
	jne	.LBB7_78
.Ltmp2363:
# %bb.77:                               #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 2
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	movl	196(%rsp), %esi                 # 4-byte Reload
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	#DEBUG_VALUE: j <- 3
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
.Ltmp2364:
	.loc	0 1216 21 is_stmt 1             # x264_src/encoder/me.c:1216:21
	cmpl	$-2, %ebp
.Ltmp2365:
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_plus_uconst 1, DW_OP_stack_value] $rsp
	.loc	0 0 21 is_stmt 0                # x264_src/encoder/me.c:0:21
	jne	.LBB7_49
	jmp	.LBB7_85
.Ltmp2366:
.LBB7_78:                               # %if.end523.2
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 2
	movq	%r10, 72(%rsp)                  # 8-byte Spill
.Ltmp2367:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	movq	%rsi, 32(%rsp)                  # 8-byte Spill
	movq	40(%rsp), %r14                  # 8-byte Reload
.Ltmp2368:
	.loc	0 1213 17 is_stmt 1             # x264_src/encoder/me.c:1213:17
	movl	120(%r14), %ecx
	subq	$8, %rsp
.Ltmp2369:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/me.c:0:17
	movq	192(%rsp), %r12                 # 8-byte Reload
	movq	%rdi, 64(%rsp)                  # 8-byte Spill
	.loc	0 1213 17                       # x264_src/encoder/me.c:1213:17
	movq	%r12, %rdi
	movl	$32, %esi
	movq	208(%rsp), %rdx                 # 8-byte Reload
	movq	40(%rsp), %r8                   # 8-byte Reload
                                        # kill: def $r8d killed $r8d killed $r8
	movq	64(%rsp), %r9                   # 8-byte Reload
                                        # kill: def $r9d killed $r9d killed $r9
	pushq	24(%r14)
	.cfi_adjust_cfa_offset 8
	pushq	%r11
	.cfi_adjust_cfa_offset 8
	pushq	144(%rsp)                       # 8-byte Folded Reload
	.cfi_adjust_cfa_offset 8
	movq	56(%rsp), %rbx                  # 8-byte Reload
	callq	*32616(%rbx)
.Ltmp2370:
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movq	88(%r14), %rdi
	movq	32(%rsp), %r14                  # 8-byte Reload
	movl	$16, %esi
	movq	%r12, %rdx
	movl	$32, %ecx
	movq	144(%rsp), %rax                 # 8-byte Reload
	callq	*31816(%rbx,%rax,8)
.Ltmp2371:
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	56(%rsp), %rsi                  # 8-byte Reload
	movq	224(%rsp), %rcx                 # 8-byte Reload
	.loc	0 1213 17                       # x264_src/encoder/me.c:1213:17
	movzwl	(%rcx,%r14,2), %ecx
	addl	%eax, %ecx
	movq	176(%rsp), %rax                 # 8-byte Reload
	movzwl	(%rax,%rsi,2), %eax
	addl	%ecx, %eax
.Ltmp2372:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:satd <- $eax
	cmpl	%r13d, %eax
	cmovll	%eax, %r13d
.Ltmp2373:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 1214 17 is_stmt 1             # x264_src/encoder/me.c:1214:17
	movl	%r13d, %ecx
	shll	$4, %ecx
	movl	%r13d, %edx
	addl	%ecx, %edx
	leal	15(%r13,%rcx), %ecx
	cmovnsl	%edx, %ecx
	sarl	$4, %ecx
	cmpl	%ecx, %eax
.Ltmp2374:
	.loc	0 1214 17 is_stmt 0             # x264_src/encoder/me.c:1214:17
	jle	.LBB7_80
.Ltmp2375:
# %bb.79:                               #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:satd <- $eax
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 2
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	48(%rsp), %r11                  # 8-byte Reload
	movq	72(%rsp), %r10                  # 8-byte Reload
	movl	112(%rsp), %r12d                # 4-byte Reload
	movl	12(%rsp), %edx                  # 4-byte Reload
	movl	196(%rsp), %esi                 # 4-byte Reload
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	#DEBUG_VALUE: j <- 3
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
.Ltmp2376:
	.loc	0 1216 21 is_stmt 1             # x264_src/encoder/me.c:1216:21
	cmpl	$-2, %ebp
.Ltmp2377:
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_plus_uconst 1, DW_OP_stack_value] $rsp
	.loc	0 0 21 is_stmt 0                # x264_src/encoder/me.c:0:21
	je	.LBB7_85
.Ltmp2378:
.LBB7_49:                               # %for.cond423
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_plus_uconst 1, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 2, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	.loc	0 1202 27 is_stmt 1             # x264_src/encoder/me.c:1202:27
	decl	%esi
	jne	.LBB7_50
	jmp	.LBB7_85
.Ltmp2379:
.LBB7_80:                               # %if.then528.2
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:satd <- $eax
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 2
	#DEBUG_VALUE: pack16to32_mask:a <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: pack16to32_mask:b <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	.loc	6 345 13                        # x264_src/common/macroblock.h:345:13
	movzwl	%r14w, %eax
.Ltmp2380:
	.loc	6 345 26 is_stmt 0              # x264_src/common/macroblock.h:345:26
	movl	%esi, %ecx
	shll	$16, %ecx
	.loc	6 345 22                        # x264_src/common/macroblock.h:345:22
	orl	%eax, %ecx
	movq	168(%rsp), %rax                 # 8-byte Reload
.Ltmp2381:
	.loc	0 1214 17 is_stmt 1             # x264_src/encoder/me.c:1214:17
	movl	%ecx, (%rax)
	movq	40(%rsp), %rax                  # 8-byte Reload
.Ltmp2382:
	.loc	0 1214 17 is_stmt 0             # x264_src/encoder/me.c:1214:17
	movl	(%rax), %ecx
	cmpl	$3, %ecx
.Ltmp2383:
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	jg	.LBB7_82
.Ltmp2384:
# %bb.81:                               # %if.then546.2
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 2
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	40(%rsp), %r14                  # 8-byte Reload
.Ltmp2385:
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	movq	64(%r14), %rdx
	movl	124(%r14), %ecx
	movq	136(%rsp), %rax                 # 8-byte Reload
	movl	%ebp, 68(%rsp)                  # 4-byte Spill
.Ltmp2386:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- [DW_OP_plus_uconst 68, DW_OP_deref] $rsp
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	56(%rsp), %rsi                  # 8-byte Reload
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	leal	(%rsi,%rax), %ebp
	movq	152(%rsp), %rdi                 # 8-byte Reload
	movl	$32, %esi
	movq	32(%rsp), %r8                   # 8-byte Reload
                                        # kill: def $r8d killed $r8d killed $r8
	movl	%ebp, %r9d
	movq	128(%rsp), %r15                 # 8-byte Reload
	pushq	%r15
.Ltmp2387:
	.cfi_adjust_cfa_offset 8
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	224(%rsp), %r12                 # 8-byte Reload
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	movq	40(%rsp), %rbx                  # 8-byte Reload
	callq	*32632(%rbx)
.Ltmp2388:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movq	72(%r14), %rdx
	movl	124(%r14), %ecx
	movq	160(%rsp), %rdi                 # 8-byte Reload
	movl	$32, %esi
	movq	32(%rsp), %r8                   # 8-byte Reload
                                        # kill: def $r8d killed $r8d killed $r8
	movl	%ebp, %r9d
	movl	68(%rsp), %ebp                  # 4-byte Reload
	pushq	%r15
	movq	216(%rsp), %r15                 # 8-byte Reload
	.cfi_adjust_cfa_offset 8
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	callq	*32632(%rbx)
.Ltmp2389:
	addq	$16, %rsp
.Ltmp2390:
	.cfi_adjust_cfa_offset -16
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	movl	(%r14), %ecx
	movq	32(%rsp), %r14                  # 8-byte Reload
.Ltmp2391:
.LBB7_82:                               # %if.end589.2
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 2
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	24(%rsp), %rdi                  # 8-byte Reload
	movl	108(%rsp), %esi                 # 4-byte Reload
	movl	84(%rsp), %edx                  # 4-byte Reload
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	callq	x264_rd_cost_part@PLT
.Ltmp2392:
	#DEBUG_VALUE: cost <- $rax
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	cmpq	96(%rsp), %rax                  # 8-byte Folded Reload
	movl	112(%rsp), %r12d                # 4-byte Reload
	movl	196(%rsp), %esi                 # 4-byte Reload
.Ltmp2393:
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	jae	.LBB7_83
.Ltmp2394:
# %bb.48:                               # %for.inc611.2.thread
                                        #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 2
	#DEBUG_VALUE: cost <- $rax
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- $rax
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	.loc	0 1214 17                       # x264_src/encoder/me.c:1214:17
	incl	%r15d
.Ltmp2395:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $r15d
	#DEBUG_VALUE: j <- 3
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_plus_uconst 1, DW_OP_stack_value] $rsp
	.loc	0 0 17                          # x264_src/encoder/me.c:0:17
	movq	%rax, 96(%rsp)                  # 8-byte Spill
.Ltmp2396:
	#DEBUG_VALUE: cost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	movl	%r14d, %eax
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	movq	56(%rsp), %r10                  # 8-byte Reload
                                        # kill: def $r10d killed $r10d killed $r10 def $r10
	movl	%r15d, %ebp
	movq	48(%rsp), %r11                  # 8-byte Reload
	movl	12(%rsp), %edx                  # 4-byte Reload
.Ltmp2397:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 2, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $r15d
	.loc	0 1202 27 is_stmt 1             # x264_src/encoder/me.c:1202:27
	decl	%esi
	jne	.LBB7_50
	jmp	.LBB7_85
.Ltmp2398:
.LBB7_83:                               #   in Loop: Header=BB7_50 Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_consts 9, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: odir <- [DW_OP_plus_uconst 208, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- 2
	.loc	0 0 27 is_stmt 0                # x264_src/encoder/me.c:0:27
	movq	48(%rsp), %r11                  # 8-byte Reload
	movq	72(%rsp), %r10                  # 8-byte Reload
	movl	12(%rsp), %edx                  # 4-byte Reload
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- $ebp
	#DEBUG_VALUE: j <- 3
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
.Ltmp2399:
	.loc	0 1216 21 is_stmt 1             # x264_src/encoder/me.c:1216:21
	cmpl	$-2, %ebp
.Ltmp2400:
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 196, DW_OP_deref, DW_OP_plus_uconst 1, DW_OP_stack_value] $rsp
	.loc	0 0 21 is_stmt 0                # x264_src/encoder/me.c:0:21
	jne	.LBB7_49
	jmp	.LBB7_85
.Ltmp2401:
.LBB7_107:                              # %if.then63.i.i
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 52 26 is_stmt 1               # x264_src/common/rectangle.h:52:26
	movq	%rdi, (%rsi)
.Ltmp2402:
	.loc	9 53 19                         # x264_src/common/rectangle.h:53:19
	cmpl	$1, %r11d
.Ltmp2403:
	.loc	9 53 17 is_stmt 0               # x264_src/common/rectangle.h:53:17
	je	.LBB7_110
.Ltmp2404:
# %bb.108:                              # %if.end70.i.i
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 54 26 is_stmt 1               # x264_src/common/rectangle.h:54:26
	movq	%rdi, 32(%rsi)
.Ltmp2405:
	.loc	9 55 19                         # x264_src/common/rectangle.h:55:19
	cmpl	$2, %r11d
.Ltmp2406:
	.loc	9 55 17 is_stmt 0               # x264_src/common/rectangle.h:55:17
	je	.LBB7_110
.Ltmp2407:
# %bb.109:                              # %if.end77.i.i
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 56 26 is_stmt 1               # x264_src/common/rectangle.h:56:26
	movq	%rdi, 64(%rsi)
	.loc	9 57 26                         # x264_src/common/rectangle.h:57:26
	movq	%rdi, 96(%rsi)
	jmp	.LBB7_110
.Ltmp2408:
.LBB7_104:                              # %if.then39.i.i
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	.loc	9 41 22                         # x264_src/common/rectangle.h:41:22
	movl	%r8d, (%rsi)
.Ltmp2409:
	.loc	9 42 15                         # x264_src/common/rectangle.h:42:15
	cmpl	$1, %r11d
.Ltmp2410:
	.loc	9 42 13 is_stmt 0               # x264_src/common/rectangle.h:42:13
	je	.LBB7_110
.Ltmp2411:
# %bb.105:                              # %if.end46.i.i
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	.loc	9 43 22 is_stmt 1               # x264_src/common/rectangle.h:43:22
	movl	%r8d, 32(%rsi)
.Ltmp2412:
	.loc	9 44 15                         # x264_src/common/rectangle.h:44:15
	cmpl	$2, %r11d
.Ltmp2413:
	.loc	9 44 13 is_stmt 0               # x264_src/common/rectangle.h:44:13
	je	.LBB7_110
.Ltmp2414:
# %bb.106:                              # %if.end53.i.i
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	.loc	9 45 22 is_stmt 1               # x264_src/common/rectangle.h:45:22
	movl	%r8d, 64(%rsi)
	.loc	9 46 22                         # x264_src/common/rectangle.h:46:22
	movl	%r8d, 96(%rsi)
	.loc	9 47 5                          # x264_src/common/rectangle.h:47:5
	jmp	.LBB7_110
.Ltmp2415:
.LBB7_22:                               # %if.then184
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:satd <- $eax
	#DEBUG_VALUE: pack16to32_mask:a <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: pack16to32_mask:b <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	6 345 13                        # x264_src/common/macroblock.h:345:13
	movzwl	%r15w, %eax
.Ltmp2416:
	.loc	6 345 26 is_stmt 0              # x264_src/common/macroblock.h:345:26
	movl	%r12d, %ecx
	shll	$16, %ecx
	.loc	6 345 22                        # x264_src/common/macroblock.h:345:22
	orl	%eax, %ecx
	movq	168(%rsp), %rax                 # 8-byte Reload
.Ltmp2417:
	.loc	0 1172 9 is_stmt 1              # x264_src/encoder/me.c:1172:9
	movl	%ecx, (%rax)
	movq	40(%rsp), %rax                  # 8-byte Reload
.Ltmp2418:
	.loc	0 1172 9 is_stmt 0              # x264_src/encoder/me.c:1172:9
	movl	(%rax), %ecx
	cmpl	$3, %ecx
	movl	12(%rsp), %ebp                  # 4-byte Reload
.Ltmp2419:
	.loc	0 1172 9                        # x264_src/encoder/me.c:1172:9
	jg	.LBB7_24
.Ltmp2420:
# %bb.23:                               # %if.then190
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	40(%rsp), %r14                  # 8-byte Reload
.Ltmp2421:
	.loc	0 1172 9                        # x264_src/encoder/me.c:1172:9
	movq	64(%r14), %rdx
	movl	124(%r14), %ecx
	movq	136(%rsp), %rax                 # 8-byte Reload
	leal	(%rax,%r12), %r9d
	movl	%r9d, 112(%rsp)                 # 4-byte Spill
	movq	120(%rsp), %rbx                 # 8-byte Reload
                                        # kill: def $ebx killed $ebx killed $rbx def $rbx
	sarl	%ebx
	movq	48(%rsp), %r12                  # 8-byte Reload
                                        # kill: def $r12d killed $r12d killed $r12 def $r12
	sarl	%r12d
	movq	152(%rsp), %rdi                 # 8-byte Reload
	movl	$32, %esi
	movl	%r15d, %r8d
	pushq	%r12
.Ltmp2422:
	.cfi_adjust_cfa_offset 8
	pushq	%rbx
	.cfi_adjust_cfa_offset 8
	movq	40(%rsp), %rax                  # 8-byte Reload
	callq	*32632(%rax)
.Ltmp2423:
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movq	72(%r14), %rdx
	movl	124(%r14), %ecx
	movq	160(%rsp), %rdi                 # 8-byte Reload
	movl	$32, %esi
	movl	%r15d, %r8d
	movl	112(%rsp), %r9d                 # 4-byte Reload
	pushq	%r12
	movq	80(%rsp), %r12                  # 8-byte Reload
	movq	32(%rsp), %rax                  # 8-byte Reload
	.cfi_adjust_cfa_offset 8
	pushq	%rbx
	movq	%rax, %rbx
	.cfi_adjust_cfa_offset 8
	callq	*32632(%rax)
.Ltmp2424:
	addq	$16, %rsp
.Ltmp2425:
	.cfi_adjust_cfa_offset -16
	.loc	0 1172 9                        # x264_src/encoder/me.c:1172:9
	movl	(%r14), %ecx
.Ltmp2426:
.LBB7_24:                               # %if.end209
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	movq	%rbx, %rdi
	movl	108(%rsp), %esi                 # 4-byte Reload
	movl	84(%rsp), %edx                  # 4-byte Reload
	callq	x264_rd_cost_part@PLT
.Ltmp2427:
	#DEBUG_VALUE: cost <- $rax
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	96(%rsp), %rcx                  # 8-byte Reload
.Ltmp2428:
	.loc	0 1172 9                        # x264_src/encoder/me.c:1172:9
	cmpq	%rcx, %rax
	movq	32(%rsp), %rdx                  # 8-byte Reload
.Ltmp2429:
	.loc	0 1172 9                        # x264_src/encoder/me.c:1172:9
	cmovbl	%r12d, %edx
	movq	%rdx, 32(%rsp)                  # 8-byte Spill
.Ltmp2430:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- undef
	cmovbl	%r15d, %ebp
	cmovbq	%rax, %rcx
.Ltmp2431:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- $rcx
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 0 9                           # x264_src/encoder/me.c:0:9
	movq	%rcx, 96(%rsp)                  # 8-byte Spill
.Ltmp2432:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	movq	%r12, %r10
.Ltmp2433:
.LBB7_25:                               # %if.end216
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	.loc	0 1175 17 is_stmt 1             # x264_src/encoder/me.c:1175:17
	cmpl	%r15d, %ebp
	movq	48(%rsp), %r11                  # 8-byte Reload
	.loc	0 1175 24 is_stmt 0             # x264_src/encoder/me.c:1175:24
	jne	.LBB7_26
.Ltmp2434:
# %bb.27:                               # %if.end216
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 0 24                          # x264_src/encoder/me.c:0:24
	movq	32(%rsp), %rcx                  # 8-byte Reload
	.loc	0 1175 24                       # x264_src/encoder/me.c:1175:24
	cmpl	%r10d, %ecx
	jne	.LBB7_28
.Ltmp2435:
# %bb.29:                               # %if.then222
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 0 24                          # x264_src/encoder/me.c:0:24
	movq	40(%rsp), %rax                  # 8-byte Reload
.Ltmp2436:
	.loc	0 1177 19 is_stmt 1             # x264_src/encoder/me.c:1177:19
	movswl	140(%rax), %edx
.Ltmp2437:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- $edx
	.loc	0 1178 19                       # x264_src/encoder/me.c:1178:19
	movswl	142(%rax), %r12d
.Ltmp2438:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- $r12d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- $edx
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- $r12d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 1182 15                       # x264_src/encoder/me.c:1182:15
	movl	16460(%rbx), %eax
	.loc	0 1182 36 is_stmt 0             # x264_src/encoder/me.c:1182:36
	addl	$3, %eax
	.loc	0 1182 13                       # x264_src/encoder/me.c:1182:13
	cmpl	%eax, %r10d
	.loc	0 1182 40                       # x264_src/encoder/me.c:1182:40
	jge	.LBB7_31
	jmp	.LBB7_122
.Ltmp2439:
.LBB7_28:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	.loc	0 0 40                          # x264_src/encoder/me.c:0:40
	movl	%r10d, %r12d
	movq	16(%rsp), %rax                  # 8-byte Reload
	movl	%eax, %edx
	movl	%ecx, %r10d
	jmp	.LBB7_15
.Ltmp2440:
.LBB7_26:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- $ebp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:dir <- -2
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	movl	%r10d, %r12d
	movq	16(%rsp), %rax                  # 8-byte Reload
	movl	%eax, %edx
	movq	32(%rsp), %r10                  # 8-byte Reload
                                        # kill: def $r10d killed $r10d killed $r10 def $r10
	jmp	.LBB7_15
.Ltmp2441:
.LBB7_101:                              # %vector.ph
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bsatd <- $r13d
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_mv:mv_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- [DW_OP_constu 257, DW_OP_mul, DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 16 7, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	movq	%r10, %r13
.Ltmp2442:
	.loc	9 79 13 is_stmt 1               # x264_src/common/rectangle.h:79:13
	shrl	%r9d
	incl	%r9d
	movl	%r9d, %r10d
.Ltmp2443:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r13d
	andl	$-4, %r10d
	movq	%r10, %r8
.Ltmp2444:
	shlq	$6, %r8
	addq	%r8, %rsi
.Ltmp2445:
	.loc	9 0 13 is_stmt 0                # x264_src/common/rectangle.h:0:13
	movq	%r11, %r8
	movq	%r8, %r15
                                        # kill: def $r8d killed $r8d killed $r8 def $r8
	.loc	9 79 13                         # x264_src/common/rectangle.h:79:13
	subl	%r10d, %r8d
	subl	%r10d, %r8d
	movl	%ecx, %r11d
.Ltmp2446:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r15d
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r15d
	shll	$5, %r11d
	addq	%r11, %rbx
	leaq	(%rbx,%rax,4), %r11
	movq	24(%rsp), %rbx                  # 8-byte Reload
	addq	%rbx, %r11
	addq	$25480, %r11                    # imm = 0x6388
	movq	%r10, %rbx
.Ltmp2447:
	.p2align	4, 0x90
.LBB7_102:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r15d
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r15d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 81 32 is_stmt 1               # x264_src/common/rectangle.h:81:32
	movq	%rdi, -232(%r11)
	movq	%rdi, -168(%r11)
	movq	%rdi, -104(%r11)
	movq	%rdi, -40(%r11)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, -224(%r11)
	movq	%rdi, -160(%r11)
	movq	%rdi, -96(%r11)
	movq	%rdi, -32(%r11)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, -200(%r11)
	movq	%rdi, -136(%r11)
	movq	%rdi, -72(%r11)
	movq	%rdi, -8(%r11)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, -192(%r11)
	movq	%rdi, -128(%r11)
	movq	%rdi, -64(%r11)
	movq	%rdi, (%r11)
	addq	$256, %r11                      # imm = 0x100
	addq	$-4, %rbx
	jne	.LBB7_102
.Ltmp2448:
# %bb.103:                              # %middle.block
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r13d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r15d
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r15d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	cmpl	%r9d, %r10d
	movq	%r15, %r11
	movq	%r13, %r10
	je	.LBB7_110
.Ltmp2449:
.LBB7_95:                               # %do.body.i.i.preheader1469
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 0 13 is_stmt 0                # x264_src/common/rectangle.h:0:13
	movq	%r10, %r15
	.loc	9 79 13 is_stmt 1               # x264_src/common/rectangle.h:79:13
	leal	-2(%r8), %r9d
	movl	%r9d, %r10d
.Ltmp2450:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r15d
	shrl	%r10d
	incl	%r10d
	andl	$3, %r10d
	je	.LBB7_99
.Ltmp2451:
# %bb.96:                               # %do.body.i.i.prol.preheader
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r15d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 0 13 is_stmt 0                # x264_src/common/rectangle.h:0:13
	movq	%r11, %rbx
.Ltmp2452:
	.loc	9 87 13 is_stmt 1               # x264_src/common/rectangle.h:87:13
	addl	%r10d, %r10d
	xorl	%r11d, %r11d
.Ltmp2453:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $ebx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $ebx
	.p2align	4, 0x90
.LBB7_97:                               # %do.body.i.i.prol
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r15d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $ebx
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_div, DW_OP_consts 18446744073709551614, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r11d, $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, (%rsi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 8(%rsi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 32(%rsi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 40(%rsi)
.Ltmp2454:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_div, DW_OP_consts 18446744073709551614, DW_OP_mul, DW_OP_consts 18446744073709551614, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $r11d, $r8d
	.loc	9 86 19                         # x264_src/common/rectangle.h:86:19
	addq	$64, %rsi
.Ltmp2455:
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	addl	$2, %r11d
.Ltmp2456:
	cmpl	%r11d, %r10d
	jne	.LBB7_97
.Ltmp2457:
# %bb.98:                               # %do.body.i.i.prol.loopexit.loopexit
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r15d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $ebx
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 79 13                         # x264_src/common/rectangle.h:79:13
	subl	%r11d, %r8d
	movq	%rbx, %r11
.Ltmp2458:
.LBB7_99:                               # %do.body.i.i.prol.loopexit
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r15d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	cmpl	$6, %r9d
	movq	%r15, %r10
	jb	.LBB7_110
.Ltmp2459:
.LBB7_100:                              # %do.body.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r15d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mv:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mv:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mv:y <- [DW_OP_LLVM_convert 32 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 32
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, (%rsi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 8(%rsi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 32(%rsi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 40(%rsi)
.Ltmp2460:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_constu 2, DW_OP_minus, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- [DW_OP_plus_uconst 64, DW_OP_stack_value] $rsi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, 64(%rsi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 72(%rsi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 96(%rsi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 104(%rsi)
.Ltmp2461:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_constu 4, DW_OP_minus, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- [DW_OP_plus_uconst 128, DW_OP_stack_value] $rsi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, 128(%rsi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 136(%rsi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 160(%rsi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 168(%rsi)
.Ltmp2462:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_constu 6, DW_OP_minus, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- [DW_OP_plus_uconst 192, DW_OP_stack_value] $rsi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, 192(%rsi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 200(%rsi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 224(%rsi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 232(%rsi)
	.loc	9 86 19                         # x264_src/common/rectangle.h:86:19
	addq	$256, %rsi                      # imm = 0x100
.Ltmp2463:
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	addl	$-8, %r8d
.Ltmp2464:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r8d
	.loc	9 0 13 is_stmt 0                # x264_src/common/rectangle.h:0:13
	jne	.LBB7_100
.Ltmp2465:
.LBB7_110:                              # %x264_macroblock_cache_mv.exit
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmy <- $r10d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	movq	40(%rsp), %r8                   # 8-byte Reload
	.loc	0 1234 23 is_stmt 1             # x264_src/encoder/me.c:1234:23
	movswl	128(%r8), %esi
	movq	16(%rsp), %rdi                  # 8-byte Reload
	subl	%esi, %edi
	movl	%edi, %esi
	negl	%esi
	cmovsl	%edi, %esi
	cmpl	$33, %esi
	movl	$33, %edi
	cmovael	%edi, %esi
	.loc	0 1234 58 is_stmt 0             # x264_src/encoder/me.c:1234:58
	movswl	130(%r8), %r8d
	subl	%r8d, %r10d
.Ltmp2466:
	movl	%r10d, %r8d
	negl	%r8d
	cmovsl	%r10d, %r8d
	cmpl	$33, %r8d
	cmovael	%edi, %r8d
.Ltmp2467:
	#DEBUG_VALUE: x264_me_refine_qpel_rd:amvd <- undef
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- undef
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:width <- $edx
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:i_list <- undef
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:w <- [DW_OP_constu 1, DW_OP_shl, DW_OP_stack_value] $edx
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 2
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- undef
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	.loc	9 30 9 is_stmt 1                # x264_src/common/rectangle.h:30:9
	decl	%edx
.Ltmp2468:
	andl	$2147483647, %edx               # imm = 0x7FFFFFFF
	cmpl	$7, %edx
.Ltmp2469:
	#DEBUG_VALUE: x264_macroblock_cache_mvd:x <- [DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] undef
	#DEBUG_VALUE: x264_macroblock_cache_mvd:y <- [DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] undef
	.loc	9 0 9 is_stmt 0                 # x264_src/common/rectangle.h:0:9
	movq	24(%rsp), %rbx                  # 8-byte Reload
	.loc	9 30 9                          # x264_src/common/rectangle.h:30:9
	ja	.LBB7_122
.Ltmp2470:
# %bb.111:                              # %x264_macroblock_cache_mv.exit
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	.loc	9 0 9                           # x264_src/common/rectangle.h:0:9
	movabsq	$4294967297, %rdi               # imm = 0x100000001
	leaq	(%rax,%rcx,8), %r9
	addq	$12, %r9
	shll	$8, %r8d
	orl	%esi, %r8d
.Ltmp2471:
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r8w
	#DEBUG_VALUE: x264_me_refine_qpel_rd:amvd <- $r8w
	movq	240(%rsp), %rsi                 # 8-byte Reload
.Ltmp2472:
	shlq	$4, %rsi
	movq	%rsi, %r10
	addq	%rbx, %rsi
	leaq	(%rsi,%r9,2), %rsi
	addq	$25520, %rsi                    # imm = 0x63B0
.Ltmp2473:
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	movl	%r8d, %r9d
	shll	$16, %r9d
	addl	%r8d, %r9d
.Ltmp2474:
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r9d
	imulq	%r9, %rdi
.Ltmp2475:
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 30 9                          # x264_src/common/rectangle.h:30:9
	jmpq	*.LJTI7_0(,%rdx,8)
.Ltmp2476:
.LBB7_123:                              # %if.then.i.i
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:amvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 32 22 is_stmt 1               # x264_src/common/rectangle.h:32:22
	movw	%r8w, (%rsi)
.Ltmp2477:
	.loc	9 33 15                         # x264_src/common/rectangle.h:33:15
	cmpl	$1, %r11d
.Ltmp2478:
	.loc	9 33 13 is_stmt 0               # x264_src/common/rectangle.h:33:13
	je	.LBB7_122
.Ltmp2479:
# %bb.124:                              # %if.end.i.i
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:amvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 34 22 is_stmt 1               # x264_src/common/rectangle.h:34:22
	movw	%r8w, 16(%rsi)
.Ltmp2480:
	.loc	9 35 15                         # x264_src/common/rectangle.h:35:15
	cmpl	$2, %r11d
.Ltmp2481:
	.loc	9 35 13 is_stmt 0               # x264_src/common/rectangle.h:35:13
	je	.LBB7_122
.Ltmp2482:
# %bb.125:                              # %if.end30.i.i
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:amvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 36 22 is_stmt 1               # x264_src/common/rectangle.h:36:22
	movw	%r8w, 32(%rsi)
	.loc	9 37 22                         # x264_src/common/rectangle.h:37:22
	movw	%r8w, 48(%rsi)
	.loc	9 38 5                          # x264_src/common/rectangle.h:38:5
	jmp	.LBB7_122
.Ltmp2483:
.LBB7_129:                              # %if.then63.i.i1327
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:amvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 52 26                         # x264_src/common/rectangle.h:52:26
	movq	%rdi, (%rsi)
.Ltmp2484:
	.loc	9 53 19                         # x264_src/common/rectangle.h:53:19
	cmpl	$1, %r11d
.Ltmp2485:
	.loc	9 53 17 is_stmt 0               # x264_src/common/rectangle.h:53:17
	je	.LBB7_122
.Ltmp2486:
# %bb.130:                              # %if.end70.i.i1329
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:amvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 54 26 is_stmt 1               # x264_src/common/rectangle.h:54:26
	movq	%rdi, 16(%rsi)
.Ltmp2487:
	.loc	9 55 19                         # x264_src/common/rectangle.h:55:19
	cmpl	$2, %r11d
.Ltmp2488:
	.loc	9 55 17 is_stmt 0               # x264_src/common/rectangle.h:55:17
	je	.LBB7_122
.Ltmp2489:
# %bb.131:                              # %if.end77.i.i1332
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:amvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 56 26 is_stmt 1               # x264_src/common/rectangle.h:56:26
	movq	%rdi, 32(%rsi)
	.loc	9 57 26                         # x264_src/common/rectangle.h:57:26
	movq	%rdi, 48(%rsi)
.Ltmp2490:
	.loc	9 72 5                          # x264_src/common/rectangle.h:72:5
	jmp	.LBB7_122
.Ltmp2491:
.LBB7_126:                              # %if.then39.i.i1335
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:amvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 41 22                         # x264_src/common/rectangle.h:41:22
	movl	%r9d, (%rsi)
.Ltmp2492:
	.loc	9 42 15                         # x264_src/common/rectangle.h:42:15
	cmpl	$1, %r11d
.Ltmp2493:
	.loc	9 42 13 is_stmt 0               # x264_src/common/rectangle.h:42:13
	je	.LBB7_122
.Ltmp2494:
# %bb.127:                              # %if.end46.i.i1337
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:amvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 43 22 is_stmt 1               # x264_src/common/rectangle.h:43:22
	movl	%r9d, 16(%rsi)
.Ltmp2495:
	.loc	9 44 15                         # x264_src/common/rectangle.h:44:15
	cmpl	$2, %r11d
.Ltmp2496:
	.loc	9 44 13 is_stmt 0               # x264_src/common/rectangle.h:44:13
	je	.LBB7_122
.Ltmp2497:
# %bb.128:                              # %if.end53.i.i1340
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:amvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 45 22 is_stmt 1               # x264_src/common/rectangle.h:45:22
	movl	%r9d, 32(%rsi)
	.loc	9 46 22                         # x264_src/common/rectangle.h:46:22
	movl	%r9d, 48(%rsi)
	.loc	9 47 5                          # x264_src/common/rectangle.h:47:5
	jmp	.LBB7_122
.Ltmp2498:
.LBB7_112:                              # %do.body.i.i1318.preheader
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:amvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 79 13                         # x264_src/common/rectangle.h:79:13
	leal	-2(%r11), %edx
	cmpl	$5, %edx
	jbe	.LBB7_113
.Ltmp2499:
# %bb.119:                              # %vector.ph1450
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:amvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:height <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_mvd:mvd_cache <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:dst <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v <- $r8d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v2 <- $r8w
	#DEBUG_VALUE: x264_macroblock_cache_rect:v4 <- $r9d
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	shrl	%edx
	incl	%edx
	movl	%edx, %r8d
.Ltmp2500:
	andl	$-4, %r8d
	movq	%r8, %r9
.Ltmp2501:
	shlq	$5, %r9
	addq	%r9, %rsi
.Ltmp2502:
	subl	%r8d, %r11d
.Ltmp2503:
	subl	%r8d, %r11d
	shll	$4, %ecx
	addq	%rcx, %r10
	leaq	(%r10,%rax,2), %rax
	addq	%rbx, %rax
	addq	$25664, %rax                    # imm = 0x6440
	movq	%r8, %rcx
.Ltmp2504:
.LBB7_120:                              # %vector.body1458
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, -120(%rax)
	movq	%rdi, -88(%rax)
	movq	%rdi, -56(%rax)
	movq	%rdi, -24(%rax)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, -112(%rax)
	movq	%rdi, -80(%rax)
	movq	%rdi, -48(%rax)
	movq	%rdi, -16(%rax)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, -104(%rax)
	movq	%rdi, -72(%rax)
	movq	%rdi, -40(%rax)
	movq	%rdi, -8(%rax)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, -96(%rax)
	movq	%rdi, -64(%rax)
	movq	%rdi, -32(%rax)
	movq	%rdi, (%rax)
	subq	$-128, %rax
	addq	$-4, %rcx
	jne	.LBB7_120
.Ltmp2505:
# %bb.121:                              # %middle.block1447
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	cmpl	%edx, %r8d
	je	.LBB7_122
.Ltmp2506:
.LBB7_113:                              # %do.body.i.i1318.preheader1468
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 79 13                         # x264_src/common/rectangle.h:79:13
	leal	-2(%r11), %eax
	movl	%eax, %ecx
	shrl	%ecx
	incl	%ecx
	andl	$3, %ecx
	je	.LBB7_117
.Ltmp2507:
# %bb.114:                              # %do.body.i.i1318.prol.preheader
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	addl	%ecx, %ecx
	xorl	%edx, %edx
.Ltmp2508:
.LBB7_115:                              # %do.body.i.i1318.prol
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_div, DW_OP_consts 18446744073709551614, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $edx, $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, (%rsi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 8(%rsi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 16(%rsi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 24(%rsi)
.Ltmp2509:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_div, DW_OP_consts 18446744073709551614, DW_OP_mul, DW_OP_consts 18446744073709551614, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $edx, $r11d
	.loc	9 86 19                         # x264_src/common/rectangle.h:86:19
	addq	$32, %rsi
.Ltmp2510:
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	addl	$2, %edx
.Ltmp2511:
	cmpl	%edx, %ecx
	jne	.LBB7_115
.Ltmp2512:
# %bb.116:                              # %do.body.i.i1318.prol.loopexit.loopexit
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	.loc	9 79 13                         # x264_src/common/rectangle.h:79:13
	subl	%edx, %r11d
.Ltmp2513:
.LBB7_117:                              # %do.body.i.i1318.prol.loopexit
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	cmpl	$6, %eax
	jb	.LBB7_122
.Ltmp2514:
.LBB7_118:                              # %do.body.i.i1318
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_me_refine_qpel_rd:h <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:m <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_lambda2 <- [DW_OP_plus_uconst 108] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i4 <- [DW_OP_plus_uconst 84] [$rsp+0]
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i_list <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_me_refine_qpel_rd:cache_mv <- [DW_OP_plus_uconst 168, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bw <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bh <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:mvy_offset <- [DW_OP_plus_uconst 136, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bcost <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:bmx <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:i8 <- [DW_OP_plus_uconst 84, DW_OP_deref, DW_OP_constu 2, DW_OP_shra, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pix <- [DW_OP_plus_uconst 184, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pixv <- [DW_OP_plus_uconst 160, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmx <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:pmy <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvx <- [DW_OP_plus_uconst 224, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_me_refine_qpel_rd:p_cost_mvy <- [DW_OP_plus_uconst 176, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_mvd:h <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_macroblock_cache_rect:s <- 16
	#DEBUG_VALUE: x264_macroblock_cache_rect:v8 <- $rdi
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, (%rsi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 8(%rsi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 16(%rsi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 24(%rsi)
.Ltmp2515:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_constu 2, DW_OP_minus, DW_OP_stack_value] $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- [DW_OP_plus_uconst 32, DW_OP_stack_value] $rsi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, 32(%rsi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 40(%rsi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 48(%rsi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 56(%rsi)
.Ltmp2516:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_constu 4, DW_OP_minus, DW_OP_stack_value] $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- [DW_OP_plus_uconst 64, DW_OP_stack_value] $rsi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, 64(%rsi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 72(%rsi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 80(%rsi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 88(%rsi)
.Ltmp2517:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- [DW_OP_constu 6, DW_OP_minus, DW_OP_stack_value] $r11d
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsi
	.loc	9 81 32                         # x264_src/common/rectangle.h:81:32
	movq	%rdi, 96(%rsi)
	.loc	9 82 32                         # x264_src/common/rectangle.h:82:32
	movq	%rdi, 104(%rsi)
	.loc	9 83 32                         # x264_src/common/rectangle.h:83:32
	movq	%rdi, 112(%rsi)
	.loc	9 84 32                         # x264_src/common/rectangle.h:84:32
	movq	%rdi, 120(%rsi)
	.loc	9 86 19                         # x264_src/common/rectangle.h:86:19
	subq	$-128, %rsi
.Ltmp2518:
	#DEBUG_VALUE: x264_macroblock_cache_rect:d <- $rsi
	.loc	9 87 13                         # x264_src/common/rectangle.h:87:13
	addl	$-8, %r11d
.Ltmp2519:
	#DEBUG_VALUE: x264_macroblock_cache_rect:h <- $r11d
	jne	.LBB7_118
	jmp	.LBB7_122
.Ltmp2520:
.Lfunc_end7:
	.size	x264_me_refine_qpel_rd, .Lfunc_end7-x264_me_refine_qpel_rd
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3, 0x0
.LJTI7_0:
	.quad	.LBB7_123
	.quad	.LBB7_126
	.quad	.LBB7_122
	.quad	.LBB7_129
	.quad	.LBB7_122
	.quad	.LBB7_122
	.quad	.LBB7_122
	.quad	.LBB7_112
                                        # -- End function
	.type	x264_pixel_size,@object         # @x264_pixel_size
	.p2align	4, 0x0
x264_pixel_size:
	.long	16                              # 0x10
	.long	16                              # 0x10
	.long	16                              # 0x10
	.long	8                               # 0x8
	.long	8                               # 0x8
	.long	16                              # 0x10
	.long	8                               # 0x8
	.long	8                               # 0x8
	.long	8                               # 0x8
	.long	4                               # 0x4
	.long	4                               # 0x4
	.long	8                               # 0x8
	.long	4                               # 0x4
	.long	4                               # 0x4
	.size	x264_pixel_size, 56

	.type	hex2,@object                    # @hex2
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0
hex2:
	.ascii	"\377\376"
	.asciz	"\376"
	.ascii	"\377\002"
	.ascii	"\001\002"
	.asciz	"\002"
	.ascii	"\001\376"
	.ascii	"\377\376"
	.asciz	"\376"
	.size	hex2, 16

	.type	mod6m1,@object                  # @mod6m1
	.section	.rodata.cst8,"aM",@progbits,8
mod6m1:
	.asciz	"\005\000\001\002\003\004\005"
	.size	mod6m1, 8

	.type	square1,@object                 # @square1
	.section	.rodata,"a",@progbits
	.p2align	4, 0x0
square1:
	.zero	2
	.ascii	"\000\377"
	.ascii	"\000\001"
	.asciz	"\377"
	.asciz	"\001"
	.zero	2,255
	.ascii	"\377\001"
	.ascii	"\001\377"
	.zero	2,1
	.size	square1, 18

	.type	x264_me_search_ref.x264_pixel_size_shift,@object # @x264_me_search_ref.x264_pixel_size_shift
x264_me_search_ref.x264_pixel_size_shift:
	.ascii	"\000\001\001\002\003\003\004"
	.size	x264_me_search_ref.x264_pixel_size_shift, 7

	.type	x264_me_search_ref.range_mul,@object # @x264_me_search_ref.range_mul
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0
x264_me_search_ref.range_mul:
	.ascii	"\003\003\004\004"
	.ascii	"\003\004\004\004"
	.ascii	"\004\004\004\005"
	.ascii	"\004\004\005\006"
	.size	x264_me_search_ref.range_mul, 16

	.type	x264_me_search_ref.hex4,@object # @x264_me_search_ref.hex4
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	4, 0x0
x264_me_search_ref.hex4:
	.ascii	"\000\374"
	.ascii	"\000\004"
	.ascii	"\376\375"
	.ascii	"\002\375"
	.ascii	"\374\376"
	.ascii	"\004\376"
	.ascii	"\374\377"
	.ascii	"\004\377"
	.asciz	"\374"
	.asciz	"\004"
	.ascii	"\374\001"
	.ascii	"\004\001"
	.ascii	"\374\002"
	.ascii	"\004\002"
	.ascii	"\376\003"
	.ascii	"\002\003"
	.size	x264_me_search_ref.hex4, 32

	.type	x264_me_search_ref.zero,@object # @x264_me_search_ref.zero
	.local	x264_me_search_ref.zero
	.comm	x264_me_search_ref.zero,128,16
	.type	subpel_iterations,@object       # @subpel_iterations
	.section	.rodata,"a",@progbits
	.p2align	4, 0x0
subpel_iterations:
	.zero	4
	.asciz	"\001\001\000"
	.asciz	"\000\001\001"
	.asciz	"\000\002\001"
	.ascii	"\000\002\001\001"
	.ascii	"\000\002\001\002"
	.ascii	"\000\000\002\002"
	.ascii	"\000\000\002\002"
	.ascii	"\000\000\004\n"
	.ascii	"\000\000\004\n"
	.ascii	"\000\000\004\n"
	.size	subpel_iterations, 44

	.type	x264_iter_kludge,@object        # @x264_iter_kludge
	.bss
	.globl	x264_iter_kludge
	.p2align	2, 0x0
x264_iter_kludge:
	.long	0                               # 0x0
	.size	x264_iter_kludge, 4

	.type	x264_scan8,@object              # @x264_scan8
	.section	.rodata,"a",@progbits
	.p2align	4, 0x0
x264_scan8:
	.long	12                              # 0xc
	.long	13                              # 0xd
	.long	20                              # 0x14
	.long	21                              # 0x15
	.long	14                              # 0xe
	.long	15                              # 0xf
	.long	22                              # 0x16
	.long	23                              # 0x17
	.long	28                              # 0x1c
	.long	29                              # 0x1d
	.long	36                              # 0x24
	.long	37                              # 0x25
	.long	30                              # 0x1e
	.long	31                              # 0x1f
	.long	38                              # 0x26
	.long	39                              # 0x27
	.long	9                               # 0x9
	.long	10                              # 0xa
	.long	17                              # 0x11
	.long	18                              # 0x12
	.long	33                              # 0x21
	.long	34                              # 0x22
	.long	41                              # 0x29
	.long	42                              # 0x2a
	.long	44                              # 0x2c
	.long	46                              # 0x2e
	.long	47                              # 0x2f
	.size	x264_scan8, 108

	.type	block_idx_xy_fdec,@object       # @block_idx_xy_fdec
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	4, 0x0
block_idx_xy_fdec:
	.short	0                               # 0x0
	.short	4                               # 0x4
	.short	128                             # 0x80
	.short	132                             # 0x84
	.short	8                               # 0x8
	.short	12                              # 0xc
	.short	136                             # 0x88
	.short	140                             # 0x8c
	.short	256                             # 0x100
	.short	260                             # 0x104
	.short	384                             # 0x180
	.short	388                             # 0x184
	.short	264                             # 0x108
	.short	268                             # 0x10c
	.short	392                             # 0x188
	.short	396                             # 0x18c
	.size	block_idx_xy_fdec, 32

	.type	block_idx_x,@object             # @block_idx_x
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0
block_idx_x:
	.ascii	"\000\001\000\001\002\003\002\003\000\001\000\001\002\003\002\003"
	.size	block_idx_x, 16

	.type	block_idx_y,@object             # @block_idx_y
	.p2align	4, 0x0
block_idx_y:
	.ascii	"\000\000\001\001\000\000\001\001\002\002\003\003\002\002\003\003"
	.size	block_idx_y, 16

	.type	x264_me_refine_bidir.dia4d,@object # @x264_me_refine_bidir.dia4d
	.section	.rodata,"a",@progbits
	.p2align	3, 0x0
x264_me_refine_bidir.dia4d:
	.zero	4
	.ascii	"\000\000\000\001"
	.ascii	"\000\000\000\377"
	.asciz	"\000\000\001"
	.asciz	"\000\000\377"
	.asciz	"\000\001\000"
	.asciz	"\000\377\000"
	.asciz	"\001\000\000"
	.asciz	"\377\000\000"
	.ascii	"\000\000\001\001"
	.ascii	"\000\000\377\377"
	.asciz	"\000\001\001"
	.asciz	"\000\377\377"
	.asciz	"\001\001\000"
	.asciz	"\377\377\000"
	.ascii	"\001\000\000\001"
	.ascii	"\377\000\000\377"
	.ascii	"\000\001\000\001"
	.ascii	"\000\377\000\377"
	.asciz	"\001\000\001"
	.asciz	"\377\000\377"
	.ascii	"\000\000\377\001"
	.ascii	"\000\000\001\377"
	.asciz	"\000\377\001"
	.asciz	"\000\001\377"
	.asciz	"\377\001\000"
	.asciz	"\001\377\000"
	.ascii	"\001\000\000\377"
	.ascii	"\377\000\000\001"
	.ascii	"\000\377\000\001"
	.ascii	"\000\001\000\377"
	.asciz	"\377\000\001"
	.asciz	"\001\000\377"
	.size	x264_me_refine_bidir.dia4d, 132

	.section	.debug_loclists,"",@progbits
	.long	.Ldebug_list_header_end0-.Ldebug_list_header_start0 # Length
.Ldebug_list_header_start0:
	.short	5                               # Version
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
	.long	345                             # Offset entry count
.Lloclists_table_base0:
	.long	.Ldebug_loc0-.Lloclists_table_base0
	.long	.Ldebug_loc1-.Lloclists_table_base0
	.long	.Ldebug_loc2-.Lloclists_table_base0
	.long	.Ldebug_loc3-.Lloclists_table_base0
	.long	.Ldebug_loc4-.Lloclists_table_base0
	.long	.Ldebug_loc5-.Lloclists_table_base0
	.long	.Ldebug_loc6-.Lloclists_table_base0
	.long	.Ldebug_loc7-.Lloclists_table_base0
	.long	.Ldebug_loc8-.Lloclists_table_base0
	.long	.Ldebug_loc9-.Lloclists_table_base0
	.long	.Ldebug_loc10-.Lloclists_table_base0
	.long	.Ldebug_loc11-.Lloclists_table_base0
	.long	.Ldebug_loc12-.Lloclists_table_base0
	.long	.Ldebug_loc13-.Lloclists_table_base0
	.long	.Ldebug_loc14-.Lloclists_table_base0
	.long	.Ldebug_loc15-.Lloclists_table_base0
	.long	.Ldebug_loc16-.Lloclists_table_base0
	.long	.Ldebug_loc17-.Lloclists_table_base0
	.long	.Ldebug_loc18-.Lloclists_table_base0
	.long	.Ldebug_loc19-.Lloclists_table_base0
	.long	.Ldebug_loc20-.Lloclists_table_base0
	.long	.Ldebug_loc21-.Lloclists_table_base0
	.long	.Ldebug_loc22-.Lloclists_table_base0
	.long	.Ldebug_loc23-.Lloclists_table_base0
	.long	.Ldebug_loc24-.Lloclists_table_base0
	.long	.Ldebug_loc25-.Lloclists_table_base0
	.long	.Ldebug_loc26-.Lloclists_table_base0
	.long	.Ldebug_loc27-.Lloclists_table_base0
	.long	.Ldebug_loc28-.Lloclists_table_base0
	.long	.Ldebug_loc29-.Lloclists_table_base0
	.long	.Ldebug_loc30-.Lloclists_table_base0
	.long	.Ldebug_loc31-.Lloclists_table_base0
	.long	.Ldebug_loc32-.Lloclists_table_base0
	.long	.Ldebug_loc33-.Lloclists_table_base0
	.long	.Ldebug_loc34-.Lloclists_table_base0
	.long	.Ldebug_loc35-.Lloclists_table_base0
	.long	.Ldebug_loc36-.Lloclists_table_base0
	.long	.Ldebug_loc37-.Lloclists_table_base0
	.long	.Ldebug_loc38-.Lloclists_table_base0
	.long	.Ldebug_loc39-.Lloclists_table_base0
	.long	.Ldebug_loc40-.Lloclists_table_base0
	.long	.Ldebug_loc41-.Lloclists_table_base0
	.long	.Ldebug_loc42-.Lloclists_table_base0
	.long	.Ldebug_loc43-.Lloclists_table_base0
	.long	.Ldebug_loc44-.Lloclists_table_base0
	.long	.Ldebug_loc45-.Lloclists_table_base0
	.long	.Ldebug_loc46-.Lloclists_table_base0
	.long	.Ldebug_loc47-.Lloclists_table_base0
	.long	.Ldebug_loc48-.Lloclists_table_base0
	.long	.Ldebug_loc49-.Lloclists_table_base0
	.long	.Ldebug_loc50-.Lloclists_table_base0
	.long	.Ldebug_loc51-.Lloclists_table_base0
	.long	.Ldebug_loc52-.Lloclists_table_base0
	.long	.Ldebug_loc53-.Lloclists_table_base0
	.long	.Ldebug_loc54-.Lloclists_table_base0
	.long	.Ldebug_loc55-.Lloclists_table_base0
	.long	.Ldebug_loc56-.Lloclists_table_base0
	.long	.Ldebug_loc57-.Lloclists_table_base0
	.long	.Ldebug_loc58-.Lloclists_table_base0
	.long	.Ldebug_loc59-.Lloclists_table_base0
	.long	.Ldebug_loc60-.Lloclists_table_base0
	.long	.Ldebug_loc61-.Lloclists_table_base0
	.long	.Ldebug_loc62-.Lloclists_table_base0
	.long	.Ldebug_loc63-.Lloclists_table_base0
	.long	.Ldebug_loc64-.Lloclists_table_base0
	.long	.Ldebug_loc65-.Lloclists_table_base0
	.long	.Ldebug_loc66-.Lloclists_table_base0
	.long	.Ldebug_loc67-.Lloclists_table_base0
	.long	.Ldebug_loc68-.Lloclists_table_base0
	.long	.Ldebug_loc69-.Lloclists_table_base0
	.long	.Ldebug_loc70-.Lloclists_table_base0
	.long	.Ldebug_loc71-.Lloclists_table_base0
	.long	.Ldebug_loc72-.Lloclists_table_base0
	.long	.Ldebug_loc73-.Lloclists_table_base0
	.long	.Ldebug_loc74-.Lloclists_table_base0
	.long	.Ldebug_loc75-.Lloclists_table_base0
	.long	.Ldebug_loc76-.Lloclists_table_base0
	.long	.Ldebug_loc77-.Lloclists_table_base0
	.long	.Ldebug_loc78-.Lloclists_table_base0
	.long	.Ldebug_loc79-.Lloclists_table_base0
	.long	.Ldebug_loc80-.Lloclists_table_base0
	.long	.Ldebug_loc81-.Lloclists_table_base0
	.long	.Ldebug_loc82-.Lloclists_table_base0
	.long	.Ldebug_loc83-.Lloclists_table_base0
	.long	.Ldebug_loc84-.Lloclists_table_base0
	.long	.Ldebug_loc85-.Lloclists_table_base0
	.long	.Ldebug_loc86-.Lloclists_table_base0
	.long	.Ldebug_loc87-.Lloclists_table_base0
	.long	.Ldebug_loc88-.Lloclists_table_base0
	.long	.Ldebug_loc89-.Lloclists_table_base0
	.long	.Ldebug_loc90-.Lloclists_table_base0
	.long	.Ldebug_loc91-.Lloclists_table_base0
	.long	.Ldebug_loc92-.Lloclists_table_base0
	.long	.Ldebug_loc93-.Lloclists_table_base0
	.long	.Ldebug_loc94-.Lloclists_table_base0
	.long	.Ldebug_loc95-.Lloclists_table_base0
	.long	.Ldebug_loc96-.Lloclists_table_base0
	.long	.Ldebug_loc97-.Lloclists_table_base0
	.long	.Ldebug_loc98-.Lloclists_table_base0
	.long	.Ldebug_loc99-.Lloclists_table_base0
	.long	.Ldebug_loc100-.Lloclists_table_base0
	.long	.Ldebug_loc101-.Lloclists_table_base0
	.long	.Ldebug_loc102-.Lloclists_table_base0
	.long	.Ldebug_loc103-.Lloclists_table_base0
	.long	.Ldebug_loc104-.Lloclists_table_base0
	.long	.Ldebug_loc105-.Lloclists_table_base0
	.long	.Ldebug_loc106-.Lloclists_table_base0
	.long	.Ldebug_loc107-.Lloclists_table_base0
	.long	.Ldebug_loc108-.Lloclists_table_base0
	.long	.Ldebug_loc109-.Lloclists_table_base0
	.long	.Ldebug_loc110-.Lloclists_table_base0
	.long	.Ldebug_loc111-.Lloclists_table_base0
	.long	.Ldebug_loc112-.Lloclists_table_base0
	.long	.Ldebug_loc113-.Lloclists_table_base0
	.long	.Ldebug_loc114-.Lloclists_table_base0
	.long	.Ldebug_loc115-.Lloclists_table_base0
	.long	.Ldebug_loc116-.Lloclists_table_base0
	.long	.Ldebug_loc117-.Lloclists_table_base0
	.long	.Ldebug_loc118-.Lloclists_table_base0
	.long	.Ldebug_loc119-.Lloclists_table_base0
	.long	.Ldebug_loc120-.Lloclists_table_base0
	.long	.Ldebug_loc121-.Lloclists_table_base0
	.long	.Ldebug_loc122-.Lloclists_table_base0
	.long	.Ldebug_loc123-.Lloclists_table_base0
	.long	.Ldebug_loc124-.Lloclists_table_base0
	.long	.Ldebug_loc125-.Lloclists_table_base0
	.long	.Ldebug_loc126-.Lloclists_table_base0
	.long	.Ldebug_loc127-.Lloclists_table_base0
	.long	.Ldebug_loc128-.Lloclists_table_base0
	.long	.Ldebug_loc129-.Lloclists_table_base0
	.long	.Ldebug_loc130-.Lloclists_table_base0
	.long	.Ldebug_loc131-.Lloclists_table_base0
	.long	.Ldebug_loc132-.Lloclists_table_base0
	.long	.Ldebug_loc133-.Lloclists_table_base0
	.long	.Ldebug_loc134-.Lloclists_table_base0
	.long	.Ldebug_loc135-.Lloclists_table_base0
	.long	.Ldebug_loc136-.Lloclists_table_base0
	.long	.Ldebug_loc137-.Lloclists_table_base0
	.long	.Ldebug_loc138-.Lloclists_table_base0
	.long	.Ldebug_loc139-.Lloclists_table_base0
	.long	.Ldebug_loc140-.Lloclists_table_base0
	.long	.Ldebug_loc141-.Lloclists_table_base0
	.long	.Ldebug_loc142-.Lloclists_table_base0
	.long	.Ldebug_loc143-.Lloclists_table_base0
	.long	.Ldebug_loc144-.Lloclists_table_base0
	.long	.Ldebug_loc145-.Lloclists_table_base0
	.long	.Ldebug_loc146-.Lloclists_table_base0
	.long	.Ldebug_loc147-.Lloclists_table_base0
	.long	.Ldebug_loc148-.Lloclists_table_base0
	.long	.Ldebug_loc149-.Lloclists_table_base0
	.long	.Ldebug_loc150-.Lloclists_table_base0
	.long	.Ldebug_loc151-.Lloclists_table_base0
	.long	.Ldebug_loc152-.Lloclists_table_base0
	.long	.Ldebug_loc153-.Lloclists_table_base0
	.long	.Ldebug_loc154-.Lloclists_table_base0
	.long	.Ldebug_loc155-.Lloclists_table_base0
	.long	.Ldebug_loc156-.Lloclists_table_base0
	.long	.Ldebug_loc157-.Lloclists_table_base0
	.long	.Ldebug_loc158-.Lloclists_table_base0
	.long	.Ldebug_loc159-.Lloclists_table_base0
	.long	.Ldebug_loc160-.Lloclists_table_base0
	.long	.Ldebug_loc161-.Lloclists_table_base0
	.long	.Ldebug_loc162-.Lloclists_table_base0
	.long	.Ldebug_loc163-.Lloclists_table_base0
	.long	.Ldebug_loc164-.Lloclists_table_base0
	.long	.Ldebug_loc165-.Lloclists_table_base0
	.long	.Ldebug_loc166-.Lloclists_table_base0
	.long	.Ldebug_loc167-.Lloclists_table_base0
	.long	.Ldebug_loc168-.Lloclists_table_base0
	.long	.Ldebug_loc169-.Lloclists_table_base0
	.long	.Ldebug_loc170-.Lloclists_table_base0
	.long	.Ldebug_loc171-.Lloclists_table_base0
	.long	.Ldebug_loc172-.Lloclists_table_base0
	.long	.Ldebug_loc173-.Lloclists_table_base0
	.long	.Ldebug_loc174-.Lloclists_table_base0
	.long	.Ldebug_loc175-.Lloclists_table_base0
	.long	.Ldebug_loc176-.Lloclists_table_base0
	.long	.Ldebug_loc177-.Lloclists_table_base0
	.long	.Ldebug_loc178-.Lloclists_table_base0
	.long	.Ldebug_loc179-.Lloclists_table_base0
	.long	.Ldebug_loc180-.Lloclists_table_base0
	.long	.Ldebug_loc181-.Lloclists_table_base0
	.long	.Ldebug_loc182-.Lloclists_table_base0
	.long	.Ldebug_loc183-.Lloclists_table_base0
	.long	.Ldebug_loc184-.Lloclists_table_base0
	.long	.Ldebug_loc185-.Lloclists_table_base0
	.long	.Ldebug_loc186-.Lloclists_table_base0
	.long	.Ldebug_loc187-.Lloclists_table_base0
	.long	.Ldebug_loc188-.Lloclists_table_base0
	.long	.Ldebug_loc189-.Lloclists_table_base0
	.long	.Ldebug_loc190-.Lloclists_table_base0
	.long	.Ldebug_loc191-.Lloclists_table_base0
	.long	.Ldebug_loc192-.Lloclists_table_base0
	.long	.Ldebug_loc193-.Lloclists_table_base0
	.long	.Ldebug_loc194-.Lloclists_table_base0
	.long	.Ldebug_loc195-.Lloclists_table_base0
	.long	.Ldebug_loc196-.Lloclists_table_base0
	.long	.Ldebug_loc197-.Lloclists_table_base0
	.long	.Ldebug_loc198-.Lloclists_table_base0
	.long	.Ldebug_loc199-.Lloclists_table_base0
	.long	.Ldebug_loc200-.Lloclists_table_base0
	.long	.Ldebug_loc201-.Lloclists_table_base0
	.long	.Ldebug_loc202-.Lloclists_table_base0
	.long	.Ldebug_loc203-.Lloclists_table_base0
	.long	.Ldebug_loc204-.Lloclists_table_base0
	.long	.Ldebug_loc205-.Lloclists_table_base0
	.long	.Ldebug_loc206-.Lloclists_table_base0
	.long	.Ldebug_loc207-.Lloclists_table_base0
	.long	.Ldebug_loc208-.Lloclists_table_base0
	.long	.Ldebug_loc209-.Lloclists_table_base0
	.long	.Ldebug_loc210-.Lloclists_table_base0
	.long	.Ldebug_loc211-.Lloclists_table_base0
	.long	.Ldebug_loc212-.Lloclists_table_base0
	.long	.Ldebug_loc213-.Lloclists_table_base0
	.long	.Ldebug_loc214-.Lloclists_table_base0
	.long	.Ldebug_loc215-.Lloclists_table_base0
	.long	.Ldebug_loc216-.Lloclists_table_base0
	.long	.Ldebug_loc217-.Lloclists_table_base0
	.long	.Ldebug_loc218-.Lloclists_table_base0
	.long	.Ldebug_loc219-.Lloclists_table_base0
	.long	.Ldebug_loc220-.Lloclists_table_base0
	.long	.Ldebug_loc221-.Lloclists_table_base0
	.long	.Ldebug_loc222-.Lloclists_table_base0
	.long	.Ldebug_loc223-.Lloclists_table_base0
	.long	.Ldebug_loc224-.Lloclists_table_base0
	.long	.Ldebug_loc225-.Lloclists_table_base0
	.long	.Ldebug_loc226-.Lloclists_table_base0
	.long	.Ldebug_loc227-.Lloclists_table_base0
	.long	.Ldebug_loc228-.Lloclists_table_base0
	.long	.Ldebug_loc229-.Lloclists_table_base0
	.long	.Ldebug_loc230-.Lloclists_table_base0
	.long	.Ldebug_loc231-.Lloclists_table_base0
	.long	.Ldebug_loc232-.Lloclists_table_base0
	.long	.Ldebug_loc233-.Lloclists_table_base0
	.long	.Ldebug_loc234-.Lloclists_table_base0
	.long	.Ldebug_loc235-.Lloclists_table_base0
	.long	.Ldebug_loc236-.Lloclists_table_base0
	.long	.Ldebug_loc237-.Lloclists_table_base0
	.long	.Ldebug_loc238-.Lloclists_table_base0
	.long	.Ldebug_loc239-.Lloclists_table_base0
	.long	.Ldebug_loc240-.Lloclists_table_base0
	.long	.Ldebug_loc241-.Lloclists_table_base0
	.long	.Ldebug_loc242-.Lloclists_table_base0
	.long	.Ldebug_loc243-.Lloclists_table_base0
	.long	.Ldebug_loc244-.Lloclists_table_base0
	.long	.Ldebug_loc245-.Lloclists_table_base0
	.long	.Ldebug_loc246-.Lloclists_table_base0
	.long	.Ldebug_loc247-.Lloclists_table_base0
	.long	.Ldebug_loc248-.Lloclists_table_base0
	.long	.Ldebug_loc249-.Lloclists_table_base0
	.long	.Ldebug_loc250-.Lloclists_table_base0
	.long	.Ldebug_loc251-.Lloclists_table_base0
	.long	.Ldebug_loc252-.Lloclists_table_base0
	.long	.Ldebug_loc253-.Lloclists_table_base0
	.long	.Ldebug_loc254-.Lloclists_table_base0
	.long	.Ldebug_loc255-.Lloclists_table_base0
	.long	.Ldebug_loc256-.Lloclists_table_base0
	.long	.Ldebug_loc257-.Lloclists_table_base0
	.long	.Ldebug_loc258-.Lloclists_table_base0
	.long	.Ldebug_loc259-.Lloclists_table_base0
	.long	.Ldebug_loc260-.Lloclists_table_base0
	.long	.Ldebug_loc261-.Lloclists_table_base0
	.long	.Ldebug_loc262-.Lloclists_table_base0
	.long	.Ldebug_loc263-.Lloclists_table_base0
	.long	.Ldebug_loc264-.Lloclists_table_base0
	.long	.Ldebug_loc265-.Lloclists_table_base0
	.long	.Ldebug_loc266-.Lloclists_table_base0
	.long	.Ldebug_loc267-.Lloclists_table_base0
	.long	.Ldebug_loc268-.Lloclists_table_base0
	.long	.Ldebug_loc269-.Lloclists_table_base0
	.long	.Ldebug_loc270-.Lloclists_table_base0
	.long	.Ldebug_loc271-.Lloclists_table_base0
	.long	.Ldebug_loc272-.Lloclists_table_base0
	.long	.Ldebug_loc273-.Lloclists_table_base0
	.long	.Ldebug_loc274-.Lloclists_table_base0
	.long	.Ldebug_loc275-.Lloclists_table_base0
	.long	.Ldebug_loc276-.Lloclists_table_base0
	.long	.Ldebug_loc277-.Lloclists_table_base0
	.long	.Ldebug_loc278-.Lloclists_table_base0
	.long	.Ldebug_loc279-.Lloclists_table_base0
	.long	.Ldebug_loc280-.Lloclists_table_base0
	.long	.Ldebug_loc281-.Lloclists_table_base0
	.long	.Ldebug_loc282-.Lloclists_table_base0
	.long	.Ldebug_loc283-.Lloclists_table_base0
	.long	.Ldebug_loc284-.Lloclists_table_base0
	.long	.Ldebug_loc285-.Lloclists_table_base0
	.long	.Ldebug_loc286-.Lloclists_table_base0
	.long	.Ldebug_loc287-.Lloclists_table_base0
	.long	.Ldebug_loc288-.Lloclists_table_base0
	.long	.Ldebug_loc289-.Lloclists_table_base0
	.long	.Ldebug_loc290-.Lloclists_table_base0
	.long	.Ldebug_loc291-.Lloclists_table_base0
	.long	.Ldebug_loc292-.Lloclists_table_base0
	.long	.Ldebug_loc293-.Lloclists_table_base0
	.long	.Ldebug_loc294-.Lloclists_table_base0
	.long	.Ldebug_loc295-.Lloclists_table_base0
	.long	.Ldebug_loc296-.Lloclists_table_base0
	.long	.Ldebug_loc297-.Lloclists_table_base0
	.long	.Ldebug_loc298-.Lloclists_table_base0
	.long	.Ldebug_loc299-.Lloclists_table_base0
	.long	.Ldebug_loc300-.Lloclists_table_base0
	.long	.Ldebug_loc301-.Lloclists_table_base0
	.long	.Ldebug_loc302-.Lloclists_table_base0
	.long	.Ldebug_loc303-.Lloclists_table_base0
	.long	.Ldebug_loc304-.Lloclists_table_base0
	.long	.Ldebug_loc305-.Lloclists_table_base0
	.long	.Ldebug_loc306-.Lloclists_table_base0
	.long	.Ldebug_loc307-.Lloclists_table_base0
	.long	.Ldebug_loc308-.Lloclists_table_base0
	.long	.Ldebug_loc309-.Lloclists_table_base0
	.long	.Ldebug_loc310-.Lloclists_table_base0
	.long	.Ldebug_loc311-.Lloclists_table_base0
	.long	.Ldebug_loc312-.Lloclists_table_base0
	.long	.Ldebug_loc313-.Lloclists_table_base0
	.long	.Ldebug_loc314-.Lloclists_table_base0
	.long	.Ldebug_loc315-.Lloclists_table_base0
	.long	.Ldebug_loc316-.Lloclists_table_base0
	.long	.Ldebug_loc317-.Lloclists_table_base0
	.long	.Ldebug_loc318-.Lloclists_table_base0
	.long	.Ldebug_loc319-.Lloclists_table_base0
	.long	.Ldebug_loc320-.Lloclists_table_base0
	.long	.Ldebug_loc321-.Lloclists_table_base0
	.long	.Ldebug_loc322-.Lloclists_table_base0
	.long	.Ldebug_loc323-.Lloclists_table_base0
	.long	.Ldebug_loc324-.Lloclists_table_base0
	.long	.Ldebug_loc325-.Lloclists_table_base0
	.long	.Ldebug_loc326-.Lloclists_table_base0
	.long	.Ldebug_loc327-.Lloclists_table_base0
	.long	.Ldebug_loc328-.Lloclists_table_base0
	.long	.Ldebug_loc329-.Lloclists_table_base0
	.long	.Ldebug_loc330-.Lloclists_table_base0
	.long	.Ldebug_loc331-.Lloclists_table_base0
	.long	.Ldebug_loc332-.Lloclists_table_base0
	.long	.Ldebug_loc333-.Lloclists_table_base0
	.long	.Ldebug_loc334-.Lloclists_table_base0
	.long	.Ldebug_loc335-.Lloclists_table_base0
	.long	.Ldebug_loc336-.Lloclists_table_base0
	.long	.Ldebug_loc337-.Lloclists_table_base0
	.long	.Ldebug_loc338-.Lloclists_table_base0
	.long	.Ldebug_loc339-.Lloclists_table_base0
	.long	.Ldebug_loc340-.Lloclists_table_base0
	.long	.Ldebug_loc341-.Lloclists_table_base0
	.long	.Ldebug_loc342-.Lloclists_table_base0
	.long	.Ldebug_loc343-.Lloclists_table_base0
	.long	.Ldebug_loc344-.Lloclists_table_base0
.Ldebug_loc0:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp4-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp30-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp30-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc1:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp28-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp28-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 456
	.byte	3                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc2:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp174-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp188-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp190-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp190-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp278-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp278-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp450-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp450-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp452-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp452-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp588-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp588-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp635-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp635-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp655-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp655-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp729-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp729-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp788-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp788-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1048-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1050-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1097-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1097-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1101-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1101-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc3:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp3-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp33-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp33-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp187-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp188-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp190-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp190-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp278-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp278-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp450-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp450-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp452-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp452-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp588-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp588-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp635-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp635-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp655-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp655-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp729-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp729-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp788-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp788-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1049-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1050-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1097-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1097-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1101-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1101-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc4:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp0-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp0-.Lfunc_begin0           #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 664
	.byte	5                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc5:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp39-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp42-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp51-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp77-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 240
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc6:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp40-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp41-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp51-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp77-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 288
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc7:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp26-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp34-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp34-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp252-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 320
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp277-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp308-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 320
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp332-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp526-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 320
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp588-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp629-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 320
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp635-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp652-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 320
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp655-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp729-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 320
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp788-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp878-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 320
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp878-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp879-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp879-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 320
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1042-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1042-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 320
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc8:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp27-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp34-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp34-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp736-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp788-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc9:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp49-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp49-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp77-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp77-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp90-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp100-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp112-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 544
	.byte	4                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp112-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp114-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp116-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 544
	.byte	4                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp116-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp160-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp160-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 544
	.byte	4                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc10:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp49-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp49-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp64-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp64-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp76-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 440
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp76-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp77-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp77-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp90-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp100-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp112-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp112-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp114-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp116-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp116-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp160-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp160-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp168-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp168-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp450-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 440
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp450-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp452-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp452-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp769-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 440
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp769-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp787-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp788-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 440
	.byte	3                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc11:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp49-.Lfunc_begin0          #   ending offset
	.byte	7                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	128                             # 268435456
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp49-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp65-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp65-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp73-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp76-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp77-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp77-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp90-.Lfunc_begin0          #   ending offset
	.byte	7                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	128                             # 268435456
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp100-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp112-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 452
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp112-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	7                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	128                             # 268435456
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp114-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp116-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 452
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp116-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp160-.Lfunc_begin0         #   ending offset
	.byte	7                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	128                             # 268435456
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp160-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 452
	.byte	3                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc12:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp29-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp34-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp34-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc13:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp5-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp15-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp15-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp78-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp88-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp96-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc14:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp19-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp21-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp34-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp79-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 352
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp88-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp102-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 352
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc15:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp6-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp11-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp11-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp102-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 400
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp112-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp117-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 400
	.byte	3                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc16:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp14-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp18-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp34-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp94-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp112-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp113-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp116-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp118-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc17:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp166-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp169-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp169-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp172-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 400
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp190-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp332-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 400
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp452-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp454-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 400
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp588-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp635-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 400
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp655-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp737-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 400
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp788-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 400
	.byte	3                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc18:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp167-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp169-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp169-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp183-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 352
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp190-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp332-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 352
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp452-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp454-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 352
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp588-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp635-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 352
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp655-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp739-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 352
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp788-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 352
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc19:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp7-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp8-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp8-.Lfunc_begin0           #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc20:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp9-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp10-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp10-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc21:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp12-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp15-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp15-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp34-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc22:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp12-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp34-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 400
	.byte	3                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc23:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp12-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp14-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc24:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp16-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp52-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp77-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp88-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 512
	.byte	4                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp88-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp90-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp92-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp96-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp96-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp110-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp110-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp111-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp111-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp112-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp112-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 512
	.byte	4                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp114-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp116-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp116-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp155-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 512
	.byte	4                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp155-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp157-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp157-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp197-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp203-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp213-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp213-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp216-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp216-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp226-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp232-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp245-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp245-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp252-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp252-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp277-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp277-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp301-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp301-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp315-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp315-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp329-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp329-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp332-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp332-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp531-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp531-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp532-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp532-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp555-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp555-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp556-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp556-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp565-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp565-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp566-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp566-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp571-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp571-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp572-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp572-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp580-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp580-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp588-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp588-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp589-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp589-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp619-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp619-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp623-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp623-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp625-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp625-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp629-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp629-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp631-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp631-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp648-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp648-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp649-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp649-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp666-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp666-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp675-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp675-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp678-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp678-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp681-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp681-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp694-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp694-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp717-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp717-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp730-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp731-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp738-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp765-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp766-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp766-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp815-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp815-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp819-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp822-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp833-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp834-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp838-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp838-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp839-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp839-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp845-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp845-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp899-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp899-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp900-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp900-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp909-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp909-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp910-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp910-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp926-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp950-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp964-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp964-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp965-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp965-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp978-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp978-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp979-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp979-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp992-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp992-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1002-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1004-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1033-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1033-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1045-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1050-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1051-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1053-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1055-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1056-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1057-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1057-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1058-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1062-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1063-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1063-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1068-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1068-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1070-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1070-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1091-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1092-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1096-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1098-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1120-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1120-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1121-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1121-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1130-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1130-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1131-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1131-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1141-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1143-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1152-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1176-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1190-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1190-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1191-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1191-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1204-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1204-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1205-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1205-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1220-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1227-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1234-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1236-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1244-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1244-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1246-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1317-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1317-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1318-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1318-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1341-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1341-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1342-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1342-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc25:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp19-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp21-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc26:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp17-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp34-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc27:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp20-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp48-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp77-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp88-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 432
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp88-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp89-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp93-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp94-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp94-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp109-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp110-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp112-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp112-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 432
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp114-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp116-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp116-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp156-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 432
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp156-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp158-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp158-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp197-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp197-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp200-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp204-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp206-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp210-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp229-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp233-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp235-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp240-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp241-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp241-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp248-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp248-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp249-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp250-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp252-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp252-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp277-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp277-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp278-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp302-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp332-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp332-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp452-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp530-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp530-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp533-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp533-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp547-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp547-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp555-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp555-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp558-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp558-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp565-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp565-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp568-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp568-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp571-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp571-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp574-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp574-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp575-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp575-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp580-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp580-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp585-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp586-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp590-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp590-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp593-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp593-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp603-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp607-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp612-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp616-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp626-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp629-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp632-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp632-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp647-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp648-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp655-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp655-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp657-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp666-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp668-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp672-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp689-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp691-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp701-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp701-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp703-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp706-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp712-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp715-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp716-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp716-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp720-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp721-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp729-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp729-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp732-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp732-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp767-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp767-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp768-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp768-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp815-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp834-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp839-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp845-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp898-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp899-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp908-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp909-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp926-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp926-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp931-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp935-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp939-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp940-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp944-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp944-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp945-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp945-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp946-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp950-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp963-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp964-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp977-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp978-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp988-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp993-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1001-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1003-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1017-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1025-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1028-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1029-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1029-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1045-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1050-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1055-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1056-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1062-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1081-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1084-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1092-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1097-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1098-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1120-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1129-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1130-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1141-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1143-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1152-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1152-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1158-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1160-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1164-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1166-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1170-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1176-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1190-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1203-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1204-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1220-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1220-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1224-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1228-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1233-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1236-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1243-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1243-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1245-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1245-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1246-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 240
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1320-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1320-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1321-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1322-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1340-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1341-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc28:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp22-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp32-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp32-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 512
	.byte	4                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc29:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp23-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp31-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp31-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 432
	.byte	3                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc30:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp23-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp81-.Lfunc_begin0          #   ending offset
	.byte	7                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	128                             # 268435456
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp81-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp88-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp88-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp99-.Lfunc_begin0          #   ending offset
	.byte	7                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	128                             # 268435456
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp99-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp104-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp104-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp110-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp110-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp132-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp132-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp133-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	52                              # DW_OP_lit4
	.byte	36                              # DW_OP_shl
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp133-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp144-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp144-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp151-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp151-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp164-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp164-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp197-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp197-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp199-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp204-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp206-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp206-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp215-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp217-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp221-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp221-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp226-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 416
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp226-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp228-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp233-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp235-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp235-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp243-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp244-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp249-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp249-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp250-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp250-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp258-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp258-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp260-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp260-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp262-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp262-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp265-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp265-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp271-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp271-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp278-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp278-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp299-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp299-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp318-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp318-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp325-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp325-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp529-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp529-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp539-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp547-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp554-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp554-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp557-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp557-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp564-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp564-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp567-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp567-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp570-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp570-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp573-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp573-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp574-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp575-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp576-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp577-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp581-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp581-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp586-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp586-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp588-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp588-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp603-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp603-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp607-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp607-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp609-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp610-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp612-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp612-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp616-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp622-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp629-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp629-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp630-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp630-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp634-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp635-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp642-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp642-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp643-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp643-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp648-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp648-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp654-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp654-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp655-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp655-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp657-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp666-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp668-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp668-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp679-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp682-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp684-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp684-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp698-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp698-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp700-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp700-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp708-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp710-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp714-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp715-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp720-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp721-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp729-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp729-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp734-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp734-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp742-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp742-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp756-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp756-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp768-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp769-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp772-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp788-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp790-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp790-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp795-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp795-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp805-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp806-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp811-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp811-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp815-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp815-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp820-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp824-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp830-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp830-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp839-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp839-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp842-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp842-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp845-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp845-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp848-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp848-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp868-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp868-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp880-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp881-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp894-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp894-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp899-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp899-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp904-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp904-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp909-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp909-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp921-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp921-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp923-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp926-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp930-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp932-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp933-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 288
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp935-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp940-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp940-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp950-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp950-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp959-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp959-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp964-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp964-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp973-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp973-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp978-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp978-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp984-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp984-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp988-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp988-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp995-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp997-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp999-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp999-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1006-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1007-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1012-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1012-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1019-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1021-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1023-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1023-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1031-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1032-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1045-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1050-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1053-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1053-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1055-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1056-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1062-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1062-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1067-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1069-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1070-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1072-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1076-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1076-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1084-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1084-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1087-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1087-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1097-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1098-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1101-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1101-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1104-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1104-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1115-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1115-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1120-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1120-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1125-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1125-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1130-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1130-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1141-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1143-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1147-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1147-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1149-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1149-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1152-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1152-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1159-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1160-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1166-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1166-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1176-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1185-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1185-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1190-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1190-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1199-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1199-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1204-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1204-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1209-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1209-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1212-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1212-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1213-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1213-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1220-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1220-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1223-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1228-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1230-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1230-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1232-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1236-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1250-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1250-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1262-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1262-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1313-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1313-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1335-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1335-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1341-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1341-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1349-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1349-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc31:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp35-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp36-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp36-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp77-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp82-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp83-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp83-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp185-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp190-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp278-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp450-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp452-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp588-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp598-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp629-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp634-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp655-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp656-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc32:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp43-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp44-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc33:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp45-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp51-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc34:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp49-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp52-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp52-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp77-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc35:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp60-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp77-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc36:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp60-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp77-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 400
	.byte	3                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc37:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp61-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp77-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc38:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp66-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp77-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 352
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc39:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp66-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp77-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc40:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp68-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp77-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc41:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp70-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp71-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc42:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp74-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp77-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc43:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp85-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp88-.Lfunc_begin0          #   ending offset
	.byte	4                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 672
	.byte	5                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp116-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp132-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 672
	.byte	5                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc44:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp85-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp88-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp116-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp132-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc45:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp85-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp88-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp116-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp132-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc46:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp85-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp88-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp116-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp126-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp126-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp132-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc47:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp98-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp102-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc48:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp106-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp112-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc49:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp132-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp135-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp135-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp152-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc50:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp142-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp146-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc51:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp143-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp147-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc52:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp148-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp149-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp149-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp150-.Lfunc_begin0         #   ending offset
	.byte	30                              # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	126                             # DW_OP_breg14
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc53:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp171-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp172-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp172-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp190-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 400
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp333-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp450-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 400
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp588-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 400
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp635-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp652-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 400
	.byte	3                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc54:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp173-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp174-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp174-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp190-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp333-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp356-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp446-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp450-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp457-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp524-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp529-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc55:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp175-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp176-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp176-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp190-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 336
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp333-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp344-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 336
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc56:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp177-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp178-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp178-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp190-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 344
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp333-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp356-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 344
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp446-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp450-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 344
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp456-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 344
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp524-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp528-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 344
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc57:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp343-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp345-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp345-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp450-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 336
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp588-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 336
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp635-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp652-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 336
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc58:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp179-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp189-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp189-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp190-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp333-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp346-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp346-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp356-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp446-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp450-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp457-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp524-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp525-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc59:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp181-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp187-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp187-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp190-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp333-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp337-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp337-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp338-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp338-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp450-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp588-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp635-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp652-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc60:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp182-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp183-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp183-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp190-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 352
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp333-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp450-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 352
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp588-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 352
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp635-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp652-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 352
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc61:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp184-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp185-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp185-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp190-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp333-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp450-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp529-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp635-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp652-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc62:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp190-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp250-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp588-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp628-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp721-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp729-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp788-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp795-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp846-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp879-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1039-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1043-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1043-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 424
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1172-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1347-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 424
	.byte	3                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc63:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp190-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp250-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp588-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp629-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp657-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp722-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp795-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp806-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp845-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp846-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp879-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp881-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc64:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp190-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp219-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 512
	.byte	4                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp219-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp248-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp588-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp593-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 512
	.byte	4                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp599-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp624-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp624-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp625-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp625-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp629-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1236-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1244-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1244-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc65:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp190-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp219-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 432
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp219-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp248-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp588-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp593-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 432
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp599-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp616-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp616-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp626-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1236-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1243-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1243-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1245-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1245-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 240
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc66:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp192-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp193-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc67:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp251-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp273-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 320
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp273-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp274-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp274-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp277-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 320
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp630-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp634-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 320
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc68:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp253-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp254-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc69:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp279-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp280-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc70:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp300-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp306-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	50                              # DW_OP_lit2
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp306-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp313-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp328-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp332-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc71:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp304-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp307-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp330-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp332-.Lfunc_begin0         #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 320
	.byte	2                               # 
	.byte	6                               # DW_OP_deref
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc72:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp312-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp314-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc73:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp347-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp446-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp524-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp635-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp642-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc74:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp348-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp356-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp358-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp365-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp365-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp397-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp397-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp403-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp403-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp407-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp408-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp446-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp457-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp457-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp482-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp483-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp491-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp492-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp499-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp500-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp511-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp512-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp521-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp521-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp524-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp635-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp640-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc75:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp349-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp350-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp350-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp357-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp360-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp363-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp364-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp372-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp372-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp374-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp374-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp377-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp377-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp380-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp380-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp381-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp381-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp399-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp521-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp635-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp637-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc76:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp352-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp401-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp457-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp457-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp459-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp459-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp465-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp471-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp501-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp502-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp521-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp635-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp640-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc77:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp353-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp356-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp457-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp457-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp459-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 240
	.byte	1                               # 
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp459-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp466-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp466-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp520-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 240
	.byte	1                               # 
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc78:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp357-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp402-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp635-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp640-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc79:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp364-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp367-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp367-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp373-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp374-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp379-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp379-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp380-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp380-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp385-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp385-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp389-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp389-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp392-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp392-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp395-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp395-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp397-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc80:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp374-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp379-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp379-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp380-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp380-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp386-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp386-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp388-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp392-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp395-.Lfunc_begin0         #   ending offset
	.byte	10                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc81:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp383-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp384-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp390-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp391-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp393-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp394-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc82:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp408-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp413-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp415-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp421-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp421-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp422-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp423-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp424-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp425-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp426-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc83:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp408-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp413-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp415-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp418-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp418-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp421-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp421-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp422-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp422-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp424-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp425-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp429-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp429-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp437-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp437-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp438-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp438-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp440-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp440-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp445-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc84:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp446-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp450-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp524-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp529-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp529-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp531-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp541-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp588-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc85:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp457-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp459-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 280
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp467-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp469-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp469-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp521-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 280
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp542-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp544-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp544-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp588-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 240
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc86:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp457-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp459-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp463-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp464-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp464-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp520-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc87:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp467-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp471-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp471-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp501-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp501-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp502-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp502-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp504-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp504-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp505-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp505-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp508-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc88:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp476-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp485-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp485-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp493-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp493-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp501-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc89:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp477-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp481-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp484-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp485-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp486-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp490-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp494-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp498-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc90:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp508-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp512-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp516-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp520-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc91:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp508-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp510-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp518-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp520-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc92:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp522-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp524-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp638-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp642-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp642-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp652-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc93:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp537-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp540-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp540-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp588-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc94:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp542-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp547-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp547-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp574-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp574-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp575-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp575-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp576-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp577-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp580-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc95:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp583-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp588-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc96:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp593-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp603-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp603-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp624-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp624-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp629-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc97:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp601-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp602-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc98:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp645-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp652-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc99:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp661-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp662-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp662-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp718-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 272
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc100:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp728-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp729-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp789-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp794-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp794-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp795-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp848-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp850-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp850-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp867-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp867-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp879-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc101:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp734-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp742-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc102:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp735-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp752-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc103:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp750-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp752-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc104:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp784-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp786-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc105:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp785-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp786-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc106:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp794-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp795-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp849-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp876-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc107:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp802-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp802-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp845-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 424
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp879-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1036-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 424
	.byte	3                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc108:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp806-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp806-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp807-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp809-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp845-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp879-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp881-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp882-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp885-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp885-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp886-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp886-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp911-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp911-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp916-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp916-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp917-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	127                             # DW_OP_breg15
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp919-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp950-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	127                             # DW_OP_breg15
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp952-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp956-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp956-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp957-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp957-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp982-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc109:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp850-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp861-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp861-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp862-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp863-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp866-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc110:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp850-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp861-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp861-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp863-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp863-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp866-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc111:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp877-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp879-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc112:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp896-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp900-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc113:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp906-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp911-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc114:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp961-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp965-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc115:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp975-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp979-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc116:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1098-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1101-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 424
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1102-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1105-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1179-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1182-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1183-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1208-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1208-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1212-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc117:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1117-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1121-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc118:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1127-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1132-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc119:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1145-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 272
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1172-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1175-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 272
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc120:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1187-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1191-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc121:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1201-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1205-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc122:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1215-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1216-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc123:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1238-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1239-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1239-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1347-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 464
	.byte	3                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc124:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1241-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1242-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1347-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 384
	.byte	3                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc125:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1240-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1246-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1323-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1323-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1326-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1326-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1345-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1345-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1347-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc126:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1262-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1263-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1266-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1267-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1270-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1271-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1274-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1275-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1278-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1279-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1282-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1286-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1287-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1289-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1290-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1292-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1293-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1295-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1296-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1298-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1299-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1301-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1302-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1304-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1305-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1307-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1308-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1310-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1311-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1313-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1314-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1319-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc127:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1248-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1252-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1252-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1253-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1254-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1256-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 488
	.byte	3                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1256-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1257-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc128:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1249-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1259-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc129:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1328-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1329-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	96                              # -32
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1330-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1343-.Lfunc_begin0        #   ending offset
	.byte	9                               # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	96                              # -32
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc130:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1331-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1343-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc131:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1332-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1343-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc132:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1337-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1339-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc133:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin1-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1359-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1359-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1372-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1372-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1396-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1407-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1433-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1443-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1445-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1449-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1455-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1459-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1464-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1518-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1526-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1530-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1537-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1541-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1556-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1561-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1564-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1568-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1575-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1579-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1601-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1606-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1608-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1612-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1619-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1623-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1651-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1655-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1666-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1687-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1687-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1715-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1715-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc134:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin1-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1357-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1357-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1371-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1371-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1396-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1407-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1433-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1443-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1445-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1449-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1455-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1459-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1464-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1518-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1526-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1530-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1537-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1541-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1556-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1561-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1564-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1568-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1575-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1579-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1601-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1606-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1608-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1612-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1619-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1623-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1651-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1655-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1666-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1689-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1712-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc135:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin1-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1353-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1391-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1427-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1427-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1428-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1428-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1463-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1463-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1465-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1465-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1467-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc136:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin1-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1360-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1360-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1396-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1407-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1433-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1443-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1445-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1449-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1455-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1459-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1464-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1501-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1501-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1681-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1681-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1689-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1712-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc137:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin1-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1355-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1355-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1373-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1373-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1396-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1407-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1433-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1443-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1445-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1449-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1455-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1459-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1464-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1500-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1500-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1501-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1501-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1681-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1681-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1689-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1712-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc138:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin1-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1351-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1351-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1396-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	244                             # 116
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1407-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1433-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	244                             # 116
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1443-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1445-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	244                             # 116
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1449-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1455-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	244                             # 116
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1459-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1464-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	244                             # 116
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1518-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	244                             # 116
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1526-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	244                             # 116
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1530-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1537-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	244                             # 116
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1541-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1556-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	244                             # 116
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1561-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1564-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	244                             # 116
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1568-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1575-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	244                             # 116
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1579-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1601-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	244                             # 116
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1606-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1608-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	244                             # 116
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1612-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1619-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	244                             # 116
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1623-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	244                             # 116
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1651-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	244                             # 116
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1655-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	244                             # 116
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1666-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1689-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	244                             # 116
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1712-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	244                             # 116
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc139:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1364-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1374-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1374-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1396-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1407-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1433-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1443-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1445-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1449-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1455-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1459-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1464-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1518-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1526-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1530-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1537-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1541-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1556-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1561-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1564-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1568-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1575-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1579-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1601-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1606-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1608-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1612-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1619-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1623-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1651-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1655-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1666-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1689-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc140:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1365-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1374-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1374-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1396-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1407-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1433-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1443-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1445-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1449-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1455-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1459-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1464-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1518-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1526-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1530-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1537-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1541-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1556-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1561-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1564-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1568-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1575-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1579-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1601-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1606-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1608-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1612-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1619-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1623-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1651-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1655-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1666-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1689-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1712-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc141:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1366-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1374-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1374-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1396-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1407-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1433-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1443-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1445-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1449-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1455-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1459-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1464-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1518-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1526-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1530-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1537-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1541-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1556-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1561-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1564-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1568-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1575-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1579-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1601-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1606-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1608-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1612-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1619-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1623-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1651-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1655-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1666-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1689-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1712-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc142:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1367-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1368-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1374-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1396-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1407-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1433-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1443-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1445-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1449-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1455-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1459-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1464-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1518-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1526-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1530-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1537-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1541-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1556-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1561-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1564-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1568-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1575-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1579-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1601-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1606-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1608-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1612-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1619-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1623-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1651-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1655-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1666-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1689-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1712-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc143:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1429-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1440-.Lfunc_begin0        #   ending offset
	.byte	17                              # Loc expr size
	.byte	118                             # DW_OP_breg6
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 255
	.byte	1                               # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\277\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1440-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1442-.Lfunc_begin0        #   ending offset
	.byte	17                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 255
	.byte	1                               # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\277\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1442-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1445-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	15                              # 15
	.byte	148                             # DW_OP_deref_size
	.byte	1                               # 
	.byte	168                             # DW_OP_convert
	.asciz	"\277\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1449-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1455-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	15                              # 15
	.byte	148                             # DW_OP_deref_size
	.byte	1                               # 
	.byte	168                             # DW_OP_convert
	.asciz	"\277\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1459-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1463-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	15                              # 15
	.byte	148                             # DW_OP_deref_size
	.byte	1                               # 
	.byte	168                             # DW_OP_convert
	.asciz	"\277\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1486-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	15                              # 15
	.byte	148                             # DW_OP_deref_size
	.byte	1                               # 
	.byte	168                             # DW_OP_convert
	.asciz	"\277\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc144:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1367-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1396-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1407-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1433-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1443-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1445-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1449-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1455-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1459-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1464-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1518-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1526-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1530-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1537-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1541-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1556-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1561-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1564-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1568-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1575-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1579-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1601-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1606-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1608-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1612-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1619-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1623-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1651-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1655-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1666-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1689-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1712-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc145:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1368-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1397-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1397-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1418-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1418-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1422-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1422-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1434-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1434-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1435-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1443-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1445-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1449-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1455-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1459-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1463-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1463-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1466-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1466-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1473-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1476-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1486-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1501-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1504-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1505-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1513-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1513-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1518-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1526-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1530-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1537-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1541-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1556-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1561-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1564-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1568-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1575-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1579-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1601-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1606-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1608-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1612-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1619-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1623-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1635-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 224
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1635-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1642-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1642-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1651-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1655-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1666-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1674-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1674-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1675-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1675-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1680-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1708-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1713-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc146:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1369-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1377-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1377-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1387-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1387-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1395-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1395-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1408-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1408-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1410-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1410-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1419-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1427-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1428-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1429-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1436-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1436-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1444-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1444-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1445-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1449-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1455-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1459-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1464-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1476-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1477-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1477-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1481-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1481-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1483-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1483-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1506-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1506-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1518-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1526-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1530-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1537-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1541-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1550-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1550-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1556-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1561-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1564-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1568-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1575-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1579-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1587-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1587-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1594-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1594-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1595-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1595-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1597-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1597-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1601-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1606-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1608-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1612-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1619-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1623-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1635-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1635-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1650-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1650-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1651-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1655-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1666-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1671-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1671-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1674-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1674-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1675-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1675-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1679-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1681-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1688-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1688-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1689-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1700-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1704-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1709-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1712-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1712-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1714-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc147:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1370-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1388-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1388-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1390-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1390-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1392-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1392-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1394-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1395-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1396-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1407-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1408-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1408-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1410-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1410-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1419-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1419-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1421-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1422-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1427-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1427-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1428-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1428-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1432-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1432-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1463-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	128                             # 268435456
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1463-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1468-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1468-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1470-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1476-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1478-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1478-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1485-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	128                             # 268435456
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1485-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1519-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1519-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1521-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1526-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1530-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1537-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1541-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1550-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1550-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1553-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1553-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1563-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1583-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1584-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1588-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1599-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1599-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1610-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1627-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1628-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1635-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1636-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1643-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1643-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1651-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1655-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1666-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1674-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1674-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1675-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1675-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1690-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1690-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1692-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1700-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1702-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1702-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1704-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1704-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1711-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1711-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc148:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1370-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1501-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1512-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1514-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1514-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1518-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1526-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1530-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1537-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1541-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1556-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1561-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1564-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1568-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1575-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1579-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1601-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1606-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1608-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1612-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1619-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1623-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1642-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1681-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1712-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc149:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1378-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1379-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc150:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1379-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1385-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc151:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1379-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1385-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc152:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1380-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1386-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1463-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1477-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc153:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1381-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1382-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc154:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1382-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1385-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc155:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1382-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1385-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc156:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1383-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1386-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1463-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc157:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1387-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1391-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1392-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1394-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	6                               # DW_OP_deref
	.byte	50                              # DW_OP_lit2
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1395-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1396-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	6                               # DW_OP_deref
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1407-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1424-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	6                               # DW_OP_deref
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1477-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc158:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1395-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1397-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1397-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1423-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc159:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1398-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1402-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc160:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1399-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1403-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1403-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1404-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc161:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1400-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1404-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc162:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1404-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc163:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1437-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1438-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc164:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1441-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1463-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1483-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1486-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc165:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1469-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1471-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc166:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1474-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc167:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1496-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1501-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1501-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1504-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1505-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1514-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1514-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1518-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1526-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1530-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1537-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1541-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1550-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1550-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1551-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1551-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1554-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1588-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1593-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1593-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1595-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1595-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1596-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1596-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1601-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1606-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1608-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1612-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1619-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1623-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1635-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1636-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1641-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1641-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1651-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1655-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1666-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1674-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1674-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1675-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1675-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1681-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc168:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1496-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1501-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1501-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1504-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	50                              # DW_OP_lit2
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1505-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1518-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1526-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1530-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1537-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1541-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1556-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1561-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1564-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1568-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1575-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1579-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1601-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1606-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1608-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1612-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1619-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1623-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1633-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1635-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1651-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1655-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1666-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1681-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc169:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1513-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1518-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1526-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1530-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1537-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1541-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1556-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1561-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1564-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1568-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1575-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1579-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1601-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1606-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1608-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1612-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1619-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1623-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1633-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1635-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1651-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1655-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1666-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1678-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc170:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1512-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1518-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1526-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1530-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1537-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1541-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1556-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1561-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1564-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1568-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1575-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1579-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1601-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1606-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1608-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1612-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1619-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1623-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1633-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1635-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1651-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1655-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1666-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1678-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc171:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1520-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1522-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc172:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1524-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1549-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc173:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1557-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1558-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc174:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1560-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1590-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc175:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1602-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1603-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc176:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1605-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1633-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc177:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1645-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1646-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc178:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1648-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1673-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc179:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1686-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1688-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1688-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1689-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc180:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1721-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1723-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc181:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1721-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1723-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc182:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin3-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1725-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1725-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1729-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc183:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1731-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1731-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc184:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1731-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1731-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc185:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1731-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1731-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc186:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1731-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1731-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc187:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin5-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1763-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1763-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc188:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin5-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1767-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1767-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1770-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1770-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc189:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin5-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1738-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1738-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1782-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1782-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc190:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin5-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1735-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1735-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc191:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin5-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1764-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1764-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc192:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin5-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1734-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1734-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	252                             # 124
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	252                             # 124
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	252                             # 124
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	252                             # 124
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	252                             # 124
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	252                             # 124
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	252                             # 124
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc193:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1733-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1783-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 8016
	.byte	62                              # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc194:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1771-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1772-.Lfunc_begin0        #   ending offset
	.byte	10                              # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	52                              # DW_OP_lit4
	.byte	30                              # DW_OP_mul
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1783-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	11                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	6                               # DW_OP_deref
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	52                              # DW_OP_lit4
	.byte	30                              # DW_OP_mul
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	11                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	6                               # DW_OP_deref
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	52                              # DW_OP_lit4
	.byte	30                              # DW_OP_mul
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	11                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	6                               # DW_OP_deref
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	52                              # DW_OP_lit4
	.byte	30                              # DW_OP_mul
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	11                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	6                               # DW_OP_deref
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	52                              # DW_OP_lit4
	.byte	30                              # DW_OP_mul
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	11                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	6                               # DW_OP_deref
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	52                              # DW_OP_lit4
	.byte	30                              # DW_OP_mul
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	11                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	6                               # DW_OP_deref
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	52                              # DW_OP_lit4
	.byte	30                              # DW_OP_mul
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	11                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	6                               # DW_OP_deref
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	52                              # DW_OP_lit4
	.byte	30                              # DW_OP_mul
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc195:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1737-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1739-.Lfunc_begin0        #   ending offset
	.byte	10                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	144                             # 25360
	.byte	198                             # 
	.byte	1                               # 
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	52                              # DW_OP_lit4
	.byte	30                              # DW_OP_mul
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1739-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1763-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	144                             # 25360
	.byte	198                             # 
	.byte	1                               # 
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	52                              # DW_OP_lit4
	.byte	30                              # DW_OP_mul
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1763-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	144                             # 25360
	.byte	198                             # 
	.byte	1                               # 
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	52                              # DW_OP_lit4
	.byte	30                              # DW_OP_mul
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	144                             # 25360
	.byte	198                             # 
	.byte	1                               # 
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	52                              # DW_OP_lit4
	.byte	30                              # DW_OP_mul
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	144                             # 25360
	.byte	198                             # 
	.byte	1                               # 
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	52                              # DW_OP_lit4
	.byte	30                              # DW_OP_mul
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	144                             # 25360
	.byte	198                             # 
	.byte	1                               # 
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	52                              # DW_OP_lit4
	.byte	30                              # DW_OP_mul
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	144                             # 25360
	.byte	198                             # 
	.byte	1                               # 
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	52                              # DW_OP_lit4
	.byte	30                              # DW_OP_mul
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	144                             # 25360
	.byte	198                             # 
	.byte	1                               # 
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	52                              # DW_OP_lit4
	.byte	30                              # DW_OP_mul
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	144                             # 25360
	.byte	198                             # 
	.byte	1                               # 
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 216
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	52                              # DW_OP_lit4
	.byte	30                              # DW_OP_mul
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc196:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1757-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1765-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1765-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 64
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 64
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 64
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 64
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 64
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 64
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 64
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc197:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1758-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1760-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1765-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc198:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1759-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1765-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1765-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 272
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 272
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 272
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 272
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 272
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 272
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 272
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc199:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1761-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1765-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1765-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc200:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1738-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1742-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc201:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1740-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1745-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc202:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1743-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc203:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1746-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	52                              # 52
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	52                              # 52
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	52                              # 52
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	52                              # 52
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	52                              # 52
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	52                              # 52
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	52                              # 52
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc204:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1751-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1755-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1755-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1886-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1886-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1887-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1887-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc205:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1747-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1784-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1784-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1888-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1888-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2104-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc206:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1752-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1756-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1756-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1783-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1783-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1788-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1788-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1889-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1889-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1908-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1908-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2102-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2102-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc207:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1748-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1783-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	128                             # 268435456
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1783-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1836-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1838-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1865-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1865-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1866-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1866-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc208:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1748-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1783-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1783-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1785-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1891-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1897-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc209:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1748-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1783-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1783-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1790-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1790-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1809-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1809-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1813-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1892-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1897-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc210:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1748-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1783-.Lfunc_begin0        #   ending offset
	.byte	11                              # Loc expr size
	.byte	16                              # DW_OP_constu
	.byte	128                             # 1152921504606846976
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	16                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1783-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1880-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1881-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1881-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc211:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1748-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1783-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1783-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1787-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1787-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	28                              # 28
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	28                              # 28
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	28                              # 28
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	28                              # 28
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	28                              # 28
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	28                              # 28
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1890-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	28                              # 28
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1890-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1897-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1898-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1930-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1930-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1935-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1936-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1938-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1938-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1944-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1944-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1987-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1987-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1993-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	28                              # 28
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1993-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1994-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1994-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2002-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2003-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2033-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2033-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2037-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2037-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2039-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2039-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2045-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2045-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc212:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1773-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1774-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1774-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 256
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 256
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 256
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 256
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 256
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 256
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 256
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc213:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1775-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1776-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1776-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 264
	.byte	2                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc214:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1777-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1778-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1778-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 240
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 240
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 240
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 240
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 240
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 240
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 240
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc215:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1779-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1780-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1780-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 248
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 248
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 248
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 248
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 248
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 248
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 248
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc216:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1783-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	36                              # 36
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	36                              # 36
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	36                              # 36
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	36                              # 36
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	36                              # 36
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	36                              # 36
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1894-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	36                              # 36
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1894-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1895-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1895-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1897-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	36                              # 36
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc217:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1783-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1832-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1832-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1835-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1838-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1880-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1897-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc218:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1789-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1791-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1792-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1794-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1795-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	127                             # -1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc219:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1797-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc220:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1798-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1804-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc221:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1811-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1812-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1813-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1815-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1817-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	127                             # -1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc222:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1817-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc223:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1819-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc224:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1820-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1826-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc225:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1831-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1832-.Lfunc_begin0        #   ending offset
	.byte	17                              # Loc expr size
	.byte	124                             # DW_OP_breg12
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 255
	.byte	1                               # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\277\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1832-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc226:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1832-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1836-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1843-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1848-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1848-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1850-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1850-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1851-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1851-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc227:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1832-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1836-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1843-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1868-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc228:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1832-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1836-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 160
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1843-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1849-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1849-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1850-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 160
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1850-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1852-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1852-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 160
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 160
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc229:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1832-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1836-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1843-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1871-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc230:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1832-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1836-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1858-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1867-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc231:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1865-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1868-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc232:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1870-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1871-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc233:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1876-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc234:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1903-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1914-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1915-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1931-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc235:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1905-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1932-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc236:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1906-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1907-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc237:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1906-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1932-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc238:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1906-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1939-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1939-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1940-.Lfunc_begin0        #   ending offset
	.byte	26                              # Loc expr size
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	30                              # DW_OP_mul
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1940-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1942-.Lfunc_begin0        #   ending offset
	.byte	29                              # Loc expr size
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1945-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1946-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1946-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1947-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	50                              # DW_OP_lit2
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1947-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1948-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	52                              # DW_OP_lit4
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1948-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1950-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	54                              # DW_OP_lit6
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1950-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1951-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc239:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1906-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1914-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1915-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1931-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc240:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1906-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1932-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1939-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1944-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1945-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1946-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1946-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1947-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	192                             # 64
	.byte	0                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1947-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1948-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	128                             # 128
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1948-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1949-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	192                             # 192
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1949-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1951-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc241:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1906-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1914-.Lfunc_begin0        #   ending offset
	.byte	24                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	129                             # 257
	.byte	2                               # 
	.byte	30                              # DW_OP_mul
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\304\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1915-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1931-.Lfunc_begin0        #   ending offset
	.byte	24                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	129                             # 257
	.byte	2                               # 
	.byte	30                              # DW_OP_mul
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\304\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc242:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1906-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1914-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1915-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1931-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc243:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1910-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1922-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1929-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1951-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc244:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1956-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1985-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1986-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1988-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2055-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2082-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc245:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1956-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1985-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1986-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1988-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc246:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1952-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1954-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc247:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1952-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1990-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1990-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1992-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1993-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2009-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc248:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1958-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1989-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc249:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1958-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1989-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc250:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1958-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1989-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1996-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2001-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2003-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2004-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2004-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2005-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	32                              # 32
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2005-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2006-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	192                             # 64
	.byte	0                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2006-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2007-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	224                             # 96
	.byte	0                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2007-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2009-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc251:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1952-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1954-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	36                              # DW_OP_shl
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc252:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1952-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1990-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1990-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1992-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1993-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1996-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1996-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1997-.Lfunc_begin0        #   ending offset
	.byte	26                              # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	30                              # DW_OP_mul
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1997-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1999-.Lfunc_begin0        #   ending offset
	.byte	29                              # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2003-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2004-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2004-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2005-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	50                              # DW_OP_lit2
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2005-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2006-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	52                              # DW_OP_lit4
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2006-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2008-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	54                              # DW_OP_lit6
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2008-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2009-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc253:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1956-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1985-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1986-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1988-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc254:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1956-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1985-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1986-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1988-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc255:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1959-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1983-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc256:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1960-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2009-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc257:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2011-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2014-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2025-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2032-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc258:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2012-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2034-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc259:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2012-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2034-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc260:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2012-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2034-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2040-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2045-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2046-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2047-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2047-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2048-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	192                             # 64
	.byte	0                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2048-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2049-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	128                             # 128
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2049-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2050-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	192                             # 192
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2050-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2052-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc261:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2012-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2040-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2040-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2041-.Lfunc_begin0        #   ending offset
	.byte	26                              # Loc expr size
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	30                              # DW_OP_mul
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2041-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2043-.Lfunc_begin0        #   ending offset
	.byte	29                              # Loc expr size
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2046-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2047-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2047-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2048-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	50                              # DW_OP_lit2
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2048-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2049-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	52                              # DW_OP_lit4
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2049-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2051-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	54                              # DW_OP_lit6
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2051-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2052-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc262:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2012-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2014-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2025-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2032-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc263:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2012-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2014-.Lfunc_begin0        #   ending offset
	.byte	24                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	129                             # 257
	.byte	2                               # 
	.byte	30                              # DW_OP_mul
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\304\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2025-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2032-.Lfunc_begin0        #   ending offset
	.byte	24                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	129                             # 257
	.byte	2                               # 
	.byte	30                              # DW_OP_mul
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\304\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc264:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2012-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2014-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2025-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2032-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc265:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2014-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2025-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2032-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2052-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc266:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2055-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2082-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc267:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2053-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2085-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc268:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2056-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2084-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc269:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2056-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2084-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc270:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2056-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2084-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2090-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2095-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2096-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2097-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2097-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2098-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	32                              # 32
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2098-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2099-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	192                             # 64
	.byte	0                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2099-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2100-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	224                             # 96
	.byte	0                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2100-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2102-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc271:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2053-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2085-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2090-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2091-.Lfunc_begin0        #   ending offset
	.byte	26                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	30                              # DW_OP_mul
	.byte	126                             # DW_OP_breg14
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2091-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2093-.Lfunc_begin0        #   ending offset
	.byte	29                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	126                             # DW_OP_breg14
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2096-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2097-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2097-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2098-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	50                              # DW_OP_lit2
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2098-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2099-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	52                              # DW_OP_lit4
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2099-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2101-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	54                              # DW_OP_lit6
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2101-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2102-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc272:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2055-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2082-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc273:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2055-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2082-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc274:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2057-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2083-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc275:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2058-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2102-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc276:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin6-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2108-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2108-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end6-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc277:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin6-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end6-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc278:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin6-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end6-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc279:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin6-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end6-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc280:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin6-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end6-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc281:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin6-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end6-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # super-register DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc282:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin7-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp2130-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2130-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2144-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2152-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2160-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2277-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc283:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin7-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp2115-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2115-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2150-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2150-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2160-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2277-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc284:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin7-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp2110-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2110-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2144-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	236                             # 108
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2152-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2160-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	236                             # 108
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	236                             # 108
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	236                             # 108
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	236                             # 108
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	236                             # 108
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2277-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	236                             # 108
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	236                             # 108
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	236                             # 108
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	236                             # 108
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	236                             # 108
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	236                             # 108
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	236                             # 108
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	236                             # 108
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	236                             # 108
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc285:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin7-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp2112-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2112-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2144-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2152-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2160-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2277-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc286:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin7-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp2134-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2134-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2135-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2135-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc287:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2137-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2138-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2152-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2160-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2277-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc288:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2118-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2120-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2132-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2144-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2152-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2160-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2277-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc289:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2132-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2132-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2144-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2152-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2160-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2277-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc290:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2144-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2152-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2160-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2277-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc291:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2166-.Lfunc_begin0        #   ending offset
	.byte	11                              # Loc expr size
	.byte	16                              # DW_OP_constu
	.byte	128                             # 1152921504606846976
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	16                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2166-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2167-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2167-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2168-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2168-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2169-.Lfunc_begin0        #   ending offset
	.byte	11                              # Loc expr size
	.byte	16                              # DW_OP_constu
	.byte	128                             # 1152921504606846976
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	16                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2169-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2170-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2170-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2171-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2171-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2172-.Lfunc_begin0        #   ending offset
	.byte	11                              # Loc expr size
	.byte	16                              # DW_OP_constu
	.byte	128                             # 1152921504606846976
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	16                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2172-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2221-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2221-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2223-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2223-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2260-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2260-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2262-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2262-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2277-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2320-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2320-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2322-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2322-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2356-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2356-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2357-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2357-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2394-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2394-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2396-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2396-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2431-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2431-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2432-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2432-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc292:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2122-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2144-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2152-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2160-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2179-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2179-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2180-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2180-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2221-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2221-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2222-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2222-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2260-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2260-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2261-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2261-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2275-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2275-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2277-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2284-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2284-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2320-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2320-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2323-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2323-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2324-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2324-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2330-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2330-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2331-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2331-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2341-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2341-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2342-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2342-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2356-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2356-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2358-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2358-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2359-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2359-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2394-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2394-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2398-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2398-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2431-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2431-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2438-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2438-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2439-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2439-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc293:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2124-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2185-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2186-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2189-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2189-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2190-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 68
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2192-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 68
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 68
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2221-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 68
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2221-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2224-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2224-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2228-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 68
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2275-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2284-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2284-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2285-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 68
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2285-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2291-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2291-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2320-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2320-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2321-.Lfunc_begin0        #   ending offset
	.byte	20                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2321-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2323-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 68
	.byte	0                               # 
	.byte	6                               # DW_OP_deref
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2323-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2324-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2327-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 68
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 68
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2356-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 68
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2358-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2360-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 68
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2361-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2386-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2386-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 68
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2395-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2395-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2398-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2398-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc294:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2124-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2144-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	6                               # DW_OP_deref
	.byte	50                              # DW_OP_lit2
	.byte	38                              # DW_OP_shra
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2152-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2160-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	6                               # DW_OP_deref
	.byte	50                              # DW_OP_lit2
	.byte	38                              # DW_OP_shra
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	6                               # DW_OP_deref
	.byte	50                              # DW_OP_lit2
	.byte	38                              # DW_OP_shra
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	6                               # DW_OP_deref
	.byte	50                              # DW_OP_lit2
	.byte	38                              # DW_OP_shra
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	6                               # DW_OP_deref
	.byte	50                              # DW_OP_lit2
	.byte	38                              # DW_OP_shra
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	6                               # DW_OP_deref
	.byte	50                              # DW_OP_lit2
	.byte	38                              # DW_OP_shra
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2277-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	6                               # DW_OP_deref
	.byte	50                              # DW_OP_lit2
	.byte	38                              # DW_OP_shra
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	6                               # DW_OP_deref
	.byte	50                              # DW_OP_lit2
	.byte	38                              # DW_OP_shra
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	6                               # DW_OP_deref
	.byte	50                              # DW_OP_lit2
	.byte	38                              # DW_OP_shra
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	6                               # DW_OP_deref
	.byte	50                              # DW_OP_lit2
	.byte	38                              # DW_OP_shra
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	6                               # DW_OP_deref
	.byte	50                              # DW_OP_lit2
	.byte	38                              # DW_OP_shra
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	6                               # DW_OP_deref
	.byte	50                              # DW_OP_lit2
	.byte	38                              # DW_OP_shra
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	6                               # DW_OP_deref
	.byte	50                              # DW_OP_lit2
	.byte	38                              # DW_OP_shra
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	6                               # DW_OP_deref
	.byte	50                              # DW_OP_lit2
	.byte	38                              # DW_OP_shra
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	6                               # DW_OP_deref
	.byte	50                              # DW_OP_lit2
	.byte	38                              # DW_OP_shra
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc295:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2124-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2144-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2152-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2160-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2179-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2179-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2185-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2186-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2189-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2189-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2190-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2190-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2197-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2197-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2221-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2221-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2224-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2224-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2225-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2225-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2229-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2229-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2230-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2230-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2236-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2236-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2260-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2260-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2263-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2263-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2264-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2264-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2275-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2275-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2277-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2284-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2284-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2295-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2295-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2320-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2320-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2323-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 88
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2323-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2324-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2324-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2332-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2332-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 88
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 88
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2356-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 88
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2356-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2358-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2358-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2360-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 88
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2361-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2367-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2367-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2378-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2378-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2379-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2379-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2394-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2394-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2398-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2398-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2430-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2431-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2438-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2438-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2439-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2439-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2443-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2443-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2449-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2449-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2450-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2450-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2465-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2465-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2466-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc296:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2125-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2126-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2126-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2144-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2152-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2160-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2277-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # 184
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc297:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2128-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2129-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2129-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2144-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 160
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2152-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2160-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 160
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 160
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 160
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 160
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 160
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2277-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 160
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 160
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 160
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 160
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 160
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 160
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 160
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 160
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 160
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc298:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2138-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2140-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2140-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2144-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2152-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2160-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2180-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2180-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2185-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2186-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2188-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2188-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2275-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2275-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2277-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2284-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2284-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2437-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2437-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2439-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2439-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc299:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2139-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2142-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2142-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2144-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2152-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2160-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2180-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2180-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2185-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2186-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2187-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2187-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2275-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2275-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2277-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2284-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2284-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2438-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2438-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2439-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2439-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc300:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2141-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2147-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2147-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2160-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 224
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 224
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 224
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 224
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 224
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2277-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 224
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 224
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 224
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 224
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 224
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 224
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 224
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 224
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 224
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc301:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2143-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2148-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2148-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2160-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 176
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 176
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 176
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 176
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 176
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2277-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 176
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 176
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 176
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 176
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 176
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 176
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 176
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 176
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # 176
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc302:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2149-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2185-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2186-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2200-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2200-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2202-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2205-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2239-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2239-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2241-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2244-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2442-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc303:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2165-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2168-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc304:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2189-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2190-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2204-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2208-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2229-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2230-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2243-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2247-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2280-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2284-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2300-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2304-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2305-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2306-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2337-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2343-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2372-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2378-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2379-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2380-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2416-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc305:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2219-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2221-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc306:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2228-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2229-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc307:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2228-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2229-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc308:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2231-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2232-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	112                             # -16
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2233-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2260-.Lfunc_begin0        #   ending offset
	.byte	9                               # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	112                             # -16
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc309:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2258-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2260-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc310:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2266-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2274-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2444-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc311:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2266-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2274-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2465-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc312:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2266-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2274-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2465-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc313:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2266-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2274-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2446-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2446-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2449-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2449-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2453-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2453-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2458-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2458-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2465-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc314:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2266-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2274-.Lfunc_begin0        #   ending offset
	.byte	30                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\311\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\311\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	30                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\311\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\311\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2465-.Lfunc_begin0        #   ending offset
	.byte	30                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\311\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\311\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc315:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2267-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2274-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2445-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc316:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2267-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2274-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2445-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc317:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2267-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2274-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2445-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2453-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2458-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2459-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2460-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2460-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2461-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	192                             # 64
	.byte	0                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2461-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2462-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	128                             # 128
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2462-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2463-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	192                             # 192
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2463-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2465-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc318:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2268-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2269-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc319:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2268-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2274-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2446-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2446-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2449-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2449-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2453-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2453-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2454-.Lfunc_begin0        #   ending offset
	.byte	26                              # Loc expr size
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	30                              # DW_OP_mul
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2454-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2456-.Lfunc_begin0        #   ending offset
	.byte	29                              # Loc expr size
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2459-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2460-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2460-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2461-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	50                              # DW_OP_lit2
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2461-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2462-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	52                              # DW_OP_lit4
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2462-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2464-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	54                              # DW_OP_lit6
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2464-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2465-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc320:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2268-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2274-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	32                              # 32
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	32                              # 32
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2465-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	32                              # 32
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc321:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2268-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2274-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2444-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc322:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2268-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2274-.Lfunc_begin0        #   ending offset
	.byte	24                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	129                             # 257
	.byte	2                               # 
	.byte	30                              # DW_OP_mul
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\304\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	24                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	129                             # 257
	.byte	2                               # 
	.byte	30                              # DW_OP_mul
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\304\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2444-.Lfunc_begin0        #   ending offset
	.byte	24                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	129                             # 257
	.byte	2                               # 
	.byte	30                              # DW_OP_mul
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\304\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc323:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2268-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2274-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2444-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc324:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2271-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2274-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2408-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2465-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc325:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2285-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2289-.Lfunc_begin0        #   ending offset
	.byte	19                              # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2290-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	14                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 196
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	14                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 196
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2319-.Lfunc_begin0        #   ending offset
	.byte	14                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 196
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2326-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	14                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 196
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	14                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 196
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2365-.Lfunc_begin0        #   ending offset
	.byte	14                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 196
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2365-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2366-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 196
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2366-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	14                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 196
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2377-.Lfunc_begin0        #   ending offset
	.byte	14                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 196
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2377-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2378-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 196
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2378-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2379-.Lfunc_begin0        #   ending offset
	.byte	14                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 196
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2379-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	14                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 196
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2395-.Lfunc_begin0        #   ending offset
	.byte	14                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 196
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2395-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2397-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 196
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2397-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2398-.Lfunc_begin0        #   ending offset
	.byte	14                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 196
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2398-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2400-.Lfunc_begin0        #   ending offset
	.byte	14                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 196
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2400-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	196                             # 196
	.byte	1                               # 
	.byte	6                               # DW_OP_deref
	.byte	35                              # DW_OP_plus_uconst
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc326:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2291-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2292-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2292-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2319-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2326-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2349-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2369-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2378-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2379-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc327:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2291-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2319-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2327-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2361-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2361-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2363-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2366-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2379-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2395-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2395-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2398-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc328:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2305-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2310-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2342-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2347-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2379-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2384-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc329:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2305-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2310-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 88
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2342-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2347-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2379-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2384-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc330:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2317-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2319-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2354-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2356-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2392-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2396-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2396-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2398-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc331:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2427-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2433-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc332:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2471-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2500-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc333:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2471-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2500-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc334:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2467-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2468-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc335:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2467-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2503-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc336:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2473-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2502-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc337:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2473-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2502-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc338:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2473-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2502-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2508-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2513-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2514-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2515-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2515-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2516-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	32                              # 32
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2516-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2517-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	192                             # 64
	.byte	0                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2517-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2518-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	224                             # 96
	.byte	0                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2518-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc339:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2467-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2468-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	36                              # DW_OP_shl
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc340:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2467-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2503-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2508-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2509-.Lfunc_begin0        #   ending offset
	.byte	26                              # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	30                              # DW_OP_mul
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2509-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2511-.Lfunc_begin0        #   ending offset
	.byte	29                              # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	126                             # -2
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2514-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2515-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2515-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2516-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	50                              # DW_OP_lit2
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2516-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2517-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	52                              # DW_OP_lit4
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2517-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2519-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	54                              # DW_OP_lit6
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2519-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc341:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2471-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2500-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc342:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2471-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2500-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc343:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2474-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2501-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc344:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2475-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_list_header_end0:
	.section	.debug_abbrev,"",@progbits
	.byte	1                               # Abbreviation Code
	.byte	17                              # DW_TAG_compile_unit
	.byte	1                               # DW_CHILDREN_yes
	.byte	37                              # DW_AT_producer
	.byte	37                              # DW_FORM_strx1
	.byte	19                              # DW_AT_language
	.byte	5                               # DW_FORM_data2
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	114                             # DW_AT_str_offsets_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	16                              # DW_AT_stmt_list
	.byte	23                              # DW_FORM_sec_offset
	.byte	27                              # DW_AT_comp_dir
	.byte	37                              # DW_FORM_strx1
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	115                             # DW_AT_addr_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	116                             # DW_AT_rnglists_base
	.byte	23                              # DW_FORM_sec_offset
	.ascii	"\214\001"                      # DW_AT_loclists_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	2                               # Abbreviation Code
	.byte	36                              # DW_TAG_base_type
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	62                              # DW_AT_encoding
	.byte	11                              # DW_FORM_data1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	3                               # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	4                               # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	5                               # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.ascii	"\210\001"                      # DW_AT_alignment
	.byte	15                              # DW_FORM_udata
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	6                               # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	7                               # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	8                               # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.ascii	"\210\001"                      # DW_AT_alignment
	.byte	15                              # DW_FORM_udata
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	9                               # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	10                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	11                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	12                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	13                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	14                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	15                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	16                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	17                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	18                              # Abbreviation Code
	.byte	11                              # DW_TAG_lexical_block
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	19                              # Abbreviation Code
	.byte	11                              # DW_TAG_lexical_block
	.byte	1                               # DW_CHILDREN_yes
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	20                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	21                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	22                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	23                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	24                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	25                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.ascii	"\210\001"                      # DW_AT_alignment
	.byte	15                              # DW_FORM_udata
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	26                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	27                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	28                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	29                              # Abbreviation Code
	.byte	10                              # DW_TAG_label
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	30                              # Abbreviation Code
	.byte	72                              # DW_TAG_call_site
	.byte	0                               # DW_CHILDREN_no
	.ascii	"\203\001"                      # DW_AT_call_target
	.byte	24                              # DW_FORM_exprloc
	.byte	125                             # DW_AT_call_return_pc
	.byte	27                              # DW_FORM_addrx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	31                              # Abbreviation Code
	.byte	72                              # DW_TAG_call_site
	.byte	0                               # DW_CHILDREN_no
	.byte	127                             # DW_AT_call_origin
	.byte	19                              # DW_FORM_ref4
	.byte	125                             # DW_AT_call_return_pc
	.byte	27                              # DW_FORM_addrx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	32                              # Abbreviation Code
	.byte	1                               # DW_TAG_array_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	33                              # Abbreviation Code
	.byte	33                              # DW_TAG_subrange_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	55                              # DW_AT_count
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	34                              # Abbreviation Code
	.byte	38                              # DW_TAG_const_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	35                              # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	36                              # Abbreviation Code
	.byte	36                              # DW_TAG_base_type
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	62                              # DW_AT_encoding
	.byte	11                              # DW_FORM_data1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	37                              # Abbreviation Code
	.byte	36                              # DW_TAG_base_type
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	62                              # DW_AT_encoding
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	38                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	39                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	40                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	41                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	42                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	43                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	44                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	45                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	46                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	28                              # DW_AT_const_value
	.byte	13                              # DW_FORM_sdata
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	47                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	48                              # Abbreviation Code
	.byte	4                               # DW_TAG_enumeration_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	49                              # Abbreviation Code
	.byte	40                              # DW_TAG_enumerator
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	28                              # DW_AT_const_value
	.byte	15                              # DW_FORM_udata
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	50                              # Abbreviation Code
	.byte	15                              # DW_TAG_pointer_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	51                              # Abbreviation Code
	.byte	23                              # DW_TAG_union_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	52                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	53                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	54                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	55                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	56                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	57                              # Abbreviation Code
	.byte	11                              # DW_TAG_lexical_block
	.byte	1                               # DW_CHILDREN_yes
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	58                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	59                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	60                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	61                              # Abbreviation Code
	.byte	72                              # DW_TAG_call_site
	.byte	0                               # DW_CHILDREN_no
	.byte	127                             # DW_AT_call_origin
	.byte	19                              # DW_FORM_ref4
	.ascii	"\202\001"                      # DW_AT_call_tail_call
	.byte	25                              # DW_FORM_flag_present
	.ascii	"\201\001"                      # DW_AT_call_pc
	.byte	27                              # DW_FORM_addrx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	62                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	63                              # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	64                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	11                              # DW_AT_byte_size
	.byte	5                               # DW_FORM_data2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	65                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	66                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	56                              # DW_AT_data_member_location
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	67                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	68                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	56                              # DW_AT_data_member_location
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	69                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	11                              # DW_AT_byte_size
	.byte	5                               # DW_FORM_data2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	70                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	71                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.ascii	"\210\001"                      # DW_AT_alignment
	.byte	15                              # DW_FORM_udata
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	72                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.ascii	"\210\001"                      # DW_AT_alignment
	.byte	15                              # DW_FORM_udata
	.byte	56                              # DW_AT_data_member_location
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	73                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.ascii	"\210\001"                      # DW_AT_alignment
	.byte	15                              # DW_FORM_udata
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	74                              # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	75                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	11                              # DW_AT_byte_size
	.byte	5                               # DW_FORM_data2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	76                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	56                              # DW_AT_data_member_location
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	77                              # Abbreviation Code
	.byte	21                              # DW_TAG_subroutine_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	78                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	79                              # Abbreviation Code
	.byte	15                              # DW_TAG_pointer_type
	.byte	0                               # DW_CHILDREN_no
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	80                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	81                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	82                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	83                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	11                              # DW_AT_byte_size
	.byte	5                               # DW_FORM_data2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	84                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	85                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	56                              # DW_AT_data_member_location
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	86                              # Abbreviation Code
	.byte	33                              # DW_TAG_subrange_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	55                              # DW_AT_count
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	87                              # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	88                              # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.ascii	"\210\001"                      # DW_AT_alignment
	.byte	15                              # DW_FORM_udata
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	89                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	90                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.ascii	"\210\001"                      # DW_AT_alignment
	.byte	15                              # DW_FORM_udata
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	91                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	11                              # DW_AT_byte_size
	.byte	5                               # DW_FORM_data2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	92                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.ascii	"\210\001"                      # DW_AT_alignment
	.byte	15                              # DW_FORM_udata
	.byte	56                              # DW_AT_data_member_location
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	93                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	94                              # Abbreviation Code
	.byte	21                              # DW_TAG_subroutine_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	95                              # Abbreviation Code
	.byte	38                              # DW_TAG_const_type
	.byte	0                               # DW_CHILDREN_no
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	96                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	97                              # Abbreviation Code
	.byte	53                              # DW_TAG_volatile_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	98                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	99                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	100                             # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	101                             # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.ascii	"\210\001"                      # DW_AT_alignment
	.byte	15                              # DW_FORM_udata
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	0                               # EOM(3)
	.section	.debug_info,"",@progbits
.Lcu_begin0:
	.long	.Ldebug_info_end0-.Ldebug_info_start0 # Length of Unit
.Ldebug_info_start0:
	.short	5                               # DWARF version number
	.byte	1                               # DWARF Unit Type
	.byte	8                               # Address Size (in bytes)
	.long	.debug_abbrev                   # Offset Into Abbrev. Section
	.byte	1                               # Abbrev [1] 0xc:0x4ece DW_TAG_compile_unit
	.byte	0                               # DW_AT_producer
	.short	12                              # DW_AT_language
	.byte	1                               # DW_AT_name
	.long	.Lstr_offsets_base0             # DW_AT_str_offsets_base
	.long	.Lline_table_start0             # DW_AT_stmt_list
	.byte	2                               # DW_AT_comp_dir
	.byte	15                              # DW_AT_low_pc
	.long	.Lfunc_end7-.Lfunc_begin0       # DW_AT_high_pc
	.long	.Laddr_table_base0              # DW_AT_addr_base
	.long	.Lrnglists_table_base0          # DW_AT_rnglists_base
	.long	.Lloclists_table_base0          # DW_AT_loclists_base
	.byte	2                               # Abbrev [2] 0x2b:0x5 DW_TAG_base_type
	.short	819                             # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	2                               # Abbrev [2] 0x30:0x5 DW_TAG_base_type
	.short	818                             # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	2                               # Abbrev [2] 0x35:0x5 DW_TAG_base_type
	.short	817                             # DW_AT_name
	.byte	5                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	2                               # Abbrev [2] 0x3a:0x5 DW_TAG_base_type
	.short	816                             # DW_AT_name
	.byte	5                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	2                               # Abbrev [2] 0x3f:0x5 DW_TAG_base_type
	.short	815                             # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	2                               # Abbrev [2] 0x44:0x5 DW_TAG_base_type
	.short	814                             # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	2                               # DW_AT_byte_size
	.byte	2                               # Abbrev [2] 0x49:0x5 DW_TAG_base_type
	.short	813                             # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	3                               # Abbrev [3] 0x4e:0x992 DW_TAG_subprogram
	.byte	15                              # DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	820                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	173                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	4                               # Abbrev [4] 0x5a:0xc DW_TAG_variable
	.byte	3                               # DW_AT_name
	.long	2528                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	380                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	0
	.byte	4                               # Abbrev [4] 0x66:0xc DW_TAG_variable
	.byte	8                               # DW_AT_name
	.long	2569                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	427                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	1
	.byte	4                               # Abbrev [4] 0x72:0xc DW_TAG_variable
	.byte	9                               # DW_AT_name
	.long	2587                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	487                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	2
	.byte	5                               # Abbrev [5] 0x7e:0xd DW_TAG_variable
	.byte	13                              # DW_AT_name
	.long	2630                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	591                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	3
	.byte	6                               # Abbrev [6] 0x8b:0x9 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_location
	.byte	18                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	173                             # DW_AT_decl_line
	.long	6458                            # DW_AT_type
	.byte	7                               # Abbrev [7] 0x94:0xa DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.short	834                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	173                             # DW_AT_decl_line
	.long	19884                           # DW_AT_type
	.byte	6                               # Abbrev [6] 0x9e:0x9 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	67                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	173                             # DW_AT_decl_line
	.long	5073                            # DW_AT_type
	.byte	6                               # Abbrev [6] 0xa7:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	68                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	173                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	7                               # Abbrev [7] 0xb0:0xa DW_TAG_formal_parameter
	.byte	4                               # DW_AT_location
	.short	841                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	173                             # DW_AT_decl_line
	.long	14156                           # DW_AT_type
	.byte	8                               # Abbrev [8] 0xba:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\240\005"
	.short	828                             # DW_AT_name
	.byte	16                              # DW_AT_alignment
	.byte	0                               # DW_AT_decl_file
	.byte	185                             # DW_AT_decl_line
	.long	14613                           # DW_AT_type
	.byte	9                               # Abbrev [9] 0xc8:0xd DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\240\001"
	.short	829                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	187                             # DW_AT_decl_line
	.long	12160                           # DW_AT_type
	.byte	10                              # Abbrev [10] 0xd5:0xa DW_TAG_variable
	.byte	5                               # DW_AT_location
	.short	842                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	175                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0xdf:0xa DW_TAG_variable
	.byte	6                               # DW_AT_location
	.short	843                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	176                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	11                              # Abbrev [11] 0xe9:0x9 DW_TAG_variable
	.byte	7                               # DW_AT_location
	.byte	146                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	179                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0xf2:0xa DW_TAG_variable
	.byte	8                               # DW_AT_location
	.short	596                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	184                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	10                              # Abbrev [10] 0xfc:0xa DW_TAG_variable
	.byte	9                               # DW_AT_location
	.short	844                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	181                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x106:0xa DW_TAG_variable
	.byte	10                              # DW_AT_location
	.short	845                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	181                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x110:0xa DW_TAG_variable
	.byte	11                              # DW_AT_location
	.short	846                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	181                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x11a:0xa DW_TAG_variable
	.byte	12                              # DW_AT_location
	.short	591                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	183                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	10                              # Abbrev [10] 0x124:0xa DW_TAG_variable
	.byte	13                              # DW_AT_location
	.short	847                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	193                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x12e:0xa DW_TAG_variable
	.byte	14                              # DW_AT_location
	.short	848                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	194                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x138:0xa DW_TAG_variable
	.byte	15                              # DW_AT_location
	.short	849                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	195                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x142:0xa DW_TAG_variable
	.byte	16                              # DW_AT_location
	.short	850                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	196                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x14c:0xa DW_TAG_variable
	.byte	17                              # DW_AT_location
	.short	533                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	199                             # DW_AT_decl_line
	.long	4657                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x156:0xa DW_TAG_variable
	.byte	18                              # DW_AT_location
	.short	534                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	200                             # DW_AT_decl_line
	.long	4657                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x160:0xa DW_TAG_variable
	.byte	19                              # DW_AT_location
	.short	851                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	204                             # DW_AT_decl_line
	.long	20058                           # DW_AT_type
	.byte	10                              # Abbrev [10] 0x16a:0xa DW_TAG_variable
	.byte	20                              # DW_AT_location
	.short	852                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	205                             # DW_AT_decl_line
	.long	20058                           # DW_AT_type
	.byte	10                              # Abbrev [10] 0x174:0xa DW_TAG_variable
	.byte	24                              # DW_AT_location
	.short	853                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	180                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x17e:0xa DW_TAG_variable
	.byte	27                              # DW_AT_location
	.short	854                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	180                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x188:0xa DW_TAG_variable
	.byte	28                              # DW_AT_location
	.short	855                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	182                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x192:0xa DW_TAG_variable
	.byte	29                              # DW_AT_location
	.short	856                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	182                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x19c:0xa DW_TAG_variable
	.byte	30                              # DW_AT_location
	.short	857                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	180                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x1a6:0xa DW_TAG_variable
	.byte	31                              # DW_AT_location
	.short	858                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	207                             # DW_AT_decl_line
	.long	4657                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x1b0:0xa DW_TAG_variable
	.byte	64                              # DW_AT_location
	.short	870                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	182                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x1ba:0xa DW_TAG_variable
	.byte	65                              # DW_AT_location
	.short	871                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	182                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	12                              # Abbrev [12] 0x1c4:0x9 DW_TAG_variable
	.short	835                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	177                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	12                              # Abbrev [12] 0x1cd:0x9 DW_TAG_variable
	.short	893                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	178                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x1d6:0x8 DW_TAG_variable
	.byte	69                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	189                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x1de:0x8 DW_TAG_variable
	.byte	71                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	190                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x1e6:0x8 DW_TAG_variable
	.byte	70                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	191                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x1ee:0x8 DW_TAG_variable
	.byte	72                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	192                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x1f6:0x1c DW_TAG_inlined_subroutine
	.long	4923                            # DW_AT_abstract_origin
	.byte	0                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	208                             # DW_AT_call_line
	.byte	11                              # DW_AT_call_column
	.byte	15                              # Abbrev [15] 0x1ff:0x6 DW_TAG_formal_parameter
	.byte	23                              # DW_AT_location
	.long	4931                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x205:0x6 DW_TAG_formal_parameter
	.byte	21                              # DW_AT_location
	.long	4939                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x20b:0x6 DW_TAG_formal_parameter
	.byte	22                              # DW_AT_location
	.long	4947                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x212:0x16 DW_TAG_inlined_subroutine
	.long	4923                            # DW_AT_abstract_origin
	.byte	1                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	209                             # DW_AT_call_line
	.byte	11                              # DW_AT_call_column
	.byte	15                              # Abbrev [15] 0x21b:0x6 DW_TAG_formal_parameter
	.byte	25                              # DW_AT_location
	.long	4939                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x221:0x6 DW_TAG_formal_parameter
	.byte	26                              # DW_AT_location
	.long	4947                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0x228:0x1c DW_TAG_inlined_subroutine
	.long	4956                            # DW_AT_abstract_origin
	.byte	16                              # DW_AT_low_pc
	.long	.Ltmp36-.Ltmp34                 # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	217                             # DW_AT_call_line
	.byte	15                              # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0x235:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	86
	.long	4965                            # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x23c:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	4974                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x244:0x28 DW_TAG_lexical_block
	.byte	17                              # DW_AT_low_pc
	.long	.Ltmp49-.Ltmp40                 # DW_AT_high_pc
	.byte	9                               # Abbrev [9] 0x24a:0xd DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\240\001"
	.short	830                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	219                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x257:0xa DW_TAG_variable
	.byte	32                              # DW_AT_location
	.short	859                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	219                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	10                              # Abbrev [10] 0x261:0xa DW_TAG_variable
	.byte	33                              # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	219                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x26c:0x93 DW_TAG_lexical_block
	.byte	18                              # DW_AT_low_pc
	.long	.Ltmp77-.Ltmp49                 # DW_AT_high_pc
	.byte	11                              # Abbrev [11] 0x272:0x9 DW_TAG_variable
	.byte	34                              # DW_AT_location
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	220                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x27b:0x83 DW_TAG_lexical_block
	.byte	19                              # DW_AT_low_pc
	.long	.Ltmp77-.Ltmp57                 # DW_AT_high_pc
	.byte	11                              # Abbrev [11] 0x281:0x9 DW_TAG_variable
	.byte	37                              # DW_AT_location
	.byte	73                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	224                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	11                              # Abbrev [11] 0x28a:0x9 DW_TAG_variable
	.byte	40                              # DW_AT_location
	.byte	74                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	225                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	16                              # Abbrev [16] 0x293:0x21 DW_TAG_inlined_subroutine
	.long	4923                            # DW_AT_abstract_origin
	.byte	20                              # DW_AT_low_pc
	.long	.Ltmp61-.Ltmp59                 # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	26                              # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0x2a0:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.long	4931                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x2a7:0x6 DW_TAG_formal_parameter
	.byte	35                              # DW_AT_location
	.long	4939                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x2ad:0x6 DW_TAG_formal_parameter
	.byte	36                              # DW_AT_location
	.long	4947                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0x2b4:0x21 DW_TAG_inlined_subroutine
	.long	4923                            # DW_AT_abstract_origin
	.byte	21                              # DW_AT_low_pc
	.long	.Ltmp68-.Ltmp63                 # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	225                             # DW_AT_call_line
	.byte	26                              # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0x2c1:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	80
	.long	4931                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x2c8:0x6 DW_TAG_formal_parameter
	.byte	38                              # DW_AT_location
	.long	4939                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x2ce:0x6 DW_TAG_formal_parameter
	.byte	39                              # DW_AT_location
	.long	4947                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x2d5:0x28 DW_TAG_lexical_block
	.byte	22                              # DW_AT_low_pc
	.long	.Ltmp77-.Ltmp68                 # DW_AT_high_pc
	.byte	9                               # Abbrev [9] 0x2db:0xd DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\240\001"
	.short	830                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	226                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x2e8:0xa DW_TAG_variable
	.byte	41                              # DW_AT_location
	.short	859                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	226                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	10                              # Abbrev [10] 0x2f2:0xa DW_TAG_variable
	.byte	42                              # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	226                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x2ff:0x11 DW_TAG_lexical_block
	.byte	23                              # DW_AT_low_pc
	.long	.Ltmp100-.Ltmp95                # DW_AT_high_pc
	.byte	10                              # Abbrev [10] 0x305:0xa DW_TAG_variable
	.byte	47                              # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	231                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0x310:0x20 DW_TAG_inlined_subroutine
	.long	4956                            # DW_AT_abstract_origin
	.byte	24                              # DW_AT_low_pc
	.long	.Ltmp83-.Ltmp81                 # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	245                             # DW_AT_call_line
	.byte	15                              # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0x31d:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\200\004"
	.long	4965                            # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x326:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\260\003"
	.long	4974                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x330:0x81 DW_TAG_lexical_block
	.byte	2                               # DW_AT_ranges
	.byte	8                               # Abbrev [8] 0x332:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\240\005"
	.short	831                             # DW_AT_name
	.byte	8                               # DW_AT_alignment
	.byte	0                               # DW_AT_decl_file
	.byte	248                             # DW_AT_decl_line
	.long	19866                           # DW_AT_type
	.byte	14                              # Abbrev [14] 0x340:0x3b DW_TAG_inlined_subroutine
	.long	4984                            # DW_AT_abstract_origin
	.byte	3                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	249                             # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	15                              # Abbrev [15] 0x349:0x6 DW_TAG_formal_parameter
	.byte	43                              # DW_AT_location
	.long	4988                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x34f:0x6 DW_TAG_formal_parameter
	.byte	44                              # DW_AT_location
	.long	4996                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x355:0x6 DW_TAG_formal_parameter
	.byte	45                              # DW_AT_location
	.long	5004                            # DW_AT_abstract_origin
	.byte	19                              # Abbrev [19] 0x35b:0x1f DW_TAG_lexical_block
	.byte	4                               # DW_AT_ranges
	.byte	20                              # Abbrev [20] 0x35d:0x6 DW_TAG_variable
	.byte	46                              # DW_AT_location
	.long	5045                            # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x363:0x9 DW_TAG_inlined_subroutine
	.long	4923                            # DW_AT_abstract_origin
	.byte	5                               # DW_AT_ranges
	.byte	5                               # DW_AT_call_file
	.byte	252                             # DW_AT_call_line
	.byte	21                              # DW_AT_call_column
	.byte	22                              # Abbrev [22] 0x36c:0xd DW_TAG_inlined_subroutine
	.long	4923                            # DW_AT_abstract_origin
	.byte	25                              # DW_AT_low_pc
	.long	.Ltmp122-.Ltmp121               # DW_AT_high_pc
	.byte	5                               # DW_AT_call_file
	.byte	253                             # DW_AT_call_line
	.byte	21                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x37b:0x35 DW_TAG_lexical_block
	.byte	26                              # DW_AT_low_pc
	.long	.Ltmp152-.Ltmp134               # DW_AT_high_pc
	.byte	11                              # Abbrev [11] 0x381:0x9 DW_TAG_variable
	.byte	49                              # DW_AT_location
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	251                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x38a:0x25 DW_TAG_lexical_block
	.byte	27                              # DW_AT_low_pc
	.long	.Ltmp152-.Ltmp141               # DW_AT_high_pc
	.byte	11                              # Abbrev [11] 0x390:0x9 DW_TAG_variable
	.byte	50                              # DW_AT_location
	.byte	73                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	255                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	23                              # Abbrev [23] 0x399:0xa DW_TAG_variable
	.byte	51                              # DW_AT_location
	.byte	74                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	256                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x3a3:0xb DW_TAG_variable
	.byte	52                              # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	257                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x3b1:0x12 DW_TAG_lexical_block
	.byte	28                              # DW_AT_low_pc
	.long	.Ltmp112-.Ltmp103               # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x3b7:0xb DW_TAG_variable
	.byte	48                              # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	272                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x3c3:0x1f6 DW_TAG_lexical_block
	.byte	6                               # DW_AT_ranges
	.byte	25                              # Abbrev [25] 0x3c5:0xf DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\340\004"
	.short	832                             # DW_AT_name
	.byte	16                              # DW_AT_alignment
	.byte	0                               # DW_AT_decl_file
	.short	592                             # DW_AT_decl_line
	.long	16131                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x3d4:0xb DW_TAG_variable
	.byte	53                              # DW_AT_location
	.short	860                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	574                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x3df:0xb DW_TAG_variable
	.byte	54                              # DW_AT_location
	.short	861                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	575                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x3ea:0xb DW_TAG_variable
	.byte	55                              # DW_AT_location
	.short	862                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	576                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x3f5:0xb DW_TAG_variable
	.byte	56                              # DW_AT_location
	.short	863                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	577                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x400:0xb DW_TAG_variable
	.byte	57                              # DW_AT_location
	.short	799                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	579                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x40b:0xb DW_TAG_variable
	.byte	58                              # DW_AT_location
	.short	864                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	588                             # DW_AT_decl_line
	.long	12271                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x416:0xb DW_TAG_variable
	.byte	59                              # DW_AT_location
	.short	865                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	594                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x421:0xb DW_TAG_variable
	.byte	60                              # DW_AT_location
	.short	866                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	595                             # DW_AT_decl_line
	.long	14495                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x42c:0xb DW_TAG_variable
	.byte	61                              # DW_AT_location
	.short	867                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	597                             # DW_AT_decl_line
	.long	12271                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x437:0xb DW_TAG_variable
	.byte	85                              # DW_AT_location
	.short	881                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	596                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	26                              # Abbrev [26] 0x442:0xa DW_TAG_variable
	.short	895                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	593                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0x44c:0x131 DW_TAG_lexical_block
	.byte	7                               # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0x44e:0xb DW_TAG_variable
	.byte	73                              # DW_AT_location
	.short	874                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	612                             # DW_AT_decl_line
	.long	4697                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x459:0xb DW_TAG_variable
	.byte	74                              # DW_AT_location
	.short	875                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	613                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x464:0xb DW_TAG_variable
	.byte	75                              # DW_AT_location
	.short	876                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	614                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x46f:0xb DW_TAG_variable
	.byte	76                              # DW_AT_location
	.short	877                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	615                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x47a:0xb DW_TAG_variable
	.byte	78                              # DW_AT_location
	.short	878                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	613                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0x485:0x80 DW_TAG_lexical_block
	.byte	8                               # DW_AT_ranges
	.byte	23                              # Abbrev [23] 0x487:0xa DW_TAG_variable
	.byte	77                              # DW_AT_location
	.byte	74                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	617                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0x491:0x73 DW_TAG_lexical_block
	.byte	9                               # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0x493:0xb DW_TAG_variable
	.byte	86                              # DW_AT_location
	.short	882                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	620                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	23                              # Abbrev [23] 0x49e:0xa DW_TAG_variable
	.byte	87                              # DW_AT_location
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	619                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x4a8:0x44 DW_TAG_lexical_block
	.byte	29                              # DW_AT_low_pc
	.long	.Ltmp501-.Ltmp474               # DW_AT_high_pc
	.byte	27                              # Abbrev [27] 0x4ae:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\240\001"
	.short	833                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	629                             # DW_AT_decl_line
	.long	14014                           # DW_AT_type
	.byte	27                              # Abbrev [27] 0x4bc:0xc DW_TAG_variable
	.byte	1                               # DW_AT_location
	.byte	93
	.short	444                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	628                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	18                              # Abbrev [18] 0x4c8:0x23 DW_TAG_lexical_block
	.byte	30                              # DW_AT_low_pc
	.long	.Ltmp501-.Ltmp476               # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x4ce:0xb DW_TAG_variable
	.byte	88                              # DW_AT_location
	.short	879                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	631                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x4d9:0x11 DW_TAG_lexical_block
	.byte	30                              # DW_AT_low_pc
	.long	.Ltmp501-.Ltmp476               # DW_AT_high_pc
	.byte	23                              # Abbrev [23] 0x4df:0xa DW_TAG_variable
	.byte	89                              # DW_AT_location
	.byte	48                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	633                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x4ec:0x17 DW_TAG_lexical_block
	.byte	10                              # DW_AT_ranges
	.byte	23                              # Abbrev [23] 0x4ee:0xa DW_TAG_variable
	.byte	90                              # DW_AT_location
	.byte	73                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	646                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	23                              # Abbrev [23] 0x4f8:0xa DW_TAG_variable
	.byte	91                              # DW_AT_location
	.byte	48                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	647                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x505:0x3d DW_TAG_lexical_block
	.byte	31                              # DW_AT_low_pc
	.long	.Ltmp397-.Ltmp362               # DW_AT_high_pc
	.byte	23                              # Abbrev [23] 0x50b:0xa DW_TAG_variable
	.byte	79                              # DW_AT_location
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	665                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x515:0x2c DW_TAG_lexical_block
	.byte	32                              # DW_AT_low_pc
	.long	.Ltmp397-.Ltmp374               # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x51b:0xb DW_TAG_variable
	.byte	80                              # DW_AT_location
	.short	879                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	669                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0x526:0x1a DW_TAG_lexical_block
	.byte	11                              # DW_AT_ranges
	.byte	23                              # Abbrev [23] 0x528:0xa DW_TAG_variable
	.byte	81                              # DW_AT_location
	.byte	48                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	671                             # DW_AT_decl_line
	.long	4657                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0x532:0xd DW_TAG_lexical_block
	.byte	12                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0x534:0xa DW_TAG_variable
	.short	896                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	674                             # DW_AT_decl_line
	.long	4819                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x542:0x1b DW_TAG_lexical_block
	.byte	13                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0x544:0xb DW_TAG_variable
	.byte	83                              # DW_AT_location
	.short	880                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	692                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0x54f:0xd DW_TAG_lexical_block
	.byte	14                              # DW_AT_ranges
	.byte	23                              # Abbrev [23] 0x551:0xa DW_TAG_variable
	.byte	82                              # DW_AT_location
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	693                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x55d:0x1f DW_TAG_lexical_block
	.byte	15                              # DW_AT_ranges
	.byte	23                              # Abbrev [23] 0x55f:0xa DW_TAG_variable
	.byte	92                              # DW_AT_location
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	702                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x569:0x12 DW_TAG_lexical_block
	.byte	33                              # DW_AT_low_pc
	.long	.Ltmp649-.Ltmp642               # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x56f:0xb DW_TAG_variable
	.byte	98                              # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	703                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x57d:0x3b DW_TAG_lexical_block
	.byte	16                              # DW_AT_ranges
	.byte	23                              # Abbrev [23] 0x57f:0xa DW_TAG_variable
	.byte	84                              # DW_AT_location
	.byte	74                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	708                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x589:0x2e DW_TAG_lexical_block
	.byte	34                              # DW_AT_low_pc
	.long	.Ltmp588-.Ltmp536               # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x58f:0xb DW_TAG_variable
	.byte	93                              # DW_AT_location
	.short	882                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	711                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	23                              # Abbrev [23] 0x59a:0xa DW_TAG_variable
	.byte	94                              # DW_AT_location
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	710                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x5a4:0x12 DW_TAG_lexical_block
	.byte	35                              # DW_AT_low_pc
	.long	.Ltmp586-.Ltmp580               # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x5aa:0xb DW_TAG_variable
	.byte	95                              # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	721                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x5b9:0x2a3 DW_TAG_lexical_block
	.byte	17                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0x5bb:0xb DW_TAG_variable
	.byte	62                              # DW_AT_location
	.short	868                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	383                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x5c6:0xb DW_TAG_variable
	.byte	63                              # DW_AT_location
	.short	869                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	382                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x5d1:0xb DW_TAG_variable
	.byte	96                              # DW_AT_location
	.short	883                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	382                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x5dc:0xb DW_TAG_variable
	.byte	123                             # DW_AT_location
	.short	889                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	482                             # DW_AT_decl_line
	.long	20058                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x5e7:0xb DW_TAG_variable
	.byte	124                             # DW_AT_location
	.short	890                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	483                             # DW_AT_decl_line
	.long	20058                           # DW_AT_type
	.byte	23                              # Abbrev [23] 0x5f2:0xa DW_TAG_variable
	.byte	125                             # DW_AT_location
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	484                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x5fc:0x12 DW_TAG_lexical_block
	.byte	36                              # DW_AT_low_pc
	.long	.Ltmp217-.Ltmp191               # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x602:0xb DW_TAG_variable
	.byte	66                              # DW_AT_location
	.short	872                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	387                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x60e:0x15 DW_TAG_lexical_block
	.byte	37                              # DW_AT_low_pc
	.long	.Ltmp246-.Ltmp220               # DW_AT_high_pc
	.byte	27                              # Abbrev [27] 0x614:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.short	872                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	389                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x623:0xe DW_TAG_lexical_block
	.byte	18                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0x625:0xb DW_TAG_variable
	.byte	99                              # DW_AT_location
	.short	872                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	405                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x631:0x11 DW_TAG_lexical_block
	.byte	19                              # DW_AT_ranges
	.byte	27                              # Abbrev [27] 0x633:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\220\002"
	.short	872                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	406                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x642:0xaf DW_TAG_lexical_block
	.byte	20                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0x644:0xb DW_TAG_variable
	.byte	107                             # DW_AT_location
	.short	887                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	411                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0x64f:0x7f DW_TAG_lexical_block
	.byte	21                              # DW_AT_ranges
	.byte	23                              # Abbrev [23] 0x651:0xa DW_TAG_variable
	.byte	108                             # DW_AT_location
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	412                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x65b:0x15 DW_TAG_lexical_block
	.byte	38                              # DW_AT_low_pc
	.long	.Ltmp845-.Ltmp810               # DW_AT_high_pc
	.byte	27                              # Abbrev [27] 0x661:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\220\002"
	.short	872                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	412                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x670:0x12 DW_TAG_lexical_block
	.byte	39                              # DW_AT_low_pc
	.long	.Ltmp900-.Ltmp893               # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x676:0xb DW_TAG_variable
	.byte	112                             # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	412                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x682:0x12 DW_TAG_lexical_block
	.byte	40                              # DW_AT_low_pc
	.long	.Ltmp911-.Ltmp903               # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x688:0xb DW_TAG_variable
	.byte	113                             # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	412                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x694:0x15 DW_TAG_lexical_block
	.byte	41                              # DW_AT_low_pc
	.long	.Ltmp949-.Ltmp920               # DW_AT_high_pc
	.byte	27                              # Abbrev [27] 0x69a:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\220\002"
	.short	872                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	412                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x6a9:0x12 DW_TAG_lexical_block
	.byte	42                              # DW_AT_low_pc
	.long	.Ltmp965-.Ltmp958               # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x6af:0xb DW_TAG_variable
	.byte	114                             # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	412                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x6bb:0x12 DW_TAG_lexical_block
	.byte	43                              # DW_AT_low_pc
	.long	.Ltmp979-.Ltmp972               # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x6c1:0xb DW_TAG_variable
	.byte	115                             # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	412                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x6ce:0x11 DW_TAG_lexical_block
	.byte	44                              # DW_AT_low_pc
	.long	.Ltmp1008-.Ltmp983              # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x6d4:0xa DW_TAG_variable
	.short	872                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	413                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x6df:0x11 DW_TAG_lexical_block
	.byte	45                              # DW_AT_low_pc
	.long	.Ltmp1034-.Ltmp1008             # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x6e5:0xa DW_TAG_variable
	.short	872                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	414                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x6f1:0x12 DW_TAG_lexical_block
	.byte	46                              # DW_AT_low_pc
	.long	.Ltmp627-.Ltmp600               # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x6f7:0xb DW_TAG_variable
	.byte	97                              # DW_AT_location
	.short	872                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	396                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x703:0x6e DW_TAG_lexical_block
	.byte	22                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0x705:0xb DW_TAG_variable
	.byte	100                             # DW_AT_location
	.short	560                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	434                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x710:0xb DW_TAG_variable
	.byte	106                             # DW_AT_location
	.short	886                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	436                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x71b:0xb DW_TAG_variable
	.byte	111                             # DW_AT_location
	.short	888                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	435                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	26                              # Abbrev [26] 0x726:0xa DW_TAG_variable
	.short	894                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	435                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x730:0x40 DW_TAG_inlined_subroutine
	.long	5078                            # DW_AT_abstract_origin
	.byte	47                              # DW_AT_low_pc
	.long	.Ltmp866-.Ltmp850               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	461                             # DW_AT_call_line
	.byte	28                              # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0x73e:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	48
	.long	5086                            # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x746:0x16 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_location
	.byte	145
	.ascii	"\210\002"
	.byte	148
	.byte	4
	.byte	168
	.asciz	"\265\200\200"
	.byte	168
	.asciz	"\272\200\200"
	.byte	159
	.long	5094                            # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x75c:0x6 DW_TAG_variable
	.byte	110                             # DW_AT_location
	.long	5102                            # DW_AT_abstract_origin
	.byte	18                              # Abbrev [18] 0x762:0xd DW_TAG_lexical_block
	.byte	47                              # DW_AT_low_pc
	.long	.Ltmp866-.Ltmp850               # DW_AT_high_pc
	.byte	20                              # Abbrev [20] 0x768:0x6 DW_TAG_variable
	.byte	109                             # DW_AT_location
	.long	5111                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x771:0x74 DW_TAG_lexical_block
	.byte	23                              # DW_AT_ranges
	.byte	23                              # Abbrev [23] 0x773:0xa DW_TAG_variable
	.byte	116                             # DW_AT_location
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	476                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x77d:0x11 DW_TAG_lexical_block
	.byte	48                              # DW_AT_low_pc
	.long	.Ltmp1097-.Ltmp1058             # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x783:0xa DW_TAG_variable
	.short	872                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	476                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x78e:0x12 DW_TAG_lexical_block
	.byte	49                              # DW_AT_low_pc
	.long	.Ltmp1121-.Ltmp1114             # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x794:0xb DW_TAG_variable
	.byte	117                             # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	476                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x7a0:0x12 DW_TAG_lexical_block
	.byte	50                              # DW_AT_low_pc
	.long	.Ltmp1132-.Ltmp1124             # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x7a6:0xb DW_TAG_variable
	.byte	118                             # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	476                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x7b2:0xe DW_TAG_lexical_block
	.byte	24                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0x7b4:0xb DW_TAG_variable
	.byte	119                             # DW_AT_location
	.short	872                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	476                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x7c0:0x12 DW_TAG_lexical_block
	.byte	51                              # DW_AT_low_pc
	.long	.Ltmp1191-.Ltmp1184             # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x7c6:0xb DW_TAG_variable
	.byte	120                             # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	476                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x7d2:0x12 DW_TAG_lexical_block
	.byte	52                              # DW_AT_low_pc
	.long	.Ltmp1205-.Ltmp1198             # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x7d8:0xb DW_TAG_variable
	.byte	121                             # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	476                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x7e5:0xe DW_TAG_lexical_block
	.byte	25                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0x7e7:0xb DW_TAG_variable
	.byte	122                             # DW_AT_location
	.short	872                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	478                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x7f3:0x25 DW_TAG_lexical_block
	.byte	26                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0x7f5:0xb DW_TAG_variable
	.byte	126                             # DW_AT_location
	.short	873                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	507                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x800:0xb DW_TAG_variable
	.byte	127                             # DW_AT_location
	.short	872                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	508                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x80b:0xc DW_TAG_variable
	.ascii	"\200\001"                      # DW_AT_location
	.short	891                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	509                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x818:0x43 DW_TAG_lexical_block
	.byte	53                              # DW_AT_low_pc
	.long	.Ltmp1343-.Ltmp1328             # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x81e:0xc DW_TAG_variable
	.ascii	"\201\001"                      # DW_AT_location
	.short	879                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	497                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x82a:0x30 DW_TAG_lexical_block
	.byte	54                              # DW_AT_low_pc
	.long	.Ltmp1343-.Ltmp1330             # DW_AT_high_pc
	.byte	23                              # Abbrev [23] 0x830:0xb DW_TAG_variable
	.ascii	"\202\001"                      # DW_AT_location
	.byte	73                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	499                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	23                              # Abbrev [23] 0x83b:0xb DW_TAG_variable
	.ascii	"\203\001"                      # DW_AT_location
	.byte	74                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	500                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x846:0x13 DW_TAG_lexical_block
	.byte	55                              # DW_AT_low_pc
	.long	.Ltmp1343-.Ltmp1334             # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x84c:0xc DW_TAG_variable
	.ascii	"\204\001"                      # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	502                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x85c:0x1b DW_TAG_lexical_block
	.byte	27                              # DW_AT_ranges
	.byte	23                              # Abbrev [23] 0x85e:0xa DW_TAG_variable
	.byte	67                              # DW_AT_location
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	280                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0x868:0xe DW_TAG_lexical_block
	.byte	28                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0x86a:0xb DW_TAG_variable
	.byte	68                              # DW_AT_location
	.short	872                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	283                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x877:0x85 DW_TAG_lexical_block
	.byte	29                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0x879:0xb DW_TAG_variable
	.byte	101                             # DW_AT_location
	.short	873                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	359                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	29                              # Abbrev [29] 0x884:0x7 DW_TAG_label
	.short	892                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	300                             # DW_AT_decl_line
	.byte	56                              # DW_AT_low_pc
	.byte	18                              # Abbrev [18] 0x88b:0x12 DW_TAG_lexical_block
	.byte	56                              # DW_AT_low_pc
	.long	.Ltmp281-.Ltmp278               # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x891:0xb DW_TAG_variable
	.byte	69                              # DW_AT_location
	.short	872                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	321                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x89d:0x11 DW_TAG_lexical_block
	.byte	57                              # DW_AT_low_pc
	.long	.Ltmp283-.Ltmp281               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x8a3:0xa DW_TAG_variable
	.short	872                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	322                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x8ae:0x31 DW_TAG_lexical_block
	.byte	58                              # DW_AT_low_pc
	.long	.Ltmp332-.Ltmp300               # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x8b4:0xb DW_TAG_variable
	.byte	70                              # DW_AT_location
	.short	873                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	333                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0x8bf:0x1f DW_TAG_lexical_block
	.byte	30                              # DW_AT_ranges
	.byte	23                              # Abbrev [23] 0x8c1:0xa DW_TAG_variable
	.byte	71                              # DW_AT_location
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	338                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x8cb:0x12 DW_TAG_lexical_block
	.byte	59                              # DW_AT_low_pc
	.long	.Ltmp317-.Ltmp311               # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x8d1:0xb DW_TAG_variable
	.byte	72                              # DW_AT_location
	.short	872                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	340                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x8df:0xe DW_TAG_lexical_block
	.byte	31                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0x8e1:0xb DW_TAG_variable
	.byte	102                             # DW_AT_location
	.short	872                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	360                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x8ed:0xe DW_TAG_lexical_block
	.byte	32                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0x8ef:0xb DW_TAG_variable
	.byte	103                             # DW_AT_location
	.short	872                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	365                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x8fc:0x1d DW_TAG_lexical_block
	.byte	60                              # DW_AT_low_pc
	.long	.Ltmp786-.Ltmp783               # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x902:0xb DW_TAG_variable
	.byte	104                             # DW_AT_location
	.short	884                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	751                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x90d:0xb DW_TAG_variable
	.byte	105                             # DW_AT_location
	.short	885                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	752                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	30                              # Abbrev [30] 0x919:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.byte	61                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x91d:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.byte	62                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x921:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.byte	63                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x925:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.byte	64                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x929:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.byte	65                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x92d:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	66                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x931:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.byte	67                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x935:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	68                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x939:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	69                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x93d:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.byte	70                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x941:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.byte	71                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x945:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	72                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x949:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.byte	73                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x94d:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	90
	.byte	74                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x951:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	75                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x955:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.byte	76                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x959:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.byte	77                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x95d:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.byte	78                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x961:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	79                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x965:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.byte	80                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x969:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	90
	.byte	81                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x96d:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	88
	.byte	82                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x971:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.byte	83                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x975:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	84                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x979:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.byte	85                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x97d:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	90
	.byte	86                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x981:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	95
	.byte	87                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x985:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.byte	88                              # DW_AT_call_return_pc
	.byte	31                              # Abbrev [31] 0x989:0x6 DW_TAG_call_site
	.long	5133                            # DW_AT_call_origin
	.byte	89                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x98f:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	90                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x993:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	91                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x997:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	92                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x99b:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	93                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x99f:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	94                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x9a3:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	95                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x9a7:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	94
	.byte	96                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x9ab:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	90
	.byte	97                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x9af:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	98                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x9b3:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	99                              # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x9b7:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	100                             # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x9bb:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	101                             # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x9bf:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	102                             # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x9c3:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	103                             # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x9c7:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	90
	.byte	104                             # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x9cb:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	105                             # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x9cf:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	106                             # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x9d3:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.byte	107                             # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x9d7:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.byte	108                             # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x9db:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	109                             # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x9e0:0xc DW_TAG_array_type
	.long	2540                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x9e5:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	34                              # Abbrev [34] 0x9ec:0x5 DW_TAG_const_type
	.long	2545                            # DW_AT_type
	.byte	35                              # Abbrev [35] 0x9f1:0x8 DW_TAG_typedef
	.long	2553                            # DW_AT_type
	.byte	6                               # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	24                              # DW_AT_decl_line
	.byte	35                              # Abbrev [35] 0x9f9:0x8 DW_TAG_typedef
	.long	2561                            # DW_AT_type
	.byte	5                               # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	38                              # DW_AT_decl_line
	.byte	36                              # Abbrev [36] 0xa01:0x4 DW_TAG_base_type
	.byte	4                               # DW_AT_name
	.byte	8                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	37                              # Abbrev [37] 0xa05:0x4 DW_TAG_base_type
	.byte	7                               # DW_AT_name
	.byte	8                               # DW_AT_byte_size
	.byte	7                               # DW_AT_encoding
	.byte	32                              # Abbrev [32] 0xa09:0x12 DW_TAG_array_type
	.long	2540                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0xa0e:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0xa14:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0xa1b:0x12 DW_TAG_array_type
	.long	2605                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0xa20:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	33                              # Abbrev [33] 0xa26:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	34                              # Abbrev [34] 0xa2d:0x5 DW_TAG_const_type
	.long	2610                            # DW_AT_type
	.byte	35                              # Abbrev [35] 0xa32:0x8 DW_TAG_typedef
	.long	2618                            # DW_AT_type
	.byte	12                              # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.byte	24                              # DW_AT_decl_line
	.byte	35                              # Abbrev [35] 0xa3a:0x8 DW_TAG_typedef
	.long	2626                            # DW_AT_type
	.byte	11                              # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	37                              # DW_AT_decl_line
	.byte	36                              # Abbrev [36] 0xa42:0x4 DW_TAG_base_type
	.byte	10                              # DW_AT_name
	.byte	6                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	32                              # Abbrev [32] 0xa46:0xc DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0xa4b:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	128                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	38                              # Abbrev [38] 0xa52:0xc DW_TAG_variable
	.byte	14                              # DW_AT_name
	.long	2654                            # DW_AT_type
                                        # DW_AT_external
	.byte	0                               # DW_AT_decl_file
	.short	936                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	4
	.byte	36                              # Abbrev [36] 0xa5e:0x4 DW_TAG_base_type
	.byte	15                              # DW_AT_name
	.byte	5                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	39                              # Abbrev [39] 0xa62:0xb DW_TAG_variable
	.byte	16                              # DW_AT_name
	.long	2669                            # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	47                              # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	5
	.byte	32                              # Abbrev [32] 0xa6d:0xc DW_TAG_array_type
	.long	2681                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0xa72:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	34                              # Abbrev [34] 0xa79:0x5 DW_TAG_const_type
	.long	2686                            # DW_AT_type
	.byte	40                              # Abbrev [40] 0xa7e:0x17 DW_TAG_structure_type
	.byte	8                               # DW_AT_byte_size
	.byte	4                               # DW_AT_decl_file
	.byte	44                              # DW_AT_decl_line
	.byte	41                              # Abbrev [41] 0xa82:0x9 DW_TAG_member
	.byte	17                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	45                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0xa8b:0x9 DW_TAG_member
	.byte	18                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	46                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	39                              # Abbrev [39] 0xa95:0xb DW_TAG_variable
	.byte	19                              # DW_AT_name
	.long	2720                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	51                              # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	6
	.byte	32                              # Abbrev [32] 0xaa0:0x12 DW_TAG_array_type
	.long	2605                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0xaa5:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	8                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0xaab:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	39                              # Abbrev [39] 0xab2:0xb DW_TAG_variable
	.byte	20                              # DW_AT_name
	.long	2749                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	49                              # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	7
	.byte	32                              # Abbrev [32] 0xabd:0xc DW_TAG_array_type
	.long	2540                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0xac2:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	8                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	39                              # Abbrev [39] 0xac9:0xb DW_TAG_variable
	.byte	21                              # DW_AT_name
	.long	2772                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	52                              # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	8
	.byte	32                              # Abbrev [32] 0xad4:0x12 DW_TAG_array_type
	.long	2605                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0xad9:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	9                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0xadf:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	39                              # Abbrev [39] 0xae6:0xb DW_TAG_variable
	.byte	22                              # DW_AT_name
	.long	2801                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	35                              # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	9
	.byte	32                              # Abbrev [32] 0xaf1:0x12 DW_TAG_array_type
	.long	2540                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0xaf6:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	11                              # DW_AT_count
	.byte	33                              # Abbrev [33] 0xafc:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	42                              # Abbrev [42] 0xb03:0x656 DW_TAG_subprogram
	.ascii	"\260\001"                      # DW_AT_low_pc
	.long	.Lfunc_end5-.Lfunc_begin5       # DW_AT_high_pc
	.byte	5                               # DW_AT_frame_base
	.byte	156
	.byte	17
	.ascii	"\260A"
	.byte	34
                                        # DW_AT_call_all_calls
	.short	825                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	938                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	5                               # Abbrev [5] 0xb15:0xd DW_TAG_variable
	.byte	23                              # DW_AT_name
	.long	4441                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	972                             # DW_AT_decl_line
	.byte	8                               # DW_AT_alignment
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	10
	.byte	43                              # Abbrev [43] 0xb22:0xb DW_TAG_formal_parameter
	.ascii	"\273\001"                      # DW_AT_location
	.byte	18                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	938                             # DW_AT_decl_line
	.long	6458                            # DW_AT_type
	.byte	44                              # Abbrev [44] 0xb2d:0xc DW_TAG_formal_parameter
	.ascii	"\274\001"                      # DW_AT_location
	.short	907                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	938                             # DW_AT_decl_line
	.long	19884                           # DW_AT_type
	.byte	44                              # Abbrev [44] 0xb39:0xc DW_TAG_formal_parameter
	.ascii	"\275\001"                      # DW_AT_location
	.short	908                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	938                             # DW_AT_decl_line
	.long	19884                           # DW_AT_type
	.byte	44                              # Abbrev [44] 0xb45:0xc DW_TAG_formal_parameter
	.ascii	"\276\001"                      # DW_AT_location
	.short	909                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	938                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	44                              # Abbrev [44] 0xb51:0xc DW_TAG_formal_parameter
	.ascii	"\277\001"                      # DW_AT_location
	.short	914                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	938                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	44                              # Abbrev [44] 0xb5d:0xc DW_TAG_formal_parameter
	.ascii	"\300\001"                      # DW_AT_location
	.short	915                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	938                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	44                              # Abbrev [44] 0xb69:0xc DW_TAG_formal_parameter
	.ascii	"\301\001"                      # DW_AT_location
	.short	916                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	938                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	25                              # Abbrev [25] 0xb75:0xf DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\220\032"
	.short	910                             # DW_AT_name
	.byte	16                              # DW_AT_alignment
	.byte	0                               # DW_AT_decl_file
	.short	945                             # DW_AT_decl_line
	.long	20076                           # DW_AT_type
	.byte	25                              # Abbrev [25] 0xb84:0xf DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\220\021"
	.short	911                             # DW_AT_name
	.byte	8                               # DW_AT_alignment
	.byte	0                               # DW_AT_decl_file
	.short	946                             # DW_AT_decl_line
	.long	20101                           # DW_AT_type
	.byte	25                              # Abbrev [25] 0xb93:0xf DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\220\b"
	.short	912                             # DW_AT_name
	.byte	8                               # DW_AT_alignment
	.byte	0                               # DW_AT_decl_file
	.short	947                             # DW_AT_decl_line
	.long	20101                           # DW_AT_type
	.byte	27                              # Abbrev [27] 0xba2:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\200\003"
	.short	859                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	948                             # DW_AT_decl_line
	.long	20125                           # DW_AT_type
	.byte	27                              # Abbrev [27] 0xbb0:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\260\002"
	.short	893                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	956                             # DW_AT_decl_line
	.long	20143                           # DW_AT_type
	.byte	25                              # Abbrev [25] 0xbbe:0xf DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\220\004"
	.short	913                             # DW_AT_name
	.byte	16                              # DW_AT_alignment
	.byte	0                               # DW_AT_decl_file
	.short	966                             # DW_AT_decl_line
	.long	20161                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0xbcd:0xc DW_TAG_variable
	.ascii	"\302\001"                      # DW_AT_location
	.short	917                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	940                             # DW_AT_decl_line
	.long	14495                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0xbd9:0xc DW_TAG_variable
	.ascii	"\303\001"                      # DW_AT_location
	.short	918                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	941                             # DW_AT_decl_line
	.long	14495                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0xbe5:0xc DW_TAG_variable
	.ascii	"\304\001"                      # DW_AT_location
	.short	842                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	943                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xbf1:0xc DW_TAG_variable
	.ascii	"\305\001"                      # DW_AT_location
	.short	843                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	944                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xbfd:0xc DW_TAG_variable
	.ascii	"\306\001"                      # DW_AT_location
	.short	828                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	949                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0xc09:0xc DW_TAG_variable
	.ascii	"\307\001"                      # DW_AT_location
	.short	919                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	951                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0xc15:0xc DW_TAG_variable
	.ascii	"\310\001"                      # DW_AT_location
	.short	920                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	952                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xc21:0xc DW_TAG_variable
	.ascii	"\311\001"                      # DW_AT_location
	.short	921                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	953                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xc2d:0xc DW_TAG_variable
	.ascii	"\312\001"                      # DW_AT_location
	.short	922                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	954                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xc39:0xc DW_TAG_variable
	.ascii	"\313\001"                      # DW_AT_location
	.short	923                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	955                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xc45:0xc DW_TAG_variable
	.ascii	"\314\001"                      # DW_AT_location
	.short	924                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	957                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xc51:0xc DW_TAG_variable
	.ascii	"\315\001"                      # DW_AT_location
	.short	925                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	958                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xc5d:0xc DW_TAG_variable
	.ascii	"\316\001"                      # DW_AT_location
	.short	926                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	959                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xc69:0xc DW_TAG_variable
	.ascii	"\317\001"                      # DW_AT_location
	.short	857                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	961                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xc75:0xc DW_TAG_variable
	.ascii	"\320\001"                      # DW_AT_location
	.short	927                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	962                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xc81:0xc DW_TAG_variable
	.ascii	"\321\001"                      # DW_AT_location
	.short	928                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	962                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xc8d:0xc DW_TAG_variable
	.ascii	"\322\001"                      # DW_AT_location
	.short	929                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	963                             # DW_AT_decl_line
	.long	4819                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xc99:0xc DW_TAG_variable
	.ascii	"\323\001"                      # DW_AT_location
	.short	930                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	960                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xca5:0xc DW_TAG_variable
	.ascii	"\324\001"                      # DW_AT_location
	.short	931                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	998                             # DW_AT_decl_line
	.long	20058                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0xcb1:0xc DW_TAG_variable
	.ascii	"\325\001"                      # DW_AT_location
	.short	932                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	999                             # DW_AT_decl_line
	.long	20058                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0xcbd:0xc DW_TAG_variable
	.ascii	"\326\001"                      # DW_AT_location
	.short	933                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1000                            # DW_AT_decl_line
	.long	20058                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0xcc9:0xc DW_TAG_variable
	.ascii	"\327\001"                      # DW_AT_location
	.short	934                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1001                            # DW_AT_decl_line
	.long	20058                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0xcd5:0xc DW_TAG_variable
	.ascii	"\364\001"                      # DW_AT_location
	.short	944                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	964                             # DW_AT_decl_line
	.long	4515                            # DW_AT_type
	.byte	26                              # Abbrev [26] 0xce1:0xa DW_TAG_variable
	.short	835                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	942                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	26                              # Abbrev [26] 0xceb:0xa DW_TAG_variable
	.short	945                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	950                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	19                              # Abbrev [19] 0xcf5:0x153 DW_TAG_lexical_block
	.byte	38                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0xcf7:0xc DW_TAG_variable
	.ascii	"\330\001"                      # DW_AT_location
	.short	935                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1005                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0xd03:0x144 DW_TAG_lexical_block
	.byte	39                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0xd05:0xc DW_TAG_variable
	.ascii	"\331\001"                      # DW_AT_location
	.short	936                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1007                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0xd11:0x3d DW_TAG_lexical_block
	.byte	40                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0xd13:0xc DW_TAG_variable
	.ascii	"\332\001"                      # DW_AT_location
	.short	879                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1013                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0xd1f:0x2e DW_TAG_lexical_block
	.byte	41                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0xd21:0xc DW_TAG_variable
	.ascii	"\333\001"                      # DW_AT_location
	.short	937                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1014                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xd2d:0xc DW_TAG_variable
	.ascii	"\334\001"                      # DW_AT_location
	.short	938                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1014                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	26                              # Abbrev [26] 0xd39:0xa DW_TAG_variable
	.short	834                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1014                            # DW_AT_decl_line
	.long	19884                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0xd43:0x9 DW_TAG_variable
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1014                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0xd4e:0x3f DW_TAG_lexical_block
	.byte	42                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0xd50:0xc DW_TAG_variable
	.ascii	"\335\001"                      # DW_AT_location
	.short	879                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1017                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0xd5c:0x30 DW_TAG_lexical_block
	.byte	43                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0xd5e:0xc DW_TAG_variable
	.ascii	"\336\001"                      # DW_AT_location
	.short	834                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1018                            # DW_AT_decl_line
	.long	19884                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0xd6a:0xc DW_TAG_variable
	.ascii	"\337\001"                      # DW_AT_location
	.short	937                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1018                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xd76:0xc DW_TAG_variable
	.ascii	"\340\001"                      # DW_AT_location
	.short	938                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1018                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0xd82:0x9 DW_TAG_variable
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1018                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0xd8d:0xb9 DW_TAG_lexical_block
	.byte	44                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0xd8f:0xc DW_TAG_variable
	.ascii	"\341\001"                      # DW_AT_location
	.short	879                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1020                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0xd9b:0xaa DW_TAG_lexical_block
	.byte	45                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0xd9d:0xc DW_TAG_variable
	.ascii	"\342\001"                      # DW_AT_location
	.short	939                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1022                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xda9:0xc DW_TAG_variable
	.ascii	"\343\001"                      # DW_AT_location
	.short	940                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1023                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xdb5:0xc DW_TAG_variable
	.ascii	"\344\001"                      # DW_AT_location
	.short	941                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1024                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xdc1:0xc DW_TAG_variable
	.ascii	"\345\001"                      # DW_AT_location
	.short	942                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1025                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0xdcd:0x77 DW_TAG_lexical_block
	.byte	46                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0xdcf:0xc DW_TAG_variable
	.ascii	"\346\001"                      # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1032                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	26                              # Abbrev [26] 0xddb:0xa DW_TAG_variable
	.short	946                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1028                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	26                              # Abbrev [26] 0xde5:0xa DW_TAG_variable
	.short	947                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1029                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xdef:0x54 DW_TAG_lexical_block
	.ascii	"\261\001"                      # DW_AT_low_pc
	.long	.Ltmp1882-.Ltmp1864             # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0xdf6:0xc DW_TAG_variable
	.ascii	"\351\001"                      # DW_AT_location
	.short	943                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1043                            # DW_AT_decl_line
	.long	4819                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0xe02:0x20 DW_TAG_inlined_subroutine
	.long	4956                            # DW_AT_abstract_origin
	.ascii	"\262\001"                      # DW_AT_low_pc
	.long	.Ltmp1869-.Ltmp1866             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1039                            # DW_AT_call_line
	.byte	44                              # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0xe11:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\250\001"
	.long	4965                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xe1a:0x7 DW_TAG_formal_parameter
	.ascii	"\347\001"                      # DW_AT_location
	.long	4974                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0xe22:0x20 DW_TAG_inlined_subroutine
	.long	4956                            # DW_AT_abstract_origin
	.ascii	"\263\001"                      # DW_AT_low_pc
	.long	.Ltmp1872-.Ltmp1870             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1040                            # DW_AT_call_line
	.byte	44                              # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0xe31:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\240\001"
	.long	4965                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xe3a:0x7 DW_TAG_formal_parameter
	.ascii	"\350\001"                      # DW_AT_location
	.long	4974                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0xe48:0x1f DW_TAG_inlined_subroutine
	.long	4956                            # DW_AT_abstract_origin
	.ascii	"\264\001"                      # DW_AT_low_pc
	.long	.Ltmp1904-.Ltmp1902             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1066                            # DW_AT_call_line
	.byte	77                              # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0xe57:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	12
	.long	4965                            # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0xe5f:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	93
	.long	4974                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0xe67:0x9e DW_TAG_inlined_subroutine
	.long	6383                            # DW_AT_abstract_origin
	.ascii	"\265\001"                      # DW_AT_low_pc
	.long	.Ltmp1951-.Ltmp1904             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1066                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0xe76:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	16
	.long	6387                            # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0xe7e:0x17 DW_TAG_formal_parameter
	.byte	17                              # DW_AT_location
	.byte	145
	.ascii	"\270\001"
	.byte	6
	.byte	16
	.ascii	"\376\377\377\377\377\377\377\377\377\001"
	.byte	26
	.byte	159
	.long	6404                            # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0xe95:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.long	6413                            # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0xe9c:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	6422                            # DW_AT_abstract_origin
	.byte	46                              # Abbrev [46] 0xea3:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	6431                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xea9:0x7 DW_TAG_formal_parameter
	.ascii	"\352\001"                      # DW_AT_location
	.long	6440                            # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0xeb0:0x7 DW_TAG_variable
	.ascii	"\353\001"                      # DW_AT_location
	.long	6448                            # DW_AT_abstract_origin
	.byte	16                              # Abbrev [16] 0xeb7:0x4d DW_TAG_inlined_subroutine
	.long	18413                           # DW_AT_abstract_origin
	.ascii	"\266\001"                      # DW_AT_low_pc
	.long	.Ltmp1951-.Ltmp1906             # DW_AT_high_pc
	.byte	9                               # DW_AT_call_file
	.byte	116                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	15                              # Abbrev [15] 0xec5:0x7 DW_TAG_formal_parameter
	.ascii	"\355\001"                      # DW_AT_location
	.long	18418                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xecc:0x7 DW_TAG_formal_parameter
	.ascii	"\354\001"                      # DW_AT_location
	.long	18426                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xed3:0x7 DW_TAG_formal_parameter
	.ascii	"\356\001"                      # DW_AT_location
	.long	18434                           # DW_AT_abstract_origin
	.byte	46                              # Abbrev [46] 0xeda:0x6 DW_TAG_formal_parameter
	.byte	32                              # DW_AT_const_value
	.long	18442                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xee0:0x7 DW_TAG_formal_parameter
	.ascii	"\357\001"                      # DW_AT_location
	.long	18451                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0xee7:0x7 DW_TAG_variable
	.ascii	"\360\001"                      # DW_AT_location
	.long	18459                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0xeee:0x7 DW_TAG_variable
	.ascii	"\361\001"                      # DW_AT_location
	.long	18468                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0xef5:0x7 DW_TAG_variable
	.ascii	"\362\001"                      # DW_AT_location
	.long	18477                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0xefc:0x7 DW_TAG_variable
	.ascii	"\363\001"                      # DW_AT_location
	.long	18486                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	47                              # Abbrev [47] 0xf05:0xa1 DW_TAG_inlined_subroutine
	.long	18496                           # DW_AT_abstract_origin
	.byte	47                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1068                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0xf0f:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	16
	.long	18501                           # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0xf17:0xd DW_TAG_formal_parameter
	.byte	7                               # DW_AT_location
	.byte	145
	.ascii	"\260\001"
	.byte	6
	.byte	49
	.byte	36
	.byte	159
	.long	18509                           # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0xf24:0x17 DW_TAG_formal_parameter
	.byte	17                              # DW_AT_location
	.byte	145
	.ascii	"\270\001"
	.byte	6
	.byte	16
	.ascii	"\376\377\377\377\377\377\377\377\377\001"
	.byte	26
	.byte	159
	.long	18518                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xf3b:0x7 DW_TAG_formal_parameter
	.ascii	"\366\001"                      # DW_AT_location
	.long	18527                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xf42:0x7 DW_TAG_formal_parameter
	.ascii	"\367\001"                      # DW_AT_location
	.long	18536                           # DW_AT_abstract_origin
	.byte	46                              # Abbrev [46] 0xf49:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	18545                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xf4f:0x7 DW_TAG_formal_parameter
	.ascii	"\365\001"                      # DW_AT_location
	.long	18554                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0xf56:0x7 DW_TAG_variable
	.ascii	"\370\001"                      # DW_AT_location
	.long	18563                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0xf5d:0x48 DW_TAG_inlined_subroutine
	.long	18413                           # DW_AT_abstract_origin
	.byte	48                              # DW_AT_ranges
	.byte	9                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	15                              # Abbrev [15] 0xf66:0x7 DW_TAG_formal_parameter
	.ascii	"\371\001"                      # DW_AT_location
	.long	18418                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xf6d:0x7 DW_TAG_formal_parameter
	.ascii	"\373\001"                      # DW_AT_location
	.long	18426                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xf74:0x7 DW_TAG_formal_parameter
	.ascii	"\374\001"                      # DW_AT_location
	.long	18434                           # DW_AT_abstract_origin
	.byte	46                              # Abbrev [46] 0xf7b:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	18442                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xf81:0x7 DW_TAG_formal_parameter
	.ascii	"\375\001"                      # DW_AT_location
	.long	18451                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0xf88:0x7 DW_TAG_variable
	.ascii	"\372\001"                      # DW_AT_location
	.long	18459                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0xf8f:0x7 DW_TAG_variable
	.ascii	"\376\001"                      # DW_AT_location
	.long	18468                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0xf96:0x7 DW_TAG_variable
	.ascii	"\377\001"                      # DW_AT_location
	.long	18477                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0xf9d:0x7 DW_TAG_variable
	.ascii	"\200\002"                      # DW_AT_location
	.long	18486                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0xfa6:0x1f DW_TAG_inlined_subroutine
	.long	4956                            # DW_AT_abstract_origin
	.ascii	"\267\001"                      # DW_AT_low_pc
	.long	.Ltmp2011-.Ltmp2010             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1070                            # DW_AT_call_line
	.byte	77                              # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0xfb5:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	8
	.long	4965                            # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0xfbd:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	91
	.long	4974                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0xfc5:0xb4 DW_TAG_inlined_subroutine
	.long	6383                            # DW_AT_abstract_origin
	.ascii	"\270\001"                      # DW_AT_low_pc
	.long	.Ltmp2052-.Ltmp2011             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1070                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0xfd4:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	16
	.long	6387                            # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0xfdc:0xd DW_TAG_formal_parameter
	.byte	7                               # DW_AT_location
	.byte	145
	.ascii	"\260\001"
	.byte	6
	.byte	49
	.byte	36
	.byte	159
	.long	6395                            # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0xfe9:0x17 DW_TAG_formal_parameter
	.byte	17                              # DW_AT_location
	.byte	145
	.ascii	"\270\001"
	.byte	6
	.byte	16
	.ascii	"\376\377\377\377\377\377\377\377\377\001"
	.byte	26
	.byte	159
	.long	6404                            # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x1000:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	6422                            # DW_AT_abstract_origin
	.byte	46                              # Abbrev [46] 0x1007:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	6431                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x100d:0x7 DW_TAG_formal_parameter
	.ascii	"\201\002"                      # DW_AT_location
	.long	6440                            # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x1014:0x7 DW_TAG_variable
	.ascii	"\202\002"                      # DW_AT_location
	.long	6448                            # DW_AT_abstract_origin
	.byte	16                              # Abbrev [16] 0x101b:0x5d DW_TAG_inlined_subroutine
	.long	18413                           # DW_AT_abstract_origin
	.ascii	"\271\001"                      # DW_AT_low_pc
	.long	.Ltmp2052-.Ltmp2012             # DW_AT_high_pc
	.byte	9                               # DW_AT_call_file
	.byte	116                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	15                              # Abbrev [15] 0x1029:0x7 DW_TAG_formal_parameter
	.ascii	"\203\002"                      # DW_AT_location
	.long	18418                           # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x1030:0x17 DW_TAG_formal_parameter
	.byte	17                              # DW_AT_location
	.byte	145
	.asciz	"\300"
	.byte	6
	.byte	16
	.ascii	"\374\377\377\377\377\377\377\377\377\001"
	.byte	26
	.byte	159
	.long	18426                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x1047:0x7 DW_TAG_formal_parameter
	.ascii	"\205\002"                      # DW_AT_location
	.long	18434                           # DW_AT_abstract_origin
	.byte	46                              # Abbrev [46] 0x104e:0x6 DW_TAG_formal_parameter
	.byte	32                              # DW_AT_const_value
	.long	18442                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x1054:0x7 DW_TAG_formal_parameter
	.ascii	"\206\002"                      # DW_AT_location
	.long	18451                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x105b:0x7 DW_TAG_variable
	.ascii	"\204\002"                      # DW_AT_location
	.long	18459                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x1062:0x7 DW_TAG_variable
	.ascii	"\207\002"                      # DW_AT_location
	.long	18468                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x1069:0x7 DW_TAG_variable
	.ascii	"\210\002"                      # DW_AT_location
	.long	18477                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x1070:0x7 DW_TAG_variable
	.ascii	"\211\002"                      # DW_AT_location
	.long	18486                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	47                              # Abbrev [47] 0x1079:0x93 DW_TAG_inlined_subroutine
	.long	18496                           # DW_AT_abstract_origin
	.byte	49                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1072                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0x1083:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	16
	.long	18501                           # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x108b:0xd DW_TAG_formal_parameter
	.byte	7                               # DW_AT_location
	.byte	145
	.ascii	"\260\001"
	.byte	6
	.byte	49
	.byte	36
	.byte	159
	.long	18509                           # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x1098:0x17 DW_TAG_formal_parameter
	.byte	17                              # DW_AT_location
	.byte	145
	.ascii	"\270\001"
	.byte	6
	.byte	16
	.ascii	"\376\377\377\377\377\377\377\377\377\001"
	.byte	26
	.byte	159
	.long	18518                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x10af:0x7 DW_TAG_formal_parameter
	.ascii	"\213\002"                      # DW_AT_location
	.long	18536                           # DW_AT_abstract_origin
	.byte	46                              # Abbrev [46] 0x10b6:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	18545                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x10bc:0x7 DW_TAG_formal_parameter
	.ascii	"\212\002"                      # DW_AT_location
	.long	18554                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x10c3:0x7 DW_TAG_variable
	.ascii	"\214\002"                      # DW_AT_location
	.long	18563                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x10ca:0x41 DW_TAG_inlined_subroutine
	.long	18413                           # DW_AT_abstract_origin
	.byte	50                              # DW_AT_ranges
	.byte	9                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	15                              # Abbrev [15] 0x10d3:0x7 DW_TAG_formal_parameter
	.ascii	"\215\002"                      # DW_AT_location
	.long	18418                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x10da:0x7 DW_TAG_formal_parameter
	.ascii	"\217\002"                      # DW_AT_location
	.long	18434                           # DW_AT_abstract_origin
	.byte	46                              # Abbrev [46] 0x10e1:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	18442                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x10e7:0x7 DW_TAG_formal_parameter
	.ascii	"\220\002"                      # DW_AT_location
	.long	18451                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x10ee:0x7 DW_TAG_variable
	.ascii	"\216\002"                      # DW_AT_location
	.long	18459                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x10f5:0x7 DW_TAG_variable
	.ascii	"\221\002"                      # DW_AT_location
	.long	18468                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x10fc:0x7 DW_TAG_variable
	.ascii	"\222\002"                      # DW_AT_location
	.long	18477                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x1103:0x7 DW_TAG_variable
	.ascii	"\223\002"                      # DW_AT_location
	.long	18486                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	31                              # Abbrev [31] 0x110c:0x7 DW_TAG_call_site
	.long	18573                           # DW_AT_call_origin
	.ascii	"\272\001"                      # DW_AT_call_return_pc
	.byte	31                              # Abbrev [31] 0x1113:0x7 DW_TAG_call_site
	.long	18573                           # DW_AT_call_origin
	.ascii	"\273\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x111a:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\274\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x111f:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\275\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1124:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\276\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1129:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\277\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x112e:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\300\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1133:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	95
	.ascii	"\301\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1138:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	95
	.ascii	"\302\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x113d:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.ascii	"\303\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1142:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.ascii	"\304\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1147:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	95
	.ascii	"\305\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x114c:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	95
	.ascii	"\306\001"                      # DW_AT_call_return_pc
	.byte	31                              # Abbrev [31] 0x1151:0x7 DW_TAG_call_site
	.long	18605                           # DW_AT_call_origin
	.ascii	"\307\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x1159:0x12 DW_TAG_array_type
	.long	2605                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x115e:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	33                              # DW_AT_count
	.byte	33                              # Abbrev [33] 0x1164:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	39                              # Abbrev [39] 0x116b:0xb DW_TAG_variable
	.byte	24                              # DW_AT_name
	.long	4470                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.byte	125                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	11
	.byte	32                              # Abbrev [32] 0x1176:0xc DW_TAG_array_type
	.long	4482                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x117b:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	27                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	34                              # Abbrev [34] 0x1182:0x5 DW_TAG_const_type
	.long	2654                            # DW_AT_type
	.byte	39                              # Abbrev [39] 0x1187:0xb DW_TAG_variable
	.byte	25                              # DW_AT_name
	.long	4498                            # DW_AT_type
	.byte	6                               # DW_AT_decl_file
	.byte	234                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	12
	.byte	32                              # Abbrev [32] 0x1192:0xc DW_TAG_array_type
	.long	4510                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x1197:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	34                              # Abbrev [34] 0x119e:0x5 DW_TAG_const_type
	.long	4515                            # DW_AT_type
	.byte	35                              # Abbrev [35] 0x11a3:0x8 DW_TAG_typedef
	.long	4523                            # DW_AT_type
	.byte	28                              # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	25                              # DW_AT_decl_line
	.byte	35                              # Abbrev [35] 0x11ab:0x8 DW_TAG_typedef
	.long	4531                            # DW_AT_type
	.byte	27                              # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	40                              # DW_AT_decl_line
	.byte	36                              # Abbrev [36] 0x11b3:0x4 DW_TAG_base_type
	.byte	26                              # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	2                               # DW_AT_byte_size
	.byte	39                              # Abbrev [39] 0x11b7:0xb DW_TAG_variable
	.byte	29                              # DW_AT_name
	.long	4546                            # DW_AT_type
	.byte	6                               # DW_AT_decl_file
	.byte	200                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	13
	.byte	32                              # Abbrev [32] 0x11c2:0xc DW_TAG_array_type
	.long	2540                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x11c7:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	39                              # Abbrev [39] 0x11ce:0xb DW_TAG_variable
	.byte	30                              # DW_AT_name
	.long	4546                            # DW_AT_type
	.byte	6                               # DW_AT_decl_file
	.byte	204                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	14
	.byte	48                              # Abbrev [48] 0x11d9:0x27 DW_TAG_enumeration_type
	.long	4608                            # DW_AT_type
	.byte	4                               # DW_AT_byte_size
	.byte	4                               # DW_AT_decl_file
	.byte	30                              # DW_AT_decl_line
	.byte	49                              # Abbrev [49] 0x11e1:0x3 DW_TAG_enumerator
	.byte	32                              # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	49                              # Abbrev [49] 0x11e4:0x3 DW_TAG_enumerator
	.byte	33                              # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	49                              # Abbrev [49] 0x11e7:0x3 DW_TAG_enumerator
	.byte	34                              # DW_AT_name
	.byte	2                               # DW_AT_const_value
	.byte	49                              # Abbrev [49] 0x11ea:0x3 DW_TAG_enumerator
	.byte	35                              # DW_AT_name
	.byte	3                               # DW_AT_const_value
	.byte	49                              # Abbrev [49] 0x11ed:0x3 DW_TAG_enumerator
	.byte	36                              # DW_AT_name
	.byte	4                               # DW_AT_const_value
	.byte	49                              # Abbrev [49] 0x11f0:0x3 DW_TAG_enumerator
	.byte	37                              # DW_AT_name
	.byte	5                               # DW_AT_const_value
	.byte	49                              # Abbrev [49] 0x11f3:0x3 DW_TAG_enumerator
	.byte	38                              # DW_AT_name
	.byte	6                               # DW_AT_const_value
	.byte	49                              # Abbrev [49] 0x11f6:0x3 DW_TAG_enumerator
	.byte	39                              # DW_AT_name
	.byte	7                               # DW_AT_const_value
	.byte	49                              # Abbrev [49] 0x11f9:0x3 DW_TAG_enumerator
	.byte	40                              # DW_AT_name
	.byte	8                               # DW_AT_const_value
	.byte	49                              # Abbrev [49] 0x11fc:0x3 DW_TAG_enumerator
	.byte	41                              # DW_AT_name
	.byte	9                               # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	36                              # Abbrev [36] 0x1200:0x4 DW_TAG_base_type
	.byte	31                              # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	50                              # Abbrev [50] 0x1204:0x5 DW_TAG_pointer_type
	.long	4617                            # DW_AT_type
	.byte	35                              # Abbrev [35] 0x1209:0x8 DW_TAG_typedef
	.long	4625                            # DW_AT_type
	.byte	47                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.byte	51                              # Abbrev [51] 0x1211:0x20 DW_TAG_union_type
	.byte	4                               # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.byte	41                              # Abbrev [41] 0x1215:0x9 DW_TAG_member
	.byte	42                              # DW_AT_name
	.long	4657                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x121e:0x9 DW_TAG_member
	.byte	45                              # DW_AT_name
	.long	4673                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x1227:0x9 DW_TAG_member
	.byte	46                              # DW_AT_name
	.long	4685                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	35                              # Abbrev [35] 0x1231:0x8 DW_TAG_typedef
	.long	4665                            # DW_AT_type
	.byte	44                              # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	26                              # DW_AT_decl_line
	.byte	35                              # Abbrev [35] 0x1239:0x8 DW_TAG_typedef
	.long	4608                            # DW_AT_type
	.byte	43                              # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	42                              # DW_AT_decl_line
	.byte	32                              # Abbrev [32] 0x1241:0xc DW_TAG_array_type
	.long	4515                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x1246:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x124d:0xc DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x1252:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x1259:0x5 DW_TAG_pointer_type
	.long	4702                            # DW_AT_type
	.byte	35                              # Abbrev [35] 0x125e:0x8 DW_TAG_typedef
	.long	4710                            # DW_AT_type
	.byte	53                              # DW_AT_name
	.byte	7                               # DW_AT_decl_file
	.byte	58                              # DW_AT_decl_line
	.byte	40                              # Abbrev [40] 0x1266:0x17 DW_TAG_structure_type
	.byte	8                               # DW_AT_byte_size
	.byte	7                               # DW_AT_decl_file
	.byte	55                              # DW_AT_decl_line
	.byte	41                              # Abbrev [41] 0x126a:0x9 DW_TAG_member
	.byte	48                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	7                               # DW_AT_decl_file
	.byte	56                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x1273:0x9 DW_TAG_member
	.byte	49                              # DW_AT_name
	.long	4733                            # DW_AT_type
	.byte	7                               # DW_AT_decl_file
	.byte	57                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x127d:0xc DW_TAG_array_type
	.long	4745                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x1282:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	35                              # Abbrev [35] 0x1289:0x8 DW_TAG_typedef
	.long	4753                            # DW_AT_type
	.byte	52                              # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.byte	25                              # DW_AT_decl_line
	.byte	35                              # Abbrev [35] 0x1291:0x8 DW_TAG_typedef
	.long	4761                            # DW_AT_type
	.byte	51                              # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	39                              # DW_AT_decl_line
	.byte	36                              # Abbrev [36] 0x1299:0x4 DW_TAG_base_type
	.byte	50                              # DW_AT_name
	.byte	5                               # DW_AT_encoding
	.byte	2                               # DW_AT_byte_size
	.byte	50                              # Abbrev [50] 0x129d:0x5 DW_TAG_pointer_type
	.long	4770                            # DW_AT_type
	.byte	35                              # Abbrev [35] 0x12a2:0x8 DW_TAG_typedef
	.long	4778                            # DW_AT_type
	.byte	58                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	90                              # DW_AT_decl_line
	.byte	51                              # Abbrev [51] 0x12aa:0x29 DW_TAG_union_type
	.byte	8                               # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.byte	90                              # DW_AT_decl_line
	.byte	41                              # Abbrev [41] 0x12ae:0x9 DW_TAG_member
	.byte	42                              # DW_AT_name
	.long	4819                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.byte	90                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x12b7:0x9 DW_TAG_member
	.byte	57                              # DW_AT_name
	.long	4839                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.byte	90                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x12c0:0x9 DW_TAG_member
	.byte	45                              # DW_AT_name
	.long	4851                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.byte	90                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x12c9:0x9 DW_TAG_member
	.byte	46                              # DW_AT_name
	.long	4863                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.byte	90                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	35                              # Abbrev [35] 0x12d3:0x8 DW_TAG_typedef
	.long	4827                            # DW_AT_type
	.byte	56                              # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
	.byte	35                              # Abbrev [35] 0x12db:0x8 DW_TAG_typedef
	.long	4835                            # DW_AT_type
	.byte	55                              # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	45                              # DW_AT_decl_line
	.byte	36                              # Abbrev [36] 0x12e3:0x4 DW_TAG_base_type
	.byte	54                              # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	32                              # Abbrev [32] 0x12e7:0xc DW_TAG_array_type
	.long	4657                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x12ec:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x12f3:0xc DW_TAG_array_type
	.long	4515                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x12f8:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x12ff:0xc DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x1304:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	8                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x130b:0x5 DW_TAG_pointer_type
	.long	4880                            # DW_AT_type
	.byte	35                              # Abbrev [35] 0x1310:0x8 DW_TAG_typedef
	.long	4888                            # DW_AT_type
	.byte	59                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	88                              # DW_AT_decl_line
	.byte	51                              # Abbrev [51] 0x1318:0x17 DW_TAG_union_type
	.byte	2                               # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.byte	88                              # DW_AT_decl_line
	.byte	41                              # Abbrev [41] 0x131c:0x9 DW_TAG_member
	.byte	42                              # DW_AT_name
	.long	4515                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.byte	88                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x1325:0x9 DW_TAG_member
	.byte	46                              # DW_AT_name
	.long	4911                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.byte	88                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x132f:0xc DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x1334:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	52                              # Abbrev [52] 0x133b:0x21 DW_TAG_subprogram
	.byte	60                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	200                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2654                            # DW_AT_type
                                        # DW_AT_inline
	.byte	53                              # Abbrev [53] 0x1343:0x8 DW_TAG_formal_parameter
	.byte	61                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	200                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	53                              # Abbrev [53] 0x134b:0x8 DW_TAG_formal_parameter
	.byte	62                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	200                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	53                              # Abbrev [53] 0x1353:0x8 DW_TAG_formal_parameter
	.byte	63                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	200                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	54                              # Abbrev [54] 0x135c:0x1c DW_TAG_subprogram
	.byte	64                              # DW_AT_name
	.byte	6                               # DW_AT_decl_file
	.short	340                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	4657                            # DW_AT_type
                                        # DW_AT_inline
	.byte	55                              # Abbrev [55] 0x1365:0x9 DW_TAG_formal_parameter
	.byte	57                              # DW_AT_name
	.byte	6                               # DW_AT_decl_file
	.short	340                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	55                              # Abbrev [55] 0x136e:0x9 DW_TAG_formal_parameter
	.byte	45                              # DW_AT_name
	.byte	6                               # DW_AT_decl_file
	.short	340                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	56                              # Abbrev [56] 0x1378:0x59 DW_TAG_subprogram
	.byte	65                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	246                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	53                              # Abbrev [53] 0x137c:0x8 DW_TAG_formal_parameter
	.byte	66                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	246                             # DW_AT_decl_line
	.long	5073                            # DW_AT_type
	.byte	53                              # Abbrev [53] 0x1384:0x8 DW_TAG_formal_parameter
	.byte	67                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	246                             # DW_AT_decl_line
	.long	5073                            # DW_AT_type
	.byte	53                              # Abbrev [53] 0x138c:0x8 DW_TAG_formal_parameter
	.byte	68                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	246                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	53                              # Abbrev [53] 0x1394:0x8 DW_TAG_formal_parameter
	.byte	69                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	246                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	53                              # Abbrev [53] 0x139c:0x8 DW_TAG_formal_parameter
	.byte	70                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	246                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	53                              # Abbrev [53] 0x13a4:0x8 DW_TAG_formal_parameter
	.byte	71                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	246                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	53                              # Abbrev [53] 0x13ac:0x8 DW_TAG_formal_parameter
	.byte	72                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	246                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	57                              # Abbrev [57] 0x13b4:0x1c DW_TAG_lexical_block
	.byte	13                              # Abbrev [13] 0x13b5:0x8 DW_TAG_variable
	.byte	42                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	248                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	57                              # Abbrev [57] 0x13bd:0x12 DW_TAG_lexical_block
	.byte	13                              # Abbrev [13] 0x13be:0x8 DW_TAG_variable
	.byte	73                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	250                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x13c6:0x8 DW_TAG_variable
	.byte	74                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	251                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x13d1:0x5 DW_TAG_pointer_type
	.long	4733                            # DW_AT_type
	.byte	52                              # Abbrev [52] 0x13d6:0x2b DW_TAG_subprogram
	.byte	75                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	226                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2654                            # DW_AT_type
                                        # DW_AT_inline
	.byte	53                              # Abbrev [53] 0x13de:0x8 DW_TAG_formal_parameter
	.byte	67                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	226                             # DW_AT_decl_line
	.long	5073                            # DW_AT_type
	.byte	53                              # Abbrev [53] 0x13e6:0x8 DW_TAG_formal_parameter
	.byte	68                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	226                             # DW_AT_decl_line
	.long	5121                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x13ee:0x8 DW_TAG_variable
	.byte	78                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	228                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	57                              # Abbrev [57] 0x13f6:0xa DW_TAG_lexical_block
	.byte	13                              # Abbrev [13] 0x13f7:0x8 DW_TAG_variable
	.byte	42                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	229                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	35                              # Abbrev [35] 0x1401:0x8 DW_TAG_typedef
	.long	5129                            # DW_AT_type
	.byte	77                              # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	87                              # DW_AT_decl_line
	.byte	36                              # Abbrev [36] 0x1409:0x4 DW_TAG_base_type
	.byte	76                              # DW_AT_name
	.byte	5                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	42                              # Abbrev [42] 0x140d:0x41f DW_TAG_subprogram
	.byte	110                             # DW_AT_low_pc
	.long	.Lfunc_end1-.Lfunc_begin1       # DW_AT_high_pc
	.byte	5                               # DW_AT_frame_base
	.byte	156
	.byte	17
	.ascii	"\320t"
	.byte	34
                                        # DW_AT_call_all_calls
	.short	821                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	809                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	43                              # Abbrev [43] 0x141e:0xb DW_TAG_formal_parameter
	.ascii	"\205\001"                      # DW_AT_location
	.byte	18                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	809                             # DW_AT_decl_line
	.long	6458                            # DW_AT_type
	.byte	44                              # Abbrev [44] 0x1429:0xc DW_TAG_formal_parameter
	.ascii	"\206\001"                      # DW_AT_location
	.short	834                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	809                             # DW_AT_decl_line
	.long	19884                           # DW_AT_type
	.byte	44                              # Abbrev [44] 0x1435:0xc DW_TAG_formal_parameter
	.ascii	"\207\001"                      # DW_AT_location
	.short	897                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	809                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	44                              # Abbrev [44] 0x1441:0xc DW_TAG_formal_parameter
	.ascii	"\210\001"                      # DW_AT_location
	.short	898                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	809                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	44                              # Abbrev [44] 0x144d:0xc DW_TAG_formal_parameter
	.ascii	"\211\001"                      # DW_AT_location
	.short	841                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	809                             # DW_AT_decl_line
	.long	14156                           # DW_AT_type
	.byte	44                              # Abbrev [44] 0x1459:0xc DW_TAG_formal_parameter
	.ascii	"\212\001"                      # DW_AT_location
	.short	899                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	809                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	25                              # Abbrev [25] 0x1465:0xf DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\360\001"
	.short	828                             # DW_AT_name
	.byte	16                              # DW_AT_alignment
	.byte	0                               # DW_AT_decl_file
	.short	819                             # DW_AT_decl_line
	.long	20063                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x1474:0xc DW_TAG_variable
	.ascii	"\213\001"                      # DW_AT_location
	.short	842                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	811                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x1480:0xc DW_TAG_variable
	.ascii	"\214\001"                      # DW_AT_location
	.short	843                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	812                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x148c:0xc DW_TAG_variable
	.ascii	"\215\001"                      # DW_AT_location
	.short	851                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	813                             # DW_AT_decl_line
	.long	20058                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x1498:0xc DW_TAG_variable
	.ascii	"\216\001"                      # DW_AT_location
	.short	852                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	814                             # DW_AT_decl_line
	.long	20058                           # DW_AT_type
	.byte	23                              # Abbrev [23] 0x14a4:0xb DW_TAG_variable
	.ascii	"\217\001"                      # DW_AT_location
	.byte	150                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	816                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x14af:0xc DW_TAG_variable
	.ascii	"\220\001"                      # DW_AT_location
	.short	900                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	817                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x14bb:0xc DW_TAG_variable
	.ascii	"\221\001"                      # DW_AT_location
	.short	853                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	821                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x14c7:0xc DW_TAG_variable
	.ascii	"\222\001"                      # DW_AT_location
	.short	854                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	822                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x14d3:0xc DW_TAG_variable
	.ascii	"\223\001"                      # DW_AT_location
	.short	857                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	823                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x14df:0xc DW_TAG_variable
	.ascii	"\224\001"                      # DW_AT_location
	.short	901                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	824                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x14eb:0xc DW_TAG_variable
	.ascii	"\247\001"                      # DW_AT_location
	.short	906                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	824                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	26                              # Abbrev [26] 0x14f7:0xa DW_TAG_variable
	.short	835                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	815                             # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0x1501:0x8e DW_TAG_lexical_block
	.byte	33                              # DW_AT_ranges
	.byte	23                              # Abbrev [23] 0x1503:0xb DW_TAG_variable
	.ascii	"\230\001"                      # DW_AT_location
	.byte	73                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	829                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	23                              # Abbrev [23] 0x150e:0xb DW_TAG_variable
	.ascii	"\234\001"                      # DW_AT_location
	.byte	74                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	830                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x1519:0x24 DW_TAG_inlined_subroutine
	.long	4923                            # DW_AT_abstract_origin
	.byte	111                             # DW_AT_low_pc
	.long	.Ltmp1380-.Ltmp1378             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	829                             # DW_AT_call_line
	.byte	18                              # DW_AT_call_column
	.byte	15                              # Abbrev [15] 0x1527:0x7 DW_TAG_formal_parameter
	.ascii	"\226\001"                      # DW_AT_location
	.long	4931                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x152e:0x7 DW_TAG_formal_parameter
	.ascii	"\227\001"                      # DW_AT_location
	.long	4939                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x1535:0x7 DW_TAG_formal_parameter
	.ascii	"\225\001"                      # DW_AT_location
	.long	4947                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x153d:0x24 DW_TAG_inlined_subroutine
	.long	4923                            # DW_AT_abstract_origin
	.byte	112                             # DW_AT_low_pc
	.long	.Ltmp1383-.Ltmp1381             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	830                             # DW_AT_call_line
	.byte	18                              # DW_AT_call_column
	.byte	15                              # Abbrev [15] 0x154b:0x7 DW_TAG_formal_parameter
	.ascii	"\232\001"                      # DW_AT_location
	.long	4931                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x1552:0x7 DW_TAG_formal_parameter
	.ascii	"\233\001"                      # DW_AT_location
	.long	4939                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x1559:0x7 DW_TAG_formal_parameter
	.ascii	"\231\001"                      # DW_AT_location
	.long	4947                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x1561:0x2d DW_TAG_lexical_block
	.byte	113                             # DW_AT_low_pc
	.long	.Ltmp1478-.Ltmp1463             # DW_AT_high_pc
	.byte	27                              # Abbrev [27] 0x1567:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\300"
	.short	893                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	832                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x1575:0xc DW_TAG_variable
	.ascii	"\245\001"                      # DW_AT_location
	.short	859                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	832                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x1581:0xc DW_TAG_variable
	.ascii	"\246\001"                      # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	832                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x158f:0x79 DW_TAG_lexical_block
	.byte	34                              # DW_AT_ranges
	.byte	23                              # Abbrev [23] 0x1591:0xb DW_TAG_variable
	.ascii	"\235\001"                      # DW_AT_location
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	836                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x159c:0x6b DW_TAG_lexical_block
	.byte	114                             # DW_AT_low_pc
	.long	.Ltmp1424-.Ltmp1395             # DW_AT_high_pc
	.byte	27                              # Abbrev [27] 0x15a2:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\300"
	.short	829                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	839                             # DW_AT_decl_line
	.long	16131                           # DW_AT_type
	.byte	27                              # Abbrev [27] 0x15b0:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\324\001"
	.short	893                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	840                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x15be:0xc DW_TAG_variable
	.ascii	"\236\001"                      # DW_AT_location
	.short	870                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	838                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	27                              # Abbrev [27] 0x15ca:0xc DW_TAG_variable
	.byte	1                               # DW_AT_location
	.byte	95
	.short	871                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	838                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x15d6:0xc DW_TAG_variable
	.ascii	"\237\001"                      # DW_AT_location
	.short	902                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	841                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x15e2:0xc DW_TAG_variable
	.ascii	"\240\001"                      # DW_AT_location
	.short	903                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	841                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x15ee:0xc DW_TAG_variable
	.ascii	"\241\001"                      # DW_AT_location
	.short	904                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	841                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x15fa:0xc DW_TAG_variable
	.ascii	"\242\001"                      # DW_AT_location
	.short	905                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	841                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x1608:0x29 DW_TAG_lexical_block
	.byte	35                              # DW_AT_ranges
	.byte	27                              # Abbrev [27] 0x160a:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\300"
	.short	893                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	858                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x1618:0xc DW_TAG_variable
	.ascii	"\243\001"                      # DW_AT_location
	.short	859                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	858                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x1624:0xc DW_TAG_variable
	.ascii	"\244\001"                      # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	858                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x1631:0xdd DW_TAG_lexical_block
	.byte	36                              # DW_AT_ranges
	.byte	23                              # Abbrev [23] 0x1633:0xb DW_TAG_variable
	.ascii	"\250\001"                      # DW_AT_location
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	880                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0x163e:0xcf DW_TAG_lexical_block
	.byte	37                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0x1640:0xc DW_TAG_variable
	.ascii	"\251\001"                      # DW_AT_location
	.short	870                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	885                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x164c:0xc DW_TAG_variable
	.ascii	"\252\001"                      # DW_AT_location
	.short	871                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	885                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1658:0x2d DW_TAG_lexical_block
	.byte	115                             # DW_AT_low_pc
	.long	.Ltmp1549-.Ltmp1517             # DW_AT_high_pc
	.byte	27                              # Abbrev [27] 0x165e:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\300"
	.short	893                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	886                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x166c:0xc DW_TAG_variable
	.ascii	"\253\001"                      # DW_AT_location
	.short	859                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	886                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x1678:0xc DW_TAG_variable
	.ascii	"\254\001"                      # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	886                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x1685:0x2d DW_TAG_lexical_block
	.byte	116                             # DW_AT_low_pc
	.long	.Ltmp1587-.Ltmp1555             # DW_AT_high_pc
	.byte	27                              # Abbrev [27] 0x168b:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\300"
	.short	893                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	887                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x1699:0xc DW_TAG_variable
	.ascii	"\255\001"                      # DW_AT_location
	.short	859                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	887                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x16a5:0xc DW_TAG_variable
	.ascii	"\256\001"                      # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	887                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x16b2:0x2d DW_TAG_lexical_block
	.byte	117                             # DW_AT_low_pc
	.long	.Ltmp1633-.Ltmp1600             # DW_AT_high_pc
	.byte	27                              # Abbrev [27] 0x16b8:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\300"
	.short	893                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	888                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x16c6:0xc DW_TAG_variable
	.ascii	"\257\001"                      # DW_AT_location
	.short	859                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	888                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x16d2:0xc DW_TAG_variable
	.ascii	"\260\001"                      # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	888                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x16df:0x2d DW_TAG_lexical_block
	.byte	118                             # DW_AT_low_pc
	.long	.Ltmp1673-.Ltmp1643             # DW_AT_high_pc
	.byte	27                              # Abbrev [27] 0x16e5:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\300"
	.short	893                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	889                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x16f3:0xc DW_TAG_variable
	.ascii	"\261\001"                      # DW_AT_location
	.short	859                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	889                             # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x16ff:0xc DW_TAG_variable
	.ascii	"\262\001"                      # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	889                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x170e:0x2b DW_TAG_lexical_block
	.byte	119                             # DW_AT_low_pc
	.long	.Ltmp1712-.Ltmp1686             # DW_AT_high_pc
	.byte	27                              # Abbrev [27] 0x1714:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\300"
	.short	829                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	897                             # DW_AT_decl_line
	.long	16131                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x1722:0xc DW_TAG_variable
	.ascii	"\263\001"                      # DW_AT_location
	.short	871                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	898                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	26                              # Abbrev [26] 0x172e:0xa DW_TAG_variable
	.short	870                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	898                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	30                              # Abbrev [30] 0x1739:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.byte	120                             # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x173d:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	121                             # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1741:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.byte	122                             # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1745:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.byte	123                             # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1749:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.byte	124                             # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x174d:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.byte	125                             # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1751:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	126                             # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1755:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.byte	127                             # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1759:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\200\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x175e:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\201\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1763:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\202\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1768:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\203\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x176d:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\204\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1772:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\205\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1777:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\206\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x177c:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\207\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1781:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\210\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1786:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.ascii	"\211\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x178b:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.ascii	"\212\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1790:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\213\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1795:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\214\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x179a:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\215\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x179f:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\216\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x17a4:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\217\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x17a9:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\220\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x17ae:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.ascii	"\221\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x17b3:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.ascii	"\222\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x17b8:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\223\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x17bd:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\224\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x17c2:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\225\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x17c7:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\226\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x17cc:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\227\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x17d1:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\230\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x17d6:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\231\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x17db:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\232\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x17e0:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\233\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x17e5:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\234\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x17ea:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\235\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x17ef:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\236\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x17f4:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\237\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x17f9:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\240\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x17fe:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\241\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1803:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\242\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1808:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\243\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x180d:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\244\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1812:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\245\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1817:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\246\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x181c:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\247\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1821:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\250\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x1826:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\251\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	58                              # Abbrev [58] 0x182c:0x45 DW_TAG_subprogram
	.ascii	"\252\001"                      # DW_AT_low_pc
	.long	.Lfunc_end2-.Lfunc_begin2       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	822                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	758                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	59                              # Abbrev [59] 0x183a:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	18                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	758                             # DW_AT_decl_line
	.long	6458                            # DW_AT_type
	.byte	60                              # Abbrev [60] 0x1845:0xc DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.short	834                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	758                             # DW_AT_decl_line
	.long	19884                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x1851:0xc DW_TAG_variable
	.ascii	"\264\001"                      # DW_AT_location
	.short	884                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	760                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x185d:0xc DW_TAG_variable
	.ascii	"\265\001"                      # DW_AT_location
	.short	885                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	761                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	61                              # Abbrev [61] 0x1869:0x7 DW_TAG_call_site
	.long	5133                            # DW_AT_call_origin
                                        # DW_AT_call_tail_call
	.ascii	"\253\001"                      # DW_AT_call_pc
	.byte	0                               # End Of Children Mark
	.byte	58                              # Abbrev [58] 0x1871:0x39 DW_TAG_subprogram
	.ascii	"\254\001"                      # DW_AT_low_pc
	.long	.Lfunc_end3-.Lfunc_begin3       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	823                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	769                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	59                              # Abbrev [59] 0x187f:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	18                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	769                             # DW_AT_decl_line
	.long	6458                            # DW_AT_type
	.byte	60                              # Abbrev [60] 0x188a:0xc DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.short	834                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	769                             # DW_AT_decl_line
	.long	19884                           # DW_AT_type
	.byte	44                              # Abbrev [44] 0x1896:0xc DW_TAG_formal_parameter
	.ascii	"\266\001"                      # DW_AT_location
	.short	841                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	769                             # DW_AT_decl_line
	.long	14156                           # DW_AT_type
	.byte	61                              # Abbrev [61] 0x18a2:0x7 DW_TAG_call_site
	.long	5133                            # DW_AT_call_origin
                                        # DW_AT_call_tail_call
	.ascii	"\255\001"                      # DW_AT_call_pc
	.byte	0                               # End Of Children Mark
	.byte	58                              # Abbrev [58] 0x18aa:0x45 DW_TAG_subprogram
	.ascii	"\256\001"                      # DW_AT_low_pc
	.long	.Lfunc_end4-.Lfunc_begin4       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	824                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1081                            # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	43                              # Abbrev [43] 0x18b8:0xb DW_TAG_formal_parameter
	.ascii	"\267\001"                      # DW_AT_location
	.byte	18                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1081                            # DW_AT_decl_line
	.long	6458                            # DW_AT_type
	.byte	44                              # Abbrev [44] 0x18c3:0xc DW_TAG_formal_parameter
	.ascii	"\270\001"                      # DW_AT_location
	.short	907                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1081                            # DW_AT_decl_line
	.long	19884                           # DW_AT_type
	.byte	44                              # Abbrev [44] 0x18cf:0xc DW_TAG_formal_parameter
	.ascii	"\271\001"                      # DW_AT_location
	.short	908                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1081                            # DW_AT_decl_line
	.long	19884                           # DW_AT_type
	.byte	44                              # Abbrev [44] 0x18db:0xc DW_TAG_formal_parameter
	.ascii	"\272\001"                      # DW_AT_location
	.short	909                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1081                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	31                              # Abbrev [31] 0x18e7:0x7 DW_TAG_call_site
	.long	2819                            # DW_AT_call_origin
	.ascii	"\257\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	56                              # Abbrev [56] 0x18ef:0x4b DW_TAG_subprogram
	.byte	79                              # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	110                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	53                              # Abbrev [53] 0x18f3:0x8 DW_TAG_formal_parameter
	.byte	18                              # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	110                             # DW_AT_decl_line
	.long	6458                            # DW_AT_type
	.byte	62                              # Abbrev [62] 0x18fb:0x9 DW_TAG_formal_parameter
	.short	797                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	110                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	62                              # Abbrev [62] 0x1904:0x9 DW_TAG_formal_parameter
	.short	798                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	110                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	62                              # Abbrev [62] 0x190d:0x9 DW_TAG_formal_parameter
	.short	799                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	110                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	62                              # Abbrev [62] 0x1916:0x9 DW_TAG_formal_parameter
	.short	800                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	110                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	62                              # Abbrev [62] 0x191f:0x9 DW_TAG_formal_parameter
	.short	801                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	110                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	53                              # Abbrev [53] 0x1928:0x8 DW_TAG_formal_parameter
	.byte	49                              # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	110                             # DW_AT_decl_line
	.long	4657                            # DW_AT_type
	.byte	12                              # Abbrev [12] 0x1930:0x9 DW_TAG_variable
	.short	802                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	112                             # DW_AT_decl_line
	.long	10829                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x193a:0x5 DW_TAG_pointer_type
	.long	6463                            # DW_AT_type
	.byte	63                              # Abbrev [63] 0x193f:0x9 DW_TAG_typedef
	.long	6472                            # DW_AT_type
	.short	796                             # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.byte	46                              # DW_AT_decl_line
	.byte	64                              # Abbrev [64] 0x1948:0xc07 DW_TAG_structure_type
	.short	796                             # DW_AT_name
	.short	33344                           # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	381                             # DW_AT_decl_line
	.byte	65                              # Abbrev [65] 0x1950:0xa DW_TAG_member
	.byte	80                              # DW_AT_name
	.long	9551                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	384                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x195a:0xb DW_TAG_member
	.byte	216                             # DW_AT_name
	.long	10982                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	386                             # DW_AT_decl_line
	.short	704                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x1965:0xb DW_TAG_member
	.byte	217                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	387                             # DW_AT_decl_line
	.short	1736                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x1970:0xb DW_TAG_member
	.byte	218                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	388                             # DW_AT_decl_line
	.short	1740                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x197b:0xb DW_TAG_member
	.byte	219                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	389                             # DW_AT_decl_line
	.short	1744                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x1986:0xb DW_TAG_member
	.byte	220                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	390                             # DW_AT_decl_line
	.short	1748                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x1991:0xb DW_TAG_member
	.byte	221                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	391                             # DW_AT_decl_line
	.short	1752                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x199c:0xb DW_TAG_member
	.byte	222                             # DW_AT_name
	.long	6567                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
	.short	1760                            # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x19a7:0x42 DW_TAG_structure_type
	.byte	72                              # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	394                             # DW_AT_decl_line
	.byte	65                              # Abbrev [65] 0x19ac:0xa DW_TAG_member
	.byte	223                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	396                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x19b6:0xa DW_TAG_member
	.byte	224                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	397                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x19c0:0xa DW_TAG_member
	.byte	225                             # DW_AT_name
	.long	10994                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	398                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x19ca:0xa DW_TAG_member
	.byte	231                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	399                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x19d4:0xa DW_TAG_member
	.byte	232                             # DW_AT_name
	.long	11054                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	400                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x19de:0xa DW_TAG_member
	.byte	233                             # DW_AT_name
	.long	11059                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	401                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	66                              # Abbrev [66] 0x19e9:0xb DW_TAG_member
	.byte	242                             # DW_AT_name
	.long	11054                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	404                             # DW_AT_decl_line
	.short	1832                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x19f4:0xb DW_TAG_member
	.byte	243                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	405                             # DW_AT_decl_line
	.short	1840                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x19ff:0xb DW_TAG_member
	.byte	244                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	410                             # DW_AT_decl_line
	.short	1844                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x1a0a:0xb DW_TAG_member
	.byte	245                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	411                             # DW_AT_decl_line
	.short	1848                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x1a15:0xb DW_TAG_member
	.byte	246                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	413                             # DW_AT_decl_line
	.short	1852                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x1a20:0xb DW_TAG_member
	.byte	247                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	415                             # DW_AT_decl_line
	.short	1856                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x1a2b:0xb DW_TAG_member
	.byte	248                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	416                             # DW_AT_decl_line
	.short	1860                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x1a36:0xb DW_TAG_member
	.byte	249                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	418                             # DW_AT_decl_line
	.short	1864                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x1a41:0xb DW_TAG_member
	.byte	250                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	419                             # DW_AT_decl_line
	.short	1868                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x1a4c:0xb DW_TAG_member
	.byte	251                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	420                             # DW_AT_decl_line
	.short	1872                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x1a57:0xb DW_TAG_member
	.byte	252                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	421                             # DW_AT_decl_line
	.short	1876                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x1a62:0xb DW_TAG_member
	.byte	253                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	422                             # DW_AT_decl_line
	.short	1880                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x1a6d:0xb DW_TAG_member
	.byte	254                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	424                             # DW_AT_decl_line
	.short	1884                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x1a78:0xb DW_TAG_member
	.byte	255                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	425                             # DW_AT_decl_line
	.short	1888                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1a83:0xc DW_TAG_member
	.short	256                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	427                             # DW_AT_decl_line
	.short	1892                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1a8f:0xc DW_TAG_member
	.short	257                             # DW_AT_name
	.long	11127                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	430                             # DW_AT_decl_line
	.short	1896                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1a9b:0xc DW_TAG_member
	.short	322                             # DW_AT_name
	.long	11914                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	431                             # DW_AT_decl_line
	.short	3200                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1aa7:0xc DW_TAG_member
	.short	323                             # DW_AT_name
	.long	11919                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	432                             # DW_AT_decl_line
	.short	3208                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1ab3:0xc DW_TAG_member
	.short	338                             # DW_AT_name
	.long	12138                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	433                             # DW_AT_decl_line
	.short	3328                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1abf:0xc DW_TAG_member
	.short	339                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	434                             # DW_AT_decl_line
	.short	3336                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1acb:0xc DW_TAG_member
	.short	340                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	437                             # DW_AT_decl_line
	.short	3340                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1ad7:0xc DW_TAG_member
	.short	341                             # DW_AT_name
	.long	12143                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	440                             # DW_AT_decl_line
	.short	3344                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1ae3:0xc DW_TAG_member
	.short	342                             # DW_AT_name
	.long	12172                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	441                             # DW_AT_decl_line
	.short	3376                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1aef:0xc DW_TAG_member
	.short	343                             # DW_AT_name
	.long	12143                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	443                             # DW_AT_decl_line
	.short	3392                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1afb:0xc DW_TAG_member
	.short	344                             # DW_AT_name
	.long	12172                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	444                             # DW_AT_decl_line
	.short	3424                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1b07:0xc DW_TAG_member
	.short	345                             # DW_AT_name
	.long	12201                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.short	3440                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1b13:0xc DW_TAG_member
	.short	346                             # DW_AT_name
	.long	12230                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	447                             # DW_AT_decl_line
	.short	3472                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1b1f:0xc DW_TAG_member
	.short	347                             # DW_AT_name
	.long	12201                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	448                             # DW_AT_decl_line
	.short	3488                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1b2b:0xc DW_TAG_member
	.short	348                             # DW_AT_name
	.long	12230                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	449                             # DW_AT_decl_line
	.short	3520                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1b37:0xc DW_TAG_member
	.short	349                             # DW_AT_name
	.long	12259                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	454                             # DW_AT_decl_line
	.short	3536                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1b43:0xc DW_TAG_member
	.short	350                             # DW_AT_name
	.long	12276                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	455                             # DW_AT_decl_line
	.short	4272                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1b4f:0xc DW_TAG_member
	.short	351                             # DW_AT_name
	.long	12133                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	457                             # DW_AT_decl_line
	.short	7216                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1b5b:0xc DW_TAG_member
	.short	352                             # DW_AT_name
	.long	12294                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	460                             # DW_AT_decl_line
	.short	7232                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1b67:0xc DW_TAG_member
	.short	394                             # DW_AT_name
	.long	12967                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	463                             # DW_AT_decl_line
	.short	13904                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1b73:0xc DW_TAG_member
	.short	402                             # DW_AT_name
	.long	7039                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	494                             # DW_AT_decl_line
	.short	14416                           # DW_AT_data_member_location
	.byte	69                              # Abbrev [69] 0x1b7f:0xcf DW_TAG_structure_type
	.short	264                             # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	465                             # DW_AT_decl_line
	.byte	70                              # Abbrev [70] 0x1b85:0xb DW_TAG_member
	.short	403                             # DW_AT_name
	.long	13083                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	468                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1b90:0xb DW_TAG_member
	.short	487                             # DW_AT_name
	.long	14357                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	470                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1b9b:0xb DW_TAG_member
	.short	488                             # DW_AT_name
	.long	13083                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	473                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1ba6:0xb DW_TAG_member
	.short	489                             # DW_AT_name
	.long	14369                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	476                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1bb1:0xb DW_TAG_member
	.short	490                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	478                             # DW_AT_decl_line
	.byte	176                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1bbc:0xb DW_TAG_member
	.short	491                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	480                             # DW_AT_decl_line
	.byte	180                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1bc7:0xb DW_TAG_member
	.short	492                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	482                             # DW_AT_decl_line
	.byte	184                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1bd2:0xb DW_TAG_member
	.short	493                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	483                             # DW_AT_decl_line
	.byte	188                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1bdd:0xb DW_TAG_member
	.short	494                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	484                             # DW_AT_decl_line
	.byte	192                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1be8:0xb DW_TAG_member
	.short	495                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	485                             # DW_AT_decl_line
	.byte	196                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1bf3:0xb DW_TAG_member
	.short	496                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	486                             # DW_AT_decl_line
	.byte	200                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1bfe:0xb DW_TAG_member
	.short	497                             # DW_AT_name
	.long	13991                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	487                             # DW_AT_decl_line
	.byte	208                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1c09:0xb DW_TAG_member
	.short	498                             # DW_AT_name
	.long	13991                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	488                             # DW_AT_decl_line
	.byte	216                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1c14:0xb DW_TAG_member
	.short	499                             # DW_AT_name
	.long	14381                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	489                             # DW_AT_decl_line
	.byte	224                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1c1f:0xb DW_TAG_member
	.short	500                             # DW_AT_name
	.long	13991                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	490                             # DW_AT_decl_line
	.byte	240                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1c2a:0xb DW_TAG_member
	.short	501                             # DW_AT_name
	.long	13991                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	491                             # DW_AT_decl_line
	.byte	248                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1c35:0xc DW_TAG_member
	.short	502                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	492                             # DW_AT_decl_line
	.short	256                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1c41:0xc DW_TAG_member
	.short	503                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	493                             # DW_AT_decl_line
	.short	260                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	68                              # Abbrev [68] 0x1c4e:0xc DW_TAG_member
	.short	504                             # DW_AT_name
	.long	13088                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	497                             # DW_AT_decl_line
	.short	14680                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1c5a:0xc DW_TAG_member
	.short	505                             # DW_AT_name
	.long	13088                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	500                             # DW_AT_decl_line
	.short	14688                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1c66:0xc DW_TAG_member
	.short	506                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	503                             # DW_AT_decl_line
	.short	14696                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1c72:0xc DW_TAG_member
	.short	507                             # DW_AT_name
	.long	14393                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	504                             # DW_AT_decl_line
	.short	14704                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1c7e:0xc DW_TAG_member
	.short	508                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	505                             # DW_AT_decl_line
	.short	14856                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1c8a:0xc DW_TAG_member
	.short	509                             # DW_AT_name
	.long	14393                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	506                             # DW_AT_decl_line
	.short	14864                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1c96:0xc DW_TAG_member
	.short	510                             # DW_AT_name
	.long	10881                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	507                             # DW_AT_decl_line
	.short	15016                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1ca2:0xc DW_TAG_member
	.short	511                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	510                             # DW_AT_decl_line
	.short	15024                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1cae:0xc DW_TAG_member
	.short	512                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	511                             # DW_AT_decl_line
	.short	15028                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1cba:0xc DW_TAG_member
	.short	513                             # DW_AT_name
	.long	13991                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	512                             # DW_AT_decl_line
	.short	15032                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1cc6:0xc DW_TAG_member
	.short	514                             # DW_AT_name
	.long	7378                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	522                             # DW_AT_decl_line
	.short	15040                           # DW_AT_data_member_location
	.byte	69                              # Abbrev [69] 0x1cd2:0x38 DW_TAG_structure_type
	.short	1328                            # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	515                             # DW_AT_decl_line
	.byte	71                              # Abbrev [71] 0x1cd8:0xc DW_TAG_member
	.short	515                             # DW_AT_name
	.long	14405                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	517                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.byte	0                               # DW_AT_data_member_location
	.byte	71                              # Abbrev [71] 0x1ce4:0xc DW_TAG_member
	.short	516                             # DW_AT_name
	.long	14417                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	518                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.byte	32                              # DW_AT_data_member_location
	.byte	71                              # Abbrev [71] 0x1cf0:0xc DW_TAG_member
	.short	517                             # DW_AT_name
	.long	14435                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	520                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.byte	48                              # DW_AT_data_member_location
	.byte	72                              # Abbrev [72] 0x1cfc:0xd DW_TAG_member
	.short	518                             # DW_AT_name
	.long	14453                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	521                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	560                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	68                              # Abbrev [68] 0x1d0a:0xc DW_TAG_member
	.short	519                             # DW_AT_name
	.long	7446                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	732                             # DW_AT_decl_line
	.short	16368                           # DW_AT_data_member_location
	.byte	69                              # Abbrev [69] 0x1d16:0x59f DW_TAG_structure_type
	.short	10336                           # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	525                             # DW_AT_decl_line
	.byte	70                              # Abbrev [70] 0x1d1c:0xb DW_TAG_member
	.short	520                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	527                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1d27:0xb DW_TAG_member
	.short	521                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	530                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1d32:0xb DW_TAG_member
	.short	522                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	531                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1d3d:0xb DW_TAG_member
	.short	523                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	532                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1d48:0xb DW_TAG_member
	.short	524                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	535                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1d53:0xb DW_TAG_member
	.short	525                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	536                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1d5e:0xb DW_TAG_member
	.short	526                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	537                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1d69:0xb DW_TAG_member
	.short	527                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	538                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1d74:0xb DW_TAG_member
	.short	528                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	539                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x1d7f:0xa DW_TAG_member
	.byte	145                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	542                             # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x1d89:0xa DW_TAG_member
	.byte	149                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	543                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x1d93:0xa DW_TAG_member
	.byte	150                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	544                             # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1d9d:0xb DW_TAG_member
	.short	529                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	545                             # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1da8:0xb DW_TAG_member
	.short	530                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	546                             # DW_AT_decl_line
	.byte	52                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x1db3:0xa DW_TAG_member
	.byte	154                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	547                             # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1dbd:0xb DW_TAG_member
	.short	531                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	548                             # DW_AT_decl_line
	.byte	60                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1dc8:0xb DW_TAG_member
	.short	532                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	549                             # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x1dd3:0xa DW_TAG_member
	.byte	116                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	551                             # DW_AT_decl_line
	.byte	68                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1ddd:0xb DW_TAG_member
	.short	533                             # DW_AT_name
	.long	10881                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	554                             # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1de8:0xb DW_TAG_member
	.short	534                             # DW_AT_name
	.long	10881                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	555                             # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1df3:0xb DW_TAG_member
	.short	535                             # DW_AT_name
	.long	10881                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	558                             # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1dfe:0xb DW_TAG_member
	.short	536                             # DW_AT_name
	.long	10881                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	559                             # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1e09:0xb DW_TAG_member
	.short	537                             # DW_AT_name
	.long	10881                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	561                             # DW_AT_decl_line
	.byte	104                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1e14:0xb DW_TAG_member
	.short	538                             # DW_AT_name
	.long	10881                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	562                             # DW_AT_decl_line
	.byte	112                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1e1f:0xb DW_TAG_member
	.short	539                             # DW_AT_name
	.long	4608                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	565                             # DW_AT_decl_line
	.byte	120                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1e2a:0xb DW_TAG_member
	.short	540                             # DW_AT_name
	.long	14471                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	566                             # DW_AT_decl_line
	.byte	124                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1e35:0xb DW_TAG_member
	.short	541                             # DW_AT_name
	.long	14483                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	567                             # DW_AT_decl_line
	.byte	140                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1e40:0xb DW_TAG_member
	.short	542                             # DW_AT_name
	.long	4608                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	568                             # DW_AT_decl_line
	.byte	204                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1e4b:0xb DW_TAG_member
	.short	543                             # DW_AT_name
	.long	4608                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	569                             # DW_AT_decl_line
	.byte	208                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1e56:0xb DW_TAG_member
	.short	544                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	570                             # DW_AT_decl_line
	.byte	212                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1e61:0xb DW_TAG_member
	.short	545                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	571                             # DW_AT_decl_line
	.byte	216                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1e6c:0xb DW_TAG_member
	.short	546                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	572                             # DW_AT_decl_line
	.byte	220                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1e77:0xb DW_TAG_member
	.short	547                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	573                             # DW_AT_decl_line
	.byte	224                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1e82:0xb DW_TAG_member
	.short	548                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	574                             # DW_AT_decl_line
	.byte	228                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1e8d:0xb DW_TAG_member
	.short	549                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	575                             # DW_AT_decl_line
	.byte	232                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1e98:0xb DW_TAG_member
	.short	550                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	576                             # DW_AT_decl_line
	.byte	236                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1ea3:0xb DW_TAG_member
	.short	551                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	577                             # DW_AT_decl_line
	.byte	240                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1eae:0xb DW_TAG_member
	.short	552                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	578                             # DW_AT_decl_line
	.byte	244                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1eb9:0xb DW_TAG_member
	.short	553                             # DW_AT_name
	.long	14085                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	585                             # DW_AT_decl_line
	.byte	248                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1ec4:0xc DW_TAG_member
	.short	554                             # DW_AT_name
	.long	11054                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	586                             # DW_AT_decl_line
	.short	256                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1ed0:0xc DW_TAG_member
	.short	555                             # DW_AT_name
	.long	14085                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	587                             # DW_AT_decl_line
	.short	264                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1edc:0xc DW_TAG_member
	.short	556                             # DW_AT_name
	.long	14495                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	588                             # DW_AT_decl_line
	.short	272                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1ee8:0xc DW_TAG_member
	.short	557                             # DW_AT_name
	.long	14500                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	589                             # DW_AT_decl_line
	.short	280                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1ef4:0xc DW_TAG_member
	.short	558                             # DW_AT_name
	.long	14517                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	591                             # DW_AT_decl_line
	.short	288                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1f00:0xc DW_TAG_member
	.short	559                             # DW_AT_name
	.long	14085                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	592                             # DW_AT_decl_line
	.short	296                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x1f0c:0xb DW_TAG_member
	.byte	49                              # DW_AT_name
	.long	14090                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	593                             # DW_AT_decl_line
	.short	304                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1f17:0xc DW_TAG_member
	.short	560                             # DW_AT_name
	.long	14534                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	594                             # DW_AT_decl_line
	.short	320                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1f23:0xc DW_TAG_member
	.short	444                             # DW_AT_name
	.long	14161                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	595                             # DW_AT_decl_line
	.short	336                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1f2f:0xc DW_TAG_member
	.short	561                             # DW_AT_name
	.long	14569                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	596                             # DW_AT_decl_line
	.short	352                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1f3b:0xc DW_TAG_member
	.short	562                             # DW_AT_name
	.long	14085                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	597                             # DW_AT_decl_line
	.short	864                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1f47:0xc DW_TAG_member
	.short	563                             # DW_AT_name
	.long	14085                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	598                             # DW_AT_decl_line
	.short	872                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1f53:0xc DW_TAG_member
	.short	564                             # DW_AT_name
	.long	12271                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	599                             # DW_AT_decl_line
	.short	880                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1f5f:0xc DW_TAG_member
	.short	565                             # DW_AT_name
	.long	14068                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	603                             # DW_AT_decl_line
	.short	888                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x1f6b:0xb DW_TAG_member
	.byte	227                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	606                             # DW_AT_decl_line
	.short	1016                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1f76:0xc DW_TAG_member
	.short	566                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	607                             # DW_AT_decl_line
	.short	1020                            # DW_AT_data_member_location
	.byte	72                              # Abbrev [72] 0x1f82:0xd DW_TAG_member
	.short	567                             # DW_AT_name
	.long	4685                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	608                             # DW_AT_decl_line
	.byte	4                               # DW_AT_alignment
	.short	1024                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x1f8f:0xb DW_TAG_member
	.byte	140                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	609                             # DW_AT_decl_line
	.short	1028                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1f9a:0xc DW_TAG_member
	.short	568                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	611                             # DW_AT_decl_line
	.short	1032                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1fa6:0xc DW_TAG_member
	.short	569                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	612                             # DW_AT_decl_line
	.short	1036                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1fb2:0xc DW_TAG_member
	.short	570                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	614                             # DW_AT_decl_line
	.short	1040                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1fbe:0xc DW_TAG_member
	.short	571                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	615                             # DW_AT_decl_line
	.short	1044                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1fca:0xc DW_TAG_member
	.short	572                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	621                             # DW_AT_decl_line
	.short	1048                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1fd6:0xc DW_TAG_member
	.short	573                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	624                             # DW_AT_decl_line
	.short	1052                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1fe2:0xc DW_TAG_member
	.short	574                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	626                             # DW_AT_decl_line
	.short	1056                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1fee:0xc DW_TAG_member
	.short	575                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	627                             # DW_AT_decl_line
	.short	1060                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x1ffa:0xc DW_TAG_member
	.short	576                             # DW_AT_name
	.long	8198                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	671                             # DW_AT_decl_line
	.short	1072                            # DW_AT_data_member_location
	.byte	69                              # Abbrev [69] 0x2006:0x118 DW_TAG_structure_type
	.short	7584                            # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	629                             # DW_AT_decl_line
	.byte	71                              # Abbrev [71] 0x200c:0xc DW_TAG_member
	.short	577                             # DW_AT_name
	.long	14587                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	634                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.byte	0                               # DW_AT_data_member_location
	.byte	72                              # Abbrev [72] 0x2018:0xd DW_TAG_member
	.short	578                             # DW_AT_name
	.long	14600                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	635                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	384                             # DW_AT_data_member_location
	.byte	72                              # Abbrev [72] 0x2025:0xd DW_TAG_member
	.short	579                             # DW_AT_name
	.long	14613                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	638                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	1248                            # DW_AT_data_member_location
	.byte	72                              # Abbrev [72] 0x2032:0xd DW_TAG_member
	.short	580                             # DW_AT_name
	.long	14613                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	639                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	1504                            # DW_AT_data_member_location
	.byte	72                              # Abbrev [72] 0x203f:0xd DW_TAG_member
	.short	581                             # DW_AT_name
	.long	14626                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	640                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	1760                            # DW_AT_data_member_location
	.byte	72                              # Abbrev [72] 0x204c:0xd DW_TAG_member
	.short	582                             # DW_AT_name
	.long	14644                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	641                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	2144                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2059:0xc DW_TAG_member
	.short	583                             # DW_AT_name
	.long	14662                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	642                             # DW_AT_decl_line
	.short	2624                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2065:0xc DW_TAG_member
	.short	584                             # DW_AT_name
	.long	14662                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	643                             # DW_AT_decl_line
	.short	2640                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2071:0xc DW_TAG_member
	.short	585                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	644                             # DW_AT_decl_line
	.short	2656                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x207d:0xc DW_TAG_member
	.short	586                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	645                             # DW_AT_decl_line
	.short	2660                            # DW_AT_data_member_location
	.byte	72                              # Abbrev [72] 0x2089:0xd DW_TAG_member
	.short	587                             # DW_AT_name
	.long	14435                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	648                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	2672                            # DW_AT_data_member_location
	.byte	72                              # Abbrev [72] 0x2096:0xd DW_TAG_member
	.short	588                             # DW_AT_name
	.long	14674                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	649                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	3184                            # DW_AT_data_member_location
	.byte	72                              # Abbrev [72] 0x20a3:0xd DW_TAG_member
	.short	589                             # DW_AT_name
	.long	14692                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	652                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	3696                            # DW_AT_data_member_location
	.byte	72                              # Abbrev [72] 0x20b0:0xd DW_TAG_member
	.short	590                             # DW_AT_name
	.long	14704                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	653                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	3776                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x20bd:0xc DW_TAG_member
	.short	591                             # DW_AT_name
	.long	14026                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	656                             # DW_AT_decl_line
	.short	3904                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x20c9:0xc DW_TAG_member
	.short	592                             # DW_AT_name
	.long	14026                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	658                             # DW_AT_decl_line
	.short	3928                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x20d5:0xc DW_TAG_member
	.short	593                             # DW_AT_name
	.long	14026                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	661                             # DW_AT_decl_line
	.short	3952                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x20e1:0xc DW_TAG_member
	.short	594                             # DW_AT_name
	.long	10881                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	664                             # DW_AT_decl_line
	.short	3976                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x20ed:0xc DW_TAG_member
	.short	595                             # DW_AT_name
	.long	14716                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	665                             # DW_AT_decl_line
	.short	3984                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x20f9:0xc DW_TAG_member
	.short	596                             # DW_AT_name
	.long	14740                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	666                             # DW_AT_decl_line
	.short	7056                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2105:0xc DW_TAG_member
	.short	597                             # DW_AT_name
	.long	14752                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	667                             # DW_AT_decl_line
	.short	7312                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2111:0xc DW_TAG_member
	.short	424                             # DW_AT_name
	.long	14014                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	670                             # DW_AT_decl_line
	.short	7568                            # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	68                              # Abbrev [68] 0x211e:0xc DW_TAG_member
	.short	598                             # DW_AT_name
	.long	8490                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	704                             # DW_AT_decl_line
	.short	8656                            # DW_AT_data_member_location
	.byte	69                              # Abbrev [69] 0x212a:0xb3 DW_TAG_structure_type
	.short	768                             # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	674                             # DW_AT_decl_line
	.byte	71                              # Abbrev [71] 0x2130:0xc DW_TAG_member
	.short	557                             # DW_AT_name
	.long	14770                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	677                             # DW_AT_decl_line
	.byte	8                               # DW_AT_alignment
	.byte	0                               # DW_AT_data_member_location
	.byte	71                              # Abbrev [71] 0x213c:0xc DW_TAG_member
	.short	558                             # DW_AT_name
	.long	14782                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	680                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.byte	48                              # DW_AT_data_member_location
	.byte	71                              # Abbrev [71] 0x2148:0xc DW_TAG_member
	.short	444                             # DW_AT_name
	.long	14794                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	683                             # DW_AT_decl_line
	.byte	4                               # DW_AT_alignment
	.byte	96                              # DW_AT_data_member_location
	.byte	73                              # Abbrev [73] 0x2154:0xb DW_TAG_member
	.byte	49                              # DW_AT_name
	.long	14812                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	686                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.byte	176                             # DW_AT_data_member_location
	.byte	72                              # Abbrev [72] 0x215f:0xd DW_TAG_member
	.short	560                             # DW_AT_name
	.long	14836                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	687                             # DW_AT_decl_line
	.byte	8                               # DW_AT_alignment
	.short	496                             # DW_AT_data_member_location
	.byte	72                              # Abbrev [72] 0x216c:0xd DW_TAG_member
	.short	599                             # DW_AT_name
	.long	14770                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	690                             # DW_AT_decl_line
	.byte	4                               # DW_AT_alignment
	.short	656                             # DW_AT_data_member_location
	.byte	72                              # Abbrev [72] 0x2179:0xd DW_TAG_member
	.short	600                             # DW_AT_name
	.long	14860                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	692                             # DW_AT_decl_line
	.byte	4                               # DW_AT_alignment
	.short	696                             # DW_AT_data_member_location
	.byte	72                              # Abbrev [72] 0x2186:0xd DW_TAG_member
	.short	601                             # DW_AT_name
	.long	14884                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	693                             # DW_AT_decl_line
	.byte	4                               # DW_AT_alignment
	.short	728                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2193:0xc DW_TAG_member
	.short	602                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	694                             # DW_AT_decl_line
	.short	736                             # DW_AT_data_member_location
	.byte	72                              # Abbrev [72] 0x219f:0xd DW_TAG_member
	.short	603                             # DW_AT_name
	.long	4733                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	695                             # DW_AT_decl_line
	.byte	4                               # DW_AT_alignment
	.short	740                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x21ac:0xc DW_TAG_member
	.short	604                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	698                             # DW_AT_decl_line
	.short	744                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x21b8:0xc DW_TAG_member
	.short	605                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	699                             # DW_AT_decl_line
	.short	748                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x21c4:0xc DW_TAG_member
	.short	606                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	702                             # DW_AT_decl_line
	.short	752                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x21d0:0xc DW_TAG_member
	.short	607                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	703                             # DW_AT_decl_line
	.short	756                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	66                              # Abbrev [66] 0x21dd:0xb DW_TAG_member
	.byte	193                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	707                             # DW_AT_decl_line
	.short	9424                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x21e8:0xc DW_TAG_member
	.short	608                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	708                             # DW_AT_decl_line
	.short	9428                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x21f4:0xc DW_TAG_member
	.short	609                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	709                             # DW_AT_decl_line
	.short	9432                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2200:0xc DW_TAG_member
	.short	610                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	710                             # DW_AT_decl_line
	.short	9436                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x220c:0xc DW_TAG_member
	.short	611                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	711                             # DW_AT_decl_line
	.short	9440                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2218:0xc DW_TAG_member
	.short	612                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	712                             # DW_AT_decl_line
	.short	9444                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2224:0xc DW_TAG_member
	.short	613                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	713                             # DW_AT_decl_line
	.short	9448                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2230:0xc DW_TAG_member
	.short	614                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	714                             # DW_AT_decl_line
	.short	9452                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x223c:0xc DW_TAG_member
	.short	615                             # DW_AT_name
	.long	14902                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	717                             # DW_AT_decl_line
	.short	9456                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2248:0xc DW_TAG_member
	.short	616                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	718                             # DW_AT_decl_line
	.short	9472                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2254:0xc DW_TAG_member
	.short	617                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	719                             # DW_AT_decl_line
	.short	9476                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2260:0xc DW_TAG_member
	.short	618                             # DW_AT_name
	.long	14920                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	722                             # DW_AT_decl_line
	.short	9480                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x226c:0xc DW_TAG_member
	.short	619                             # DW_AT_name
	.long	14944                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	723                             # DW_AT_decl_line
	.short	9992                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2278:0xc DW_TAG_member
	.short	620                             # DW_AT_name
	.long	14961                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	724                             # DW_AT_decl_line
	.short	10000                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2284:0xc DW_TAG_member
	.short	621                             # DW_AT_name
	.long	14985                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	725                             # DW_AT_decl_line
	.short	10256                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2290:0xc DW_TAG_member
	.short	622                             # DW_AT_name
	.long	15002                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	728                             # DW_AT_decl_line
	.short	10264                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x229c:0xc DW_TAG_member
	.short	623                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	729                             # DW_AT_decl_line
	.short	10284                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x22a8:0xc DW_TAG_member
	.short	624                             # DW_AT_name
	.long	15014                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	730                             # DW_AT_decl_line
	.short	10288                           # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	66                              # Abbrev [66] 0x22b5:0xb DW_TAG_member
	.byte	163                             # DW_AT_name
	.long	15026                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	735                             # DW_AT_decl_line
	.short	26704                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x22c0:0xc DW_TAG_member
	.short	626                             # DW_AT_name
	.long	8908                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	793                             # DW_AT_decl_line
	.short	26712                           # DW_AT_data_member_location
	.byte	69                              # Abbrev [69] 0x22cc:0x1a8 DW_TAG_structure_type
	.short	3688                            # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	738                             # DW_AT_decl_line
	.byte	70                              # Abbrev [70] 0x22d2:0xb DW_TAG_member
	.short	627                             # DW_AT_name
	.long	8925                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	764                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	69                              # Abbrev [69] 0x22dd:0xb2 DW_TAG_structure_type
	.short	704                             # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	741                             # DW_AT_decl_line
	.byte	70                              # Abbrev [70] 0x22e3:0xb DW_TAG_member
	.short	628                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	744                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x22ee:0xb DW_TAG_member
	.short	629                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	746                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x22f9:0xb DW_TAG_member
	.short	630                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	748                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x2304:0xb DW_TAG_member
	.short	520                             # DW_AT_name
	.long	15044                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	750                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x230f:0xb DW_TAG_member
	.short	631                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	751                             # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x231a:0xb DW_TAG_member
	.short	632                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	752                             # DW_AT_decl_line
	.byte	92                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x2325:0xb DW_TAG_member
	.short	633                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	753                             # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x2330:0xb DW_TAG_member
	.short	634                             # DW_AT_name
	.long	10881                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	754                             # DW_AT_decl_line
	.byte	100                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x233b:0xb DW_TAG_member
	.short	635                             # DW_AT_name
	.long	15056                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	755                             # DW_AT_decl_line
	.byte	108                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2346:0xc DW_TAG_member
	.short	636                             # DW_AT_name
	.long	15074                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	756                             # DW_AT_decl_line
	.short	364                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2352:0xc DW_TAG_member
	.short	637                             # DW_AT_name
	.long	15086                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	757                             # DW_AT_decl_line
	.short	432                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x235e:0xc DW_TAG_member
	.short	638                             # DW_AT_name
	.long	15098                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	758                             # DW_AT_decl_line
	.short	456                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x236a:0xc DW_TAG_member
	.short	639                             # DW_AT_name
	.long	10881                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	760                             # DW_AT_decl_line
	.short	664                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2376:0xc DW_TAG_member
	.short	640                             # DW_AT_name
	.long	15116                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	762                             # DW_AT_decl_line
	.short	672                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2382:0xc DW_TAG_member
	.short	641                             # DW_AT_name
	.long	14316                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	763                             # DW_AT_decl_line
	.short	696                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	68                              # Abbrev [68] 0x238f:0xc DW_TAG_member
	.short	642                             # DW_AT_name
	.long	15128                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	769                             # DW_AT_decl_line
	.short	704                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x239b:0xc DW_TAG_member
	.short	643                             # DW_AT_name
	.long	15140                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	770                             # DW_AT_decl_line
	.short	728                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x23a7:0xc DW_TAG_member
	.short	644                             # DW_AT_name
	.long	15152                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	771                             # DW_AT_decl_line
	.short	768                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x23b3:0xc DW_TAG_member
	.short	645                             # DW_AT_name
	.long	15074                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	772                             # DW_AT_decl_line
	.short	808                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x23bf:0xc DW_TAG_member
	.short	646                             # DW_AT_name
	.long	15140                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	774                             # DW_AT_decl_line
	.short	880                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x23cb:0xc DW_TAG_member
	.short	647                             # DW_AT_name
	.long	15152                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	775                             # DW_AT_decl_line
	.short	920                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x23d7:0xc DW_TAG_member
	.short	648                             # DW_AT_name
	.long	15152                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	776                             # DW_AT_decl_line
	.short	960                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x23e3:0xc DW_TAG_member
	.short	649                             # DW_AT_name
	.long	15152                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	777                             # DW_AT_decl_line
	.short	1000                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x23ef:0xc DW_TAG_member
	.short	650                             # DW_AT_name
	.long	15152                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	778                             # DW_AT_decl_line
	.short	1040                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x23fb:0xc DW_TAG_member
	.short	651                             # DW_AT_name
	.long	15152                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	779                             # DW_AT_decl_line
	.short	1080                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2407:0xc DW_TAG_member
	.short	520                             # DW_AT_name
	.long	15164                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	781                             # DW_AT_decl_line
	.short	1120                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2413:0xc DW_TAG_member
	.short	636                             # DW_AT_name
	.long	15182                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	782                             # DW_AT_decl_line
	.short	1880                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x241f:0xc DW_TAG_member
	.short	634                             # DW_AT_name
	.long	14381                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	783                             # DW_AT_decl_line
	.short	2152                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x242b:0xc DW_TAG_member
	.short	635                             # DW_AT_name
	.long	15200                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	784                             # DW_AT_decl_line
	.short	2168                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2437:0xc DW_TAG_member
	.short	637                             # DW_AT_name
	.long	15224                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	785                             # DW_AT_decl_line
	.short	3192                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2443:0xc DW_TAG_member
	.short	638                             # DW_AT_name
	.long	15236                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	786                             # DW_AT_decl_line
	.short	3240                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x244f:0xc DW_TAG_member
	.short	639                             # DW_AT_name
	.long	10881                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	788                             # DW_AT_decl_line
	.short	3656                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x245b:0xc DW_TAG_member
	.short	652                             # DW_AT_name
	.long	10881                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	789                             # DW_AT_decl_line
	.short	3664                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2467:0xc DW_TAG_member
	.short	653                             # DW_AT_name
	.long	14014                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	791                             # DW_AT_decl_line
	.short	3672                            # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	72                              # Abbrev [72] 0x2474:0xd DW_TAG_member
	.short	654                             # DW_AT_name
	.long	15254                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	795                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	30400                           # DW_AT_data_member_location
	.byte	72                              # Abbrev [72] 0x2481:0xd DW_TAG_member
	.short	655                             # DW_AT_name
	.long	15272                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	796                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	30912                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x248e:0xc DW_TAG_member
	.short	656                             # DW_AT_name
	.long	4839                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	797                             # DW_AT_decl_line
	.short	31168                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x249a:0xc DW_TAG_member
	.short	657                             # DW_AT_name
	.long	10829                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	800                             # DW_AT_decl_line
	.short	31176                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x24a6:0xc DW_TAG_member
	.short	658                             # DW_AT_name
	.long	15290                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	801                             # DW_AT_decl_line
	.short	31184                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x24b2:0xc DW_TAG_member
	.short	659                             # DW_AT_name
	.long	15308                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	802                             # DW_AT_decl_line
	.short	31232                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x24be:0xc DW_TAG_member
	.short	660                             # DW_AT_name
	.long	15349                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	805                             # DW_AT_decl_line
	.short	31248                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x24ca:0xc DW_TAG_member
	.short	662                             # DW_AT_name
	.long	15349                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	806                             # DW_AT_decl_line
	.short	31304                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x24d6:0xc DW_TAG_member
	.short	663                             # DW_AT_name
	.long	15382                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	807                             # DW_AT_decl_line
	.short	31360                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x24e2:0xc DW_TAG_member
	.short	665                             # DW_AT_name
	.long	15420                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	808                             # DW_AT_decl_line
	.short	31456                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x24ee:0xc DW_TAG_member
	.short	666                             # DW_AT_name
	.long	15432                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	809                             # DW_AT_decl_line
	.short	31552                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x24fa:0xc DW_TAG_member
	.short	668                             # DW_AT_name
	.long	15468                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	811                             # DW_AT_decl_line
	.short	31560                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2506:0xc DW_TAG_member
	.short	705                             # DW_AT_name
	.long	16249                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	812                             # DW_AT_decl_line
	.short	32616                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2512:0xc DW_TAG_member
	.short	729                             # DW_AT_name
	.long	17093                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	813                             # DW_AT_decl_line
	.short	32912                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x251e:0xc DW_TAG_member
	.short	746                             # DW_AT_name
	.long	17408                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	814                             # DW_AT_decl_line
	.short	33032                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x252a:0xc DW_TAG_member
	.short	754                             # DW_AT_name
	.long	17578                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	815                             # DW_AT_decl_line
	.short	33080                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2536:0xc DW_TAG_member
	.short	773                             # DW_AT_name
	.long	17960                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	816                             # DW_AT_decl_line
	.short	33256                           # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x2542:0xc DW_TAG_member
	.short	781                             # DW_AT_name
	.long	18213                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	821                             # DW_AT_decl_line
	.short	33328                           # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	74                              # Abbrev [74] 0x254f:0x9 DW_TAG_typedef
	.long	9560                            # DW_AT_type
	.byte	215                             # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.short	376                             # DW_AT_decl_line
	.byte	75                              # Abbrev [75] 0x2558:0x4b9 DW_TAG_structure_type
	.byte	215                             # DW_AT_name
	.short	704                             # DW_AT_byte_size
	.byte	10                              # DW_AT_decl_file
	.byte	176                             # DW_AT_decl_line
	.byte	41                              # Abbrev [41] 0x255e:0x9 DW_TAG_member
	.byte	81                              # DW_AT_name
	.long	4608                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	179                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2567:0x9 DW_TAG_member
	.byte	82                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	180                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2570:0x9 DW_TAG_member
	.byte	83                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	181                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2579:0x9 DW_TAG_member
	.byte	84                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	182                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2582:0x9 DW_TAG_member
	.byte	85                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	183                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x258b:0x9 DW_TAG_member
	.byte	86                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	186                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2594:0x9 DW_TAG_member
	.byte	87                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	187                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x259d:0x9 DW_TAG_member
	.byte	88                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	188                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x25a6:0x9 DW_TAG_member
	.byte	89                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	189                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x25af:0x9 DW_TAG_member
	.byte	90                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	190                             # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x25b8:0x9 DW_TAG_member
	.byte	91                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	198                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x25c1:0x9 DW_TAG_member
	.byte	92                              # DW_AT_name
	.long	9674                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	215                             # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	40                              # Abbrev [40] 0x25ca:0x56 DW_TAG_structure_type
	.byte	36                              # DW_AT_byte_size
	.byte	10                              # DW_AT_decl_file
	.byte	200                             # DW_AT_decl_line
	.byte	41                              # Abbrev [41] 0x25ce:0x9 DW_TAG_member
	.byte	93                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	203                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x25d7:0x9 DW_TAG_member
	.byte	94                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	204                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x25e0:0x9 DW_TAG_member
	.byte	95                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	206                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x25e9:0x9 DW_TAG_member
	.byte	96                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	209                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x25f2:0x9 DW_TAG_member
	.byte	97                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	210                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x25fb:0x9 DW_TAG_member
	.byte	98                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	211                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2604:0x9 DW_TAG_member
	.byte	99                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	212                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x260d:0x9 DW_TAG_member
	.byte	100                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	213                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2616:0x9 DW_TAG_member
	.byte	101                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	214                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	41                              # Abbrev [41] 0x2620:0x9 DW_TAG_member
	.byte	102                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	218                             # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2629:0x9 DW_TAG_member
	.byte	103                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	219                             # DW_AT_decl_line
	.byte	84                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2632:0x9 DW_TAG_member
	.byte	104                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	220                             # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x263b:0x9 DW_TAG_member
	.byte	105                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	221                             # DW_AT_decl_line
	.byte	92                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2644:0x9 DW_TAG_member
	.byte	106                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	222                             # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x264d:0x9 DW_TAG_member
	.byte	107                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	224                             # DW_AT_decl_line
	.byte	100                             # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2656:0x9 DW_TAG_member
	.byte	108                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	225                             # DW_AT_decl_line
	.byte	104                             # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x265f:0x9 DW_TAG_member
	.byte	109                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	226                             # DW_AT_decl_line
	.byte	108                             # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2668:0x9 DW_TAG_member
	.byte	110                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	227                             # DW_AT_decl_line
	.byte	112                             # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2671:0x9 DW_TAG_member
	.byte	111                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	229                             # DW_AT_decl_line
	.byte	116                             # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x267a:0x9 DW_TAG_member
	.byte	112                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	230                             # DW_AT_decl_line
	.byte	120                             # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2683:0x9 DW_TAG_member
	.byte	113                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	231                             # DW_AT_decl_line
	.byte	124                             # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x268c:0x9 DW_TAG_member
	.byte	114                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	233                             # DW_AT_decl_line
	.byte	128                             # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2695:0x9 DW_TAG_member
	.byte	115                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	234                             # DW_AT_decl_line
	.byte	132                             # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x269e:0x9 DW_TAG_member
	.byte	116                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	236                             # DW_AT_decl_line
	.byte	136                             # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x26a7:0x9 DW_TAG_member
	.byte	117                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	237                             # DW_AT_decl_line
	.byte	140                             # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x26b0:0x9 DW_TAG_member
	.byte	118                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	239                             # DW_AT_decl_line
	.byte	144                             # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x26b9:0x9 DW_TAG_member
	.byte	119                             # DW_AT_name
	.long	10769                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	240                             # DW_AT_decl_line
	.byte	152                             # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x26c2:0x9 DW_TAG_member
	.byte	121                             # DW_AT_name
	.long	10778                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	241                             # DW_AT_decl_line
	.byte	160                             # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x26cb:0x9 DW_TAG_member
	.byte	122                             # DW_AT_name
	.long	10778                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	242                             # DW_AT_decl_line
	.byte	176                             # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x26d4:0x9 DW_TAG_member
	.byte	123                             # DW_AT_name
	.long	10778                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	243                             # DW_AT_decl_line
	.byte	192                             # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x26dd:0x9 DW_TAG_member
	.byte	124                             # DW_AT_name
	.long	10778                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	244                             # DW_AT_decl_line
	.byte	208                             # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x26e6:0x9 DW_TAG_member
	.byte	125                             # DW_AT_name
	.long	10790                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	245                             # DW_AT_decl_line
	.byte	224                             # DW_AT_data_member_location
	.byte	76                              # Abbrev [76] 0x26ef:0xa DW_TAG_member
	.byte	126                             # DW_AT_name
	.long	10790                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	246                             # DW_AT_decl_line
	.short	288                             # DW_AT_data_member_location
	.byte	76                              # Abbrev [76] 0x26f9:0xa DW_TAG_member
	.byte	127                             # DW_AT_name
	.long	10802                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	249                             # DW_AT_decl_line
	.short	352                             # DW_AT_data_member_location
	.byte	76                              # Abbrev [76] 0x2703:0xa DW_TAG_member
	.byte	133                             # DW_AT_name
	.long	10829                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	250                             # DW_AT_decl_line
	.short	360                             # DW_AT_data_member_location
	.byte	76                              # Abbrev [76] 0x270d:0xa DW_TAG_member
	.byte	134                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	251                             # DW_AT_decl_line
	.short	368                             # DW_AT_data_member_location
	.byte	76                              # Abbrev [76] 0x2717:0xa DW_TAG_member
	.byte	135                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	252                             # DW_AT_decl_line
	.short	372                             # DW_AT_data_member_location
	.byte	76                              # Abbrev [76] 0x2721:0xa DW_TAG_member
	.byte	136                             # DW_AT_name
	.long	10769                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	253                             # DW_AT_decl_line
	.short	376                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x272b:0xb DW_TAG_member
	.byte	137                             # DW_AT_name
	.long	10038                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	287                             # DW_AT_decl_line
	.short	384                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2736:0xf6 DW_TAG_structure_type
	.byte	100                             # DW_AT_byte_size
	.byte	10                              # DW_AT_decl_file
	.short	256                             # DW_AT_decl_line
	.byte	65                              # Abbrev [65] 0x273b:0xa DW_TAG_member
	.byte	138                             # DW_AT_name
	.long	4608                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	258                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2745:0xa DW_TAG_member
	.byte	139                             # DW_AT_name
	.long	4608                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	259                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x274f:0xa DW_TAG_member
	.byte	140                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	261                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2759:0xa DW_TAG_member
	.byte	141                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	262                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2763:0xa DW_TAG_member
	.byte	142                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	263                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x276d:0xa DW_TAG_member
	.byte	143                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	264                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2777:0xa DW_TAG_member
	.byte	144                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	265                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2781:0xa DW_TAG_member
	.byte	145                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	267                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x278b:0xa DW_TAG_member
	.byte	146                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	268                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2795:0xa DW_TAG_member
	.byte	147                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	269                             # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x279f:0xa DW_TAG_member
	.byte	148                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	270                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x27a9:0xa DW_TAG_member
	.byte	149                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	271                             # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x27b3:0xa DW_TAG_member
	.byte	150                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	272                             # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x27bd:0xa DW_TAG_member
	.byte	151                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	273                             # DW_AT_decl_line
	.byte	52                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x27c7:0xa DW_TAG_member
	.byte	152                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	274                             # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x27d1:0xa DW_TAG_member
	.byte	153                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	275                             # DW_AT_decl_line
	.byte	60                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x27db:0xa DW_TAG_member
	.byte	154                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	276                             # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x27e5:0xa DW_TAG_member
	.byte	155                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	277                             # DW_AT_decl_line
	.byte	68                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x27ef:0xa DW_TAG_member
	.byte	156                             # DW_AT_name
	.long	10877                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	278                             # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x27f9:0xa DW_TAG_member
	.byte	158                             # DW_AT_name
	.long	10877                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	279                             # DW_AT_decl_line
	.byte	76                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2803:0xa DW_TAG_member
	.byte	159                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	280                             # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x280d:0xa DW_TAG_member
	.byte	160                             # DW_AT_name
	.long	10881                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	283                             # DW_AT_decl_line
	.byte	84                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2817:0xa DW_TAG_member
	.byte	161                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	285                             # DW_AT_decl_line
	.byte	92                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2821:0xa DW_TAG_member
	.byte	162                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	286                             # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	66                              # Abbrev [66] 0x282c:0xb DW_TAG_member
	.byte	163                             # DW_AT_name
	.long	10295                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	327                             # DW_AT_decl_line
	.short	488                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2837:0x11e DW_TAG_structure_type
	.byte	144                             # DW_AT_byte_size
	.byte	10                              # DW_AT_decl_file
	.short	290                             # DW_AT_decl_line
	.byte	65                              # Abbrev [65] 0x283c:0xa DW_TAG_member
	.byte	164                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	292                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2846:0xa DW_TAG_member
	.byte	165                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	294                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2850:0xa DW_TAG_member
	.byte	166                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	295                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x285a:0xa DW_TAG_member
	.byte	167                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	296                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2864:0xa DW_TAG_member
	.byte	168                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	297                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x286e:0xa DW_TAG_member
	.byte	169                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	299                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2878:0xa DW_TAG_member
	.byte	170                             # DW_AT_name
	.long	10877                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	300                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2882:0xa DW_TAG_member
	.byte	171                             # DW_AT_name
	.long	10877                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	301                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x288c:0xa DW_TAG_member
	.byte	172                             # DW_AT_name
	.long	10877                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	302                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2896:0xa DW_TAG_member
	.byte	173                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	303                             # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x28a0:0xa DW_TAG_member
	.byte	174                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	304                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x28aa:0xa DW_TAG_member
	.byte	175                             # DW_AT_name
	.long	10877                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	305                             # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x28b4:0xa DW_TAG_member
	.byte	176                             # DW_AT_name
	.long	10877                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	306                             # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x28be:0xa DW_TAG_member
	.byte	177                             # DW_AT_name
	.long	10877                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	307                             # DW_AT_decl_line
	.byte	52                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x28c8:0xa DW_TAG_member
	.byte	178                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	309                             # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x28d2:0xa DW_TAG_member
	.byte	179                             # DW_AT_name
	.long	10877                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	310                             # DW_AT_decl_line
	.byte	60                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x28dc:0xa DW_TAG_member
	.byte	180                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	311                             # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x28e6:0xa DW_TAG_member
	.byte	181                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	312                             # DW_AT_decl_line
	.byte	68                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x28f0:0xa DW_TAG_member
	.byte	182                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	315                             # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x28fa:0xa DW_TAG_member
	.byte	183                             # DW_AT_name
	.long	10769                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	316                             # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2904:0xa DW_TAG_member
	.byte	184                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	317                             # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x290e:0xa DW_TAG_member
	.byte	185                             # DW_AT_name
	.long	10769                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	318                             # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2918:0xa DW_TAG_member
	.byte	186                             # DW_AT_name
	.long	10877                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	321                             # DW_AT_decl_line
	.byte	104                             # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2922:0xa DW_TAG_member
	.byte	187                             # DW_AT_name
	.long	10877                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	322                             # DW_AT_decl_line
	.byte	108                             # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x292c:0xa DW_TAG_member
	.byte	188                             # DW_AT_name
	.long	10877                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	323                             # DW_AT_decl_line
	.byte	112                             # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2936:0xa DW_TAG_member
	.byte	189                             # DW_AT_name
	.long	10893                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	324                             # DW_AT_decl_line
	.byte	120                             # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2940:0xa DW_TAG_member
	.byte	196                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	325                             # DW_AT_decl_line
	.byte	128                             # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x294a:0xa DW_TAG_member
	.byte	197                             # DW_AT_name
	.long	10769                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	326                             # DW_AT_decl_line
	.byte	136                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	66                              # Abbrev [66] 0x2955:0xb DW_TAG_member
	.byte	198                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	330                             # DW_AT_decl_line
	.short	632                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x2960:0xb DW_TAG_member
	.byte	199                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	331                             # DW_AT_decl_line
	.short	636                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x296b:0xb DW_TAG_member
	.byte	200                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	332                             # DW_AT_decl_line
	.short	640                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x2976:0xb DW_TAG_member
	.byte	201                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	334                             # DW_AT_decl_line
	.short	644                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x2981:0xb DW_TAG_member
	.byte	202                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	335                             # DW_AT_decl_line
	.short	648                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x298c:0xb DW_TAG_member
	.byte	203                             # DW_AT_name
	.long	4657                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	336                             # DW_AT_decl_line
	.short	652                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x2997:0xb DW_TAG_member
	.byte	204                             # DW_AT_name
	.long	4657                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	337                             # DW_AT_decl_line
	.short	656                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x29a2:0xb DW_TAG_member
	.byte	205                             # DW_AT_name
	.long	4657                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	338                             # DW_AT_decl_line
	.short	660                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x29ad:0xb DW_TAG_member
	.byte	206                             # DW_AT_name
	.long	4657                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	339                             # DW_AT_decl_line
	.short	664                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x29b8:0xb DW_TAG_member
	.byte	207                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	340                             # DW_AT_decl_line
	.short	668                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x29c3:0xb DW_TAG_member
	.byte	208                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	344                             # DW_AT_decl_line
	.short	672                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x29ce:0xb DW_TAG_member
	.byte	209                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	356                             # DW_AT_decl_line
	.short	676                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x29d9:0xb DW_TAG_member
	.byte	210                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	364                             # DW_AT_decl_line
	.short	680                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x29e4:0xb DW_TAG_member
	.byte	211                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	367                             # DW_AT_decl_line
	.short	684                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x29ef:0xb DW_TAG_member
	.byte	212                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	368                             # DW_AT_decl_line
	.short	688                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x29fa:0xb DW_TAG_member
	.byte	213                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	369                             # DW_AT_decl_line
	.short	692                             # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x2a05:0xb DW_TAG_member
	.byte	214                             # DW_AT_name
	.long	10970                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	375                             # DW_AT_decl_line
	.short	696                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x2a11:0x5 DW_TAG_pointer_type
	.long	10774                           # DW_AT_type
	.byte	36                              # Abbrev [36] 0x2a16:0x4 DW_TAG_base_type
	.byte	120                             # DW_AT_name
	.byte	6                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	32                              # Abbrev [32] 0x2a1a:0xc DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x2a1f:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x2a26:0xc DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x2a2b:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	64                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x2a32:0x5 DW_TAG_pointer_type
	.long	10807                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x2a37:0x16 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x2a38:0x5 DW_TAG_formal_parameter
	.long	10829                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x2a3d:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x2a42:0x5 DW_TAG_formal_parameter
	.long	10830                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x2a47:0x5 DW_TAG_formal_parameter
	.long	10840                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x2a4d:0x1 DW_TAG_pointer_type
	.byte	50                              # Abbrev [50] 0x2a4e:0x5 DW_TAG_pointer_type
	.long	10835                           # DW_AT_type
	.byte	34                              # Abbrev [34] 0x2a53:0x5 DW_TAG_const_type
	.long	10774                           # DW_AT_type
	.byte	50                              # Abbrev [50] 0x2a58:0x5 DW_TAG_pointer_type
	.long	10845                           # DW_AT_type
	.byte	80                              # Abbrev [80] 0x2a5d:0x20 DW_TAG_structure_type
	.byte	132                             # DW_AT_name
	.byte	24                              # DW_AT_byte_size
	.byte	81                              # Abbrev [81] 0x2a60:0x7 DW_TAG_member
	.byte	128                             # DW_AT_name
	.long	4608                            # DW_AT_type
	.byte	0                               # DW_AT_data_member_location
	.byte	81                              # Abbrev [81] 0x2a67:0x7 DW_TAG_member
	.byte	129                             # DW_AT_name
	.long	4608                            # DW_AT_type
	.byte	4                               # DW_AT_data_member_location
	.byte	81                              # Abbrev [81] 0x2a6e:0x7 DW_TAG_member
	.byte	130                             # DW_AT_name
	.long	10829                           # DW_AT_type
	.byte	8                               # DW_AT_data_member_location
	.byte	81                              # Abbrev [81] 0x2a75:0x7 DW_TAG_member
	.byte	131                             # DW_AT_name
	.long	10829                           # DW_AT_type
	.byte	16                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	36                              # Abbrev [36] 0x2a7d:0x4 DW_TAG_base_type
	.byte	157                             # DW_AT_name
	.byte	4                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	32                              # Abbrev [32] 0x2a81:0xc DW_TAG_array_type
	.long	2654                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x2a86:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x2a8d:0x5 DW_TAG_pointer_type
	.long	10898                           # DW_AT_type
	.byte	35                              # Abbrev [35] 0x2a92:0x8 DW_TAG_typedef
	.long	10906                           # DW_AT_type
	.byte	195                             # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.byte	174                             # DW_AT_decl_line
	.byte	40                              # Abbrev [40] 0x2a9a:0x3b DW_TAG_structure_type
	.byte	32                              # DW_AT_byte_size
	.byte	10                              # DW_AT_decl_file
	.byte	167                             # DW_AT_decl_line
	.byte	41                              # Abbrev [41] 0x2a9e:0x9 DW_TAG_member
	.byte	190                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	169                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2aa7:0x9 DW_TAG_member
	.byte	191                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	169                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2ab0:0x9 DW_TAG_member
	.byte	192                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	170                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2ab9:0x9 DW_TAG_member
	.byte	193                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	171                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2ac2:0x9 DW_TAG_member
	.byte	194                             # DW_AT_name
	.long	10877                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	172                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2acb:0x9 DW_TAG_member
	.byte	80                              # DW_AT_name
	.long	10965                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	173                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x2ad5:0x5 DW_TAG_pointer_type
	.long	9560                            # DW_AT_type
	.byte	50                              # Abbrev [50] 0x2ada:0x5 DW_TAG_pointer_type
	.long	10975                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x2adf:0x7 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x2ae0:0x5 DW_TAG_formal_parameter
	.long	10829                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x2ae6:0xc DW_TAG_array_type
	.long	6458                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x2aeb:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	129                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x2af2:0x5 DW_TAG_pointer_type
	.long	10999                           # DW_AT_type
	.byte	74                              # Abbrev [74] 0x2af7:0x9 DW_TAG_typedef
	.long	11008                           # DW_AT_type
	.byte	230                             # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.short	604                             # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x2b00:0x2e DW_TAG_structure_type
	.byte	24                              # DW_AT_byte_size
	.byte	10                              # DW_AT_decl_file
	.short	593                             # DW_AT_decl_line
	.byte	65                              # Abbrev [65] 0x2b05:0xa DW_TAG_member
	.byte	226                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	595                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2b0f:0xa DW_TAG_member
	.byte	227                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	596                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2b19:0xa DW_TAG_member
	.byte	228                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	599                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x2b23:0xa DW_TAG_member
	.byte	229                             # DW_AT_name
	.long	11054                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	603                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x2b2e:0x5 DW_TAG_pointer_type
	.long	2545                            # DW_AT_type
	.byte	35                              # Abbrev [35] 0x2b33:0x8 DW_TAG_typedef
	.long	11067                           # DW_AT_type
	.byte	241                             # DW_AT_name
	.byte	11                              # DW_AT_decl_file
	.byte	56                              # DW_AT_decl_line
	.byte	82                              # Abbrev [82] 0x2b3b:0x3c DW_TAG_structure_type
	.byte	240                             # DW_AT_name
	.byte	40                              # DW_AT_byte_size
	.byte	11                              # DW_AT_decl_file
	.byte	47                              # DW_AT_decl_line
	.byte	41                              # Abbrev [41] 0x2b40:0x9 DW_TAG_member
	.byte	234                             # DW_AT_name
	.long	11054                           # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	49                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2b49:0x9 DW_TAG_member
	.byte	235                             # DW_AT_name
	.long	11054                           # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	50                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2b52:0x9 DW_TAG_member
	.byte	236                             # DW_AT_name
	.long	11054                           # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	51                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2b5b:0x9 DW_TAG_member
	.byte	237                             # DW_AT_name
	.long	5121                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	53                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2b64:0x9 DW_TAG_member
	.byte	238                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	54                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2b6d:0x9 DW_TAG_member
	.byte	239                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	55                              # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x2b77:0xc DW_TAG_array_type
	.long	11139                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x2b7c:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	1                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0x2b83:0x9 DW_TAG_typedef
	.long	11148                           # DW_AT_type
	.short	321                             # DW_AT_name
	.byte	12                              # DW_AT_decl_file
	.byte	154                             # DW_AT_decl_line
	.byte	83                              # Abbrev [83] 0x2b8c:0x2f1 DW_TAG_structure_type
	.short	1300                            # DW_AT_byte_size
	.byte	12                              # DW_AT_decl_file
	.byte	52                              # DW_AT_decl_line
	.byte	84                              # Abbrev [84] 0x2b91:0xa DW_TAG_member
	.short	258                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	54                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2b9b:0xa DW_TAG_member
	.short	259                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	56                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2ba5:0x9 DW_TAG_member
	.byte	89                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	57                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2bae:0xa DW_TAG_member
	.short	260                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	59                              # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2bb8:0xa DW_TAG_member
	.short	261                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	60                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2bc2:0xa DW_TAG_member
	.short	262                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2bcc:0xa DW_TAG_member
	.short	263                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2bd6:0xa DW_TAG_member
	.short	264                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2be0:0xa DW_TAG_member
	.short	265                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2bea:0xa DW_TAG_member
	.short	266                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	69                              # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2bf4:0xa DW_TAG_member
	.short	267                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	70                              # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2bfe:0xa DW_TAG_member
	.short	268                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	71                              # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2c08:0xa DW_TAG_member
	.short	269                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	72                              # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2c12:0xa DW_TAG_member
	.short	270                             # DW_AT_name
	.long	11901                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	73                              # DW_AT_decl_line
	.byte	52                              # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x2c1c:0xb DW_TAG_member
	.short	271                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	75                              # DW_AT_decl_line
	.short	1076                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x2c27:0xb DW_TAG_member
	.short	272                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	76                              # DW_AT_decl_line
	.short	1080                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x2c32:0xb DW_TAG_member
	.short	273                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	77                              # DW_AT_decl_line
	.short	1084                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x2c3d:0xb DW_TAG_member
	.short	274                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	78                              # DW_AT_decl_line
	.short	1088                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x2c48:0xb DW_TAG_member
	.short	275                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	79                              # DW_AT_decl_line
	.short	1092                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x2c53:0xb DW_TAG_member
	.short	276                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	80                              # DW_AT_decl_line
	.short	1096                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x2c5e:0xb DW_TAG_member
	.short	277                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	81                              # DW_AT_decl_line
	.short	1100                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x2c69:0xb DW_TAG_member
	.short	278                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	83                              # DW_AT_decl_line
	.short	1104                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x2c74:0xb DW_TAG_member
	.short	279                             # DW_AT_name
	.long	11391                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	90                              # DW_AT_decl_line
	.short	1108                            # DW_AT_data_member_location
	.byte	40                              # Abbrev [40] 0x2c7f:0x2c DW_TAG_structure_type
	.byte	16                              # DW_AT_byte_size
	.byte	12                              # DW_AT_decl_file
	.byte	84                              # DW_AT_decl_line
	.byte	41                              # Abbrev [41] 0x2c83:0x9 DW_TAG_member
	.byte	238                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	86                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2c8c:0xa DW_TAG_member
	.short	280                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	87                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2c96:0xa DW_TAG_member
	.short	281                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	88                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2ca0:0xa DW_TAG_member
	.short	282                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	85                              # Abbrev [85] 0x2cab:0xb DW_TAG_member
	.short	283                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
	.short	1124                            # DW_AT_data_member_location
	.byte	76                              # Abbrev [76] 0x2cb6:0xa DW_TAG_member
	.byte	92                              # DW_AT_name
	.long	11456                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	150                             # DW_AT_decl_line
	.short	1128                            # DW_AT_data_member_location
	.byte	40                              # Abbrev [40] 0x2cc0:0x1b1 DW_TAG_structure_type
	.byte	168                             # DW_AT_byte_size
	.byte	12                              # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.byte	84                              # Abbrev [84] 0x2cc4:0xa DW_TAG_member
	.short	284                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	95                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2cce:0x9 DW_TAG_member
	.byte	94                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	96                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2cd7:0x9 DW_TAG_member
	.byte	93                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2ce0:0xa DW_TAG_member
	.short	285                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2cea:0xa DW_TAG_member
	.short	286                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	100                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2cf4:0xa DW_TAG_member
	.short	287                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	102                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2cfe:0x9 DW_TAG_member
	.byte	96                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	103                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2d07:0x9 DW_TAG_member
	.byte	97                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	104                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2d10:0xa DW_TAG_member
	.short	288                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	105                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2d1a:0x9 DW_TAG_member
	.byte	98                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	106                             # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2d23:0x9 DW_TAG_member
	.byte	99                              # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	107                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2d2c:0x9 DW_TAG_member
	.byte	100                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	108                             # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2d35:0xa DW_TAG_member
	.short	289                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	110                             # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2d3f:0xa DW_TAG_member
	.short	290                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	111                             # DW_AT_decl_line
	.byte	52                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2d49:0xa DW_TAG_member
	.short	291                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	112                             # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2d53:0xa DW_TAG_member
	.short	292                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	114                             # DW_AT_decl_line
	.byte	60                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2d5d:0xa DW_TAG_member
	.short	293                             # DW_AT_name
	.long	4657                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	115                             # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2d67:0xa DW_TAG_member
	.short	294                             # DW_AT_name
	.long	4657                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	116                             # DW_AT_decl_line
	.byte	68                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2d71:0xa DW_TAG_member
	.short	295                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	117                             # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2d7b:0xa DW_TAG_member
	.short	296                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	119                             # DW_AT_decl_line
	.byte	76                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2d85:0xa DW_TAG_member
	.short	297                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	120                             # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2d8f:0xa DW_TAG_member
	.short	298                             # DW_AT_name
	.long	11673                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	137                             # DW_AT_decl_line
	.byte	84                              # DW_AT_data_member_location
	.byte	40                              # Abbrev [40] 0x2d99:0x7d DW_TAG_structure_type
	.byte	48                              # DW_AT_byte_size
	.byte	12                              # DW_AT_decl_file
	.byte	122                             # DW_AT_decl_line
	.byte	84                              # Abbrev [84] 0x2d9d:0xa DW_TAG_member
	.short	299                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	124                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2da7:0xa DW_TAG_member
	.short	300                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	125                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2db1:0xa DW_TAG_member
	.short	301                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	126                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2dbb:0xa DW_TAG_member
	.short	302                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	127                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2dc5:0xa DW_TAG_member
	.short	303                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	128                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2dcf:0xa DW_TAG_member
	.short	304                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	129                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2dd9:0xa DW_TAG_member
	.short	305                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	130                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2de3:0xa DW_TAG_member
	.short	306                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	131                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2ded:0xa DW_TAG_member
	.short	307                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	133                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2df7:0xa DW_TAG_member
	.short	308                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	134                             # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2e01:0xa DW_TAG_member
	.short	309                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	135                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2e0b:0xa DW_TAG_member
	.short	310                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	136                             # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	84                              # Abbrev [84] 0x2e16:0xa DW_TAG_member
	.short	311                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	139                             # DW_AT_decl_line
	.byte	132                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2e20:0xa DW_TAG_member
	.short	312                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	140                             # DW_AT_decl_line
	.byte	136                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2e2a:0xa DW_TAG_member
	.short	313                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	141                             # DW_AT_decl_line
	.byte	140                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2e34:0xa DW_TAG_member
	.short	314                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	142                             # DW_AT_decl_line
	.byte	144                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2e3e:0xa DW_TAG_member
	.short	315                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	143                             # DW_AT_decl_line
	.byte	148                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2e48:0xa DW_TAG_member
	.short	316                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	144                             # DW_AT_decl_line
	.byte	152                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2e52:0xa DW_TAG_member
	.short	317                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	145                             # DW_AT_decl_line
	.byte	156                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2e5c:0xa DW_TAG_member
	.short	318                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	146                             # DW_AT_decl_line
	.byte	160                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2e66:0xa DW_TAG_member
	.short	319                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	147                             # DW_AT_decl_line
	.byte	164                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	85                              # Abbrev [85] 0x2e71:0xb DW_TAG_member
	.short	320                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	152                             # DW_AT_decl_line
	.short	1296                            # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x2e7d:0xd DW_TAG_array_type
	.long	2654                            # DW_AT_type
	.byte	86                              # Abbrev [86] 0x2e82:0x7 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.short	256                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x2e8a:0x5 DW_TAG_pointer_type
	.long	11139                           # DW_AT_type
	.byte	32                              # Abbrev [32] 0x2e8f:0xc DW_TAG_array_type
	.long	11931                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x2e94:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	1                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0x2e9b:0x9 DW_TAG_typedef
	.long	11940                           # DW_AT_type
	.short	337                             # DW_AT_name
	.byte	12                              # DW_AT_decl_file
	.byte	186                             # DW_AT_decl_line
	.byte	40                              # Abbrev [40] 0x2ea4:0xb5 DW_TAG_structure_type
	.byte	120                             # DW_AT_byte_size
	.byte	12                              # DW_AT_decl_file
	.byte	156                             # DW_AT_decl_line
	.byte	84                              # Abbrev [84] 0x2ea8:0xa DW_TAG_member
	.short	258                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	158                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2eb2:0x9 DW_TAG_member
	.byte	201                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	159                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2ebb:0x9 DW_TAG_member
	.byte	114                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	161                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2ec4:0xa DW_TAG_member
	.short	324                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	163                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2ece:0xa DW_TAG_member
	.short	325                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	164                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2ed8:0xa DW_TAG_member
	.short	326                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	166                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2ee2:0xa DW_TAG_member
	.short	327                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	167                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2eec:0xa DW_TAG_member
	.short	328                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	169                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2ef6:0x9 DW_TAG_member
	.byte	142                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	170                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2eff:0xa DW_TAG_member
	.short	329                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	172                             # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2f09:0xa DW_TAG_member
	.short	330                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	173                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2f13:0xa DW_TAG_member
	.short	331                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	175                             # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2f1d:0xa DW_TAG_member
	.short	332                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	177                             # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2f27:0xa DW_TAG_member
	.short	333                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	178                             # DW_AT_decl_line
	.byte	52                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2f31:0xa DW_TAG_member
	.short	334                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	179                             # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2f3b:0xa DW_TAG_member
	.short	335                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	181                             # DW_AT_decl_line
	.byte	60                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x2f45:0x9 DW_TAG_member
	.byte	118                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	183                             # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x2f4e:0xa DW_TAG_member
	.short	336                             # DW_AT_name
	.long	12121                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	184                             # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x2f59:0xc DW_TAG_array_type
	.long	12133                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x2f5e:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	6                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x2f65:0x5 DW_TAG_pointer_type
	.long	2540                            # DW_AT_type
	.byte	50                              # Abbrev [50] 0x2f6a:0x5 DW_TAG_pointer_type
	.long	11931                           # DW_AT_type
	.byte	32                              # Abbrev [32] 0x2f6f:0xc DW_TAG_array_type
	.long	12155                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x2f74:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x2f7b:0x5 DW_TAG_pointer_type
	.long	12160                           # DW_AT_type
	.byte	32                              # Abbrev [32] 0x2f80:0xc DW_TAG_array_type
	.long	2654                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x2f85:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x2f8c:0xc DW_TAG_array_type
	.long	12184                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x2f91:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x2f98:0x5 DW_TAG_pointer_type
	.long	12189                           # DW_AT_type
	.byte	32                              # Abbrev [32] 0x2f9d:0xc DW_TAG_array_type
	.long	2654                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x2fa2:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	64                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x2fa9:0xc DW_TAG_array_type
	.long	12213                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x2fae:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x2fb5:0x5 DW_TAG_pointer_type
	.long	12218                           # DW_AT_type
	.byte	32                              # Abbrev [32] 0x2fba:0xc DW_TAG_array_type
	.long	4515                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x2fbf:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x2fc6:0xc DW_TAG_array_type
	.long	12242                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x2fcb:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x2fd2:0x5 DW_TAG_pointer_type
	.long	12247                           # DW_AT_type
	.byte	32                              # Abbrev [32] 0x2fd7:0xc DW_TAG_array_type
	.long	4515                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x2fdc:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	64                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x2fe3:0xc DW_TAG_array_type
	.long	12271                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x2fe8:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	92                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x2fef:0x5 DW_TAG_pointer_type
	.long	4515                            # DW_AT_type
	.byte	32                              # Abbrev [32] 0x2ff4:0x12 DW_TAG_array_type
	.long	12271                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x2ff9:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	92                              # DW_AT_count
	.byte	33                              # Abbrev [33] 0x2fff:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	87                              # Abbrev [87] 0x3006:0xa DW_TAG_typedef
	.long	12304                           # DW_AT_type
	.short	393                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.short	364                             # DW_AT_decl_line
	.byte	69                              # Abbrev [69] 0x3010:0x1be DW_TAG_structure_type
	.short	6672                            # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	302                             # DW_AT_decl_line
	.byte	70                              # Abbrev [70] 0x3016:0xb DW_TAG_member
	.short	322                             # DW_AT_name
	.long	11914                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	304                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3021:0xb DW_TAG_member
	.short	338                             # DW_AT_name
	.long	12138                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	305                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x302c:0xa DW_TAG_member
	.byte	227                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	307                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3036:0xb DW_TAG_member
	.short	353                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	308                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3041:0xb DW_TAG_member
	.short	354                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	309                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x304c:0xb DW_TAG_member
	.short	355                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	311                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x3057:0xa DW_TAG_member
	.byte	245                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	313                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3061:0xb DW_TAG_member
	.short	356                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	315                             # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x306c:0xb DW_TAG_member
	.short	357                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	316                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3077:0xb DW_TAG_member
	.short	358                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	317                             # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3082:0xb DW_TAG_member
	.short	339                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	319                             # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x308d:0xb DW_TAG_member
	.short	359                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	321                             # DW_AT_decl_line
	.byte	52                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3098:0xb DW_TAG_member
	.short	360                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	322                             # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x30a3:0xb DW_TAG_member
	.short	361                             # DW_AT_name
	.long	10881                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	324                             # DW_AT_decl_line
	.byte	60                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x30ae:0xb DW_TAG_member
	.short	362                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	325                             # DW_AT_decl_line
	.byte	68                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x30b9:0xb DW_TAG_member
	.short	363                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	327                             # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x30c4:0xb DW_TAG_member
	.short	364                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	329                             # DW_AT_decl_line
	.byte	76                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x30cf:0xb DW_TAG_member
	.short	365                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	330                             # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x30da:0xb DW_TAG_member
	.short	366                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	331                             # DW_AT_decl_line
	.byte	84                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x30e5:0xb DW_TAG_member
	.short	367                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	333                             # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x30f0:0xb DW_TAG_member
	.short	368                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	334                             # DW_AT_decl_line
	.byte	92                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x30fb:0xb DW_TAG_member
	.short	369                             # DW_AT_name
	.long	12750                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	339                             # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3106:0x1c DW_TAG_structure_type
	.byte	8                               # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	335                             # DW_AT_decl_line
	.byte	70                              # Abbrev [70] 0x310b:0xb DW_TAG_member
	.short	370                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	337                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3116:0xb DW_TAG_member
	.short	371                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	338                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	72                              # Abbrev [72] 0x3122:0xd DW_TAG_member
	.short	372                             # DW_AT_name
	.long	12768                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	342                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	352                             # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x312f:0xc DW_TAG_member
	.short	383                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	344                             # DW_AT_decl_line
	.short	6496                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x313b:0xc DW_TAG_member
	.short	384                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	345                             # DW_AT_decl_line
	.short	6500                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x3147:0xc DW_TAG_member
	.short	385                             # DW_AT_name
	.long	12955                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	350                             # DW_AT_decl_line
	.short	6504                            # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3153:0x1c DW_TAG_structure_type
	.byte	8                               # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	346                             # DW_AT_decl_line
	.byte	70                              # Abbrev [70] 0x3158:0xb DW_TAG_member
	.short	386                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	348                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3163:0xb DW_TAG_member
	.short	359                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	349                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	66                              # Abbrev [66] 0x316f:0xb DW_TAG_member
	.byte	115                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	352                             # DW_AT_decl_line
	.short	6632                            # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x317a:0xb DW_TAG_member
	.byte	193                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	354                             # DW_AT_decl_line
	.short	6636                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x3185:0xc DW_TAG_member
	.short	387                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	355                             # DW_AT_decl_line
	.short	6640                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x3191:0xc DW_TAG_member
	.short	388                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	356                             # DW_AT_decl_line
	.short	6644                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x319d:0xc DW_TAG_member
	.short	389                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	357                             # DW_AT_decl_line
	.short	6648                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x31a9:0xc DW_TAG_member
	.short	390                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	360                             # DW_AT_decl_line
	.short	6652                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x31b5:0xc DW_TAG_member
	.short	391                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	361                             # DW_AT_decl_line
	.short	6656                            # DW_AT_data_member_location
	.byte	68                              # Abbrev [68] 0x31c1:0xc DW_TAG_member
	.short	392                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	362                             # DW_AT_decl_line
	.short	6660                            # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x31ce:0x12 DW_TAG_array_type
	.long	12550                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x31d3:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x31d9:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x31e0:0x12 DW_TAG_array_type
	.long	12786                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x31e5:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	33                              # Abbrev [33] 0x31eb:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	88                              # Abbrev [88] 0x31f2:0xa DW_TAG_typedef
	.long	12796                           # DW_AT_type
	.short	382                             # DW_AT_name
	.byte	16                              # DW_AT_alignment
	.byte	13                              # DW_AT_decl_file
	.byte	36                              # DW_AT_decl_line
	.byte	89                              # Abbrev [89] 0x31fc:0x44 DW_TAG_structure_type
	.short	382                             # DW_AT_name
	.byte	64                              # DW_AT_byte_size
	.byte	13                              # DW_AT_decl_file
	.byte	26                              # DW_AT_decl_line
	.byte	90                              # Abbrev [90] 0x3202:0xb DW_TAG_member
	.short	373                             # DW_AT_name
	.long	12864                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	30                              # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.byte	0                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x320d:0xa DW_TAG_member
	.short	374                             # DW_AT_name
	.long	12864                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	31                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3217:0xa DW_TAG_member
	.short	375                             # DW_AT_name
	.long	12876                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	32                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3221:0xa DW_TAG_member
	.short	378                             # DW_AT_name
	.long	12876                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	33                              # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x322b:0xa DW_TAG_member
	.short	379                             # DW_AT_name
	.long	12876                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	34                              # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3235:0xa DW_TAG_member
	.short	380                             # DW_AT_name
	.long	12894                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	35                              # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3240:0xc DW_TAG_array_type
	.long	4745                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3245:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	8                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0x324c:0x9 DW_TAG_typedef
	.long	12885                           # DW_AT_type
	.short	377                             # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.byte	26                              # DW_AT_decl_line
	.byte	63                              # Abbrev [63] 0x3255:0x9 DW_TAG_typedef
	.long	2654                            # DW_AT_type
	.short	376                             # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	41                              # DW_AT_decl_line
	.byte	50                              # Abbrev [50] 0x325e:0x5 DW_TAG_pointer_type
	.long	12899                           # DW_AT_type
	.byte	63                              # Abbrev [63] 0x3263:0x9 DW_TAG_typedef
	.long	12908                           # DW_AT_type
	.short	381                             # DW_AT_name
	.byte	13                              # DW_AT_decl_file
	.byte	25                              # DW_AT_decl_line
	.byte	50                              # Abbrev [50] 0x326c:0x5 DW_TAG_pointer_type
	.long	12913                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x3271:0x20 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x3272:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3277:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x327c:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3281:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3286:0x5 DW_TAG_formal_parameter
	.long	12945                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x328b:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3291:0x5 DW_TAG_pointer_type
	.long	12950                           # DW_AT_type
	.byte	34                              # Abbrev [34] 0x3296:0x5 DW_TAG_const_type
	.long	12796                           # DW_AT_type
	.byte	32                              # Abbrev [32] 0x329b:0xc DW_TAG_array_type
	.long	12627                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x32a0:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0x32a7:0x9 DW_TAG_typedef
	.long	12976                           # DW_AT_type
	.short	401                             # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	46                              # DW_AT_decl_line
	.byte	83                              # Abbrev [83] 0x32b0:0x5e DW_TAG_structure_type
	.short	512                             # DW_AT_byte_size
	.byte	14                              # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
	.byte	84                              # Abbrev [84] 0x32b5:0xa DW_TAG_member
	.short	395                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	30                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x32bf:0xa DW_TAG_member
	.short	396                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	31                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x32c9:0xa DW_TAG_member
	.short	397                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	34                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x32d3:0xa DW_TAG_member
	.short	398                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	35                              # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x32dd:0x9 DW_TAG_member
	.byte	234                             # DW_AT_name
	.long	11054                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	37                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x32e6:0x9 DW_TAG_member
	.byte	235                             # DW_AT_name
	.long	11054                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	38                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x32ef:0x9 DW_TAG_member
	.byte	236                             # DW_AT_name
	.long	11054                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	39                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	90                              # Abbrev [90] 0x32f8:0xb DW_TAG_member
	.short	399                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	42                              # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.byte	48                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3303:0xa DW_TAG_member
	.short	400                             # DW_AT_name
	.long	13070                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	45                              # DW_AT_decl_line
	.byte	52                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x330e:0xd DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	86                              # Abbrev [86] 0x3313:0x7 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.short	460                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x331b:0x5 DW_TAG_pointer_type
	.long	13088                           # DW_AT_type
	.byte	50                              # Abbrev [50] 0x3320:0x5 DW_TAG_pointer_type
	.long	13093                           # DW_AT_type
	.byte	63                              # Abbrev [63] 0x3325:0x9 DW_TAG_typedef
	.long	13102                           # DW_AT_type
	.short	486                             # DW_AT_name
	.byte	15                              # DW_AT_decl_file
	.byte	146                             # DW_AT_decl_line
	.byte	91                              # Abbrev [91] 0x332e:0x379 DW_TAG_structure_type
	.short	485                             # DW_AT_name
	.short	15632                           # DW_AT_byte_size
	.byte	15                              # DW_AT_decl_file
	.byte	31                              # DW_AT_decl_line
	.byte	84                              # Abbrev [84] 0x3335:0xa DW_TAG_member
	.short	359                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	34                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x333f:0x9 DW_TAG_member
	.byte	227                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	35                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3348:0xa DW_TAG_member
	.short	404                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	36                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3352:0xa DW_TAG_member
	.short	405                             # DW_AT_name
	.long	13991                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	37                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x335c:0xa DW_TAG_member
	.short	408                             # DW_AT_name
	.long	13991                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	38                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3366:0xa DW_TAG_member
	.short	409                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	39                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3370:0xa DW_TAG_member
	.short	410                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	40                              # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x337a:0x9 DW_TAG_member
	.byte	253                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	41                              # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3383:0xa DW_TAG_member
	.short	411                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	42                              # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x338d:0x9 DW_TAG_member
	.byte	80                              # DW_AT_name
	.long	14009                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	43                              # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x3396:0x9 DW_TAG_member
	.byte	244                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	45                              # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x339f:0xa DW_TAG_member
	.short	412                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	46                              # DW_AT_decl_line
	.byte	60                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x33a9:0xa DW_TAG_member
	.short	413                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	47                              # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x33b3:0x9 DW_TAG_member
	.byte	245                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	48                              # DW_AT_decl_line
	.byte	68                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x33bc:0xa DW_TAG_member
	.short	414                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	49                              # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x33c6:0xa DW_TAG_member
	.short	415                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	50                              # DW_AT_decl_line
	.byte	76                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x33d0:0xa DW_TAG_member
	.short	416                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	51                              # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x33da:0xa DW_TAG_member
	.short	417                             # DW_AT_name
	.long	2545                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	52                              # DW_AT_decl_line
	.byte	84                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x33e4:0xa DW_TAG_member
	.short	418                             # DW_AT_name
	.long	2545                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	53                              # DW_AT_decl_line
	.byte	85                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x33ee:0xa DW_TAG_member
	.short	419                             # DW_AT_name
	.long	2545                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	54                              # DW_AT_decl_line
	.byte	86                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x33f8:0xa DW_TAG_member
	.short	420                             # DW_AT_name
	.long	10877                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	55                              # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3402:0xa DW_TAG_member
	.short	421                             # DW_AT_name
	.long	10877                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	56                              # DW_AT_decl_line
	.byte	92                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x340c:0xa DW_TAG_member
	.short	422                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	57                              # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3416:0xa DW_TAG_member
	.short	423                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	60                              # DW_AT_decl_line
	.byte	100                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3420:0xa DW_TAG_member
	.short	424                             # DW_AT_name
	.long	14014                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.byte	104                             # DW_AT_data_member_location
	.byte	41                              # Abbrev [41] 0x342a:0x9 DW_TAG_member
	.byte	86                              # DW_AT_name
	.long	14014                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	62                              # DW_AT_decl_line
	.byte	116                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3433:0xa DW_TAG_member
	.short	425                             # DW_AT_name
	.long	14014                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.byte	128                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x343d:0xa DW_TAG_member
	.short	426                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	64                              # DW_AT_decl_line
	.byte	140                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3447:0xa DW_TAG_member
	.short	427                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.byte	144                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3451:0xa DW_TAG_member
	.short	428                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	66                              # DW_AT_decl_line
	.byte	148                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x345b:0xa DW_TAG_member
	.short	429                             # DW_AT_name
	.long	14026                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.byte	152                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3465:0xa DW_TAG_member
	.short	430                             # DW_AT_name
	.long	14038                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	68                              # DW_AT_decl_line
	.byte	176                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x346f:0xa DW_TAG_member
	.short	431                             # DW_AT_name
	.long	14038                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	69                              # DW_AT_decl_line
	.byte	208                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3479:0xa DW_TAG_member
	.short	432                             # DW_AT_name
	.long	12271                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	70                              # DW_AT_decl_line
	.byte	240                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3483:0xa DW_TAG_member
	.short	433                             # DW_AT_name
	.long	14038                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	74                              # DW_AT_decl_line
	.byte	248                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x348d:0xb DW_TAG_member
	.short	434                             # DW_AT_name
	.long	14038                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	75                              # DW_AT_decl_line
	.short	280                             # DW_AT_data_member_location
	.byte	92                              # Abbrev [92] 0x3498:0xc DW_TAG_member
	.short	372                             # DW_AT_name
	.long	14050                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	77                              # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	320                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x34a4:0xb DW_TAG_member
	.short	435                             # DW_AT_name
	.long	14068                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	78                              # DW_AT_decl_line
	.short	3392                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x34af:0xb DW_TAG_member
	.short	436                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	79                              # DW_AT_decl_line
	.short	3520                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x34ba:0xb DW_TAG_member
	.short	437                             # DW_AT_name
	.long	14080                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	80                              # DW_AT_decl_line
	.short	3528                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x34c5:0xb DW_TAG_member
	.short	438                             # DW_AT_name
	.long	14085                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	83                              # DW_AT_decl_line
	.short	3536                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x34d0:0xb DW_TAG_member
	.short	439                             # DW_AT_name
	.long	11054                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	84                              # DW_AT_decl_line
	.short	3544                            # DW_AT_data_member_location
	.byte	76                              # Abbrev [76] 0x34db:0xa DW_TAG_member
	.byte	49                              # DW_AT_name
	.long	14090                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	85                              # DW_AT_decl_line
	.short	3552                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x34e5:0xb DW_TAG_member
	.short	440                             # DW_AT_name
	.long	5073                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	86                              # DW_AT_decl_line
	.short	3568                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x34f0:0xb DW_TAG_member
	.short	441                             # DW_AT_name
	.long	14102                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	87                              # DW_AT_decl_line
	.short	3576                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x34fb:0xb DW_TAG_member
	.short	442                             # DW_AT_name
	.long	14120                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
	.short	3848                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3506:0xb DW_TAG_member
	.short	443                             # DW_AT_name
	.long	14138                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	96                              # DW_AT_decl_line
	.short	6440                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3511:0xb DW_TAG_member
	.short	444                             # DW_AT_name
	.long	14161                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.short	6712                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x351c:0xb DW_TAG_member
	.short	445                             # DW_AT_name
	.long	10881                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	98                              # DW_AT_decl_line
	.short	6728                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3527:0xb DW_TAG_member
	.short	446                             # DW_AT_name
	.long	14173                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.short	6736                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3532:0xb DW_TAG_member
	.short	447                             # DW_AT_name
	.long	4733                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	100                             # DW_AT_decl_line
	.short	6864                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x353d:0xb DW_TAG_member
	.short	448                             # DW_AT_name
	.long	14191                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	105                             # DW_AT_decl_line
	.short	6868                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3548:0xb DW_TAG_member
	.short	449                             # DW_AT_name
	.long	14191                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	106                             # DW_AT_decl_line
	.short	8164                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3553:0xb DW_TAG_member
	.short	450                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	107                             # DW_AT_decl_line
	.short	9460                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x355e:0xb DW_TAG_member
	.short	451                             # DW_AT_name
	.long	14209                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	108                             # DW_AT_decl_line
	.short	9464                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3569:0xb DW_TAG_member
	.short	452                             # DW_AT_name
	.long	14221                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	109                             # DW_AT_decl_line
	.short	9536                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3574:0xb DW_TAG_member
	.short	453                             # DW_AT_name
	.long	14156                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	110                             # DW_AT_decl_line
	.short	12128                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x357f:0xb DW_TAG_member
	.short	454                             # DW_AT_name
	.long	14156                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	111                             # DW_AT_decl_line
	.short	12136                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x358a:0xb DW_TAG_member
	.short	455                             # DW_AT_name
	.long	14239                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	112                             # DW_AT_decl_line
	.short	12144                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3595:0xb DW_TAG_member
	.short	456                             # DW_AT_name
	.long	14239                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	113                             # DW_AT_decl_line
	.short	12152                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x35a0:0xb DW_TAG_member
	.short	457                             # DW_AT_name
	.long	14239                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	114                             # DW_AT_decl_line
	.short	12160                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x35ab:0xb DW_TAG_member
	.short	458                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	115                             # DW_AT_decl_line
	.short	12168                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x35b6:0xb DW_TAG_member
	.short	459                             # DW_AT_name
	.long	12271                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	116                             # DW_AT_decl_line
	.short	12176                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x35c1:0xb DW_TAG_member
	.short	460                             # DW_AT_name
	.long	12271                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	117                             # DW_AT_decl_line
	.short	12184                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x35cc:0xb DW_TAG_member
	.short	461                             # DW_AT_name
	.long	12271                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	118                             # DW_AT_decl_line
	.short	12192                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x35d7:0xb DW_TAG_member
	.short	462                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	119                             # DW_AT_decl_line
	.short	12200                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x35e2:0xb DW_TAG_member
	.short	463                             # DW_AT_name
	.long	14244                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	120                             # DW_AT_decl_line
	.short	12204                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x35ed:0xb DW_TAG_member
	.short	464                             # DW_AT_name
	.long	4657                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	121                             # DW_AT_decl_line
	.short	12276                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x35f8:0xb DW_TAG_member
	.short	465                             # DW_AT_name
	.long	4819                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	122                             # DW_AT_decl_line
	.short	12280                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3603:0xb DW_TAG_member
	.short	466                             # DW_AT_name
	.long	14256                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	125                             # DW_AT_decl_line
	.short	12288                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x360e:0xb DW_TAG_member
	.short	473                             # DW_AT_name
	.long	14321                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	128                             # DW_AT_decl_line
	.short	12320                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3619:0xb DW_TAG_member
	.short	474                             # DW_AT_name
	.long	14333                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	129                             # DW_AT_decl_line
	.short	12572                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3624:0xb DW_TAG_member
	.short	475                             # DW_AT_name
	.long	14345                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	130                             # DW_AT_decl_line
	.short	13576                           # DW_AT_data_member_location
	.byte	76                              # Abbrev [76] 0x362f:0xa DW_TAG_member
	.byte	254                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	131                             # DW_AT_decl_line
	.short	15584                           # DW_AT_data_member_location
	.byte	76                              # Abbrev [76] 0x3639:0xa DW_TAG_member
	.byte	255                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	132                             # DW_AT_decl_line
	.short	15588                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3643:0xb DW_TAG_member
	.short	476                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	135                             # DW_AT_decl_line
	.short	15592                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x364e:0xb DW_TAG_member
	.short	477                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	136                             # DW_AT_decl_line
	.short	15596                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3659:0xb DW_TAG_member
	.short	478                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	137                             # DW_AT_decl_line
	.short	15600                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3664:0xb DW_TAG_member
	.short	479                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	138                             # DW_AT_decl_line
	.short	15604                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x366f:0xb DW_TAG_member
	.short	480                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	139                             # DW_AT_decl_line
	.short	15608                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x367a:0xb DW_TAG_member
	.short	481                             # DW_AT_name
	.long	10877                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	142                             # DW_AT_decl_line
	.short	15612                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3685:0xb DW_TAG_member
	.short	482                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	143                             # DW_AT_decl_line
	.short	15616                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3690:0xb DW_TAG_member
	.short	483                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	144                             # DW_AT_decl_line
	.short	15620                           # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x369b:0xb DW_TAG_member
	.short	484                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	145                             # DW_AT_decl_line
	.short	15624                           # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0x36a7:0x9 DW_TAG_typedef
	.long	14000                           # DW_AT_type
	.short	407                             # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
	.byte	63                              # Abbrev [63] 0x36b0:0x9 DW_TAG_typedef
	.long	5129                            # DW_AT_type
	.short	406                             # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	44                              # DW_AT_decl_line
	.byte	50                              # Abbrev [50] 0x36b9:0x5 DW_TAG_pointer_type
	.long	9551                            # DW_AT_type
	.byte	32                              # Abbrev [32] 0x36be:0xc DW_TAG_array_type
	.long	2654                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x36c3:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x36ca:0xc DW_TAG_array_type
	.long	11054                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x36cf:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x36d6:0xc DW_TAG_array_type
	.long	11054                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x36db:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x36e2:0x12 DW_TAG_array_type
	.long	12786                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x36e7:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	33                              # Abbrev [33] 0x36ed:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x36f4:0xc DW_TAG_array_type
	.long	11054                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x36f9:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3700:0x5 DW_TAG_pointer_type
	.long	13102                           # DW_AT_type
	.byte	50                              # Abbrev [50] 0x3705:0x5 DW_TAG_pointer_type
	.long	2610                            # DW_AT_type
	.byte	32                              # Abbrev [32] 0x370a:0xc DW_TAG_array_type
	.long	5073                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x370f:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3716:0x12 DW_TAG_array_type
	.long	5073                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x371b:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3721:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	17                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3728:0x12 DW_TAG_array_type
	.long	12271                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x372d:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3733:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x373a:0x12 DW_TAG_array_type
	.long	14156                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x373f:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3745:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	17                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x374c:0x5 DW_TAG_pointer_type
	.long	2654                            # DW_AT_type
	.byte	32                              # Abbrev [32] 0x3751:0xc DW_TAG_array_type
	.long	14085                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3756:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x375d:0x12 DW_TAG_array_type
	.long	2654                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3762:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3768:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x376f:0x12 DW_TAG_array_type
	.long	2654                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3774:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	33                              # Abbrev [33] 0x377a:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3781:0xc DW_TAG_array_type
	.long	2654                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3786:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x378d:0x12 DW_TAG_array_type
	.long	14156                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3792:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3798:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x379f:0x5 DW_TAG_pointer_type
	.long	10877                           # DW_AT_type
	.byte	32                              # Abbrev [32] 0x37a4:0xc DW_TAG_array_type
	.long	10877                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x37a9:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	87                              # Abbrev [87] 0x37b0:0xa DW_TAG_typedef
	.long	14266                           # DW_AT_type
	.short	472                             # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.short	503                             # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x37ba:0x32 DW_TAG_structure_type
	.byte	32                              # DW_AT_byte_size
	.byte	10                              # DW_AT_decl_file
	.short	496                             # DW_AT_decl_line
	.byte	70                              # Abbrev [70] 0x37bf:0xb DW_TAG_member
	.short	467                             # DW_AT_name
	.long	14316                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	498                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x37ca:0xb DW_TAG_member
	.short	469                             # DW_AT_name
	.long	14316                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	499                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x37d5:0xb DW_TAG_member
	.short	470                             # DW_AT_name
	.long	14316                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	500                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x37e0:0xb DW_TAG_member
	.short	471                             # DW_AT_name
	.long	14316                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.short	502                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	2                               # Abbrev [2] 0x37ec:0x5 DW_TAG_base_type
	.short	468                             # DW_AT_name
	.byte	4                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	32                              # Abbrev [32] 0x37f1:0xc DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x37f6:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	251                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x37fd:0xc DW_TAG_array_type
	.long	2654                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3802:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	251                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3809:0xc DW_TAG_array_type
	.long	14316                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x380e:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	251                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3815:0xc DW_TAG_array_type
	.long	13083                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x381a:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3821:0xc DW_TAG_array_type
	.long	13088                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3826:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x382d:0xc DW_TAG_array_type
	.long	13991                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3832:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3839:0xc DW_TAG_array_type
	.long	13088                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x383e:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	19                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3845:0xc DW_TAG_array_type
	.long	4745                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x384a:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3851:0x12 DW_TAG_array_type
	.long	4745                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3856:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x385c:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3863:0x12 DW_TAG_array_type
	.long	4745                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3868:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x386e:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	64                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3875:0x12 DW_TAG_array_type
	.long	4745                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x387a:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	24                              # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3880:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3887:0xc DW_TAG_array_type
	.long	4608                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x388c:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3893:0xc DW_TAG_array_type
	.long	4608                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3898:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x389f:0x5 DW_TAG_pointer_type
	.long	4745                            # DW_AT_type
	.byte	50                              # Abbrev [50] 0x38a4:0x5 DW_TAG_pointer_type
	.long	14505                           # DW_AT_type
	.byte	32                              # Abbrev [32] 0x38a9:0xc DW_TAG_array_type
	.long	2610                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x38ae:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	8                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x38b5:0x5 DW_TAG_pointer_type
	.long	14522                           # DW_AT_type
	.byte	32                              # Abbrev [32] 0x38ba:0xc DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x38bf:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	24                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x38c6:0xc DW_TAG_array_type
	.long	14546                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x38cb:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x38d2:0x5 DW_TAG_pointer_type
	.long	14551                           # DW_AT_type
	.byte	32                              # Abbrev [32] 0x38d7:0x12 DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x38dc:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	8                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x38e2:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x38e9:0x12 DW_TAG_array_type
	.long	5073                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x38ee:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x38f4:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x38fb:0xd DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	86                              # Abbrev [86] 0x3900:0x7 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.short	384                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3908:0xd DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	86                              # Abbrev [86] 0x390d:0x7 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.short	864                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3915:0xd DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	86                              # Abbrev [86] 0x391a:0x7 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.short	256                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3922:0x12 DW_TAG_array_type
	.long	4745                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3927:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x392d:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	64                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3934:0x12 DW_TAG_array_type
	.long	4745                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3939:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	15                              # DW_AT_count
	.byte	33                              # Abbrev [33] 0x393f:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3946:0xc DW_TAG_array_type
	.long	4657                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x394b:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3952:0x12 DW_TAG_array_type
	.long	4745                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3957:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	33                              # Abbrev [33] 0x395d:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3964:0xc DW_TAG_array_type
	.long	4819                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3969:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	9                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3970:0xc DW_TAG_array_type
	.long	4657                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3975:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x397c:0x18 DW_TAG_array_type
	.long	11054                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3981:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3987:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	33                              # Abbrev [33] 0x398d:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	6                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3994:0xc DW_TAG_array_type
	.long	11054                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3999:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x39a0:0x12 DW_TAG_array_type
	.long	12271                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x39a5:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x39ab:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x39b2:0xc DW_TAG_array_type
	.long	2610                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x39b7:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	40                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x39be:0xc DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x39c3:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	48                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x39ca:0x12 DW_TAG_array_type
	.long	2610                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x39cf:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x39d5:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	40                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x39dc:0x18 DW_TAG_array_type
	.long	4745                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x39e1:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x39e7:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	40                              # DW_AT_count
	.byte	33                              # Abbrev [33] 0x39ed:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x39f4:0x18 DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x39f9:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x39ff:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	40                              # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3a05:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3a0c:0x18 DW_TAG_array_type
	.long	4745                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3a11:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3a17:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3a1d:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3a24:0x12 DW_TAG_array_type
	.long	2610                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3a29:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3a2f:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3a36:0x12 DW_TAG_array_type
	.long	2654                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3a3b:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3a41:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3a48:0x18 DW_TAG_array_type
	.long	4745                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3a4d:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3a53:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3a59:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3a60:0x5 DW_TAG_pointer_type
	.long	14949                           # DW_AT_type
	.byte	32                              # Abbrev [32] 0x3a65:0xc DW_TAG_array_type
	.long	4745                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3a6a:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3a71:0x18 DW_TAG_array_type
	.long	2610                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3a76:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3a7c:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3a82:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3a89:0x5 DW_TAG_pointer_type
	.long	14990                           # DW_AT_type
	.byte	32                              # Abbrev [32] 0x3a8e:0xc DW_TAG_array_type
	.long	2610                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3a93:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3a9a:0xc DW_TAG_array_type
	.long	2610                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3a9f:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3aa6:0xc DW_TAG_array_type
	.long	2610                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3aab:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	34                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3ab2:0x5 DW_TAG_pointer_type
	.long	15031                           # DW_AT_type
	.byte	87                              # Abbrev [87] 0x3ab7:0xa DW_TAG_typedef
	.long	15041                           # DW_AT_type
	.short	625                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.short	379                             # DW_AT_decl_line
	.byte	93                              # Abbrev [93] 0x3ac1:0x3 DW_TAG_structure_type
	.short	625                             # DW_AT_name
                                        # DW_AT_declaration
	.byte	32                              # Abbrev [32] 0x3ac4:0xc DW_TAG_array_type
	.long	2654                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3ac9:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	19                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3ad0:0x12 DW_TAG_array_type
	.long	2654                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3ad5:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3adb:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3ae2:0xc DW_TAG_array_type
	.long	2654                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3ae7:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	17                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3aee:0xc DW_TAG_array_type
	.long	2654                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3af3:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	6                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3afa:0x12 DW_TAG_array_type
	.long	2654                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3aff:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3b05:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	13                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3b0c:0xc DW_TAG_array_type
	.long	13991                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3b11:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3b18:0xc DW_TAG_array_type
	.long	2654                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3b1d:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	5                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3b24:0xc DW_TAG_array_type
	.long	13991                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3b29:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	5                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3b30:0xc DW_TAG_array_type
	.long	14316                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3b35:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	5                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3b3c:0x12 DW_TAG_array_type
	.long	13991                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3b41:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	5                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3b47:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	19                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3b4e:0x12 DW_TAG_array_type
	.long	13991                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3b53:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3b59:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	17                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3b60:0x18 DW_TAG_array_type
	.long	13991                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3b65:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3b6b:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3b71:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3b78:0xc DW_TAG_array_type
	.long	13991                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3b7d:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	6                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3b84:0x12 DW_TAG_array_type
	.long	13991                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3b89:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3b8f:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	13                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3b96:0x12 DW_TAG_array_type
	.long	4657                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3b9b:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3ba1:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	64                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3ba8:0x12 DW_TAG_array_type
	.long	4515                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3bad:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3bb3:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	64                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3bba:0x12 DW_TAG_array_type
	.long	11054                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3bbf:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3bc5:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3bcc:0xc DW_TAG_array_type
	.long	15320                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3bd1:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3bd8:0x5 DW_TAG_pointer_type
	.long	15325                           # DW_AT_type
	.byte	32                              # Abbrev [32] 0x3bdd:0x18 DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3be2:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3be8:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x3bee:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3bf5:0xc DW_TAG_array_type
	.long	15361                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3bfa:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0x3c01:0x9 DW_TAG_typedef
	.long	15370                           # DW_AT_type
	.short	661                             # DW_AT_name
	.byte	16                              # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
	.byte	50                              # Abbrev [50] 0x3c0a:0x5 DW_TAG_pointer_type
	.long	15375                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x3c0f:0x7 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x3c10:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3c16:0xc DW_TAG_array_type
	.long	15394                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3c1b:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	12                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0x3c22:0x9 DW_TAG_typedef
	.long	15403                           # DW_AT_type
	.short	664                             # DW_AT_name
	.byte	16                              # DW_AT_decl_file
	.byte	28                              # DW_AT_decl_line
	.byte	50                              # Abbrev [50] 0x3c2b:0x5 DW_TAG_pointer_type
	.long	15408                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x3c30:0xc DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x3c31:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3c36:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3c3c:0xc DW_TAG_array_type
	.long	15361                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3c41:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	12                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0x3c48:0x9 DW_TAG_typedef
	.long	15441                           # DW_AT_type
	.short	667                             # DW_AT_name
	.byte	16                              # DW_AT_decl_file
	.byte	29                              # DW_AT_decl_line
	.byte	50                              # Abbrev [50] 0x3c51:0x5 DW_TAG_pointer_type
	.long	15446                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x3c56:0x16 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x3c57:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3c5c:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3c61:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3c66:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0x3c6c:0x9 DW_TAG_typedef
	.long	15477                           # DW_AT_type
	.short	704                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	110                             # DW_AT_decl_line
	.byte	83                              # Abbrev [83] 0x3c75:0x16b DW_TAG_structure_type
	.short	1056                            # DW_AT_byte_size
	.byte	4                               # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.byte	41                              # Abbrev [41] 0x3c7a:0x9 DW_TAG_member
	.byte	48                              # DW_AT_name
	.long	15840                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3c83:0xa DW_TAG_member
	.short	670                             # DW_AT_name
	.long	15840                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	66                              # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3c8d:0xa DW_TAG_member
	.short	671                             # DW_AT_name
	.long	15840                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.byte	112                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3c97:0xa DW_TAG_member
	.short	672                             # DW_AT_name
	.long	15840                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	68                              # DW_AT_decl_line
	.byte	168                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3ca1:0xa DW_TAG_member
	.short	673                             # DW_AT_name
	.long	15892                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	69                              # DW_AT_decl_line
	.byte	224                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3cab:0xb DW_TAG_member
	.short	674                             # DW_AT_name
	.long	15840                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	70                              # DW_AT_decl_line
	.short	256                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3cb6:0xb DW_TAG_member
	.short	675                             # DW_AT_name
	.long	15840                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	71                              # DW_AT_decl_line
	.short	312                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3cc1:0xb DW_TAG_member
	.short	676                             # DW_AT_name
	.long	15840                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	72                              # DW_AT_decl_line
	.short	368                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3ccc:0xb DW_TAG_member
	.short	677                             # DW_AT_name
	.long	15904                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	73                              # DW_AT_decl_line
	.short	424                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3cd7:0xb DW_TAG_member
	.short	679                             # DW_AT_name
	.long	15962                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	74                              # DW_AT_decl_line
	.short	480                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3ce2:0xb DW_TAG_member
	.short	681                             # DW_AT_name
	.long	15840                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	75                              # DW_AT_decl_line
	.short	536                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3ced:0xb DW_TAG_member
	.short	682                             # DW_AT_name
	.long	16025                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	76                              # DW_AT_decl_line
	.short	592                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3cf8:0xb DW_TAG_member
	.short	683                             # DW_AT_name
	.long	16061                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	78                              # DW_AT_decl_line
	.short	600                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3d03:0xb DW_TAG_member
	.short	684                             # DW_AT_name
	.long	16061                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	79                              # DW_AT_decl_line
	.short	632                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3d0e:0xb DW_TAG_member
	.short	685                             # DW_AT_name
	.long	16094                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	81                              # DW_AT_decl_line
	.short	664                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3d19:0xb DW_TAG_member
	.short	686                             # DW_AT_name
	.long	16143                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	83                              # DW_AT_decl_line
	.short	672                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3d24:0xb DW_TAG_member
	.short	687                             # DW_AT_name
	.long	15904                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	86                              # DW_AT_decl_line
	.short	680                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3d2f:0xb DW_TAG_member
	.short	688                             # DW_AT_name
	.long	15962                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	87                              # DW_AT_decl_line
	.short	736                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3d3a:0xb DW_TAG_member
	.short	689                             # DW_AT_name
	.long	15904                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	88                              # DW_AT_decl_line
	.short	792                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3d45:0xb DW_TAG_member
	.short	690                             # DW_AT_name
	.long	15962                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.short	848                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3d50:0xb DW_TAG_member
	.short	691                             # DW_AT_name
	.long	16169                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.short	904                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3d5b:0xb DW_TAG_member
	.short	692                             # DW_AT_name
	.long	16227                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	98                              # DW_AT_decl_line
	.short	960                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3d66:0xb DW_TAG_member
	.short	693                             # DW_AT_name
	.long	16227                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.short	968                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3d71:0xb DW_TAG_member
	.short	694                             # DW_AT_name
	.long	16227                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	100                             # DW_AT_decl_line
	.short	976                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3d7c:0xb DW_TAG_member
	.short	695                             # DW_AT_name
	.long	16227                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	101                             # DW_AT_decl_line
	.short	984                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3d87:0xb DW_TAG_member
	.short	696                             # DW_AT_name
	.long	16227                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	102                             # DW_AT_decl_line
	.short	992                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3d92:0xb DW_TAG_member
	.short	697                             # DW_AT_name
	.long	16227                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	103                             # DW_AT_decl_line
	.short	1000                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3d9d:0xb DW_TAG_member
	.short	698                             # DW_AT_name
	.long	16227                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	104                             # DW_AT_decl_line
	.short	1008                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3da8:0xb DW_TAG_member
	.short	699                             # DW_AT_name
	.long	16227                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	105                             # DW_AT_decl_line
	.short	1016                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3db3:0xb DW_TAG_member
	.short	700                             # DW_AT_name
	.long	16227                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	106                             # DW_AT_decl_line
	.short	1024                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3dbe:0xb DW_TAG_member
	.short	701                             # DW_AT_name
	.long	16227                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	107                             # DW_AT_decl_line
	.short	1032                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3dc9:0xb DW_TAG_member
	.short	702                             # DW_AT_name
	.long	16227                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	108                             # DW_AT_decl_line
	.short	1040                            # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x3dd4:0xb DW_TAG_member
	.short	703                             # DW_AT_name
	.long	16227                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	109                             # DW_AT_decl_line
	.short	1048                            # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3de0:0xc DW_TAG_array_type
	.long	15852                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3de5:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0x3dec:0x9 DW_TAG_typedef
	.long	15861                           # DW_AT_type
	.short	669                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	26                              # DW_AT_decl_line
	.byte	50                              # Abbrev [50] 0x3df5:0x5 DW_TAG_pointer_type
	.long	15866                           # DW_AT_type
	.byte	94                              # Abbrev [94] 0x3dfa:0x1a DW_TAG_subroutine_type
	.long	2654                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x3dff:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3e04:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3e09:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3e0e:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3e14:0xc DW_TAG_array_type
	.long	15852                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3e19:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3e20:0xc DW_TAG_array_type
	.long	15916                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3e25:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0x3e2c:0x9 DW_TAG_typedef
	.long	15925                           # DW_AT_type
	.short	678                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
	.byte	50                              # Abbrev [50] 0x3e35:0x5 DW_TAG_pointer_type
	.long	15930                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x3e3a:0x20 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x3e3b:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3e40:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3e45:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3e4a:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3e4f:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3e54:0x5 DW_TAG_formal_parameter
	.long	14156                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3e5a:0xc DW_TAG_array_type
	.long	15974                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3e5f:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0x3e66:0x9 DW_TAG_typedef
	.long	15983                           # DW_AT_type
	.short	680                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	28                              # DW_AT_decl_line
	.byte	50                              # Abbrev [50] 0x3e6f:0x5 DW_TAG_pointer_type
	.long	15988                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x3e74:0x25 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x3e75:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3e7a:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3e7f:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3e84:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3e89:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3e8e:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3e93:0x5 DW_TAG_formal_parameter
	.long	14156                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3e99:0x5 DW_TAG_pointer_type
	.long	16030                           # DW_AT_type
	.byte	94                              # Abbrev [94] 0x3e9e:0x1f DW_TAG_subroutine_type
	.long	2654                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x3ea3:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3ea8:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3ead:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3eb2:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3eb7:0x5 DW_TAG_formal_parameter
	.long	14156                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3ebd:0xc DW_TAG_array_type
	.long	16073                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3ec2:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3ec9:0x5 DW_TAG_pointer_type
	.long	16078                           # DW_AT_type
	.byte	94                              # Abbrev [94] 0x3ece:0x10 DW_TAG_subroutine_type
	.long	4819                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x3ed3:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3ed8:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3ede:0x5 DW_TAG_pointer_type
	.long	16099                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x3ee3:0x1b DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x3ee4:0x5 DW_TAG_formal_parameter
	.long	12133                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3ee9:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3eee:0x5 DW_TAG_formal_parameter
	.long	12133                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3ef3:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3ef8:0x5 DW_TAG_formal_parameter
	.long	16126                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3efe:0x5 DW_TAG_pointer_type
	.long	16131                           # DW_AT_type
	.byte	32                              # Abbrev [32] 0x3f03:0xc DW_TAG_array_type
	.long	2654                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3f08:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3f0f:0x5 DW_TAG_pointer_type
	.long	16148                           # DW_AT_type
	.byte	94                              # Abbrev [94] 0x3f14:0x15 DW_TAG_subroutine_type
	.long	10877                           # DW_AT_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x3f19:0x5 DW_TAG_formal_parameter
	.long	16126                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3f1e:0x5 DW_TAG_formal_parameter
	.long	16126                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3f23:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3f29:0xc DW_TAG_array_type
	.long	16181                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x3f2e:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3f35:0x5 DW_TAG_pointer_type
	.long	16186                           # DW_AT_type
	.byte	94                              # Abbrev [94] 0x3f3a:0x29 DW_TAG_subroutine_type
	.long	2654                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x3f3f:0x5 DW_TAG_formal_parameter
	.long	14156                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3f44:0x5 DW_TAG_formal_parameter
	.long	12271                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3f49:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3f4e:0x5 DW_TAG_formal_parameter
	.long	12271                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3f53:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3f58:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3f5d:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3f63:0x5 DW_TAG_pointer_type
	.long	16232                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x3f68:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x3f69:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3f6e:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x3f73:0x5 DW_TAG_formal_parameter
	.long	14156                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0x3f79:0x9 DW_TAG_typedef
	.long	16258                           # DW_AT_type
	.short	728                             # DW_AT_name
	.byte	13                              # DW_AT_decl_file
	.byte	111                             # DW_AT_decl_line
	.byte	83                              # Abbrev [83] 0x3f82:0xe7 DW_TAG_structure_type
	.short	296                             # DW_AT_byte_size
	.byte	13                              # DW_AT_decl_file
	.byte	58                              # DW_AT_decl_line
	.byte	84                              # Abbrev [84] 0x3f87:0xa DW_TAG_member
	.short	706                             # DW_AT_name
	.long	16489                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	60                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3f91:0xa DW_TAG_member
	.short	707                             # DW_AT_name
	.long	16556                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3f9b:0xa DW_TAG_member
	.short	708                             # DW_AT_name
	.long	16612                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	71                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3fa5:0xa DW_TAG_member
	.short	709                             # DW_AT_name
	.long	16659                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	75                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3faf:0xa DW_TAG_member
	.short	710                             # DW_AT_name
	.long	16713                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	78                              # DW_AT_decl_line
	.byte	104                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3fb9:0xa DW_TAG_member
	.short	711                             # DW_AT_name
	.long	16725                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	79                              # DW_AT_decl_line
	.byte	160                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3fc3:0xa DW_TAG_member
	.short	712                             # DW_AT_name
	.long	16757                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	81                              # DW_AT_decl_line
	.byte	168                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3fcd:0xa DW_TAG_member
	.short	713                             # DW_AT_name
	.long	16794                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	84                              # DW_AT_decl_line
	.byte	176                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3fd7:0xa DW_TAG_member
	.short	714                             # DW_AT_name
	.long	16725                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	88                              # DW_AT_decl_line
	.byte	184                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3fe1:0xa DW_TAG_member
	.short	715                             # DW_AT_name
	.long	16841                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
	.byte	192                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3feb:0xa DW_TAG_member
	.short	716                             # DW_AT_name
	.long	16863                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.byte	200                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3ff5:0xa DW_TAG_member
	.short	718                             # DW_AT_name
	.long	16904                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	94                              # DW_AT_decl_line
	.byte	208                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x3fff:0xa DW_TAG_member
	.short	719                             # DW_AT_name
	.long	16921                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.byte	216                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4009:0xa DW_TAG_member
	.short	720                             # DW_AT_name
	.long	16921                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	98                              # DW_AT_decl_line
	.byte	224                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4013:0xa DW_TAG_member
	.short	721                             # DW_AT_name
	.long	16943                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.byte	232                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x401d:0xa DW_TAG_member
	.short	722                             # DW_AT_name
	.long	16965                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	100                             # DW_AT_decl_line
	.byte	240                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4027:0xa DW_TAG_member
	.short	723                             # DW_AT_name
	.long	16982                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	102                             # DW_AT_decl_line
	.byte	248                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x4031:0xb DW_TAG_member
	.short	372                             # DW_AT_name
	.long	12894                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	104                             # DW_AT_decl_line
	.short	256                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x403c:0xb DW_TAG_member
	.short	724                             # DW_AT_name
	.long	12894                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	105                             # DW_AT_decl_line
	.short	264                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x4047:0xb DW_TAG_member
	.short	725                             # DW_AT_name
	.long	12894                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	106                             # DW_AT_decl_line
	.short	272                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x4052:0xb DW_TAG_member
	.short	726                             # DW_AT_name
	.long	17034                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	107                             # DW_AT_decl_line
	.short	280                             # DW_AT_data_member_location
	.byte	85                              # Abbrev [85] 0x405d:0xb DW_TAG_member
	.short	727                             # DW_AT_name
	.long	17056                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	109                             # DW_AT_decl_line
	.short	288                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x4069:0x5 DW_TAG_pointer_type
	.long	16494                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x406e:0x2f DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x406f:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4074:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4079:0x5 DW_TAG_formal_parameter
	.long	16541                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x407e:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4083:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4088:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x408d:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4092:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4097:0x5 DW_TAG_formal_parameter
	.long	16546                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x409d:0x5 DW_TAG_pointer_type
	.long	11054                           # DW_AT_type
	.byte	50                              # Abbrev [50] 0x40a2:0x5 DW_TAG_pointer_type
	.long	16551                           # DW_AT_type
	.byte	34                              # Abbrev [34] 0x40a7:0x5 DW_TAG_const_type
	.long	12786                           # DW_AT_type
	.byte	50                              # Abbrev [50] 0x40ac:0x5 DW_TAG_pointer_type
	.long	16561                           # DW_AT_type
	.byte	94                              # Abbrev [94] 0x40b1:0x33 DW_TAG_subroutine_type
	.long	11054                           # DW_AT_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x40b6:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x40bb:0x5 DW_TAG_formal_parameter
	.long	14156                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x40c0:0x5 DW_TAG_formal_parameter
	.long	16541                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x40c5:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x40ca:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x40cf:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x40d4:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x40d9:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x40de:0x5 DW_TAG_formal_parameter
	.long	16546                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x40e4:0x5 DW_TAG_pointer_type
	.long	16617                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x40e9:0x2a DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x40ea:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x40ef:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x40f4:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x40f9:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x40fe:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4103:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4108:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x410d:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x4113:0xc DW_TAG_array_type
	.long	16671                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x4118:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	10                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x411f:0x5 DW_TAG_pointer_type
	.long	16676                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x4124:0x25 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x4125:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x412a:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x412f:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4134:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4139:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x413e:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4143:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x4149:0xc DW_TAG_array_type
	.long	16725                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x414e:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x4155:0x5 DW_TAG_pointer_type
	.long	16730                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x415a:0x1b DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x415b:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4160:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4165:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x416a:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x416f:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x4175:0x5 DW_TAG_pointer_type
	.long	16762                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x417a:0x20 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x417b:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4180:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4185:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x418a:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x418f:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4194:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x419a:0x5 DW_TAG_pointer_type
	.long	16799                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x419f:0x2a DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x41a0:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x41a5:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x41aa:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x41af:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x41b4:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x41b9:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x41be:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x41c3:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x41c9:0x5 DW_TAG_pointer_type
	.long	16846                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x41ce:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x41cf:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x41d4:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x41d9:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x41df:0x5 DW_TAG_pointer_type
	.long	16868                           # DW_AT_type
	.byte	94                              # Abbrev [94] 0x41e4:0x15 DW_TAG_subroutine_type
	.long	10829                           # DW_AT_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x41e9:0x5 DW_TAG_formal_parameter
	.long	10829                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x41ee:0x5 DW_TAG_formal_parameter
	.long	16889                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x41f3:0x5 DW_TAG_formal_parameter
	.long	16895                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x41f9:0x5 DW_TAG_pointer_type
	.long	16894                           # DW_AT_type
	.byte	95                              # Abbrev [95] 0x41fe:0x1 DW_TAG_const_type
	.byte	63                              # Abbrev [63] 0x41ff:0x9 DW_TAG_typedef
	.long	4835                            # DW_AT_type
	.short	717                             # DW_AT_name
	.byte	17                              # DW_AT_decl_file
	.byte	18                              # DW_AT_decl_line
	.byte	50                              # Abbrev [50] 0x4208:0x5 DW_TAG_pointer_type
	.long	16909                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x420d:0xc DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x420e:0x5 DW_TAG_formal_parameter
	.long	10829                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4213:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x4219:0x5 DW_TAG_pointer_type
	.long	16926                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x421e:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x421f:0x5 DW_TAG_formal_parameter
	.long	12271                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4224:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4229:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x422f:0x5 DW_TAG_pointer_type
	.long	16948                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x4234:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x4235:0x5 DW_TAG_formal_parameter
	.long	12271                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x423a:0x5 DW_TAG_formal_parameter
	.long	12271                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x423f:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x4245:0x5 DW_TAG_pointer_type
	.long	16970                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x424a:0xc DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x424b:0x5 DW_TAG_formal_parameter
	.long	12271                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4250:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x4256:0x5 DW_TAG_pointer_type
	.long	16987                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x425b:0x2f DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x425c:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4261:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4266:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x426b:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4270:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4275:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x427a:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x427f:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4284:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x428a:0x5 DW_TAG_pointer_type
	.long	17039                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x428f:0xc DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x4290:0x5 DW_TAG_formal_parameter
	.long	6458                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4295:0x5 DW_TAG_formal_parameter
	.long	17051                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x429b:0x5 DW_TAG_pointer_type
	.long	12786                           # DW_AT_type
	.byte	50                              # Abbrev [50] 0x42a0:0x5 DW_TAG_pointer_type
	.long	17061                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x42a5:0x20 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x42a6:0x5 DW_TAG_formal_parameter
	.long	14156                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x42ab:0x5 DW_TAG_formal_parameter
	.long	12271                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x42b0:0x5 DW_TAG_formal_parameter
	.long	12271                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x42b5:0x5 DW_TAG_formal_parameter
	.long	12271                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x42ba:0x5 DW_TAG_formal_parameter
	.long	12271                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x42bf:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0x42c5:0x9 DW_TAG_typedef
	.long	17102                           # DW_AT_type
	.short	745                             # DW_AT_name
	.byte	18                              # DW_AT_decl_file
	.byte	115                             # DW_AT_decl_line
	.byte	40                              # Abbrev [40] 0x42ce:0x9b DW_TAG_structure_type
	.byte	120                             # DW_AT_byte_size
	.byte	18                              # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.byte	84                              # Abbrev [84] 0x42d2:0xa DW_TAG_member
	.short	730                             # DW_AT_name
	.long	17257                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	94                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x42dc:0xa DW_TAG_member
	.short	731                             # DW_AT_name
	.long	17279                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	95                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x42e6:0xa DW_TAG_member
	.short	732                             # DW_AT_name
	.long	17296                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x42f0:0xa DW_TAG_member
	.short	733                             # DW_AT_name
	.long	17257                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	98                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x42fa:0xa DW_TAG_member
	.short	734                             # DW_AT_name
	.long	17323                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4304:0xa DW_TAG_member
	.short	735                             # DW_AT_name
	.long	17279                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	100                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x430e:0xa DW_TAG_member
	.short	736                             # DW_AT_name
	.long	17296                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	102                             # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4318:0xa DW_TAG_member
	.short	737                             # DW_AT_name
	.long	17323                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	103                             # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4322:0xa DW_TAG_member
	.short	738                             # DW_AT_name
	.long	17279                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	104                             # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x432c:0xa DW_TAG_member
	.short	739                             # DW_AT_name
	.long	17257                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	106                             # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4336:0xa DW_TAG_member
	.short	740                             # DW_AT_name
	.long	17279                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	107                             # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4340:0xa DW_TAG_member
	.short	741                             # DW_AT_name
	.long	17340                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	109                             # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x434a:0xa DW_TAG_member
	.short	742                             # DW_AT_name
	.long	17379                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	110                             # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4354:0xa DW_TAG_member
	.short	743                             # DW_AT_name
	.long	17396                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	112                             # DW_AT_decl_line
	.byte	104                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x435e:0xa DW_TAG_member
	.short	744                             # DW_AT_name
	.long	17396                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	113                             # DW_AT_decl_line
	.byte	112                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x4369:0x5 DW_TAG_pointer_type
	.long	17262                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x436e:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x436f:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4374:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4379:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x437f:0x5 DW_TAG_pointer_type
	.long	17284                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x4384:0xc DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x4385:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x438a:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x4390:0x5 DW_TAG_pointer_type
	.long	17301                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x4395:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x4396:0x5 DW_TAG_formal_parameter
	.long	17318                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x439b:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x43a0:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x43a6:0x5 DW_TAG_pointer_type
	.long	14405                           # DW_AT_type
	.byte	50                              # Abbrev [50] 0x43ab:0x5 DW_TAG_pointer_type
	.long	17328                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x43b0:0xc DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x43b1:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x43b6:0x5 DW_TAG_formal_parameter
	.long	17318                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x43bc:0x5 DW_TAG_pointer_type
	.long	17345                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x43c1:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x43c2:0x5 DW_TAG_formal_parameter
	.long	17362                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x43c7:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x43cc:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x43d2:0x5 DW_TAG_pointer_type
	.long	17367                           # DW_AT_type
	.byte	32                              # Abbrev [32] 0x43d7:0xc DW_TAG_array_type
	.long	4745                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x43dc:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	64                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x43e3:0x5 DW_TAG_pointer_type
	.long	17384                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x43e8:0xc DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x43e9:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x43ee:0x5 DW_TAG_formal_parameter
	.long	17362                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x43f4:0x5 DW_TAG_pointer_type
	.long	17401                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x43f9:0x7 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x43fa:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0x4400:0x9 DW_TAG_typedef
	.long	17417                           # DW_AT_type
	.short	753                             # DW_AT_name
	.byte	18                              # DW_AT_decl_file
	.byte	126                             # DW_AT_decl_line
	.byte	40                              # Abbrev [40] 0x4409:0x41 DW_TAG_structure_type
	.byte	48                              # DW_AT_byte_size
	.byte	18                              # DW_AT_decl_file
	.byte	117                             # DW_AT_decl_line
	.byte	84                              # Abbrev [84] 0x440d:0xa DW_TAG_member
	.short	747                             # DW_AT_name
	.long	17482                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	119                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4417:0xa DW_TAG_member
	.short	748                             # DW_AT_name
	.long	17482                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	120                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4421:0xa DW_TAG_member
	.short	749                             # DW_AT_name
	.long	17499                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	121                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x442b:0xa DW_TAG_member
	.short	750                             # DW_AT_name
	.long	17499                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	122                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4435:0xa DW_TAG_member
	.short	751                             # DW_AT_name
	.long	17525                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	123                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x443f:0xa DW_TAG_member
	.short	752                             # DW_AT_name
	.long	17556                           # DW_AT_type
	.byte	18                              # DW_AT_decl_file
	.byte	124                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x444a:0x5 DW_TAG_pointer_type
	.long	17487                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x444f:0xc DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x4450:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4455:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x445b:0x5 DW_TAG_pointer_type
	.long	17504                           # DW_AT_type
	.byte	94                              # Abbrev [94] 0x4460:0x15 DW_TAG_subroutine_type
	.long	2654                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x4465:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x446a:0x5 DW_TAG_formal_parameter
	.long	12133                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x446f:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x4475:0x5 DW_TAG_pointer_type
	.long	17530                           # DW_AT_type
	.byte	94                              # Abbrev [94] 0x447a:0x1a DW_TAG_subroutine_type
	.long	2654                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x447f:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4484:0x5 DW_TAG_formal_parameter
	.long	12133                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4489:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x448e:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x4494:0x5 DW_TAG_pointer_type
	.long	17561                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x4499:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x449a:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x449f:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x44a4:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0x44aa:0x9 DW_TAG_typedef
	.long	17587                           # DW_AT_type
	.short	772                             # DW_AT_name
	.byte	19                              # DW_AT_decl_file
	.byte	44                              # DW_AT_decl_line
	.byte	40                              # Abbrev [40] 0x44b3:0x87 DW_TAG_structure_type
	.byte	176                             # DW_AT_byte_size
	.byte	19                              # DW_AT_decl_file
	.byte	26                              # DW_AT_decl_line
	.byte	84                              # Abbrev [84] 0x44b7:0xa DW_TAG_member
	.short	755                             # DW_AT_name
	.long	17722                           # DW_AT_type
	.byte	19                              # DW_AT_decl_file
	.byte	28                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x44c1:0xa DW_TAG_member
	.short	756                             # DW_AT_name
	.long	17722                           # DW_AT_type
	.byte	19                              # DW_AT_decl_file
	.byte	29                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x44cb:0xa DW_TAG_member
	.short	757                             # DW_AT_name
	.long	17748                           # DW_AT_type
	.byte	19                              # DW_AT_decl_file
	.byte	30                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x44d5:0xa DW_TAG_member
	.short	758                             # DW_AT_name
	.long	17748                           # DW_AT_type
	.byte	19                              # DW_AT_decl_file
	.byte	31                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x44df:0xa DW_TAG_member
	.short	759                             # DW_AT_name
	.long	17774                           # DW_AT_type
	.byte	19                              # DW_AT_decl_file
	.byte	33                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x44e9:0xa DW_TAG_member
	.short	760                             # DW_AT_name
	.long	17796                           # DW_AT_type
	.byte	19                              # DW_AT_decl_file
	.byte	34                              # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x44f3:0xa DW_TAG_member
	.short	761                             # DW_AT_name
	.long	17796                           # DW_AT_type
	.byte	19                              # DW_AT_decl_file
	.byte	35                              # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x44fd:0xa DW_TAG_member
	.short	762                             # DW_AT_name
	.long	17818                           # DW_AT_type
	.byte	19                              # DW_AT_decl_file
	.byte	37                              # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4507:0xa DW_TAG_member
	.short	763                             # DW_AT_name
	.long	17850                           # DW_AT_type
	.byte	19                              # DW_AT_decl_file
	.byte	39                              # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4511:0xa DW_TAG_member
	.short	764                             # DW_AT_name
	.long	17850                           # DW_AT_type
	.byte	19                              # DW_AT_decl_file
	.byte	40                              # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x451b:0xa DW_TAG_member
	.short	765                             # DW_AT_name
	.long	17850                           # DW_AT_type
	.byte	19                              # DW_AT_decl_file
	.byte	41                              # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4525:0xa DW_TAG_member
	.short	766                             # DW_AT_name
	.long	17866                           # DW_AT_type
	.byte	19                              # DW_AT_decl_file
	.byte	42                              # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x452f:0xa DW_TAG_member
	.short	767                             # DW_AT_name
	.long	17878                           # DW_AT_type
	.byte	19                              # DW_AT_decl_file
	.byte	43                              # DW_AT_decl_line
	.byte	136                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x453a:0x5 DW_TAG_pointer_type
	.long	17727                           # DW_AT_type
	.byte	94                              # Abbrev [94] 0x453f:0x15 DW_TAG_subroutine_type
	.long	2654                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x4544:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4549:0x5 DW_TAG_formal_parameter
	.long	12271                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x454e:0x5 DW_TAG_formal_parameter
	.long	12271                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x4554:0x5 DW_TAG_pointer_type
	.long	17753                           # DW_AT_type
	.byte	94                              # Abbrev [94] 0x4559:0x15 DW_TAG_subroutine_type
	.long	2654                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x455e:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4563:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4568:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x456e:0x5 DW_TAG_pointer_type
	.long	17779                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x4573:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x4574:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4579:0x5 DW_TAG_formal_parameter
	.long	12184                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x457e:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x4584:0x5 DW_TAG_pointer_type
	.long	17801                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x4589:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x458a:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x458f:0x5 DW_TAG_formal_parameter
	.long	12155                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4594:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x459a:0x5 DW_TAG_pointer_type
	.long	17823                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x459f:0x16 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x45a0:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x45a5:0x5 DW_TAG_formal_parameter
	.long	17845                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x45aa:0x5 DW_TAG_formal_parameter
	.long	12271                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x45af:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x45b5:0x5 DW_TAG_pointer_type
	.long	4657                            # DW_AT_type
	.byte	50                              # Abbrev [50] 0x45ba:0x5 DW_TAG_pointer_type
	.long	17855                           # DW_AT_type
	.byte	94                              # Abbrev [94] 0x45bf:0xb DW_TAG_subroutine_type
	.long	2654                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x45c4:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x45ca:0xc DW_TAG_array_type
	.long	17850                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x45cf:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	6                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x45d6:0xc DW_TAG_array_type
	.long	17890                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x45db:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	5                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x45e2:0x5 DW_TAG_pointer_type
	.long	17895                           # DW_AT_type
	.byte	94                              # Abbrev [94] 0x45e7:0x10 DW_TAG_subroutine_type
	.long	2654                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x45ec:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x45f1:0x5 DW_TAG_formal_parameter
	.long	17911                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x45f7:0x5 DW_TAG_pointer_type
	.long	17916                           # DW_AT_type
	.byte	63                              # Abbrev [63] 0x45fc:0x9 DW_TAG_typedef
	.long	17925                           # DW_AT_type
	.short	771                             # DW_AT_name
	.byte	11                              # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.byte	40                              # Abbrev [40] 0x4605:0x23 DW_TAG_structure_type
	.byte	52                              # DW_AT_byte_size
	.byte	11                              # DW_AT_decl_file
	.byte	58                              # DW_AT_decl_line
	.byte	84                              # Abbrev [84] 0x4609:0xa DW_TAG_member
	.short	768                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	60                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4613:0xa DW_TAG_member
	.short	769                             # DW_AT_name
	.long	14405                           # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x461d:0xa DW_TAG_member
	.short	770                             # DW_AT_name
	.long	10778                           # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	62                              # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0x4628:0x9 DW_TAG_typedef
	.long	17969                           # DW_AT_type
	.short	780                             # DW_AT_name
	.byte	15                              # DW_AT_decl_file
	.byte	170                             # DW_AT_decl_line
	.byte	40                              # Abbrev [40] 0x4631:0x37 DW_TAG_structure_type
	.byte	72                              # DW_AT_byte_size
	.byte	15                              # DW_AT_decl_file
	.byte	161                             # DW_AT_decl_line
	.byte	84                              # Abbrev [84] 0x4635:0xa DW_TAG_member
	.short	774                             # DW_AT_name
	.long	18024                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	163                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x463f:0xa DW_TAG_member
	.short	776                             # DW_AT_name
	.long	18024                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	164                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4649:0xa DW_TAG_member
	.short	777                             # DW_AT_name
	.long	18077                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	165                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4653:0xa DW_TAG_member
	.short	779                             # DW_AT_name
	.long	18077                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	166                             # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x465d:0xa DW_TAG_member
	.short	659                             # DW_AT_name
	.long	18125                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	167                             # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x4668:0xc DW_TAG_array_type
	.long	18036                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x466d:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0x4674:0x9 DW_TAG_typedef
	.long	18045                           # DW_AT_type
	.short	775                             # DW_AT_name
	.byte	15                              # DW_AT_decl_file
	.byte	159                             # DW_AT_decl_line
	.byte	50                              # Abbrev [50] 0x467d:0x5 DW_TAG_pointer_type
	.long	18050                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x4682:0x1b DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x4683:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4688:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x468d:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4692:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4697:0x5 DW_TAG_formal_parameter
	.long	14085                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x469d:0xc DW_TAG_array_type
	.long	18089                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x46a2:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0x46a9:0x9 DW_TAG_typedef
	.long	18098                           # DW_AT_type
	.short	778                             # DW_AT_name
	.byte	15                              # DW_AT_decl_file
	.byte	160                             # DW_AT_decl_line
	.byte	50                              # Abbrev [50] 0x46b2:0x5 DW_TAG_pointer_type
	.long	18103                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x46b7:0x16 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x46b8:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x46bd:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x46c2:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x46c7:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x46cd:0x5 DW_TAG_pointer_type
	.long	18130                           # DW_AT_type
	.byte	77                              # Abbrev [77] 0x46d2:0x20 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	78                              # Abbrev [78] 0x46d3:0x5 DW_TAG_formal_parameter
	.long	11054                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x46d8:0x5 DW_TAG_formal_parameter
	.long	18162                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x46dd:0x5 DW_TAG_formal_parameter
	.long	18167                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x46e2:0x5 DW_TAG_formal_parameter
	.long	18190                           # DW_AT_type
	.byte	78                              # Abbrev [78] 0x46e7:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x46ec:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x46f2:0x5 DW_TAG_pointer_type
	.long	14770                           # DW_AT_type
	.byte	50                              # Abbrev [50] 0x46f7:0x5 DW_TAG_pointer_type
	.long	18172                           # DW_AT_type
	.byte	32                              # Abbrev [32] 0x46fc:0x12 DW_TAG_array_type
	.long	4745                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x4701:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	40                              # DW_AT_count
	.byte	33                              # Abbrev [33] 0x4707:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x470e:0x5 DW_TAG_pointer_type
	.long	18195                           # DW_AT_type
	.byte	32                              # Abbrev [32] 0x4713:0x12 DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x4718:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x471e:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x4725:0x5 DW_TAG_pointer_type
	.long	18218                           # DW_AT_type
	.byte	87                              # Abbrev [87] 0x472a:0xa DW_TAG_typedef
	.long	18228                           # DW_AT_type
	.short	795                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.short	377                             # DW_AT_decl_line
	.byte	96                              # Abbrev [96] 0x4734:0x6a DW_TAG_structure_type
	.short	795                             # DW_AT_name
	.byte	120                             # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	366                             # DW_AT_decl_line
	.byte	70                              # Abbrev [70] 0x473b:0xb DW_TAG_member
	.short	782                             # DW_AT_name
	.long	18334                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	368                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	65                              # Abbrev [65] 0x4746:0xa DW_TAG_member
	.byte	218                             # DW_AT_name
	.long	2545                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	369                             # DW_AT_decl_line
	.byte	1                               # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x4750:0xb DW_TAG_member
	.short	783                             # DW_AT_name
	.long	2545                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	370                             # DW_AT_decl_line
	.byte	2                               # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x475b:0xb DW_TAG_member
	.short	490                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	371                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x4766:0xb DW_TAG_member
	.short	784                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	372                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x4771:0xb DW_TAG_member
	.short	785                             # DW_AT_name
	.long	13088                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	373                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x477c:0xb DW_TAG_member
	.short	786                             # DW_AT_name
	.long	18339                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	374                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x4787:0xb DW_TAG_member
	.short	793                             # DW_AT_name
	.long	18339                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	375                             # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x4792:0xb DW_TAG_member
	.short	794                             # DW_AT_name
	.long	18339                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	376                             # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	97                              # Abbrev [97] 0x479e:0x5 DW_TAG_volatile_type
	.long	2545                            # DW_AT_type
	.byte	63                              # Abbrev [63] 0x47a3:0x9 DW_TAG_typedef
	.long	18348                           # DW_AT_type
	.short	792                             # DW_AT_name
	.byte	15                              # DW_AT_decl_file
	.byte	157                             # DW_AT_decl_line
	.byte	40                              # Abbrev [40] 0x47ac:0x41 DW_TAG_structure_type
	.byte	32                              # DW_AT_byte_size
	.byte	15                              # DW_AT_decl_file
	.byte	149                             # DW_AT_decl_line
	.byte	84                              # Abbrev [84] 0x47b0:0xa DW_TAG_member
	.short	787                             # DW_AT_name
	.long	13083                           # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	151                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x47ba:0xa DW_TAG_member
	.short	788                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	152                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x47c4:0xa DW_TAG_member
	.short	789                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	153                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x47ce:0xa DW_TAG_member
	.short	479                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	154                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x47d8:0xa DW_TAG_member
	.short	790                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	155                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x47e2:0xa DW_TAG_member
	.short	791                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	15                              # DW_AT_decl_file
	.byte	156                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x47ed:0x53 DW_TAG_subprogram
	.short	803                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	22                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	53                              # Abbrev [53] 0x47f2:0x8 DW_TAG_formal_parameter
	.byte	66                              # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	22                              # DW_AT_decl_line
	.long	10829                           # DW_AT_type
	.byte	53                              # Abbrev [53] 0x47fa:0x8 DW_TAG_formal_parameter
	.byte	17                              # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	22                              # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	53                              # Abbrev [53] 0x4802:0x8 DW_TAG_formal_parameter
	.byte	18                              # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	22                              # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	62                              # Abbrev [62] 0x480a:0x9 DW_TAG_formal_parameter
	.short	804                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	22                              # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	53                              # Abbrev [53] 0x4813:0x8 DW_TAG_formal_parameter
	.byte	61                              # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	22                              # DW_AT_decl_line
	.long	4657                            # DW_AT_type
	.byte	12                              # Abbrev [12] 0x481b:0x9 DW_TAG_variable
	.short	805                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	24                              # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	12                              # Abbrev [12] 0x4824:0x9 DW_TAG_variable
	.short	806                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	25                              # DW_AT_decl_line
	.long	4515                            # DW_AT_type
	.byte	12                              # Abbrev [12] 0x482d:0x9 DW_TAG_variable
	.short	807                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	26                              # DW_AT_decl_line
	.long	4657                            # DW_AT_type
	.byte	12                              # Abbrev [12] 0x4836:0x9 DW_TAG_variable
	.short	808                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
	.long	4819                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x4840:0x4d DW_TAG_subprogram
	.short	809                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	118                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	53                              # Abbrev [53] 0x4845:0x8 DW_TAG_formal_parameter
	.byte	18                              # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	118                             # DW_AT_decl_line
	.long	6458                            # DW_AT_type
	.byte	62                              # Abbrev [62] 0x484d:0x9 DW_TAG_formal_parameter
	.short	797                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	118                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	62                              # Abbrev [62] 0x4856:0x9 DW_TAG_formal_parameter
	.short	798                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	118                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	62                              # Abbrev [62] 0x485f:0x9 DW_TAG_formal_parameter
	.short	799                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	118                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	62                              # Abbrev [62] 0x4868:0x9 DW_TAG_formal_parameter
	.short	800                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	118                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	62                              # Abbrev [62] 0x4871:0x9 DW_TAG_formal_parameter
	.short	801                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	118                             # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	62                              # Abbrev [62] 0x487a:0x9 DW_TAG_formal_parameter
	.short	560                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	118                             # DW_AT_decl_line
	.long	4515                            # DW_AT_type
	.byte	12                              # Abbrev [12] 0x4883:0x9 DW_TAG_variable
	.short	810                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	120                             # DW_AT_decl_line
	.long	10829                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	99                              # Abbrev [99] 0x488d:0x20 DW_TAG_subprogram
	.short	811                             # DW_AT_name
	.byte	6                               # DW_AT_decl_file
	.short	299                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	78                              # Abbrev [78] 0x4893:0x5 DW_TAG_formal_parameter
	.long	6458                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x4898:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x489d:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x48a2:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x48a7:0x5 DW_TAG_formal_parameter
	.long	14495                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	100                             # Abbrev [100] 0x48ad:0x1e DW_TAG_subprogram
	.short	812                             # DW_AT_name
	.byte	7                               # DW_AT_decl_file
	.byte	69                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	4819                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	78                              # Abbrev [78] 0x48b6:0x5 DW_TAG_formal_parameter
	.long	6458                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x48bb:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x48c0:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	78                              # Abbrev [78] 0x48c5:0x5 DW_TAG_formal_parameter
	.long	2654                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	58                              # Abbrev [58] 0x48cb:0x5d DW_TAG_subprogram
	.ascii	"\310\001"                      # DW_AT_low_pc
	.long	.Lfunc_end6-.Lfunc_begin6       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	826                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1086                            # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	43                              # Abbrev [43] 0x48d9:0xb DW_TAG_formal_parameter
	.ascii	"\224\002"                      # DW_AT_location
	.byte	18                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1086                            # DW_AT_decl_line
	.long	6458                            # DW_AT_type
	.byte	44                              # Abbrev [44] 0x48e4:0xc DW_TAG_formal_parameter
	.ascii	"\225\002"                      # DW_AT_location
	.short	907                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1086                            # DW_AT_decl_line
	.long	19884                           # DW_AT_type
	.byte	44                              # Abbrev [44] 0x48f0:0xc DW_TAG_formal_parameter
	.ascii	"\226\002"                      # DW_AT_location
	.short	908                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1086                            # DW_AT_decl_line
	.long	19884                           # DW_AT_type
	.byte	44                              # Abbrev [44] 0x48fc:0xc DW_TAG_formal_parameter
	.ascii	"\227\002"                      # DW_AT_location
	.short	909                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1086                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	44                              # Abbrev [44] 0x4908:0xc DW_TAG_formal_parameter
	.ascii	"\230\002"                      # DW_AT_location
	.short	914                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1086                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	44                              # Abbrev [44] 0x4914:0xc DW_TAG_formal_parameter
	.ascii	"\231\002"                      # DW_AT_location
	.short	915                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1086                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	31                              # Abbrev [31] 0x4920:0x7 DW_TAG_call_site
	.long	2819                            # DW_AT_call_origin
	.ascii	"\311\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	58                              # Abbrev [58] 0x4928:0x472 DW_TAG_subprogram
	.ascii	"\312\001"                      # DW_AT_low_pc
	.long	.Lfunc_end7-.Lfunc_begin7       # DW_AT_high_pc
	.byte	5                               # DW_AT_frame_base
	.byte	156
	.byte	17
	.ascii	"\300}"
	.byte	34
                                        # DW_AT_call_all_calls
	.short	827                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1125                            # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	43                              # Abbrev [43] 0x493a:0xb DW_TAG_formal_parameter
	.ascii	"\232\002"                      # DW_AT_location
	.byte	18                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1125                            # DW_AT_decl_line
	.long	6458                            # DW_AT_type
	.byte	44                              # Abbrev [44] 0x4945:0xc DW_TAG_formal_parameter
	.ascii	"\233\002"                      # DW_AT_location
	.short	834                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1125                            # DW_AT_decl_line
	.long	19884                           # DW_AT_type
	.byte	44                              # Abbrev [44] 0x4951:0xc DW_TAG_formal_parameter
	.ascii	"\234\002"                      # DW_AT_location
	.short	915                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1125                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	44                              # Abbrev [44] 0x495d:0xc DW_TAG_formal_parameter
	.ascii	"\235\002"                      # DW_AT_location
	.short	948                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1125                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	44                              # Abbrev [44] 0x4969:0xc DW_TAG_formal_parameter
	.ascii	"\236\002"                      # DW_AT_location
	.short	801                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1125                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x4975:0xc DW_TAG_variable
	.ascii	"\237\002"                      # DW_AT_location
	.short	949                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1127                            # DW_AT_decl_line
	.long	14495                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x4981:0xc DW_TAG_variable
	.ascii	"\240\002"                      # DW_AT_location
	.short	842                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1129                            # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x498d:0xc DW_TAG_variable
	.ascii	"\241\002"                      # DW_AT_location
	.short	843                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1130                            # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x4999:0xc DW_TAG_variable
	.ascii	"\242\002"                      # DW_AT_location
	.short	900                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1132                            # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x49a5:0xc DW_TAG_variable
	.ascii	"\243\002"                      # DW_AT_location
	.short	857                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1134                            # DW_AT_decl_line
	.long	4819                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x49b1:0xc DW_TAG_variable
	.ascii	"\244\002"                      # DW_AT_location
	.short	853                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1135                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x49bd:0xc DW_TAG_variable
	.ascii	"\245\002"                      # DW_AT_location
	.short	873                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1144                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x49c9:0xc DW_TAG_variable
	.ascii	"\246\002"                      # DW_AT_location
	.short	914                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1145                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x49d5:0xc DW_TAG_variable
	.ascii	"\247\002"                      # DW_AT_location
	.short	854                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1136                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x49e1:0xc DW_TAG_variable
	.ascii	"\250\002"                      # DW_AT_location
	.short	828                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1148                            # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x49ed:0xc DW_TAG_variable
	.ascii	"\251\002"                      # DW_AT_location
	.short	919                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1150                            # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x49f9:0xc DW_TAG_variable
	.ascii	"\252\002"                      # DW_AT_location
	.short	855                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1137                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x4a05:0xc DW_TAG_variable
	.ascii	"\253\002"                      # DW_AT_location
	.short	856                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1137                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x4a11:0xc DW_TAG_variable
	.ascii	"\254\002"                      # DW_AT_location
	.short	851                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1128                            # DW_AT_decl_line
	.long	20058                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x4a1d:0xc DW_TAG_variable
	.ascii	"\255\002"                      # DW_AT_location
	.short	852                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1128                            # DW_AT_decl_line
	.long	20058                           # DW_AT_type
	.byte	24                              # Abbrev [24] 0x4a29:0xc DW_TAG_variable
	.ascii	"\256\002"                      # DW_AT_location
	.short	950                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1139                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x4a35:0xc DW_TAG_variable
	.ascii	"\260\002"                      # DW_AT_location
	.short	671                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1143                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x4a41:0xc DW_TAG_variable
	.ascii	"\262\002"                      # DW_AT_location
	.short	870                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1137                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x4a4d:0xc DW_TAG_variable
	.ascii	"\263\002"                      # DW_AT_location
	.short	871                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1137                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x4a59:0xc DW_TAG_variable
	.ascii	"\314\002"                      # DW_AT_location
	.short	944                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1146                            # DW_AT_decl_line
	.long	4515                            # DW_AT_type
	.byte	26                              # Abbrev [26] 0x4a65:0xa DW_TAG_variable
	.short	835                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1131                            # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	26                              # Abbrev [26] 0x4a6f:0xa DW_TAG_variable
	.short	945                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1149                            # DW_AT_decl_line
	.long	11054                           # DW_AT_type
	.byte	18                              # Abbrev [18] 0x4a79:0x34 DW_TAG_lexical_block
	.ascii	"\313\001"                      # DW_AT_low_pc
	.long	.Ltmp2168-.Ltmp2154             # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x4a80:0xc DW_TAG_variable
	.ascii	"\257\002"                      # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1162                            # DW_AT_decl_line
	.long	4819                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x4a8c:0x20 DW_TAG_inlined_subroutine
	.long	4956                            # DW_AT_abstract_origin
	.ascii	"\313\001"                      # DW_AT_low_pc
	.long	.Ltmp2155-.Ltmp2154             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1162                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0x4a9b:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	12
	.long	4965                            # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x4aa3:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	32
	.long	4974                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x4aad:0x35 DW_TAG_lexical_block
	.ascii	"\314\001"                      # DW_AT_low_pc
	.long	.Ltmp2433-.Ltmp2415             # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x4ab4:0xc DW_TAG_variable
	.ascii	"\313\002"                      # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1172                            # DW_AT_decl_line
	.long	4819                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x4ac0:0x21 DW_TAG_inlined_subroutine
	.long	4956                            # DW_AT_abstract_origin
	.ascii	"\314\001"                      # DW_AT_low_pc
	.long	.Ltmp2417-.Ltmp2415             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1172                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0x4acf:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	16
	.long	4965                            # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x4ad7:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\310"
	.long	4974                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x4ae2:0x46 DW_TAG_lexical_block
	.ascii	"\315\001"                      # DW_AT_low_pc
	.long	.Ltmp2221-.Ltmp2192             # DW_AT_high_pc
	.byte	27                              # Abbrev [27] 0x4ae9:0xc DW_TAG_variable
	.byte	1                               # DW_AT_location
	.byte	83
	.short	879                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1193                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x4af5:0x32 DW_TAG_lexical_block
	.ascii	"\316\001"                      # DW_AT_low_pc
	.long	.Ltmp2221-.Ltmp2207             # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x4afc:0xc DW_TAG_variable
	.ascii	"\261\002"                      # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1196                            # DW_AT_decl_line
	.long	4819                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x4b08:0x1e DW_TAG_inlined_subroutine
	.long	4956                            # DW_AT_abstract_origin
	.ascii	"\316\001"                      # DW_AT_low_pc
	.long	.Ltmp2209-.Ltmp2207             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1196                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0x4b17:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	86
	.long	4965                            # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x4b1e:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	4974                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x4b28:0x54 DW_TAG_lexical_block
	.byte	51                              # DW_AT_ranges
	.byte	23                              # Abbrev [23] 0x4b2a:0xb DW_TAG_variable
	.ascii	"\305\002"                      # DW_AT_location
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1202                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0x4b35:0x46 DW_TAG_lexical_block
	.byte	52                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0x4b37:0xc DW_TAG_variable
	.ascii	"\306\002"                      # DW_AT_location
	.short	901                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1204                            # DW_AT_decl_line
	.long	4482                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0x4b43:0x37 DW_TAG_lexical_block
	.byte	53                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0x4b45:0xc DW_TAG_variable
	.ascii	"\307\002"                      # DW_AT_location
	.short	879                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1211                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0x4b51:0x28 DW_TAG_lexical_block
	.byte	54                              # DW_AT_ranges
	.byte	24                              # Abbrev [24] 0x4b53:0xc DW_TAG_variable
	.ascii	"\312\002"                      # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1214                            # DW_AT_decl_line
	.long	4819                            # DW_AT_type
	.byte	47                              # Abbrev [47] 0x4b5f:0x19 DW_TAG_inlined_subroutine
	.long	4956                            # DW_AT_abstract_origin
	.byte	55                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1214                            # DW_AT_call_line
	.byte	17                              # DW_AT_call_column
	.byte	15                              # Abbrev [15] 0x4b69:0x7 DW_TAG_formal_parameter
	.ascii	"\310\002"                      # DW_AT_location
	.long	4965                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x4b70:0x7 DW_TAG_formal_parameter
	.ascii	"\311\002"                      # DW_AT_location
	.long	4974                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x4b7c:0x45 DW_TAG_lexical_block
	.ascii	"\317\001"                      # DW_AT_low_pc
	.long	.Ltmp2260-.Ltmp2231             # DW_AT_high_pc
	.byte	23                              # Abbrev [23] 0x4b83:0xb DW_TAG_variable
	.ascii	"\264\002"                      # DW_AT_location
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1224                            # DW_AT_decl_line
	.long	2654                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x4b8e:0x32 DW_TAG_lexical_block
	.ascii	"\320\001"                      # DW_AT_low_pc
	.long	.Ltmp2260-.Ltmp2246             # DW_AT_high_pc
	.byte	24                              # Abbrev [24] 0x4b95:0xc DW_TAG_variable
	.ascii	"\265\002"                      # DW_AT_location
	.short	839                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1227                            # DW_AT_decl_line
	.long	4819                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x4ba1:0x1e DW_TAG_inlined_subroutine
	.long	4956                            # DW_AT_abstract_origin
	.ascii	"\320\001"                      # DW_AT_low_pc
	.long	.Ltmp2248-.Ltmp2246             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1227                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0x4bb0:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	86
	.long	4965                            # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x4bb7:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	4974                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x4bc1:0x1f DW_TAG_inlined_subroutine
	.long	4956                            # DW_AT_abstract_origin
	.ascii	"\321\001"                      # DW_AT_low_pc
	.long	.Ltmp2266-.Ltmp2265             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1233                            # DW_AT_call_line
	.byte	91                              # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0x4bd0:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	16
	.long	4965                            # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x4bd8:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	90
	.long	4974                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	47                              # Abbrev [47] 0x4be0:0x7e DW_TAG_inlined_subroutine
	.long	6383                            # DW_AT_abstract_origin
	.byte	56                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1233                            # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	15                              # Abbrev [15] 0x4bea:0x7 DW_TAG_formal_parameter
	.ascii	"\267\002"                      # DW_AT_location
	.long	6387                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x4bf1:0x7 DW_TAG_formal_parameter
	.ascii	"\272\002"                      # DW_AT_location
	.long	6404                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x4bf8:0x7 DW_TAG_formal_parameter
	.ascii	"\270\002"                      # DW_AT_location
	.long	6413                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x4bff:0x7 DW_TAG_formal_parameter
	.ascii	"\271\002"                      # DW_AT_location
	.long	6422                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x4c06:0x7 DW_TAG_formal_parameter
	.ascii	"\266\002"                      # DW_AT_location
	.long	6440                            # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x4c0d:0x7 DW_TAG_variable
	.ascii	"\273\002"                      # DW_AT_location
	.long	6448                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x4c14:0x49 DW_TAG_inlined_subroutine
	.long	18413                           # DW_AT_abstract_origin
	.byte	57                              # DW_AT_ranges
	.byte	9                               # DW_AT_call_file
	.byte	116                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	15                              # Abbrev [15] 0x4c1d:0x7 DW_TAG_formal_parameter
	.ascii	"\274\002"                      # DW_AT_location
	.long	18418                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x4c24:0x7 DW_TAG_formal_parameter
	.ascii	"\276\002"                      # DW_AT_location
	.long	18426                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x4c2b:0x7 DW_TAG_formal_parameter
	.ascii	"\277\002"                      # DW_AT_location
	.long	18434                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x4c32:0x7 DW_TAG_formal_parameter
	.ascii	"\300\002"                      # DW_AT_location
	.long	18442                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x4c39:0x7 DW_TAG_formal_parameter
	.ascii	"\301\002"                      # DW_AT_location
	.long	18451                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x4c40:0x7 DW_TAG_variable
	.ascii	"\275\002"                      # DW_AT_location
	.long	18459                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x4c47:0x7 DW_TAG_variable
	.ascii	"\302\002"                      # DW_AT_location
	.long	18468                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x4c4e:0x7 DW_TAG_variable
	.ascii	"\303\002"                      # DW_AT_location
	.long	18477                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x4c55:0x7 DW_TAG_variable
	.ascii	"\304\002"                      # DW_AT_location
	.long	18486                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	47                              # Abbrev [47] 0x4c5e:0x77 DW_TAG_inlined_subroutine
	.long	18496                           # DW_AT_abstract_origin
	.byte	58                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1235                            # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0x4c68:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	24
	.long	18501                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x4c70:0x7 DW_TAG_formal_parameter
	.ascii	"\316\002"                      # DW_AT_location
	.long	18527                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x4c77:0x7 DW_TAG_formal_parameter
	.ascii	"\317\002"                      # DW_AT_location
	.long	18536                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x4c7e:0x7 DW_TAG_formal_parameter
	.ascii	"\315\002"                      # DW_AT_location
	.long	18554                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x4c85:0x7 DW_TAG_variable
	.ascii	"\320\002"                      # DW_AT_location
	.long	18563                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x4c8c:0x48 DW_TAG_inlined_subroutine
	.long	18413                           # DW_AT_abstract_origin
	.byte	59                              # DW_AT_ranges
	.byte	9                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	15                              # Abbrev [15] 0x4c95:0x7 DW_TAG_formal_parameter
	.ascii	"\321\002"                      # DW_AT_location
	.long	18418                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x4c9c:0x7 DW_TAG_formal_parameter
	.ascii	"\323\002"                      # DW_AT_location
	.long	18426                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x4ca3:0x7 DW_TAG_formal_parameter
	.ascii	"\324\002"                      # DW_AT_location
	.long	18434                           # DW_AT_abstract_origin
	.byte	46                              # Abbrev [46] 0x4caa:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	18442                           # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x4cb0:0x7 DW_TAG_formal_parameter
	.ascii	"\325\002"                      # DW_AT_location
	.long	18451                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x4cb7:0x7 DW_TAG_variable
	.ascii	"\322\002"                      # DW_AT_location
	.long	18459                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x4cbe:0x7 DW_TAG_variable
	.ascii	"\326\002"                      # DW_AT_location
	.long	18468                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x4cc5:0x7 DW_TAG_variable
	.ascii	"\327\002"                      # DW_AT_location
	.long	18477                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x4ccc:0x7 DW_TAG_variable
	.ascii	"\330\002"                      # DW_AT_location
	.long	18486                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	31                              # Abbrev [31] 0x4cd5:0x7 DW_TAG_call_site
	.long	18573                           # DW_AT_call_origin
	.ascii	"\322\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4cdc:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\323\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4ce1:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\324\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4ce6:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\325\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4ceb:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.ascii	"\326\001"                      # DW_AT_call_return_pc
	.byte	31                              # Abbrev [31] 0x4cf0:0x7 DW_TAG_call_site
	.long	18605                           # DW_AT_call_origin
	.ascii	"\327\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4cf7:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\330\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4cfc:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\331\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d01:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\332\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d06:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\333\001"                      # DW_AT_call_return_pc
	.byte	31                              # Abbrev [31] 0x4d0b:0x7 DW_TAG_call_site
	.long	18605                           # DW_AT_call_origin
	.ascii	"\334\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d12:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\335\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d17:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\336\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d1c:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\337\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d21:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\340\001"                      # DW_AT_call_return_pc
	.byte	31                              # Abbrev [31] 0x4d26:0x7 DW_TAG_call_site
	.long	18605                           # DW_AT_call_origin
	.ascii	"\341\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d2d:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.ascii	"\342\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d32:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.ascii	"\343\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d37:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.ascii	"\344\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d3c:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.ascii	"\345\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d41:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.ascii	"\346\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d46:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.ascii	"\347\001"                      # DW_AT_call_return_pc
	.byte	31                              # Abbrev [31] 0x4d4b:0x7 DW_TAG_call_site
	.long	18605                           # DW_AT_call_origin
	.ascii	"\350\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d52:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	95
	.ascii	"\351\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d57:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	95
	.ascii	"\352\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d5c:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	95
	.ascii	"\353\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d61:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	95
	.ascii	"\354\001"                      # DW_AT_call_return_pc
	.byte	31                              # Abbrev [31] 0x4d66:0x7 DW_TAG_call_site
	.long	18605                           # DW_AT_call_origin
	.ascii	"\355\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d6d:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.ascii	"\356\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d72:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.ascii	"\357\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d77:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.ascii	"\360\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d7c:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.ascii	"\361\001"                      # DW_AT_call_return_pc
	.byte	31                              # Abbrev [31] 0x4d81:0x7 DW_TAG_call_site
	.long	18605                           # DW_AT_call_origin
	.ascii	"\362\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d88:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\363\001"                      # DW_AT_call_return_pc
	.byte	30                              # Abbrev [30] 0x4d8d:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.ascii	"\364\001"                      # DW_AT_call_return_pc
	.byte	31                              # Abbrev [31] 0x4d92:0x7 DW_TAG_call_site
	.long	18605                           # DW_AT_call_origin
	.ascii	"\365\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x4d9a:0x12 DW_TAG_array_type
	.long	4745                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x4d9f:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	33                              # Abbrev [33] 0x4da5:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x4dac:0x5 DW_TAG_pointer_type
	.long	19889                           # DW_AT_type
	.byte	88                              # Abbrev [88] 0x4db1:0xa DW_TAG_typedef
	.long	19899                           # DW_AT_type
	.short	840                             # DW_AT_name
	.byte	16                              # DW_AT_alignment
	.byte	7                               # DW_AT_decl_file
	.byte	53                              # DW_AT_decl_line
	.byte	40                              # Abbrev [40] 0x4dbb:0x93 DW_TAG_structure_type
	.byte	144                             # DW_AT_byte_size
	.byte	7                               # DW_AT_decl_file
	.byte	30                              # DW_AT_decl_line
	.byte	90                              # Abbrev [90] 0x4dbf:0xb DW_TAG_member
	.short	835                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	7                               # DW_AT_decl_file
	.byte	35                              # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.byte	0                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4dca:0xa DW_TAG_member
	.short	836                             # DW_AT_name
	.long	12271                           # DW_AT_type
	.byte	7                               # DW_AT_decl_file
	.byte	36                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4dd4:0xa DW_TAG_member
	.short	837                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	7                               # DW_AT_decl_file
	.byte	37                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4dde:0xa DW_TAG_member
	.short	445                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	7                               # DW_AT_decl_file
	.byte	38                              # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4de8:0xa DW_TAG_member
	.short	372                             # DW_AT_name
	.long	16546                           # DW_AT_type
	.byte	7                               # DW_AT_decl_file
	.byte	39                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4df2:0xa DW_TAG_member
	.short	595                             # DW_AT_name
	.long	20046                           # DW_AT_type
	.byte	7                               # DW_AT_decl_file
	.byte	41                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4dfc:0xa DW_TAG_member
	.short	596                             # DW_AT_name
	.long	11054                           # DW_AT_type
	.byte	7                               # DW_AT_decl_file
	.byte	42                              # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4e06:0xa DW_TAG_member
	.short	591                             # DW_AT_name
	.long	14026                           # DW_AT_type
	.byte	7                               # DW_AT_decl_file
	.byte	43                              # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4e10:0xa DW_TAG_member
	.short	432                             # DW_AT_name
	.long	12271                           # DW_AT_type
	.byte	7                               # DW_AT_decl_file
	.byte	44                              # DW_AT_decl_line
	.byte	112                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4e1a:0xa DW_TAG_member
	.short	424                             # DW_AT_name
	.long	10881                           # DW_AT_type
	.byte	7                               # DW_AT_decl_file
	.byte	45                              # DW_AT_decl_line
	.byte	120                             # DW_AT_data_member_location
	.byte	90                              # Abbrev [90] 0x4e24:0xb DW_TAG_member
	.short	838                             # DW_AT_name
	.long	4733                            # DW_AT_type
	.byte	7                               # DW_AT_decl_file
	.byte	47                              # DW_AT_decl_line
	.byte	4                               # DW_AT_alignment
	.byte	128                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4e2f:0xa DW_TAG_member
	.short	349                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	7                               # DW_AT_decl_file
	.byte	50                              # DW_AT_decl_line
	.byte	132                             # DW_AT_data_member_location
	.byte	84                              # Abbrev [84] 0x4e39:0xa DW_TAG_member
	.short	839                             # DW_AT_name
	.long	2654                            # DW_AT_type
	.byte	7                               # DW_AT_decl_file
	.byte	51                              # DW_AT_decl_line
	.byte	136                             # DW_AT_data_member_location
	.byte	101                             # Abbrev [101] 0x4e43:0xa DW_TAG_member
	.byte	49                              # DW_AT_name
	.long	4733                            # DW_AT_type
	.byte	7                               # DW_AT_decl_file
	.byte	52                              # DW_AT_decl_line
	.byte	4                               # DW_AT_alignment
	.byte	140                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x4e4e:0xc DW_TAG_array_type
	.long	11054                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x4e53:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	6                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x4e5a:0x5 DW_TAG_pointer_type
	.long	4510                            # DW_AT_type
	.byte	32                              # Abbrev [32] 0x4e5f:0xd DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	86                              # Abbrev [86] 0x4e64:0x7 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.short	1152                            # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x4e6c:0x19 DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x4e71:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x4e77:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	9                               # DW_AT_count
	.byte	86                              # Abbrev [86] 0x4e7d:0x7 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.short	256                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x4e85:0x18 DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x4e8a:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x4e90:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	9                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x4e96:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	64                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x4e9d:0x12 DW_TAG_array_type
	.long	11054                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x4ea2:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x4ea8:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	9                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x4eaf:0x12 DW_TAG_array_type
	.long	2654                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x4eb4:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x4eba:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	9                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x4ec1:0x18 DW_TAG_array_type
	.long	2545                            # DW_AT_type
	.byte	33                              # Abbrev [33] 0x4ec6:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	8                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x4ecc:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	8                               # DW_AT_count
	.byte	33                              # Abbrev [33] 0x4ed2:0x6 DW_TAG_subrange_type
	.long	2565                            # DW_AT_type
	.byte	8                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
.Ldebug_info_end0:
	.section	.debug_rnglists,"",@progbits
	.long	.Ldebug_list_header_end1-.Ldebug_list_header_start1 # Length
.Ldebug_list_header_start1:
	.short	5                               # Version
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
	.long	60                              # Offset entry count
.Lrnglists_table_base0:
	.long	.Ldebug_ranges0-.Lrnglists_table_base0
	.long	.Ldebug_ranges1-.Lrnglists_table_base0
	.long	.Ldebug_ranges2-.Lrnglists_table_base0
	.long	.Ldebug_ranges3-.Lrnglists_table_base0
	.long	.Ldebug_ranges4-.Lrnglists_table_base0
	.long	.Ldebug_ranges5-.Lrnglists_table_base0
	.long	.Ldebug_ranges6-.Lrnglists_table_base0
	.long	.Ldebug_ranges7-.Lrnglists_table_base0
	.long	.Ldebug_ranges8-.Lrnglists_table_base0
	.long	.Ldebug_ranges9-.Lrnglists_table_base0
	.long	.Ldebug_ranges10-.Lrnglists_table_base0
	.long	.Ldebug_ranges11-.Lrnglists_table_base0
	.long	.Ldebug_ranges12-.Lrnglists_table_base0
	.long	.Ldebug_ranges13-.Lrnglists_table_base0
	.long	.Ldebug_ranges14-.Lrnglists_table_base0
	.long	.Ldebug_ranges15-.Lrnglists_table_base0
	.long	.Ldebug_ranges16-.Lrnglists_table_base0
	.long	.Ldebug_ranges17-.Lrnglists_table_base0
	.long	.Ldebug_ranges18-.Lrnglists_table_base0
	.long	.Ldebug_ranges19-.Lrnglists_table_base0
	.long	.Ldebug_ranges20-.Lrnglists_table_base0
	.long	.Ldebug_ranges21-.Lrnglists_table_base0
	.long	.Ldebug_ranges22-.Lrnglists_table_base0
	.long	.Ldebug_ranges23-.Lrnglists_table_base0
	.long	.Ldebug_ranges24-.Lrnglists_table_base0
	.long	.Ldebug_ranges25-.Lrnglists_table_base0
	.long	.Ldebug_ranges26-.Lrnglists_table_base0
	.long	.Ldebug_ranges27-.Lrnglists_table_base0
	.long	.Ldebug_ranges28-.Lrnglists_table_base0
	.long	.Ldebug_ranges29-.Lrnglists_table_base0
	.long	.Ldebug_ranges30-.Lrnglists_table_base0
	.long	.Ldebug_ranges31-.Lrnglists_table_base0
	.long	.Ldebug_ranges32-.Lrnglists_table_base0
	.long	.Ldebug_ranges33-.Lrnglists_table_base0
	.long	.Ldebug_ranges34-.Lrnglists_table_base0
	.long	.Ldebug_ranges35-.Lrnglists_table_base0
	.long	.Ldebug_ranges36-.Lrnglists_table_base0
	.long	.Ldebug_ranges37-.Lrnglists_table_base0
	.long	.Ldebug_ranges38-.Lrnglists_table_base0
	.long	.Ldebug_ranges39-.Lrnglists_table_base0
	.long	.Ldebug_ranges40-.Lrnglists_table_base0
	.long	.Ldebug_ranges41-.Lrnglists_table_base0
	.long	.Ldebug_ranges42-.Lrnglists_table_base0
	.long	.Ldebug_ranges43-.Lrnglists_table_base0
	.long	.Ldebug_ranges44-.Lrnglists_table_base0
	.long	.Ldebug_ranges45-.Lrnglists_table_base0
	.long	.Ldebug_ranges46-.Lrnglists_table_base0
	.long	.Ldebug_ranges47-.Lrnglists_table_base0
	.long	.Ldebug_ranges48-.Lrnglists_table_base0
	.long	.Ldebug_ranges49-.Lrnglists_table_base0
	.long	.Ldebug_ranges50-.Lrnglists_table_base0
	.long	.Ldebug_ranges51-.Lrnglists_table_base0
	.long	.Ldebug_ranges52-.Lrnglists_table_base0
	.long	.Ldebug_ranges53-.Lrnglists_table_base0
	.long	.Ldebug_ranges54-.Lrnglists_table_base0
	.long	.Ldebug_ranges55-.Lrnglists_table_base0
	.long	.Ldebug_ranges56-.Lrnglists_table_base0
	.long	.Ldebug_ranges57-.Lrnglists_table_base0
	.long	.Ldebug_ranges58-.Lrnglists_table_base0
	.long	.Ldebug_ranges59-.Lrnglists_table_base0
.Ldebug_ranges0:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp10-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp13-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp15-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp16-.Lfunc_begin0          #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges1:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp16-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp17-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp19-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp20-.Lfunc_begin0          #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges2:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp85-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp88-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp116-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp160-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges3:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp85-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp88-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp116-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp132-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges4:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp85-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp88-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp116-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp132-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges5:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp120-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp121-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp127-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp128-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges6:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp170-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp190-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp334-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp450-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp455-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp588-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp636-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp652-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges7:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp346-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp446-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp455-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp524-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp636-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp652-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges8:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp354-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp356-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp455-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp520-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges9:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp457-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp459-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp462-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp520-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges10:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp508-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp512-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp515-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp520-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges11:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp382-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp385-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp389-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp395-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges12:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp382-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp383-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp389-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp390-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp392-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp393-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges13:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp403-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp406-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp407-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp446-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges14:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp407-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp428-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp429-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp437-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp438-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp446-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges15:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp522-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp524-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp638-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp652-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges16:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp447-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp450-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp527-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp588-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges17:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp191-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp250-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp451-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp452-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp591-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp629-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp658-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp729-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp790-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp951-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp953-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1172-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1347-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges18:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp660-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp685-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp689-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp690-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp691-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp694-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges19:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp685-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp689-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp690-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp691-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp694-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp715-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges20:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp798-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp845-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp880-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp951-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp953-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1036-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges21:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp800-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp845-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp880-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp951-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp953-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp982-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges22:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp724-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp729-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp790-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp795-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp847-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp879-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges23:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1172-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1208-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1211-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1212-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges24:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1146-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1172-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1175-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges25:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1210-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1211-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1214-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1237-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges26:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1247-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1322-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1344-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1345-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges27:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp250-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp277-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp633-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp634-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges28:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp252-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp256-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp262-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp263-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges29:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp278-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp332-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp453-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp454-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp733-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp768-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges30:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp303-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp305-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp306-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp332-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges31:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp734-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp740-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp748-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp749-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges32:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp751-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp754-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp762-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp763-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges33:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1377-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1386-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1463-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1478-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges34:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1388-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1424-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1478-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges35:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1432-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1463-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1484-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1486-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges36:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1497-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1511-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1514-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1587-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1589-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1633-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1636-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1681-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges37:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1506-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1511-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1514-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1587-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1589-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1633-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1636-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1681-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges38:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1784-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1801-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1802-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1823-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1824-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1858-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1859-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1897-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges39:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1784-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1801-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1802-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1823-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1824-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1858-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1859-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1893-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges40:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1790-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1801-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1802-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges41:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1795-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1801-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1802-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges42:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1811-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1823-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1824-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges43:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1817-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1823-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1824-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges44:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1858-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1859-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges45:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1833-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1836-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1841-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1842-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1844-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1858-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1859-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges46:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1833-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1836-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1850-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1858-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1859-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges47:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1953-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1955-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1957-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2009-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges48:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1953-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1955-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1958-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2009-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges49:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2053-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2054-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2055-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2102-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges50:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2053-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2054-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2056-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2102-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges51:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2286-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2289-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2291-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2319-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2327-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges52:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2286-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2289-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2291-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2319-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2327-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2378-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2379-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2397-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2399-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges53:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2291-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2319-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2327-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2363-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2368-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2379-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2397-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges54:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2305-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2319-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2342-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2356-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2379-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2397-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges55:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2305-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2307-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2342-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2344-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2379-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2381-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges56:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2266-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2274-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2442-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2465-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges57:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2268-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2274-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2442-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2465-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges58:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2467-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2470-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2472-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2520-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges59:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2467-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2470-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2473-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2520-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_list_header_end1:
	.section	.debug_str_offsets,"",@progbits
	.long	3808                            # Length of String Offsets Set
	.short	5
	.short	0
.Lstr_offsets_base0:
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)" # string offset=0
.Linfo_string1:
	.asciz	"x264_src/encoder/me.c"         # string offset=105
.Linfo_string2:
	.asciz	"/home/yjs/workspace/x264-test/src" # string offset=127
.Linfo_string3:
	.asciz	"x264_pixel_size_shift"         # string offset=161
.Linfo_string4:
	.asciz	"unsigned char"                 # string offset=183
.Linfo_string5:
	.asciz	"__uint8_t"                     # string offset=197
.Linfo_string6:
	.asciz	"uint8_t"                       # string offset=207
.Linfo_string7:
	.asciz	"__ARRAY_SIZE_TYPE__"           # string offset=215
.Linfo_string8:
	.asciz	"range_mul"                     # string offset=235
.Linfo_string9:
	.asciz	"hex4"                          # string offset=245
.Linfo_string10:
	.asciz	"signed char"                   # string offset=250
.Linfo_string11:
	.asciz	"__int8_t"                      # string offset=262
.Linfo_string12:
	.asciz	"int8_t"                        # string offset=271
.Linfo_string13:
	.asciz	"zero"                          # string offset=278
.Linfo_string14:
	.asciz	"x264_iter_kludge"              # string offset=283
.Linfo_string15:
	.asciz	"int"                           # string offset=300
.Linfo_string16:
	.asciz	"x264_pixel_size"               # string offset=304
.Linfo_string17:
	.asciz	"w"                             # string offset=320
.Linfo_string18:
	.asciz	"h"                             # string offset=322
.Linfo_string19:
	.asciz	"hex2"                          # string offset=324
.Linfo_string20:
	.asciz	"mod6m1"                        # string offset=329
.Linfo_string21:
	.asciz	"square1"                       # string offset=336
.Linfo_string22:
	.asciz	"subpel_iterations"             # string offset=344
.Linfo_string23:
	.asciz	"dia4d"                         # string offset=362
.Linfo_string24:
	.asciz	"x264_scan8"                    # string offset=368
.Linfo_string25:
	.asciz	"block_idx_xy_fdec"             # string offset=379
.Linfo_string26:
	.asciz	"unsigned short"                # string offset=397
.Linfo_string27:
	.asciz	"__uint16_t"                    # string offset=412
.Linfo_string28:
	.asciz	"uint16_t"                      # string offset=423
.Linfo_string29:
	.asciz	"block_idx_x"                   # string offset=432
.Linfo_string30:
	.asciz	"block_idx_y"                   # string offset=444
.Linfo_string31:
	.asciz	"unsigned int"                  # string offset=456
.Linfo_string32:
	.asciz	"PIXEL_16x16"                   # string offset=469
.Linfo_string33:
	.asciz	"PIXEL_16x8"                    # string offset=481
.Linfo_string34:
	.asciz	"PIXEL_8x16"                    # string offset=492
.Linfo_string35:
	.asciz	"PIXEL_8x8"                     # string offset=503
.Linfo_string36:
	.asciz	"PIXEL_8x4"                     # string offset=513
.Linfo_string37:
	.asciz	"PIXEL_4x8"                     # string offset=523
.Linfo_string38:
	.asciz	"PIXEL_4x4"                     # string offset=533
.Linfo_string39:
	.asciz	"PIXEL_4x2"                     # string offset=543
.Linfo_string40:
	.asciz	"PIXEL_2x4"                     # string offset=553
.Linfo_string41:
	.asciz	"PIXEL_2x2"                     # string offset=563
.Linfo_string42:
	.asciz	"i"                             # string offset=573
.Linfo_string43:
	.asciz	"__uint32_t"                    # string offset=575
.Linfo_string44:
	.asciz	"uint32_t"                      # string offset=586
.Linfo_string45:
	.asciz	"b"                             # string offset=595
.Linfo_string46:
	.asciz	"c"                             # string offset=597
.Linfo_string47:
	.asciz	"x264_union32_t"                # string offset=599
.Linfo_string48:
	.asciz	"sad"                           # string offset=614
.Linfo_string49:
	.asciz	"mv"                            # string offset=618
.Linfo_string50:
	.asciz	"short"                         # string offset=621
.Linfo_string51:
	.asciz	"__int16_t"                     # string offset=627
.Linfo_string52:
	.asciz	"int16_t"                       # string offset=637
.Linfo_string53:
	.asciz	"mvsad_t"                       # string offset=645
.Linfo_string54:
	.asciz	"unsigned long"                 # string offset=653
.Linfo_string55:
	.asciz	"__uint64_t"                    # string offset=667
.Linfo_string56:
	.asciz	"uint64_t"                      # string offset=678
.Linfo_string57:
	.asciz	"a"                             # string offset=687
.Linfo_string58:
	.asciz	"x264_union64_t"                # string offset=689
.Linfo_string59:
	.asciz	"x264_union16_t"                # string offset=704
.Linfo_string60:
	.asciz	"x264_clip3"                    # string offset=719
.Linfo_string61:
	.asciz	"v"                             # string offset=730
.Linfo_string62:
	.asciz	"i_min"                         # string offset=732
.Linfo_string63:
	.asciz	"i_max"                         # string offset=738
.Linfo_string64:
	.asciz	"pack16to32_mask"               # string offset=744
.Linfo_string65:
	.asciz	"x264_predictor_roundclip"      # string offset=760
.Linfo_string66:
	.asciz	"dst"                           # string offset=785
.Linfo_string67:
	.asciz	"mvc"                           # string offset=789
.Linfo_string68:
	.asciz	"i_mvc"                         # string offset=793
.Linfo_string69:
	.asciz	"mv_x_min"                      # string offset=799
.Linfo_string70:
	.asciz	"mv_x_max"                      # string offset=808
.Linfo_string71:
	.asciz	"mv_y_min"                      # string offset=817
.Linfo_string72:
	.asciz	"mv_y_max"                      # string offset=826
.Linfo_string73:
	.asciz	"mx"                            # string offset=835
.Linfo_string74:
	.asciz	"my"                            # string offset=838
.Linfo_string75:
	.asciz	"x264_predictor_difference"     # string offset=841
.Linfo_string76:
	.asciz	"long"                          # string offset=867
.Linfo_string77:
	.asciz	"intptr_t"                      # string offset=872
.Linfo_string78:
	.asciz	"sum"                           # string offset=881
.Linfo_string79:
	.asciz	"x264_macroblock_cache_mv"      # string offset=885
.Linfo_string80:
	.asciz	"param"                         # string offset=910
.Linfo_string81:
	.asciz	"cpu"                           # string offset=916
.Linfo_string82:
	.asciz	"i_threads"                     # string offset=920
.Linfo_string83:
	.asciz	"b_sliced_threads"              # string offset=930
.Linfo_string84:
	.asciz	"b_deterministic"               # string offset=947
.Linfo_string85:
	.asciz	"i_sync_lookahead"              # string offset=963
.Linfo_string86:
	.asciz	"i_width"                       # string offset=980
.Linfo_string87:
	.asciz	"i_height"                      # string offset=988
.Linfo_string88:
	.asciz	"i_csp"                         # string offset=997
.Linfo_string89:
	.asciz	"i_level_idc"                   # string offset=1003
.Linfo_string90:
	.asciz	"i_frame_total"                 # string offset=1015
.Linfo_string91:
	.asciz	"i_nal_hrd"                     # string offset=1029
.Linfo_string92:
	.asciz	"vui"                           # string offset=1039
.Linfo_string93:
	.asciz	"i_sar_height"                  # string offset=1043
.Linfo_string94:
	.asciz	"i_sar_width"                   # string offset=1056
.Linfo_string95:
	.asciz	"i_overscan"                    # string offset=1068
.Linfo_string96:
	.asciz	"i_vidformat"                   # string offset=1079
.Linfo_string97:
	.asciz	"b_fullrange"                   # string offset=1091
.Linfo_string98:
	.asciz	"i_colorprim"                   # string offset=1103
.Linfo_string99:
	.asciz	"i_transfer"                    # string offset=1115
.Linfo_string100:
	.asciz	"i_colmatrix"                   # string offset=1126
.Linfo_string101:
	.asciz	"i_chroma_loc"                  # string offset=1138
.Linfo_string102:
	.asciz	"i_frame_reference"             # string offset=1151
.Linfo_string103:
	.asciz	"i_keyint_max"                  # string offset=1169
.Linfo_string104:
	.asciz	"i_keyint_min"                  # string offset=1182
.Linfo_string105:
	.asciz	"i_scenecut_threshold"          # string offset=1195
.Linfo_string106:
	.asciz	"b_intra_refresh"               # string offset=1216
.Linfo_string107:
	.asciz	"i_bframe"                      # string offset=1232
.Linfo_string108:
	.asciz	"i_bframe_adaptive"             # string offset=1241
.Linfo_string109:
	.asciz	"i_bframe_bias"                 # string offset=1259
.Linfo_string110:
	.asciz	"i_bframe_pyramid"              # string offset=1273
.Linfo_string111:
	.asciz	"b_deblocking_filter"           # string offset=1290
.Linfo_string112:
	.asciz	"i_deblocking_filter_alphac0"   # string offset=1310
.Linfo_string113:
	.asciz	"i_deblocking_filter_beta"      # string offset=1338
.Linfo_string114:
	.asciz	"b_cabac"                       # string offset=1363
.Linfo_string115:
	.asciz	"i_cabac_init_idc"              # string offset=1371
.Linfo_string116:
	.asciz	"b_interlaced"                  # string offset=1388
.Linfo_string117:
	.asciz	"b_constrained_intra"           # string offset=1401
.Linfo_string118:
	.asciz	"i_cqm_preset"                  # string offset=1421
.Linfo_string119:
	.asciz	"psz_cqm_file"                  # string offset=1434
.Linfo_string120:
	.asciz	"char"                          # string offset=1447
.Linfo_string121:
	.asciz	"cqm_4iy"                       # string offset=1452
.Linfo_string122:
	.asciz	"cqm_4ic"                       # string offset=1460
.Linfo_string123:
	.asciz	"cqm_4py"                       # string offset=1468
.Linfo_string124:
	.asciz	"cqm_4pc"                       # string offset=1476
.Linfo_string125:
	.asciz	"cqm_8iy"                       # string offset=1484
.Linfo_string126:
	.asciz	"cqm_8py"                       # string offset=1492
.Linfo_string127:
	.asciz	"pf_log"                        # string offset=1500
.Linfo_string128:
	.asciz	"gp_offset"                     # string offset=1507
.Linfo_string129:
	.asciz	"fp_offset"                     # string offset=1517
.Linfo_string130:
	.asciz	"overflow_arg_area"             # string offset=1527
.Linfo_string131:
	.asciz	"reg_save_area"                 # string offset=1545
.Linfo_string132:
	.asciz	"__va_list_tag"                 # string offset=1559
.Linfo_string133:
	.asciz	"p_log_private"                 # string offset=1573
.Linfo_string134:
	.asciz	"i_log_level"                   # string offset=1587
.Linfo_string135:
	.asciz	"b_visualize"                   # string offset=1599
.Linfo_string136:
	.asciz	"psz_dump_yuv"                  # string offset=1611
.Linfo_string137:
	.asciz	"analyse"                       # string offset=1624
.Linfo_string138:
	.asciz	"intra"                         # string offset=1632
.Linfo_string139:
	.asciz	"inter"                         # string offset=1638
.Linfo_string140:
	.asciz	"b_transform_8x8"               # string offset=1644
.Linfo_string141:
	.asciz	"i_weighted_pred"               # string offset=1660
.Linfo_string142:
	.asciz	"b_weighted_bipred"             # string offset=1676
.Linfo_string143:
	.asciz	"i_direct_mv_pred"              # string offset=1694
.Linfo_string144:
	.asciz	"i_chroma_qp_offset"            # string offset=1711
.Linfo_string145:
	.asciz	"i_me_method"                   # string offset=1730
.Linfo_string146:
	.asciz	"i_me_range"                    # string offset=1742
.Linfo_string147:
	.asciz	"i_mv_range"                    # string offset=1753
.Linfo_string148:
	.asciz	"i_mv_range_thread"             # string offset=1764
.Linfo_string149:
	.asciz	"i_subpel_refine"               # string offset=1782
.Linfo_string150:
	.asciz	"b_chroma_me"                   # string offset=1798
.Linfo_string151:
	.asciz	"b_mixed_references"            # string offset=1810
.Linfo_string152:
	.asciz	"i_trellis"                     # string offset=1829
.Linfo_string153:
	.asciz	"b_fast_pskip"                  # string offset=1839
.Linfo_string154:
	.asciz	"b_dct_decimate"                # string offset=1852
.Linfo_string155:
	.asciz	"i_noise_reduction"             # string offset=1867
.Linfo_string156:
	.asciz	"f_psy_rd"                      # string offset=1885
.Linfo_string157:
	.asciz	"float"                         # string offset=1894
.Linfo_string158:
	.asciz	"f_psy_trellis"                 # string offset=1900
.Linfo_string159:
	.asciz	"b_psy"                         # string offset=1914
.Linfo_string160:
	.asciz	"i_luma_deadzone"               # string offset=1920
.Linfo_string161:
	.asciz	"b_psnr"                        # string offset=1936
.Linfo_string162:
	.asciz	"b_ssim"                        # string offset=1943
.Linfo_string163:
	.asciz	"rc"                            # string offset=1950
.Linfo_string164:
	.asciz	"i_rc_method"                   # string offset=1953
.Linfo_string165:
	.asciz	"i_qp_constant"                 # string offset=1965
.Linfo_string166:
	.asciz	"i_qp_min"                      # string offset=1979
.Linfo_string167:
	.asciz	"i_qp_max"                      # string offset=1988
.Linfo_string168:
	.asciz	"i_qp_step"                     # string offset=1997
.Linfo_string169:
	.asciz	"i_bitrate"                     # string offset=2007
.Linfo_string170:
	.asciz	"f_rf_constant"                 # string offset=2017
.Linfo_string171:
	.asciz	"f_rf_constant_max"             # string offset=2031
.Linfo_string172:
	.asciz	"f_rate_tolerance"              # string offset=2049
.Linfo_string173:
	.asciz	"i_vbv_max_bitrate"             # string offset=2066
.Linfo_string174:
	.asciz	"i_vbv_buffer_size"             # string offset=2084
.Linfo_string175:
	.asciz	"f_vbv_buffer_init"             # string offset=2102
.Linfo_string176:
	.asciz	"f_ip_factor"                   # string offset=2120
.Linfo_string177:
	.asciz	"f_pb_factor"                   # string offset=2132
.Linfo_string178:
	.asciz	"i_aq_mode"                     # string offset=2144
.Linfo_string179:
	.asciz	"f_aq_strength"                 # string offset=2154
.Linfo_string180:
	.asciz	"b_mb_tree"                     # string offset=2168
.Linfo_string181:
	.asciz	"i_lookahead"                   # string offset=2178
.Linfo_string182:
	.asciz	"b_stat_write"                  # string offset=2190
.Linfo_string183:
	.asciz	"psz_stat_out"                  # string offset=2203
.Linfo_string184:
	.asciz	"b_stat_read"                   # string offset=2216
.Linfo_string185:
	.asciz	"psz_stat_in"                   # string offset=2228
.Linfo_string186:
	.asciz	"f_qcompress"                   # string offset=2240
.Linfo_string187:
	.asciz	"f_qblur"                       # string offset=2252
.Linfo_string188:
	.asciz	"f_complexity_blur"             # string offset=2260
.Linfo_string189:
	.asciz	"zones"                         # string offset=2278
.Linfo_string190:
	.asciz	"i_start"                       # string offset=2284
.Linfo_string191:
	.asciz	"i_end"                         # string offset=2292
.Linfo_string192:
	.asciz	"b_force_qp"                    # string offset=2298
.Linfo_string193:
	.asciz	"i_qp"                          # string offset=2309
.Linfo_string194:
	.asciz	"f_bitrate_factor"              # string offset=2314
.Linfo_string195:
	.asciz	"x264_zone_t"                   # string offset=2331
.Linfo_string196:
	.asciz	"i_zones"                       # string offset=2343
.Linfo_string197:
	.asciz	"psz_zones"                     # string offset=2351
.Linfo_string198:
	.asciz	"b_aud"                         # string offset=2361
.Linfo_string199:
	.asciz	"b_repeat_headers"              # string offset=2367
.Linfo_string200:
	.asciz	"b_annexb"                      # string offset=2384
.Linfo_string201:
	.asciz	"i_sps_id"                      # string offset=2393
.Linfo_string202:
	.asciz	"b_vfr_input"                   # string offset=2402
.Linfo_string203:
	.asciz	"i_fps_num"                     # string offset=2414
.Linfo_string204:
	.asciz	"i_fps_den"                     # string offset=2424
.Linfo_string205:
	.asciz	"i_timebase_num"                # string offset=2434
.Linfo_string206:
	.asciz	"i_timebase_den"                # string offset=2449
.Linfo_string207:
	.asciz	"b_dts_compress"                # string offset=2464
.Linfo_string208:
	.asciz	"b_tff"                         # string offset=2479
.Linfo_string209:
	.asciz	"b_pic_struct"                  # string offset=2485
.Linfo_string210:
	.asciz	"b_fake_interlaced"             # string offset=2498
.Linfo_string211:
	.asciz	"i_slice_max_size"              # string offset=2516
.Linfo_string212:
	.asciz	"i_slice_max_mbs"               # string offset=2533
.Linfo_string213:
	.asciz	"i_slice_count"                 # string offset=2549
.Linfo_string214:
	.asciz	"param_free"                    # string offset=2563
.Linfo_string215:
	.asciz	"x264_param_t"                  # string offset=2574
.Linfo_string216:
	.asciz	"thread"                        # string offset=2587
.Linfo_string217:
	.asciz	"thread_handle"                 # string offset=2594
.Linfo_string218:
	.asciz	"b_thread_active"               # string offset=2608
.Linfo_string219:
	.asciz	"i_thread_phase"                # string offset=2624
.Linfo_string220:
	.asciz	"i_threadslice_start"           # string offset=2639
.Linfo_string221:
	.asciz	"i_threadslice_end"             # string offset=2659
.Linfo_string222:
	.asciz	"out"                           # string offset=2677
.Linfo_string223:
	.asciz	"i_nal"                         # string offset=2681
.Linfo_string224:
	.asciz	"i_nals_allocated"              # string offset=2687
.Linfo_string225:
	.asciz	"nal"                           # string offset=2704
.Linfo_string226:
	.asciz	"i_ref_idc"                     # string offset=2708
.Linfo_string227:
	.asciz	"i_type"                        # string offset=2718
.Linfo_string228:
	.asciz	"i_payload"                     # string offset=2725
.Linfo_string229:
	.asciz	"p_payload"                     # string offset=2735
.Linfo_string230:
	.asciz	"x264_nal_t"                    # string offset=2745
.Linfo_string231:
	.asciz	"i_bitstream"                   # string offset=2756
.Linfo_string232:
	.asciz	"p_bitstream"                   # string offset=2768
.Linfo_string233:
	.asciz	"bs"                            # string offset=2780
.Linfo_string234:
	.asciz	"p_start"                       # string offset=2783
.Linfo_string235:
	.asciz	"p"                             # string offset=2791
.Linfo_string236:
	.asciz	"p_end"                         # string offset=2793
.Linfo_string237:
	.asciz	"cur_bits"                      # string offset=2799
.Linfo_string238:
	.asciz	"i_left"                        # string offset=2808
.Linfo_string239:
	.asciz	"i_bits_encoded"                # string offset=2815
.Linfo_string240:
	.asciz	"bs_s"                          # string offset=2830
.Linfo_string241:
	.asciz	"bs_t"                          # string offset=2835
.Linfo_string242:
	.asciz	"nal_buffer"                    # string offset=2840
.Linfo_string243:
	.asciz	"nal_buffer_size"               # string offset=2851
.Linfo_string244:
	.asciz	"i_frame"                       # string offset=2867
.Linfo_string245:
	.asciz	"i_frame_num"                   # string offset=2875
.Linfo_string246:
	.asciz	"i_thread_frames"               # string offset=2887
.Linfo_string247:
	.asciz	"i_nal_type"                    # string offset=2903
.Linfo_string248:
	.asciz	"i_nal_ref_idc"                 # string offset=2914
.Linfo_string249:
	.asciz	"i_disp_fields"                 # string offset=2928
.Linfo_string250:
	.asciz	"i_disp_fields_last_frame"      # string offset=2942
.Linfo_string251:
	.asciz	"i_prev_duration"               # string offset=2967
.Linfo_string252:
	.asciz	"i_coded_fields"                # string offset=2983
.Linfo_string253:
	.asciz	"i_cpb_delay"                   # string offset=2998
.Linfo_string254:
	.asciz	"i_coded_fields_lookahead"      # string offset=3010
.Linfo_string255:
	.asciz	"i_cpb_delay_lookahead"         # string offset=3035
.Linfo_string256:
	.asciz	"b_queued_intra_refresh"        # string offset=3057
.Linfo_string257:
	.asciz	"sps_array"                     # string offset=3080
.Linfo_string258:
	.asciz	"i_id"                          # string offset=3090
.Linfo_string259:
	.asciz	"i_profile_idc"                 # string offset=3095
.Linfo_string260:
	.asciz	"b_constraint_set0"             # string offset=3109
.Linfo_string261:
	.asciz	"b_constraint_set1"             # string offset=3127
.Linfo_string262:
	.asciz	"b_constraint_set2"             # string offset=3145
.Linfo_string263:
	.asciz	"i_log2_max_frame_num"          # string offset=3163
.Linfo_string264:
	.asciz	"i_poc_type"                    # string offset=3184
.Linfo_string265:
	.asciz	"i_log2_max_poc_lsb"            # string offset=3195
.Linfo_string266:
	.asciz	"b_delta_pic_order_always_zero" # string offset=3214
.Linfo_string267:
	.asciz	"i_offset_for_non_ref_pic"      # string offset=3244
.Linfo_string268:
	.asciz	"i_offset_for_top_to_bottom_field" # string offset=3269
.Linfo_string269:
	.asciz	"i_num_ref_frames_in_poc_cycle" # string offset=3302
.Linfo_string270:
	.asciz	"i_offset_for_ref_frame"        # string offset=3332
.Linfo_string271:
	.asciz	"i_num_ref_frames"              # string offset=3355
.Linfo_string272:
	.asciz	"b_gaps_in_frame_num_value_allowed" # string offset=3372
.Linfo_string273:
	.asciz	"i_mb_width"                    # string offset=3406
.Linfo_string274:
	.asciz	"i_mb_height"                   # string offset=3417
.Linfo_string275:
	.asciz	"b_frame_mbs_only"              # string offset=3429
.Linfo_string276:
	.asciz	"b_mb_adaptive_frame_field"     # string offset=3446
.Linfo_string277:
	.asciz	"b_direct8x8_inference"         # string offset=3472
.Linfo_string278:
	.asciz	"b_crop"                        # string offset=3494
.Linfo_string279:
	.asciz	"crop"                          # string offset=3501
.Linfo_string280:
	.asciz	"i_right"                       # string offset=3506
.Linfo_string281:
	.asciz	"i_top"                         # string offset=3514
.Linfo_string282:
	.asciz	"i_bottom"                      # string offset=3520
.Linfo_string283:
	.asciz	"b_vui"                         # string offset=3529
.Linfo_string284:
	.asciz	"b_aspect_ratio_info_present"   # string offset=3535
.Linfo_string285:
	.asciz	"b_overscan_info_present"       # string offset=3563
.Linfo_string286:
	.asciz	"b_overscan_info"               # string offset=3587
.Linfo_string287:
	.asciz	"b_signal_type_present"         # string offset=3603
.Linfo_string288:
	.asciz	"b_color_description_present"   # string offset=3625
.Linfo_string289:
	.asciz	"b_chroma_loc_info_present"     # string offset=3653
.Linfo_string290:
	.asciz	"i_chroma_loc_top"              # string offset=3679
.Linfo_string291:
	.asciz	"i_chroma_loc_bottom"           # string offset=3696
.Linfo_string292:
	.asciz	"b_timing_info_present"         # string offset=3716
.Linfo_string293:
	.asciz	"i_num_units_in_tick"           # string offset=3738
.Linfo_string294:
	.asciz	"i_time_scale"                  # string offset=3758
.Linfo_string295:
	.asciz	"b_fixed_frame_rate"            # string offset=3771
.Linfo_string296:
	.asciz	"b_nal_hrd_parameters_present"  # string offset=3790
.Linfo_string297:
	.asciz	"b_vcl_hrd_parameters_present"  # string offset=3819
.Linfo_string298:
	.asciz	"hrd"                           # string offset=3848
.Linfo_string299:
	.asciz	"i_cpb_cnt"                     # string offset=3852
.Linfo_string300:
	.asciz	"i_bit_rate_scale"              # string offset=3862
.Linfo_string301:
	.asciz	"i_cpb_size_scale"              # string offset=3879
.Linfo_string302:
	.asciz	"i_bit_rate_value"              # string offset=3896
.Linfo_string303:
	.asciz	"i_cpb_size_value"              # string offset=3913
.Linfo_string304:
	.asciz	"i_bit_rate_unscaled"           # string offset=3930
.Linfo_string305:
	.asciz	"i_cpb_size_unscaled"           # string offset=3950
.Linfo_string306:
	.asciz	"b_cbr_hrd"                     # string offset=3970
.Linfo_string307:
	.asciz	"i_initial_cpb_removal_delay_length" # string offset=3980
.Linfo_string308:
	.asciz	"i_cpb_removal_delay_length"    # string offset=4015
.Linfo_string309:
	.asciz	"i_dpb_output_delay_length"     # string offset=4042
.Linfo_string310:
	.asciz	"i_time_offset_length"          # string offset=4068
.Linfo_string311:
	.asciz	"b_pic_struct_present"          # string offset=4089
.Linfo_string312:
	.asciz	"b_bitstream_restriction"       # string offset=4110
.Linfo_string313:
	.asciz	"b_motion_vectors_over_pic_boundaries" # string offset=4134
.Linfo_string314:
	.asciz	"i_max_bytes_per_pic_denom"     # string offset=4171
.Linfo_string315:
	.asciz	"i_max_bits_per_mb_denom"       # string offset=4197
.Linfo_string316:
	.asciz	"i_log2_max_mv_length_horizontal" # string offset=4221
.Linfo_string317:
	.asciz	"i_log2_max_mv_length_vertical" # string offset=4253
.Linfo_string318:
	.asciz	"i_num_reorder_frames"          # string offset=4283
.Linfo_string319:
	.asciz	"i_max_dec_frame_buffering"     # string offset=4304
.Linfo_string320:
	.asciz	"b_qpprime_y_zero_transform_bypass" # string offset=4330
.Linfo_string321:
	.asciz	"x264_sps_t"                    # string offset=4364
.Linfo_string322:
	.asciz	"sps"                           # string offset=4375
.Linfo_string323:
	.asciz	"pps_array"                     # string offset=4379
.Linfo_string324:
	.asciz	"b_pic_order"                   # string offset=4389
.Linfo_string325:
	.asciz	"i_num_slice_groups"            # string offset=4401
.Linfo_string326:
	.asciz	"i_num_ref_idx_l0_default_active" # string offset=4420
.Linfo_string327:
	.asciz	"i_num_ref_idx_l1_default_active" # string offset=4452
.Linfo_string328:
	.asciz	"b_weighted_pred"               # string offset=4484
.Linfo_string329:
	.asciz	"i_pic_init_qp"                 # string offset=4500
.Linfo_string330:
	.asciz	"i_pic_init_qs"                 # string offset=4514
.Linfo_string331:
	.asciz	"i_chroma_qp_index_offset"      # string offset=4528
.Linfo_string332:
	.asciz	"b_deblocking_filter_control"   # string offset=4553
.Linfo_string333:
	.asciz	"b_constrained_intra_pred"      # string offset=4581
.Linfo_string334:
	.asciz	"b_redundant_pic_cnt"           # string offset=4606
.Linfo_string335:
	.asciz	"b_transform_8x8_mode"          # string offset=4626
.Linfo_string336:
	.asciz	"scaling_list"                  # string offset=4647
.Linfo_string337:
	.asciz	"x264_pps_t"                    # string offset=4660
.Linfo_string338:
	.asciz	"pps"                           # string offset=4671
.Linfo_string339:
	.asciz	"i_idr_pic_id"                  # string offset=4675
.Linfo_string340:
	.asciz	"i_dts_compress_multiplier"     # string offset=4688
.Linfo_string341:
	.asciz	"dequant4_mf"                   # string offset=4714
.Linfo_string342:
	.asciz	"dequant8_mf"                   # string offset=4726
.Linfo_string343:
	.asciz	"unquant4_mf"                   # string offset=4738
.Linfo_string344:
	.asciz	"unquant8_mf"                   # string offset=4750
.Linfo_string345:
	.asciz	"quant4_mf"                     # string offset=4762
.Linfo_string346:
	.asciz	"quant8_mf"                     # string offset=4772
.Linfo_string347:
	.asciz	"quant4_bias"                   # string offset=4782
.Linfo_string348:
	.asciz	"quant8_bias"                   # string offset=4794
.Linfo_string349:
	.asciz	"cost_mv"                       # string offset=4806
.Linfo_string350:
	.asciz	"cost_mv_fpel"                  # string offset=4814
.Linfo_string351:
	.asciz	"chroma_qp_table"               # string offset=4827
.Linfo_string352:
	.asciz	"sh"                            # string offset=4843
.Linfo_string353:
	.asciz	"i_first_mb"                    # string offset=4846
.Linfo_string354:
	.asciz	"i_last_mb"                     # string offset=4857
.Linfo_string355:
	.asciz	"i_pps_id"                      # string offset=4867
.Linfo_string356:
	.asciz	"b_mbaff"                       # string offset=4876
.Linfo_string357:
	.asciz	"b_field_pic"                   # string offset=4884
.Linfo_string358:
	.asciz	"b_bottom_field"                # string offset=4896
.Linfo_string359:
	.asciz	"i_poc"                         # string offset=4911
.Linfo_string360:
	.asciz	"i_delta_poc_bottom"            # string offset=4917
.Linfo_string361:
	.asciz	"i_delta_poc"                   # string offset=4936
.Linfo_string362:
	.asciz	"i_redundant_pic_cnt"           # string offset=4948
.Linfo_string363:
	.asciz	"b_direct_spatial_mv_pred"      # string offset=4968
.Linfo_string364:
	.asciz	"b_num_ref_idx_override"        # string offset=4993
.Linfo_string365:
	.asciz	"i_num_ref_idx_l0_active"       # string offset=5016
.Linfo_string366:
	.asciz	"i_num_ref_idx_l1_active"       # string offset=5040
.Linfo_string367:
	.asciz	"b_ref_pic_list_reordering_l0"  # string offset=5064
.Linfo_string368:
	.asciz	"b_ref_pic_list_reordering_l1"  # string offset=5093
.Linfo_string369:
	.asciz	"ref_pic_list_order"            # string offset=5122
.Linfo_string370:
	.asciz	"idc"                           # string offset=5141
.Linfo_string371:
	.asciz	"arg"                           # string offset=5145
.Linfo_string372:
	.asciz	"weight"                        # string offset=5149
.Linfo_string373:
	.asciz	"cachea"                        # string offset=5156
.Linfo_string374:
	.asciz	"cacheb"                        # string offset=5163
.Linfo_string375:
	.asciz	"i_denom"                       # string offset=5170
.Linfo_string376:
	.asciz	"__int32_t"                     # string offset=5178
.Linfo_string377:
	.asciz	"int32_t"                       # string offset=5188
.Linfo_string378:
	.asciz	"i_scale"                       # string offset=5196
.Linfo_string379:
	.asciz	"i_offset"                      # string offset=5204
.Linfo_string380:
	.asciz	"weightfn"                      # string offset=5213
.Linfo_string381:
	.asciz	"weight_fn_t"                   # string offset=5222
.Linfo_string382:
	.asciz	"x264_weight_t"                 # string offset=5234
.Linfo_string383:
	.asciz	"i_mmco_remove_from_end"        # string offset=5248
.Linfo_string384:
	.asciz	"i_mmco_command_count"          # string offset=5271
.Linfo_string385:
	.asciz	"mmco"                          # string offset=5292
.Linfo_string386:
	.asciz	"i_difference_of_pic_nums"      # string offset=5297
.Linfo_string387:
	.asciz	"i_qp_delta"                    # string offset=5322
.Linfo_string388:
	.asciz	"b_sp_for_swidth"               # string offset=5333
.Linfo_string389:
	.asciz	"i_qs_delta"                    # string offset=5349
.Linfo_string390:
	.asciz	"i_disable_deblocking_filter_idc" # string offset=5360
.Linfo_string391:
	.asciz	"i_alpha_c0_offset"             # string offset=5392
.Linfo_string392:
	.asciz	"i_beta_offset"                 # string offset=5410
.Linfo_string393:
	.asciz	"x264_slice_header_t"           # string offset=5424
.Linfo_string394:
	.asciz	"cabac"                         # string offset=5444
.Linfo_string395:
	.asciz	"i_low"                         # string offset=5450
.Linfo_string396:
	.asciz	"i_range"                       # string offset=5456
.Linfo_string397:
	.asciz	"i_queue"                       # string offset=5464
.Linfo_string398:
	.asciz	"i_bytes_outstanding"           # string offset=5472
.Linfo_string399:
	.asciz	"f8_bits_encoded"               # string offset=5492
.Linfo_string400:
	.asciz	"state"                         # string offset=5508
.Linfo_string401:
	.asciz	"x264_cabac_t"                  # string offset=5514
.Linfo_string402:
	.asciz	"frames"                        # string offset=5527
.Linfo_string403:
	.asciz	"current"                       # string offset=5534
.Linfo_string404:
	.asciz	"i_qpplus1"                     # string offset=5542
.Linfo_string405:
	.asciz	"i_pts"                         # string offset=5552
.Linfo_string406:
	.asciz	"__int64_t"                     # string offset=5558
.Linfo_string407:
	.asciz	"int64_t"                       # string offset=5568
.Linfo_string408:
	.asciz	"i_reordered_pts"               # string offset=5576
.Linfo_string409:
	.asciz	"i_duration"                    # string offset=5592
.Linfo_string410:
	.asciz	"i_cpb_duration"                # string offset=5603
.Linfo_string411:
	.asciz	"i_dpb_output_delay"            # string offset=5618
.Linfo_string412:
	.asciz	"i_coded"                       # string offset=5637
.Linfo_string413:
	.asciz	"i_field_cnt"                   # string offset=5645
.Linfo_string414:
	.asciz	"b_kept_as_ref"                 # string offset=5657
.Linfo_string415:
	.asciz	"i_pic_struct"                  # string offset=5671
.Linfo_string416:
	.asciz	"b_keyframe"                    # string offset=5684
.Linfo_string417:
	.asciz	"b_fdec"                        # string offset=5695
.Linfo_string418:
	.asciz	"b_last_minigop_bframe"         # string offset=5702
.Linfo_string419:
	.asciz	"i_bframes"                     # string offset=5724
.Linfo_string420:
	.asciz	"f_qp_avg_rc"                   # string offset=5734
.Linfo_string421:
	.asciz	"f_qp_avg_aq"                   # string offset=5746
.Linfo_string422:
	.asciz	"i_poc_l0ref0"                  # string offset=5758
.Linfo_string423:
	.asciz	"i_plane"                       # string offset=5771
.Linfo_string424:
	.asciz	"i_stride"                      # string offset=5779
.Linfo_string425:
	.asciz	"i_lines"                       # string offset=5788
.Linfo_string426:
	.asciz	"i_stride_lowres"               # string offset=5796
.Linfo_string427:
	.asciz	"i_width_lowres"                # string offset=5812
.Linfo_string428:
	.asciz	"i_lines_lowres"                # string offset=5827
.Linfo_string429:
	.asciz	"plane"                         # string offset=5842
.Linfo_string430:
	.asciz	"filtered"                      # string offset=5848
.Linfo_string431:
	.asciz	"lowres"                        # string offset=5857
.Linfo_string432:
	.asciz	"integral"                      # string offset=5864
.Linfo_string433:
	.asciz	"buffer"                        # string offset=5873
.Linfo_string434:
	.asciz	"buffer_lowres"                 # string offset=5880
.Linfo_string435:
	.asciz	"weighted"                      # string offset=5894
.Linfo_string436:
	.asciz	"b_duplicate"                   # string offset=5903
.Linfo_string437:
	.asciz	"orig"                          # string offset=5915
.Linfo_string438:
	.asciz	"mb_type"                       # string offset=5920
.Linfo_string439:
	.asciz	"mb_partition"                  # string offset=5928
.Linfo_string440:
	.asciz	"mv16x16"                       # string offset=5941
.Linfo_string441:
	.asciz	"lowres_mvs"                    # string offset=5949
.Linfo_string442:
	.asciz	"lowres_costs"                  # string offset=5960
.Linfo_string443:
	.asciz	"lowres_mv_costs"               # string offset=5973
.Linfo_string444:
	.asciz	"ref"                           # string offset=5989
.Linfo_string445:
	.asciz	"i_ref"                         # string offset=5993
.Linfo_string446:
	.asciz	"ref_poc"                       # string offset=5999
.Linfo_string447:
	.asciz	"inv_ref_poc"                   # string offset=6007
.Linfo_string448:
	.asciz	"i_cost_est"                    # string offset=6019
.Linfo_string449:
	.asciz	"i_cost_est_aq"                 # string offset=6030
.Linfo_string450:
	.asciz	"i_satd"                        # string offset=6044
.Linfo_string451:
	.asciz	"i_intra_mbs"                   # string offset=6051
.Linfo_string452:
	.asciz	"i_row_satds"                   # string offset=6063
.Linfo_string453:
	.asciz	"i_row_satd"                    # string offset=6075
.Linfo_string454:
	.asciz	"i_row_bits"                    # string offset=6086
.Linfo_string455:
	.asciz	"f_row_qp"                      # string offset=6097
.Linfo_string456:
	.asciz	"f_qp_offset"                   # string offset=6106
.Linfo_string457:
	.asciz	"f_qp_offset_aq"                # string offset=6118
.Linfo_string458:
	.asciz	"b_intra_calculated"            # string offset=6133
.Linfo_string459:
	.asciz	"i_intra_cost"                  # string offset=6152
.Linfo_string460:
	.asciz	"i_propagate_cost"              # string offset=6165
.Linfo_string461:
	.asciz	"i_inv_qscale_factor"           # string offset=6182
.Linfo_string462:
	.asciz	"b_scenecut"                    # string offset=6202
.Linfo_string463:
	.asciz	"f_weighted_cost_delta"         # string offset=6213
.Linfo_string464:
	.asciz	"i_pixel_sum"                   # string offset=6235
.Linfo_string465:
	.asciz	"i_pixel_ssd"                   # string offset=6247
.Linfo_string466:
	.asciz	"hrd_timing"                    # string offset=6259
.Linfo_string467:
	.asciz	"cpb_initial_arrival_time"      # string offset=6270
.Linfo_string468:
	.asciz	"double"                        # string offset=6295
.Linfo_string469:
	.asciz	"cpb_final_arrival_time"        # string offset=6302
.Linfo_string470:
	.asciz	"cpb_removal_time"              # string offset=6325
.Linfo_string471:
	.asciz	"dpb_output_time"               # string offset=6342
.Linfo_string472:
	.asciz	"x264_hrd_t"                    # string offset=6358
.Linfo_string473:
	.asciz	"i_planned_type"                # string offset=6369
.Linfo_string474:
	.asciz	"i_planned_satd"                # string offset=6384
.Linfo_string475:
	.asciz	"f_planned_cpb_duration"        # string offset=6399
.Linfo_string476:
	.asciz	"i_lines_completed"             # string offset=6422
.Linfo_string477:
	.asciz	"i_lines_weighted"              # string offset=6440
.Linfo_string478:
	.asciz	"i_reference_count"             # string offset=6457
.Linfo_string479:
	.asciz	"mutex"                         # string offset=6475
.Linfo_string480:
	.asciz	"cv"                            # string offset=6481
.Linfo_string481:
	.asciz	"f_pir_position"                # string offset=6484
.Linfo_string482:
	.asciz	"i_pir_start_col"               # string offset=6499
.Linfo_string483:
	.asciz	"i_pir_end_col"                 # string offset=6515
.Linfo_string484:
	.asciz	"i_frames_since_pir"            # string offset=6529
.Linfo_string485:
	.asciz	"x264_frame"                    # string offset=6548
.Linfo_string486:
	.asciz	"x264_frame_t"                  # string offset=6559
.Linfo_string487:
	.asciz	"unused"                        # string offset=6572
.Linfo_string488:
	.asciz	"blank_unused"                  # string offset=6579
.Linfo_string489:
	.asciz	"reference"                     # string offset=6592
.Linfo_string490:
	.asciz	"i_last_keyframe"               # string offset=6602
.Linfo_string491:
	.asciz	"i_input"                       # string offset=6618
.Linfo_string492:
	.asciz	"i_max_dpb"                     # string offset=6626
.Linfo_string493:
	.asciz	"i_max_ref0"                    # string offset=6636
.Linfo_string494:
	.asciz	"i_max_ref1"                    # string offset=6647
.Linfo_string495:
	.asciz	"i_delay"                       # string offset=6658
.Linfo_string496:
	.asciz	"i_bframe_delay"                # string offset=6666
.Linfo_string497:
	.asciz	"i_bframe_delay_time"           # string offset=6681
.Linfo_string498:
	.asciz	"i_init_delta"                  # string offset=6701
.Linfo_string499:
	.asciz	"i_prev_reordered_pts"          # string offset=6714
.Linfo_string500:
	.asciz	"i_largest_pts"                 # string offset=6735
.Linfo_string501:
	.asciz	"i_second_largest_pts"          # string offset=6749
.Linfo_string502:
	.asciz	"b_have_lowres"                 # string offset=6770
.Linfo_string503:
	.asciz	"b_have_sub8x8_esa"             # string offset=6784
.Linfo_string504:
	.asciz	"fenc"                          # string offset=6802
.Linfo_string505:
	.asciz	"fdec"                          # string offset=6807
.Linfo_string506:
	.asciz	"i_ref0"                        # string offset=6812
.Linfo_string507:
	.asciz	"fref0"                         # string offset=6819
.Linfo_string508:
	.asciz	"i_ref1"                        # string offset=6825
.Linfo_string509:
	.asciz	"fref1"                         # string offset=6832
.Linfo_string510:
	.asciz	"b_ref_reorder"                 # string offset=6838
.Linfo_string511:
	.asciz	"initial_cpb_removal_delay"     # string offset=6852
.Linfo_string512:
	.asciz	"initial_cpb_removal_delay_offset" # string offset=6878
.Linfo_string513:
	.asciz	"i_reordered_pts_delay"         # string offset=6911
.Linfo_string514:
	.asciz	"dct"                           # string offset=6933
.Linfo_string515:
	.asciz	"luma16x16_dc"                  # string offset=6937
.Linfo_string516:
	.asciz	"chroma_dc"                     # string offset=6950
.Linfo_string517:
	.asciz	"luma8x8"                       # string offset=6960
.Linfo_string518:
	.asciz	"luma4x4"                       # string offset=6968
.Linfo_string519:
	.asciz	"mb"                            # string offset=6976
.Linfo_string520:
	.asciz	"i_mb_count"                    # string offset=6979
.Linfo_string521:
	.asciz	"i_mb_stride"                   # string offset=6990
.Linfo_string522:
	.asciz	"i_b8_stride"                   # string offset=7002
.Linfo_string523:
	.asciz	"i_b4_stride"                   # string offset=7014
.Linfo_string524:
	.asciz	"i_mb_x"                        # string offset=7026
.Linfo_string525:
	.asciz	"i_mb_y"                        # string offset=7033
.Linfo_string526:
	.asciz	"i_mb_xy"                       # string offset=7040
.Linfo_string527:
	.asciz	"i_b8_xy"                       # string offset=7048
.Linfo_string528:
	.asciz	"i_b4_xy"                       # string offset=7056
.Linfo_string529:
	.asciz	"b_trellis"                     # string offset=7064
.Linfo_string530:
	.asciz	"b_noise_reduction"             # string offset=7074
.Linfo_string531:
	.asciz	"i_psy_rd"                      # string offset=7092
.Linfo_string532:
	.asciz	"i_psy_trellis"                 # string offset=7101
.Linfo_string533:
	.asciz	"mv_min"                        # string offset=7115
.Linfo_string534:
	.asciz	"mv_max"                        # string offset=7122
.Linfo_string535:
	.asciz	"mv_min_spel"                   # string offset=7129
.Linfo_string536:
	.asciz	"mv_max_spel"                   # string offset=7141
.Linfo_string537:
	.asciz	"mv_min_fpel"                   # string offset=7153
.Linfo_string538:
	.asciz	"mv_max_fpel"                   # string offset=7165
.Linfo_string539:
	.asciz	"i_neighbour"                   # string offset=7177
.Linfo_string540:
	.asciz	"i_neighbour8"                  # string offset=7189
.Linfo_string541:
	.asciz	"i_neighbour4"                  # string offset=7202
.Linfo_string542:
	.asciz	"i_neighbour_intra"             # string offset=7215
.Linfo_string543:
	.asciz	"i_neighbour_frame"             # string offset=7233
.Linfo_string544:
	.asciz	"i_mb_type_top"                 # string offset=7251
.Linfo_string545:
	.asciz	"i_mb_type_left"                # string offset=7265
.Linfo_string546:
	.asciz	"i_mb_type_topleft"             # string offset=7280
.Linfo_string547:
	.asciz	"i_mb_type_topright"            # string offset=7298
.Linfo_string548:
	.asciz	"i_mb_prev_xy"                  # string offset=7317
.Linfo_string549:
	.asciz	"i_mb_left_xy"                  # string offset=7330
.Linfo_string550:
	.asciz	"i_mb_top_xy"                   # string offset=7343
.Linfo_string551:
	.asciz	"i_mb_topleft_xy"               # string offset=7355
.Linfo_string552:
	.asciz	"i_mb_topright_xy"              # string offset=7371
.Linfo_string553:
	.asciz	"type"                          # string offset=7388
.Linfo_string554:
	.asciz	"partition"                     # string offset=7393
.Linfo_string555:
	.asciz	"qp"                            # string offset=7403
.Linfo_string556:
	.asciz	"cbp"                           # string offset=7406
.Linfo_string557:
	.asciz	"intra4x4_pred_mode"            # string offset=7410
.Linfo_string558:
	.asciz	"non_zero_count"                # string offset=7429
.Linfo_string559:
	.asciz	"chroma_pred_mode"              # string offset=7444
.Linfo_string560:
	.asciz	"mvd"                           # string offset=7461
.Linfo_string561:
	.asciz	"mvr"                           # string offset=7465
.Linfo_string562:
	.asciz	"skipbp"                        # string offset=7469
.Linfo_string563:
	.asciz	"mb_transform_size"             # string offset=7476
.Linfo_string564:
	.asciz	"slice_table"                   # string offset=7494
.Linfo_string565:
	.asciz	"p_weight_buf"                  # string offset=7506
.Linfo_string566:
	.asciz	"i_partition"                   # string offset=7519
.Linfo_string567:
	.asciz	"i_sub_partition"               # string offset=7531
.Linfo_string568:
	.asciz	"i_cbp_luma"                    # string offset=7547
.Linfo_string569:
	.asciz	"i_cbp_chroma"                  # string offset=7558
.Linfo_string570:
	.asciz	"i_intra16x16_pred_mode"        # string offset=7571
.Linfo_string571:
	.asciz	"i_chroma_pred_mode"            # string offset=7594
.Linfo_string572:
	.asciz	"i_skip_intra"                  # string offset=7613
.Linfo_string573:
	.asciz	"b_skip_mc"                     # string offset=7626
.Linfo_string574:
	.asciz	"b_reencode_mb"                 # string offset=7636
.Linfo_string575:
	.asciz	"ip_offset"                     # string offset=7650
.Linfo_string576:
	.asciz	"pic"                           # string offset=7660
.Linfo_string577:
	.asciz	"fenc_buf"                      # string offset=7664
.Linfo_string578:
	.asciz	"fdec_buf"                      # string offset=7673
.Linfo_string579:
	.asciz	"i4x4_fdec_buf"                 # string offset=7682
.Linfo_string580:
	.asciz	"i8x8_fdec_buf"                 # string offset=7696
.Linfo_string581:
	.asciz	"i8x8_dct_buf"                  # string offset=7710
.Linfo_string582:
	.asciz	"i4x4_dct_buf"                  # string offset=7723
.Linfo_string583:
	.asciz	"i4x4_nnz_buf"                  # string offset=7736
.Linfo_string584:
	.asciz	"i8x8_nnz_buf"                  # string offset=7749
.Linfo_string585:
	.asciz	"i4x4_cbp"                      # string offset=7762
.Linfo_string586:
	.asciz	"i8x8_cbp"                      # string offset=7771
.Linfo_string587:
	.asciz	"fenc_dct8"                     # string offset=7780
.Linfo_string588:
	.asciz	"fenc_dct4"                     # string offset=7790
.Linfo_string589:
	.asciz	"fenc_hadamard_cache"           # string offset=7800
.Linfo_string590:
	.asciz	"fenc_satd_cache"               # string offset=7820
.Linfo_string591:
	.asciz	"p_fenc"                        # string offset=7836
.Linfo_string592:
	.asciz	"p_fenc_plane"                  # string offset=7843
.Linfo_string593:
	.asciz	"p_fdec"                        # string offset=7856
.Linfo_string594:
	.asciz	"i_fref"                        # string offset=7863
.Linfo_string595:
	.asciz	"p_fref"                        # string offset=7870
.Linfo_string596:
	.asciz	"p_fref_w"                      # string offset=7877
.Linfo_string597:
	.asciz	"p_integral"                    # string offset=7886
.Linfo_string598:
	.asciz	"cache"                         # string offset=7897
.Linfo_string599:
	.asciz	"skip"                          # string offset=7903
.Linfo_string600:
	.asciz	"direct_mv"                     # string offset=7908
.Linfo_string601:
	.asciz	"direct_ref"                    # string offset=7918
.Linfo_string602:
	.asciz	"direct_partition"              # string offset=7929
.Linfo_string603:
	.asciz	"pskip_mv"                      # string offset=7946
.Linfo_string604:
	.asciz	"i_neighbour_transform_size"    # string offset=7955
.Linfo_string605:
	.asciz	"i_neighbour_interlaced"        # string offset=7982
.Linfo_string606:
	.asciz	"i_cbp_top"                     # string offset=8005
.Linfo_string607:
	.asciz	"i_cbp_left"                    # string offset=8015
.Linfo_string608:
	.asciz	"i_chroma_qp"                   # string offset=8026
.Linfo_string609:
	.asciz	"i_last_qp"                     # string offset=8038
.Linfo_string610:
	.asciz	"i_last_dqp"                    # string offset=8048
.Linfo_string611:
	.asciz	"b_variable_qp"                 # string offset=8059
.Linfo_string612:
	.asciz	"b_lossless"                    # string offset=8073
.Linfo_string613:
	.asciz	"b_direct_auto_read"            # string offset=8084
.Linfo_string614:
	.asciz	"b_direct_auto_write"           # string offset=8103
.Linfo_string615:
	.asciz	"i_trellis_lambda2"             # string offset=8123
.Linfo_string616:
	.asciz	"i_psy_rd_lambda"               # string offset=8141
.Linfo_string617:
	.asciz	"i_chroma_lambda2_offset"       # string offset=8157
.Linfo_string618:
	.asciz	"dist_scale_factor_buf"         # string offset=8181
.Linfo_string619:
	.asciz	"dist_scale_factor"             # string offset=8203
.Linfo_string620:
	.asciz	"bipred_weight_buf"             # string offset=8221
.Linfo_string621:
	.asciz	"bipred_weight"                 # string offset=8239
.Linfo_string622:
	.asciz	"map_col_to_list0"              # string offset=8253
.Linfo_string623:
	.asciz	"ref_blind_dupe"                # string offset=8270
.Linfo_string624:
	.asciz	"deblock_ref_table"             # string offset=8285
.Linfo_string625:
	.asciz	"x264_ratecontrol_t"            # string offset=8303
.Linfo_string626:
	.asciz	"stat"                          # string offset=8322
.Linfo_string627:
	.asciz	"frame"                         # string offset=8327
.Linfo_string628:
	.asciz	"i_mv_bits"                     # string offset=8333
.Linfo_string629:
	.asciz	"i_tex_bits"                    # string offset=8343
.Linfo_string630:
	.asciz	"i_misc_bits"                   # string offset=8354
.Linfo_string631:
	.asciz	"i_mb_count_i"                  # string offset=8366
.Linfo_string632:
	.asciz	"i_mb_count_p"                  # string offset=8379
.Linfo_string633:
	.asciz	"i_mb_count_skip"               # string offset=8392
.Linfo_string634:
	.asciz	"i_mb_count_8x8dct"             # string offset=8408
.Linfo_string635:
	.asciz	"i_mb_count_ref"                # string offset=8426
.Linfo_string636:
	.asciz	"i_mb_partition"                # string offset=8441
.Linfo_string637:
	.asciz	"i_mb_cbp"                      # string offset=8456
.Linfo_string638:
	.asciz	"i_mb_pred_mode"                # string offset=8465
.Linfo_string639:
	.asciz	"i_direct_score"                # string offset=8480
.Linfo_string640:
	.asciz	"i_ssd"                         # string offset=8495
.Linfo_string641:
	.asciz	"f_ssim"                        # string offset=8501
.Linfo_string642:
	.asciz	"i_frame_count"                 # string offset=8508
.Linfo_string643:
	.asciz	"i_frame_size"                  # string offset=8522
.Linfo_string644:
	.asciz	"f_frame_qp"                    # string offset=8535
.Linfo_string645:
	.asciz	"i_consecutive_bframes"         # string offset=8546
.Linfo_string646:
	.asciz	"i_ssd_global"                  # string offset=8568
.Linfo_string647:
	.asciz	"f_psnr_average"                # string offset=8581
.Linfo_string648:
	.asciz	"f_psnr_mean_y"                 # string offset=8596
.Linfo_string649:
	.asciz	"f_psnr_mean_u"                 # string offset=8610
.Linfo_string650:
	.asciz	"f_psnr_mean_v"                 # string offset=8624
.Linfo_string651:
	.asciz	"f_ssim_mean_y"                 # string offset=8638
.Linfo_string652:
	.asciz	"i_direct_frames"               # string offset=8652
.Linfo_string653:
	.asciz	"i_wpred"                       # string offset=8668
.Linfo_string654:
	.asciz	"nr_residual_sum"               # string offset=8676
.Linfo_string655:
	.asciz	"nr_offset"                     # string offset=8692
.Linfo_string656:
	.asciz	"nr_count"                      # string offset=8702
.Linfo_string657:
	.asciz	"scratch_buffer"                # string offset=8711
.Linfo_string658:
	.asciz	"intra_border_backup"           # string offset=8726
.Linfo_string659:
	.asciz	"deblock_strength"              # string offset=8746
.Linfo_string660:
	.asciz	"predict_16x16"                 # string offset=8763
.Linfo_string661:
	.asciz	"x264_predict_t"                # string offset=8777
.Linfo_string662:
	.asciz	"predict_8x8c"                  # string offset=8792
.Linfo_string663:
	.asciz	"predict_8x8"                   # string offset=8805
.Linfo_string664:
	.asciz	"x264_predict8x8_t"             # string offset=8817
.Linfo_string665:
	.asciz	"predict_4x4"                   # string offset=8835
.Linfo_string666:
	.asciz	"predict_8x8_filter"            # string offset=8847
.Linfo_string667:
	.asciz	"x264_predict_8x8_filter_t"     # string offset=8866
.Linfo_string668:
	.asciz	"pixf"                          # string offset=8892
.Linfo_string669:
	.asciz	"x264_pixel_cmp_t"              # string offset=8897
.Linfo_string670:
	.asciz	"ssd"                           # string offset=8914
.Linfo_string671:
	.asciz	"satd"                          # string offset=8918
.Linfo_string672:
	.asciz	"ssim"                          # string offset=8923
.Linfo_string673:
	.asciz	"sa8d"                          # string offset=8928
.Linfo_string674:
	.asciz	"mbcmp"                         # string offset=8933
.Linfo_string675:
	.asciz	"mbcmp_unaligned"               # string offset=8939
.Linfo_string676:
	.asciz	"fpelcmp"                       # string offset=8955
.Linfo_string677:
	.asciz	"fpelcmp_x3"                    # string offset=8963
.Linfo_string678:
	.asciz	"x264_pixel_cmp_x3_t"           # string offset=8974
.Linfo_string679:
	.asciz	"fpelcmp_x4"                    # string offset=8994
.Linfo_string680:
	.asciz	"x264_pixel_cmp_x4_t"           # string offset=9005
.Linfo_string681:
	.asciz	"sad_aligned"                   # string offset=9025
.Linfo_string682:
	.asciz	"var2_8x8"                      # string offset=9037
.Linfo_string683:
	.asciz	"var"                           # string offset=9046
.Linfo_string684:
	.asciz	"hadamard_ac"                   # string offset=9050
.Linfo_string685:
	.asciz	"ssim_4x4x2_core"               # string offset=9062
.Linfo_string686:
	.asciz	"ssim_end4"                     # string offset=9078
.Linfo_string687:
	.asciz	"sad_x3"                        # string offset=9088
.Linfo_string688:
	.asciz	"sad_x4"                        # string offset=9095
.Linfo_string689:
	.asciz	"satd_x3"                       # string offset=9102
.Linfo_string690:
	.asciz	"satd_x4"                       # string offset=9110
.Linfo_string691:
	.asciz	"ads"                           # string offset=9118
.Linfo_string692:
	.asciz	"intra_mbcmp_x3_16x16"          # string offset=9122
.Linfo_string693:
	.asciz	"intra_satd_x3_16x16"           # string offset=9143
.Linfo_string694:
	.asciz	"intra_sad_x3_16x16"            # string offset=9163
.Linfo_string695:
	.asciz	"intra_mbcmp_x3_8x8c"           # string offset=9182
.Linfo_string696:
	.asciz	"intra_satd_x3_8x8c"            # string offset=9202
.Linfo_string697:
	.asciz	"intra_sad_x3_8x8c"             # string offset=9221
.Linfo_string698:
	.asciz	"intra_mbcmp_x3_4x4"            # string offset=9239
.Linfo_string699:
	.asciz	"intra_satd_x3_4x4"             # string offset=9258
.Linfo_string700:
	.asciz	"intra_sad_x3_4x4"              # string offset=9276
.Linfo_string701:
	.asciz	"intra_mbcmp_x3_8x8"            # string offset=9293
.Linfo_string702:
	.asciz	"intra_sa8d_x3_8x8"             # string offset=9312
.Linfo_string703:
	.asciz	"intra_sad_x3_8x8"              # string offset=9330
.Linfo_string704:
	.asciz	"x264_pixel_function_t"         # string offset=9347
.Linfo_string705:
	.asciz	"mc"                            # string offset=9369
.Linfo_string706:
	.asciz	"mc_luma"                       # string offset=9372
.Linfo_string707:
	.asciz	"get_ref"                       # string offset=9380
.Linfo_string708:
	.asciz	"mc_chroma"                     # string offset=9388
.Linfo_string709:
	.asciz	"avg"                           # string offset=9398
.Linfo_string710:
	.asciz	"copy"                          # string offset=9402
.Linfo_string711:
	.asciz	"copy_16x16_unaligned"          # string offset=9407
.Linfo_string712:
	.asciz	"plane_copy"                    # string offset=9428
.Linfo_string713:
	.asciz	"hpel_filter"                   # string offset=9439
.Linfo_string714:
	.asciz	"prefetch_fenc"                 # string offset=9451
.Linfo_string715:
	.asciz	"prefetch_ref"                  # string offset=9465
.Linfo_string716:
	.asciz	"memcpy_aligned"                # string offset=9478
.Linfo_string717:
	.asciz	"size_t"                        # string offset=9493
.Linfo_string718:
	.asciz	"memzero_aligned"               # string offset=9500
.Linfo_string719:
	.asciz	"integral_init4h"               # string offset=9516
.Linfo_string720:
	.asciz	"integral_init8h"               # string offset=9532
.Linfo_string721:
	.asciz	"integral_init4v"               # string offset=9548
.Linfo_string722:
	.asciz	"integral_init8v"               # string offset=9564
.Linfo_string723:
	.asciz	"frame_init_lowres_core"        # string offset=9580
.Linfo_string724:
	.asciz	"offsetadd"                     # string offset=9603
.Linfo_string725:
	.asciz	"offsetsub"                     # string offset=9613
.Linfo_string726:
	.asciz	"weight_cache"                  # string offset=9623
.Linfo_string727:
	.asciz	"mbtree_propagate_cost"         # string offset=9636
.Linfo_string728:
	.asciz	"x264_mc_functions_t"           # string offset=9658
.Linfo_string729:
	.asciz	"dctf"                          # string offset=9678
.Linfo_string730:
	.asciz	"sub4x4_dct"                    # string offset=9683
.Linfo_string731:
	.asciz	"add4x4_idct"                   # string offset=9694
.Linfo_string732:
	.asciz	"sub8x8_dct"                    # string offset=9706
.Linfo_string733:
	.asciz	"sub8x8_dct_dc"                 # string offset=9717
.Linfo_string734:
	.asciz	"add8x8_idct"                   # string offset=9731
.Linfo_string735:
	.asciz	"add8x8_idct_dc"                # string offset=9743
.Linfo_string736:
	.asciz	"sub16x16_dct"                  # string offset=9758
.Linfo_string737:
	.asciz	"add16x16_idct"                 # string offset=9771
.Linfo_string738:
	.asciz	"add16x16_idct_dc"              # string offset=9785
.Linfo_string739:
	.asciz	"sub8x8_dct8"                   # string offset=9802
.Linfo_string740:
	.asciz	"add8x8_idct8"                  # string offset=9814
.Linfo_string741:
	.asciz	"sub16x16_dct8"                 # string offset=9827
.Linfo_string742:
	.asciz	"add16x16_idct8"                # string offset=9841
.Linfo_string743:
	.asciz	"dct4x4dc"                      # string offset=9856
.Linfo_string744:
	.asciz	"idct4x4dc"                     # string offset=9865
.Linfo_string745:
	.asciz	"x264_dct_function_t"           # string offset=9875
.Linfo_string746:
	.asciz	"zigzagf"                       # string offset=9895
.Linfo_string747:
	.asciz	"scan_8x8"                      # string offset=9903
.Linfo_string748:
	.asciz	"scan_4x4"                      # string offset=9912
.Linfo_string749:
	.asciz	"sub_8x8"                       # string offset=9921
.Linfo_string750:
	.asciz	"sub_4x4"                       # string offset=9929
.Linfo_string751:
	.asciz	"sub_4x4ac"                     # string offset=9937
.Linfo_string752:
	.asciz	"interleave_8x8_cavlc"          # string offset=9947
.Linfo_string753:
	.asciz	"x264_zigzag_function_t"        # string offset=9968
.Linfo_string754:
	.asciz	"quantf"                        # string offset=9991
.Linfo_string755:
	.asciz	"quant_8x8"                     # string offset=9998
.Linfo_string756:
	.asciz	"quant_4x4"                     # string offset=10008
.Linfo_string757:
	.asciz	"quant_4x4_dc"                  # string offset=10018
.Linfo_string758:
	.asciz	"quant_2x2_dc"                  # string offset=10031
.Linfo_string759:
	.asciz	"dequant_8x8"                   # string offset=10044
.Linfo_string760:
	.asciz	"dequant_4x4"                   # string offset=10056
.Linfo_string761:
	.asciz	"dequant_4x4_dc"                # string offset=10068
.Linfo_string762:
	.asciz	"denoise_dct"                   # string offset=10083
.Linfo_string763:
	.asciz	"decimate_score15"              # string offset=10095
.Linfo_string764:
	.asciz	"decimate_score16"              # string offset=10112
.Linfo_string765:
	.asciz	"decimate_score64"              # string offset=10129
.Linfo_string766:
	.asciz	"coeff_last"                    # string offset=10146
.Linfo_string767:
	.asciz	"coeff_level_run"               # string offset=10157
.Linfo_string768:
	.asciz	"last"                          # string offset=10173
.Linfo_string769:
	.asciz	"level"                         # string offset=10178
.Linfo_string770:
	.asciz	"run"                           # string offset=10184
.Linfo_string771:
	.asciz	"x264_run_level_t"              # string offset=10188
.Linfo_string772:
	.asciz	"x264_quant_function_t"         # string offset=10205
.Linfo_string773:
	.asciz	"loopf"                         # string offset=10227
.Linfo_string774:
	.asciz	"deblock_luma"                  # string offset=10233
.Linfo_string775:
	.asciz	"x264_deblock_inter_t"          # string offset=10246
.Linfo_string776:
	.asciz	"deblock_chroma"                # string offset=10267
.Linfo_string777:
	.asciz	"deblock_luma_intra"            # string offset=10282
.Linfo_string778:
	.asciz	"x264_deblock_intra_t"          # string offset=10301
.Linfo_string779:
	.asciz	"deblock_chroma_intra"          # string offset=10322
.Linfo_string780:
	.asciz	"x264_deblock_function_t"       # string offset=10343
.Linfo_string781:
	.asciz	"lookahead"                     # string offset=10367
.Linfo_string782:
	.asciz	"b_exit_thread"                 # string offset=10377
.Linfo_string783:
	.asciz	"b_analyse_keyframe"            # string offset=10391
.Linfo_string784:
	.asciz	"i_slicetype_length"            # string offset=10410
.Linfo_string785:
	.asciz	"last_nonb"                     # string offset=10429
.Linfo_string786:
	.asciz	"ifbuf"                         # string offset=10439
.Linfo_string787:
	.asciz	"list"                          # string offset=10445
.Linfo_string788:
	.asciz	"i_max_size"                    # string offset=10450
.Linfo_string789:
	.asciz	"i_size"                        # string offset=10461
.Linfo_string790:
	.asciz	"cv_fill"                       # string offset=10468
.Linfo_string791:
	.asciz	"cv_empty"                      # string offset=10476
.Linfo_string792:
	.asciz	"x264_synch_frame_list_t"       # string offset=10485
.Linfo_string793:
	.asciz	"next"                          # string offset=10509
.Linfo_string794:
	.asciz	"ofbuf"                         # string offset=10514
.Linfo_string795:
	.asciz	"x264_lookahead_t"              # string offset=10520
.Linfo_string796:
	.asciz	"x264_t"                        # string offset=10537
.Linfo_string797:
	.asciz	"x"                             # string offset=10544
.Linfo_string798:
	.asciz	"y"                             # string offset=10546
.Linfo_string799:
	.asciz	"width"                         # string offset=10548
.Linfo_string800:
	.asciz	"height"                        # string offset=10554
.Linfo_string801:
	.asciz	"i_list"                        # string offset=10561
.Linfo_string802:
	.asciz	"mv_cache"                      # string offset=10568
.Linfo_string803:
	.asciz	"x264_macroblock_cache_rect"    # string offset=10577
.Linfo_string804:
	.asciz	"s"                             # string offset=10604
.Linfo_string805:
	.asciz	"d"                             # string offset=10606
.Linfo_string806:
	.asciz	"v2"                            # string offset=10608
.Linfo_string807:
	.asciz	"v4"                            # string offset=10611
.Linfo_string808:
	.asciz	"v8"                            # string offset=10614
.Linfo_string809:
	.asciz	"x264_macroblock_cache_mvd"     # string offset=10617
.Linfo_string810:
	.asciz	"mvd_cache"                     # string offset=10643
.Linfo_string811:
	.asciz	"x264_mb_predict_mv"            # string offset=10653
.Linfo_string812:
	.asciz	"x264_rd_cost_part"             # string offset=10672
.Linfo_string813:
	.asciz	"DW_ATE_unsigned_8"             # string offset=10690
.Linfo_string814:
	.asciz	"DW_ATE_unsigned_16"            # string offset=10708
.Linfo_string815:
	.asciz	"DW_ATE_unsigned_1"             # string offset=10727
.Linfo_string816:
	.asciz	"DW_ATE_signed_64"              # string offset=10745
.Linfo_string817:
	.asciz	"DW_ATE_signed_32"              # string offset=10762
.Linfo_string818:
	.asciz	"DW_ATE_unsigned_32"            # string offset=10779
.Linfo_string819:
	.asciz	"DW_ATE_unsigned_64"            # string offset=10798
.Linfo_string820:
	.asciz	"x264_me_search_ref"            # string offset=10817
.Linfo_string821:
	.asciz	"refine_subpel"                 # string offset=10836
.Linfo_string822:
	.asciz	"x264_me_refine_qpel"           # string offset=10850
.Linfo_string823:
	.asciz	"x264_me_refine_qpel_refdupe"   # string offset=10870
.Linfo_string824:
	.asciz	"x264_me_refine_bidir_satd"     # string offset=10898
.Linfo_string825:
	.asciz	"x264_me_refine_bidir"          # string offset=10924
.Linfo_string826:
	.asciz	"x264_me_refine_bidir_rd"       # string offset=10945
.Linfo_string827:
	.asciz	"x264_me_refine_qpel_rd"        # string offset=10969
.Linfo_string828:
	.asciz	"pix"                           # string offset=10992
.Linfo_string829:
	.asciz	"costs"                         # string offset=10996
.Linfo_string830:
	.asciz	"stride2"                       # string offset=11002
.Linfo_string831:
	.asciz	"mvc_fpel"                      # string offset=11010
.Linfo_string832:
	.asciz	"enc_dc"                        # string offset=11019
.Linfo_string833:
	.asciz	"sads"                          # string offset=11026
.Linfo_string834:
	.asciz	"m"                             # string offset=11031
.Linfo_string835:
	.asciz	"i_pixel"                       # string offset=11033
.Linfo_string836:
	.asciz	"p_cost_mv"                     # string offset=11041
.Linfo_string837:
	.asciz	"i_ref_cost"                    # string offset=11051
.Linfo_string838:
	.asciz	"mvp"                           # string offset=11062
.Linfo_string839:
	.asciz	"cost"                          # string offset=11066
.Linfo_string840:
	.asciz	"x264_me_t"                     # string offset=11071
.Linfo_string841:
	.asciz	"p_halfpel_thresh"              # string offset=11081
.Linfo_string842:
	.asciz	"bw"                            # string offset=11098
.Linfo_string843:
	.asciz	"bh"                            # string offset=11101
.Linfo_string844:
	.asciz	"bpred_mx"                      # string offset=11104
.Linfo_string845:
	.asciz	"bpred_my"                      # string offset=11113
.Linfo_string846:
	.asciz	"bpred_cost"                    # string offset=11122
.Linfo_string847:
	.asciz	"mv_x_min_qpel"                 # string offset=11133
.Linfo_string848:
	.asciz	"mv_y_min_qpel"                 # string offset=11147
.Linfo_string849:
	.asciz	"mv_x_max_qpel"                 # string offset=11161
.Linfo_string850:
	.asciz	"mv_y_max_qpel"                 # string offset=11175
.Linfo_string851:
	.asciz	"p_cost_mvx"                    # string offset=11189
.Linfo_string852:
	.asciz	"p_cost_mvy"                    # string offset=11200
.Linfo_string853:
	.asciz	"bmx"                           # string offset=11211
.Linfo_string854:
	.asciz	"bmy"                           # string offset=11215
.Linfo_string855:
	.asciz	"pmx"                           # string offset=11219
.Linfo_string856:
	.asciz	"pmy"                           # string offset=11223
.Linfo_string857:
	.asciz	"bcost"                         # string offset=11227
.Linfo_string858:
	.asciz	"pmv"                           # string offset=11233
.Linfo_string859:
	.asciz	"src"                           # string offset=11237
.Linfo_string860:
	.asciz	"min_x"                         # string offset=11241
.Linfo_string861:
	.asciz	"min_y"                         # string offset=11247
.Linfo_string862:
	.asciz	"max_x"                         # string offset=11253
.Linfo_string863:
	.asciz	"max_y"                         # string offset=11259
.Linfo_string864:
	.asciz	"sums_base"                     # string offset=11265
.Linfo_string865:
	.asciz	"delta"                         # string offset=11275
.Linfo_string866:
	.asciz	"xs"                            # string offset=11281
.Linfo_string867:
	.asciz	"cost_fpel_mvx"                 # string offset=11284
.Linfo_string868:
	.asciz	"cross_start"                   # string offset=11298
.Linfo_string869:
	.asciz	"ucost1"                        # string offset=11310
.Linfo_string870:
	.asciz	"omx"                           # string offset=11317
.Linfo_string871:
	.asciz	"omy"                           # string offset=11321
.Linfo_string872:
	.asciz	"pix_base"                      # string offset=11325
.Linfo_string873:
	.asciz	"dir"                           # string offset=11334
.Linfo_string874:
	.asciz	"mvsads"                        # string offset=11338
.Linfo_string875:
	.asciz	"nmvsad"                        # string offset=11345
.Linfo_string876:
	.asciz	"sad_thresh"                    # string offset=11352
.Linfo_string877:
	.asciz	"bsad"                          # string offset=11363
.Linfo_string878:
	.asciz	"limit"                         # string offset=11368
.Linfo_string879:
	.asciz	"j"                             # string offset=11374
.Linfo_string880:
	.asciz	"bi"                            # string offset=11376
.Linfo_string881:
	.asciz	"xn"                            # string offset=11379
.Linfo_string882:
	.asciz	"ycost"                         # string offset=11382
.Linfo_string883:
	.asciz	"ucost2"                        # string offset=11388
.Linfo_string884:
	.asciz	"hpel"                          # string offset=11395
.Linfo_string885:
	.asciz	"qpel"                          # string offset=11400
.Linfo_string886:
	.asciz	"denom"                         # string offset=11405
.Linfo_string887:
	.asciz	"range"                         # string offset=11411
.Linfo_string888:
	.asciz	"mvd_ctx"                       # string offset=11417
.Linfo_string889:
	.asciz	"p_cost_omvx"                   # string offset=11425
.Linfo_string890:
	.asciz	"p_cost_omvy"                   # string offset=11437
.Linfo_string891:
	.asciz	"dy"                            # string offset=11449
.Linfo_string892:
	.asciz	"me_hex2"                       # string offset=11452
.Linfo_string893:
	.asciz	"stride"                        # string offset=11460
.Linfo_string894:
	.asciz	"sad_ctx"                       # string offset=11467
.Linfo_string895:
	.asciz	"sad_size"                      # string offset=11475
.Linfo_string896:
	.asciz	"mvsad"                         # string offset=11484
.Linfo_string897:
	.asciz	"hpel_iters"                    # string offset=11490
.Linfo_string898:
	.asciz	"qpel_iters"                    # string offset=11501
.Linfo_string899:
	.asciz	"b_refine_qpel"                 # string offset=11512
.Linfo_string900:
	.asciz	"mvy_offset"                    # string offset=11526
.Linfo_string901:
	.asciz	"odir"                          # string offset=11537
.Linfo_string902:
	.asciz	"src0"                          # string offset=11542
.Linfo_string903:
	.asciz	"src2"                          # string offset=11547
.Linfo_string904:
	.asciz	"src1"                          # string offset=11552
.Linfo_string905:
	.asciz	"src3"                          # string offset=11557
.Linfo_string906:
	.asciz	"bdir"                          # string offset=11562
.Linfo_string907:
	.asciz	"m0"                            # string offset=11567
.Linfo_string908:
	.asciz	"m1"                            # string offset=11570
.Linfo_string909:
	.asciz	"i_weight"                      # string offset=11573
.Linfo_string910:
	.asciz	"pixy_buf"                      # string offset=11582
.Linfo_string911:
	.asciz	"pixu_buf"                      # string offset=11591
.Linfo_string912:
	.asciz	"pixv_buf"                      # string offset=11600
.Linfo_string913:
	.asciz	"visited"                       # string offset=11609
.Linfo_string914:
	.asciz	"i8"                            # string offset=11617
.Linfo_string915:
	.asciz	"i_lambda2"                     # string offset=11620
.Linfo_string916:
	.asciz	"rd"                            # string offset=11630
.Linfo_string917:
	.asciz	"cache0_mv"                     # string offset=11633
.Linfo_string918:
	.asciz	"cache1_mv"                     # string offset=11643
.Linfo_string919:
	.asciz	"pixv"                          # string offset=11653
.Linfo_string920:
	.asciz	"ref0"                          # string offset=11658
.Linfo_string921:
	.asciz	"ref1"                          # string offset=11663
.Linfo_string922:
	.asciz	"mv0y_offset"                   # string offset=11668
.Linfo_string923:
	.asciz	"mv1y_offset"                   # string offset=11680
.Linfo_string924:
	.asciz	"bm0x"                          # string offset=11692
.Linfo_string925:
	.asciz	"bm0y"                          # string offset=11697
.Linfo_string926:
	.asciz	"bm1x"                          # string offset=11702
.Linfo_string927:
	.asciz	"mc_list0"                      # string offset=11707
.Linfo_string928:
	.asciz	"mc_list1"                      # string offset=11716
.Linfo_string929:
	.asciz	"bcostrd"                       # string offset=11725
.Linfo_string930:
	.asciz	"bm1y"                          # string offset=11733
.Linfo_string931:
	.asciz	"p_cost_m0x"                    # string offset=11738
.Linfo_string932:
	.asciz	"p_cost_m0y"                    # string offset=11749
.Linfo_string933:
	.asciz	"p_cost_m1x"                    # string offset=11760
.Linfo_string934:
	.asciz	"p_cost_m1y"                    # string offset=11771
.Linfo_string935:
	.asciz	"pass"                          # string offset=11782
.Linfo_string936:
	.asciz	"bestj"                         # string offset=11787
.Linfo_string937:
	.asciz	"mvx"                           # string offset=11793
.Linfo_string938:
	.asciz	"mvy"                           # string offset=11797
.Linfo_string939:
	.asciz	"m0x"                           # string offset=11801
.Linfo_string940:
	.asciz	"m0y"                           # string offset=11805
.Linfo_string941:
	.asciz	"m1x"                           # string offset=11809
.Linfo_string942:
	.asciz	"m1y"                           # string offset=11813
.Linfo_string943:
	.asciz	"costrd"                        # string offset=11817
.Linfo_string944:
	.asciz	"amvd"                          # string offset=11824
.Linfo_string945:
	.asciz	"pixu"                          # string offset=11829
.Linfo_string946:
	.asciz	"i0"                            # string offset=11834
.Linfo_string947:
	.asciz	"i1"                            # string offset=11837
.Linfo_string948:
	.asciz	"i4"                            # string offset=11840
.Linfo_string949:
	.asciz	"cache_mv"                      # string offset=11843
.Linfo_string950:
	.asciz	"bsatd"                         # string offset=11852
	.section	.debug_str_offsets,"",@progbits
	.long	.Linfo_string0
	.long	.Linfo_string1
	.long	.Linfo_string2
	.long	.Linfo_string3
	.long	.Linfo_string4
	.long	.Linfo_string5
	.long	.Linfo_string6
	.long	.Linfo_string7
	.long	.Linfo_string8
	.long	.Linfo_string9
	.long	.Linfo_string10
	.long	.Linfo_string11
	.long	.Linfo_string12
	.long	.Linfo_string13
	.long	.Linfo_string14
	.long	.Linfo_string15
	.long	.Linfo_string16
	.long	.Linfo_string17
	.long	.Linfo_string18
	.long	.Linfo_string19
	.long	.Linfo_string20
	.long	.Linfo_string21
	.long	.Linfo_string22
	.long	.Linfo_string23
	.long	.Linfo_string24
	.long	.Linfo_string25
	.long	.Linfo_string26
	.long	.Linfo_string27
	.long	.Linfo_string28
	.long	.Linfo_string29
	.long	.Linfo_string30
	.long	.Linfo_string31
	.long	.Linfo_string32
	.long	.Linfo_string33
	.long	.Linfo_string34
	.long	.Linfo_string35
	.long	.Linfo_string36
	.long	.Linfo_string37
	.long	.Linfo_string38
	.long	.Linfo_string39
	.long	.Linfo_string40
	.long	.Linfo_string41
	.long	.Linfo_string42
	.long	.Linfo_string43
	.long	.Linfo_string44
	.long	.Linfo_string45
	.long	.Linfo_string46
	.long	.Linfo_string47
	.long	.Linfo_string48
	.long	.Linfo_string49
	.long	.Linfo_string50
	.long	.Linfo_string51
	.long	.Linfo_string52
	.long	.Linfo_string53
	.long	.Linfo_string54
	.long	.Linfo_string55
	.long	.Linfo_string56
	.long	.Linfo_string57
	.long	.Linfo_string58
	.long	.Linfo_string59
	.long	.Linfo_string60
	.long	.Linfo_string61
	.long	.Linfo_string62
	.long	.Linfo_string63
	.long	.Linfo_string64
	.long	.Linfo_string65
	.long	.Linfo_string66
	.long	.Linfo_string67
	.long	.Linfo_string68
	.long	.Linfo_string69
	.long	.Linfo_string70
	.long	.Linfo_string71
	.long	.Linfo_string72
	.long	.Linfo_string73
	.long	.Linfo_string74
	.long	.Linfo_string75
	.long	.Linfo_string76
	.long	.Linfo_string77
	.long	.Linfo_string78
	.long	.Linfo_string79
	.long	.Linfo_string80
	.long	.Linfo_string81
	.long	.Linfo_string82
	.long	.Linfo_string83
	.long	.Linfo_string84
	.long	.Linfo_string85
	.long	.Linfo_string86
	.long	.Linfo_string87
	.long	.Linfo_string88
	.long	.Linfo_string89
	.long	.Linfo_string90
	.long	.Linfo_string91
	.long	.Linfo_string92
	.long	.Linfo_string93
	.long	.Linfo_string94
	.long	.Linfo_string95
	.long	.Linfo_string96
	.long	.Linfo_string97
	.long	.Linfo_string98
	.long	.Linfo_string99
	.long	.Linfo_string100
	.long	.Linfo_string101
	.long	.Linfo_string102
	.long	.Linfo_string103
	.long	.Linfo_string104
	.long	.Linfo_string105
	.long	.Linfo_string106
	.long	.Linfo_string107
	.long	.Linfo_string108
	.long	.Linfo_string109
	.long	.Linfo_string110
	.long	.Linfo_string111
	.long	.Linfo_string112
	.long	.Linfo_string113
	.long	.Linfo_string114
	.long	.Linfo_string115
	.long	.Linfo_string116
	.long	.Linfo_string117
	.long	.Linfo_string118
	.long	.Linfo_string119
	.long	.Linfo_string120
	.long	.Linfo_string121
	.long	.Linfo_string122
	.long	.Linfo_string123
	.long	.Linfo_string124
	.long	.Linfo_string125
	.long	.Linfo_string126
	.long	.Linfo_string127
	.long	.Linfo_string128
	.long	.Linfo_string129
	.long	.Linfo_string130
	.long	.Linfo_string131
	.long	.Linfo_string132
	.long	.Linfo_string133
	.long	.Linfo_string134
	.long	.Linfo_string135
	.long	.Linfo_string136
	.long	.Linfo_string137
	.long	.Linfo_string138
	.long	.Linfo_string139
	.long	.Linfo_string140
	.long	.Linfo_string141
	.long	.Linfo_string142
	.long	.Linfo_string143
	.long	.Linfo_string144
	.long	.Linfo_string145
	.long	.Linfo_string146
	.long	.Linfo_string147
	.long	.Linfo_string148
	.long	.Linfo_string149
	.long	.Linfo_string150
	.long	.Linfo_string151
	.long	.Linfo_string152
	.long	.Linfo_string153
	.long	.Linfo_string154
	.long	.Linfo_string155
	.long	.Linfo_string156
	.long	.Linfo_string157
	.long	.Linfo_string158
	.long	.Linfo_string159
	.long	.Linfo_string160
	.long	.Linfo_string161
	.long	.Linfo_string162
	.long	.Linfo_string163
	.long	.Linfo_string164
	.long	.Linfo_string165
	.long	.Linfo_string166
	.long	.Linfo_string167
	.long	.Linfo_string168
	.long	.Linfo_string169
	.long	.Linfo_string170
	.long	.Linfo_string171
	.long	.Linfo_string172
	.long	.Linfo_string173
	.long	.Linfo_string174
	.long	.Linfo_string175
	.long	.Linfo_string176
	.long	.Linfo_string177
	.long	.Linfo_string178
	.long	.Linfo_string179
	.long	.Linfo_string180
	.long	.Linfo_string181
	.long	.Linfo_string182
	.long	.Linfo_string183
	.long	.Linfo_string184
	.long	.Linfo_string185
	.long	.Linfo_string186
	.long	.Linfo_string187
	.long	.Linfo_string188
	.long	.Linfo_string189
	.long	.Linfo_string190
	.long	.Linfo_string191
	.long	.Linfo_string192
	.long	.Linfo_string193
	.long	.Linfo_string194
	.long	.Linfo_string195
	.long	.Linfo_string196
	.long	.Linfo_string197
	.long	.Linfo_string198
	.long	.Linfo_string199
	.long	.Linfo_string200
	.long	.Linfo_string201
	.long	.Linfo_string202
	.long	.Linfo_string203
	.long	.Linfo_string204
	.long	.Linfo_string205
	.long	.Linfo_string206
	.long	.Linfo_string207
	.long	.Linfo_string208
	.long	.Linfo_string209
	.long	.Linfo_string210
	.long	.Linfo_string211
	.long	.Linfo_string212
	.long	.Linfo_string213
	.long	.Linfo_string214
	.long	.Linfo_string215
	.long	.Linfo_string216
	.long	.Linfo_string217
	.long	.Linfo_string218
	.long	.Linfo_string219
	.long	.Linfo_string220
	.long	.Linfo_string221
	.long	.Linfo_string222
	.long	.Linfo_string223
	.long	.Linfo_string224
	.long	.Linfo_string225
	.long	.Linfo_string226
	.long	.Linfo_string227
	.long	.Linfo_string228
	.long	.Linfo_string229
	.long	.Linfo_string230
	.long	.Linfo_string231
	.long	.Linfo_string232
	.long	.Linfo_string233
	.long	.Linfo_string234
	.long	.Linfo_string235
	.long	.Linfo_string236
	.long	.Linfo_string237
	.long	.Linfo_string238
	.long	.Linfo_string239
	.long	.Linfo_string240
	.long	.Linfo_string241
	.long	.Linfo_string242
	.long	.Linfo_string243
	.long	.Linfo_string244
	.long	.Linfo_string245
	.long	.Linfo_string246
	.long	.Linfo_string247
	.long	.Linfo_string248
	.long	.Linfo_string249
	.long	.Linfo_string250
	.long	.Linfo_string251
	.long	.Linfo_string252
	.long	.Linfo_string253
	.long	.Linfo_string254
	.long	.Linfo_string255
	.long	.Linfo_string256
	.long	.Linfo_string257
	.long	.Linfo_string258
	.long	.Linfo_string259
	.long	.Linfo_string260
	.long	.Linfo_string261
	.long	.Linfo_string262
	.long	.Linfo_string263
	.long	.Linfo_string264
	.long	.Linfo_string265
	.long	.Linfo_string266
	.long	.Linfo_string267
	.long	.Linfo_string268
	.long	.Linfo_string269
	.long	.Linfo_string270
	.long	.Linfo_string271
	.long	.Linfo_string272
	.long	.Linfo_string273
	.long	.Linfo_string274
	.long	.Linfo_string275
	.long	.Linfo_string276
	.long	.Linfo_string277
	.long	.Linfo_string278
	.long	.Linfo_string279
	.long	.Linfo_string280
	.long	.Linfo_string281
	.long	.Linfo_string282
	.long	.Linfo_string283
	.long	.Linfo_string284
	.long	.Linfo_string285
	.long	.Linfo_string286
	.long	.Linfo_string287
	.long	.Linfo_string288
	.long	.Linfo_string289
	.long	.Linfo_string290
	.long	.Linfo_string291
	.long	.Linfo_string292
	.long	.Linfo_string293
	.long	.Linfo_string294
	.long	.Linfo_string295
	.long	.Linfo_string296
	.long	.Linfo_string297
	.long	.Linfo_string298
	.long	.Linfo_string299
	.long	.Linfo_string300
	.long	.Linfo_string301
	.long	.Linfo_string302
	.long	.Linfo_string303
	.long	.Linfo_string304
	.long	.Linfo_string305
	.long	.Linfo_string306
	.long	.Linfo_string307
	.long	.Linfo_string308
	.long	.Linfo_string309
	.long	.Linfo_string310
	.long	.Linfo_string311
	.long	.Linfo_string312
	.long	.Linfo_string313
	.long	.Linfo_string314
	.long	.Linfo_string315
	.long	.Linfo_string316
	.long	.Linfo_string317
	.long	.Linfo_string318
	.long	.Linfo_string319
	.long	.Linfo_string320
	.long	.Linfo_string321
	.long	.Linfo_string322
	.long	.Linfo_string323
	.long	.Linfo_string324
	.long	.Linfo_string325
	.long	.Linfo_string326
	.long	.Linfo_string327
	.long	.Linfo_string328
	.long	.Linfo_string329
	.long	.Linfo_string330
	.long	.Linfo_string331
	.long	.Linfo_string332
	.long	.Linfo_string333
	.long	.Linfo_string334
	.long	.Linfo_string335
	.long	.Linfo_string336
	.long	.Linfo_string337
	.long	.Linfo_string338
	.long	.Linfo_string339
	.long	.Linfo_string340
	.long	.Linfo_string341
	.long	.Linfo_string342
	.long	.Linfo_string343
	.long	.Linfo_string344
	.long	.Linfo_string345
	.long	.Linfo_string346
	.long	.Linfo_string347
	.long	.Linfo_string348
	.long	.Linfo_string349
	.long	.Linfo_string350
	.long	.Linfo_string351
	.long	.Linfo_string352
	.long	.Linfo_string353
	.long	.Linfo_string354
	.long	.Linfo_string355
	.long	.Linfo_string356
	.long	.Linfo_string357
	.long	.Linfo_string358
	.long	.Linfo_string359
	.long	.Linfo_string360
	.long	.Linfo_string361
	.long	.Linfo_string362
	.long	.Linfo_string363
	.long	.Linfo_string364
	.long	.Linfo_string365
	.long	.Linfo_string366
	.long	.Linfo_string367
	.long	.Linfo_string368
	.long	.Linfo_string369
	.long	.Linfo_string370
	.long	.Linfo_string371
	.long	.Linfo_string372
	.long	.Linfo_string373
	.long	.Linfo_string374
	.long	.Linfo_string375
	.long	.Linfo_string376
	.long	.Linfo_string377
	.long	.Linfo_string378
	.long	.Linfo_string379
	.long	.Linfo_string380
	.long	.Linfo_string381
	.long	.Linfo_string382
	.long	.Linfo_string383
	.long	.Linfo_string384
	.long	.Linfo_string385
	.long	.Linfo_string386
	.long	.Linfo_string387
	.long	.Linfo_string388
	.long	.Linfo_string389
	.long	.Linfo_string390
	.long	.Linfo_string391
	.long	.Linfo_string392
	.long	.Linfo_string393
	.long	.Linfo_string394
	.long	.Linfo_string395
	.long	.Linfo_string396
	.long	.Linfo_string397
	.long	.Linfo_string398
	.long	.Linfo_string399
	.long	.Linfo_string400
	.long	.Linfo_string401
	.long	.Linfo_string402
	.long	.Linfo_string403
	.long	.Linfo_string404
	.long	.Linfo_string405
	.long	.Linfo_string406
	.long	.Linfo_string407
	.long	.Linfo_string408
	.long	.Linfo_string409
	.long	.Linfo_string410
	.long	.Linfo_string411
	.long	.Linfo_string412
	.long	.Linfo_string413
	.long	.Linfo_string414
	.long	.Linfo_string415
	.long	.Linfo_string416
	.long	.Linfo_string417
	.long	.Linfo_string418
	.long	.Linfo_string419
	.long	.Linfo_string420
	.long	.Linfo_string421
	.long	.Linfo_string422
	.long	.Linfo_string423
	.long	.Linfo_string424
	.long	.Linfo_string425
	.long	.Linfo_string426
	.long	.Linfo_string427
	.long	.Linfo_string428
	.long	.Linfo_string429
	.long	.Linfo_string430
	.long	.Linfo_string431
	.long	.Linfo_string432
	.long	.Linfo_string433
	.long	.Linfo_string434
	.long	.Linfo_string435
	.long	.Linfo_string436
	.long	.Linfo_string437
	.long	.Linfo_string438
	.long	.Linfo_string439
	.long	.Linfo_string440
	.long	.Linfo_string441
	.long	.Linfo_string442
	.long	.Linfo_string443
	.long	.Linfo_string444
	.long	.Linfo_string445
	.long	.Linfo_string446
	.long	.Linfo_string447
	.long	.Linfo_string448
	.long	.Linfo_string449
	.long	.Linfo_string450
	.long	.Linfo_string451
	.long	.Linfo_string452
	.long	.Linfo_string453
	.long	.Linfo_string454
	.long	.Linfo_string455
	.long	.Linfo_string456
	.long	.Linfo_string457
	.long	.Linfo_string458
	.long	.Linfo_string459
	.long	.Linfo_string460
	.long	.Linfo_string461
	.long	.Linfo_string462
	.long	.Linfo_string463
	.long	.Linfo_string464
	.long	.Linfo_string465
	.long	.Linfo_string466
	.long	.Linfo_string467
	.long	.Linfo_string468
	.long	.Linfo_string469
	.long	.Linfo_string470
	.long	.Linfo_string471
	.long	.Linfo_string472
	.long	.Linfo_string473
	.long	.Linfo_string474
	.long	.Linfo_string475
	.long	.Linfo_string476
	.long	.Linfo_string477
	.long	.Linfo_string478
	.long	.Linfo_string479
	.long	.Linfo_string480
	.long	.Linfo_string481
	.long	.Linfo_string482
	.long	.Linfo_string483
	.long	.Linfo_string484
	.long	.Linfo_string485
	.long	.Linfo_string486
	.long	.Linfo_string487
	.long	.Linfo_string488
	.long	.Linfo_string489
	.long	.Linfo_string490
	.long	.Linfo_string491
	.long	.Linfo_string492
	.long	.Linfo_string493
	.long	.Linfo_string494
	.long	.Linfo_string495
	.long	.Linfo_string496
	.long	.Linfo_string497
	.long	.Linfo_string498
	.long	.Linfo_string499
	.long	.Linfo_string500
	.long	.Linfo_string501
	.long	.Linfo_string502
	.long	.Linfo_string503
	.long	.Linfo_string504
	.long	.Linfo_string505
	.long	.Linfo_string506
	.long	.Linfo_string507
	.long	.Linfo_string508
	.long	.Linfo_string509
	.long	.Linfo_string510
	.long	.Linfo_string511
	.long	.Linfo_string512
	.long	.Linfo_string513
	.long	.Linfo_string514
	.long	.Linfo_string515
	.long	.Linfo_string516
	.long	.Linfo_string517
	.long	.Linfo_string518
	.long	.Linfo_string519
	.long	.Linfo_string520
	.long	.Linfo_string521
	.long	.Linfo_string522
	.long	.Linfo_string523
	.long	.Linfo_string524
	.long	.Linfo_string525
	.long	.Linfo_string526
	.long	.Linfo_string527
	.long	.Linfo_string528
	.long	.Linfo_string529
	.long	.Linfo_string530
	.long	.Linfo_string531
	.long	.Linfo_string532
	.long	.Linfo_string533
	.long	.Linfo_string534
	.long	.Linfo_string535
	.long	.Linfo_string536
	.long	.Linfo_string537
	.long	.Linfo_string538
	.long	.Linfo_string539
	.long	.Linfo_string540
	.long	.Linfo_string541
	.long	.Linfo_string542
	.long	.Linfo_string543
	.long	.Linfo_string544
	.long	.Linfo_string545
	.long	.Linfo_string546
	.long	.Linfo_string547
	.long	.Linfo_string548
	.long	.Linfo_string549
	.long	.Linfo_string550
	.long	.Linfo_string551
	.long	.Linfo_string552
	.long	.Linfo_string553
	.long	.Linfo_string554
	.long	.Linfo_string555
	.long	.Linfo_string556
	.long	.Linfo_string557
	.long	.Linfo_string558
	.long	.Linfo_string559
	.long	.Linfo_string560
	.long	.Linfo_string561
	.long	.Linfo_string562
	.long	.Linfo_string563
	.long	.Linfo_string564
	.long	.Linfo_string565
	.long	.Linfo_string566
	.long	.Linfo_string567
	.long	.Linfo_string568
	.long	.Linfo_string569
	.long	.Linfo_string570
	.long	.Linfo_string571
	.long	.Linfo_string572
	.long	.Linfo_string573
	.long	.Linfo_string574
	.long	.Linfo_string575
	.long	.Linfo_string576
	.long	.Linfo_string577
	.long	.Linfo_string578
	.long	.Linfo_string579
	.long	.Linfo_string580
	.long	.Linfo_string581
	.long	.Linfo_string582
	.long	.Linfo_string583
	.long	.Linfo_string584
	.long	.Linfo_string585
	.long	.Linfo_string586
	.long	.Linfo_string587
	.long	.Linfo_string588
	.long	.Linfo_string589
	.long	.Linfo_string590
	.long	.Linfo_string591
	.long	.Linfo_string592
	.long	.Linfo_string593
	.long	.Linfo_string594
	.long	.Linfo_string595
	.long	.Linfo_string596
	.long	.Linfo_string597
	.long	.Linfo_string598
	.long	.Linfo_string599
	.long	.Linfo_string600
	.long	.Linfo_string601
	.long	.Linfo_string602
	.long	.Linfo_string603
	.long	.Linfo_string604
	.long	.Linfo_string605
	.long	.Linfo_string606
	.long	.Linfo_string607
	.long	.Linfo_string608
	.long	.Linfo_string609
	.long	.Linfo_string610
	.long	.Linfo_string611
	.long	.Linfo_string612
	.long	.Linfo_string613
	.long	.Linfo_string614
	.long	.Linfo_string615
	.long	.Linfo_string616
	.long	.Linfo_string617
	.long	.Linfo_string618
	.long	.Linfo_string619
	.long	.Linfo_string620
	.long	.Linfo_string621
	.long	.Linfo_string622
	.long	.Linfo_string623
	.long	.Linfo_string624
	.long	.Linfo_string625
	.long	.Linfo_string626
	.long	.Linfo_string627
	.long	.Linfo_string628
	.long	.Linfo_string629
	.long	.Linfo_string630
	.long	.Linfo_string631
	.long	.Linfo_string632
	.long	.Linfo_string633
	.long	.Linfo_string634
	.long	.Linfo_string635
	.long	.Linfo_string636
	.long	.Linfo_string637
	.long	.Linfo_string638
	.long	.Linfo_string639
	.long	.Linfo_string640
	.long	.Linfo_string641
	.long	.Linfo_string642
	.long	.Linfo_string643
	.long	.Linfo_string644
	.long	.Linfo_string645
	.long	.Linfo_string646
	.long	.Linfo_string647
	.long	.Linfo_string648
	.long	.Linfo_string649
	.long	.Linfo_string650
	.long	.Linfo_string651
	.long	.Linfo_string652
	.long	.Linfo_string653
	.long	.Linfo_string654
	.long	.Linfo_string655
	.long	.Linfo_string656
	.long	.Linfo_string657
	.long	.Linfo_string658
	.long	.Linfo_string659
	.long	.Linfo_string660
	.long	.Linfo_string661
	.long	.Linfo_string662
	.long	.Linfo_string663
	.long	.Linfo_string664
	.long	.Linfo_string665
	.long	.Linfo_string666
	.long	.Linfo_string667
	.long	.Linfo_string668
	.long	.Linfo_string669
	.long	.Linfo_string670
	.long	.Linfo_string671
	.long	.Linfo_string672
	.long	.Linfo_string673
	.long	.Linfo_string674
	.long	.Linfo_string675
	.long	.Linfo_string676
	.long	.Linfo_string677
	.long	.Linfo_string678
	.long	.Linfo_string679
	.long	.Linfo_string680
	.long	.Linfo_string681
	.long	.Linfo_string682
	.long	.Linfo_string683
	.long	.Linfo_string684
	.long	.Linfo_string685
	.long	.Linfo_string686
	.long	.Linfo_string687
	.long	.Linfo_string688
	.long	.Linfo_string689
	.long	.Linfo_string690
	.long	.Linfo_string691
	.long	.Linfo_string692
	.long	.Linfo_string693
	.long	.Linfo_string694
	.long	.Linfo_string695
	.long	.Linfo_string696
	.long	.Linfo_string697
	.long	.Linfo_string698
	.long	.Linfo_string699
	.long	.Linfo_string700
	.long	.Linfo_string701
	.long	.Linfo_string702
	.long	.Linfo_string703
	.long	.Linfo_string704
	.long	.Linfo_string705
	.long	.Linfo_string706
	.long	.Linfo_string707
	.long	.Linfo_string708
	.long	.Linfo_string709
	.long	.Linfo_string710
	.long	.Linfo_string711
	.long	.Linfo_string712
	.long	.Linfo_string713
	.long	.Linfo_string714
	.long	.Linfo_string715
	.long	.Linfo_string716
	.long	.Linfo_string717
	.long	.Linfo_string718
	.long	.Linfo_string719
	.long	.Linfo_string720
	.long	.Linfo_string721
	.long	.Linfo_string722
	.long	.Linfo_string723
	.long	.Linfo_string724
	.long	.Linfo_string725
	.long	.Linfo_string726
	.long	.Linfo_string727
	.long	.Linfo_string728
	.long	.Linfo_string729
	.long	.Linfo_string730
	.long	.Linfo_string731
	.long	.Linfo_string732
	.long	.Linfo_string733
	.long	.Linfo_string734
	.long	.Linfo_string735
	.long	.Linfo_string736
	.long	.Linfo_string737
	.long	.Linfo_string738
	.long	.Linfo_string739
	.long	.Linfo_string740
	.long	.Linfo_string741
	.long	.Linfo_string742
	.long	.Linfo_string743
	.long	.Linfo_string744
	.long	.Linfo_string745
	.long	.Linfo_string746
	.long	.Linfo_string747
	.long	.Linfo_string748
	.long	.Linfo_string749
	.long	.Linfo_string750
	.long	.Linfo_string751
	.long	.Linfo_string752
	.long	.Linfo_string753
	.long	.Linfo_string754
	.long	.Linfo_string755
	.long	.Linfo_string756
	.long	.Linfo_string757
	.long	.Linfo_string758
	.long	.Linfo_string759
	.long	.Linfo_string760
	.long	.Linfo_string761
	.long	.Linfo_string762
	.long	.Linfo_string763
	.long	.Linfo_string764
	.long	.Linfo_string765
	.long	.Linfo_string766
	.long	.Linfo_string767
	.long	.Linfo_string768
	.long	.Linfo_string769
	.long	.Linfo_string770
	.long	.Linfo_string771
	.long	.Linfo_string772
	.long	.Linfo_string773
	.long	.Linfo_string774
	.long	.Linfo_string775
	.long	.Linfo_string776
	.long	.Linfo_string777
	.long	.Linfo_string778
	.long	.Linfo_string779
	.long	.Linfo_string780
	.long	.Linfo_string781
	.long	.Linfo_string782
	.long	.Linfo_string783
	.long	.Linfo_string784
	.long	.Linfo_string785
	.long	.Linfo_string786
	.long	.Linfo_string787
	.long	.Linfo_string788
	.long	.Linfo_string789
	.long	.Linfo_string790
	.long	.Linfo_string791
	.long	.Linfo_string792
	.long	.Linfo_string793
	.long	.Linfo_string794
	.long	.Linfo_string795
	.long	.Linfo_string796
	.long	.Linfo_string797
	.long	.Linfo_string798
	.long	.Linfo_string799
	.long	.Linfo_string800
	.long	.Linfo_string801
	.long	.Linfo_string802
	.long	.Linfo_string803
	.long	.Linfo_string804
	.long	.Linfo_string805
	.long	.Linfo_string806
	.long	.Linfo_string807
	.long	.Linfo_string808
	.long	.Linfo_string809
	.long	.Linfo_string810
	.long	.Linfo_string811
	.long	.Linfo_string812
	.long	.Linfo_string813
	.long	.Linfo_string814
	.long	.Linfo_string815
	.long	.Linfo_string816
	.long	.Linfo_string817
	.long	.Linfo_string818
	.long	.Linfo_string819
	.long	.Linfo_string820
	.long	.Linfo_string821
	.long	.Linfo_string822
	.long	.Linfo_string823
	.long	.Linfo_string824
	.long	.Linfo_string825
	.long	.Linfo_string826
	.long	.Linfo_string827
	.long	.Linfo_string828
	.long	.Linfo_string829
	.long	.Linfo_string830
	.long	.Linfo_string831
	.long	.Linfo_string832
	.long	.Linfo_string833
	.long	.Linfo_string834
	.long	.Linfo_string835
	.long	.Linfo_string836
	.long	.Linfo_string837
	.long	.Linfo_string838
	.long	.Linfo_string839
	.long	.Linfo_string840
	.long	.Linfo_string841
	.long	.Linfo_string842
	.long	.Linfo_string843
	.long	.Linfo_string844
	.long	.Linfo_string845
	.long	.Linfo_string846
	.long	.Linfo_string847
	.long	.Linfo_string848
	.long	.Linfo_string849
	.long	.Linfo_string850
	.long	.Linfo_string851
	.long	.Linfo_string852
	.long	.Linfo_string853
	.long	.Linfo_string854
	.long	.Linfo_string855
	.long	.Linfo_string856
	.long	.Linfo_string857
	.long	.Linfo_string858
	.long	.Linfo_string859
	.long	.Linfo_string860
	.long	.Linfo_string861
	.long	.Linfo_string862
	.long	.Linfo_string863
	.long	.Linfo_string864
	.long	.Linfo_string865
	.long	.Linfo_string866
	.long	.Linfo_string867
	.long	.Linfo_string868
	.long	.Linfo_string869
	.long	.Linfo_string870
	.long	.Linfo_string871
	.long	.Linfo_string872
	.long	.Linfo_string873
	.long	.Linfo_string874
	.long	.Linfo_string875
	.long	.Linfo_string876
	.long	.Linfo_string877
	.long	.Linfo_string878
	.long	.Linfo_string879
	.long	.Linfo_string880
	.long	.Linfo_string881
	.long	.Linfo_string882
	.long	.Linfo_string883
	.long	.Linfo_string884
	.long	.Linfo_string885
	.long	.Linfo_string886
	.long	.Linfo_string887
	.long	.Linfo_string888
	.long	.Linfo_string889
	.long	.Linfo_string890
	.long	.Linfo_string891
	.long	.Linfo_string892
	.long	.Linfo_string893
	.long	.Linfo_string894
	.long	.Linfo_string895
	.long	.Linfo_string896
	.long	.Linfo_string897
	.long	.Linfo_string898
	.long	.Linfo_string899
	.long	.Linfo_string900
	.long	.Linfo_string901
	.long	.Linfo_string902
	.long	.Linfo_string903
	.long	.Linfo_string904
	.long	.Linfo_string905
	.long	.Linfo_string906
	.long	.Linfo_string907
	.long	.Linfo_string908
	.long	.Linfo_string909
	.long	.Linfo_string910
	.long	.Linfo_string911
	.long	.Linfo_string912
	.long	.Linfo_string913
	.long	.Linfo_string914
	.long	.Linfo_string915
	.long	.Linfo_string916
	.long	.Linfo_string917
	.long	.Linfo_string918
	.long	.Linfo_string919
	.long	.Linfo_string920
	.long	.Linfo_string921
	.long	.Linfo_string922
	.long	.Linfo_string923
	.long	.Linfo_string924
	.long	.Linfo_string925
	.long	.Linfo_string926
	.long	.Linfo_string927
	.long	.Linfo_string928
	.long	.Linfo_string929
	.long	.Linfo_string930
	.long	.Linfo_string931
	.long	.Linfo_string932
	.long	.Linfo_string933
	.long	.Linfo_string934
	.long	.Linfo_string935
	.long	.Linfo_string936
	.long	.Linfo_string937
	.long	.Linfo_string938
	.long	.Linfo_string939
	.long	.Linfo_string940
	.long	.Linfo_string941
	.long	.Linfo_string942
	.long	.Linfo_string943
	.long	.Linfo_string944
	.long	.Linfo_string945
	.long	.Linfo_string946
	.long	.Linfo_string947
	.long	.Linfo_string948
	.long	.Linfo_string949
	.long	.Linfo_string950
	.section	.debug_addr,"",@progbits
	.long	.Ldebug_addr_end0-.Ldebug_addr_start0 # Length of contribution
.Ldebug_addr_start0:
	.short	5                               # DWARF version number
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
.Laddr_table_base0:
	.quad	x264_me_search_ref.x264_pixel_size_shift
	.quad	x264_me_search_ref.range_mul
	.quad	x264_me_search_ref.hex4
	.quad	x264_me_search_ref.zero
	.quad	x264_iter_kludge
	.quad	x264_pixel_size
	.quad	hex2
	.quad	mod6m1
	.quad	square1
	.quad	subpel_iterations
	.quad	x264_me_refine_bidir.dia4d
	.quad	x264_scan8
	.quad	block_idx_xy_fdec
	.quad	block_idx_x
	.quad	block_idx_y
	.quad	.Lfunc_begin0
	.quad	.Ltmp34
	.quad	.Ltmp40
	.quad	.Ltmp49
	.quad	.Ltmp57
	.quad	.Ltmp59
	.quad	.Ltmp63
	.quad	.Ltmp68
	.quad	.Ltmp95
	.quad	.Ltmp81
	.quad	.Ltmp121
	.quad	.Ltmp134
	.quad	.Ltmp141
	.quad	.Ltmp103
	.quad	.Ltmp474
	.quad	.Ltmp476
	.quad	.Ltmp362
	.quad	.Ltmp374
	.quad	.Ltmp642
	.quad	.Ltmp536
	.quad	.Ltmp580
	.quad	.Ltmp191
	.quad	.Ltmp220
	.quad	.Ltmp810
	.quad	.Ltmp893
	.quad	.Ltmp903
	.quad	.Ltmp920
	.quad	.Ltmp958
	.quad	.Ltmp972
	.quad	.Ltmp983
	.quad	.Ltmp1008
	.quad	.Ltmp600
	.quad	.Ltmp850
	.quad	.Ltmp1058
	.quad	.Ltmp1114
	.quad	.Ltmp1124
	.quad	.Ltmp1184
	.quad	.Ltmp1198
	.quad	.Ltmp1328
	.quad	.Ltmp1330
	.quad	.Ltmp1334
	.quad	.Ltmp278
	.quad	.Ltmp281
	.quad	.Ltmp300
	.quad	.Ltmp311
	.quad	.Ltmp783
	.quad	.Ltmp43
	.quad	.Ltmp44
	.quad	.Ltmp70
	.quad	.Ltmp72
	.quad	.Ltmp80
	.quad	.Ltmp97
	.quad	.Ltmp105
	.quad	.Ltmp145
	.quad	.Ltmp186
	.quad	.Ltmp194
	.quad	.Ltmp222
	.quad	.Ltmp255
	.quad	.Ltmp280
	.quad	.Ltmp282
	.quad	.Ltmp316
	.quad	.Ltmp351
	.quad	.Ltmp467
	.quad	.Ltmp475
	.quad	.Ltmp517
	.quad	.Ltmp542
	.quad	.Ltmp551
	.quad	.Ltmp582
	.quad	.Ltmp604
	.quad	.Ltmp644
	.quad	.Ltmp663
	.quad	.Ltmp686
	.quad	.Ltmp738
	.quad	.Ltmp753
	.quad	.Ltmp786
	.quad	.Ltmp812
	.quad	.Ltmp895
	.quad	.Ltmp905
	.quad	.Ltmp922
	.quad	.Ltmp960
	.quad	.Ltmp974
	.quad	.Ltmp985
	.quad	.Ltmp1009
	.quad	.Ltmp1059
	.quad	.Ltmp1116
	.quad	.Ltmp1126
	.quad	.Ltmp1148
	.quad	.Ltmp1186
	.quad	.Ltmp1200
	.quad	.Ltmp1217
	.quad	.Ltmp1251
	.quad	.Ltmp1254
	.quad	.Ltmp1255
	.quad	.Ltmp1258
	.quad	.Ltmp1336
	.quad	.Lfunc_begin1
	.quad	.Ltmp1378
	.quad	.Ltmp1381
	.quad	.Ltmp1463
	.quad	.Ltmp1395
	.quad	.Ltmp1517
	.quad	.Ltmp1555
	.quad	.Ltmp1600
	.quad	.Ltmp1643
	.quad	.Ltmp1686
	.quad	.Ltmp1397
	.quad	.Ltmp1399
	.quad	.Ltmp1404
	.quad	.Ltmp1437
	.quad	.Ltmp1439
	.quad	.Ltmp1446
	.quad	.Ltmp1450
	.quad	.Ltmp1451
	.quad	.Ltmp1456
	.quad	.Ltmp1460
	.quad	.Ltmp1461
	.quad	.Ltmp1469
	.quad	.Ltmp1472
	.quad	.Ltmp1520
	.quad	.Ltmp1523
	.quad	.Ltmp1527
	.quad	.Ltmp1531
	.quad	.Ltmp1532
	.quad	.Ltmp1538
	.quad	.Ltmp1542
	.quad	.Ltmp1543
	.quad	.Ltmp1557
	.quad	.Ltmp1559
	.quad	.Ltmp1565
	.quad	.Ltmp1569
	.quad	.Ltmp1570
	.quad	.Ltmp1576
	.quad	.Ltmp1580
	.quad	.Ltmp1581
	.quad	.Ltmp1602
	.quad	.Ltmp1604
	.quad	.Ltmp1609
	.quad	.Ltmp1613
	.quad	.Ltmp1614
	.quad	.Ltmp1620
	.quad	.Ltmp1624
	.quad	.Ltmp1625
	.quad	.Ltmp1645
	.quad	.Ltmp1647
	.quad	.Ltmp1652
	.quad	.Ltmp1656
	.quad	.Ltmp1657
	.quad	.Ltmp1663
	.quad	.Ltmp1667
	.quad	.Ltmp1668
	.quad	.Ltmp1691
	.quad	.Ltmp1693
	.quad	.Ltmp1695
	.quad	.Ltmp1696
	.quad	.Ltmp1697
	.quad	.Lfunc_begin2
	.quad	.Ltmp1722
	.quad	.Lfunc_begin3
	.quad	.Ltmp1728
	.quad	.Lfunc_begin4
	.quad	.Ltmp1731
	.quad	.Lfunc_begin5
	.quad	.Ltmp1864
	.quad	.Ltmp1866
	.quad	.Ltmp1870
	.quad	.Ltmp1902
	.quad	.Ltmp1904
	.quad	.Ltmp1906
	.quad	.Ltmp2010
	.quad	.Ltmp2011
	.quad	.Ltmp2012
	.quad	.Ltmp1768
	.quad	.Ltmp1769
	.quad	.Ltmp1781
	.quad	.Ltmp1800
	.quad	.Ltmp1806
	.quad	.Ltmp1807
	.quad	.Ltmp1822
	.quad	.Ltmp1828
	.quad	.Ltmp1829
	.quad	.Ltmp1856
	.quad	.Ltmp1857
	.quad	.Ltmp1874
	.quad	.Ltmp1875
	.quad	.Ltmp1876
	.quad	.Lfunc_begin6
	.quad	.Ltmp2107
	.quad	.Lfunc_begin7
	.quad	.Ltmp2154
	.quad	.Ltmp2415
	.quad	.Ltmp2192
	.quad	.Ltmp2207
	.quad	.Ltmp2231
	.quad	.Ltmp2246
	.quad	.Ltmp2265
	.quad	.Ltmp2135
	.quad	.Ltmp2145
	.quad	.Ltmp2146
	.quad	.Ltmp2161
	.quad	.Ltmp2162
	.quad	.Ltmp2165
	.quad	.Ltmp2201
	.quad	.Ltmp2203
	.quad	.Ltmp2215
	.quad	.Ltmp2216
	.quad	.Ltmp2219
	.quad	.Ltmp2240
	.quad	.Ltmp2242
	.quad	.Ltmp2254
	.quad	.Ltmp2255
	.quad	.Ltmp2258
	.quad	.Ltmp2278
	.quad	.Ltmp2279
	.quad	.Ltmp2298
	.quad	.Ltmp2299
	.quad	.Ltmp2313
	.quad	.Ltmp2314
	.quad	.Ltmp2317
	.quad	.Ltmp2335
	.quad	.Ltmp2336
	.quad	.Ltmp2350
	.quad	.Ltmp2351
	.quad	.Ltmp2354
	.quad	.Ltmp2370
	.quad	.Ltmp2371
	.quad	.Ltmp2388
	.quad	.Ltmp2389
	.quad	.Ltmp2392
	.quad	.Ltmp2423
	.quad	.Ltmp2424
	.quad	.Ltmp2427
.Ldebug_addr_end0:
	.ident	"clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)"
	.section	".note.GNU-stack","",@progbits
	.section	.debug_line,"",@progbits
.Lline_table_start0:
