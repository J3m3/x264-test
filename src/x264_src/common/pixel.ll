; ModuleID = 'x264_src/common/pixel.c'
source_filename = "x264_src/common/pixel.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind uwtable
define dso_local i64 @x264_pixel_ssd_wxh(ptr nocapture noundef readonly %pf, ptr noundef %pix1, i32 noundef %i_pix1, ptr noundef %pix2, i32 noundef %i_pix2, i32 noundef %i_width, i32 noundef %i_height) local_unnamed_addr #0 !dbg !57 {
entry:
    #dbg_value(ptr %pf, !155, !DIExpression(), !190)
    #dbg_value(ptr %pix1, !156, !DIExpression(), !190)
    #dbg_value(i32 %i_pix1, !157, !DIExpression(), !190)
    #dbg_value(ptr %pix2, !158, !DIExpression(), !190)
    #dbg_value(i32 %i_pix2, !159, !DIExpression(), !190)
    #dbg_value(i32 %i_width, !160, !DIExpression(), !190)
    #dbg_value(i32 %i_height, !161, !DIExpression(), !190)
    #dbg_value(i64 0, !162, !DIExpression(), !190)
    #dbg_value(!DIArgList(i32 %i_pix1, i32 %i_pix2, ptr %pix2, ptr %pix1), !164, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_arg, 3, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_or, DW_OP_constu, 15, DW_OP_and, DW_OP_lit0, DW_OP_eq, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !190)
    #dbg_value(i32 0, !163, !DIExpression(), !190)
  %sub = add nsw i32 %i_height, -15
  %cmp231 = icmp sgt i32 %i_height, 15, !dbg !191
  br i1 %cmp231, label %for.body.lr.ph, label %for.end45, !dbg !192

for.body.lr.ph:                                   ; preds = %entry
  %conv = zext i32 %i_pix1 to i64, !dbg !193
    #dbg_value(!DIArgList(i64 %conv, i32 %i_pix2, ptr %pix2, ptr %pix1), !164, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_or, DW_OP_constu, 15, DW_OP_and, DW_OP_lit0, DW_OP_eq, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !190)
  %0 = ptrtoint ptr %pix1 to i64, !dbg !194
    #dbg_value(!DIArgList(i64 %conv, i32 %i_pix2, ptr %pix2, i64 %0), !164, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_or, DW_OP_constu, 15, DW_OP_and, DW_OP_lit0, DW_OP_eq, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !190)
  %or = or i64 %conv, %0, !dbg !195
    #dbg_value(!DIArgList(i64 %or, i32 %i_pix2, ptr %pix2), !164, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_or, DW_OP_constu, 15, DW_OP_and, DW_OP_lit0, DW_OP_eq, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !190)
  %1 = ptrtoint ptr %pix2 to i64, !dbg !196
    #dbg_value(!DIArgList(i64 %or, i32 %i_pix2, i64 %1), !164, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_or, DW_OP_constu, 15, DW_OP_and, DW_OP_lit0, DW_OP_eq, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !190)
  %or1 = or i64 %or, %1, !dbg !197
    #dbg_value(!DIArgList(i64 %or1, i32 %i_pix2), !164, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_or, DW_OP_constu, 15, DW_OP_and, DW_OP_lit0, DW_OP_eq, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !190)
  %conv2 = zext i32 %i_pix2 to i64, !dbg !198
    #dbg_value(!DIArgList(i64 %or1, i64 %conv2), !164, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 15, DW_OP_and, DW_OP_lit0, DW_OP_eq, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !190)
  %or3 = or i64 %or1, %conv2, !dbg !199
    #dbg_value(i64 %or3, !164, !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_lit0, DW_OP_eq, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !190)
  %and = and i64 %or3, 15, !dbg !200
    #dbg_value(i64 %and, !164, !DIExpression(DW_OP_lit0, DW_OP_eq, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !190)
  %tobool.not = icmp eq i64 %and, 0, !dbg !201
    #dbg_value(i1 %tobool.not, !164, !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !190)
  %sub7 = add nsw i32 %i_width, -15
  %cmp8223 = icmp sgt i32 %i_width, 15
  %ssd = getelementptr inbounds i8, ptr %pf, i64 56
  %sub21 = add nsw i32 %i_width, -7
  %arrayidx26 = getelementptr inbounds i8, ptr %pf, i64 72
  br i1 %tobool.not, label %for.body.us.preheader, label %for.body.lr.ph.split

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %2 = sext i32 %i_pix1 to i64, !dbg !192
  %3 = sext i32 %i_pix2 to i64, !dbg !192
  %4 = zext nneg i32 %sub to i64, !dbg !192
  br label %for.body.us, !dbg !192

for.body.us:                                      ; preds = %for.body.us.preheader, %for.end42.us
  %indvars.iv306 = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next307, %for.end42.us ]
  %i_ssd.0234.us = phi i64 [ 0, %for.body.us.preheader ], [ %i_ssd.3.lcssa.us, %for.end42.us ]
    #dbg_value(i64 %indvars.iv306, !163, !DIExpression(), !190)
    #dbg_value(i64 %i_ssd.0234.us, !162, !DIExpression(), !190)
    #dbg_value(i32 0, !165, !DIExpression(), !202)
  br i1 %cmp8223, label %for.body10.lr.ph.us, label %if.end.loopexit.us, !dbg !203

for.end42.us:                                     ; preds = %for.body24.us, %if.end.loopexit.us
  %i_ssd.3.lcssa.us = phi i64 [ %i_ssd.1.lcssa.us, %if.end.loopexit.us ], [ %add39.us, %for.body24.us ], !dbg !190
  %indvars.iv.next307 = add nuw nsw i64 %indvars.iv306, 16, !dbg !206
    #dbg_value(i64 %i_ssd.3.lcssa.us, !162, !DIExpression(), !190)
    #dbg_value(i64 %indvars.iv.next307, !163, !DIExpression(), !190)
  %cmp.us = icmp ult i64 %indvars.iv.next307, %4, !dbg !191
  br i1 %cmp.us, label %for.body.us, label %for.end45.loopexit, !dbg !192, !llvm.loop !207

for.body24.us:                                    ; preds = %for.body24.lr.ph.us, %for.body24.us
  %indvars.iv303 = phi i64 [ %13, %for.body24.lr.ph.us ], [ %indvars.iv.next304, %for.body24.us ]
  %i_ssd.3229.us = phi i64 [ %i_ssd.1.lcssa.us, %for.body24.lr.ph.us ], [ %add39.us, %for.body24.us ]
    #dbg_value(i64 %i_ssd.3229.us, !162, !DIExpression(), !190)
    #dbg_value(i64 %indvars.iv303, !165, !DIExpression(), !202)
  %5 = load ptr, ptr %arrayidx26, align 8, !dbg !209
  %add.ptr31.us = getelementptr inbounds i8, ptr %add.ptr29.us, i64 %indvars.iv303, !dbg !209
  %add.ptr36.us = getelementptr inbounds i8, ptr %add.ptr34.us, i64 %indvars.iv303, !dbg !209
  %call37.us = tail call i32 %5(ptr noundef %add.ptr31.us, i32 noundef %i_pix1, ptr noundef %add.ptr36.us, i32 noundef %i_pix2) #13, !dbg !209
  %conv38.us = sext i32 %call37.us to i64, !dbg !209
  %add39.us = add nsw i64 %i_ssd.3229.us, %conv38.us, !dbg !209
    #dbg_value(i64 %add39.us, !162, !DIExpression(), !190)
  %indvars.iv.next304 = add nuw nsw i64 %indvars.iv303, 8, !dbg !212
    #dbg_value(i64 %indvars.iv.next304, !165, !DIExpression(), !202)
  %6 = trunc nuw i64 %indvars.iv.next304 to i32, !dbg !213
  %cmp22.us = icmp sgt i32 %sub21, %6, !dbg !213
  br i1 %cmp22.us, label %for.body24.us, label %for.end42.us, !dbg !214, !llvm.loop !215

for.body10.us:                                    ; preds = %for.body10.lr.ph.us, %for.body10.us
  %indvars.iv300 = phi i64 [ 0, %for.body10.lr.ph.us ], [ %indvars.iv.next301, %for.body10.us ]
  %i_ssd.1225.us = phi i64 [ %i_ssd.0234.us, %for.body10.lr.ph.us ], [ %add.us, %for.body10.us ]
    #dbg_value(i64 %i_ssd.1225.us, !162, !DIExpression(), !190)
    #dbg_value(i64 %indvars.iv300, !165, !DIExpression(), !202)
  %7 = load ptr, ptr %ssd, align 8, !dbg !217
  %add.ptr12.us = getelementptr inbounds i8, ptr %add.ptr.us, i64 %indvars.iv300, !dbg !217
  %add.ptr17.us = getelementptr inbounds i8, ptr %add.ptr15.us, i64 %indvars.iv300, !dbg !217
  %call.us = tail call i32 %7(ptr noundef %add.ptr12.us, i32 noundef %i_pix1, ptr noundef %add.ptr17.us, i32 noundef %i_pix2) #13, !dbg !217
  %conv18.us = sext i32 %call.us to i64, !dbg !217
  %add.us = add nsw i64 %i_ssd.1225.us, %conv18.us, !dbg !217
    #dbg_value(i64 %add.us, !162, !DIExpression(), !190)
  %indvars.iv.next301 = add nuw nsw i64 %indvars.iv300, 16, !dbg !219
    #dbg_value(i64 %indvars.iv.next301, !165, !DIExpression(), !202)
  %8 = trunc nuw i64 %indvars.iv.next301 to i32, !dbg !220
  %cmp8.us = icmp sgt i32 %sub7, %8, !dbg !220
  br i1 %cmp8.us, label %for.body10.us, label %if.end.loopexit.us, !dbg !203, !llvm.loop !221

if.end.loopexit.us:                               ; preds = %for.body10.us, %for.body.us
  %x.0.lcssa.us = phi i32 [ 0, %for.body.us ], [ %8, %for.body10.us ], !dbg !202
  %i_ssd.1.lcssa.us = phi i64 [ %i_ssd.0234.us, %for.body.us ], [ %add.us, %for.body10.us ], !dbg !190
    #dbg_value(i64 poison, !162, !DIExpression(), !190)
    #dbg_value(i32 poison, !165, !DIExpression(), !202)
  %cmp22227.us = icmp slt i32 %x.0.lcssa.us, %sub21, !dbg !213
  br i1 %cmp22227.us, label %for.body24.lr.ph.us, label %for.end42.us, !dbg !214

for.body10.lr.ph.us:                              ; preds = %for.body.us
  %9 = mul nsw i64 %indvars.iv306, %2
  %add.ptr.us = getelementptr inbounds i8, ptr %pix1, i64 %9
  %10 = mul nsw i64 %indvars.iv306, %3
  %add.ptr15.us = getelementptr inbounds i8, ptr %pix2, i64 %10
  br label %for.body10.us, !dbg !203

for.body24.lr.ph.us:                              ; preds = %if.end.loopexit.us
  %11 = mul nsw i64 %indvars.iv306, %2
  %add.ptr29.us = getelementptr inbounds i8, ptr %pix1, i64 %11
  %12 = mul nsw i64 %indvars.iv306, %3
  %add.ptr34.us = getelementptr inbounds i8, ptr %pix2, i64 %12
  %13 = zext i32 %x.0.lcssa.us to i64, !dbg !214
  br label %for.body24.us, !dbg !214

for.body.lr.ph.split:                             ; preds = %for.body.lr.ph
  %cmp22227 = icmp sgt i32 %i_width, 7
  br i1 %cmp22227, label %for.body.us238.preheader, label %for.body.preheader

for.body.preheader:                               ; preds = %for.body.lr.ph.split
  %14 = and i32 %i_height, 2147483632, !dbg !192
    #dbg_value(i64 poison, !162, !DIExpression(), !190)
    #dbg_value(i32 poison, !163, !DIExpression(), !190)
    #dbg_value(i32 0, !165, !DIExpression(), !202)
  br label %for.end45, !dbg !223

for.body.us238.preheader:                         ; preds = %for.body.lr.ph.split
  %15 = zext nneg i32 %sub to i64, !dbg !192
  %16 = sext i32 %i_pix1 to i64, !dbg !192
  %17 = sext i32 %i_pix2 to i64, !dbg !192
  br label %for.body.us238, !dbg !192

for.body.us238:                                   ; preds = %for.body.us238.preheader, %for.cond20.for.end42_crit_edge.us263
  %indvars.iv295 = phi i64 [ 0, %for.body.us238.preheader ], [ %indvars.iv.next296, %for.cond20.for.end42_crit_edge.us263 ]
  %i_ssd.0234.us239 = phi i64 [ 0, %for.body.us238.preheader ], [ %add39.us253, %for.cond20.for.end42_crit_edge.us263 ]
    #dbg_value(i64 %indvars.iv295, !163, !DIExpression(), !190)
    #dbg_value(i64 %i_ssd.0234.us239, !162, !DIExpression(), !190)
    #dbg_value(i32 0, !165, !DIExpression(), !202)
  %18 = mul nsw i64 %indvars.iv295, %16
  %add.ptr29.us259 = getelementptr inbounds i8, ptr %pix1, i64 %18
  %19 = mul nsw i64 %indvars.iv295, %17
  %add.ptr34.us262 = getelementptr inbounds i8, ptr %pix2, i64 %19
  br label %for.body24.us245, !dbg !214

for.body24.us245:                                 ; preds = %for.body.us238, %for.body24.us245
  %indvars.iv = phi i64 [ 0, %for.body.us238 ], [ %indvars.iv.next, %for.body24.us245 ]
  %i_ssd.3229.us246 = phi i64 [ %i_ssd.0234.us239, %for.body.us238 ], [ %add39.us253, %for.body24.us245 ]
    #dbg_value(i64 %i_ssd.3229.us246, !162, !DIExpression(), !190)
    #dbg_value(i64 %indvars.iv, !165, !DIExpression(), !202)
  %20 = load ptr, ptr %arrayidx26, align 8, !dbg !209
  %add.ptr31.us249 = getelementptr inbounds i8, ptr %add.ptr29.us259, i64 %indvars.iv, !dbg !209
  %add.ptr36.us250 = getelementptr inbounds i8, ptr %add.ptr34.us262, i64 %indvars.iv, !dbg !209
  %call37.us251 = tail call i32 %20(ptr noundef %add.ptr31.us249, i32 noundef %i_pix1, ptr noundef %add.ptr36.us250, i32 noundef %i_pix2) #13, !dbg !209
  %conv38.us252 = sext i32 %call37.us251 to i64, !dbg !209
  %add39.us253 = add nsw i64 %i_ssd.3229.us246, %conv38.us252, !dbg !209
    #dbg_value(i64 %add39.us253, !162, !DIExpression(), !190)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 8, !dbg !212
    #dbg_value(i64 %indvars.iv.next, !165, !DIExpression(), !202)
  %21 = trunc nuw i64 %indvars.iv.next to i32, !dbg !213
  %cmp22.us255 = icmp sgt i32 %sub21, %21, !dbg !213
  br i1 %cmp22.us255, label %for.body24.us245, label %for.cond20.for.end42_crit_edge.us263, !dbg !214, !llvm.loop !215

for.cond20.for.end42_crit_edge.us263:             ; preds = %for.body24.us245
  %indvars.iv.next296 = add nuw nsw i64 %indvars.iv295, 16, !dbg !206
    #dbg_value(i64 poison, !162, !DIExpression(), !190)
    #dbg_value(i64 %indvars.iv.next296, !163, !DIExpression(), !190)
  %cmp.us244 = icmp ult i64 %indvars.iv.next296, %15, !dbg !191
  br i1 %cmp.us244, label %for.body.us238, label %for.end45.loopexit292, !dbg !192, !llvm.loop !207

for.end45.loopexit:                               ; preds = %for.end42.us
  %22 = trunc nsw i64 %indvars.iv.next307 to i32, !dbg !223
  br label %for.end45, !dbg !223

for.end45.loopexit292:                            ; preds = %for.cond20.for.end42_crit_edge.us263
  %23 = trunc nsw i64 %indvars.iv.next296 to i32, !dbg !223
  br label %for.end45, !dbg !223

for.end45:                                        ; preds = %for.body.preheader, %for.end45.loopexit292, %for.end45.loopexit, %entry
  %y.0.lcssa = phi i32 [ 0, %entry ], [ %22, %for.end45.loopexit ], [ %23, %for.end45.loopexit292 ], [ %14, %for.body.preheader ], !dbg !224
  %i_ssd.0.lcssa = phi i64 [ 0, %entry ], [ %i_ssd.3.lcssa.us, %for.end45.loopexit ], [ %add39.us253, %for.end45.loopexit292 ], [ 0, %for.body.preheader ], !dbg !225
  %sub46 = add nsw i32 %i_height, -7, !dbg !223
  %cmp47 = icmp slt i32 %y.0.lcssa, %sub46, !dbg !226
  br i1 %cmp47, label %for.cond51.preheader, label %if.end74, !dbg !227

for.cond51.preheader:                             ; preds = %for.end45
  %sub52 = add nsw i32 %i_width, -7
    #dbg_value(i64 %i_ssd.0.lcssa, !162, !DIExpression(), !190)
    #dbg_value(i32 0, !169, !DIExpression(), !228)
  %cmp53269 = icmp sgt i32 %i_width, 7, !dbg !229
  br i1 %cmp53269, label %for.body55.lr.ph, label %if.end74, !dbg !231

for.body55.lr.ph:                                 ; preds = %for.cond51.preheader
  %arrayidx57 = getelementptr inbounds i8, ptr %pf, i64 80
  %mul58 = mul nsw i32 %y.0.lcssa, %i_pix1
  %idx.ext59 = sext i32 %mul58 to i64
  %add.ptr60 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext59
  %mul63 = mul nsw i32 %y.0.lcssa, %i_pix2
  %idx.ext64 = sext i32 %mul63 to i64
  %add.ptr65 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext64
  br label %for.body55, !dbg !231

for.body55:                                       ; preds = %for.body55.lr.ph, %for.body55
  %indvars.iv313 = phi i64 [ 0, %for.body55.lr.ph ], [ %indvars.iv.next314, %for.body55 ]
  %i_ssd.4271 = phi i64 [ %i_ssd.0.lcssa, %for.body55.lr.ph ], [ %add70, %for.body55 ]
    #dbg_value(i64 %i_ssd.4271, !162, !DIExpression(), !190)
    #dbg_value(i64 %indvars.iv313, !169, !DIExpression(), !228)
  %24 = load ptr, ptr %arrayidx57, align 8, !dbg !232
  %add.ptr62 = getelementptr inbounds i8, ptr %add.ptr60, i64 %indvars.iv313, !dbg !232
  %add.ptr67 = getelementptr inbounds i8, ptr %add.ptr65, i64 %indvars.iv313, !dbg !232
  %call68 = tail call i32 %24(ptr noundef %add.ptr62, i32 noundef %i_pix1, ptr noundef %add.ptr67, i32 noundef %i_pix2) #13, !dbg !232
  %conv69 = sext i32 %call68 to i64, !dbg !232
  %add70 = add nsw i64 %i_ssd.4271, %conv69, !dbg !232
    #dbg_value(i64 %add70, !162, !DIExpression(), !190)
  %indvars.iv.next314 = add nuw nsw i64 %indvars.iv313, 8, !dbg !233
    #dbg_value(i64 %indvars.iv.next314, !169, !DIExpression(), !228)
  %25 = trunc nuw i64 %indvars.iv.next314 to i32, !dbg !229
  %cmp53 = icmp sgt i32 %sub52, %25, !dbg !229
  br i1 %cmp53, label %for.body55, label %if.end74, !dbg !231, !llvm.loop !234

if.end74:                                         ; preds = %for.body55, %for.cond51.preheader, %for.end45
  %i_ssd.5 = phi i64 [ %i_ssd.0.lcssa, %for.end45 ], [ %i_ssd.0.lcssa, %for.cond51.preheader ], [ %add70, %for.body55 ], !dbg !225
    #dbg_value(i64 %i_ssd.5, !162, !DIExpression(), !190)
  %and75 = and i32 %i_width, 7, !dbg !236
  %tobool76.not = icmp eq i32 %and75, 0, !dbg !236
  br i1 %tobool76.not, label %if.end108, label %for.cond78.preheader, !dbg !237

for.cond78.preheader:                             ; preds = %if.end74
  %and79 = and i32 %i_height, -8
    #dbg_value(i64 %i_ssd.5, !162, !DIExpression(), !190)
    #dbg_value(i32 0, !163, !DIExpression(), !190)
  %cmp80276 = icmp sgt i32 %and79, 0, !dbg !238
  br i1 %cmp80276, label %for.body82.lr.ph, label %if.end108, !dbg !239

for.body82.lr.ph:                                 ; preds = %for.cond78.preheader
  %and84 = and i32 %i_width, -8
  %cmp86272.not = icmp eq i32 %and84, %i_width
  br i1 %cmp86272.not, label %if.end108, label %for.body82.us.preheader

for.body82.us.preheader:                          ; preds = %for.body82.lr.ph
  %26 = sext i32 %and84 to i64, !dbg !239
  %27 = sext i32 %i_width to i64, !dbg !239
  %28 = sext i32 %i_pix1 to i64, !dbg !239
  %29 = sext i32 %i_pix2 to i64, !dbg !239
  %wide.trip.count = zext nneg i32 %and79 to i64, !dbg !238
  %30 = or disjoint i64 %26, 1, !dbg !239
  %smax = tail call i64 @llvm.smax.i64(i64 %30, i64 %27), !dbg !239
  %31 = sub i64 %smax, %26, !dbg !239
  %min.iters.check = icmp ult i64 %31, 4
  %n.mod.vf = and i64 %smax, 3
  %n.vec = sub i64 %31, %n.mod.vf
  %ind.end = add i64 %n.vec, %26
  %cmp.n = icmp eq i64 %n.mod.vf, 0
  br label %for.body82.us, !dbg !239

for.body82.us:                                    ; preds = %for.body82.us.preheader, %for.cond85.for.cond.cleanup88_crit_edge.us
  %indvars.iv321 = phi i64 [ 0, %for.body82.us.preheader ], [ %indvars.iv.next322, %for.cond85.for.cond.cleanup88_crit_edge.us ]
  %i_ssd.6278.us = phi i64 [ %i_ssd.5, %for.body82.us.preheader ], [ %add102.us.lcssa, %for.cond85.for.cond.cleanup88_crit_edge.us ]
    #dbg_value(i64 %indvars.iv321, !163, !DIExpression(), !190)
    #dbg_value(i32 %and84, !172, !DIExpression(), !240)
    #dbg_value(i64 %i_ssd.6278.us, !162, !DIExpression(), !190)
  %32 = mul nsw i64 %indvars.iv321, %28
  %33 = mul nsw i64 %indvars.iv321, %29
  %invariant.gep = getelementptr i8, ptr %pix1, i64 %32, !dbg !241
  %invariant.gep338 = getelementptr i8, ptr %pix2, i64 %33, !dbg !241
  br i1 %min.iters.check, label %for.body89.us.preheader, label %vector.body, !dbg !241

vector.body:                                      ; preds = %for.body82.us, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body82.us ]
  %vec.phi = phi i64 [ %73, %vector.body ], [ %i_ssd.6278.us, %for.body82.us ]
  %vec.phi344 = phi i64 [ %74, %vector.body ], [ 0, %for.body82.us ]
  %vec.phi345 = phi i64 [ %75, %vector.body ], [ 0, %for.body82.us ]
  %vec.phi346 = phi i64 [ %76, %vector.body ], [ 0, %for.body82.us ]
  %offset.idx = add i64 %index, %26, !dbg !241
  %34 = or disjoint i64 %offset.idx, 1, !dbg !241
  %35 = or disjoint i64 %offset.idx, 2, !dbg !241
  %36 = or disjoint i64 %offset.idx, 3, !dbg !241
  %37 = getelementptr i8, ptr %invariant.gep, i64 %offset.idx, !dbg !242
  %38 = getelementptr i8, ptr %invariant.gep, i64 %34, !dbg !242
  %39 = getelementptr i8, ptr %invariant.gep, i64 %35, !dbg !242
  %40 = getelementptr i8, ptr %invariant.gep, i64 %36, !dbg !242
  %41 = load i8, ptr %37, align 1, !dbg !242
  %42 = load i8, ptr %38, align 1, !dbg !242
  %43 = load i8, ptr %39, align 1, !dbg !242
  %44 = load i8, ptr %40, align 1, !dbg !242
  %45 = zext i8 %41 to i32, !dbg !242
  %46 = zext i8 %42 to i32, !dbg !242
  %47 = zext i8 %43 to i32, !dbg !242
  %48 = zext i8 %44 to i32, !dbg !242
  %49 = getelementptr i8, ptr %invariant.gep338, i64 %offset.idx, !dbg !242
  %50 = getelementptr i8, ptr %invariant.gep338, i64 %34, !dbg !242
  %51 = getelementptr i8, ptr %invariant.gep338, i64 %35, !dbg !242
  %52 = getelementptr i8, ptr %invariant.gep338, i64 %36, !dbg !242
  %53 = load i8, ptr %49, align 1, !dbg !242
  %54 = load i8, ptr %50, align 1, !dbg !242
  %55 = load i8, ptr %51, align 1, !dbg !242
  %56 = load i8, ptr %52, align 1, !dbg !242
  %57 = zext i8 %53 to i32, !dbg !242
  %58 = zext i8 %54 to i32, !dbg !242
  %59 = zext i8 %55 to i32, !dbg !242
  %60 = zext i8 %56 to i32, !dbg !242
  %61 = sub nsw i32 %45, %57, !dbg !242
  %62 = sub nsw i32 %46, %58, !dbg !242
  %63 = sub nsw i32 %47, %59, !dbg !242
  %64 = sub nsw i32 %48, %60, !dbg !242
  %65 = mul nsw i32 %61, %61, !dbg !242
  %66 = mul nsw i32 %62, %62, !dbg !242
  %67 = mul nsw i32 %63, %63, !dbg !242
  %68 = mul nsw i32 %64, %64, !dbg !242
  %69 = zext nneg i32 %65 to i64, !dbg !242
  %70 = zext nneg i32 %66 to i64, !dbg !242
  %71 = zext nneg i32 %67 to i64, !dbg !242
  %72 = zext nneg i32 %68 to i64, !dbg !242
  %73 = add i64 %vec.phi, %69, !dbg !242
  %74 = add i64 %vec.phi344, %70, !dbg !242
  %75 = add i64 %vec.phi345, %71, !dbg !242
  %76 = add i64 %vec.phi346, %72, !dbg !242
  %index.next = add nuw i64 %index, 4
  %77 = icmp eq i64 %index.next, %n.vec
  br i1 %77, label %middle.block, label %vector.body, !llvm.loop !243

middle.block:                                     ; preds = %vector.body
  %bin.rdx = add i64 %74, %73, !dbg !241
  %bin.rdx347 = add i64 %75, %bin.rdx, !dbg !241
  %bin.rdx348 = add i64 %76, %bin.rdx347, !dbg !241
  br i1 %cmp.n, label %for.cond85.for.cond.cleanup88_crit_edge.us, label %for.body89.us.preheader, !dbg !241

for.body89.us.preheader:                          ; preds = %middle.block, %for.body82.us
  %indvars.iv316.ph = phi i64 [ %26, %for.body82.us ], [ %ind.end, %middle.block ]
  %i_ssd.7274.us.ph = phi i64 [ %i_ssd.6278.us, %for.body82.us ], [ %bin.rdx348, %middle.block ]
  br label %for.body89.us, !dbg !241

for.body89.us:                                    ; preds = %for.body89.us.preheader, %for.body89.us
  %indvars.iv316 = phi i64 [ %indvars.iv.next317, %for.body89.us ], [ %indvars.iv316.ph, %for.body89.us.preheader ]
  %i_ssd.7274.us = phi i64 [ %add102.us, %for.body89.us ], [ %i_ssd.7274.us.ph, %for.body89.us.preheader ]
    #dbg_value(i64 %i_ssd.7274.us, !162, !DIExpression(), !190)
    #dbg_value(i64 %indvars.iv316, !172, !DIExpression(), !240)
  %gep = getelementptr i8, ptr %invariant.gep, i64 %indvars.iv316, !dbg !242
  %78 = load i8, ptr %gep, align 1, !dbg !242
  %conv93.us = zext i8 %78 to i32, !dbg !242
  %gep339 = getelementptr i8, ptr %invariant.gep338, i64 %indvars.iv316, !dbg !242
  %79 = load i8, ptr %gep339, align 1, !dbg !242
  %conv98.us = zext i8 %79 to i32, !dbg !242
  %sub99.us = sub nsw i32 %conv93.us, %conv98.us, !dbg !242
    #dbg_value(i32 %sub99.us, !178, !DIExpression(), !247)
  %mul100.us = mul nsw i32 %sub99.us, %sub99.us, !dbg !242
  %conv101.us = zext nneg i32 %mul100.us to i64, !dbg !242
  %add102.us = add nsw i64 %i_ssd.7274.us, %conv101.us, !dbg !242
    #dbg_value(i64 %add102.us, !162, !DIExpression(), !190)
  %indvars.iv.next317 = add nsw i64 %indvars.iv316, 1, !dbg !248
    #dbg_value(i64 %indvars.iv.next317, !172, !DIExpression(), !240)
  %cmp86.us = icmp slt i64 %indvars.iv.next317, %27, !dbg !249
  br i1 %cmp86.us, label %for.body89.us, label %for.cond85.for.cond.cleanup88_crit_edge.us, !dbg !241, !llvm.loop !250

for.cond85.for.cond.cleanup88_crit_edge.us:       ; preds = %for.body89.us, %middle.block
  %add102.us.lcssa = phi i64 [ %bin.rdx348, %middle.block ], [ %add102.us, %for.body89.us ], !dbg !242
  %indvars.iv.next322 = add nuw nsw i64 %indvars.iv321, 1, !dbg !251
    #dbg_value(i64 poison, !162, !DIExpression(), !190)
    #dbg_value(i64 %indvars.iv.next322, !163, !DIExpression(), !190)
  %exitcond.not = icmp eq i64 %indvars.iv.next322, %wide.trip.count, !dbg !238
  br i1 %exitcond.not, label %if.end108, label %for.body82.us, !dbg !239, !llvm.loop !252

if.end108:                                        ; preds = %for.cond85.for.cond.cleanup88_crit_edge.us, %for.body82.lr.ph, %for.cond78.preheader, %if.end74
  %i_ssd.8 = phi i64 [ %i_ssd.5, %if.end74 ], [ %i_ssd.5, %for.cond78.preheader ], [ %i_ssd.5, %for.body82.lr.ph ], [ %add102.us.lcssa, %for.cond85.for.cond.cleanup88_crit_edge.us ], !dbg !225
    #dbg_value(i64 %i_ssd.8, !162, !DIExpression(), !190)
  %and109 = and i32 %i_height, 7, !dbg !254
  %tobool110.not = icmp eq i32 %and109, 0, !dbg !254
  br i1 %tobool110.not, label %if.end144, label %if.then111, !dbg !255

if.then111:                                       ; preds = %if.end108
  %and112 = and i32 %i_height, -8, !dbg !256
    #dbg_value(i32 %and112, !163, !DIExpression(), !190)
    #dbg_value(i64 %i_ssd.8, !162, !DIExpression(), !190)
  %cmp114285.not = icmp ne i32 %and112, %i_height, !dbg !257
  %cmp119281 = icmp sgt i32 %i_width, 0
  %or.cond = and i1 %cmp114285.not, %cmp119281, !dbg !258
  br i1 %or.cond, label %for.cond118.preheader.us.preheader, label %if.end144, !dbg !258

for.cond118.preheader.us.preheader:               ; preds = %if.then111
  %80 = sext i32 %and112 to i64, !dbg !258
  %81 = sext i32 %i_height to i64, !dbg !258
  %82 = sext i32 %i_pix1 to i64, !dbg !258
  %83 = sext i32 %i_pix2 to i64, !dbg !258
  %wide.trip.count331 = zext nneg i32 %i_width to i64
  %min.iters.check351 = icmp ult i32 %i_width, 4
  %n.vec354 = and i64 %wide.trip.count331, 2147483644
  %cmp.n366 = icmp eq i64 %n.vec354, %wide.trip.count331
  %xtraiter = and i64 %wide.trip.count331, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.cond118.preheader.us, !dbg !258

for.cond118.preheader.us:                         ; preds = %for.cond118.preheader.us.preheader, %for.cond118.for.cond.cleanup121_crit_edge.us
  %indvars.iv333 = phi i64 [ %80, %for.cond118.preheader.us.preheader ], [ %indvars.iv.next334, %for.cond118.for.cond.cleanup121_crit_edge.us ]
  %i_ssd.9287.us = phi i64 [ %i_ssd.8, %for.cond118.preheader.us.preheader ], [ %add137.us.lcssa, %for.cond118.for.cond.cleanup121_crit_edge.us ]
    #dbg_value(i64 %indvars.iv333, !163, !DIExpression(), !190)
    #dbg_value(i64 %i_ssd.9287.us, !162, !DIExpression(), !190)
    #dbg_value(i32 0, !181, !DIExpression(), !259)
  %84 = mul nsw i64 %indvars.iv333, %82
  %85 = mul nsw i64 %indvars.iv333, %83
  %invariant.gep340 = getelementptr i8, ptr %pix1, i64 %84, !dbg !260
  %invariant.gep342 = getelementptr i8, ptr %pix2, i64 %85, !dbg !260
  br i1 %min.iters.check351, label %for.body122.us.preheader, label %vector.body356, !dbg !260

vector.body356:                                   ; preds = %for.cond118.preheader.us, %vector.body356
  %index357 = phi i64 [ %index.next362, %vector.body356 ], [ 0, %for.cond118.preheader.us ], !dbg !261
  %vec.phi358 = phi i64 [ %125, %vector.body356 ], [ %i_ssd.9287.us, %for.cond118.preheader.us ]
  %vec.phi359 = phi i64 [ %126, %vector.body356 ], [ 0, %for.cond118.preheader.us ]
  %vec.phi360 = phi i64 [ %127, %vector.body356 ], [ 0, %for.cond118.preheader.us ]
  %vec.phi361 = phi i64 [ %128, %vector.body356 ], [ 0, %for.cond118.preheader.us ]
  %86 = or disjoint i64 %index357, 1, !dbg !260
  %87 = or disjoint i64 %index357, 2, !dbg !260
  %88 = or disjoint i64 %index357, 3, !dbg !260
  %89 = getelementptr i8, ptr %invariant.gep340, i64 %index357, !dbg !262
  %90 = getelementptr i8, ptr %invariant.gep340, i64 %86, !dbg !262
  %91 = getelementptr i8, ptr %invariant.gep340, i64 %87, !dbg !262
  %92 = getelementptr i8, ptr %invariant.gep340, i64 %88, !dbg !262
  %93 = load i8, ptr %89, align 1, !dbg !262
  %94 = load i8, ptr %90, align 1, !dbg !262
  %95 = load i8, ptr %91, align 1, !dbg !262
  %96 = load i8, ptr %92, align 1, !dbg !262
  %97 = zext i8 %93 to i32, !dbg !262
  %98 = zext i8 %94 to i32, !dbg !262
  %99 = zext i8 %95 to i32, !dbg !262
  %100 = zext i8 %96 to i32, !dbg !262
  %101 = getelementptr i8, ptr %invariant.gep342, i64 %index357, !dbg !262
  %102 = getelementptr i8, ptr %invariant.gep342, i64 %86, !dbg !262
  %103 = getelementptr i8, ptr %invariant.gep342, i64 %87, !dbg !262
  %104 = getelementptr i8, ptr %invariant.gep342, i64 %88, !dbg !262
  %105 = load i8, ptr %101, align 1, !dbg !262
  %106 = load i8, ptr %102, align 1, !dbg !262
  %107 = load i8, ptr %103, align 1, !dbg !262
  %108 = load i8, ptr %104, align 1, !dbg !262
  %109 = zext i8 %105 to i32, !dbg !262
  %110 = zext i8 %106 to i32, !dbg !262
  %111 = zext i8 %107 to i32, !dbg !262
  %112 = zext i8 %108 to i32, !dbg !262
  %113 = sub nsw i32 %97, %109, !dbg !262
  %114 = sub nsw i32 %98, %110, !dbg !262
  %115 = sub nsw i32 %99, %111, !dbg !262
  %116 = sub nsw i32 %100, %112, !dbg !262
  %117 = mul nsw i32 %113, %113, !dbg !262
  %118 = mul nsw i32 %114, %114, !dbg !262
  %119 = mul nsw i32 %115, %115, !dbg !262
  %120 = mul nsw i32 %116, %116, !dbg !262
  %121 = zext nneg i32 %117 to i64, !dbg !262
  %122 = zext nneg i32 %118 to i64, !dbg !262
  %123 = zext nneg i32 %119 to i64, !dbg !262
  %124 = zext nneg i32 %120 to i64, !dbg !262
  %125 = add i64 %vec.phi358, %121, !dbg !262
  %126 = add i64 %vec.phi359, %122, !dbg !262
  %127 = add i64 %vec.phi360, %123, !dbg !262
  %128 = add i64 %vec.phi361, %124, !dbg !262
  %index.next362 = add nuw i64 %index357, 4, !dbg !261
  %129 = icmp eq i64 %index.next362, %n.vec354, !dbg !261
  br i1 %129, label %middle.block349, label %vector.body356, !dbg !261, !llvm.loop !263

middle.block349:                                  ; preds = %vector.body356
  %bin.rdx363 = add i64 %126, %125, !dbg !260
  %bin.rdx364 = add i64 %127, %bin.rdx363, !dbg !260
  %bin.rdx365 = add i64 %128, %bin.rdx364, !dbg !260
  br i1 %cmp.n366, label %for.cond118.for.cond.cleanup121_crit_edge.us, label %for.body122.us.preheader, !dbg !260

for.body122.us.preheader:                         ; preds = %middle.block349, %for.cond118.preheader.us
  %indvars.iv326.ph = phi i64 [ 0, %for.cond118.preheader.us ], [ %n.vec354, %middle.block349 ]
  %i_ssd.10283.us.ph = phi i64 [ %i_ssd.9287.us, %for.cond118.preheader.us ], [ %bin.rdx365, %middle.block349 ]
  br i1 %lcmp.mod.not, label %for.body122.us.prol.loopexit, label %for.body122.us.prol, !dbg !260

for.body122.us.prol:                              ; preds = %for.body122.us.preheader, %for.body122.us.prol
  %indvars.iv326.prol = phi i64 [ %indvars.iv.next327.prol, %for.body122.us.prol ], [ %indvars.iv326.ph, %for.body122.us.preheader ]
  %i_ssd.10283.us.prol = phi i64 [ %add137.us.prol, %for.body122.us.prol ], [ %i_ssd.10283.us.ph, %for.body122.us.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body122.us.prol ], [ 0, %for.body122.us.preheader ]
    #dbg_value(i64 %i_ssd.10283.us.prol, !162, !DIExpression(), !190)
    #dbg_value(i64 %indvars.iv326.prol, !181, !DIExpression(), !259)
  %gep341.prol = getelementptr i8, ptr %invariant.gep340, i64 %indvars.iv326.prol, !dbg !262
  %130 = load i8, ptr %gep341.prol, align 1, !dbg !262
  %conv128.us.prol = zext i8 %130 to i32, !dbg !262
  %gep343.prol = getelementptr i8, ptr %invariant.gep342, i64 %indvars.iv326.prol, !dbg !262
  %131 = load i8, ptr %gep343.prol, align 1, !dbg !262
  %conv133.us.prol = zext i8 %131 to i32, !dbg !262
  %sub134.us.prol = sub nsw i32 %conv128.us.prol, %conv133.us.prol, !dbg !262
    #dbg_value(i32 %sub134.us.prol, !187, !DIExpression(), !265)
  %mul135.us.prol = mul nsw i32 %sub134.us.prol, %sub134.us.prol, !dbg !262
  %conv136.us.prol = zext nneg i32 %mul135.us.prol to i64, !dbg !262
  %add137.us.prol = add nsw i64 %i_ssd.10283.us.prol, %conv136.us.prol, !dbg !262
    #dbg_value(i64 %add137.us.prol, !162, !DIExpression(), !190)
  %indvars.iv.next327.prol = add nuw nsw i64 %indvars.iv326.prol, 1, !dbg !261
    #dbg_value(i64 %indvars.iv.next327.prol, !181, !DIExpression(), !259)
  %prol.iter.next = add i64 %prol.iter, 1, !dbg !260
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter, !dbg !260
  br i1 %prol.iter.cmp.not, label %for.body122.us.prol.loopexit, label %for.body122.us.prol, !dbg !260, !llvm.loop !266

for.body122.us.prol.loopexit:                     ; preds = %for.body122.us.prol, %for.body122.us.preheader
  %add137.us.lcssa371.unr = phi i64 [ poison, %for.body122.us.preheader ], [ %add137.us.prol, %for.body122.us.prol ]
  %indvars.iv326.unr = phi i64 [ %indvars.iv326.ph, %for.body122.us.preheader ], [ %indvars.iv.next327.prol, %for.body122.us.prol ]
  %i_ssd.10283.us.unr = phi i64 [ %i_ssd.10283.us.ph, %for.body122.us.preheader ], [ %add137.us.prol, %for.body122.us.prol ]
  %132 = sub nsw i64 %indvars.iv326.ph, %wide.trip.count331, !dbg !260
  %133 = icmp ugt i64 %132, -4, !dbg !260
  br i1 %133, label %for.cond118.for.cond.cleanup121_crit_edge.us, label %for.body122.us, !dbg !260

for.body122.us:                                   ; preds = %for.body122.us.prol.loopexit, %for.body122.us
  %indvars.iv326 = phi i64 [ %indvars.iv.next327.3, %for.body122.us ], [ %indvars.iv326.unr, %for.body122.us.prol.loopexit ]
  %i_ssd.10283.us = phi i64 [ %add137.us.3, %for.body122.us ], [ %i_ssd.10283.us.unr, %for.body122.us.prol.loopexit ]
    #dbg_value(i64 %i_ssd.10283.us, !162, !DIExpression(), !190)
    #dbg_value(i64 %indvars.iv326, !181, !DIExpression(), !259)
  %gep341 = getelementptr i8, ptr %invariant.gep340, i64 %indvars.iv326, !dbg !262
  %134 = load i8, ptr %gep341, align 1, !dbg !262
  %conv128.us = zext i8 %134 to i32, !dbg !262
  %gep343 = getelementptr i8, ptr %invariant.gep342, i64 %indvars.iv326, !dbg !262
  %135 = load i8, ptr %gep343, align 1, !dbg !262
  %conv133.us = zext i8 %135 to i32, !dbg !262
  %sub134.us = sub nsw i32 %conv128.us, %conv133.us, !dbg !262
    #dbg_value(i32 %sub134.us, !187, !DIExpression(), !265)
  %mul135.us = mul nsw i32 %sub134.us, %sub134.us, !dbg !262
  %conv136.us = zext nneg i32 %mul135.us to i64, !dbg !262
  %add137.us = add nsw i64 %i_ssd.10283.us, %conv136.us, !dbg !262
    #dbg_value(i64 %add137.us, !162, !DIExpression(), !190)
  %indvars.iv.next327 = add nuw nsw i64 %indvars.iv326, 1, !dbg !261
    #dbg_value(i64 %indvars.iv.next327, !181, !DIExpression(), !259)
  %gep341.1 = getelementptr i8, ptr %invariant.gep340, i64 %indvars.iv.next327, !dbg !262
  %136 = load i8, ptr %gep341.1, align 1, !dbg !262
  %conv128.us.1 = zext i8 %136 to i32, !dbg !262
  %gep343.1 = getelementptr i8, ptr %invariant.gep342, i64 %indvars.iv.next327, !dbg !262
  %137 = load i8, ptr %gep343.1, align 1, !dbg !262
  %conv133.us.1 = zext i8 %137 to i32, !dbg !262
  %sub134.us.1 = sub nsw i32 %conv128.us.1, %conv133.us.1, !dbg !262
    #dbg_value(i32 %sub134.us.1, !187, !DIExpression(), !265)
  %mul135.us.1 = mul nsw i32 %sub134.us.1, %sub134.us.1, !dbg !262
  %conv136.us.1 = zext nneg i32 %mul135.us.1 to i64, !dbg !262
  %add137.us.1 = add nsw i64 %add137.us, %conv136.us.1, !dbg !262
    #dbg_value(i64 %add137.us.1, !162, !DIExpression(), !190)
  %indvars.iv.next327.1 = add nuw nsw i64 %indvars.iv326, 2, !dbg !261
    #dbg_value(i64 %indvars.iv.next327.1, !181, !DIExpression(), !259)
  %gep341.2 = getelementptr i8, ptr %invariant.gep340, i64 %indvars.iv.next327.1, !dbg !262
  %138 = load i8, ptr %gep341.2, align 1, !dbg !262
  %conv128.us.2 = zext i8 %138 to i32, !dbg !262
  %gep343.2 = getelementptr i8, ptr %invariant.gep342, i64 %indvars.iv.next327.1, !dbg !262
  %139 = load i8, ptr %gep343.2, align 1, !dbg !262
  %conv133.us.2 = zext i8 %139 to i32, !dbg !262
  %sub134.us.2 = sub nsw i32 %conv128.us.2, %conv133.us.2, !dbg !262
    #dbg_value(i32 %sub134.us.2, !187, !DIExpression(), !265)
  %mul135.us.2 = mul nsw i32 %sub134.us.2, %sub134.us.2, !dbg !262
  %conv136.us.2 = zext nneg i32 %mul135.us.2 to i64, !dbg !262
  %add137.us.2 = add nsw i64 %add137.us.1, %conv136.us.2, !dbg !262
    #dbg_value(i64 %add137.us.2, !162, !DIExpression(), !190)
  %indvars.iv.next327.2 = add nuw nsw i64 %indvars.iv326, 3, !dbg !261
    #dbg_value(i64 %indvars.iv.next327.2, !181, !DIExpression(), !259)
  %gep341.3 = getelementptr i8, ptr %invariant.gep340, i64 %indvars.iv.next327.2, !dbg !262
  %140 = load i8, ptr %gep341.3, align 1, !dbg !262
  %conv128.us.3 = zext i8 %140 to i32, !dbg !262
  %gep343.3 = getelementptr i8, ptr %invariant.gep342, i64 %indvars.iv.next327.2, !dbg !262
  %141 = load i8, ptr %gep343.3, align 1, !dbg !262
  %conv133.us.3 = zext i8 %141 to i32, !dbg !262
  %sub134.us.3 = sub nsw i32 %conv128.us.3, %conv133.us.3, !dbg !262
    #dbg_value(i32 %sub134.us.3, !187, !DIExpression(), !265)
  %mul135.us.3 = mul nsw i32 %sub134.us.3, %sub134.us.3, !dbg !262
  %conv136.us.3 = zext nneg i32 %mul135.us.3 to i64, !dbg !262
  %add137.us.3 = add nsw i64 %add137.us.2, %conv136.us.3, !dbg !262
    #dbg_value(i64 %add137.us.3, !162, !DIExpression(), !190)
  %indvars.iv.next327.3 = add nuw nsw i64 %indvars.iv326, 4, !dbg !261
    #dbg_value(i64 %indvars.iv.next327.3, !181, !DIExpression(), !259)
  %exitcond332.not.3 = icmp eq i64 %indvars.iv.next327.3, %wide.trip.count331, !dbg !268
  br i1 %exitcond332.not.3, label %for.cond118.for.cond.cleanup121_crit_edge.us, label %for.body122.us, !dbg !260, !llvm.loop !269

for.cond118.for.cond.cleanup121_crit_edge.us:     ; preds = %for.body122.us.prol.loopexit, %for.body122.us, %middle.block349
  %add137.us.lcssa = phi i64 [ %bin.rdx365, %middle.block349 ], [ %add137.us.lcssa371.unr, %for.body122.us.prol.loopexit ], [ %add137.us.3, %for.body122.us ], !dbg !262
  %indvars.iv.next334 = add nsw i64 %indvars.iv333, 1, !dbg !270
    #dbg_value(i64 poison, !162, !DIExpression(), !190)
    #dbg_value(i64 %indvars.iv.next334, !163, !DIExpression(), !190)
  %cmp114.us = icmp slt i64 %indvars.iv.next334, %81, !dbg !257
  br i1 %cmp114.us, label %for.cond118.preheader.us, label %if.end144, !dbg !258, !llvm.loop !271

if.end144:                                        ; preds = %for.cond118.for.cond.cleanup121_crit_edge.us, %if.then111, %if.end108
  %i_ssd.11 = phi i64 [ %i_ssd.8, %if.end108 ], [ %i_ssd.8, %if.then111 ], [ %add137.us.lcssa, %for.cond118.for.cond.cleanup121_crit_edge.us ], !dbg !225
    #dbg_value(i64 %i_ssd.11, !162, !DIExpression(), !190)
  ret i64 %i_ssd.11, !dbg !273
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind uwtable
define dso_local float @x264_pixel_ssim_wxh(ptr nocapture noundef readonly %pf, ptr noundef %pix1, i32 noundef %stride1, ptr noundef %pix2, i32 noundef %stride2, i32 noundef %width, i32 noundef %height, ptr noundef %buf) local_unnamed_addr #0 !dbg !274 {
entry:
    #dbg_value(ptr %pf, !279, !DIExpression(), !304)
    #dbg_value(ptr %pix1, !280, !DIExpression(), !304)
    #dbg_value(i32 %stride1, !281, !DIExpression(), !304)
    #dbg_value(ptr %pix2, !282, !DIExpression(), !304)
    #dbg_value(i32 %stride2, !283, !DIExpression(), !304)
    #dbg_value(i32 %width, !284, !DIExpression(), !304)
    #dbg_value(i32 %height, !285, !DIExpression(), !304)
    #dbg_value(ptr %buf, !286, !DIExpression(), !304)
    #dbg_value(i32 0, !287, !DIExpression(), !304)
    #dbg_value(float 0.000000e+00, !288, !DIExpression(), !304)
    #dbg_value(ptr %buf, !289, !DIExpression(), !304)
  %div = sdiv i32 %width, 4, !dbg !305
  %idx.ext = sext i32 %div to i64, !dbg !306
  %add.ptr = getelementptr inbounds [4 x i32], ptr %buf, i64 %idx.ext, !dbg !306
  %add.ptr1 = getelementptr inbounds i8, ptr %add.ptr, i64 48, !dbg !307
    #dbg_value(ptr %add.ptr1, !290, !DIExpression(), !304)
  %shr = ashr i32 %width, 2, !dbg !308
    #dbg_value(i32 %shr, !284, !DIExpression(), !304)
  %shr2 = ashr i32 %height, 2, !dbg !309
    #dbg_value(i32 %shr2, !285, !DIExpression(), !304)
    #dbg_value(i32 1, !291, !DIExpression(), !310)
    #dbg_value(ptr %add.ptr1, !290, !DIExpression(), !304)
    #dbg_value(ptr %buf, !289, !DIExpression(), !304)
    #dbg_value(float 0.000000e+00, !288, !DIExpression(), !304)
    #dbg_value(i32 0, !287, !DIExpression(), !304)
  %cmp84 = icmp sgt i32 %shr2, 1, !dbg !311
  br i1 %cmp84, label %for.cond3.preheader.lr.ph, label %for.cond.cleanup, !dbg !312

for.cond3.preheader.lr.ph:                        ; preds = %entry
  %cmp770 = icmp sgt i32 %shr, 0
  %ssim_4x4x2_core = getelementptr inbounds i8, ptr %pf, i64 664
  %sub = add nsw i32 %shr, -1
  %ssim_end4 = getelementptr inbounds i8, ptr %pf, i64 672
  br i1 %cmp770, label %for.cond3.preheader.lr.ph.split.us, label %for.cond.cleanup

for.cond3.preheader.lr.ph.split.us:               ; preds = %for.cond3.preheader.lr.ph
  %cmp2380.not = icmp eq i32 %shr, 1
  %0 = zext nneg i32 %shr to i64, !dbg !312
  %1 = sext i32 %stride1 to i64, !dbg !312
  %2 = sext i32 %stride2 to i64, !dbg !312
  br i1 %cmp2380.not, label %for.cond3.preheader.us.preheader, label %for.cond3.preheader.us.us.preheader

for.cond3.preheader.us.preheader:                 ; preds = %for.cond3.preheader.lr.ph.split.us
  %wide.trip.count = zext nneg i32 %shr2 to i64, !dbg !311
  br label %for.cond3.preheader.us, !dbg !312

for.cond3.preheader.us.us.preheader:              ; preds = %for.cond3.preheader.lr.ph.split.us
  %3 = zext nneg i32 %sub to i64, !dbg !312
  %wide.trip.count167 = zext nneg i32 %shr2 to i64, !dbg !311
  br label %for.cond3.preheader.us.us, !dbg !312

for.cond3.preheader.us.us:                        ; preds = %for.cond3.preheader.us.us.preheader, %for.cond22.for.cond.cleanup24_crit_edge.us.us
  %indvars.iv164 = phi i64 [ 1, %for.cond3.preheader.us.us.preheader ], [ %indvars.iv.next165, %for.cond22.for.cond.cleanup24_crit_edge.us.us ]
  %sum1.088.us.us = phi ptr [ %add.ptr1, %for.cond3.preheader.us.us.preheader ], [ %sum1.1.lcssa.us.us, %for.cond22.for.cond.cleanup24_crit_edge.us.us ]
  %sum0.087.us.us = phi ptr [ %buf, %for.cond3.preheader.us.us.preheader ], [ %sum0.1.lcssa.us.us, %for.cond22.for.cond.cleanup24_crit_edge.us.us ]
  %ssim.086.us.us = phi float [ 0.000000e+00, %for.cond3.preheader.us.us.preheader ], [ %add35.us.us, %for.cond22.for.cond.cleanup24_crit_edge.us.us ]
  %z.085.us.us = phi i32 [ 0, %for.cond3.preheader.us.us.preheader ], [ %z.1.lcssa.us.us, %for.cond22.for.cond.cleanup24_crit_edge.us.us ]
    #dbg_value(i64 %indvars.iv164, !291, !DIExpression(), !310)
    #dbg_value(ptr %sum1.088.us.us, !290, !DIExpression(), !304)
    #dbg_value(ptr %sum0.087.us.us, !289, !DIExpression(), !304)
    #dbg_value(float %ssim.086.us.us, !288, !DIExpression(), !304)
    #dbg_value(i32 %z.085.us.us, !287, !DIExpression(), !304)
    #dbg_value(ptr %sum1.088.us.us, !290, !DIExpression(), !304)
    #dbg_value(ptr %sum0.087.us.us, !289, !DIExpression(), !304)
    #dbg_value(i32 %z.085.us.us, !287, !DIExpression(), !304)
  %4 = sext i32 %z.085.us.us to i64, !dbg !313
  %cmp4.not72.us.us = icmp slt i64 %indvars.iv164, %4, !dbg !313
  br i1 %cmp4.not72.us.us, label %for.cond22.preheader.us.us, label %for.cond6.preheader.us.us.us, !dbg !314

for.body25.us.us:                                 ; preds = %for.cond22.preheader.us.us, %for.body25.us.us
  %indvars.iv161 = phi i64 [ 0, %for.cond22.preheader.us.us ], [ %indvars.iv.next162, %for.body25.us.us ]
  %ssim.181.us.us = phi float [ %ssim.086.us.us, %for.cond22.preheader.us.us ], [ %add35.us.us, %for.body25.us.us ]
    #dbg_value(i64 %indvars.iv161, !302, !DIExpression(), !315)
    #dbg_value(float %ssim.181.us.us, !288, !DIExpression(), !304)
  %5 = load ptr, ptr %ssim_end4, align 8, !dbg !316
  %add.ptr27.us.us = getelementptr inbounds [4 x i32], ptr %sum0.1.lcssa.us.us, i64 %indvars.iv161, !dbg !318
  %add.ptr29.us.us = getelementptr inbounds [4 x i32], ptr %sum1.1.lcssa.us.us, i64 %indvars.iv161, !dbg !319
  %6 = trunc nuw nsw i64 %indvars.iv161 to i32, !dbg !320
  %7 = xor i32 %6, -1, !dbg !320
  %sub31.us.us = add nsw i32 %shr, %7, !dbg !320
  %cond.us.us = tail call i32 @llvm.smin.i32(i32 %sub31.us.us, i32 4), !dbg !320
  %call.us.us = tail call float %5(ptr noundef %add.ptr27.us.us, ptr noundef %add.ptr29.us.us, i32 noundef %cond.us.us) #13, !dbg !321
  %add35.us.us = fadd float %ssim.181.us.us, %call.us.us, !dbg !322
    #dbg_value(float %add35.us.us, !288, !DIExpression(), !304)
  %indvars.iv.next162 = add nuw nsw i64 %indvars.iv161, 4, !dbg !323
    #dbg_value(i64 %indvars.iv.next162, !302, !DIExpression(), !315)
  %cmp23.us.us = icmp ult i64 %indvars.iv.next162, %3, !dbg !324
  br i1 %cmp23.us.us, label %for.body25.us.us, label %for.cond22.for.cond.cleanup24_crit_edge.us.us, !dbg !325, !llvm.loop !326

for.cond22.preheader.us.us.loopexit:              ; preds = %for.cond6.for.cond.cleanup8_crit_edge.us.us.us
  %8 = trunc nsw i64 %indvars.iv.next157 to i32, !dbg !325
  br label %for.cond22.preheader.us.us, !dbg !325

for.cond22.preheader.us.us:                       ; preds = %for.cond22.preheader.us.us.loopexit, %for.cond3.preheader.us.us
  %z.1.lcssa.us.us = phi i32 [ %z.085.us.us, %for.cond3.preheader.us.us ], [ %8, %for.cond22.preheader.us.us.loopexit ], !dbg !304
  %sum0.1.lcssa.us.us = phi ptr [ %sum0.087.us.us, %for.cond3.preheader.us.us ], [ %sum1.175.us.us.us, %for.cond22.preheader.us.us.loopexit ], !dbg !304
  %sum1.1.lcssa.us.us = phi ptr [ %sum1.088.us.us, %for.cond3.preheader.us.us ], [ %sum0.174.us.us.us, %for.cond22.preheader.us.us.loopexit ], !dbg !304
    #dbg_value(i32 0, !302, !DIExpression(), !315)
    #dbg_value(float %ssim.086.us.us, !288, !DIExpression(), !304)
  br label %for.body25.us.us, !dbg !325

for.cond6.preheader.us.us.us:                     ; preds = %for.cond3.preheader.us.us, %for.cond6.for.cond.cleanup8_crit_edge.us.us.us
  %indvars.iv156 = phi i64 [ %indvars.iv.next157, %for.cond6.for.cond.cleanup8_crit_edge.us.us.us ], [ %4, %for.cond3.preheader.us.us ]
  %sum1.175.us.us.us = phi ptr [ %sum0.174.us.us.us, %for.cond6.for.cond.cleanup8_crit_edge.us.us.us ], [ %sum1.088.us.us, %for.cond3.preheader.us.us ]
  %sum0.174.us.us.us = phi ptr [ %sum1.175.us.us.us, %for.cond6.for.cond.cleanup8_crit_edge.us.us.us ], [ %sum0.087.us.us, %for.cond3.preheader.us.us ]
    #dbg_value(ptr %sum1.175.us.us.us, !290, !DIExpression(), !304)
    #dbg_value(ptr %sum0.174.us.us.us, !289, !DIExpression(), !304)
    #dbg_value(i64 %indvars.iv156, !287, !DIExpression(), !304)
    #dbg_value(i32 0, !300, !DIExpression(), !328)
  %9 = mul nsw i64 %indvars.iv156, %1
  %10 = mul nsw i64 %indvars.iv156, %2
  br label %for.body9.us.us.us, !dbg !329

for.body9.us.us.us:                               ; preds = %for.body9.us.us.us, %for.cond6.preheader.us.us.us
  %indvars.iv149 = phi i64 [ %indvars.iv.next150, %for.body9.us.us.us ], [ 0, %for.cond6.preheader.us.us.us ]
    #dbg_value(i64 %indvars.iv149, !300, !DIExpression(), !328)
  %11 = load ptr, ptr %ssim_4x4x2_core, align 8, !dbg !330
  %12 = add nsw i64 %indvars.iv149, %9, !dbg !332
  %13 = shl nsw i64 %12, 2, !dbg !333
  %arrayidx.us.us.us = getelementptr inbounds i8, ptr %pix1, i64 %13, !dbg !334
  %14 = add nsw i64 %indvars.iv149, %10, !dbg !335
  %15 = shl nsw i64 %14, 2, !dbg !336
  %arrayidx15.us.us.us = getelementptr inbounds i8, ptr %pix2, i64 %15, !dbg !337
  %arrayidx17.us.us.us = getelementptr inbounds [4 x i32], ptr %sum1.175.us.us.us, i64 %indvars.iv149, !dbg !338
  tail call void %11(ptr noundef %arrayidx.us.us.us, i32 noundef %stride1, ptr noundef %arrayidx15.us.us.us, i32 noundef %stride2, ptr noundef %arrayidx17.us.us.us) #13, !dbg !339
  %indvars.iv.next150 = add nuw nsw i64 %indvars.iv149, 2, !dbg !340
    #dbg_value(i64 %indvars.iv.next150, !300, !DIExpression(), !328)
  %cmp7.us.us.us = icmp ult i64 %indvars.iv.next150, %0, !dbg !341
  br i1 %cmp7.us.us.us, label %for.body9.us.us.us, label %for.cond6.for.cond.cleanup8_crit_edge.us.us.us, !dbg !329, !llvm.loop !342

for.cond6.for.cond.cleanup8_crit_edge.us.us.us:   ; preds = %for.body9.us.us.us
  %indvars.iv.next157 = add nsw i64 %indvars.iv156, 1, !dbg !344
    #dbg_value(ptr %sum0.174.us.us.us, !290, !DIExpression(), !304)
    #dbg_value(ptr %sum1.175.us.us.us, !289, !DIExpression(), !304)
    #dbg_value(i64 %indvars.iv.next157, !287, !DIExpression(), !304)
  %cmp4.not.us.us.us.not = icmp slt i64 %indvars.iv156, %indvars.iv164, !dbg !313
  br i1 %cmp4.not.us.us.us.not, label %for.cond6.preheader.us.us.us, label %for.cond22.preheader.us.us.loopexit, !dbg !314, !llvm.loop !345

for.cond22.for.cond.cleanup24_crit_edge.us.us:    ; preds = %for.body25.us.us
  %indvars.iv.next165 = add nuw nsw i64 %indvars.iv164, 1, !dbg !347
    #dbg_value(i64 %indvars.iv.next165, !291, !DIExpression(), !310)
    #dbg_value(ptr %sum1.1.lcssa.us.us, !290, !DIExpression(), !304)
    #dbg_value(ptr %sum0.1.lcssa.us.us, !289, !DIExpression(), !304)
    #dbg_value(float poison, !288, !DIExpression(), !304)
    #dbg_value(i32 %z.1.lcssa.us.us, !287, !DIExpression(), !304)
  %exitcond168.not = icmp eq i64 %indvars.iv.next165, %wide.trip.count167, !dbg !311
  br i1 %exitcond168.not, label %for.cond.cleanup, label %for.cond3.preheader.us.us, !dbg !312, !llvm.loop !348

for.cond3.preheader.us:                           ; preds = %for.cond3.preheader.us.preheader, %for.cond22.preheader.us
  %indvars.iv145 = phi i64 [ 1, %for.cond3.preheader.us.preheader ], [ %indvars.iv.next146, %for.cond22.preheader.us ]
  %sum1.088.us = phi ptr [ %add.ptr1, %for.cond3.preheader.us.preheader ], [ %sum1.1.lcssa.us, %for.cond22.preheader.us ]
  %sum0.087.us = phi ptr [ %buf, %for.cond3.preheader.us.preheader ], [ %sum0.1.lcssa.us, %for.cond22.preheader.us ]
  %z.085.us = phi i32 [ 0, %for.cond3.preheader.us.preheader ], [ %z.1.lcssa.us, %for.cond22.preheader.us ]
    #dbg_value(i64 %indvars.iv145, !291, !DIExpression(), !310)
    #dbg_value(ptr %sum1.088.us, !290, !DIExpression(), !304)
    #dbg_value(ptr %sum0.087.us, !289, !DIExpression(), !304)
    #dbg_value(float poison, !288, !DIExpression(), !304)
    #dbg_value(i32 %z.085.us, !287, !DIExpression(), !304)
    #dbg_value(ptr %sum1.088.us, !290, !DIExpression(), !304)
    #dbg_value(ptr %sum0.087.us, !289, !DIExpression(), !304)
    #dbg_value(i32 %z.085.us, !287, !DIExpression(), !304)
  %16 = sext i32 %z.085.us to i64, !dbg !313
  %cmp4.not72.us = icmp slt i64 %indvars.iv145, %16, !dbg !313
  br i1 %cmp4.not72.us, label %for.cond22.preheader.us, label %for.cond6.preheader.us.us, !dbg !314

for.cond22.preheader.us.loopexit:                 ; preds = %for.cond6.for.cond.cleanup8_crit_edge.us.us
  %17 = trunc nsw i64 %indvars.iv.next141 to i32, !dbg !347
  br label %for.cond22.preheader.us, !dbg !347

for.cond22.preheader.us:                          ; preds = %for.cond22.preheader.us.loopexit, %for.cond3.preheader.us
  %z.1.lcssa.us = phi i32 [ %z.085.us, %for.cond3.preheader.us ], [ %17, %for.cond22.preheader.us.loopexit ], !dbg !304
  %sum0.1.lcssa.us = phi ptr [ %sum0.087.us, %for.cond3.preheader.us ], [ %sum1.175.us.us, %for.cond22.preheader.us.loopexit ], !dbg !304
  %sum1.1.lcssa.us = phi ptr [ %sum1.088.us, %for.cond3.preheader.us ], [ %sum0.174.us.us, %for.cond22.preheader.us.loopexit ], !dbg !304
    #dbg_value(i32 0, !302, !DIExpression(), !315)
    #dbg_value(float poison, !288, !DIExpression(), !304)
  %indvars.iv.next146 = add nuw nsw i64 %indvars.iv145, 1, !dbg !347
    #dbg_value(i64 %indvars.iv.next146, !291, !DIExpression(), !310)
    #dbg_value(ptr %sum1.1.lcssa.us, !290, !DIExpression(), !304)
    #dbg_value(ptr %sum0.1.lcssa.us, !289, !DIExpression(), !304)
    #dbg_value(float poison, !288, !DIExpression(), !304)
    #dbg_value(i32 %z.1.lcssa.us, !287, !DIExpression(), !304)
  %exitcond148.not = icmp eq i64 %indvars.iv.next146, %wide.trip.count, !dbg !311
  br i1 %exitcond148.not, label %for.cond.cleanup, label %for.cond3.preheader.us, !dbg !312, !llvm.loop !348

for.cond6.preheader.us.us:                        ; preds = %for.cond3.preheader.us, %for.cond6.for.cond.cleanup8_crit_edge.us.us
  %indvars.iv140 = phi i64 [ %indvars.iv.next141, %for.cond6.for.cond.cleanup8_crit_edge.us.us ], [ %16, %for.cond3.preheader.us ]
  %sum1.175.us.us = phi ptr [ %sum0.174.us.us, %for.cond6.for.cond.cleanup8_crit_edge.us.us ], [ %sum1.088.us, %for.cond3.preheader.us ]
  %sum0.174.us.us = phi ptr [ %sum1.175.us.us, %for.cond6.for.cond.cleanup8_crit_edge.us.us ], [ %sum0.087.us, %for.cond3.preheader.us ]
    #dbg_value(ptr %sum1.175.us.us, !290, !DIExpression(), !304)
    #dbg_value(ptr %sum0.174.us.us, !289, !DIExpression(), !304)
    #dbg_value(i64 %indvars.iv140, !287, !DIExpression(), !304)
    #dbg_value(i32 0, !300, !DIExpression(), !328)
  %18 = mul nsw i64 %indvars.iv140, %1
  %19 = mul nsw i64 %indvars.iv140, %2
  br label %for.body9.us.us, !dbg !329

for.body9.us.us:                                  ; preds = %for.body9.us.us, %for.cond6.preheader.us.us
  %indvars.iv133 = phi i64 [ %indvars.iv.next134, %for.body9.us.us ], [ 0, %for.cond6.preheader.us.us ]
    #dbg_value(i64 %indvars.iv133, !300, !DIExpression(), !328)
  %20 = load ptr, ptr %ssim_4x4x2_core, align 8, !dbg !330
  %21 = add nsw i64 %indvars.iv133, %18, !dbg !332
  %22 = shl nsw i64 %21, 2, !dbg !333
  %arrayidx.us.us = getelementptr inbounds i8, ptr %pix1, i64 %22, !dbg !334
  %23 = add nsw i64 %indvars.iv133, %19, !dbg !335
  %24 = shl nsw i64 %23, 2, !dbg !336
  %arrayidx15.us.us = getelementptr inbounds i8, ptr %pix2, i64 %24, !dbg !337
  %arrayidx17.us.us = getelementptr inbounds [4 x i32], ptr %sum1.175.us.us, i64 %indvars.iv133, !dbg !338
  tail call void %20(ptr noundef %arrayidx.us.us, i32 noundef %stride1, ptr noundef %arrayidx15.us.us, i32 noundef %stride2, ptr noundef %arrayidx17.us.us) #13, !dbg !339
  %indvars.iv.next134 = add nuw nsw i64 %indvars.iv133, 2, !dbg !340
    #dbg_value(i64 %indvars.iv.next134, !300, !DIExpression(), !328)
  %cmp7.us.us = icmp ult i64 %indvars.iv.next134, %0, !dbg !341
  br i1 %cmp7.us.us, label %for.body9.us.us, label %for.cond6.for.cond.cleanup8_crit_edge.us.us, !dbg !329, !llvm.loop !342

for.cond6.for.cond.cleanup8_crit_edge.us.us:      ; preds = %for.body9.us.us
  %indvars.iv.next141 = add nsw i64 %indvars.iv140, 1, !dbg !344
    #dbg_value(ptr %sum0.174.us.us, !290, !DIExpression(), !304)
    #dbg_value(ptr %sum1.175.us.us, !289, !DIExpression(), !304)
    #dbg_value(i64 %indvars.iv.next141, !287, !DIExpression(), !304)
  %cmp4.not.us.us.not = icmp slt i64 %indvars.iv140, %indvars.iv145, !dbg !313
  br i1 %cmp4.not.us.us.not, label %for.cond6.preheader.us.us, label %for.cond22.preheader.us.loopexit, !dbg !314, !llvm.loop !345

for.cond.cleanup:                                 ; preds = %for.cond22.for.cond.cleanup24_crit_edge.us.us, %for.cond22.preheader.us, %for.cond3.preheader.lr.ph, %entry
  %ssim.0.lcssa = phi float [ 0.000000e+00, %entry ], [ 0.000000e+00, %for.cond3.preheader.lr.ph ], [ 0.000000e+00, %for.cond22.preheader.us ], [ %add35.us.us, %for.cond22.for.cond.cleanup24_crit_edge.us.us ], !dbg !350
  ret float %ssim.0.lcssa, !dbg !351
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write) uwtable
define dso_local void @x264_pixel_init(i32 noundef %cpu, ptr noundef writeonly %pixf) local_unnamed_addr #2 !dbg !352 {
entry:
    #dbg_value(i32 %cpu, !356, !DIExpression(), !358)
    #dbg_value(ptr %pixf, !357, !DIExpression(), !358)
  %0 = getelementptr inbounds i8, ptr %pixf, i64 168, !dbg !359
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(1056) %0, i8 0, i64 888, i1 false), !dbg !359
  store ptr @x264_pixel_sad_16x16, ptr %pixf, align 8, !dbg !360
  %arrayidx2 = getelementptr inbounds i8, ptr %pixf, i64 8, !dbg !360
  store ptr @x264_pixel_sad_16x8, ptr %arrayidx2, align 8, !dbg !360
  %arrayidx4 = getelementptr inbounds i8, ptr %pixf, i64 16, !dbg !360
  store ptr @x264_pixel_sad_8x16, ptr %arrayidx4, align 8, !dbg !360
  %arrayidx6 = getelementptr inbounds i8, ptr %pixf, i64 24, !dbg !360
  store ptr @x264_pixel_sad_8x8, ptr %arrayidx6, align 8, !dbg !360
  %arrayidx8 = getelementptr inbounds i8, ptr %pixf, i64 32, !dbg !360
  store ptr @x264_pixel_sad_8x4, ptr %arrayidx8, align 8, !dbg !360
  %arrayidx10 = getelementptr inbounds i8, ptr %pixf, i64 40, !dbg !360
  store ptr @x264_pixel_sad_4x8, ptr %arrayidx10, align 8, !dbg !360
  %arrayidx12 = getelementptr inbounds i8, ptr %pixf, i64 48, !dbg !360
  store ptr @x264_pixel_sad_4x4, ptr %arrayidx12, align 8, !dbg !360
  %sad_aligned = getelementptr inbounds i8, ptr %pixf, i64 536, !dbg !361
  store ptr @x264_pixel_sad_16x16, ptr %sad_aligned, align 8, !dbg !361
  %arrayidx15 = getelementptr inbounds i8, ptr %pixf, i64 544, !dbg !361
  store ptr @x264_pixel_sad_16x8, ptr %arrayidx15, align 8, !dbg !361
  %arrayidx17 = getelementptr inbounds i8, ptr %pixf, i64 552, !dbg !361
  store ptr @x264_pixel_sad_8x16, ptr %arrayidx17, align 8, !dbg !361
  %arrayidx19 = getelementptr inbounds i8, ptr %pixf, i64 560, !dbg !361
  store ptr @x264_pixel_sad_8x8, ptr %arrayidx19, align 8, !dbg !361
  %arrayidx21 = getelementptr inbounds i8, ptr %pixf, i64 568, !dbg !361
  store ptr @x264_pixel_sad_8x4, ptr %arrayidx21, align 8, !dbg !361
  %arrayidx23 = getelementptr inbounds i8, ptr %pixf, i64 576, !dbg !361
  store ptr @x264_pixel_sad_4x8, ptr %arrayidx23, align 8, !dbg !361
  %arrayidx25 = getelementptr inbounds i8, ptr %pixf, i64 584, !dbg !361
  store ptr @x264_pixel_sad_4x4, ptr %arrayidx25, align 8, !dbg !361
  %sad_x3 = getelementptr inbounds i8, ptr %pixf, i64 680, !dbg !362
  store ptr @x264_pixel_sad_x3_16x16, ptr %sad_x3, align 8, !dbg !362
  %arrayidx28 = getelementptr inbounds i8, ptr %pixf, i64 688, !dbg !362
  store ptr @x264_pixel_sad_x3_16x8, ptr %arrayidx28, align 8, !dbg !362
  %arrayidx30 = getelementptr inbounds i8, ptr %pixf, i64 696, !dbg !362
  store ptr @x264_pixel_sad_x3_8x16, ptr %arrayidx30, align 8, !dbg !362
  %arrayidx32 = getelementptr inbounds i8, ptr %pixf, i64 704, !dbg !362
  store ptr @x264_pixel_sad_x3_8x8, ptr %arrayidx32, align 8, !dbg !362
  %arrayidx34 = getelementptr inbounds i8, ptr %pixf, i64 712, !dbg !362
  store ptr @x264_pixel_sad_x3_8x4, ptr %arrayidx34, align 8, !dbg !362
  %arrayidx36 = getelementptr inbounds i8, ptr %pixf, i64 720, !dbg !362
  store ptr @x264_pixel_sad_x3_4x8, ptr %arrayidx36, align 8, !dbg !362
  %arrayidx38 = getelementptr inbounds i8, ptr %pixf, i64 728, !dbg !362
  store ptr @x264_pixel_sad_x3_4x4, ptr %arrayidx38, align 8, !dbg !362
  %sad_x4 = getelementptr inbounds i8, ptr %pixf, i64 736, !dbg !363
  store ptr @x264_pixel_sad_x4_16x16, ptr %sad_x4, align 8, !dbg !363
  %arrayidx41 = getelementptr inbounds i8, ptr %pixf, i64 744, !dbg !363
  store ptr @x264_pixel_sad_x4_16x8, ptr %arrayidx41, align 8, !dbg !363
  %arrayidx43 = getelementptr inbounds i8, ptr %pixf, i64 752, !dbg !363
  store ptr @x264_pixel_sad_x4_8x16, ptr %arrayidx43, align 8, !dbg !363
  %arrayidx45 = getelementptr inbounds i8, ptr %pixf, i64 760, !dbg !363
  store ptr @x264_pixel_sad_x4_8x8, ptr %arrayidx45, align 8, !dbg !363
  %arrayidx47 = getelementptr inbounds i8, ptr %pixf, i64 768, !dbg !363
  store ptr @x264_pixel_sad_x4_8x4, ptr %arrayidx47, align 8, !dbg !363
  %arrayidx49 = getelementptr inbounds i8, ptr %pixf, i64 776, !dbg !363
  store ptr @x264_pixel_sad_x4_4x8, ptr %arrayidx49, align 8, !dbg !363
  %arrayidx51 = getelementptr inbounds i8, ptr %pixf, i64 784, !dbg !363
  store ptr @x264_pixel_sad_x4_4x4, ptr %arrayidx51, align 8, !dbg !363
  %ssd = getelementptr inbounds i8, ptr %pixf, i64 56, !dbg !364
  store ptr @x264_pixel_ssd_16x16, ptr %ssd, align 8, !dbg !364
  %arrayidx54 = getelementptr inbounds i8, ptr %pixf, i64 64, !dbg !364
  store ptr @x264_pixel_ssd_16x8, ptr %arrayidx54, align 8, !dbg !364
  %arrayidx56 = getelementptr inbounds i8, ptr %pixf, i64 72, !dbg !364
  store ptr @x264_pixel_ssd_8x16, ptr %arrayidx56, align 8, !dbg !364
  %arrayidx58 = getelementptr inbounds i8, ptr %pixf, i64 80, !dbg !364
  store ptr @x264_pixel_ssd_8x8, ptr %arrayidx58, align 8, !dbg !364
  %arrayidx60 = getelementptr inbounds i8, ptr %pixf, i64 88, !dbg !364
  store ptr @x264_pixel_ssd_8x4, ptr %arrayidx60, align 8, !dbg !364
  %arrayidx62 = getelementptr inbounds i8, ptr %pixf, i64 96, !dbg !364
  store ptr @x264_pixel_ssd_4x8, ptr %arrayidx62, align 8, !dbg !364
  %arrayidx64 = getelementptr inbounds i8, ptr %pixf, i64 104, !dbg !364
  store ptr @x264_pixel_ssd_4x4, ptr %arrayidx64, align 8, !dbg !364
  %satd = getelementptr inbounds i8, ptr %pixf, i64 112, !dbg !365
  store ptr @x264_pixel_satd_16x16, ptr %satd, align 8, !dbg !365
  %arrayidx67 = getelementptr inbounds i8, ptr %pixf, i64 120, !dbg !365
  store ptr @x264_pixel_satd_16x8, ptr %arrayidx67, align 8, !dbg !365
  %arrayidx69 = getelementptr inbounds i8, ptr %pixf, i64 128, !dbg !365
  store ptr @x264_pixel_satd_8x16, ptr %arrayidx69, align 8, !dbg !365
  %arrayidx71 = getelementptr inbounds i8, ptr %pixf, i64 136, !dbg !365
  store ptr @x264_pixel_satd_8x8, ptr %arrayidx71, align 8, !dbg !365
  %arrayidx73 = getelementptr inbounds i8, ptr %pixf, i64 144, !dbg !365
  store ptr @x264_pixel_satd_8x4, ptr %arrayidx73, align 8, !dbg !365
  %arrayidx75 = getelementptr inbounds i8, ptr %pixf, i64 152, !dbg !365
  store ptr @x264_pixel_satd_4x8, ptr %arrayidx75, align 8, !dbg !365
  %arrayidx77 = getelementptr inbounds i8, ptr %pixf, i64 160, !dbg !365
  store ptr @x264_pixel_satd_4x4, ptr %arrayidx77, align 8, !dbg !365
  %satd_x3 = getelementptr inbounds i8, ptr %pixf, i64 792, !dbg !366
  store ptr @x264_pixel_satd_x3_16x16, ptr %satd_x3, align 8, !dbg !366
  %arrayidx80 = getelementptr inbounds i8, ptr %pixf, i64 800, !dbg !366
  store ptr @x264_pixel_satd_x3_16x8, ptr %arrayidx80, align 8, !dbg !366
  %arrayidx82 = getelementptr inbounds i8, ptr %pixf, i64 808, !dbg !366
  store ptr @x264_pixel_satd_x3_8x16, ptr %arrayidx82, align 8, !dbg !366
  %arrayidx84 = getelementptr inbounds i8, ptr %pixf, i64 816, !dbg !366
  store ptr @x264_pixel_satd_x3_8x8, ptr %arrayidx84, align 8, !dbg !366
  %arrayidx86 = getelementptr inbounds i8, ptr %pixf, i64 824, !dbg !366
  store ptr @x264_pixel_satd_x3_8x4, ptr %arrayidx86, align 8, !dbg !366
  %arrayidx88 = getelementptr inbounds i8, ptr %pixf, i64 832, !dbg !366
  store ptr @x264_pixel_satd_x3_4x8, ptr %arrayidx88, align 8, !dbg !366
  %arrayidx90 = getelementptr inbounds i8, ptr %pixf, i64 840, !dbg !366
  store ptr @x264_pixel_satd_x3_4x4, ptr %arrayidx90, align 8, !dbg !366
  %satd_x4 = getelementptr inbounds i8, ptr %pixf, i64 848, !dbg !367
  store ptr @x264_pixel_satd_x4_16x16, ptr %satd_x4, align 8, !dbg !367
  %arrayidx93 = getelementptr inbounds i8, ptr %pixf, i64 856, !dbg !367
  store ptr @x264_pixel_satd_x4_16x8, ptr %arrayidx93, align 8, !dbg !367
  %arrayidx95 = getelementptr inbounds i8, ptr %pixf, i64 864, !dbg !367
  store ptr @x264_pixel_satd_x4_8x16, ptr %arrayidx95, align 8, !dbg !367
  %arrayidx97 = getelementptr inbounds i8, ptr %pixf, i64 872, !dbg !367
  store ptr @x264_pixel_satd_x4_8x8, ptr %arrayidx97, align 8, !dbg !367
  %arrayidx99 = getelementptr inbounds i8, ptr %pixf, i64 880, !dbg !367
  store ptr @x264_pixel_satd_x4_8x4, ptr %arrayidx99, align 8, !dbg !367
  %arrayidx101 = getelementptr inbounds i8, ptr %pixf, i64 888, !dbg !367
  store ptr @x264_pixel_satd_x4_4x8, ptr %arrayidx101, align 8, !dbg !367
  %arrayidx103 = getelementptr inbounds i8, ptr %pixf, i64 896, !dbg !367
  store ptr @x264_pixel_satd_x4_4x4, ptr %arrayidx103, align 8, !dbg !367
  %hadamard_ac = getelementptr inbounds i8, ptr %pixf, i64 632, !dbg !368
  store ptr @x264_pixel_hadamard_ac_16x16, ptr %hadamard_ac, align 8, !dbg !368
  %arrayidx106 = getelementptr inbounds i8, ptr %pixf, i64 640, !dbg !368
  store ptr @x264_pixel_hadamard_ac_16x8, ptr %arrayidx106, align 8, !dbg !368
  %arrayidx108 = getelementptr inbounds i8, ptr %pixf, i64 648, !dbg !368
  store ptr @x264_pixel_hadamard_ac_8x16, ptr %arrayidx108, align 8, !dbg !368
  %arrayidx110 = getelementptr inbounds i8, ptr %pixf, i64 656, !dbg !368
  store ptr @x264_pixel_hadamard_ac_8x8, ptr %arrayidx110, align 8, !dbg !368
  %ads = getelementptr inbounds i8, ptr %pixf, i64 904, !dbg !369
  store ptr @x264_pixel_ads4, ptr %ads, align 8, !dbg !369
  %arrayidx113 = getelementptr inbounds i8, ptr %pixf, i64 912, !dbg !369
  store ptr @x264_pixel_ads2, ptr %arrayidx113, align 8, !dbg !369
  %arrayidx115 = getelementptr inbounds i8, ptr %pixf, i64 928, !dbg !369
  store ptr @x264_pixel_ads1, ptr %arrayidx115, align 8, !dbg !369
  %sa8d = getelementptr inbounds i8, ptr %pixf, i64 224, !dbg !370
  store ptr @x264_pixel_sa8d_16x16, ptr %sa8d, align 8, !dbg !371
  %arrayidx118 = getelementptr inbounds i8, ptr %pixf, i64 248, !dbg !372
  store ptr @x264_pixel_sa8d_8x8, ptr %arrayidx118, align 8, !dbg !373
  %var = getelementptr inbounds i8, ptr %pixf, i64 600, !dbg !374
  store ptr @x264_pixel_var_16x16, ptr %var, align 8, !dbg !375
  %arrayidx121 = getelementptr inbounds i8, ptr %pixf, i64 624, !dbg !376
  store ptr @x264_pixel_var_8x8, ptr %arrayidx121, align 8, !dbg !377
  %ssim_4x4x2_core = getelementptr inbounds i8, ptr %pixf, i64 664, !dbg !378
  store ptr @ssim_4x4x2_core, ptr %ssim_4x4x2_core, align 8, !dbg !379
  %ssim_end4 = getelementptr inbounds i8, ptr %pixf, i64 672, !dbg !380
  store ptr @ssim_end4, ptr %ssim_end4, align 8, !dbg !381
  %var2_8x8 = getelementptr inbounds i8, ptr %pixf, i64 592, !dbg !382
  store ptr @pixel_var2_8x8, ptr %var2_8x8, align 8, !dbg !383
  %arrayidx125 = getelementptr inbounds i8, ptr %pixf, i64 944, !dbg !384
  store ptr @x264_pixel_ads2, ptr %arrayidx125, align 8, !dbg !385
  %arrayidx127 = getelementptr inbounds i8, ptr %pixf, i64 936, !dbg !386
  store ptr @x264_pixel_ads2, ptr %arrayidx127, align 8, !dbg !387
  %arrayidx129 = getelementptr inbounds i8, ptr %pixf, i64 920, !dbg !388
  store ptr @x264_pixel_ads2, ptr %arrayidx129, align 8, !dbg !389
  %arrayidx133 = getelementptr inbounds i8, ptr %pixf, i64 952, !dbg !390
  store ptr @x264_pixel_ads1, ptr %arrayidx133, align 8, !dbg !391
  ret void, !dbg !392
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define internal i32 @x264_pixel_sad_16x16(ptr nocapture noundef readonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2) #4 !dbg !393 {
entry:
    #dbg_value(ptr %pix1, !395, !DIExpression(), !406)
    #dbg_value(i32 %i_stride_pix1, !396, !DIExpression(), !406)
    #dbg_value(ptr %pix2, !397, !DIExpression(), !406)
    #dbg_value(i32 %i_stride_pix2, !398, !DIExpression(), !406)
    #dbg_value(i32 0, !399, !DIExpression(), !406)
    #dbg_value(i32 0, !400, !DIExpression(), !407)
  %idx.ext = sext i32 %i_stride_pix1 to i64
  %idx.ext8 = sext i32 %i_stride_pix2 to i64
    #dbg_value(i32 0, !400, !DIExpression(), !407)
    #dbg_value(i32 0, !399, !DIExpression(), !406)
    #dbg_value(ptr %pix1, !395, !DIExpression(), !406)
    #dbg_value(ptr %pix2, !397, !DIExpression(), !406)
  br label %for.cond1.preheader, !dbg !408

for.cond1.preheader:                              ; preds = %entry, %for.cond1.preheader
  %y.025 = phi i32 [ 0, %entry ], [ %inc11, %for.cond1.preheader ]
  %i_sum.024 = phi i32 [ 0, %entry ], [ %op.rdx, %for.cond1.preheader ]
  %pix1.addr.023 = phi ptr [ %pix1, %entry ], [ %add.ptr, %for.cond1.preheader ]
  %pix2.addr.022 = phi ptr [ %pix2, %entry ], [ %add.ptr9, %for.cond1.preheader ]
    #dbg_value(i32 %y.025, !400, !DIExpression(), !407)
    #dbg_value(i32 %i_sum.024, !399, !DIExpression(), !406)
    #dbg_value(ptr %pix1.addr.023, !395, !DIExpression(), !406)
    #dbg_value(ptr %pix2.addr.022, !397, !DIExpression(), !406)
    #dbg_value(i32 0, !402, !DIExpression(), !409)
    #dbg_value(i32 %i_sum.024, !399, !DIExpression(), !406)
    #dbg_value(i64 0, !402, !DIExpression(), !409)
    #dbg_value(i32 %i_sum.024, !399, !DIExpression(), !406)
    #dbg_value(i32 poison, !399, !DIExpression(), !406)
    #dbg_value(i64 1, !402, !DIExpression(), !409)
    #dbg_value(i32 poison, !399, !DIExpression(), !406)
    #dbg_value(i64 2, !402, !DIExpression(), !409)
    #dbg_value(i32 poison, !399, !DIExpression(), !406)
    #dbg_value(i64 3, !402, !DIExpression(), !409)
    #dbg_value(i32 poison, !399, !DIExpression(), !406)
    #dbg_value(i64 4, !402, !DIExpression(), !409)
    #dbg_value(i32 poison, !399, !DIExpression(), !406)
    #dbg_value(i64 5, !402, !DIExpression(), !409)
    #dbg_value(i32 poison, !399, !DIExpression(), !406)
    #dbg_value(i64 6, !402, !DIExpression(), !409)
    #dbg_value(i32 poison, !399, !DIExpression(), !406)
    #dbg_value(i64 7, !402, !DIExpression(), !409)
    #dbg_value(i32 poison, !399, !DIExpression(), !406)
    #dbg_value(i64 8, !402, !DIExpression(), !409)
    #dbg_value(i32 poison, !399, !DIExpression(), !406)
    #dbg_value(i64 9, !402, !DIExpression(), !409)
    #dbg_value(i32 poison, !399, !DIExpression(), !406)
    #dbg_value(i64 10, !402, !DIExpression(), !409)
    #dbg_value(i32 poison, !399, !DIExpression(), !406)
    #dbg_value(i64 11, !402, !DIExpression(), !409)
    #dbg_value(i32 poison, !399, !DIExpression(), !406)
    #dbg_value(i64 12, !402, !DIExpression(), !409)
    #dbg_value(i32 poison, !399, !DIExpression(), !406)
    #dbg_value(i64 13, !402, !DIExpression(), !409)
    #dbg_value(i32 poison, !399, !DIExpression(), !406)
    #dbg_value(i64 14, !402, !DIExpression(), !409)
    #dbg_value(i32 poison, !399, !DIExpression(), !406)
    #dbg_value(i64 15, !402, !DIExpression(), !409)
  %0 = load <16 x i8>, ptr %pix1.addr.023, align 1, !dbg !410
  %1 = zext <16 x i8> %0 to <16 x i16>, !dbg !410
  %2 = load <16 x i8>, ptr %pix2.addr.022, align 1, !dbg !410
  %3 = zext <16 x i8> %2 to <16 x i16>, !dbg !410
  %4 = sub nsw <16 x i16> %1, %3, !dbg !410
  %5 = tail call <16 x i16> @llvm.abs.v16i16(<16 x i16> %4, i1 false), !dbg !410
  %6 = zext <16 x i16> %5 to <16 x i32>, !dbg !410
  %7 = tail call i32 @llvm.vector.reduce.add.v16i32(<16 x i32> %6), !dbg !410
  %op.rdx = add i32 %7, %i_sum.024, !dbg !410
    #dbg_value(i32 %op.rdx, !399, !DIExpression(), !406)
    #dbg_value(i64 16, !402, !DIExpression(), !409)
  %add.ptr = getelementptr inbounds i8, ptr %pix1.addr.023, i64 %idx.ext, !dbg !413
    #dbg_value(ptr %add.ptr, !395, !DIExpression(), !406)
  %add.ptr9 = getelementptr inbounds i8, ptr %pix2.addr.022, i64 %idx.ext8, !dbg !413
    #dbg_value(ptr %add.ptr9, !397, !DIExpression(), !406)
  %inc11 = add nuw nsw i32 %y.025, 1, !dbg !414
    #dbg_value(i32 %inc11, !400, !DIExpression(), !407)
  %exitcond.not = icmp eq i32 %inc11, 16, !dbg !414
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond1.preheader, !dbg !408, !llvm.loop !415

for.cond.cleanup:                                 ; preds = %for.cond1.preheader
  ret i32 %op.rdx, !dbg !416
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define internal i32 @x264_pixel_sad_16x8(ptr nocapture noundef readonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2) #4 !dbg !417 {
entry:
    #dbg_value(ptr %pix1, !419, !DIExpression(), !430)
    #dbg_value(i32 %i_stride_pix1, !420, !DIExpression(), !430)
    #dbg_value(ptr %pix2, !421, !DIExpression(), !430)
    #dbg_value(i32 %i_stride_pix2, !422, !DIExpression(), !430)
    #dbg_value(i32 0, !423, !DIExpression(), !430)
    #dbg_value(i32 0, !424, !DIExpression(), !431)
    #dbg_value(i32 0, !424, !DIExpression(), !431)
    #dbg_value(i32 0, !423, !DIExpression(), !430)
    #dbg_value(ptr %pix1, !419, !DIExpression(), !430)
    #dbg_value(ptr %pix2, !421, !DIExpression(), !430)
  %idx.ext8 = sext i32 %i_stride_pix2 to i64
  %idx.ext = sext i32 %i_stride_pix1 to i64
    #dbg_value(i32 0, !424, !DIExpression(), !431)
    #dbg_value(ptr %pix1, !419, !DIExpression(), !430)
    #dbg_value(ptr %pix2, !421, !DIExpression(), !430)
    #dbg_value(i32 poison, !423, !DIExpression(), !430)
    #dbg_value(i64 15, !426, !DIExpression(), !432)
  %0 = load <16 x i8>, ptr %pix1, align 1, !dbg !433
  %1 = zext <16 x i8> %0 to <16 x i16>, !dbg !433
  %2 = load <16 x i8>, ptr %pix2, align 1, !dbg !433
  %3 = zext <16 x i8> %2 to <16 x i16>, !dbg !433
  %4 = sub nsw <16 x i16> %1, %3, !dbg !433
  %5 = tail call <16 x i16> @llvm.abs.v16i16(<16 x i16> %4, i1 false), !dbg !433
  %6 = zext <16 x i16> %5 to <16 x i32>, !dbg !433
  %7 = tail call i32 @llvm.vector.reduce.add.v16i32(<16 x i32> %6), !dbg !433
    #dbg_value(i32 %7, !423, !DIExpression(), !430)
    #dbg_value(i64 16, !426, !DIExpression(), !432)
  %add.ptr = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext, !dbg !436
    #dbg_value(ptr %add.ptr, !419, !DIExpression(), !430)
  %add.ptr9 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext8, !dbg !436
    #dbg_value(ptr %add.ptr9, !421, !DIExpression(), !430)
    #dbg_value(i32 1, !424, !DIExpression(), !431)
    #dbg_value(i32 poison, !423, !DIExpression(), !430)
    #dbg_value(i64 15, !426, !DIExpression(), !432)
  %8 = load <16 x i8>, ptr %add.ptr, align 1, !dbg !433
  %9 = zext <16 x i8> %8 to <16 x i16>, !dbg !433
  %10 = load <16 x i8>, ptr %add.ptr9, align 1, !dbg !433
  %11 = zext <16 x i8> %10 to <16 x i16>, !dbg !433
  %12 = sub nsw <16 x i16> %9, %11, !dbg !433
  %13 = tail call <16 x i16> @llvm.abs.v16i16(<16 x i16> %12, i1 false), !dbg !433
  %14 = zext <16 x i16> %13 to <16 x i32>, !dbg !433
  %15 = tail call i32 @llvm.vector.reduce.add.v16i32(<16 x i32> %14), !dbg !433
  %op.rdx.1 = add i32 %15, %7, !dbg !433
    #dbg_value(i32 %op.rdx.1, !423, !DIExpression(), !430)
    #dbg_value(i64 16, !426, !DIExpression(), !432)
  %add.ptr.1 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.ext, !dbg !436
    #dbg_value(ptr %add.ptr.1, !419, !DIExpression(), !430)
  %add.ptr9.1 = getelementptr inbounds i8, ptr %add.ptr9, i64 %idx.ext8, !dbg !436
    #dbg_value(ptr %add.ptr9.1, !421, !DIExpression(), !430)
    #dbg_value(i32 2, !424, !DIExpression(), !431)
    #dbg_value(i32 poison, !423, !DIExpression(), !430)
    #dbg_value(i64 15, !426, !DIExpression(), !432)
  %16 = load <16 x i8>, ptr %add.ptr.1, align 1, !dbg !433
  %17 = zext <16 x i8> %16 to <16 x i16>, !dbg !433
  %18 = load <16 x i8>, ptr %add.ptr9.1, align 1, !dbg !433
  %19 = zext <16 x i8> %18 to <16 x i16>, !dbg !433
  %20 = sub nsw <16 x i16> %17, %19, !dbg !433
  %21 = tail call <16 x i16> @llvm.abs.v16i16(<16 x i16> %20, i1 false), !dbg !433
  %22 = zext <16 x i16> %21 to <16 x i32>, !dbg !433
  %23 = tail call i32 @llvm.vector.reduce.add.v16i32(<16 x i32> %22), !dbg !433
  %op.rdx.2 = add i32 %23, %op.rdx.1, !dbg !433
    #dbg_value(i32 %op.rdx.2, !423, !DIExpression(), !430)
    #dbg_value(i64 16, !426, !DIExpression(), !432)
  %add.ptr.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 %idx.ext, !dbg !436
    #dbg_value(ptr %add.ptr.2, !419, !DIExpression(), !430)
  %add.ptr9.2 = getelementptr inbounds i8, ptr %add.ptr9.1, i64 %idx.ext8, !dbg !436
    #dbg_value(ptr %add.ptr9.2, !421, !DIExpression(), !430)
    #dbg_value(i32 3, !424, !DIExpression(), !431)
    #dbg_value(i32 poison, !423, !DIExpression(), !430)
    #dbg_value(i64 15, !426, !DIExpression(), !432)
  %24 = load <16 x i8>, ptr %add.ptr.2, align 1, !dbg !433
  %25 = zext <16 x i8> %24 to <16 x i16>, !dbg !433
  %26 = load <16 x i8>, ptr %add.ptr9.2, align 1, !dbg !433
  %27 = zext <16 x i8> %26 to <16 x i16>, !dbg !433
  %28 = sub nsw <16 x i16> %25, %27, !dbg !433
  %29 = tail call <16 x i16> @llvm.abs.v16i16(<16 x i16> %28, i1 false), !dbg !433
  %30 = zext <16 x i16> %29 to <16 x i32>, !dbg !433
  %31 = tail call i32 @llvm.vector.reduce.add.v16i32(<16 x i32> %30), !dbg !433
  %op.rdx.3 = add i32 %31, %op.rdx.2, !dbg !433
    #dbg_value(i32 %op.rdx.3, !423, !DIExpression(), !430)
    #dbg_value(i64 16, !426, !DIExpression(), !432)
  %add.ptr.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 %idx.ext, !dbg !436
    #dbg_value(ptr %add.ptr.3, !419, !DIExpression(), !430)
  %add.ptr9.3 = getelementptr inbounds i8, ptr %add.ptr9.2, i64 %idx.ext8, !dbg !436
    #dbg_value(ptr %add.ptr9.3, !421, !DIExpression(), !430)
    #dbg_value(i32 4, !424, !DIExpression(), !431)
    #dbg_value(i32 poison, !423, !DIExpression(), !430)
    #dbg_value(i64 15, !426, !DIExpression(), !432)
  %32 = load <16 x i8>, ptr %add.ptr.3, align 1, !dbg !433
  %33 = zext <16 x i8> %32 to <16 x i16>, !dbg !433
  %34 = load <16 x i8>, ptr %add.ptr9.3, align 1, !dbg !433
  %35 = zext <16 x i8> %34 to <16 x i16>, !dbg !433
  %36 = sub nsw <16 x i16> %33, %35, !dbg !433
  %37 = tail call <16 x i16> @llvm.abs.v16i16(<16 x i16> %36, i1 false), !dbg !433
  %38 = zext <16 x i16> %37 to <16 x i32>, !dbg !433
  %39 = tail call i32 @llvm.vector.reduce.add.v16i32(<16 x i32> %38), !dbg !433
  %op.rdx.4 = add i32 %39, %op.rdx.3, !dbg !433
    #dbg_value(i32 %op.rdx.4, !423, !DIExpression(), !430)
    #dbg_value(i64 16, !426, !DIExpression(), !432)
  %add.ptr.4 = getelementptr inbounds i8, ptr %add.ptr.3, i64 %idx.ext, !dbg !436
    #dbg_value(ptr %add.ptr.4, !419, !DIExpression(), !430)
  %add.ptr9.4 = getelementptr inbounds i8, ptr %add.ptr9.3, i64 %idx.ext8, !dbg !436
    #dbg_value(ptr %add.ptr9.4, !421, !DIExpression(), !430)
    #dbg_value(i32 5, !424, !DIExpression(), !431)
    #dbg_value(i32 poison, !423, !DIExpression(), !430)
    #dbg_value(i64 15, !426, !DIExpression(), !432)
  %40 = load <16 x i8>, ptr %add.ptr.4, align 1, !dbg !433
  %41 = zext <16 x i8> %40 to <16 x i16>, !dbg !433
  %42 = load <16 x i8>, ptr %add.ptr9.4, align 1, !dbg !433
  %43 = zext <16 x i8> %42 to <16 x i16>, !dbg !433
  %44 = sub nsw <16 x i16> %41, %43, !dbg !433
  %45 = tail call <16 x i16> @llvm.abs.v16i16(<16 x i16> %44, i1 false), !dbg !433
  %46 = zext <16 x i16> %45 to <16 x i32>, !dbg !433
  %47 = tail call i32 @llvm.vector.reduce.add.v16i32(<16 x i32> %46), !dbg !433
  %op.rdx.5 = add i32 %47, %op.rdx.4, !dbg !433
    #dbg_value(i32 %op.rdx.5, !423, !DIExpression(), !430)
    #dbg_value(i64 16, !426, !DIExpression(), !432)
  %add.ptr.5 = getelementptr inbounds i8, ptr %add.ptr.4, i64 %idx.ext, !dbg !436
    #dbg_value(ptr %add.ptr.5, !419, !DIExpression(), !430)
  %add.ptr9.5 = getelementptr inbounds i8, ptr %add.ptr9.4, i64 %idx.ext8, !dbg !436
    #dbg_value(ptr %add.ptr9.5, !421, !DIExpression(), !430)
    #dbg_value(i32 6, !424, !DIExpression(), !431)
    #dbg_value(i32 poison, !423, !DIExpression(), !430)
    #dbg_value(i64 15, !426, !DIExpression(), !432)
  %48 = load <16 x i8>, ptr %add.ptr.5, align 1, !dbg !433
  %49 = zext <16 x i8> %48 to <16 x i16>, !dbg !433
  %50 = load <16 x i8>, ptr %add.ptr9.5, align 1, !dbg !433
  %51 = zext <16 x i8> %50 to <16 x i16>, !dbg !433
  %52 = sub nsw <16 x i16> %49, %51, !dbg !433
  %53 = tail call <16 x i16> @llvm.abs.v16i16(<16 x i16> %52, i1 false), !dbg !433
  %54 = zext <16 x i16> %53 to <16 x i32>, !dbg !433
  %55 = tail call i32 @llvm.vector.reduce.add.v16i32(<16 x i32> %54), !dbg !433
  %op.rdx.6 = add i32 %55, %op.rdx.5, !dbg !433
    #dbg_value(i32 %op.rdx.6, !423, !DIExpression(), !430)
    #dbg_value(i64 16, !426, !DIExpression(), !432)
  %add.ptr.6 = getelementptr inbounds i8, ptr %add.ptr.5, i64 %idx.ext, !dbg !436
    #dbg_value(ptr %add.ptr.6, !419, !DIExpression(), !430)
  %add.ptr9.6 = getelementptr inbounds i8, ptr %add.ptr9.5, i64 %idx.ext8, !dbg !436
    #dbg_value(ptr %add.ptr9.6, !421, !DIExpression(), !430)
    #dbg_value(i32 7, !424, !DIExpression(), !431)
    #dbg_value(i32 poison, !423, !DIExpression(), !430)
    #dbg_value(i64 15, !426, !DIExpression(), !432)
  %56 = load <16 x i8>, ptr %add.ptr.6, align 1, !dbg !433
  %57 = zext <16 x i8> %56 to <16 x i16>, !dbg !433
  %58 = load <16 x i8>, ptr %add.ptr9.6, align 1, !dbg !433
  %59 = zext <16 x i8> %58 to <16 x i16>, !dbg !433
  %60 = sub nsw <16 x i16> %57, %59, !dbg !433
  %61 = tail call <16 x i16> @llvm.abs.v16i16(<16 x i16> %60, i1 false), !dbg !433
  %62 = zext <16 x i16> %61 to <16 x i32>, !dbg !433
  %63 = tail call i32 @llvm.vector.reduce.add.v16i32(<16 x i32> %62), !dbg !433
  %op.rdx.7 = add i32 %63, %op.rdx.6, !dbg !433
    #dbg_value(i32 %op.rdx.7, !423, !DIExpression(), !430)
    #dbg_value(i64 16, !426, !DIExpression(), !432)
    #dbg_value(!DIArgList(ptr %add.ptr.6, i64 %idx.ext), !419, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !430)
    #dbg_value(!DIArgList(ptr %add.ptr9.6, i64 %idx.ext8), !421, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !430)
    #dbg_value(i32 8, !424, !DIExpression(), !431)
  ret i32 %op.rdx.7, !dbg !437
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define internal i32 @x264_pixel_sad_8x16(ptr nocapture noundef readonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2) #4 !dbg !438 {
entry:
    #dbg_value(ptr %pix1, !440, !DIExpression(), !451)
    #dbg_value(i32 %i_stride_pix1, !441, !DIExpression(), !451)
    #dbg_value(ptr %pix2, !442, !DIExpression(), !451)
    #dbg_value(i32 %i_stride_pix2, !443, !DIExpression(), !451)
    #dbg_value(i32 0, !444, !DIExpression(), !451)
    #dbg_value(i32 0, !445, !DIExpression(), !452)
    #dbg_value(i32 0, !445, !DIExpression(), !452)
    #dbg_value(i32 0, !444, !DIExpression(), !451)
    #dbg_value(ptr %pix1, !440, !DIExpression(), !451)
    #dbg_value(ptr %pix2, !442, !DIExpression(), !451)
  %idx.ext8 = sext i32 %i_stride_pix2 to i64
  %idx.ext = sext i32 %i_stride_pix1 to i64
    #dbg_value(i32 0, !445, !DIExpression(), !452)
    #dbg_value(ptr %pix1, !440, !DIExpression(), !451)
    #dbg_value(ptr %pix2, !442, !DIExpression(), !451)
    #dbg_value(i32 poison, !444, !DIExpression(), !451)
    #dbg_value(i64 7, !447, !DIExpression(), !453)
  %0 = load <8 x i8>, ptr %pix1, align 1, !dbg !454
  %1 = zext <8 x i8> %0 to <8 x i16>, !dbg !454
  %2 = load <8 x i8>, ptr %pix2, align 1, !dbg !454
  %3 = zext <8 x i8> %2 to <8 x i16>, !dbg !454
  %4 = sub nsw <8 x i16> %1, %3, !dbg !454
  %5 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %4, i1 false), !dbg !454
  %6 = zext <8 x i16> %5 to <8 x i32>, !dbg !454
  %7 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %6), !dbg !454
    #dbg_value(i32 %7, !444, !DIExpression(), !451)
    #dbg_value(i64 8, !447, !DIExpression(), !453)
  %add.ptr = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext, !dbg !457
    #dbg_value(ptr %add.ptr, !440, !DIExpression(), !451)
  %add.ptr9 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext8, !dbg !457
    #dbg_value(ptr %add.ptr9, !442, !DIExpression(), !451)
    #dbg_value(i32 1, !445, !DIExpression(), !452)
    #dbg_value(i32 poison, !444, !DIExpression(), !451)
    #dbg_value(i64 7, !447, !DIExpression(), !453)
  %8 = load <8 x i8>, ptr %add.ptr, align 1, !dbg !454
  %9 = zext <8 x i8> %8 to <8 x i16>, !dbg !454
  %10 = load <8 x i8>, ptr %add.ptr9, align 1, !dbg !454
  %11 = zext <8 x i8> %10 to <8 x i16>, !dbg !454
  %12 = sub nsw <8 x i16> %9, %11, !dbg !454
  %13 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %12, i1 false), !dbg !454
  %14 = zext <8 x i16> %13 to <8 x i32>, !dbg !454
  %15 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %14), !dbg !454
  %op.rdx.1 = add i32 %15, %7, !dbg !454
    #dbg_value(i32 %op.rdx.1, !444, !DIExpression(), !451)
    #dbg_value(i64 8, !447, !DIExpression(), !453)
  %add.ptr.1 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.ext, !dbg !457
    #dbg_value(ptr %add.ptr.1, !440, !DIExpression(), !451)
  %add.ptr9.1 = getelementptr inbounds i8, ptr %add.ptr9, i64 %idx.ext8, !dbg !457
    #dbg_value(ptr %add.ptr9.1, !442, !DIExpression(), !451)
    #dbg_value(i32 2, !445, !DIExpression(), !452)
    #dbg_value(i32 poison, !444, !DIExpression(), !451)
    #dbg_value(i64 7, !447, !DIExpression(), !453)
  %16 = load <8 x i8>, ptr %add.ptr.1, align 1, !dbg !454
  %17 = zext <8 x i8> %16 to <8 x i16>, !dbg !454
  %18 = load <8 x i8>, ptr %add.ptr9.1, align 1, !dbg !454
  %19 = zext <8 x i8> %18 to <8 x i16>, !dbg !454
  %20 = sub nsw <8 x i16> %17, %19, !dbg !454
  %21 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %20, i1 false), !dbg !454
  %22 = zext <8 x i16> %21 to <8 x i32>, !dbg !454
  %23 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %22), !dbg !454
  %op.rdx.2 = add i32 %23, %op.rdx.1, !dbg !454
    #dbg_value(i32 %op.rdx.2, !444, !DIExpression(), !451)
    #dbg_value(i64 8, !447, !DIExpression(), !453)
  %add.ptr.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 %idx.ext, !dbg !457
    #dbg_value(ptr %add.ptr.2, !440, !DIExpression(), !451)
  %add.ptr9.2 = getelementptr inbounds i8, ptr %add.ptr9.1, i64 %idx.ext8, !dbg !457
    #dbg_value(ptr %add.ptr9.2, !442, !DIExpression(), !451)
    #dbg_value(i32 3, !445, !DIExpression(), !452)
    #dbg_value(i32 poison, !444, !DIExpression(), !451)
    #dbg_value(i64 7, !447, !DIExpression(), !453)
  %24 = load <8 x i8>, ptr %add.ptr.2, align 1, !dbg !454
  %25 = zext <8 x i8> %24 to <8 x i16>, !dbg !454
  %26 = load <8 x i8>, ptr %add.ptr9.2, align 1, !dbg !454
  %27 = zext <8 x i8> %26 to <8 x i16>, !dbg !454
  %28 = sub nsw <8 x i16> %25, %27, !dbg !454
  %29 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %28, i1 false), !dbg !454
  %30 = zext <8 x i16> %29 to <8 x i32>, !dbg !454
  %31 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %30), !dbg !454
  %op.rdx.3 = add i32 %31, %op.rdx.2, !dbg !454
    #dbg_value(i32 %op.rdx.3, !444, !DIExpression(), !451)
    #dbg_value(i64 8, !447, !DIExpression(), !453)
  %add.ptr.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 %idx.ext, !dbg !457
    #dbg_value(ptr %add.ptr.3, !440, !DIExpression(), !451)
  %add.ptr9.3 = getelementptr inbounds i8, ptr %add.ptr9.2, i64 %idx.ext8, !dbg !457
    #dbg_value(ptr %add.ptr9.3, !442, !DIExpression(), !451)
    #dbg_value(i32 4, !445, !DIExpression(), !452)
    #dbg_value(i32 poison, !444, !DIExpression(), !451)
    #dbg_value(i64 7, !447, !DIExpression(), !453)
  %32 = load <8 x i8>, ptr %add.ptr.3, align 1, !dbg !454
  %33 = zext <8 x i8> %32 to <8 x i16>, !dbg !454
  %34 = load <8 x i8>, ptr %add.ptr9.3, align 1, !dbg !454
  %35 = zext <8 x i8> %34 to <8 x i16>, !dbg !454
  %36 = sub nsw <8 x i16> %33, %35, !dbg !454
  %37 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %36, i1 false), !dbg !454
  %38 = zext <8 x i16> %37 to <8 x i32>, !dbg !454
  %39 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %38), !dbg !454
  %op.rdx.4 = add i32 %39, %op.rdx.3, !dbg !454
    #dbg_value(i32 %op.rdx.4, !444, !DIExpression(), !451)
    #dbg_value(i64 8, !447, !DIExpression(), !453)
  %add.ptr.4 = getelementptr inbounds i8, ptr %add.ptr.3, i64 %idx.ext, !dbg !457
    #dbg_value(ptr %add.ptr.4, !440, !DIExpression(), !451)
  %add.ptr9.4 = getelementptr inbounds i8, ptr %add.ptr9.3, i64 %idx.ext8, !dbg !457
    #dbg_value(ptr %add.ptr9.4, !442, !DIExpression(), !451)
    #dbg_value(i32 5, !445, !DIExpression(), !452)
    #dbg_value(i32 poison, !444, !DIExpression(), !451)
    #dbg_value(i64 7, !447, !DIExpression(), !453)
  %40 = load <8 x i8>, ptr %add.ptr.4, align 1, !dbg !454
  %41 = zext <8 x i8> %40 to <8 x i16>, !dbg !454
  %42 = load <8 x i8>, ptr %add.ptr9.4, align 1, !dbg !454
  %43 = zext <8 x i8> %42 to <8 x i16>, !dbg !454
  %44 = sub nsw <8 x i16> %41, %43, !dbg !454
  %45 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %44, i1 false), !dbg !454
  %46 = zext <8 x i16> %45 to <8 x i32>, !dbg !454
  %47 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %46), !dbg !454
  %op.rdx.5 = add i32 %47, %op.rdx.4, !dbg !454
    #dbg_value(i32 %op.rdx.5, !444, !DIExpression(), !451)
    #dbg_value(i64 8, !447, !DIExpression(), !453)
  %add.ptr.5 = getelementptr inbounds i8, ptr %add.ptr.4, i64 %idx.ext, !dbg !457
    #dbg_value(ptr %add.ptr.5, !440, !DIExpression(), !451)
  %add.ptr9.5 = getelementptr inbounds i8, ptr %add.ptr9.4, i64 %idx.ext8, !dbg !457
    #dbg_value(ptr %add.ptr9.5, !442, !DIExpression(), !451)
    #dbg_value(i32 6, !445, !DIExpression(), !452)
    #dbg_value(i32 poison, !444, !DIExpression(), !451)
    #dbg_value(i64 7, !447, !DIExpression(), !453)
  %48 = load <8 x i8>, ptr %add.ptr.5, align 1, !dbg !454
  %49 = zext <8 x i8> %48 to <8 x i16>, !dbg !454
  %50 = load <8 x i8>, ptr %add.ptr9.5, align 1, !dbg !454
  %51 = zext <8 x i8> %50 to <8 x i16>, !dbg !454
  %52 = sub nsw <8 x i16> %49, %51, !dbg !454
  %53 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %52, i1 false), !dbg !454
  %54 = zext <8 x i16> %53 to <8 x i32>, !dbg !454
  %55 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %54), !dbg !454
  %op.rdx.6 = add i32 %55, %op.rdx.5, !dbg !454
    #dbg_value(i32 %op.rdx.6, !444, !DIExpression(), !451)
    #dbg_value(i64 8, !447, !DIExpression(), !453)
  %add.ptr.6 = getelementptr inbounds i8, ptr %add.ptr.5, i64 %idx.ext, !dbg !457
    #dbg_value(ptr %add.ptr.6, !440, !DIExpression(), !451)
  %add.ptr9.6 = getelementptr inbounds i8, ptr %add.ptr9.5, i64 %idx.ext8, !dbg !457
    #dbg_value(ptr %add.ptr9.6, !442, !DIExpression(), !451)
    #dbg_value(i32 7, !445, !DIExpression(), !452)
    #dbg_value(i32 poison, !444, !DIExpression(), !451)
    #dbg_value(i64 7, !447, !DIExpression(), !453)
  %56 = load <8 x i8>, ptr %add.ptr.6, align 1, !dbg !454
  %57 = zext <8 x i8> %56 to <8 x i16>, !dbg !454
  %58 = load <8 x i8>, ptr %add.ptr9.6, align 1, !dbg !454
  %59 = zext <8 x i8> %58 to <8 x i16>, !dbg !454
  %60 = sub nsw <8 x i16> %57, %59, !dbg !454
  %61 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %60, i1 false), !dbg !454
  %62 = zext <8 x i16> %61 to <8 x i32>, !dbg !454
  %63 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %62), !dbg !454
  %op.rdx.7 = add i32 %63, %op.rdx.6, !dbg !454
    #dbg_value(i32 %op.rdx.7, !444, !DIExpression(), !451)
    #dbg_value(i64 8, !447, !DIExpression(), !453)
  %add.ptr.7 = getelementptr inbounds i8, ptr %add.ptr.6, i64 %idx.ext, !dbg !457
    #dbg_value(ptr %add.ptr.7, !440, !DIExpression(), !451)
  %add.ptr9.7 = getelementptr inbounds i8, ptr %add.ptr9.6, i64 %idx.ext8, !dbg !457
    #dbg_value(ptr %add.ptr9.7, !442, !DIExpression(), !451)
    #dbg_value(i32 8, !445, !DIExpression(), !452)
    #dbg_value(i32 poison, !444, !DIExpression(), !451)
    #dbg_value(i64 7, !447, !DIExpression(), !453)
  %64 = load <8 x i8>, ptr %add.ptr.7, align 1, !dbg !454
  %65 = zext <8 x i8> %64 to <8 x i16>, !dbg !454
  %66 = load <8 x i8>, ptr %add.ptr9.7, align 1, !dbg !454
  %67 = zext <8 x i8> %66 to <8 x i16>, !dbg !454
  %68 = sub nsw <8 x i16> %65, %67, !dbg !454
  %69 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %68, i1 false), !dbg !454
  %70 = zext <8 x i16> %69 to <8 x i32>, !dbg !454
  %71 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %70), !dbg !454
  %op.rdx.8 = add i32 %71, %op.rdx.7, !dbg !454
    #dbg_value(i32 %op.rdx.8, !444, !DIExpression(), !451)
    #dbg_value(i64 8, !447, !DIExpression(), !453)
  %add.ptr.8 = getelementptr inbounds i8, ptr %add.ptr.7, i64 %idx.ext, !dbg !457
    #dbg_value(ptr %add.ptr.8, !440, !DIExpression(), !451)
  %add.ptr9.8 = getelementptr inbounds i8, ptr %add.ptr9.7, i64 %idx.ext8, !dbg !457
    #dbg_value(ptr %add.ptr9.8, !442, !DIExpression(), !451)
    #dbg_value(i32 9, !445, !DIExpression(), !452)
    #dbg_value(i32 poison, !444, !DIExpression(), !451)
    #dbg_value(i64 7, !447, !DIExpression(), !453)
  %72 = load <8 x i8>, ptr %add.ptr.8, align 1, !dbg !454
  %73 = zext <8 x i8> %72 to <8 x i16>, !dbg !454
  %74 = load <8 x i8>, ptr %add.ptr9.8, align 1, !dbg !454
  %75 = zext <8 x i8> %74 to <8 x i16>, !dbg !454
  %76 = sub nsw <8 x i16> %73, %75, !dbg !454
  %77 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %76, i1 false), !dbg !454
  %78 = zext <8 x i16> %77 to <8 x i32>, !dbg !454
  %79 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %78), !dbg !454
  %op.rdx.9 = add i32 %79, %op.rdx.8, !dbg !454
    #dbg_value(i32 %op.rdx.9, !444, !DIExpression(), !451)
    #dbg_value(i64 8, !447, !DIExpression(), !453)
  %add.ptr.9 = getelementptr inbounds i8, ptr %add.ptr.8, i64 %idx.ext, !dbg !457
    #dbg_value(ptr %add.ptr.9, !440, !DIExpression(), !451)
  %add.ptr9.9 = getelementptr inbounds i8, ptr %add.ptr9.8, i64 %idx.ext8, !dbg !457
    #dbg_value(ptr %add.ptr9.9, !442, !DIExpression(), !451)
    #dbg_value(i32 10, !445, !DIExpression(), !452)
    #dbg_value(i32 poison, !444, !DIExpression(), !451)
    #dbg_value(i64 7, !447, !DIExpression(), !453)
  %80 = load <8 x i8>, ptr %add.ptr.9, align 1, !dbg !454
  %81 = zext <8 x i8> %80 to <8 x i16>, !dbg !454
  %82 = load <8 x i8>, ptr %add.ptr9.9, align 1, !dbg !454
  %83 = zext <8 x i8> %82 to <8 x i16>, !dbg !454
  %84 = sub nsw <8 x i16> %81, %83, !dbg !454
  %85 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %84, i1 false), !dbg !454
  %86 = zext <8 x i16> %85 to <8 x i32>, !dbg !454
  %87 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %86), !dbg !454
  %op.rdx.10 = add i32 %87, %op.rdx.9, !dbg !454
    #dbg_value(i32 %op.rdx.10, !444, !DIExpression(), !451)
    #dbg_value(i64 8, !447, !DIExpression(), !453)
  %add.ptr.10 = getelementptr inbounds i8, ptr %add.ptr.9, i64 %idx.ext, !dbg !457
    #dbg_value(ptr %add.ptr.10, !440, !DIExpression(), !451)
  %add.ptr9.10 = getelementptr inbounds i8, ptr %add.ptr9.9, i64 %idx.ext8, !dbg !457
    #dbg_value(ptr %add.ptr9.10, !442, !DIExpression(), !451)
    #dbg_value(i32 11, !445, !DIExpression(), !452)
    #dbg_value(i32 poison, !444, !DIExpression(), !451)
    #dbg_value(i64 7, !447, !DIExpression(), !453)
  %88 = load <8 x i8>, ptr %add.ptr.10, align 1, !dbg !454
  %89 = zext <8 x i8> %88 to <8 x i16>, !dbg !454
  %90 = load <8 x i8>, ptr %add.ptr9.10, align 1, !dbg !454
  %91 = zext <8 x i8> %90 to <8 x i16>, !dbg !454
  %92 = sub nsw <8 x i16> %89, %91, !dbg !454
  %93 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %92, i1 false), !dbg !454
  %94 = zext <8 x i16> %93 to <8 x i32>, !dbg !454
  %95 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %94), !dbg !454
  %op.rdx.11 = add i32 %95, %op.rdx.10, !dbg !454
    #dbg_value(i32 %op.rdx.11, !444, !DIExpression(), !451)
    #dbg_value(i64 8, !447, !DIExpression(), !453)
  %add.ptr.11 = getelementptr inbounds i8, ptr %add.ptr.10, i64 %idx.ext, !dbg !457
    #dbg_value(ptr %add.ptr.11, !440, !DIExpression(), !451)
  %add.ptr9.11 = getelementptr inbounds i8, ptr %add.ptr9.10, i64 %idx.ext8, !dbg !457
    #dbg_value(ptr %add.ptr9.11, !442, !DIExpression(), !451)
    #dbg_value(i32 12, !445, !DIExpression(), !452)
    #dbg_value(i32 poison, !444, !DIExpression(), !451)
    #dbg_value(i64 7, !447, !DIExpression(), !453)
  %96 = load <8 x i8>, ptr %add.ptr.11, align 1, !dbg !454
  %97 = zext <8 x i8> %96 to <8 x i16>, !dbg !454
  %98 = load <8 x i8>, ptr %add.ptr9.11, align 1, !dbg !454
  %99 = zext <8 x i8> %98 to <8 x i16>, !dbg !454
  %100 = sub nsw <8 x i16> %97, %99, !dbg !454
  %101 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %100, i1 false), !dbg !454
  %102 = zext <8 x i16> %101 to <8 x i32>, !dbg !454
  %103 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %102), !dbg !454
  %op.rdx.12 = add i32 %103, %op.rdx.11, !dbg !454
    #dbg_value(i32 %op.rdx.12, !444, !DIExpression(), !451)
    #dbg_value(i64 8, !447, !DIExpression(), !453)
  %add.ptr.12 = getelementptr inbounds i8, ptr %add.ptr.11, i64 %idx.ext, !dbg !457
    #dbg_value(ptr %add.ptr.12, !440, !DIExpression(), !451)
  %add.ptr9.12 = getelementptr inbounds i8, ptr %add.ptr9.11, i64 %idx.ext8, !dbg !457
    #dbg_value(ptr %add.ptr9.12, !442, !DIExpression(), !451)
    #dbg_value(i32 13, !445, !DIExpression(), !452)
    #dbg_value(i32 poison, !444, !DIExpression(), !451)
    #dbg_value(i64 7, !447, !DIExpression(), !453)
  %104 = load <8 x i8>, ptr %add.ptr.12, align 1, !dbg !454
  %105 = zext <8 x i8> %104 to <8 x i16>, !dbg !454
  %106 = load <8 x i8>, ptr %add.ptr9.12, align 1, !dbg !454
  %107 = zext <8 x i8> %106 to <8 x i16>, !dbg !454
  %108 = sub nsw <8 x i16> %105, %107, !dbg !454
  %109 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %108, i1 false), !dbg !454
  %110 = zext <8 x i16> %109 to <8 x i32>, !dbg !454
  %111 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %110), !dbg !454
  %op.rdx.13 = add i32 %111, %op.rdx.12, !dbg !454
    #dbg_value(i32 %op.rdx.13, !444, !DIExpression(), !451)
    #dbg_value(i64 8, !447, !DIExpression(), !453)
  %add.ptr.13 = getelementptr inbounds i8, ptr %add.ptr.12, i64 %idx.ext, !dbg !457
    #dbg_value(ptr %add.ptr.13, !440, !DIExpression(), !451)
  %add.ptr9.13 = getelementptr inbounds i8, ptr %add.ptr9.12, i64 %idx.ext8, !dbg !457
    #dbg_value(ptr %add.ptr9.13, !442, !DIExpression(), !451)
    #dbg_value(i32 14, !445, !DIExpression(), !452)
    #dbg_value(i32 poison, !444, !DIExpression(), !451)
    #dbg_value(i64 7, !447, !DIExpression(), !453)
  %112 = load <8 x i8>, ptr %add.ptr.13, align 1, !dbg !454
  %113 = zext <8 x i8> %112 to <8 x i16>, !dbg !454
  %114 = load <8 x i8>, ptr %add.ptr9.13, align 1, !dbg !454
  %115 = zext <8 x i8> %114 to <8 x i16>, !dbg !454
  %116 = sub nsw <8 x i16> %113, %115, !dbg !454
  %117 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %116, i1 false), !dbg !454
  %118 = zext <8 x i16> %117 to <8 x i32>, !dbg !454
  %119 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %118), !dbg !454
  %op.rdx.14 = add i32 %119, %op.rdx.13, !dbg !454
    #dbg_value(i32 %op.rdx.14, !444, !DIExpression(), !451)
    #dbg_value(i64 8, !447, !DIExpression(), !453)
  %add.ptr.14 = getelementptr inbounds i8, ptr %add.ptr.13, i64 %idx.ext, !dbg !457
    #dbg_value(ptr %add.ptr.14, !440, !DIExpression(), !451)
  %add.ptr9.14 = getelementptr inbounds i8, ptr %add.ptr9.13, i64 %idx.ext8, !dbg !457
    #dbg_value(ptr %add.ptr9.14, !442, !DIExpression(), !451)
    #dbg_value(i32 15, !445, !DIExpression(), !452)
    #dbg_value(i32 poison, !444, !DIExpression(), !451)
    #dbg_value(i64 7, !447, !DIExpression(), !453)
  %120 = load <8 x i8>, ptr %add.ptr.14, align 1, !dbg !454
  %121 = zext <8 x i8> %120 to <8 x i16>, !dbg !454
  %122 = load <8 x i8>, ptr %add.ptr9.14, align 1, !dbg !454
  %123 = zext <8 x i8> %122 to <8 x i16>, !dbg !454
  %124 = sub nsw <8 x i16> %121, %123, !dbg !454
  %125 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %124, i1 false), !dbg !454
  %126 = zext <8 x i16> %125 to <8 x i32>, !dbg !454
  %127 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %126), !dbg !454
  %op.rdx.15 = add i32 %127, %op.rdx.14, !dbg !454
    #dbg_value(i32 %op.rdx.15, !444, !DIExpression(), !451)
    #dbg_value(i64 8, !447, !DIExpression(), !453)
    #dbg_value(!DIArgList(ptr %add.ptr.14, i64 %idx.ext), !440, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !451)
    #dbg_value(!DIArgList(ptr %add.ptr9.14, i64 %idx.ext8), !442, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !451)
    #dbg_value(i32 16, !445, !DIExpression(), !452)
  ret i32 %op.rdx.15, !dbg !458
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define internal i32 @x264_pixel_sad_8x8(ptr nocapture noundef readonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2) #4 !dbg !459 {
entry:
    #dbg_value(ptr %pix1, !461, !DIExpression(), !472)
    #dbg_value(i32 %i_stride_pix1, !462, !DIExpression(), !472)
    #dbg_value(ptr %pix2, !463, !DIExpression(), !472)
    #dbg_value(i32 %i_stride_pix2, !464, !DIExpression(), !472)
    #dbg_value(i32 0, !465, !DIExpression(), !472)
    #dbg_value(i32 0, !466, !DIExpression(), !473)
    #dbg_value(i32 0, !466, !DIExpression(), !473)
    #dbg_value(i32 0, !465, !DIExpression(), !472)
    #dbg_value(ptr %pix1, !461, !DIExpression(), !472)
    #dbg_value(ptr %pix2, !463, !DIExpression(), !472)
  %idx.ext8 = sext i32 %i_stride_pix2 to i64
  %idx.ext = sext i32 %i_stride_pix1 to i64
    #dbg_value(i32 0, !466, !DIExpression(), !473)
    #dbg_value(ptr %pix1, !461, !DIExpression(), !472)
    #dbg_value(ptr %pix2, !463, !DIExpression(), !472)
    #dbg_value(i32 poison, !465, !DIExpression(), !472)
    #dbg_value(i64 7, !468, !DIExpression(), !474)
  %0 = load <8 x i8>, ptr %pix1, align 1, !dbg !475
  %1 = zext <8 x i8> %0 to <8 x i16>, !dbg !475
  %2 = load <8 x i8>, ptr %pix2, align 1, !dbg !475
  %3 = zext <8 x i8> %2 to <8 x i16>, !dbg !475
  %4 = sub nsw <8 x i16> %1, %3, !dbg !475
  %5 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %4, i1 false), !dbg !475
  %6 = zext <8 x i16> %5 to <8 x i32>, !dbg !475
  %7 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %6), !dbg !475
    #dbg_value(i32 %7, !465, !DIExpression(), !472)
    #dbg_value(i64 8, !468, !DIExpression(), !474)
  %add.ptr = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext, !dbg !478
    #dbg_value(ptr %add.ptr, !461, !DIExpression(), !472)
  %add.ptr9 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext8, !dbg !478
    #dbg_value(ptr %add.ptr9, !463, !DIExpression(), !472)
    #dbg_value(i32 1, !466, !DIExpression(), !473)
    #dbg_value(i32 poison, !465, !DIExpression(), !472)
    #dbg_value(i64 7, !468, !DIExpression(), !474)
  %8 = load <8 x i8>, ptr %add.ptr, align 1, !dbg !475
  %9 = zext <8 x i8> %8 to <8 x i16>, !dbg !475
  %10 = load <8 x i8>, ptr %add.ptr9, align 1, !dbg !475
  %11 = zext <8 x i8> %10 to <8 x i16>, !dbg !475
  %12 = sub nsw <8 x i16> %9, %11, !dbg !475
  %13 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %12, i1 false), !dbg !475
  %14 = zext <8 x i16> %13 to <8 x i32>, !dbg !475
  %15 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %14), !dbg !475
  %op.rdx.1 = add i32 %15, %7, !dbg !475
    #dbg_value(i32 %op.rdx.1, !465, !DIExpression(), !472)
    #dbg_value(i64 8, !468, !DIExpression(), !474)
  %add.ptr.1 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.ext, !dbg !478
    #dbg_value(ptr %add.ptr.1, !461, !DIExpression(), !472)
  %add.ptr9.1 = getelementptr inbounds i8, ptr %add.ptr9, i64 %idx.ext8, !dbg !478
    #dbg_value(ptr %add.ptr9.1, !463, !DIExpression(), !472)
    #dbg_value(i32 2, !466, !DIExpression(), !473)
    #dbg_value(i32 poison, !465, !DIExpression(), !472)
    #dbg_value(i64 7, !468, !DIExpression(), !474)
  %16 = load <8 x i8>, ptr %add.ptr.1, align 1, !dbg !475
  %17 = zext <8 x i8> %16 to <8 x i16>, !dbg !475
  %18 = load <8 x i8>, ptr %add.ptr9.1, align 1, !dbg !475
  %19 = zext <8 x i8> %18 to <8 x i16>, !dbg !475
  %20 = sub nsw <8 x i16> %17, %19, !dbg !475
  %21 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %20, i1 false), !dbg !475
  %22 = zext <8 x i16> %21 to <8 x i32>, !dbg !475
  %23 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %22), !dbg !475
  %op.rdx.2 = add i32 %23, %op.rdx.1, !dbg !475
    #dbg_value(i32 %op.rdx.2, !465, !DIExpression(), !472)
    #dbg_value(i64 8, !468, !DIExpression(), !474)
  %add.ptr.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 %idx.ext, !dbg !478
    #dbg_value(ptr %add.ptr.2, !461, !DIExpression(), !472)
  %add.ptr9.2 = getelementptr inbounds i8, ptr %add.ptr9.1, i64 %idx.ext8, !dbg !478
    #dbg_value(ptr %add.ptr9.2, !463, !DIExpression(), !472)
    #dbg_value(i32 3, !466, !DIExpression(), !473)
    #dbg_value(i32 poison, !465, !DIExpression(), !472)
    #dbg_value(i64 7, !468, !DIExpression(), !474)
  %24 = load <8 x i8>, ptr %add.ptr.2, align 1, !dbg !475
  %25 = zext <8 x i8> %24 to <8 x i16>, !dbg !475
  %26 = load <8 x i8>, ptr %add.ptr9.2, align 1, !dbg !475
  %27 = zext <8 x i8> %26 to <8 x i16>, !dbg !475
  %28 = sub nsw <8 x i16> %25, %27, !dbg !475
  %29 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %28, i1 false), !dbg !475
  %30 = zext <8 x i16> %29 to <8 x i32>, !dbg !475
  %31 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %30), !dbg !475
  %op.rdx.3 = add i32 %31, %op.rdx.2, !dbg !475
    #dbg_value(i32 %op.rdx.3, !465, !DIExpression(), !472)
    #dbg_value(i64 8, !468, !DIExpression(), !474)
  %add.ptr.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 %idx.ext, !dbg !478
    #dbg_value(ptr %add.ptr.3, !461, !DIExpression(), !472)
  %add.ptr9.3 = getelementptr inbounds i8, ptr %add.ptr9.2, i64 %idx.ext8, !dbg !478
    #dbg_value(ptr %add.ptr9.3, !463, !DIExpression(), !472)
    #dbg_value(i32 4, !466, !DIExpression(), !473)
    #dbg_value(i32 poison, !465, !DIExpression(), !472)
    #dbg_value(i64 7, !468, !DIExpression(), !474)
  %32 = load <8 x i8>, ptr %add.ptr.3, align 1, !dbg !475
  %33 = zext <8 x i8> %32 to <8 x i16>, !dbg !475
  %34 = load <8 x i8>, ptr %add.ptr9.3, align 1, !dbg !475
  %35 = zext <8 x i8> %34 to <8 x i16>, !dbg !475
  %36 = sub nsw <8 x i16> %33, %35, !dbg !475
  %37 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %36, i1 false), !dbg !475
  %38 = zext <8 x i16> %37 to <8 x i32>, !dbg !475
  %39 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %38), !dbg !475
  %op.rdx.4 = add i32 %39, %op.rdx.3, !dbg !475
    #dbg_value(i32 %op.rdx.4, !465, !DIExpression(), !472)
    #dbg_value(i64 8, !468, !DIExpression(), !474)
  %add.ptr.4 = getelementptr inbounds i8, ptr %add.ptr.3, i64 %idx.ext, !dbg !478
    #dbg_value(ptr %add.ptr.4, !461, !DIExpression(), !472)
  %add.ptr9.4 = getelementptr inbounds i8, ptr %add.ptr9.3, i64 %idx.ext8, !dbg !478
    #dbg_value(ptr %add.ptr9.4, !463, !DIExpression(), !472)
    #dbg_value(i32 5, !466, !DIExpression(), !473)
    #dbg_value(i32 poison, !465, !DIExpression(), !472)
    #dbg_value(i64 7, !468, !DIExpression(), !474)
  %40 = load <8 x i8>, ptr %add.ptr.4, align 1, !dbg !475
  %41 = zext <8 x i8> %40 to <8 x i16>, !dbg !475
  %42 = load <8 x i8>, ptr %add.ptr9.4, align 1, !dbg !475
  %43 = zext <8 x i8> %42 to <8 x i16>, !dbg !475
  %44 = sub nsw <8 x i16> %41, %43, !dbg !475
  %45 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %44, i1 false), !dbg !475
  %46 = zext <8 x i16> %45 to <8 x i32>, !dbg !475
  %47 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %46), !dbg !475
  %op.rdx.5 = add i32 %47, %op.rdx.4, !dbg !475
    #dbg_value(i32 %op.rdx.5, !465, !DIExpression(), !472)
    #dbg_value(i64 8, !468, !DIExpression(), !474)
  %add.ptr.5 = getelementptr inbounds i8, ptr %add.ptr.4, i64 %idx.ext, !dbg !478
    #dbg_value(ptr %add.ptr.5, !461, !DIExpression(), !472)
  %add.ptr9.5 = getelementptr inbounds i8, ptr %add.ptr9.4, i64 %idx.ext8, !dbg !478
    #dbg_value(ptr %add.ptr9.5, !463, !DIExpression(), !472)
    #dbg_value(i32 6, !466, !DIExpression(), !473)
    #dbg_value(i32 poison, !465, !DIExpression(), !472)
    #dbg_value(i64 7, !468, !DIExpression(), !474)
  %48 = load <8 x i8>, ptr %add.ptr.5, align 1, !dbg !475
  %49 = zext <8 x i8> %48 to <8 x i16>, !dbg !475
  %50 = load <8 x i8>, ptr %add.ptr9.5, align 1, !dbg !475
  %51 = zext <8 x i8> %50 to <8 x i16>, !dbg !475
  %52 = sub nsw <8 x i16> %49, %51, !dbg !475
  %53 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %52, i1 false), !dbg !475
  %54 = zext <8 x i16> %53 to <8 x i32>, !dbg !475
  %55 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %54), !dbg !475
  %op.rdx.6 = add i32 %55, %op.rdx.5, !dbg !475
    #dbg_value(i32 %op.rdx.6, !465, !DIExpression(), !472)
    #dbg_value(i64 8, !468, !DIExpression(), !474)
  %add.ptr.6 = getelementptr inbounds i8, ptr %add.ptr.5, i64 %idx.ext, !dbg !478
    #dbg_value(ptr %add.ptr.6, !461, !DIExpression(), !472)
  %add.ptr9.6 = getelementptr inbounds i8, ptr %add.ptr9.5, i64 %idx.ext8, !dbg !478
    #dbg_value(ptr %add.ptr9.6, !463, !DIExpression(), !472)
    #dbg_value(i32 7, !466, !DIExpression(), !473)
    #dbg_value(i32 poison, !465, !DIExpression(), !472)
    #dbg_value(i64 7, !468, !DIExpression(), !474)
  %56 = load <8 x i8>, ptr %add.ptr.6, align 1, !dbg !475
  %57 = zext <8 x i8> %56 to <8 x i16>, !dbg !475
  %58 = load <8 x i8>, ptr %add.ptr9.6, align 1, !dbg !475
  %59 = zext <8 x i8> %58 to <8 x i16>, !dbg !475
  %60 = sub nsw <8 x i16> %57, %59, !dbg !475
  %61 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %60, i1 false), !dbg !475
  %62 = zext <8 x i16> %61 to <8 x i32>, !dbg !475
  %63 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %62), !dbg !475
  %op.rdx.7 = add i32 %63, %op.rdx.6, !dbg !475
    #dbg_value(i32 %op.rdx.7, !465, !DIExpression(), !472)
    #dbg_value(i64 8, !468, !DIExpression(), !474)
    #dbg_value(!DIArgList(ptr %add.ptr.6, i64 %idx.ext), !461, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !472)
    #dbg_value(!DIArgList(ptr %add.ptr9.6, i64 %idx.ext8), !463, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !472)
    #dbg_value(i32 8, !466, !DIExpression(), !473)
  ret i32 %op.rdx.7, !dbg !479
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define internal i32 @x264_pixel_sad_8x4(ptr nocapture noundef readonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2) #5 !dbg !480 {
entry:
    #dbg_value(ptr %pix1, !482, !DIExpression(), !493)
    #dbg_value(i32 %i_stride_pix1, !483, !DIExpression(), !493)
    #dbg_value(ptr %pix2, !484, !DIExpression(), !493)
    #dbg_value(i32 %i_stride_pix2, !485, !DIExpression(), !493)
    #dbg_value(i32 0, !486, !DIExpression(), !493)
    #dbg_value(i32 0, !487, !DIExpression(), !494)
  %idx.ext = sext i32 %i_stride_pix1 to i64
  %idx.ext8 = sext i32 %i_stride_pix2 to i64
    #dbg_value(i32 0, !487, !DIExpression(), !494)
    #dbg_value(i32 0, !486, !DIExpression(), !493)
    #dbg_value(ptr %pix1, !482, !DIExpression(), !493)
    #dbg_value(ptr %pix2, !484, !DIExpression(), !493)
    #dbg_value(i32 0, !487, !DIExpression(), !494)
    #dbg_value(ptr %pix1, !482, !DIExpression(), !493)
    #dbg_value(ptr %pix2, !484, !DIExpression(), !493)
    #dbg_value(i32 0, !489, !DIExpression(), !495)
    #dbg_value(i32 0, !486, !DIExpression(), !493)
    #dbg_value(i64 0, !489, !DIExpression(), !495)
    #dbg_value(i32 0, !486, !DIExpression(), !493)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 1, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 2, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 3, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 4, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 5, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 6, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 7, !489, !DIExpression(), !495)
  %0 = load <8 x i8>, ptr %pix1, align 1, !dbg !496
  %1 = load <8 x i8>, ptr %pix2, align 1, !dbg !496
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 8, !489, !DIExpression(), !495)
  %add.ptr = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext, !dbg !499
    #dbg_value(ptr %add.ptr, !482, !DIExpression(), !493)
  %add.ptr9 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext8, !dbg !499
    #dbg_value(ptr %add.ptr9, !484, !DIExpression(), !493)
    #dbg_value(i32 1, !487, !DIExpression(), !494)
    #dbg_value(i32 0, !489, !DIExpression(), !495)
    #dbg_value(i64 0, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 1, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 2, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 3, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 4, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 5, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 6, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 7, !489, !DIExpression(), !495)
  %2 = load <8 x i8>, ptr %add.ptr, align 1, !dbg !496
  %3 = load <8 x i8>, ptr %add.ptr9, align 1, !dbg !496
  %4 = shufflevector <8 x i8> %0, <8 x i8> %2, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>, !dbg !496
  %5 = zext <16 x i8> %4 to <16 x i16>, !dbg !496
  %6 = shufflevector <8 x i8> %1, <8 x i8> %3, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>, !dbg !496
  %7 = zext <16 x i8> %6 to <16 x i16>, !dbg !496
  %8 = sub nsw <16 x i16> %5, %7, !dbg !496
  %9 = tail call <16 x i16> @llvm.abs.v16i16(<16 x i16> %8, i1 false), !dbg !496
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 8, !489, !DIExpression(), !495)
  %add.ptr.1 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.ext, !dbg !499
    #dbg_value(ptr %add.ptr.1, !482, !DIExpression(), !493)
  %add.ptr9.1 = getelementptr inbounds i8, ptr %add.ptr9, i64 %idx.ext8, !dbg !499
    #dbg_value(ptr %add.ptr9.1, !484, !DIExpression(), !493)
    #dbg_value(i32 2, !487, !DIExpression(), !494)
    #dbg_value(i32 0, !489, !DIExpression(), !495)
    #dbg_value(i64 0, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 1, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 2, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 3, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 4, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 5, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 6, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 7, !489, !DIExpression(), !495)
  %10 = load <8 x i8>, ptr %add.ptr.1, align 1, !dbg !496
  %11 = load <8 x i8>, ptr %add.ptr9.1, align 1, !dbg !496
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 8, !489, !DIExpression(), !495)
  %add.ptr.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 %idx.ext, !dbg !499
    #dbg_value(ptr %add.ptr.2, !482, !DIExpression(), !493)
  %add.ptr9.2 = getelementptr inbounds i8, ptr %add.ptr9.1, i64 %idx.ext8, !dbg !499
    #dbg_value(ptr %add.ptr9.2, !484, !DIExpression(), !493)
    #dbg_value(i32 3, !487, !DIExpression(), !494)
    #dbg_value(i32 0, !489, !DIExpression(), !495)
    #dbg_value(i64 0, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 1, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 2, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 3, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 4, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 5, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 6, !489, !DIExpression(), !495)
    #dbg_value(i32 poison, !486, !DIExpression(), !493)
    #dbg_value(i64 7, !489, !DIExpression(), !495)
  %12 = load <8 x i8>, ptr %add.ptr.2, align 1, !dbg !496
  %13 = load <8 x i8>, ptr %add.ptr9.2, align 1, !dbg !496
  %14 = shufflevector <8 x i8> %10, <8 x i8> %12, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>, !dbg !496
  %15 = zext <16 x i8> %14 to <16 x i16>, !dbg !496
  %16 = shufflevector <8 x i8> %11, <8 x i8> %13, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>, !dbg !496
  %17 = zext <16 x i8> %16 to <16 x i16>, !dbg !496
  %18 = sub nsw <16 x i16> %15, %17, !dbg !496
  %19 = tail call <16 x i16> @llvm.abs.v16i16(<16 x i16> %18, i1 false), !dbg !496
  %20 = zext <16 x i16> %9 to <16 x i32>, !dbg !496
  %21 = tail call i32 @llvm.vector.reduce.add.v16i32(<16 x i32> %20), !dbg !496
  %22 = zext <16 x i16> %19 to <16 x i32>, !dbg !496
  %23 = tail call i32 @llvm.vector.reduce.add.v16i32(<16 x i32> %22), !dbg !496
  %op.rdx = add i32 %21, %23, !dbg !496
    #dbg_value(i32 %op.rdx, !486, !DIExpression(), !493)
    #dbg_value(i64 8, !489, !DIExpression(), !495)
    #dbg_value(!DIArgList(ptr %add.ptr.2, i64 %idx.ext), !482, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !493)
    #dbg_value(!DIArgList(ptr %add.ptr9.2, i64 %idx.ext8), !484, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !493)
    #dbg_value(i32 4, !487, !DIExpression(), !494)
  ret i32 %op.rdx, !dbg !500
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @x264_pixel_sad_4x8(ptr nocapture noundef readonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2) #6 !dbg !501 {
entry:
    #dbg_value(ptr %pix1, !503, !DIExpression(), !514)
    #dbg_value(i32 %i_stride_pix1, !504, !DIExpression(), !514)
    #dbg_value(ptr %pix2, !505, !DIExpression(), !514)
    #dbg_value(i32 %i_stride_pix2, !506, !DIExpression(), !514)
    #dbg_value(i32 0, !507, !DIExpression(), !514)
    #dbg_value(i32 0, !508, !DIExpression(), !515)
  %idx.ext = sext i32 %i_stride_pix1 to i64
  %idx.ext8 = sext i32 %i_stride_pix2 to i64
    #dbg_value(i32 0, !508, !DIExpression(), !515)
    #dbg_value(i32 0, !507, !DIExpression(), !514)
    #dbg_value(ptr %pix1, !503, !DIExpression(), !514)
    #dbg_value(ptr %pix2, !505, !DIExpression(), !514)
    #dbg_value(i32 0, !508, !DIExpression(), !515)
    #dbg_value(ptr %pix1, !503, !DIExpression(), !514)
    #dbg_value(ptr %pix2, !505, !DIExpression(), !514)
    #dbg_value(i32 0, !510, !DIExpression(), !516)
    #dbg_value(i32 0, !507, !DIExpression(), !514)
    #dbg_value(i64 0, !510, !DIExpression(), !516)
    #dbg_value(i32 0, !507, !DIExpression(), !514)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 1, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 2, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 3, !510, !DIExpression(), !516)
  %0 = load <4 x i8>, ptr %pix1, align 1, !dbg !517
  %1 = zext <4 x i8> %0 to <4 x i16>, !dbg !517
  %2 = load <4 x i8>, ptr %pix2, align 1, !dbg !517
  %3 = zext <4 x i8> %2 to <4 x i16>, !dbg !517
  %4 = sub nsw <4 x i16> %1, %3, !dbg !517
  %5 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %4, i1 false), !dbg !517
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 4, !510, !DIExpression(), !516)
  %add.ptr = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext, !dbg !520
    #dbg_value(ptr %add.ptr, !503, !DIExpression(), !514)
  %add.ptr9 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext8, !dbg !520
    #dbg_value(ptr %add.ptr9, !505, !DIExpression(), !514)
    #dbg_value(i32 1, !508, !DIExpression(), !515)
    #dbg_value(i32 0, !510, !DIExpression(), !516)
    #dbg_value(i64 0, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 1, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 2, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 3, !510, !DIExpression(), !516)
  %6 = load <4 x i8>, ptr %add.ptr, align 1, !dbg !517
  %7 = zext <4 x i8> %6 to <4 x i16>, !dbg !517
  %8 = load <4 x i8>, ptr %add.ptr9, align 1, !dbg !517
  %9 = zext <4 x i8> %8 to <4 x i16>, !dbg !517
  %10 = sub nsw <4 x i16> %7, %9, !dbg !517
  %11 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %10, i1 false), !dbg !517
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 4, !510, !DIExpression(), !516)
  %add.ptr.1 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.ext, !dbg !520
    #dbg_value(ptr %add.ptr.1, !503, !DIExpression(), !514)
  %add.ptr9.1 = getelementptr inbounds i8, ptr %add.ptr9, i64 %idx.ext8, !dbg !520
    #dbg_value(ptr %add.ptr9.1, !505, !DIExpression(), !514)
    #dbg_value(i32 2, !508, !DIExpression(), !515)
    #dbg_value(i32 0, !510, !DIExpression(), !516)
    #dbg_value(i64 0, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 1, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 2, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 3, !510, !DIExpression(), !516)
  %12 = load <4 x i8>, ptr %add.ptr.1, align 1, !dbg !517
  %13 = zext <4 x i8> %12 to <4 x i16>, !dbg !517
  %14 = load <4 x i8>, ptr %add.ptr9.1, align 1, !dbg !517
  %15 = zext <4 x i8> %14 to <4 x i16>, !dbg !517
  %16 = sub nsw <4 x i16> %13, %15, !dbg !517
  %17 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %16, i1 false), !dbg !517
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 4, !510, !DIExpression(), !516)
  %add.ptr.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 %idx.ext, !dbg !520
    #dbg_value(ptr %add.ptr.2, !503, !DIExpression(), !514)
  %add.ptr9.2 = getelementptr inbounds i8, ptr %add.ptr9.1, i64 %idx.ext8, !dbg !520
    #dbg_value(ptr %add.ptr9.2, !505, !DIExpression(), !514)
    #dbg_value(i32 3, !508, !DIExpression(), !515)
    #dbg_value(i32 0, !510, !DIExpression(), !516)
    #dbg_value(i64 0, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 1, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 2, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 3, !510, !DIExpression(), !516)
  %18 = load <4 x i8>, ptr %add.ptr.2, align 1, !dbg !517
  %19 = zext <4 x i8> %18 to <4 x i16>, !dbg !517
  %20 = load <4 x i8>, ptr %add.ptr9.2, align 1, !dbg !517
  %21 = zext <4 x i8> %20 to <4 x i16>, !dbg !517
  %22 = sub nsw <4 x i16> %19, %21, !dbg !517
  %23 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %22, i1 false), !dbg !517
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 4, !510, !DIExpression(), !516)
  %add.ptr.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 %idx.ext, !dbg !520
    #dbg_value(ptr %add.ptr.3, !503, !DIExpression(), !514)
  %add.ptr9.3 = getelementptr inbounds i8, ptr %add.ptr9.2, i64 %idx.ext8, !dbg !520
    #dbg_value(ptr %add.ptr9.3, !505, !DIExpression(), !514)
    #dbg_value(i32 4, !508, !DIExpression(), !515)
    #dbg_value(i32 0, !510, !DIExpression(), !516)
    #dbg_value(i64 0, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 1, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 2, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 3, !510, !DIExpression(), !516)
  %24 = load <4 x i8>, ptr %add.ptr.3, align 1, !dbg !517
  %25 = zext <4 x i8> %24 to <4 x i16>, !dbg !517
  %26 = load <4 x i8>, ptr %add.ptr9.3, align 1, !dbg !517
  %27 = zext <4 x i8> %26 to <4 x i16>, !dbg !517
  %28 = sub nsw <4 x i16> %25, %27, !dbg !517
  %29 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %28, i1 false), !dbg !517
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 4, !510, !DIExpression(), !516)
  %add.ptr.4 = getelementptr inbounds i8, ptr %add.ptr.3, i64 %idx.ext, !dbg !520
    #dbg_value(ptr %add.ptr.4, !503, !DIExpression(), !514)
  %add.ptr9.4 = getelementptr inbounds i8, ptr %add.ptr9.3, i64 %idx.ext8, !dbg !520
    #dbg_value(ptr %add.ptr9.4, !505, !DIExpression(), !514)
    #dbg_value(i32 5, !508, !DIExpression(), !515)
    #dbg_value(i32 0, !510, !DIExpression(), !516)
    #dbg_value(i64 0, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 1, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 2, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 3, !510, !DIExpression(), !516)
  %30 = load <4 x i8>, ptr %add.ptr.4, align 1, !dbg !517
  %31 = zext <4 x i8> %30 to <4 x i16>, !dbg !517
  %32 = load <4 x i8>, ptr %add.ptr9.4, align 1, !dbg !517
  %33 = zext <4 x i8> %32 to <4 x i16>, !dbg !517
  %34 = sub nsw <4 x i16> %31, %33, !dbg !517
  %35 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %34, i1 false), !dbg !517
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 4, !510, !DIExpression(), !516)
  %add.ptr.5 = getelementptr inbounds i8, ptr %add.ptr.4, i64 %idx.ext, !dbg !520
    #dbg_value(ptr %add.ptr.5, !503, !DIExpression(), !514)
  %add.ptr9.5 = getelementptr inbounds i8, ptr %add.ptr9.4, i64 %idx.ext8, !dbg !520
    #dbg_value(ptr %add.ptr9.5, !505, !DIExpression(), !514)
    #dbg_value(i32 6, !508, !DIExpression(), !515)
    #dbg_value(i32 0, !510, !DIExpression(), !516)
    #dbg_value(i64 0, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 1, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 2, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 3, !510, !DIExpression(), !516)
  %36 = load <4 x i8>, ptr %add.ptr.5, align 1, !dbg !517
  %37 = zext <4 x i8> %36 to <4 x i16>, !dbg !517
  %38 = load <4 x i8>, ptr %add.ptr9.5, align 1, !dbg !517
  %39 = zext <4 x i8> %38 to <4 x i16>, !dbg !517
  %40 = sub nsw <4 x i16> %37, %39, !dbg !517
  %41 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %40, i1 false), !dbg !517
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 4, !510, !DIExpression(), !516)
  %add.ptr.6 = getelementptr inbounds i8, ptr %add.ptr.5, i64 %idx.ext, !dbg !520
    #dbg_value(ptr %add.ptr.6, !503, !DIExpression(), !514)
  %add.ptr9.6 = getelementptr inbounds i8, ptr %add.ptr9.5, i64 %idx.ext8, !dbg !520
    #dbg_value(ptr %add.ptr9.6, !505, !DIExpression(), !514)
    #dbg_value(i32 7, !508, !DIExpression(), !515)
    #dbg_value(i32 0, !510, !DIExpression(), !516)
    #dbg_value(i64 0, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 1, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 2, !510, !DIExpression(), !516)
    #dbg_value(i32 poison, !507, !DIExpression(), !514)
    #dbg_value(i64 3, !510, !DIExpression(), !516)
  %42 = load <4 x i8>, ptr %add.ptr.6, align 1, !dbg !517
  %43 = zext <4 x i8> %42 to <4 x i16>, !dbg !517
  %44 = load <4 x i8>, ptr %add.ptr9.6, align 1, !dbg !517
  %45 = zext <4 x i8> %44 to <4 x i16>, !dbg !517
  %46 = sub nsw <4 x i16> %43, %45, !dbg !517
  %47 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %46, i1 false), !dbg !517
  %48 = zext <4 x i16> %5 to <4 x i32>, !dbg !517
  %49 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %48), !dbg !517
  %50 = zext <4 x i16> %11 to <4 x i32>, !dbg !517
  %51 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %50), !dbg !517
  %op.rdx = add i32 %49, %51, !dbg !517
  %52 = zext <4 x i16> %17 to <4 x i32>, !dbg !517
  %53 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %52), !dbg !517
  %op.rdx39 = add i32 %op.rdx, %53, !dbg !517
  %54 = zext <4 x i16> %23 to <4 x i32>, !dbg !517
  %55 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %54), !dbg !517
  %op.rdx40 = add i32 %op.rdx39, %55, !dbg !517
  %56 = zext <4 x i16> %29 to <4 x i32>, !dbg !517
  %57 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %56), !dbg !517
  %op.rdx41 = add i32 %op.rdx40, %57, !dbg !517
  %58 = zext <4 x i16> %35 to <4 x i32>, !dbg !517
  %59 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %58), !dbg !517
  %op.rdx42 = add i32 %op.rdx41, %59, !dbg !517
  %60 = zext <4 x i16> %41 to <4 x i32>, !dbg !517
  %61 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %60), !dbg !517
  %op.rdx43 = add i32 %op.rdx42, %61, !dbg !517
  %62 = zext <4 x i16> %47 to <4 x i32>, !dbg !517
  %63 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %62), !dbg !517
  %op.rdx44 = add i32 %op.rdx43, %63, !dbg !517
    #dbg_value(i32 %op.rdx44, !507, !DIExpression(), !514)
    #dbg_value(i64 4, !510, !DIExpression(), !516)
    #dbg_value(!DIArgList(ptr %add.ptr.6, i64 %idx.ext), !503, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !514)
    #dbg_value(!DIArgList(ptr %add.ptr9.6, i64 %idx.ext8), !505, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !514)
    #dbg_value(i32 8, !508, !DIExpression(), !515)
  ret i32 %op.rdx44, !dbg !521
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define internal i32 @x264_pixel_sad_4x4(ptr nocapture noundef readonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2) #5 !dbg !522 {
entry:
    #dbg_value(ptr %pix1, !524, !DIExpression(), !535)
    #dbg_value(i32 %i_stride_pix1, !525, !DIExpression(), !535)
    #dbg_value(ptr %pix2, !526, !DIExpression(), !535)
    #dbg_value(i32 %i_stride_pix2, !527, !DIExpression(), !535)
    #dbg_value(i32 0, !528, !DIExpression(), !535)
    #dbg_value(i32 0, !529, !DIExpression(), !536)
  %idx.ext = sext i32 %i_stride_pix1 to i64
  %idx.ext8 = sext i32 %i_stride_pix2 to i64
    #dbg_value(i32 0, !529, !DIExpression(), !536)
    #dbg_value(i32 0, !528, !DIExpression(), !535)
    #dbg_value(ptr %pix1, !524, !DIExpression(), !535)
    #dbg_value(ptr %pix2, !526, !DIExpression(), !535)
    #dbg_value(i32 0, !529, !DIExpression(), !536)
    #dbg_value(ptr %pix1, !524, !DIExpression(), !535)
    #dbg_value(ptr %pix2, !526, !DIExpression(), !535)
    #dbg_value(i32 0, !531, !DIExpression(), !537)
    #dbg_value(i32 0, !528, !DIExpression(), !535)
    #dbg_value(i64 0, !531, !DIExpression(), !537)
    #dbg_value(i32 0, !528, !DIExpression(), !535)
    #dbg_value(i32 poison, !528, !DIExpression(), !535)
    #dbg_value(i64 1, !531, !DIExpression(), !537)
    #dbg_value(i32 poison, !528, !DIExpression(), !535)
    #dbg_value(i64 2, !531, !DIExpression(), !537)
    #dbg_value(i32 poison, !528, !DIExpression(), !535)
    #dbg_value(i64 3, !531, !DIExpression(), !537)
  %0 = load <4 x i8>, ptr %pix1, align 1, !dbg !538
  %1 = zext <4 x i8> %0 to <4 x i16>, !dbg !538
  %2 = load <4 x i8>, ptr %pix2, align 1, !dbg !538
  %3 = zext <4 x i8> %2 to <4 x i16>, !dbg !538
  %4 = sub nsw <4 x i16> %1, %3, !dbg !538
  %5 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %4, i1 false), !dbg !538
    #dbg_value(i32 poison, !528, !DIExpression(), !535)
    #dbg_value(i64 4, !531, !DIExpression(), !537)
  %add.ptr = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext, !dbg !541
    #dbg_value(ptr %add.ptr, !524, !DIExpression(), !535)
  %add.ptr9 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext8, !dbg !541
    #dbg_value(ptr %add.ptr9, !526, !DIExpression(), !535)
    #dbg_value(i32 1, !529, !DIExpression(), !536)
    #dbg_value(i32 0, !531, !DIExpression(), !537)
    #dbg_value(i64 0, !531, !DIExpression(), !537)
    #dbg_value(i32 poison, !528, !DIExpression(), !535)
    #dbg_value(i32 poison, !528, !DIExpression(), !535)
    #dbg_value(i64 1, !531, !DIExpression(), !537)
    #dbg_value(i32 poison, !528, !DIExpression(), !535)
    #dbg_value(i64 2, !531, !DIExpression(), !537)
    #dbg_value(i32 poison, !528, !DIExpression(), !535)
    #dbg_value(i64 3, !531, !DIExpression(), !537)
  %6 = load <4 x i8>, ptr %add.ptr, align 1, !dbg !538
  %7 = zext <4 x i8> %6 to <4 x i16>, !dbg !538
  %8 = load <4 x i8>, ptr %add.ptr9, align 1, !dbg !538
  %9 = zext <4 x i8> %8 to <4 x i16>, !dbg !538
  %10 = sub nsw <4 x i16> %7, %9, !dbg !538
  %11 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %10, i1 false), !dbg !538
    #dbg_value(i32 poison, !528, !DIExpression(), !535)
    #dbg_value(i64 4, !531, !DIExpression(), !537)
  %add.ptr.1 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.ext, !dbg !541
    #dbg_value(ptr %add.ptr.1, !524, !DIExpression(), !535)
  %add.ptr9.1 = getelementptr inbounds i8, ptr %add.ptr9, i64 %idx.ext8, !dbg !541
    #dbg_value(ptr %add.ptr9.1, !526, !DIExpression(), !535)
    #dbg_value(i32 2, !529, !DIExpression(), !536)
    #dbg_value(i32 0, !531, !DIExpression(), !537)
    #dbg_value(i64 0, !531, !DIExpression(), !537)
    #dbg_value(i32 poison, !528, !DIExpression(), !535)
    #dbg_value(i32 poison, !528, !DIExpression(), !535)
    #dbg_value(i64 1, !531, !DIExpression(), !537)
    #dbg_value(i32 poison, !528, !DIExpression(), !535)
    #dbg_value(i64 2, !531, !DIExpression(), !537)
    #dbg_value(i32 poison, !528, !DIExpression(), !535)
    #dbg_value(i64 3, !531, !DIExpression(), !537)
  %12 = load <4 x i8>, ptr %add.ptr.1, align 1, !dbg !538
  %13 = zext <4 x i8> %12 to <4 x i16>, !dbg !538
  %14 = load <4 x i8>, ptr %add.ptr9.1, align 1, !dbg !538
  %15 = zext <4 x i8> %14 to <4 x i16>, !dbg !538
  %16 = sub nsw <4 x i16> %13, %15, !dbg !538
  %17 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %16, i1 false), !dbg !538
    #dbg_value(i32 poison, !528, !DIExpression(), !535)
    #dbg_value(i64 4, !531, !DIExpression(), !537)
  %add.ptr.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 %idx.ext, !dbg !541
    #dbg_value(ptr %add.ptr.2, !524, !DIExpression(), !535)
  %add.ptr9.2 = getelementptr inbounds i8, ptr %add.ptr9.1, i64 %idx.ext8, !dbg !541
    #dbg_value(ptr %add.ptr9.2, !526, !DIExpression(), !535)
    #dbg_value(i32 3, !529, !DIExpression(), !536)
    #dbg_value(i32 0, !531, !DIExpression(), !537)
    #dbg_value(i64 0, !531, !DIExpression(), !537)
    #dbg_value(i32 poison, !528, !DIExpression(), !535)
    #dbg_value(i32 poison, !528, !DIExpression(), !535)
    #dbg_value(i64 1, !531, !DIExpression(), !537)
    #dbg_value(i32 poison, !528, !DIExpression(), !535)
    #dbg_value(i64 2, !531, !DIExpression(), !537)
    #dbg_value(i32 poison, !528, !DIExpression(), !535)
    #dbg_value(i64 3, !531, !DIExpression(), !537)
  %18 = load <4 x i8>, ptr %add.ptr.2, align 1, !dbg !538
  %19 = zext <4 x i8> %18 to <4 x i16>, !dbg !538
  %20 = load <4 x i8>, ptr %add.ptr9.2, align 1, !dbg !538
  %21 = zext <4 x i8> %20 to <4 x i16>, !dbg !538
  %22 = sub nsw <4 x i16> %19, %21, !dbg !538
  %23 = tail call <4 x i16> @llvm.abs.v4i16(<4 x i16> %22, i1 false), !dbg !538
  %24 = zext <4 x i16> %5 to <4 x i32>, !dbg !538
  %25 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %24), !dbg !538
  %26 = zext <4 x i16> %11 to <4 x i32>, !dbg !538
  %27 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %26), !dbg !538
  %op.rdx = add i32 %25, %27, !dbg !538
  %28 = zext <4 x i16> %17 to <4 x i32>, !dbg !538
  %29 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %28), !dbg !538
  %op.rdx39 = add i32 %op.rdx, %29, !dbg !538
  %30 = zext <4 x i16> %23 to <4 x i32>, !dbg !538
  %31 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %30), !dbg !538
  %op.rdx40 = add i32 %op.rdx39, %31, !dbg !538
    #dbg_value(i32 %op.rdx40, !528, !DIExpression(), !535)
    #dbg_value(i64 4, !531, !DIExpression(), !537)
    #dbg_value(!DIArgList(ptr %add.ptr.2, i64 %idx.ext), !524, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !535)
    #dbg_value(!DIArgList(ptr %add.ptr9.2, i64 %idx.ext8), !526, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !535)
    #dbg_value(i32 4, !529, !DIExpression(), !536)
  ret i32 %op.rdx40, !dbg !542
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @x264_pixel_sad_x3_16x16(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #7 !dbg !543 {
entry:
    #dbg_value(ptr %fenc, !545, !DIExpression(), !551)
    #dbg_value(ptr %pix0, !546, !DIExpression(), !551)
    #dbg_value(ptr %pix1, !547, !DIExpression(), !551)
    #dbg_value(ptr %pix2, !548, !DIExpression(), !551)
    #dbg_value(i32 %i_stride, !549, !DIExpression(), !551)
    #dbg_value(ptr %scores, !550, !DIExpression(), !551)
  %call = tail call i32 @x264_pixel_sad_16x16(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix0, i32 noundef %i_stride), !dbg !552
  store i32 %call, ptr %scores, align 4, !dbg !552
  %call1 = tail call i32 @x264_pixel_sad_16x16(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix1, i32 noundef %i_stride), !dbg !552
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !552
  store i32 %call1, ptr %arrayidx2, align 4, !dbg !552
  %call3 = tail call i32 @x264_pixel_sad_16x16(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix2, i32 noundef %i_stride), !dbg !552
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !552
  store i32 %call3, ptr %arrayidx4, align 4, !dbg !552
  ret void, !dbg !552
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @x264_pixel_sad_x3_16x8(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #7 !dbg !553 {
entry:
    #dbg_value(ptr %fenc, !555, !DIExpression(), !561)
    #dbg_value(ptr %pix0, !556, !DIExpression(), !561)
    #dbg_value(ptr %pix1, !557, !DIExpression(), !561)
    #dbg_value(ptr %pix2, !558, !DIExpression(), !561)
    #dbg_value(i32 %i_stride, !559, !DIExpression(), !561)
    #dbg_value(ptr %scores, !560, !DIExpression(), !561)
  %call = tail call i32 @x264_pixel_sad_16x8(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix0, i32 noundef %i_stride), !dbg !562
  store i32 %call, ptr %scores, align 4, !dbg !562
  %call1 = tail call i32 @x264_pixel_sad_16x8(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix1, i32 noundef %i_stride), !dbg !562
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !562
  store i32 %call1, ptr %arrayidx2, align 4, !dbg !562
  %call3 = tail call i32 @x264_pixel_sad_16x8(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix2, i32 noundef %i_stride), !dbg !562
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !562
  store i32 %call3, ptr %arrayidx4, align 4, !dbg !562
  ret void, !dbg !562
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @x264_pixel_sad_x3_8x16(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #7 !dbg !563 {
entry:
    #dbg_value(ptr %fenc, !565, !DIExpression(), !571)
    #dbg_value(ptr %pix0, !566, !DIExpression(), !571)
    #dbg_value(ptr %pix1, !567, !DIExpression(), !571)
    #dbg_value(ptr %pix2, !568, !DIExpression(), !571)
    #dbg_value(i32 %i_stride, !569, !DIExpression(), !571)
    #dbg_value(ptr %scores, !570, !DIExpression(), !571)
    #dbg_value(ptr %fenc, !440, !DIExpression(), !572)
    #dbg_value(i32 16, !441, !DIExpression(), !572)
    #dbg_value(ptr %pix0, !442, !DIExpression(), !572)
    #dbg_value(i32 %i_stride, !443, !DIExpression(), !572)
    #dbg_value(i32 0, !444, !DIExpression(), !572)
    #dbg_value(i32 0, !445, !DIExpression(), !574)
  %idx.ext8.i = sext i32 %i_stride to i64
    #dbg_value(i32 0, !445, !DIExpression(), !574)
    #dbg_value(i32 0, !444, !DIExpression(), !572)
    #dbg_value(ptr %fenc, !440, !DIExpression(), !572)
    #dbg_value(ptr %pix0, !442, !DIExpression(), !572)
    #dbg_value(i32 0, !445, !DIExpression(), !574)
    #dbg_value(ptr %fenc, !440, !DIExpression(), !572)
    #dbg_value(ptr %pix0, !442, !DIExpression(), !572)
    #dbg_value(i32 poison, !444, !DIExpression(), !572)
    #dbg_value(i64 7, !447, !DIExpression(), !575)
  %0 = load <8 x i8>, ptr %fenc, align 1, !dbg !576
  %1 = zext <8 x i8> %0 to <8 x i16>, !dbg !576
  %2 = load <8 x i8>, ptr %pix0, align 1, !dbg !576
  %3 = zext <8 x i8> %2 to <8 x i16>, !dbg !576
  %4 = sub nsw <8 x i16> %1, %3, !dbg !576
  %5 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %4, i1 false), !dbg !576
  %6 = zext <8 x i16> %5 to <8 x i32>, !dbg !576
  %7 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %6), !dbg !576
    #dbg_value(i32 %7, !444, !DIExpression(), !572)
    #dbg_value(i64 8, !447, !DIExpression(), !575)
  %add.ptr.i = getelementptr inbounds i8, ptr %fenc, i64 16, !dbg !577
    #dbg_value(ptr %add.ptr.i, !440, !DIExpression(), !572)
  %add.ptr9.i = getelementptr inbounds i8, ptr %pix0, i64 %idx.ext8.i, !dbg !577
    #dbg_value(ptr %add.ptr9.i, !442, !DIExpression(), !572)
    #dbg_value(i32 1, !445, !DIExpression(), !574)
    #dbg_value(i32 poison, !444, !DIExpression(), !572)
    #dbg_value(i64 7, !447, !DIExpression(), !575)
  %8 = load <8 x i8>, ptr %add.ptr.i, align 1, !dbg !576
  %9 = zext <8 x i8> %8 to <8 x i16>, !dbg !576
  %10 = load <8 x i8>, ptr %add.ptr9.i, align 1, !dbg !576
  %11 = zext <8 x i8> %10 to <8 x i16>, !dbg !576
  %12 = sub nsw <8 x i16> %9, %11, !dbg !576
  %13 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %12, i1 false), !dbg !576
  %14 = zext <8 x i16> %13 to <8 x i32>, !dbg !576
  %15 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %14), !dbg !576
  %op.rdx126.1 = add i32 %15, %7, !dbg !576
    #dbg_value(i32 %op.rdx126.1, !444, !DIExpression(), !572)
    #dbg_value(i64 8, !447, !DIExpression(), !575)
  %add.ptr.i.1 = getelementptr inbounds i8, ptr %fenc, i64 32, !dbg !577
    #dbg_value(ptr %add.ptr.i.1, !440, !DIExpression(), !572)
  %add.ptr9.i.1 = getelementptr inbounds i8, ptr %add.ptr9.i, i64 %idx.ext8.i, !dbg !577
    #dbg_value(ptr %add.ptr9.i.1, !442, !DIExpression(), !572)
    #dbg_value(i32 2, !445, !DIExpression(), !574)
    #dbg_value(i32 poison, !444, !DIExpression(), !572)
    #dbg_value(i64 7, !447, !DIExpression(), !575)
  %16 = load <8 x i8>, ptr %add.ptr.i.1, align 1, !dbg !576
  %17 = zext <8 x i8> %16 to <8 x i16>, !dbg !576
  %18 = load <8 x i8>, ptr %add.ptr9.i.1, align 1, !dbg !576
  %19 = zext <8 x i8> %18 to <8 x i16>, !dbg !576
  %20 = sub nsw <8 x i16> %17, %19, !dbg !576
  %21 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %20, i1 false), !dbg !576
  %22 = zext <8 x i16> %21 to <8 x i32>, !dbg !576
  %23 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %22), !dbg !576
  %op.rdx126.2 = add i32 %23, %op.rdx126.1, !dbg !576
    #dbg_value(i32 %op.rdx126.2, !444, !DIExpression(), !572)
    #dbg_value(i64 8, !447, !DIExpression(), !575)
  %add.ptr.i.2 = getelementptr inbounds i8, ptr %fenc, i64 48, !dbg !577
    #dbg_value(ptr %add.ptr.i.2, !440, !DIExpression(), !572)
  %add.ptr9.i.2 = getelementptr inbounds i8, ptr %add.ptr9.i.1, i64 %idx.ext8.i, !dbg !577
    #dbg_value(ptr %add.ptr9.i.2, !442, !DIExpression(), !572)
    #dbg_value(i32 3, !445, !DIExpression(), !574)
    #dbg_value(i32 poison, !444, !DIExpression(), !572)
    #dbg_value(i64 7, !447, !DIExpression(), !575)
  %24 = load <8 x i8>, ptr %add.ptr.i.2, align 1, !dbg !576
  %25 = zext <8 x i8> %24 to <8 x i16>, !dbg !576
  %26 = load <8 x i8>, ptr %add.ptr9.i.2, align 1, !dbg !576
  %27 = zext <8 x i8> %26 to <8 x i16>, !dbg !576
  %28 = sub nsw <8 x i16> %25, %27, !dbg !576
  %29 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %28, i1 false), !dbg !576
  %30 = zext <8 x i16> %29 to <8 x i32>, !dbg !576
  %31 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %30), !dbg !576
  %op.rdx126.3 = add i32 %31, %op.rdx126.2, !dbg !576
    #dbg_value(i32 %op.rdx126.3, !444, !DIExpression(), !572)
    #dbg_value(i64 8, !447, !DIExpression(), !575)
  %add.ptr.i.3 = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !577
    #dbg_value(ptr %add.ptr.i.3, !440, !DIExpression(), !572)
  %add.ptr9.i.3 = getelementptr inbounds i8, ptr %add.ptr9.i.2, i64 %idx.ext8.i, !dbg !577
    #dbg_value(ptr %add.ptr9.i.3, !442, !DIExpression(), !572)
    #dbg_value(i32 4, !445, !DIExpression(), !574)
    #dbg_value(i32 poison, !444, !DIExpression(), !572)
    #dbg_value(i64 7, !447, !DIExpression(), !575)
  %32 = load <8 x i8>, ptr %add.ptr.i.3, align 1, !dbg !576
  %33 = zext <8 x i8> %32 to <8 x i16>, !dbg !576
  %34 = load <8 x i8>, ptr %add.ptr9.i.3, align 1, !dbg !576
  %35 = zext <8 x i8> %34 to <8 x i16>, !dbg !576
  %36 = sub nsw <8 x i16> %33, %35, !dbg !576
  %37 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %36, i1 false), !dbg !576
  %38 = zext <8 x i16> %37 to <8 x i32>, !dbg !576
  %39 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %38), !dbg !576
  %op.rdx126.4 = add i32 %39, %op.rdx126.3, !dbg !576
    #dbg_value(i32 %op.rdx126.4, !444, !DIExpression(), !572)
    #dbg_value(i64 8, !447, !DIExpression(), !575)
  %add.ptr.i.4 = getelementptr inbounds i8, ptr %fenc, i64 80, !dbg !577
    #dbg_value(ptr %add.ptr.i.4, !440, !DIExpression(), !572)
  %add.ptr9.i.4 = getelementptr inbounds i8, ptr %add.ptr9.i.3, i64 %idx.ext8.i, !dbg !577
    #dbg_value(ptr %add.ptr9.i.4, !442, !DIExpression(), !572)
    #dbg_value(i32 5, !445, !DIExpression(), !574)
    #dbg_value(i32 poison, !444, !DIExpression(), !572)
    #dbg_value(i64 7, !447, !DIExpression(), !575)
  %40 = load <8 x i8>, ptr %add.ptr.i.4, align 1, !dbg !576
  %41 = zext <8 x i8> %40 to <8 x i16>, !dbg !576
  %42 = load <8 x i8>, ptr %add.ptr9.i.4, align 1, !dbg !576
  %43 = zext <8 x i8> %42 to <8 x i16>, !dbg !576
  %44 = sub nsw <8 x i16> %41, %43, !dbg !576
  %45 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %44, i1 false), !dbg !576
  %46 = zext <8 x i16> %45 to <8 x i32>, !dbg !576
  %47 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %46), !dbg !576
  %op.rdx126.5 = add i32 %47, %op.rdx126.4, !dbg !576
    #dbg_value(i32 %op.rdx126.5, !444, !DIExpression(), !572)
    #dbg_value(i64 8, !447, !DIExpression(), !575)
  %add.ptr.i.5 = getelementptr inbounds i8, ptr %fenc, i64 96, !dbg !577
    #dbg_value(ptr %add.ptr.i.5, !440, !DIExpression(), !572)
  %add.ptr9.i.5 = getelementptr inbounds i8, ptr %add.ptr9.i.4, i64 %idx.ext8.i, !dbg !577
    #dbg_value(ptr %add.ptr9.i.5, !442, !DIExpression(), !572)
    #dbg_value(i32 6, !445, !DIExpression(), !574)
    #dbg_value(i32 poison, !444, !DIExpression(), !572)
    #dbg_value(i64 7, !447, !DIExpression(), !575)
  %48 = load <8 x i8>, ptr %add.ptr.i.5, align 1, !dbg !576
  %49 = zext <8 x i8> %48 to <8 x i16>, !dbg !576
  %50 = load <8 x i8>, ptr %add.ptr9.i.5, align 1, !dbg !576
  %51 = zext <8 x i8> %50 to <8 x i16>, !dbg !576
  %52 = sub nsw <8 x i16> %49, %51, !dbg !576
  %53 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %52, i1 false), !dbg !576
  %54 = zext <8 x i16> %53 to <8 x i32>, !dbg !576
  %55 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %54), !dbg !576
  %op.rdx126.6 = add i32 %55, %op.rdx126.5, !dbg !576
    #dbg_value(i32 %op.rdx126.6, !444, !DIExpression(), !572)
    #dbg_value(i64 8, !447, !DIExpression(), !575)
  %add.ptr.i.6 = getelementptr inbounds i8, ptr %fenc, i64 112, !dbg !577
    #dbg_value(ptr %add.ptr.i.6, !440, !DIExpression(), !572)
  %add.ptr9.i.6 = getelementptr inbounds i8, ptr %add.ptr9.i.5, i64 %idx.ext8.i, !dbg !577
    #dbg_value(ptr %add.ptr9.i.6, !442, !DIExpression(), !572)
    #dbg_value(i32 7, !445, !DIExpression(), !574)
    #dbg_value(i32 poison, !444, !DIExpression(), !572)
    #dbg_value(i64 7, !447, !DIExpression(), !575)
  %56 = load <8 x i8>, ptr %add.ptr.i.6, align 1, !dbg !576
  %57 = zext <8 x i8> %56 to <8 x i16>, !dbg !576
  %58 = load <8 x i8>, ptr %add.ptr9.i.6, align 1, !dbg !576
  %59 = zext <8 x i8> %58 to <8 x i16>, !dbg !576
  %60 = sub nsw <8 x i16> %57, %59, !dbg !576
  %61 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %60, i1 false), !dbg !576
  %62 = zext <8 x i16> %61 to <8 x i32>, !dbg !576
  %63 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %62), !dbg !576
  %op.rdx126.7 = add i32 %63, %op.rdx126.6, !dbg !576
    #dbg_value(i32 %op.rdx126.7, !444, !DIExpression(), !572)
    #dbg_value(i64 8, !447, !DIExpression(), !575)
  %add.ptr.i.7 = getelementptr inbounds i8, ptr %fenc, i64 128, !dbg !577
    #dbg_value(ptr %add.ptr.i.7, !440, !DIExpression(), !572)
  %add.ptr9.i.7 = getelementptr inbounds i8, ptr %add.ptr9.i.6, i64 %idx.ext8.i, !dbg !577
    #dbg_value(ptr %add.ptr9.i.7, !442, !DIExpression(), !572)
    #dbg_value(i32 8, !445, !DIExpression(), !574)
    #dbg_value(i32 poison, !444, !DIExpression(), !572)
    #dbg_value(i64 7, !447, !DIExpression(), !575)
  %64 = load <8 x i8>, ptr %add.ptr.i.7, align 1, !dbg !576
  %65 = zext <8 x i8> %64 to <8 x i16>, !dbg !576
  %66 = load <8 x i8>, ptr %add.ptr9.i.7, align 1, !dbg !576
  %67 = zext <8 x i8> %66 to <8 x i16>, !dbg !576
  %68 = sub nsw <8 x i16> %65, %67, !dbg !576
  %69 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %68, i1 false), !dbg !576
  %70 = zext <8 x i16> %69 to <8 x i32>, !dbg !576
  %71 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %70), !dbg !576
  %op.rdx126.8 = add i32 %71, %op.rdx126.7, !dbg !576
    #dbg_value(i32 %op.rdx126.8, !444, !DIExpression(), !572)
    #dbg_value(i64 8, !447, !DIExpression(), !575)
  %add.ptr.i.8 = getelementptr inbounds i8, ptr %fenc, i64 144, !dbg !577
    #dbg_value(ptr %add.ptr.i.8, !440, !DIExpression(), !572)
  %add.ptr9.i.8 = getelementptr inbounds i8, ptr %add.ptr9.i.7, i64 %idx.ext8.i, !dbg !577
    #dbg_value(ptr %add.ptr9.i.8, !442, !DIExpression(), !572)
    #dbg_value(i32 9, !445, !DIExpression(), !574)
    #dbg_value(i32 poison, !444, !DIExpression(), !572)
    #dbg_value(i64 7, !447, !DIExpression(), !575)
  %72 = load <8 x i8>, ptr %add.ptr.i.8, align 1, !dbg !576
  %73 = zext <8 x i8> %72 to <8 x i16>, !dbg !576
  %74 = load <8 x i8>, ptr %add.ptr9.i.8, align 1, !dbg !576
  %75 = zext <8 x i8> %74 to <8 x i16>, !dbg !576
  %76 = sub nsw <8 x i16> %73, %75, !dbg !576
  %77 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %76, i1 false), !dbg !576
  %78 = zext <8 x i16> %77 to <8 x i32>, !dbg !576
  %79 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %78), !dbg !576
  %op.rdx126.9 = add i32 %79, %op.rdx126.8, !dbg !576
    #dbg_value(i32 %op.rdx126.9, !444, !DIExpression(), !572)
    #dbg_value(i64 8, !447, !DIExpression(), !575)
  %add.ptr.i.9 = getelementptr inbounds i8, ptr %fenc, i64 160, !dbg !577
    #dbg_value(ptr %add.ptr.i.9, !440, !DIExpression(), !572)
  %add.ptr9.i.9 = getelementptr inbounds i8, ptr %add.ptr9.i.8, i64 %idx.ext8.i, !dbg !577
    #dbg_value(ptr %add.ptr9.i.9, !442, !DIExpression(), !572)
    #dbg_value(i32 10, !445, !DIExpression(), !574)
    #dbg_value(i32 poison, !444, !DIExpression(), !572)
    #dbg_value(i64 7, !447, !DIExpression(), !575)
  %80 = load <8 x i8>, ptr %add.ptr.i.9, align 1, !dbg !576
  %81 = zext <8 x i8> %80 to <8 x i16>, !dbg !576
  %82 = load <8 x i8>, ptr %add.ptr9.i.9, align 1, !dbg !576
  %83 = zext <8 x i8> %82 to <8 x i16>, !dbg !576
  %84 = sub nsw <8 x i16> %81, %83, !dbg !576
  %85 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %84, i1 false), !dbg !576
  %86 = zext <8 x i16> %85 to <8 x i32>, !dbg !576
  %87 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %86), !dbg !576
  %op.rdx126.10 = add i32 %87, %op.rdx126.9, !dbg !576
    #dbg_value(i32 %op.rdx126.10, !444, !DIExpression(), !572)
    #dbg_value(i64 8, !447, !DIExpression(), !575)
  %add.ptr.i.10 = getelementptr inbounds i8, ptr %fenc, i64 176, !dbg !577
    #dbg_value(ptr %add.ptr.i.10, !440, !DIExpression(), !572)
  %add.ptr9.i.10 = getelementptr inbounds i8, ptr %add.ptr9.i.9, i64 %idx.ext8.i, !dbg !577
    #dbg_value(ptr %add.ptr9.i.10, !442, !DIExpression(), !572)
    #dbg_value(i32 11, !445, !DIExpression(), !574)
    #dbg_value(i32 poison, !444, !DIExpression(), !572)
    #dbg_value(i64 7, !447, !DIExpression(), !575)
  %88 = load <8 x i8>, ptr %add.ptr.i.10, align 1, !dbg !576
  %89 = zext <8 x i8> %88 to <8 x i16>, !dbg !576
  %90 = load <8 x i8>, ptr %add.ptr9.i.10, align 1, !dbg !576
  %91 = zext <8 x i8> %90 to <8 x i16>, !dbg !576
  %92 = sub nsw <8 x i16> %89, %91, !dbg !576
  %93 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %92, i1 false), !dbg !576
  %94 = zext <8 x i16> %93 to <8 x i32>, !dbg !576
  %95 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %94), !dbg !576
  %op.rdx126.11 = add i32 %95, %op.rdx126.10, !dbg !576
    #dbg_value(i32 %op.rdx126.11, !444, !DIExpression(), !572)
    #dbg_value(i64 8, !447, !DIExpression(), !575)
  %add.ptr.i.11 = getelementptr inbounds i8, ptr %fenc, i64 192, !dbg !577
    #dbg_value(ptr %add.ptr.i.11, !440, !DIExpression(), !572)
  %add.ptr9.i.11 = getelementptr inbounds i8, ptr %add.ptr9.i.10, i64 %idx.ext8.i, !dbg !577
    #dbg_value(ptr %add.ptr9.i.11, !442, !DIExpression(), !572)
    #dbg_value(i32 12, !445, !DIExpression(), !574)
    #dbg_value(i32 poison, !444, !DIExpression(), !572)
    #dbg_value(i64 7, !447, !DIExpression(), !575)
  %96 = load <8 x i8>, ptr %add.ptr.i.11, align 1, !dbg !576
  %97 = zext <8 x i8> %96 to <8 x i16>, !dbg !576
  %98 = load <8 x i8>, ptr %add.ptr9.i.11, align 1, !dbg !576
  %99 = zext <8 x i8> %98 to <8 x i16>, !dbg !576
  %100 = sub nsw <8 x i16> %97, %99, !dbg !576
  %101 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %100, i1 false), !dbg !576
  %102 = zext <8 x i16> %101 to <8 x i32>, !dbg !576
  %103 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %102), !dbg !576
  %op.rdx126.12 = add i32 %103, %op.rdx126.11, !dbg !576
    #dbg_value(i32 %op.rdx126.12, !444, !DIExpression(), !572)
    #dbg_value(i64 8, !447, !DIExpression(), !575)
  %add.ptr.i.12 = getelementptr inbounds i8, ptr %fenc, i64 208, !dbg !577
    #dbg_value(ptr %add.ptr.i.12, !440, !DIExpression(), !572)
  %add.ptr9.i.12 = getelementptr inbounds i8, ptr %add.ptr9.i.11, i64 %idx.ext8.i, !dbg !577
    #dbg_value(ptr %add.ptr9.i.12, !442, !DIExpression(), !572)
    #dbg_value(i32 13, !445, !DIExpression(), !574)
    #dbg_value(i32 poison, !444, !DIExpression(), !572)
    #dbg_value(i64 7, !447, !DIExpression(), !575)
  %104 = load <8 x i8>, ptr %add.ptr.i.12, align 1, !dbg !576
  %105 = zext <8 x i8> %104 to <8 x i16>, !dbg !576
  %106 = load <8 x i8>, ptr %add.ptr9.i.12, align 1, !dbg !576
  %107 = zext <8 x i8> %106 to <8 x i16>, !dbg !576
  %108 = sub nsw <8 x i16> %105, %107, !dbg !576
  %109 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %108, i1 false), !dbg !576
  %110 = zext <8 x i16> %109 to <8 x i32>, !dbg !576
  %111 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %110), !dbg !576
  %op.rdx126.13 = add i32 %111, %op.rdx126.12, !dbg !576
    #dbg_value(i32 %op.rdx126.13, !444, !DIExpression(), !572)
    #dbg_value(i64 8, !447, !DIExpression(), !575)
  %add.ptr.i.13 = getelementptr inbounds i8, ptr %fenc, i64 224, !dbg !577
    #dbg_value(ptr %add.ptr.i.13, !440, !DIExpression(), !572)
  %add.ptr9.i.13 = getelementptr inbounds i8, ptr %add.ptr9.i.12, i64 %idx.ext8.i, !dbg !577
    #dbg_value(ptr %add.ptr9.i.13, !442, !DIExpression(), !572)
    #dbg_value(i32 14, !445, !DIExpression(), !574)
    #dbg_value(i32 poison, !444, !DIExpression(), !572)
    #dbg_value(i64 7, !447, !DIExpression(), !575)
  %112 = load <8 x i8>, ptr %add.ptr.i.13, align 1, !dbg !576
  %113 = zext <8 x i8> %112 to <8 x i16>, !dbg !576
  %114 = load <8 x i8>, ptr %add.ptr9.i.13, align 1, !dbg !576
  %115 = zext <8 x i8> %114 to <8 x i16>, !dbg !576
  %116 = sub nsw <8 x i16> %113, %115, !dbg !576
  %117 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %116, i1 false), !dbg !576
  %118 = zext <8 x i16> %117 to <8 x i32>, !dbg !576
  %119 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %118), !dbg !576
  %op.rdx126.14 = add i32 %119, %op.rdx126.13, !dbg !576
    #dbg_value(i32 %op.rdx126.14, !444, !DIExpression(), !572)
    #dbg_value(i64 8, !447, !DIExpression(), !575)
  %add.ptr.i.14 = getelementptr inbounds i8, ptr %fenc, i64 240, !dbg !577
    #dbg_value(ptr %add.ptr.i.14, !440, !DIExpression(), !572)
  %add.ptr9.i.14 = getelementptr inbounds i8, ptr %add.ptr9.i.13, i64 %idx.ext8.i, !dbg !577
    #dbg_value(ptr %add.ptr9.i.14, !442, !DIExpression(), !572)
    #dbg_value(i32 15, !445, !DIExpression(), !574)
    #dbg_value(i32 poison, !444, !DIExpression(), !572)
    #dbg_value(i64 7, !447, !DIExpression(), !575)
  %120 = load <8 x i8>, ptr %add.ptr.i.14, align 1, !dbg !576
  %121 = zext <8 x i8> %120 to <8 x i16>, !dbg !576
  %122 = load <8 x i8>, ptr %add.ptr9.i.14, align 1, !dbg !576
  %123 = zext <8 x i8> %122 to <8 x i16>, !dbg !576
  %124 = sub nsw <8 x i16> %121, %123, !dbg !576
  %125 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %124, i1 false), !dbg !576
  %126 = zext <8 x i16> %125 to <8 x i32>, !dbg !576
  %127 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %126), !dbg !576
  %op.rdx126.15 = add i32 %127, %op.rdx126.14, !dbg !576
    #dbg_value(i32 %op.rdx126.15, !444, !DIExpression(), !572)
    #dbg_value(i64 8, !447, !DIExpression(), !575)
    #dbg_value(ptr %add.ptr.i.14, !440, !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value), !572)
    #dbg_value(!DIArgList(ptr %add.ptr9.i.14, i64 %idx.ext8.i), !442, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !572)
    #dbg_value(i32 16, !445, !DIExpression(), !574)
  store i32 %op.rdx126.15, ptr %scores, align 4, !dbg !578
    #dbg_value(i32 16, !441, !DIExpression(), !579)
    #dbg_value(i32 %i_stride, !443, !DIExpression(), !579)
    #dbg_value(i32 0, !445, !DIExpression(), !581)
    #dbg_value(i32 0, !444, !DIExpression(), !579)
    #dbg_value(ptr %fenc, !440, !DIExpression(), !579)
    #dbg_value(ptr %pix1, !442, !DIExpression(), !579)
    #dbg_value(i32 0, !445, !DIExpression(), !581)
    #dbg_value(ptr %fenc, !440, !DIExpression(), !579)
    #dbg_value(ptr %pix1, !442, !DIExpression(), !579)
    #dbg_value(i32 poison, !444, !DIExpression(), !579)
    #dbg_value(i64 7, !447, !DIExpression(), !582)
  %128 = load <8 x i8>, ptr %fenc, align 1, !dbg !583
  %129 = zext <8 x i8> %128 to <8 x i16>, !dbg !583
  %130 = load <8 x i8>, ptr %pix1, align 1, !dbg !583
  %131 = zext <8 x i8> %130 to <8 x i16>, !dbg !583
  %132 = sub nsw <8 x i16> %129, %131, !dbg !583
  %133 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %132, i1 false), !dbg !583
  %134 = zext <8 x i16> %133 to <8 x i32>, !dbg !583
  %135 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %134), !dbg !583
    #dbg_value(i32 %135, !444, !DIExpression(), !579)
    #dbg_value(i64 8, !447, !DIExpression(), !582)
  %add.ptr.i63 = getelementptr inbounds i8, ptr %fenc, i64 16, !dbg !584
    #dbg_value(ptr %add.ptr.i63, !440, !DIExpression(), !579)
  %add.ptr9.i64 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext8.i, !dbg !584
    #dbg_value(ptr %add.ptr9.i64, !442, !DIExpression(), !579)
    #dbg_value(i32 1, !445, !DIExpression(), !581)
    #dbg_value(i32 poison, !444, !DIExpression(), !579)
    #dbg_value(i64 7, !447, !DIExpression(), !582)
  %136 = load <8 x i8>, ptr %add.ptr.i63, align 1, !dbg !583
  %137 = zext <8 x i8> %136 to <8 x i16>, !dbg !583
  %138 = load <8 x i8>, ptr %add.ptr9.i64, align 1, !dbg !583
  %139 = zext <8 x i8> %138 to <8 x i16>, !dbg !583
  %140 = sub nsw <8 x i16> %137, %139, !dbg !583
  %141 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %140, i1 false), !dbg !583
  %142 = zext <8 x i16> %141 to <8 x i32>, !dbg !583
  %143 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %142), !dbg !583
  %op.rdx125.1 = add i32 %143, %135, !dbg !583
    #dbg_value(i32 %op.rdx125.1, !444, !DIExpression(), !579)
    #dbg_value(i64 8, !447, !DIExpression(), !582)
  %add.ptr.i63.1 = getelementptr inbounds i8, ptr %fenc, i64 32, !dbg !584
    #dbg_value(ptr %add.ptr.i63.1, !440, !DIExpression(), !579)
  %add.ptr9.i64.1 = getelementptr inbounds i8, ptr %add.ptr9.i64, i64 %idx.ext8.i, !dbg !584
    #dbg_value(ptr %add.ptr9.i64.1, !442, !DIExpression(), !579)
    #dbg_value(i32 2, !445, !DIExpression(), !581)
    #dbg_value(i32 poison, !444, !DIExpression(), !579)
    #dbg_value(i64 7, !447, !DIExpression(), !582)
  %144 = load <8 x i8>, ptr %add.ptr.i63.1, align 1, !dbg !583
  %145 = zext <8 x i8> %144 to <8 x i16>, !dbg !583
  %146 = load <8 x i8>, ptr %add.ptr9.i64.1, align 1, !dbg !583
  %147 = zext <8 x i8> %146 to <8 x i16>, !dbg !583
  %148 = sub nsw <8 x i16> %145, %147, !dbg !583
  %149 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %148, i1 false), !dbg !583
  %150 = zext <8 x i16> %149 to <8 x i32>, !dbg !583
  %151 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %150), !dbg !583
  %op.rdx125.2 = add i32 %151, %op.rdx125.1, !dbg !583
    #dbg_value(i32 %op.rdx125.2, !444, !DIExpression(), !579)
    #dbg_value(i64 8, !447, !DIExpression(), !582)
  %add.ptr.i63.2 = getelementptr inbounds i8, ptr %fenc, i64 48, !dbg !584
    #dbg_value(ptr %add.ptr.i63.2, !440, !DIExpression(), !579)
  %add.ptr9.i64.2 = getelementptr inbounds i8, ptr %add.ptr9.i64.1, i64 %idx.ext8.i, !dbg !584
    #dbg_value(ptr %add.ptr9.i64.2, !442, !DIExpression(), !579)
    #dbg_value(i32 3, !445, !DIExpression(), !581)
    #dbg_value(i32 poison, !444, !DIExpression(), !579)
    #dbg_value(i64 7, !447, !DIExpression(), !582)
  %152 = load <8 x i8>, ptr %add.ptr.i63.2, align 1, !dbg !583
  %153 = zext <8 x i8> %152 to <8 x i16>, !dbg !583
  %154 = load <8 x i8>, ptr %add.ptr9.i64.2, align 1, !dbg !583
  %155 = zext <8 x i8> %154 to <8 x i16>, !dbg !583
  %156 = sub nsw <8 x i16> %153, %155, !dbg !583
  %157 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %156, i1 false), !dbg !583
  %158 = zext <8 x i16> %157 to <8 x i32>, !dbg !583
  %159 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %158), !dbg !583
  %op.rdx125.3 = add i32 %159, %op.rdx125.2, !dbg !583
    #dbg_value(i32 %op.rdx125.3, !444, !DIExpression(), !579)
    #dbg_value(i64 8, !447, !DIExpression(), !582)
  %add.ptr.i63.3 = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !584
    #dbg_value(ptr %add.ptr.i63.3, !440, !DIExpression(), !579)
  %add.ptr9.i64.3 = getelementptr inbounds i8, ptr %add.ptr9.i64.2, i64 %idx.ext8.i, !dbg !584
    #dbg_value(ptr %add.ptr9.i64.3, !442, !DIExpression(), !579)
    #dbg_value(i32 4, !445, !DIExpression(), !581)
    #dbg_value(i32 poison, !444, !DIExpression(), !579)
    #dbg_value(i64 7, !447, !DIExpression(), !582)
  %160 = load <8 x i8>, ptr %add.ptr.i63.3, align 1, !dbg !583
  %161 = zext <8 x i8> %160 to <8 x i16>, !dbg !583
  %162 = load <8 x i8>, ptr %add.ptr9.i64.3, align 1, !dbg !583
  %163 = zext <8 x i8> %162 to <8 x i16>, !dbg !583
  %164 = sub nsw <8 x i16> %161, %163, !dbg !583
  %165 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %164, i1 false), !dbg !583
  %166 = zext <8 x i16> %165 to <8 x i32>, !dbg !583
  %167 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %166), !dbg !583
  %op.rdx125.4 = add i32 %167, %op.rdx125.3, !dbg !583
    #dbg_value(i32 %op.rdx125.4, !444, !DIExpression(), !579)
    #dbg_value(i64 8, !447, !DIExpression(), !582)
  %add.ptr.i63.4 = getelementptr inbounds i8, ptr %fenc, i64 80, !dbg !584
    #dbg_value(ptr %add.ptr.i63.4, !440, !DIExpression(), !579)
  %add.ptr9.i64.4 = getelementptr inbounds i8, ptr %add.ptr9.i64.3, i64 %idx.ext8.i, !dbg !584
    #dbg_value(ptr %add.ptr9.i64.4, !442, !DIExpression(), !579)
    #dbg_value(i32 5, !445, !DIExpression(), !581)
    #dbg_value(i32 poison, !444, !DIExpression(), !579)
    #dbg_value(i64 7, !447, !DIExpression(), !582)
  %168 = load <8 x i8>, ptr %add.ptr.i63.4, align 1, !dbg !583
  %169 = zext <8 x i8> %168 to <8 x i16>, !dbg !583
  %170 = load <8 x i8>, ptr %add.ptr9.i64.4, align 1, !dbg !583
  %171 = zext <8 x i8> %170 to <8 x i16>, !dbg !583
  %172 = sub nsw <8 x i16> %169, %171, !dbg !583
  %173 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %172, i1 false), !dbg !583
  %174 = zext <8 x i16> %173 to <8 x i32>, !dbg !583
  %175 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %174), !dbg !583
  %op.rdx125.5 = add i32 %175, %op.rdx125.4, !dbg !583
    #dbg_value(i32 %op.rdx125.5, !444, !DIExpression(), !579)
    #dbg_value(i64 8, !447, !DIExpression(), !582)
  %add.ptr.i63.5 = getelementptr inbounds i8, ptr %fenc, i64 96, !dbg !584
    #dbg_value(ptr %add.ptr.i63.5, !440, !DIExpression(), !579)
  %add.ptr9.i64.5 = getelementptr inbounds i8, ptr %add.ptr9.i64.4, i64 %idx.ext8.i, !dbg !584
    #dbg_value(ptr %add.ptr9.i64.5, !442, !DIExpression(), !579)
    #dbg_value(i32 6, !445, !DIExpression(), !581)
    #dbg_value(i32 poison, !444, !DIExpression(), !579)
    #dbg_value(i64 7, !447, !DIExpression(), !582)
  %176 = load <8 x i8>, ptr %add.ptr.i63.5, align 1, !dbg !583
  %177 = zext <8 x i8> %176 to <8 x i16>, !dbg !583
  %178 = load <8 x i8>, ptr %add.ptr9.i64.5, align 1, !dbg !583
  %179 = zext <8 x i8> %178 to <8 x i16>, !dbg !583
  %180 = sub nsw <8 x i16> %177, %179, !dbg !583
  %181 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %180, i1 false), !dbg !583
  %182 = zext <8 x i16> %181 to <8 x i32>, !dbg !583
  %183 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %182), !dbg !583
  %op.rdx125.6 = add i32 %183, %op.rdx125.5, !dbg !583
    #dbg_value(i32 %op.rdx125.6, !444, !DIExpression(), !579)
    #dbg_value(i64 8, !447, !DIExpression(), !582)
  %add.ptr.i63.6 = getelementptr inbounds i8, ptr %fenc, i64 112, !dbg !584
    #dbg_value(ptr %add.ptr.i63.6, !440, !DIExpression(), !579)
  %add.ptr9.i64.6 = getelementptr inbounds i8, ptr %add.ptr9.i64.5, i64 %idx.ext8.i, !dbg !584
    #dbg_value(ptr %add.ptr9.i64.6, !442, !DIExpression(), !579)
    #dbg_value(i32 7, !445, !DIExpression(), !581)
    #dbg_value(i32 poison, !444, !DIExpression(), !579)
    #dbg_value(i64 7, !447, !DIExpression(), !582)
  %184 = load <8 x i8>, ptr %add.ptr.i63.6, align 1, !dbg !583
  %185 = zext <8 x i8> %184 to <8 x i16>, !dbg !583
  %186 = load <8 x i8>, ptr %add.ptr9.i64.6, align 1, !dbg !583
  %187 = zext <8 x i8> %186 to <8 x i16>, !dbg !583
  %188 = sub nsw <8 x i16> %185, %187, !dbg !583
  %189 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %188, i1 false), !dbg !583
  %190 = zext <8 x i16> %189 to <8 x i32>, !dbg !583
  %191 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %190), !dbg !583
  %op.rdx125.7 = add i32 %191, %op.rdx125.6, !dbg !583
    #dbg_value(i32 %op.rdx125.7, !444, !DIExpression(), !579)
    #dbg_value(i64 8, !447, !DIExpression(), !582)
  %add.ptr.i63.7 = getelementptr inbounds i8, ptr %fenc, i64 128, !dbg !584
    #dbg_value(ptr %add.ptr.i63.7, !440, !DIExpression(), !579)
  %add.ptr9.i64.7 = getelementptr inbounds i8, ptr %add.ptr9.i64.6, i64 %idx.ext8.i, !dbg !584
    #dbg_value(ptr %add.ptr9.i64.7, !442, !DIExpression(), !579)
    #dbg_value(i32 8, !445, !DIExpression(), !581)
    #dbg_value(i32 poison, !444, !DIExpression(), !579)
    #dbg_value(i64 7, !447, !DIExpression(), !582)
  %192 = load <8 x i8>, ptr %add.ptr.i63.7, align 1, !dbg !583
  %193 = zext <8 x i8> %192 to <8 x i16>, !dbg !583
  %194 = load <8 x i8>, ptr %add.ptr9.i64.7, align 1, !dbg !583
  %195 = zext <8 x i8> %194 to <8 x i16>, !dbg !583
  %196 = sub nsw <8 x i16> %193, %195, !dbg !583
  %197 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %196, i1 false), !dbg !583
  %198 = zext <8 x i16> %197 to <8 x i32>, !dbg !583
  %199 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %198), !dbg !583
  %op.rdx125.8 = add i32 %199, %op.rdx125.7, !dbg !583
    #dbg_value(i32 %op.rdx125.8, !444, !DIExpression(), !579)
    #dbg_value(i64 8, !447, !DIExpression(), !582)
  %add.ptr.i63.8 = getelementptr inbounds i8, ptr %fenc, i64 144, !dbg !584
    #dbg_value(ptr %add.ptr.i63.8, !440, !DIExpression(), !579)
  %add.ptr9.i64.8 = getelementptr inbounds i8, ptr %add.ptr9.i64.7, i64 %idx.ext8.i, !dbg !584
    #dbg_value(ptr %add.ptr9.i64.8, !442, !DIExpression(), !579)
    #dbg_value(i32 9, !445, !DIExpression(), !581)
    #dbg_value(i32 poison, !444, !DIExpression(), !579)
    #dbg_value(i64 7, !447, !DIExpression(), !582)
  %200 = load <8 x i8>, ptr %add.ptr.i63.8, align 1, !dbg !583
  %201 = zext <8 x i8> %200 to <8 x i16>, !dbg !583
  %202 = load <8 x i8>, ptr %add.ptr9.i64.8, align 1, !dbg !583
  %203 = zext <8 x i8> %202 to <8 x i16>, !dbg !583
  %204 = sub nsw <8 x i16> %201, %203, !dbg !583
  %205 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %204, i1 false), !dbg !583
  %206 = zext <8 x i16> %205 to <8 x i32>, !dbg !583
  %207 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %206), !dbg !583
  %op.rdx125.9 = add i32 %207, %op.rdx125.8, !dbg !583
    #dbg_value(i32 %op.rdx125.9, !444, !DIExpression(), !579)
    #dbg_value(i64 8, !447, !DIExpression(), !582)
  %add.ptr.i63.9 = getelementptr inbounds i8, ptr %fenc, i64 160, !dbg !584
    #dbg_value(ptr %add.ptr.i63.9, !440, !DIExpression(), !579)
  %add.ptr9.i64.9 = getelementptr inbounds i8, ptr %add.ptr9.i64.8, i64 %idx.ext8.i, !dbg !584
    #dbg_value(ptr %add.ptr9.i64.9, !442, !DIExpression(), !579)
    #dbg_value(i32 10, !445, !DIExpression(), !581)
    #dbg_value(i32 poison, !444, !DIExpression(), !579)
    #dbg_value(i64 7, !447, !DIExpression(), !582)
  %208 = load <8 x i8>, ptr %add.ptr.i63.9, align 1, !dbg !583
  %209 = zext <8 x i8> %208 to <8 x i16>, !dbg !583
  %210 = load <8 x i8>, ptr %add.ptr9.i64.9, align 1, !dbg !583
  %211 = zext <8 x i8> %210 to <8 x i16>, !dbg !583
  %212 = sub nsw <8 x i16> %209, %211, !dbg !583
  %213 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %212, i1 false), !dbg !583
  %214 = zext <8 x i16> %213 to <8 x i32>, !dbg !583
  %215 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %214), !dbg !583
  %op.rdx125.10 = add i32 %215, %op.rdx125.9, !dbg !583
    #dbg_value(i32 %op.rdx125.10, !444, !DIExpression(), !579)
    #dbg_value(i64 8, !447, !DIExpression(), !582)
  %add.ptr.i63.10 = getelementptr inbounds i8, ptr %fenc, i64 176, !dbg !584
    #dbg_value(ptr %add.ptr.i63.10, !440, !DIExpression(), !579)
  %add.ptr9.i64.10 = getelementptr inbounds i8, ptr %add.ptr9.i64.9, i64 %idx.ext8.i, !dbg !584
    #dbg_value(ptr %add.ptr9.i64.10, !442, !DIExpression(), !579)
    #dbg_value(i32 11, !445, !DIExpression(), !581)
    #dbg_value(i32 poison, !444, !DIExpression(), !579)
    #dbg_value(i64 7, !447, !DIExpression(), !582)
  %216 = load <8 x i8>, ptr %add.ptr.i63.10, align 1, !dbg !583
  %217 = zext <8 x i8> %216 to <8 x i16>, !dbg !583
  %218 = load <8 x i8>, ptr %add.ptr9.i64.10, align 1, !dbg !583
  %219 = zext <8 x i8> %218 to <8 x i16>, !dbg !583
  %220 = sub nsw <8 x i16> %217, %219, !dbg !583
  %221 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %220, i1 false), !dbg !583
  %222 = zext <8 x i16> %221 to <8 x i32>, !dbg !583
  %223 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %222), !dbg !583
  %op.rdx125.11 = add i32 %223, %op.rdx125.10, !dbg !583
    #dbg_value(i32 %op.rdx125.11, !444, !DIExpression(), !579)
    #dbg_value(i64 8, !447, !DIExpression(), !582)
  %add.ptr.i63.11 = getelementptr inbounds i8, ptr %fenc, i64 192, !dbg !584
    #dbg_value(ptr %add.ptr.i63.11, !440, !DIExpression(), !579)
  %add.ptr9.i64.11 = getelementptr inbounds i8, ptr %add.ptr9.i64.10, i64 %idx.ext8.i, !dbg !584
    #dbg_value(ptr %add.ptr9.i64.11, !442, !DIExpression(), !579)
    #dbg_value(i32 12, !445, !DIExpression(), !581)
    #dbg_value(i32 poison, !444, !DIExpression(), !579)
    #dbg_value(i64 7, !447, !DIExpression(), !582)
  %224 = load <8 x i8>, ptr %add.ptr.i63.11, align 1, !dbg !583
  %225 = zext <8 x i8> %224 to <8 x i16>, !dbg !583
  %226 = load <8 x i8>, ptr %add.ptr9.i64.11, align 1, !dbg !583
  %227 = zext <8 x i8> %226 to <8 x i16>, !dbg !583
  %228 = sub nsw <8 x i16> %225, %227, !dbg !583
  %229 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %228, i1 false), !dbg !583
  %230 = zext <8 x i16> %229 to <8 x i32>, !dbg !583
  %231 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %230), !dbg !583
  %op.rdx125.12 = add i32 %231, %op.rdx125.11, !dbg !583
    #dbg_value(i32 %op.rdx125.12, !444, !DIExpression(), !579)
    #dbg_value(i64 8, !447, !DIExpression(), !582)
  %add.ptr.i63.12 = getelementptr inbounds i8, ptr %fenc, i64 208, !dbg !584
    #dbg_value(ptr %add.ptr.i63.12, !440, !DIExpression(), !579)
  %add.ptr9.i64.12 = getelementptr inbounds i8, ptr %add.ptr9.i64.11, i64 %idx.ext8.i, !dbg !584
    #dbg_value(ptr %add.ptr9.i64.12, !442, !DIExpression(), !579)
    #dbg_value(i32 13, !445, !DIExpression(), !581)
    #dbg_value(i32 poison, !444, !DIExpression(), !579)
    #dbg_value(i64 7, !447, !DIExpression(), !582)
  %232 = load <8 x i8>, ptr %add.ptr.i63.12, align 1, !dbg !583
  %233 = zext <8 x i8> %232 to <8 x i16>, !dbg !583
  %234 = load <8 x i8>, ptr %add.ptr9.i64.12, align 1, !dbg !583
  %235 = zext <8 x i8> %234 to <8 x i16>, !dbg !583
  %236 = sub nsw <8 x i16> %233, %235, !dbg !583
  %237 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %236, i1 false), !dbg !583
  %238 = zext <8 x i16> %237 to <8 x i32>, !dbg !583
  %239 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %238), !dbg !583
  %op.rdx125.13 = add i32 %239, %op.rdx125.12, !dbg !583
    #dbg_value(i32 %op.rdx125.13, !444, !DIExpression(), !579)
    #dbg_value(i64 8, !447, !DIExpression(), !582)
  %add.ptr.i63.13 = getelementptr inbounds i8, ptr %fenc, i64 224, !dbg !584
    #dbg_value(ptr %add.ptr.i63.13, !440, !DIExpression(), !579)
  %add.ptr9.i64.13 = getelementptr inbounds i8, ptr %add.ptr9.i64.12, i64 %idx.ext8.i, !dbg !584
    #dbg_value(ptr %add.ptr9.i64.13, !442, !DIExpression(), !579)
    #dbg_value(i32 14, !445, !DIExpression(), !581)
    #dbg_value(i32 poison, !444, !DIExpression(), !579)
    #dbg_value(i64 7, !447, !DIExpression(), !582)
  %240 = load <8 x i8>, ptr %add.ptr.i63.13, align 1, !dbg !583
  %241 = zext <8 x i8> %240 to <8 x i16>, !dbg !583
  %242 = load <8 x i8>, ptr %add.ptr9.i64.13, align 1, !dbg !583
  %243 = zext <8 x i8> %242 to <8 x i16>, !dbg !583
  %244 = sub nsw <8 x i16> %241, %243, !dbg !583
  %245 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %244, i1 false), !dbg !583
  %246 = zext <8 x i16> %245 to <8 x i32>, !dbg !583
  %247 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %246), !dbg !583
  %op.rdx125.14 = add i32 %247, %op.rdx125.13, !dbg !583
    #dbg_value(i32 %op.rdx125.14, !444, !DIExpression(), !579)
    #dbg_value(i64 8, !447, !DIExpression(), !582)
  %add.ptr.i63.14 = getelementptr inbounds i8, ptr %fenc, i64 240, !dbg !584
    #dbg_value(ptr %add.ptr.i63.14, !440, !DIExpression(), !579)
  %add.ptr9.i64.14 = getelementptr inbounds i8, ptr %add.ptr9.i64.13, i64 %idx.ext8.i, !dbg !584
    #dbg_value(ptr %add.ptr9.i64.14, !442, !DIExpression(), !579)
    #dbg_value(i32 15, !445, !DIExpression(), !581)
    #dbg_value(i32 poison, !444, !DIExpression(), !579)
    #dbg_value(i64 7, !447, !DIExpression(), !582)
  %248 = load <8 x i8>, ptr %add.ptr.i63.14, align 1, !dbg !583
  %249 = zext <8 x i8> %248 to <8 x i16>, !dbg !583
  %250 = load <8 x i8>, ptr %add.ptr9.i64.14, align 1, !dbg !583
  %251 = zext <8 x i8> %250 to <8 x i16>, !dbg !583
  %252 = sub nsw <8 x i16> %249, %251, !dbg !583
  %253 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %252, i1 false), !dbg !583
  %254 = zext <8 x i16> %253 to <8 x i32>, !dbg !583
  %255 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %254), !dbg !583
  %op.rdx125.15 = add i32 %255, %op.rdx125.14, !dbg !583
    #dbg_value(i32 %op.rdx125.15, !444, !DIExpression(), !579)
    #dbg_value(i64 8, !447, !DIExpression(), !582)
    #dbg_value(ptr %add.ptr.i63.14, !440, !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value), !579)
    #dbg_value(!DIArgList(ptr %add.ptr9.i64.14, i64 %idx.ext8.i), !442, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !579)
    #dbg_value(i32 16, !445, !DIExpression(), !581)
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !578
  store i32 %op.rdx125.15, ptr %arrayidx2, align 4, !dbg !578
    #dbg_value(i32 16, !441, !DIExpression(), !585)
    #dbg_value(i32 %i_stride, !443, !DIExpression(), !585)
    #dbg_value(i32 0, !445, !DIExpression(), !587)
    #dbg_value(i32 0, !444, !DIExpression(), !585)
    #dbg_value(ptr %fenc, !440, !DIExpression(), !585)
    #dbg_value(ptr %pix2, !442, !DIExpression(), !585)
    #dbg_value(i32 0, !445, !DIExpression(), !587)
    #dbg_value(ptr %fenc, !440, !DIExpression(), !585)
    #dbg_value(ptr %pix2, !442, !DIExpression(), !585)
    #dbg_value(i32 poison, !444, !DIExpression(), !585)
    #dbg_value(i64 7, !447, !DIExpression(), !588)
  %256 = load <8 x i8>, ptr %fenc, align 1, !dbg !589
  %257 = zext <8 x i8> %256 to <8 x i16>, !dbg !589
  %258 = load <8 x i8>, ptr %pix2, align 1, !dbg !589
  %259 = zext <8 x i8> %258 to <8 x i16>, !dbg !589
  %260 = sub nsw <8 x i16> %257, %259, !dbg !589
  %261 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %260, i1 false), !dbg !589
  %262 = zext <8 x i16> %261 to <8 x i32>, !dbg !589
  %263 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %262), !dbg !589
    #dbg_value(i32 %263, !444, !DIExpression(), !585)
    #dbg_value(i64 8, !447, !DIExpression(), !588)
  %add.ptr.i120 = getelementptr inbounds i8, ptr %fenc, i64 16, !dbg !590
    #dbg_value(ptr %add.ptr.i120, !440, !DIExpression(), !585)
  %add.ptr9.i121 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext8.i, !dbg !590
    #dbg_value(ptr %add.ptr9.i121, !442, !DIExpression(), !585)
    #dbg_value(i32 1, !445, !DIExpression(), !587)
    #dbg_value(i32 poison, !444, !DIExpression(), !585)
    #dbg_value(i64 7, !447, !DIExpression(), !588)
  %264 = load <8 x i8>, ptr %add.ptr.i120, align 1, !dbg !589
  %265 = zext <8 x i8> %264 to <8 x i16>, !dbg !589
  %266 = load <8 x i8>, ptr %add.ptr9.i121, align 1, !dbg !589
  %267 = zext <8 x i8> %266 to <8 x i16>, !dbg !589
  %268 = sub nsw <8 x i16> %265, %267, !dbg !589
  %269 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %268, i1 false), !dbg !589
  %270 = zext <8 x i16> %269 to <8 x i32>, !dbg !589
  %271 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %270), !dbg !589
  %op.rdx.1 = add i32 %271, %263, !dbg !589
    #dbg_value(i32 %op.rdx.1, !444, !DIExpression(), !585)
    #dbg_value(i64 8, !447, !DIExpression(), !588)
  %add.ptr.i120.1 = getelementptr inbounds i8, ptr %fenc, i64 32, !dbg !590
    #dbg_value(ptr %add.ptr.i120.1, !440, !DIExpression(), !585)
  %add.ptr9.i121.1 = getelementptr inbounds i8, ptr %add.ptr9.i121, i64 %idx.ext8.i, !dbg !590
    #dbg_value(ptr %add.ptr9.i121.1, !442, !DIExpression(), !585)
    #dbg_value(i32 2, !445, !DIExpression(), !587)
    #dbg_value(i32 poison, !444, !DIExpression(), !585)
    #dbg_value(i64 7, !447, !DIExpression(), !588)
  %272 = load <8 x i8>, ptr %add.ptr.i120.1, align 1, !dbg !589
  %273 = zext <8 x i8> %272 to <8 x i16>, !dbg !589
  %274 = load <8 x i8>, ptr %add.ptr9.i121.1, align 1, !dbg !589
  %275 = zext <8 x i8> %274 to <8 x i16>, !dbg !589
  %276 = sub nsw <8 x i16> %273, %275, !dbg !589
  %277 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %276, i1 false), !dbg !589
  %278 = zext <8 x i16> %277 to <8 x i32>, !dbg !589
  %279 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %278), !dbg !589
  %op.rdx.2 = add i32 %279, %op.rdx.1, !dbg !589
    #dbg_value(i32 %op.rdx.2, !444, !DIExpression(), !585)
    #dbg_value(i64 8, !447, !DIExpression(), !588)
  %add.ptr.i120.2 = getelementptr inbounds i8, ptr %fenc, i64 48, !dbg !590
    #dbg_value(ptr %add.ptr.i120.2, !440, !DIExpression(), !585)
  %add.ptr9.i121.2 = getelementptr inbounds i8, ptr %add.ptr9.i121.1, i64 %idx.ext8.i, !dbg !590
    #dbg_value(ptr %add.ptr9.i121.2, !442, !DIExpression(), !585)
    #dbg_value(i32 3, !445, !DIExpression(), !587)
    #dbg_value(i32 poison, !444, !DIExpression(), !585)
    #dbg_value(i64 7, !447, !DIExpression(), !588)
  %280 = load <8 x i8>, ptr %add.ptr.i120.2, align 1, !dbg !589
  %281 = zext <8 x i8> %280 to <8 x i16>, !dbg !589
  %282 = load <8 x i8>, ptr %add.ptr9.i121.2, align 1, !dbg !589
  %283 = zext <8 x i8> %282 to <8 x i16>, !dbg !589
  %284 = sub nsw <8 x i16> %281, %283, !dbg !589
  %285 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %284, i1 false), !dbg !589
  %286 = zext <8 x i16> %285 to <8 x i32>, !dbg !589
  %287 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %286), !dbg !589
  %op.rdx.3 = add i32 %287, %op.rdx.2, !dbg !589
    #dbg_value(i32 %op.rdx.3, !444, !DIExpression(), !585)
    #dbg_value(i64 8, !447, !DIExpression(), !588)
  %add.ptr.i120.3 = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !590
    #dbg_value(ptr %add.ptr.i120.3, !440, !DIExpression(), !585)
  %add.ptr9.i121.3 = getelementptr inbounds i8, ptr %add.ptr9.i121.2, i64 %idx.ext8.i, !dbg !590
    #dbg_value(ptr %add.ptr9.i121.3, !442, !DIExpression(), !585)
    #dbg_value(i32 4, !445, !DIExpression(), !587)
    #dbg_value(i32 poison, !444, !DIExpression(), !585)
    #dbg_value(i64 7, !447, !DIExpression(), !588)
  %288 = load <8 x i8>, ptr %add.ptr.i120.3, align 1, !dbg !589
  %289 = zext <8 x i8> %288 to <8 x i16>, !dbg !589
  %290 = load <8 x i8>, ptr %add.ptr9.i121.3, align 1, !dbg !589
  %291 = zext <8 x i8> %290 to <8 x i16>, !dbg !589
  %292 = sub nsw <8 x i16> %289, %291, !dbg !589
  %293 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %292, i1 false), !dbg !589
  %294 = zext <8 x i16> %293 to <8 x i32>, !dbg !589
  %295 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %294), !dbg !589
  %op.rdx.4 = add i32 %295, %op.rdx.3, !dbg !589
    #dbg_value(i32 %op.rdx.4, !444, !DIExpression(), !585)
    #dbg_value(i64 8, !447, !DIExpression(), !588)
  %add.ptr.i120.4 = getelementptr inbounds i8, ptr %fenc, i64 80, !dbg !590
    #dbg_value(ptr %add.ptr.i120.4, !440, !DIExpression(), !585)
  %add.ptr9.i121.4 = getelementptr inbounds i8, ptr %add.ptr9.i121.3, i64 %idx.ext8.i, !dbg !590
    #dbg_value(ptr %add.ptr9.i121.4, !442, !DIExpression(), !585)
    #dbg_value(i32 5, !445, !DIExpression(), !587)
    #dbg_value(i32 poison, !444, !DIExpression(), !585)
    #dbg_value(i64 7, !447, !DIExpression(), !588)
  %296 = load <8 x i8>, ptr %add.ptr.i120.4, align 1, !dbg !589
  %297 = zext <8 x i8> %296 to <8 x i16>, !dbg !589
  %298 = load <8 x i8>, ptr %add.ptr9.i121.4, align 1, !dbg !589
  %299 = zext <8 x i8> %298 to <8 x i16>, !dbg !589
  %300 = sub nsw <8 x i16> %297, %299, !dbg !589
  %301 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %300, i1 false), !dbg !589
  %302 = zext <8 x i16> %301 to <8 x i32>, !dbg !589
  %303 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %302), !dbg !589
  %op.rdx.5 = add i32 %303, %op.rdx.4, !dbg !589
    #dbg_value(i32 %op.rdx.5, !444, !DIExpression(), !585)
    #dbg_value(i64 8, !447, !DIExpression(), !588)
  %add.ptr.i120.5 = getelementptr inbounds i8, ptr %fenc, i64 96, !dbg !590
    #dbg_value(ptr %add.ptr.i120.5, !440, !DIExpression(), !585)
  %add.ptr9.i121.5 = getelementptr inbounds i8, ptr %add.ptr9.i121.4, i64 %idx.ext8.i, !dbg !590
    #dbg_value(ptr %add.ptr9.i121.5, !442, !DIExpression(), !585)
    #dbg_value(i32 6, !445, !DIExpression(), !587)
    #dbg_value(i32 poison, !444, !DIExpression(), !585)
    #dbg_value(i64 7, !447, !DIExpression(), !588)
  %304 = load <8 x i8>, ptr %add.ptr.i120.5, align 1, !dbg !589
  %305 = zext <8 x i8> %304 to <8 x i16>, !dbg !589
  %306 = load <8 x i8>, ptr %add.ptr9.i121.5, align 1, !dbg !589
  %307 = zext <8 x i8> %306 to <8 x i16>, !dbg !589
  %308 = sub nsw <8 x i16> %305, %307, !dbg !589
  %309 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %308, i1 false), !dbg !589
  %310 = zext <8 x i16> %309 to <8 x i32>, !dbg !589
  %311 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %310), !dbg !589
  %op.rdx.6 = add i32 %311, %op.rdx.5, !dbg !589
    #dbg_value(i32 %op.rdx.6, !444, !DIExpression(), !585)
    #dbg_value(i64 8, !447, !DIExpression(), !588)
  %add.ptr.i120.6 = getelementptr inbounds i8, ptr %fenc, i64 112, !dbg !590
    #dbg_value(ptr %add.ptr.i120.6, !440, !DIExpression(), !585)
  %add.ptr9.i121.6 = getelementptr inbounds i8, ptr %add.ptr9.i121.5, i64 %idx.ext8.i, !dbg !590
    #dbg_value(ptr %add.ptr9.i121.6, !442, !DIExpression(), !585)
    #dbg_value(i32 7, !445, !DIExpression(), !587)
    #dbg_value(i32 poison, !444, !DIExpression(), !585)
    #dbg_value(i64 7, !447, !DIExpression(), !588)
  %312 = load <8 x i8>, ptr %add.ptr.i120.6, align 1, !dbg !589
  %313 = zext <8 x i8> %312 to <8 x i16>, !dbg !589
  %314 = load <8 x i8>, ptr %add.ptr9.i121.6, align 1, !dbg !589
  %315 = zext <8 x i8> %314 to <8 x i16>, !dbg !589
  %316 = sub nsw <8 x i16> %313, %315, !dbg !589
  %317 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %316, i1 false), !dbg !589
  %318 = zext <8 x i16> %317 to <8 x i32>, !dbg !589
  %319 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %318), !dbg !589
  %op.rdx.7 = add i32 %319, %op.rdx.6, !dbg !589
    #dbg_value(i32 %op.rdx.7, !444, !DIExpression(), !585)
    #dbg_value(i64 8, !447, !DIExpression(), !588)
  %add.ptr.i120.7 = getelementptr inbounds i8, ptr %fenc, i64 128, !dbg !590
    #dbg_value(ptr %add.ptr.i120.7, !440, !DIExpression(), !585)
  %add.ptr9.i121.7 = getelementptr inbounds i8, ptr %add.ptr9.i121.6, i64 %idx.ext8.i, !dbg !590
    #dbg_value(ptr %add.ptr9.i121.7, !442, !DIExpression(), !585)
    #dbg_value(i32 8, !445, !DIExpression(), !587)
    #dbg_value(i32 poison, !444, !DIExpression(), !585)
    #dbg_value(i64 7, !447, !DIExpression(), !588)
  %320 = load <8 x i8>, ptr %add.ptr.i120.7, align 1, !dbg !589
  %321 = zext <8 x i8> %320 to <8 x i16>, !dbg !589
  %322 = load <8 x i8>, ptr %add.ptr9.i121.7, align 1, !dbg !589
  %323 = zext <8 x i8> %322 to <8 x i16>, !dbg !589
  %324 = sub nsw <8 x i16> %321, %323, !dbg !589
  %325 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %324, i1 false), !dbg !589
  %326 = zext <8 x i16> %325 to <8 x i32>, !dbg !589
  %327 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %326), !dbg !589
  %op.rdx.8 = add i32 %327, %op.rdx.7, !dbg !589
    #dbg_value(i32 %op.rdx.8, !444, !DIExpression(), !585)
    #dbg_value(i64 8, !447, !DIExpression(), !588)
  %add.ptr.i120.8 = getelementptr inbounds i8, ptr %fenc, i64 144, !dbg !590
    #dbg_value(ptr %add.ptr.i120.8, !440, !DIExpression(), !585)
  %add.ptr9.i121.8 = getelementptr inbounds i8, ptr %add.ptr9.i121.7, i64 %idx.ext8.i, !dbg !590
    #dbg_value(ptr %add.ptr9.i121.8, !442, !DIExpression(), !585)
    #dbg_value(i32 9, !445, !DIExpression(), !587)
    #dbg_value(i32 poison, !444, !DIExpression(), !585)
    #dbg_value(i64 7, !447, !DIExpression(), !588)
  %328 = load <8 x i8>, ptr %add.ptr.i120.8, align 1, !dbg !589
  %329 = zext <8 x i8> %328 to <8 x i16>, !dbg !589
  %330 = load <8 x i8>, ptr %add.ptr9.i121.8, align 1, !dbg !589
  %331 = zext <8 x i8> %330 to <8 x i16>, !dbg !589
  %332 = sub nsw <8 x i16> %329, %331, !dbg !589
  %333 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %332, i1 false), !dbg !589
  %334 = zext <8 x i16> %333 to <8 x i32>, !dbg !589
  %335 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %334), !dbg !589
  %op.rdx.9 = add i32 %335, %op.rdx.8, !dbg !589
    #dbg_value(i32 %op.rdx.9, !444, !DIExpression(), !585)
    #dbg_value(i64 8, !447, !DIExpression(), !588)
  %add.ptr.i120.9 = getelementptr inbounds i8, ptr %fenc, i64 160, !dbg !590
    #dbg_value(ptr %add.ptr.i120.9, !440, !DIExpression(), !585)
  %add.ptr9.i121.9 = getelementptr inbounds i8, ptr %add.ptr9.i121.8, i64 %idx.ext8.i, !dbg !590
    #dbg_value(ptr %add.ptr9.i121.9, !442, !DIExpression(), !585)
    #dbg_value(i32 10, !445, !DIExpression(), !587)
    #dbg_value(i32 poison, !444, !DIExpression(), !585)
    #dbg_value(i64 7, !447, !DIExpression(), !588)
  %336 = load <8 x i8>, ptr %add.ptr.i120.9, align 1, !dbg !589
  %337 = zext <8 x i8> %336 to <8 x i16>, !dbg !589
  %338 = load <8 x i8>, ptr %add.ptr9.i121.9, align 1, !dbg !589
  %339 = zext <8 x i8> %338 to <8 x i16>, !dbg !589
  %340 = sub nsw <8 x i16> %337, %339, !dbg !589
  %341 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %340, i1 false), !dbg !589
  %342 = zext <8 x i16> %341 to <8 x i32>, !dbg !589
  %343 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %342), !dbg !589
  %op.rdx.10 = add i32 %343, %op.rdx.9, !dbg !589
    #dbg_value(i32 %op.rdx.10, !444, !DIExpression(), !585)
    #dbg_value(i64 8, !447, !DIExpression(), !588)
  %add.ptr.i120.10 = getelementptr inbounds i8, ptr %fenc, i64 176, !dbg !590
    #dbg_value(ptr %add.ptr.i120.10, !440, !DIExpression(), !585)
  %add.ptr9.i121.10 = getelementptr inbounds i8, ptr %add.ptr9.i121.9, i64 %idx.ext8.i, !dbg !590
    #dbg_value(ptr %add.ptr9.i121.10, !442, !DIExpression(), !585)
    #dbg_value(i32 11, !445, !DIExpression(), !587)
    #dbg_value(i32 poison, !444, !DIExpression(), !585)
    #dbg_value(i64 7, !447, !DIExpression(), !588)
  %344 = load <8 x i8>, ptr %add.ptr.i120.10, align 1, !dbg !589
  %345 = zext <8 x i8> %344 to <8 x i16>, !dbg !589
  %346 = load <8 x i8>, ptr %add.ptr9.i121.10, align 1, !dbg !589
  %347 = zext <8 x i8> %346 to <8 x i16>, !dbg !589
  %348 = sub nsw <8 x i16> %345, %347, !dbg !589
  %349 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %348, i1 false), !dbg !589
  %350 = zext <8 x i16> %349 to <8 x i32>, !dbg !589
  %351 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %350), !dbg !589
  %op.rdx.11 = add i32 %351, %op.rdx.10, !dbg !589
    #dbg_value(i32 %op.rdx.11, !444, !DIExpression(), !585)
    #dbg_value(i64 8, !447, !DIExpression(), !588)
  %add.ptr.i120.11 = getelementptr inbounds i8, ptr %fenc, i64 192, !dbg !590
    #dbg_value(ptr %add.ptr.i120.11, !440, !DIExpression(), !585)
  %add.ptr9.i121.11 = getelementptr inbounds i8, ptr %add.ptr9.i121.10, i64 %idx.ext8.i, !dbg !590
    #dbg_value(ptr %add.ptr9.i121.11, !442, !DIExpression(), !585)
    #dbg_value(i32 12, !445, !DIExpression(), !587)
    #dbg_value(i32 poison, !444, !DIExpression(), !585)
    #dbg_value(i64 7, !447, !DIExpression(), !588)
  %352 = load <8 x i8>, ptr %add.ptr.i120.11, align 1, !dbg !589
  %353 = zext <8 x i8> %352 to <8 x i16>, !dbg !589
  %354 = load <8 x i8>, ptr %add.ptr9.i121.11, align 1, !dbg !589
  %355 = zext <8 x i8> %354 to <8 x i16>, !dbg !589
  %356 = sub nsw <8 x i16> %353, %355, !dbg !589
  %357 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %356, i1 false), !dbg !589
  %358 = zext <8 x i16> %357 to <8 x i32>, !dbg !589
  %359 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %358), !dbg !589
  %op.rdx.12 = add i32 %359, %op.rdx.11, !dbg !589
    #dbg_value(i32 %op.rdx.12, !444, !DIExpression(), !585)
    #dbg_value(i64 8, !447, !DIExpression(), !588)
  %add.ptr.i120.12 = getelementptr inbounds i8, ptr %fenc, i64 208, !dbg !590
    #dbg_value(ptr %add.ptr.i120.12, !440, !DIExpression(), !585)
  %add.ptr9.i121.12 = getelementptr inbounds i8, ptr %add.ptr9.i121.11, i64 %idx.ext8.i, !dbg !590
    #dbg_value(ptr %add.ptr9.i121.12, !442, !DIExpression(), !585)
    #dbg_value(i32 13, !445, !DIExpression(), !587)
    #dbg_value(i32 poison, !444, !DIExpression(), !585)
    #dbg_value(i64 7, !447, !DIExpression(), !588)
  %360 = load <8 x i8>, ptr %add.ptr.i120.12, align 1, !dbg !589
  %361 = zext <8 x i8> %360 to <8 x i16>, !dbg !589
  %362 = load <8 x i8>, ptr %add.ptr9.i121.12, align 1, !dbg !589
  %363 = zext <8 x i8> %362 to <8 x i16>, !dbg !589
  %364 = sub nsw <8 x i16> %361, %363, !dbg !589
  %365 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %364, i1 false), !dbg !589
  %366 = zext <8 x i16> %365 to <8 x i32>, !dbg !589
  %367 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %366), !dbg !589
  %op.rdx.13 = add i32 %367, %op.rdx.12, !dbg !589
    #dbg_value(i32 %op.rdx.13, !444, !DIExpression(), !585)
    #dbg_value(i64 8, !447, !DIExpression(), !588)
  %add.ptr.i120.13 = getelementptr inbounds i8, ptr %fenc, i64 224, !dbg !590
    #dbg_value(ptr %add.ptr.i120.13, !440, !DIExpression(), !585)
  %add.ptr9.i121.13 = getelementptr inbounds i8, ptr %add.ptr9.i121.12, i64 %idx.ext8.i, !dbg !590
    #dbg_value(ptr %add.ptr9.i121.13, !442, !DIExpression(), !585)
    #dbg_value(i32 14, !445, !DIExpression(), !587)
    #dbg_value(i32 poison, !444, !DIExpression(), !585)
    #dbg_value(i64 7, !447, !DIExpression(), !588)
  %368 = load <8 x i8>, ptr %add.ptr.i120.13, align 1, !dbg !589
  %369 = zext <8 x i8> %368 to <8 x i16>, !dbg !589
  %370 = load <8 x i8>, ptr %add.ptr9.i121.13, align 1, !dbg !589
  %371 = zext <8 x i8> %370 to <8 x i16>, !dbg !589
  %372 = sub nsw <8 x i16> %369, %371, !dbg !589
  %373 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %372, i1 false), !dbg !589
  %374 = zext <8 x i16> %373 to <8 x i32>, !dbg !589
  %375 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %374), !dbg !589
  %op.rdx.14 = add i32 %375, %op.rdx.13, !dbg !589
    #dbg_value(i32 %op.rdx.14, !444, !DIExpression(), !585)
    #dbg_value(i64 8, !447, !DIExpression(), !588)
  %add.ptr.i120.14 = getelementptr inbounds i8, ptr %fenc, i64 240, !dbg !590
    #dbg_value(ptr %add.ptr.i120.14, !440, !DIExpression(), !585)
  %add.ptr9.i121.14 = getelementptr inbounds i8, ptr %add.ptr9.i121.13, i64 %idx.ext8.i, !dbg !590
    #dbg_value(ptr %add.ptr9.i121.14, !442, !DIExpression(), !585)
    #dbg_value(i32 15, !445, !DIExpression(), !587)
    #dbg_value(i32 poison, !444, !DIExpression(), !585)
    #dbg_value(i64 7, !447, !DIExpression(), !588)
  %376 = load <8 x i8>, ptr %add.ptr.i120.14, align 1, !dbg !589
  %377 = zext <8 x i8> %376 to <8 x i16>, !dbg !589
  %378 = load <8 x i8>, ptr %add.ptr9.i121.14, align 1, !dbg !589
  %379 = zext <8 x i8> %378 to <8 x i16>, !dbg !589
  %380 = sub nsw <8 x i16> %377, %379, !dbg !589
  %381 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %380, i1 false), !dbg !589
  %382 = zext <8 x i16> %381 to <8 x i32>, !dbg !589
  %383 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %382), !dbg !589
  %op.rdx.15 = add i32 %383, %op.rdx.14, !dbg !589
    #dbg_value(i32 %op.rdx.15, !444, !DIExpression(), !585)
    #dbg_value(i64 8, !447, !DIExpression(), !588)
    #dbg_value(ptr %add.ptr.i120.14, !440, !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value), !585)
    #dbg_value(!DIArgList(ptr %add.ptr9.i121.14, i64 %idx.ext8.i), !442, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !585)
    #dbg_value(i32 16, !445, !DIExpression(), !587)
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !578
  store i32 %op.rdx.15, ptr %arrayidx4, align 4, !dbg !578
  ret void, !dbg !578
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @x264_pixel_sad_x3_8x8(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #7 !dbg !591 {
entry:
    #dbg_value(ptr %fenc, !593, !DIExpression(), !599)
    #dbg_value(ptr %pix0, !594, !DIExpression(), !599)
    #dbg_value(ptr %pix1, !595, !DIExpression(), !599)
    #dbg_value(ptr %pix2, !596, !DIExpression(), !599)
    #dbg_value(i32 %i_stride, !597, !DIExpression(), !599)
    #dbg_value(ptr %scores, !598, !DIExpression(), !599)
    #dbg_value(ptr %fenc, !461, !DIExpression(), !600)
    #dbg_value(i32 16, !462, !DIExpression(), !600)
    #dbg_value(ptr %pix0, !463, !DIExpression(), !600)
    #dbg_value(i32 %i_stride, !464, !DIExpression(), !600)
    #dbg_value(i32 0, !465, !DIExpression(), !600)
    #dbg_value(i32 0, !466, !DIExpression(), !602)
  %idx.ext8.i = sext i32 %i_stride to i64
    #dbg_value(i32 0, !466, !DIExpression(), !602)
    #dbg_value(i32 0, !465, !DIExpression(), !600)
    #dbg_value(ptr %fenc, !461, !DIExpression(), !600)
    #dbg_value(ptr %pix0, !463, !DIExpression(), !600)
    #dbg_value(i32 0, !466, !DIExpression(), !602)
    #dbg_value(ptr %fenc, !461, !DIExpression(), !600)
    #dbg_value(ptr %pix0, !463, !DIExpression(), !600)
    #dbg_value(i32 poison, !465, !DIExpression(), !600)
    #dbg_value(i64 7, !468, !DIExpression(), !603)
  %0 = load <8 x i8>, ptr %fenc, align 1, !dbg !604
  %1 = zext <8 x i8> %0 to <8 x i16>, !dbg !604
  %2 = load <8 x i8>, ptr %pix0, align 1, !dbg !604
  %3 = zext <8 x i8> %2 to <8 x i16>, !dbg !604
  %4 = sub nsw <8 x i16> %1, %3, !dbg !604
  %5 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %4, i1 false), !dbg !604
  %6 = zext <8 x i16> %5 to <8 x i32>, !dbg !604
  %7 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %6), !dbg !604
    #dbg_value(i32 %7, !465, !DIExpression(), !600)
    #dbg_value(i64 8, !468, !DIExpression(), !603)
  %add.ptr.i = getelementptr inbounds i8, ptr %fenc, i64 16, !dbg !605
    #dbg_value(ptr %add.ptr.i, !461, !DIExpression(), !600)
  %add.ptr9.i = getelementptr inbounds i8, ptr %pix0, i64 %idx.ext8.i, !dbg !605
    #dbg_value(ptr %add.ptr9.i, !463, !DIExpression(), !600)
    #dbg_value(i32 1, !466, !DIExpression(), !602)
    #dbg_value(i32 poison, !465, !DIExpression(), !600)
    #dbg_value(i64 7, !468, !DIExpression(), !603)
  %8 = load <8 x i8>, ptr %add.ptr.i, align 1, !dbg !604
  %9 = zext <8 x i8> %8 to <8 x i16>, !dbg !604
  %10 = load <8 x i8>, ptr %add.ptr9.i, align 1, !dbg !604
  %11 = zext <8 x i8> %10 to <8 x i16>, !dbg !604
  %12 = sub nsw <8 x i16> %9, %11, !dbg !604
  %13 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %12, i1 false), !dbg !604
  %14 = zext <8 x i16> %13 to <8 x i32>, !dbg !604
  %15 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %14), !dbg !604
  %op.rdx126.1 = add i32 %15, %7, !dbg !604
    #dbg_value(i32 %op.rdx126.1, !465, !DIExpression(), !600)
    #dbg_value(i64 8, !468, !DIExpression(), !603)
  %add.ptr.i.1 = getelementptr inbounds i8, ptr %fenc, i64 32, !dbg !605
    #dbg_value(ptr %add.ptr.i.1, !461, !DIExpression(), !600)
  %add.ptr9.i.1 = getelementptr inbounds i8, ptr %add.ptr9.i, i64 %idx.ext8.i, !dbg !605
    #dbg_value(ptr %add.ptr9.i.1, !463, !DIExpression(), !600)
    #dbg_value(i32 2, !466, !DIExpression(), !602)
    #dbg_value(i32 poison, !465, !DIExpression(), !600)
    #dbg_value(i64 7, !468, !DIExpression(), !603)
  %16 = load <8 x i8>, ptr %add.ptr.i.1, align 1, !dbg !604
  %17 = zext <8 x i8> %16 to <8 x i16>, !dbg !604
  %18 = load <8 x i8>, ptr %add.ptr9.i.1, align 1, !dbg !604
  %19 = zext <8 x i8> %18 to <8 x i16>, !dbg !604
  %20 = sub nsw <8 x i16> %17, %19, !dbg !604
  %21 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %20, i1 false), !dbg !604
  %22 = zext <8 x i16> %21 to <8 x i32>, !dbg !604
  %23 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %22), !dbg !604
  %op.rdx126.2 = add i32 %23, %op.rdx126.1, !dbg !604
    #dbg_value(i32 %op.rdx126.2, !465, !DIExpression(), !600)
    #dbg_value(i64 8, !468, !DIExpression(), !603)
  %add.ptr.i.2 = getelementptr inbounds i8, ptr %fenc, i64 48, !dbg !605
    #dbg_value(ptr %add.ptr.i.2, !461, !DIExpression(), !600)
  %add.ptr9.i.2 = getelementptr inbounds i8, ptr %add.ptr9.i.1, i64 %idx.ext8.i, !dbg !605
    #dbg_value(ptr %add.ptr9.i.2, !463, !DIExpression(), !600)
    #dbg_value(i32 3, !466, !DIExpression(), !602)
    #dbg_value(i32 poison, !465, !DIExpression(), !600)
    #dbg_value(i64 7, !468, !DIExpression(), !603)
  %24 = load <8 x i8>, ptr %add.ptr.i.2, align 1, !dbg !604
  %25 = zext <8 x i8> %24 to <8 x i16>, !dbg !604
  %26 = load <8 x i8>, ptr %add.ptr9.i.2, align 1, !dbg !604
  %27 = zext <8 x i8> %26 to <8 x i16>, !dbg !604
  %28 = sub nsw <8 x i16> %25, %27, !dbg !604
  %29 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %28, i1 false), !dbg !604
  %30 = zext <8 x i16> %29 to <8 x i32>, !dbg !604
  %31 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %30), !dbg !604
  %op.rdx126.3 = add i32 %31, %op.rdx126.2, !dbg !604
    #dbg_value(i32 %op.rdx126.3, !465, !DIExpression(), !600)
    #dbg_value(i64 8, !468, !DIExpression(), !603)
  %add.ptr.i.3 = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !605
    #dbg_value(ptr %add.ptr.i.3, !461, !DIExpression(), !600)
  %add.ptr9.i.3 = getelementptr inbounds i8, ptr %add.ptr9.i.2, i64 %idx.ext8.i, !dbg !605
    #dbg_value(ptr %add.ptr9.i.3, !463, !DIExpression(), !600)
    #dbg_value(i32 4, !466, !DIExpression(), !602)
    #dbg_value(i32 poison, !465, !DIExpression(), !600)
    #dbg_value(i64 7, !468, !DIExpression(), !603)
  %32 = load <8 x i8>, ptr %add.ptr.i.3, align 1, !dbg !604
  %33 = zext <8 x i8> %32 to <8 x i16>, !dbg !604
  %34 = load <8 x i8>, ptr %add.ptr9.i.3, align 1, !dbg !604
  %35 = zext <8 x i8> %34 to <8 x i16>, !dbg !604
  %36 = sub nsw <8 x i16> %33, %35, !dbg !604
  %37 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %36, i1 false), !dbg !604
  %38 = zext <8 x i16> %37 to <8 x i32>, !dbg !604
  %39 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %38), !dbg !604
  %op.rdx126.4 = add i32 %39, %op.rdx126.3, !dbg !604
    #dbg_value(i32 %op.rdx126.4, !465, !DIExpression(), !600)
    #dbg_value(i64 8, !468, !DIExpression(), !603)
  %add.ptr.i.4 = getelementptr inbounds i8, ptr %fenc, i64 80, !dbg !605
    #dbg_value(ptr %add.ptr.i.4, !461, !DIExpression(), !600)
  %add.ptr9.i.4 = getelementptr inbounds i8, ptr %add.ptr9.i.3, i64 %idx.ext8.i, !dbg !605
    #dbg_value(ptr %add.ptr9.i.4, !463, !DIExpression(), !600)
    #dbg_value(i32 5, !466, !DIExpression(), !602)
    #dbg_value(i32 poison, !465, !DIExpression(), !600)
    #dbg_value(i64 7, !468, !DIExpression(), !603)
  %40 = load <8 x i8>, ptr %add.ptr.i.4, align 1, !dbg !604
  %41 = zext <8 x i8> %40 to <8 x i16>, !dbg !604
  %42 = load <8 x i8>, ptr %add.ptr9.i.4, align 1, !dbg !604
  %43 = zext <8 x i8> %42 to <8 x i16>, !dbg !604
  %44 = sub nsw <8 x i16> %41, %43, !dbg !604
  %45 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %44, i1 false), !dbg !604
  %46 = zext <8 x i16> %45 to <8 x i32>, !dbg !604
  %47 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %46), !dbg !604
  %op.rdx126.5 = add i32 %47, %op.rdx126.4, !dbg !604
    #dbg_value(i32 %op.rdx126.5, !465, !DIExpression(), !600)
    #dbg_value(i64 8, !468, !DIExpression(), !603)
  %add.ptr.i.5 = getelementptr inbounds i8, ptr %fenc, i64 96, !dbg !605
    #dbg_value(ptr %add.ptr.i.5, !461, !DIExpression(), !600)
  %add.ptr9.i.5 = getelementptr inbounds i8, ptr %add.ptr9.i.4, i64 %idx.ext8.i, !dbg !605
    #dbg_value(ptr %add.ptr9.i.5, !463, !DIExpression(), !600)
    #dbg_value(i32 6, !466, !DIExpression(), !602)
    #dbg_value(i32 poison, !465, !DIExpression(), !600)
    #dbg_value(i64 7, !468, !DIExpression(), !603)
  %48 = load <8 x i8>, ptr %add.ptr.i.5, align 1, !dbg !604
  %49 = zext <8 x i8> %48 to <8 x i16>, !dbg !604
  %50 = load <8 x i8>, ptr %add.ptr9.i.5, align 1, !dbg !604
  %51 = zext <8 x i8> %50 to <8 x i16>, !dbg !604
  %52 = sub nsw <8 x i16> %49, %51, !dbg !604
  %53 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %52, i1 false), !dbg !604
  %54 = zext <8 x i16> %53 to <8 x i32>, !dbg !604
  %55 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %54), !dbg !604
  %op.rdx126.6 = add i32 %55, %op.rdx126.5, !dbg !604
    #dbg_value(i32 %op.rdx126.6, !465, !DIExpression(), !600)
    #dbg_value(i64 8, !468, !DIExpression(), !603)
  %add.ptr.i.6 = getelementptr inbounds i8, ptr %fenc, i64 112, !dbg !605
    #dbg_value(ptr %add.ptr.i.6, !461, !DIExpression(), !600)
  %add.ptr9.i.6 = getelementptr inbounds i8, ptr %add.ptr9.i.5, i64 %idx.ext8.i, !dbg !605
    #dbg_value(ptr %add.ptr9.i.6, !463, !DIExpression(), !600)
    #dbg_value(i32 7, !466, !DIExpression(), !602)
    #dbg_value(i32 poison, !465, !DIExpression(), !600)
    #dbg_value(i64 7, !468, !DIExpression(), !603)
  %56 = load <8 x i8>, ptr %add.ptr.i.6, align 1, !dbg !604
  %57 = zext <8 x i8> %56 to <8 x i16>, !dbg !604
  %58 = load <8 x i8>, ptr %add.ptr9.i.6, align 1, !dbg !604
  %59 = zext <8 x i8> %58 to <8 x i16>, !dbg !604
  %60 = sub nsw <8 x i16> %57, %59, !dbg !604
  %61 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %60, i1 false), !dbg !604
  %62 = zext <8 x i16> %61 to <8 x i32>, !dbg !604
  %63 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %62), !dbg !604
  %op.rdx126.7 = add i32 %63, %op.rdx126.6, !dbg !604
    #dbg_value(i32 %op.rdx126.7, !465, !DIExpression(), !600)
    #dbg_value(i64 8, !468, !DIExpression(), !603)
    #dbg_value(ptr %add.ptr.i.6, !461, !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value), !600)
    #dbg_value(!DIArgList(ptr %add.ptr9.i.6, i64 %idx.ext8.i), !463, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !600)
    #dbg_value(i32 8, !466, !DIExpression(), !602)
  store i32 %op.rdx126.7, ptr %scores, align 4, !dbg !606
    #dbg_value(i32 16, !462, !DIExpression(), !607)
    #dbg_value(i32 %i_stride, !464, !DIExpression(), !607)
    #dbg_value(i32 0, !466, !DIExpression(), !609)
    #dbg_value(i32 0, !465, !DIExpression(), !607)
    #dbg_value(ptr %fenc, !461, !DIExpression(), !607)
    #dbg_value(ptr %pix1, !463, !DIExpression(), !607)
    #dbg_value(i32 0, !466, !DIExpression(), !609)
    #dbg_value(ptr %fenc, !461, !DIExpression(), !607)
    #dbg_value(ptr %pix1, !463, !DIExpression(), !607)
    #dbg_value(i32 poison, !465, !DIExpression(), !607)
    #dbg_value(i64 7, !468, !DIExpression(), !610)
  %64 = load <8 x i8>, ptr %fenc, align 1, !dbg !611
  %65 = zext <8 x i8> %64 to <8 x i16>, !dbg !611
  %66 = load <8 x i8>, ptr %pix1, align 1, !dbg !611
  %67 = zext <8 x i8> %66 to <8 x i16>, !dbg !611
  %68 = sub nsw <8 x i16> %65, %67, !dbg !611
  %69 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %68, i1 false), !dbg !611
  %70 = zext <8 x i16> %69 to <8 x i32>, !dbg !611
  %71 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %70), !dbg !611
    #dbg_value(i32 %71, !465, !DIExpression(), !607)
    #dbg_value(i64 8, !468, !DIExpression(), !610)
  %add.ptr.i63 = getelementptr inbounds i8, ptr %fenc, i64 16, !dbg !612
    #dbg_value(ptr %add.ptr.i63, !461, !DIExpression(), !607)
  %add.ptr9.i64 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext8.i, !dbg !612
    #dbg_value(ptr %add.ptr9.i64, !463, !DIExpression(), !607)
    #dbg_value(i32 1, !466, !DIExpression(), !609)
    #dbg_value(i32 poison, !465, !DIExpression(), !607)
    #dbg_value(i64 7, !468, !DIExpression(), !610)
  %72 = load <8 x i8>, ptr %add.ptr.i63, align 1, !dbg !611
  %73 = zext <8 x i8> %72 to <8 x i16>, !dbg !611
  %74 = load <8 x i8>, ptr %add.ptr9.i64, align 1, !dbg !611
  %75 = zext <8 x i8> %74 to <8 x i16>, !dbg !611
  %76 = sub nsw <8 x i16> %73, %75, !dbg !611
  %77 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %76, i1 false), !dbg !611
  %78 = zext <8 x i16> %77 to <8 x i32>, !dbg !611
  %79 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %78), !dbg !611
  %op.rdx125.1 = add i32 %79, %71, !dbg !611
    #dbg_value(i32 %op.rdx125.1, !465, !DIExpression(), !607)
    #dbg_value(i64 8, !468, !DIExpression(), !610)
  %add.ptr.i63.1 = getelementptr inbounds i8, ptr %fenc, i64 32, !dbg !612
    #dbg_value(ptr %add.ptr.i63.1, !461, !DIExpression(), !607)
  %add.ptr9.i64.1 = getelementptr inbounds i8, ptr %add.ptr9.i64, i64 %idx.ext8.i, !dbg !612
    #dbg_value(ptr %add.ptr9.i64.1, !463, !DIExpression(), !607)
    #dbg_value(i32 2, !466, !DIExpression(), !609)
    #dbg_value(i32 poison, !465, !DIExpression(), !607)
    #dbg_value(i64 7, !468, !DIExpression(), !610)
  %80 = load <8 x i8>, ptr %add.ptr.i63.1, align 1, !dbg !611
  %81 = zext <8 x i8> %80 to <8 x i16>, !dbg !611
  %82 = load <8 x i8>, ptr %add.ptr9.i64.1, align 1, !dbg !611
  %83 = zext <8 x i8> %82 to <8 x i16>, !dbg !611
  %84 = sub nsw <8 x i16> %81, %83, !dbg !611
  %85 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %84, i1 false), !dbg !611
  %86 = zext <8 x i16> %85 to <8 x i32>, !dbg !611
  %87 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %86), !dbg !611
  %op.rdx125.2 = add i32 %87, %op.rdx125.1, !dbg !611
    #dbg_value(i32 %op.rdx125.2, !465, !DIExpression(), !607)
    #dbg_value(i64 8, !468, !DIExpression(), !610)
  %add.ptr.i63.2 = getelementptr inbounds i8, ptr %fenc, i64 48, !dbg !612
    #dbg_value(ptr %add.ptr.i63.2, !461, !DIExpression(), !607)
  %add.ptr9.i64.2 = getelementptr inbounds i8, ptr %add.ptr9.i64.1, i64 %idx.ext8.i, !dbg !612
    #dbg_value(ptr %add.ptr9.i64.2, !463, !DIExpression(), !607)
    #dbg_value(i32 3, !466, !DIExpression(), !609)
    #dbg_value(i32 poison, !465, !DIExpression(), !607)
    #dbg_value(i64 7, !468, !DIExpression(), !610)
  %88 = load <8 x i8>, ptr %add.ptr.i63.2, align 1, !dbg !611
  %89 = zext <8 x i8> %88 to <8 x i16>, !dbg !611
  %90 = load <8 x i8>, ptr %add.ptr9.i64.2, align 1, !dbg !611
  %91 = zext <8 x i8> %90 to <8 x i16>, !dbg !611
  %92 = sub nsw <8 x i16> %89, %91, !dbg !611
  %93 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %92, i1 false), !dbg !611
  %94 = zext <8 x i16> %93 to <8 x i32>, !dbg !611
  %95 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %94), !dbg !611
  %op.rdx125.3 = add i32 %95, %op.rdx125.2, !dbg !611
    #dbg_value(i32 %op.rdx125.3, !465, !DIExpression(), !607)
    #dbg_value(i64 8, !468, !DIExpression(), !610)
  %add.ptr.i63.3 = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !612
    #dbg_value(ptr %add.ptr.i63.3, !461, !DIExpression(), !607)
  %add.ptr9.i64.3 = getelementptr inbounds i8, ptr %add.ptr9.i64.2, i64 %idx.ext8.i, !dbg !612
    #dbg_value(ptr %add.ptr9.i64.3, !463, !DIExpression(), !607)
    #dbg_value(i32 4, !466, !DIExpression(), !609)
    #dbg_value(i32 poison, !465, !DIExpression(), !607)
    #dbg_value(i64 7, !468, !DIExpression(), !610)
  %96 = load <8 x i8>, ptr %add.ptr.i63.3, align 1, !dbg !611
  %97 = zext <8 x i8> %96 to <8 x i16>, !dbg !611
  %98 = load <8 x i8>, ptr %add.ptr9.i64.3, align 1, !dbg !611
  %99 = zext <8 x i8> %98 to <8 x i16>, !dbg !611
  %100 = sub nsw <8 x i16> %97, %99, !dbg !611
  %101 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %100, i1 false), !dbg !611
  %102 = zext <8 x i16> %101 to <8 x i32>, !dbg !611
  %103 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %102), !dbg !611
  %op.rdx125.4 = add i32 %103, %op.rdx125.3, !dbg !611
    #dbg_value(i32 %op.rdx125.4, !465, !DIExpression(), !607)
    #dbg_value(i64 8, !468, !DIExpression(), !610)
  %add.ptr.i63.4 = getelementptr inbounds i8, ptr %fenc, i64 80, !dbg !612
    #dbg_value(ptr %add.ptr.i63.4, !461, !DIExpression(), !607)
  %add.ptr9.i64.4 = getelementptr inbounds i8, ptr %add.ptr9.i64.3, i64 %idx.ext8.i, !dbg !612
    #dbg_value(ptr %add.ptr9.i64.4, !463, !DIExpression(), !607)
    #dbg_value(i32 5, !466, !DIExpression(), !609)
    #dbg_value(i32 poison, !465, !DIExpression(), !607)
    #dbg_value(i64 7, !468, !DIExpression(), !610)
  %104 = load <8 x i8>, ptr %add.ptr.i63.4, align 1, !dbg !611
  %105 = zext <8 x i8> %104 to <8 x i16>, !dbg !611
  %106 = load <8 x i8>, ptr %add.ptr9.i64.4, align 1, !dbg !611
  %107 = zext <8 x i8> %106 to <8 x i16>, !dbg !611
  %108 = sub nsw <8 x i16> %105, %107, !dbg !611
  %109 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %108, i1 false), !dbg !611
  %110 = zext <8 x i16> %109 to <8 x i32>, !dbg !611
  %111 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %110), !dbg !611
  %op.rdx125.5 = add i32 %111, %op.rdx125.4, !dbg !611
    #dbg_value(i32 %op.rdx125.5, !465, !DIExpression(), !607)
    #dbg_value(i64 8, !468, !DIExpression(), !610)
  %add.ptr.i63.5 = getelementptr inbounds i8, ptr %fenc, i64 96, !dbg !612
    #dbg_value(ptr %add.ptr.i63.5, !461, !DIExpression(), !607)
  %add.ptr9.i64.5 = getelementptr inbounds i8, ptr %add.ptr9.i64.4, i64 %idx.ext8.i, !dbg !612
    #dbg_value(ptr %add.ptr9.i64.5, !463, !DIExpression(), !607)
    #dbg_value(i32 6, !466, !DIExpression(), !609)
    #dbg_value(i32 poison, !465, !DIExpression(), !607)
    #dbg_value(i64 7, !468, !DIExpression(), !610)
  %112 = load <8 x i8>, ptr %add.ptr.i63.5, align 1, !dbg !611
  %113 = zext <8 x i8> %112 to <8 x i16>, !dbg !611
  %114 = load <8 x i8>, ptr %add.ptr9.i64.5, align 1, !dbg !611
  %115 = zext <8 x i8> %114 to <8 x i16>, !dbg !611
  %116 = sub nsw <8 x i16> %113, %115, !dbg !611
  %117 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %116, i1 false), !dbg !611
  %118 = zext <8 x i16> %117 to <8 x i32>, !dbg !611
  %119 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %118), !dbg !611
  %op.rdx125.6 = add i32 %119, %op.rdx125.5, !dbg !611
    #dbg_value(i32 %op.rdx125.6, !465, !DIExpression(), !607)
    #dbg_value(i64 8, !468, !DIExpression(), !610)
  %add.ptr.i63.6 = getelementptr inbounds i8, ptr %fenc, i64 112, !dbg !612
    #dbg_value(ptr %add.ptr.i63.6, !461, !DIExpression(), !607)
  %add.ptr9.i64.6 = getelementptr inbounds i8, ptr %add.ptr9.i64.5, i64 %idx.ext8.i, !dbg !612
    #dbg_value(ptr %add.ptr9.i64.6, !463, !DIExpression(), !607)
    #dbg_value(i32 7, !466, !DIExpression(), !609)
    #dbg_value(i32 poison, !465, !DIExpression(), !607)
    #dbg_value(i64 7, !468, !DIExpression(), !610)
  %120 = load <8 x i8>, ptr %add.ptr.i63.6, align 1, !dbg !611
  %121 = zext <8 x i8> %120 to <8 x i16>, !dbg !611
  %122 = load <8 x i8>, ptr %add.ptr9.i64.6, align 1, !dbg !611
  %123 = zext <8 x i8> %122 to <8 x i16>, !dbg !611
  %124 = sub nsw <8 x i16> %121, %123, !dbg !611
  %125 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %124, i1 false), !dbg !611
  %126 = zext <8 x i16> %125 to <8 x i32>, !dbg !611
  %127 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %126), !dbg !611
  %op.rdx125.7 = add i32 %127, %op.rdx125.6, !dbg !611
    #dbg_value(i32 %op.rdx125.7, !465, !DIExpression(), !607)
    #dbg_value(i64 8, !468, !DIExpression(), !610)
    #dbg_value(ptr %add.ptr.i63.6, !461, !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value), !607)
    #dbg_value(!DIArgList(ptr %add.ptr9.i64.6, i64 %idx.ext8.i), !463, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !607)
    #dbg_value(i32 8, !466, !DIExpression(), !609)
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !606
  store i32 %op.rdx125.7, ptr %arrayidx2, align 4, !dbg !606
    #dbg_value(i32 16, !462, !DIExpression(), !613)
    #dbg_value(i32 %i_stride, !464, !DIExpression(), !613)
    #dbg_value(i32 0, !466, !DIExpression(), !615)
    #dbg_value(i32 0, !465, !DIExpression(), !613)
    #dbg_value(ptr %fenc, !461, !DIExpression(), !613)
    #dbg_value(ptr %pix2, !463, !DIExpression(), !613)
    #dbg_value(i32 0, !466, !DIExpression(), !615)
    #dbg_value(ptr %fenc, !461, !DIExpression(), !613)
    #dbg_value(ptr %pix2, !463, !DIExpression(), !613)
    #dbg_value(i32 poison, !465, !DIExpression(), !613)
    #dbg_value(i64 7, !468, !DIExpression(), !616)
  %128 = load <8 x i8>, ptr %fenc, align 1, !dbg !617
  %129 = zext <8 x i8> %128 to <8 x i16>, !dbg !617
  %130 = load <8 x i8>, ptr %pix2, align 1, !dbg !617
  %131 = zext <8 x i8> %130 to <8 x i16>, !dbg !617
  %132 = sub nsw <8 x i16> %129, %131, !dbg !617
  %133 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %132, i1 false), !dbg !617
  %134 = zext <8 x i16> %133 to <8 x i32>, !dbg !617
  %135 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %134), !dbg !617
    #dbg_value(i32 %135, !465, !DIExpression(), !613)
    #dbg_value(i64 8, !468, !DIExpression(), !616)
  %add.ptr.i120 = getelementptr inbounds i8, ptr %fenc, i64 16, !dbg !618
    #dbg_value(ptr %add.ptr.i120, !461, !DIExpression(), !613)
  %add.ptr9.i121 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext8.i, !dbg !618
    #dbg_value(ptr %add.ptr9.i121, !463, !DIExpression(), !613)
    #dbg_value(i32 1, !466, !DIExpression(), !615)
    #dbg_value(i32 poison, !465, !DIExpression(), !613)
    #dbg_value(i64 7, !468, !DIExpression(), !616)
  %136 = load <8 x i8>, ptr %add.ptr.i120, align 1, !dbg !617
  %137 = zext <8 x i8> %136 to <8 x i16>, !dbg !617
  %138 = load <8 x i8>, ptr %add.ptr9.i121, align 1, !dbg !617
  %139 = zext <8 x i8> %138 to <8 x i16>, !dbg !617
  %140 = sub nsw <8 x i16> %137, %139, !dbg !617
  %141 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %140, i1 false), !dbg !617
  %142 = zext <8 x i16> %141 to <8 x i32>, !dbg !617
  %143 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %142), !dbg !617
  %op.rdx.1 = add i32 %143, %135, !dbg !617
    #dbg_value(i32 %op.rdx.1, !465, !DIExpression(), !613)
    #dbg_value(i64 8, !468, !DIExpression(), !616)
  %add.ptr.i120.1 = getelementptr inbounds i8, ptr %fenc, i64 32, !dbg !618
    #dbg_value(ptr %add.ptr.i120.1, !461, !DIExpression(), !613)
  %add.ptr9.i121.1 = getelementptr inbounds i8, ptr %add.ptr9.i121, i64 %idx.ext8.i, !dbg !618
    #dbg_value(ptr %add.ptr9.i121.1, !463, !DIExpression(), !613)
    #dbg_value(i32 2, !466, !DIExpression(), !615)
    #dbg_value(i32 poison, !465, !DIExpression(), !613)
    #dbg_value(i64 7, !468, !DIExpression(), !616)
  %144 = load <8 x i8>, ptr %add.ptr.i120.1, align 1, !dbg !617
  %145 = zext <8 x i8> %144 to <8 x i16>, !dbg !617
  %146 = load <8 x i8>, ptr %add.ptr9.i121.1, align 1, !dbg !617
  %147 = zext <8 x i8> %146 to <8 x i16>, !dbg !617
  %148 = sub nsw <8 x i16> %145, %147, !dbg !617
  %149 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %148, i1 false), !dbg !617
  %150 = zext <8 x i16> %149 to <8 x i32>, !dbg !617
  %151 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %150), !dbg !617
  %op.rdx.2 = add i32 %151, %op.rdx.1, !dbg !617
    #dbg_value(i32 %op.rdx.2, !465, !DIExpression(), !613)
    #dbg_value(i64 8, !468, !DIExpression(), !616)
  %add.ptr.i120.2 = getelementptr inbounds i8, ptr %fenc, i64 48, !dbg !618
    #dbg_value(ptr %add.ptr.i120.2, !461, !DIExpression(), !613)
  %add.ptr9.i121.2 = getelementptr inbounds i8, ptr %add.ptr9.i121.1, i64 %idx.ext8.i, !dbg !618
    #dbg_value(ptr %add.ptr9.i121.2, !463, !DIExpression(), !613)
    #dbg_value(i32 3, !466, !DIExpression(), !615)
    #dbg_value(i32 poison, !465, !DIExpression(), !613)
    #dbg_value(i64 7, !468, !DIExpression(), !616)
  %152 = load <8 x i8>, ptr %add.ptr.i120.2, align 1, !dbg !617
  %153 = zext <8 x i8> %152 to <8 x i16>, !dbg !617
  %154 = load <8 x i8>, ptr %add.ptr9.i121.2, align 1, !dbg !617
  %155 = zext <8 x i8> %154 to <8 x i16>, !dbg !617
  %156 = sub nsw <8 x i16> %153, %155, !dbg !617
  %157 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %156, i1 false), !dbg !617
  %158 = zext <8 x i16> %157 to <8 x i32>, !dbg !617
  %159 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %158), !dbg !617
  %op.rdx.3 = add i32 %159, %op.rdx.2, !dbg !617
    #dbg_value(i32 %op.rdx.3, !465, !DIExpression(), !613)
    #dbg_value(i64 8, !468, !DIExpression(), !616)
  %add.ptr.i120.3 = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !618
    #dbg_value(ptr %add.ptr.i120.3, !461, !DIExpression(), !613)
  %add.ptr9.i121.3 = getelementptr inbounds i8, ptr %add.ptr9.i121.2, i64 %idx.ext8.i, !dbg !618
    #dbg_value(ptr %add.ptr9.i121.3, !463, !DIExpression(), !613)
    #dbg_value(i32 4, !466, !DIExpression(), !615)
    #dbg_value(i32 poison, !465, !DIExpression(), !613)
    #dbg_value(i64 7, !468, !DIExpression(), !616)
  %160 = load <8 x i8>, ptr %add.ptr.i120.3, align 1, !dbg !617
  %161 = zext <8 x i8> %160 to <8 x i16>, !dbg !617
  %162 = load <8 x i8>, ptr %add.ptr9.i121.3, align 1, !dbg !617
  %163 = zext <8 x i8> %162 to <8 x i16>, !dbg !617
  %164 = sub nsw <8 x i16> %161, %163, !dbg !617
  %165 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %164, i1 false), !dbg !617
  %166 = zext <8 x i16> %165 to <8 x i32>, !dbg !617
  %167 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %166), !dbg !617
  %op.rdx.4 = add i32 %167, %op.rdx.3, !dbg !617
    #dbg_value(i32 %op.rdx.4, !465, !DIExpression(), !613)
    #dbg_value(i64 8, !468, !DIExpression(), !616)
  %add.ptr.i120.4 = getelementptr inbounds i8, ptr %fenc, i64 80, !dbg !618
    #dbg_value(ptr %add.ptr.i120.4, !461, !DIExpression(), !613)
  %add.ptr9.i121.4 = getelementptr inbounds i8, ptr %add.ptr9.i121.3, i64 %idx.ext8.i, !dbg !618
    #dbg_value(ptr %add.ptr9.i121.4, !463, !DIExpression(), !613)
    #dbg_value(i32 5, !466, !DIExpression(), !615)
    #dbg_value(i32 poison, !465, !DIExpression(), !613)
    #dbg_value(i64 7, !468, !DIExpression(), !616)
  %168 = load <8 x i8>, ptr %add.ptr.i120.4, align 1, !dbg !617
  %169 = zext <8 x i8> %168 to <8 x i16>, !dbg !617
  %170 = load <8 x i8>, ptr %add.ptr9.i121.4, align 1, !dbg !617
  %171 = zext <8 x i8> %170 to <8 x i16>, !dbg !617
  %172 = sub nsw <8 x i16> %169, %171, !dbg !617
  %173 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %172, i1 false), !dbg !617
  %174 = zext <8 x i16> %173 to <8 x i32>, !dbg !617
  %175 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %174), !dbg !617
  %op.rdx.5 = add i32 %175, %op.rdx.4, !dbg !617
    #dbg_value(i32 %op.rdx.5, !465, !DIExpression(), !613)
    #dbg_value(i64 8, !468, !DIExpression(), !616)
  %add.ptr.i120.5 = getelementptr inbounds i8, ptr %fenc, i64 96, !dbg !618
    #dbg_value(ptr %add.ptr.i120.5, !461, !DIExpression(), !613)
  %add.ptr9.i121.5 = getelementptr inbounds i8, ptr %add.ptr9.i121.4, i64 %idx.ext8.i, !dbg !618
    #dbg_value(ptr %add.ptr9.i121.5, !463, !DIExpression(), !613)
    #dbg_value(i32 6, !466, !DIExpression(), !615)
    #dbg_value(i32 poison, !465, !DIExpression(), !613)
    #dbg_value(i64 7, !468, !DIExpression(), !616)
  %176 = load <8 x i8>, ptr %add.ptr.i120.5, align 1, !dbg !617
  %177 = zext <8 x i8> %176 to <8 x i16>, !dbg !617
  %178 = load <8 x i8>, ptr %add.ptr9.i121.5, align 1, !dbg !617
  %179 = zext <8 x i8> %178 to <8 x i16>, !dbg !617
  %180 = sub nsw <8 x i16> %177, %179, !dbg !617
  %181 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %180, i1 false), !dbg !617
  %182 = zext <8 x i16> %181 to <8 x i32>, !dbg !617
  %183 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %182), !dbg !617
  %op.rdx.6 = add i32 %183, %op.rdx.5, !dbg !617
    #dbg_value(i32 %op.rdx.6, !465, !DIExpression(), !613)
    #dbg_value(i64 8, !468, !DIExpression(), !616)
  %add.ptr.i120.6 = getelementptr inbounds i8, ptr %fenc, i64 112, !dbg !618
    #dbg_value(ptr %add.ptr.i120.6, !461, !DIExpression(), !613)
  %add.ptr9.i121.6 = getelementptr inbounds i8, ptr %add.ptr9.i121.5, i64 %idx.ext8.i, !dbg !618
    #dbg_value(ptr %add.ptr9.i121.6, !463, !DIExpression(), !613)
    #dbg_value(i32 7, !466, !DIExpression(), !615)
    #dbg_value(i32 poison, !465, !DIExpression(), !613)
    #dbg_value(i64 7, !468, !DIExpression(), !616)
  %184 = load <8 x i8>, ptr %add.ptr.i120.6, align 1, !dbg !617
  %185 = zext <8 x i8> %184 to <8 x i16>, !dbg !617
  %186 = load <8 x i8>, ptr %add.ptr9.i121.6, align 1, !dbg !617
  %187 = zext <8 x i8> %186 to <8 x i16>, !dbg !617
  %188 = sub nsw <8 x i16> %185, %187, !dbg !617
  %189 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %188, i1 false), !dbg !617
  %190 = zext <8 x i16> %189 to <8 x i32>, !dbg !617
  %191 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %190), !dbg !617
  %op.rdx.7 = add i32 %191, %op.rdx.6, !dbg !617
    #dbg_value(i32 %op.rdx.7, !465, !DIExpression(), !613)
    #dbg_value(i64 8, !468, !DIExpression(), !616)
    #dbg_value(ptr %add.ptr.i120.6, !461, !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value), !613)
    #dbg_value(!DIArgList(ptr %add.ptr9.i121.6, i64 %idx.ext8.i), !463, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !613)
    #dbg_value(i32 8, !466, !DIExpression(), !615)
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !606
  store i32 %op.rdx.7, ptr %arrayidx4, align 4, !dbg !606
  ret void, !dbg !606
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @x264_pixel_sad_x3_8x4(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #8 !dbg !619 {
entry:
    #dbg_value(ptr %fenc, !621, !DIExpression(), !627)
    #dbg_value(ptr %pix0, !622, !DIExpression(), !627)
    #dbg_value(ptr %pix1, !623, !DIExpression(), !627)
    #dbg_value(ptr %pix2, !624, !DIExpression(), !627)
    #dbg_value(i32 %i_stride, !625, !DIExpression(), !627)
    #dbg_value(ptr %scores, !626, !DIExpression(), !627)
  %call = tail call i32 @x264_pixel_sad_8x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix0, i32 noundef %i_stride), !dbg !628
  store i32 %call, ptr %scores, align 4, !dbg !628
  %call1 = tail call i32 @x264_pixel_sad_8x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix1, i32 noundef %i_stride), !dbg !628
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !628
  store i32 %call1, ptr %arrayidx2, align 4, !dbg !628
  %call3 = tail call i32 @x264_pixel_sad_8x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix2, i32 noundef %i_stride), !dbg !628
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !628
  store i32 %call3, ptr %arrayidx4, align 4, !dbg !628
  ret void, !dbg !628
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @x264_pixel_sad_x3_4x8(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #9 !dbg !629 {
entry:
    #dbg_value(ptr %fenc, !631, !DIExpression(), !637)
    #dbg_value(ptr %pix0, !632, !DIExpression(), !637)
    #dbg_value(ptr %pix1, !633, !DIExpression(), !637)
    #dbg_value(ptr %pix2, !634, !DIExpression(), !637)
    #dbg_value(i32 %i_stride, !635, !DIExpression(), !637)
    #dbg_value(ptr %scores, !636, !DIExpression(), !637)
  %call = tail call i32 @x264_pixel_sad_4x8(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix0, i32 noundef %i_stride), !dbg !638
  store i32 %call, ptr %scores, align 4, !dbg !638
  %call1 = tail call i32 @x264_pixel_sad_4x8(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix1, i32 noundef %i_stride), !dbg !638
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !638
  store i32 %call1, ptr %arrayidx2, align 4, !dbg !638
  %call3 = tail call i32 @x264_pixel_sad_4x8(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix2, i32 noundef %i_stride), !dbg !638
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !638
  store i32 %call3, ptr %arrayidx4, align 4, !dbg !638
  ret void, !dbg !638
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @x264_pixel_sad_x3_4x4(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #8 !dbg !639 {
entry:
    #dbg_value(ptr %fenc, !641, !DIExpression(), !647)
    #dbg_value(ptr %pix0, !642, !DIExpression(), !647)
    #dbg_value(ptr %pix1, !643, !DIExpression(), !647)
    #dbg_value(ptr %pix2, !644, !DIExpression(), !647)
    #dbg_value(i32 %i_stride, !645, !DIExpression(), !647)
    #dbg_value(ptr %scores, !646, !DIExpression(), !647)
    #dbg_value(ptr %fenc, !524, !DIExpression(), !648)
    #dbg_value(i32 16, !525, !DIExpression(), !648)
    #dbg_value(ptr %pix0, !526, !DIExpression(), !648)
    #dbg_value(i32 %i_stride, !527, !DIExpression(), !648)
    #dbg_value(i32 0, !528, !DIExpression(), !648)
    #dbg_value(i32 0, !529, !DIExpression(), !650)
  %idx.ext8.i = sext i32 %i_stride to i64
    #dbg_value(i32 0, !529, !DIExpression(), !650)
    #dbg_value(i32 0, !528, !DIExpression(), !648)
    #dbg_value(ptr %fenc, !524, !DIExpression(), !648)
    #dbg_value(ptr %pix0, !526, !DIExpression(), !648)
    #dbg_value(i32 0, !529, !DIExpression(), !650)
    #dbg_value(ptr %fenc, !524, !DIExpression(), !648)
    #dbg_value(ptr %pix0, !526, !DIExpression(), !648)
    #dbg_value(i32 0, !531, !DIExpression(), !651)
    #dbg_value(i32 0, !528, !DIExpression(), !648)
    #dbg_value(i64 0, !531, !DIExpression(), !651)
    #dbg_value(i32 0, !528, !DIExpression(), !648)
  %0 = load i8, ptr %fenc, align 1, !dbg !652
  %conv.i = zext i8 %0 to i32, !dbg !652
  %1 = load i8, ptr %pix0, align 1, !dbg !652
  %conv7.i = zext i8 %1 to i32, !dbg !652
  %sub.i = sub nsw i32 %conv.i, %conv7.i, !dbg !652
  %2 = tail call i32 @llvm.abs.i32(i32 %sub.i, i1 true), !dbg !652
    #dbg_value(i32 %2, !528, !DIExpression(), !648)
    #dbg_value(i64 1, !531, !DIExpression(), !651)
  %arrayidx.1.i = getelementptr inbounds i8, ptr %fenc, i64 1, !dbg !652
  %3 = load i8, ptr %arrayidx.1.i, align 1, !dbg !652
  %conv.1.i = zext i8 %3 to i32, !dbg !652
  %arrayidx6.1.i = getelementptr inbounds i8, ptr %pix0, i64 1, !dbg !652
  %4 = load i8, ptr %arrayidx6.1.i, align 1, !dbg !652
  %conv7.1.i = zext i8 %4 to i32, !dbg !652
  %sub.1.i = sub nsw i32 %conv.1.i, %conv7.1.i, !dbg !652
  %5 = tail call i32 @llvm.abs.i32(i32 %sub.1.i, i1 true), !dbg !652
  %add.1.i = add nuw nsw i32 %5, %2, !dbg !652
    #dbg_value(i32 %add.1.i, !528, !DIExpression(), !648)
    #dbg_value(i64 2, !531, !DIExpression(), !651)
  %arrayidx.2.i = getelementptr inbounds i8, ptr %fenc, i64 2, !dbg !652
  %6 = load i8, ptr %arrayidx.2.i, align 1, !dbg !652
  %conv.2.i = zext i8 %6 to i32, !dbg !652
  %arrayidx6.2.i = getelementptr inbounds i8, ptr %pix0, i64 2, !dbg !652
  %7 = load i8, ptr %arrayidx6.2.i, align 1, !dbg !652
  %conv7.2.i = zext i8 %7 to i32, !dbg !652
  %sub.2.i = sub nsw i32 %conv.2.i, %conv7.2.i, !dbg !652
  %8 = tail call i32 @llvm.abs.i32(i32 %sub.2.i, i1 true), !dbg !652
  %add.2.i = add nuw nsw i32 %add.1.i, %8, !dbg !652
    #dbg_value(i32 %add.2.i, !528, !DIExpression(), !648)
    #dbg_value(i64 3, !531, !DIExpression(), !651)
  %arrayidx.3.i = getelementptr inbounds i8, ptr %fenc, i64 3, !dbg !652
  %9 = load i8, ptr %arrayidx.3.i, align 1, !dbg !652
  %conv.3.i = zext i8 %9 to i32, !dbg !652
  %arrayidx6.3.i = getelementptr inbounds i8, ptr %pix0, i64 3, !dbg !652
  %10 = load i8, ptr %arrayidx6.3.i, align 1, !dbg !652
  %conv7.3.i = zext i8 %10 to i32, !dbg !652
  %sub.3.i = sub nsw i32 %conv.3.i, %conv7.3.i, !dbg !652
  %11 = tail call i32 @llvm.abs.i32(i32 %sub.3.i, i1 true), !dbg !652
  %add.3.i = add nuw nsw i32 %add.2.i, %11, !dbg !652
    #dbg_value(i32 %add.3.i, !528, !DIExpression(), !648)
    #dbg_value(i64 4, !531, !DIExpression(), !651)
  %add.ptr.i = getelementptr inbounds i8, ptr %fenc, i64 16, !dbg !653
    #dbg_value(ptr %add.ptr.i, !524, !DIExpression(), !648)
  %add.ptr9.i = getelementptr inbounds i8, ptr %pix0, i64 %idx.ext8.i, !dbg !653
    #dbg_value(ptr %add.ptr9.i, !526, !DIExpression(), !648)
    #dbg_value(i32 1, !529, !DIExpression(), !650)
    #dbg_value(i32 0, !531, !DIExpression(), !651)
    #dbg_value(i64 0, !531, !DIExpression(), !651)
    #dbg_value(i32 %add.3.i, !528, !DIExpression(), !648)
  %12 = load i8, ptr %add.ptr.i, align 1, !dbg !652
  %conv.127.i = zext i8 %12 to i32, !dbg !652
  %13 = load i8, ptr %add.ptr9.i, align 1, !dbg !652
  %conv7.128.i = zext i8 %13 to i32, !dbg !652
  %sub.129.i = sub nsw i32 %conv.127.i, %conv7.128.i, !dbg !652
  %14 = tail call i32 @llvm.abs.i32(i32 %sub.129.i, i1 true), !dbg !652
  %add.130.i = add nuw nsw i32 %add.3.i, %14, !dbg !652
    #dbg_value(i32 %add.130.i, !528, !DIExpression(), !648)
    #dbg_value(i64 1, !531, !DIExpression(), !651)
  %arrayidx.1.1.i = getelementptr inbounds i8, ptr %fenc, i64 17, !dbg !652
  %15 = load i8, ptr %arrayidx.1.1.i, align 1, !dbg !652
  %conv.1.1.i = zext i8 %15 to i32, !dbg !652
  %arrayidx6.1.1.i = getelementptr inbounds i8, ptr %add.ptr9.i, i64 1, !dbg !652
  %16 = load i8, ptr %arrayidx6.1.1.i, align 1, !dbg !652
  %conv7.1.1.i = zext i8 %16 to i32, !dbg !652
  %sub.1.1.i = sub nsw i32 %conv.1.1.i, %conv7.1.1.i, !dbg !652
  %17 = tail call i32 @llvm.abs.i32(i32 %sub.1.1.i, i1 true), !dbg !652
  %add.1.1.i = add nuw nsw i32 %add.130.i, %17, !dbg !652
    #dbg_value(i32 %add.1.1.i, !528, !DIExpression(), !648)
    #dbg_value(i64 2, !531, !DIExpression(), !651)
  %arrayidx.2.1.i = getelementptr inbounds i8, ptr %fenc, i64 18, !dbg !652
  %18 = load i8, ptr %arrayidx.2.1.i, align 1, !dbg !652
  %conv.2.1.i = zext i8 %18 to i32, !dbg !652
  %arrayidx6.2.1.i = getelementptr inbounds i8, ptr %add.ptr9.i, i64 2, !dbg !652
  %19 = load i8, ptr %arrayidx6.2.1.i, align 1, !dbg !652
  %conv7.2.1.i = zext i8 %19 to i32, !dbg !652
  %sub.2.1.i = sub nsw i32 %conv.2.1.i, %conv7.2.1.i, !dbg !652
  %20 = tail call i32 @llvm.abs.i32(i32 %sub.2.1.i, i1 true), !dbg !652
  %add.2.1.i = add nuw nsw i32 %add.1.1.i, %20, !dbg !652
    #dbg_value(i32 %add.2.1.i, !528, !DIExpression(), !648)
    #dbg_value(i64 3, !531, !DIExpression(), !651)
  %arrayidx.3.1.i = getelementptr inbounds i8, ptr %fenc, i64 19, !dbg !652
  %21 = load i8, ptr %arrayidx.3.1.i, align 1, !dbg !652
  %conv.3.1.i = zext i8 %21 to i32, !dbg !652
  %arrayidx6.3.1.i = getelementptr inbounds i8, ptr %add.ptr9.i, i64 3, !dbg !652
  %22 = load i8, ptr %arrayidx6.3.1.i, align 1, !dbg !652
  %conv7.3.1.i = zext i8 %22 to i32, !dbg !652
  %sub.3.1.i = sub nsw i32 %conv.3.1.i, %conv7.3.1.i, !dbg !652
  %23 = tail call i32 @llvm.abs.i32(i32 %sub.3.1.i, i1 true), !dbg !652
  %add.3.1.i = add nuw nsw i32 %add.2.1.i, %23, !dbg !652
    #dbg_value(i32 %add.3.1.i, !528, !DIExpression(), !648)
    #dbg_value(i64 4, !531, !DIExpression(), !651)
  %add.ptr.1.i = getelementptr inbounds i8, ptr %fenc, i64 32, !dbg !653
    #dbg_value(ptr %add.ptr.1.i, !524, !DIExpression(), !648)
  %add.ptr9.1.i = getelementptr inbounds i8, ptr %add.ptr9.i, i64 %idx.ext8.i, !dbg !653
    #dbg_value(ptr %add.ptr9.1.i, !526, !DIExpression(), !648)
    #dbg_value(i32 2, !529, !DIExpression(), !650)
    #dbg_value(i32 0, !531, !DIExpression(), !651)
    #dbg_value(i64 0, !531, !DIExpression(), !651)
    #dbg_value(i32 %add.3.1.i, !528, !DIExpression(), !648)
  %24 = load i8, ptr %add.ptr.1.i, align 1, !dbg !652
  %conv.231.i = zext i8 %24 to i32, !dbg !652
  %25 = load i8, ptr %add.ptr9.1.i, align 1, !dbg !652
  %conv7.232.i = zext i8 %25 to i32, !dbg !652
  %sub.233.i = sub nsw i32 %conv.231.i, %conv7.232.i, !dbg !652
  %26 = tail call i32 @llvm.abs.i32(i32 %sub.233.i, i1 true), !dbg !652
  %add.234.i = add nuw nsw i32 %add.3.1.i, %26, !dbg !652
    #dbg_value(i32 %add.234.i, !528, !DIExpression(), !648)
    #dbg_value(i64 1, !531, !DIExpression(), !651)
  %arrayidx.1.2.i = getelementptr inbounds i8, ptr %fenc, i64 33, !dbg !652
  %27 = load i8, ptr %arrayidx.1.2.i, align 1, !dbg !652
  %conv.1.2.i = zext i8 %27 to i32, !dbg !652
  %arrayidx6.1.2.i = getelementptr inbounds i8, ptr %add.ptr9.1.i, i64 1, !dbg !652
  %28 = load i8, ptr %arrayidx6.1.2.i, align 1, !dbg !652
  %conv7.1.2.i = zext i8 %28 to i32, !dbg !652
  %sub.1.2.i = sub nsw i32 %conv.1.2.i, %conv7.1.2.i, !dbg !652
  %29 = tail call i32 @llvm.abs.i32(i32 %sub.1.2.i, i1 true), !dbg !652
  %add.1.2.i = add nuw nsw i32 %add.234.i, %29, !dbg !652
    #dbg_value(i32 %add.1.2.i, !528, !DIExpression(), !648)
    #dbg_value(i64 2, !531, !DIExpression(), !651)
  %arrayidx.2.2.i = getelementptr inbounds i8, ptr %fenc, i64 34, !dbg !652
  %30 = load i8, ptr %arrayidx.2.2.i, align 1, !dbg !652
  %conv.2.2.i = zext i8 %30 to i32, !dbg !652
  %arrayidx6.2.2.i = getelementptr inbounds i8, ptr %add.ptr9.1.i, i64 2, !dbg !652
  %31 = load i8, ptr %arrayidx6.2.2.i, align 1, !dbg !652
  %conv7.2.2.i = zext i8 %31 to i32, !dbg !652
  %sub.2.2.i = sub nsw i32 %conv.2.2.i, %conv7.2.2.i, !dbg !652
  %32 = tail call i32 @llvm.abs.i32(i32 %sub.2.2.i, i1 true), !dbg !652
  %add.2.2.i = add nuw nsw i32 %add.1.2.i, %32, !dbg !652
    #dbg_value(i32 %add.2.2.i, !528, !DIExpression(), !648)
    #dbg_value(i64 3, !531, !DIExpression(), !651)
  %arrayidx.3.2.i = getelementptr inbounds i8, ptr %fenc, i64 35, !dbg !652
  %33 = load i8, ptr %arrayidx.3.2.i, align 1, !dbg !652
  %conv.3.2.i = zext i8 %33 to i32, !dbg !652
  %arrayidx6.3.2.i = getelementptr inbounds i8, ptr %add.ptr9.1.i, i64 3, !dbg !652
  %34 = load i8, ptr %arrayidx6.3.2.i, align 1, !dbg !652
  %conv7.3.2.i = zext i8 %34 to i32, !dbg !652
  %sub.3.2.i = sub nsw i32 %conv.3.2.i, %conv7.3.2.i, !dbg !652
  %35 = tail call i32 @llvm.abs.i32(i32 %sub.3.2.i, i1 true), !dbg !652
  %add.3.2.i = add nuw nsw i32 %add.2.2.i, %35, !dbg !652
    #dbg_value(i32 %add.3.2.i, !528, !DIExpression(), !648)
    #dbg_value(i64 4, !531, !DIExpression(), !651)
  %add.ptr.2.i = getelementptr inbounds i8, ptr %fenc, i64 48, !dbg !653
    #dbg_value(ptr %add.ptr.2.i, !524, !DIExpression(), !648)
  %add.ptr9.2.i = getelementptr inbounds i8, ptr %add.ptr9.1.i, i64 %idx.ext8.i, !dbg !653
    #dbg_value(ptr %add.ptr9.2.i, !526, !DIExpression(), !648)
    #dbg_value(i32 3, !529, !DIExpression(), !650)
    #dbg_value(i32 0, !531, !DIExpression(), !651)
    #dbg_value(i64 0, !531, !DIExpression(), !651)
    #dbg_value(i32 %add.3.2.i, !528, !DIExpression(), !648)
  %36 = load i8, ptr %add.ptr.2.i, align 1, !dbg !652
  %conv.335.i = zext i8 %36 to i32, !dbg !652
  %37 = load i8, ptr %add.ptr9.2.i, align 1, !dbg !652
  %conv7.336.i = zext i8 %37 to i32, !dbg !652
  %sub.337.i = sub nsw i32 %conv.335.i, %conv7.336.i, !dbg !652
  %38 = tail call i32 @llvm.abs.i32(i32 %sub.337.i, i1 true), !dbg !652
  %add.338.i = add nuw nsw i32 %add.3.2.i, %38, !dbg !652
    #dbg_value(i32 %add.338.i, !528, !DIExpression(), !648)
    #dbg_value(i64 1, !531, !DIExpression(), !651)
  %arrayidx.1.3.i = getelementptr inbounds i8, ptr %fenc, i64 49, !dbg !652
  %39 = load i8, ptr %arrayidx.1.3.i, align 1, !dbg !652
  %conv.1.3.i = zext i8 %39 to i32, !dbg !652
  %arrayidx6.1.3.i = getelementptr inbounds i8, ptr %add.ptr9.2.i, i64 1, !dbg !652
  %40 = load i8, ptr %arrayidx6.1.3.i, align 1, !dbg !652
  %conv7.1.3.i = zext i8 %40 to i32, !dbg !652
  %sub.1.3.i = sub nsw i32 %conv.1.3.i, %conv7.1.3.i, !dbg !652
  %41 = tail call i32 @llvm.abs.i32(i32 %sub.1.3.i, i1 true), !dbg !652
  %add.1.3.i = add nuw nsw i32 %add.338.i, %41, !dbg !652
    #dbg_value(i32 %add.1.3.i, !528, !DIExpression(), !648)
    #dbg_value(i64 2, !531, !DIExpression(), !651)
  %arrayidx.2.3.i = getelementptr inbounds i8, ptr %fenc, i64 50, !dbg !652
  %42 = load i8, ptr %arrayidx.2.3.i, align 1, !dbg !652
  %conv.2.3.i = zext i8 %42 to i32, !dbg !652
  %arrayidx6.2.3.i = getelementptr inbounds i8, ptr %add.ptr9.2.i, i64 2, !dbg !652
  %43 = load i8, ptr %arrayidx6.2.3.i, align 1, !dbg !652
  %conv7.2.3.i = zext i8 %43 to i32, !dbg !652
  %sub.2.3.i = sub nsw i32 %conv.2.3.i, %conv7.2.3.i, !dbg !652
  %44 = tail call i32 @llvm.abs.i32(i32 %sub.2.3.i, i1 true), !dbg !652
  %add.2.3.i = add nuw nsw i32 %add.1.3.i, %44, !dbg !652
    #dbg_value(i32 %add.2.3.i, !528, !DIExpression(), !648)
    #dbg_value(i64 3, !531, !DIExpression(), !651)
  %arrayidx.3.3.i = getelementptr inbounds i8, ptr %fenc, i64 51, !dbg !652
  %45 = load i8, ptr %arrayidx.3.3.i, align 1, !dbg !652
  %conv.3.3.i = zext i8 %45 to i32, !dbg !652
  %arrayidx6.3.3.i = getelementptr inbounds i8, ptr %add.ptr9.2.i, i64 3, !dbg !652
  %46 = load i8, ptr %arrayidx6.3.3.i, align 1, !dbg !652
  %conv7.3.3.i = zext i8 %46 to i32, !dbg !652
  %sub.3.3.i = sub nsw i32 %conv.3.3.i, %conv7.3.3.i, !dbg !652
  %47 = tail call i32 @llvm.abs.i32(i32 %sub.3.3.i, i1 true), !dbg !652
  %add.3.3.i = add nuw nsw i32 %add.2.3.i, %47, !dbg !652
    #dbg_value(i32 %add.3.3.i, !528, !DIExpression(), !648)
    #dbg_value(i64 4, !531, !DIExpression(), !651)
    #dbg_value(!DIArgList(ptr %add.ptr.2.i, i64 16), !524, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !648)
    #dbg_value(!DIArgList(ptr %add.ptr9.2.i, i64 %idx.ext8.i), !526, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !648)
    #dbg_value(i32 4, !529, !DIExpression(), !650)
  store i32 %add.3.3.i, ptr %scores, align 4, !dbg !654
    #dbg_value(ptr %fenc, !524, !DIExpression(), !655)
    #dbg_value(i32 16, !525, !DIExpression(), !655)
    #dbg_value(ptr %pix1, !526, !DIExpression(), !655)
    #dbg_value(i32 %i_stride, !527, !DIExpression(), !655)
    #dbg_value(i32 0, !528, !DIExpression(), !655)
    #dbg_value(i32 0, !529, !DIExpression(), !657)
    #dbg_value(i32 0, !529, !DIExpression(), !657)
    #dbg_value(i32 0, !528, !DIExpression(), !655)
    #dbg_value(ptr %fenc, !524, !DIExpression(), !655)
    #dbg_value(ptr %pix1, !526, !DIExpression(), !655)
    #dbg_value(i32 0, !529, !DIExpression(), !657)
    #dbg_value(ptr %fenc, !524, !DIExpression(), !655)
    #dbg_value(ptr %pix1, !526, !DIExpression(), !655)
    #dbg_value(i32 0, !531, !DIExpression(), !658)
    #dbg_value(i32 0, !528, !DIExpression(), !655)
    #dbg_value(i64 0, !531, !DIExpression(), !658)
    #dbg_value(i32 0, !528, !DIExpression(), !655)
  %48 = load i8, ptr %fenc, align 1, !dbg !659
  %conv.i12 = zext i8 %48 to i32, !dbg !659
  %49 = load i8, ptr %pix1, align 1, !dbg !659
  %conv7.i13 = zext i8 %49 to i32, !dbg !659
  %sub.i14 = sub nsw i32 %conv.i12, %conv7.i13, !dbg !659
  %50 = tail call i32 @llvm.abs.i32(i32 %sub.i14, i1 true), !dbg !659
    #dbg_value(i32 %50, !528, !DIExpression(), !655)
    #dbg_value(i64 1, !531, !DIExpression(), !658)
  %51 = load i8, ptr %arrayidx.1.i, align 1, !dbg !659
  %conv.1.i16 = zext i8 %51 to i32, !dbg !659
  %arrayidx6.1.i17 = getelementptr inbounds i8, ptr %pix1, i64 1, !dbg !659
  %52 = load i8, ptr %arrayidx6.1.i17, align 1, !dbg !659
  %conv7.1.i18 = zext i8 %52 to i32, !dbg !659
  %sub.1.i19 = sub nsw i32 %conv.1.i16, %conv7.1.i18, !dbg !659
  %53 = tail call i32 @llvm.abs.i32(i32 %sub.1.i19, i1 true), !dbg !659
  %add.1.i20 = add nuw nsw i32 %53, %50, !dbg !659
    #dbg_value(i32 %add.1.i20, !528, !DIExpression(), !655)
    #dbg_value(i64 2, !531, !DIExpression(), !658)
  %54 = load i8, ptr %arrayidx.2.i, align 1, !dbg !659
  %conv.2.i22 = zext i8 %54 to i32, !dbg !659
  %arrayidx6.2.i23 = getelementptr inbounds i8, ptr %pix1, i64 2, !dbg !659
  %55 = load i8, ptr %arrayidx6.2.i23, align 1, !dbg !659
  %conv7.2.i24 = zext i8 %55 to i32, !dbg !659
  %sub.2.i25 = sub nsw i32 %conv.2.i22, %conv7.2.i24, !dbg !659
  %56 = tail call i32 @llvm.abs.i32(i32 %sub.2.i25, i1 true), !dbg !659
  %add.2.i26 = add nuw nsw i32 %add.1.i20, %56, !dbg !659
    #dbg_value(i32 %add.2.i26, !528, !DIExpression(), !655)
    #dbg_value(i64 3, !531, !DIExpression(), !658)
  %57 = load i8, ptr %arrayidx.3.i, align 1, !dbg !659
  %conv.3.i28 = zext i8 %57 to i32, !dbg !659
  %arrayidx6.3.i29 = getelementptr inbounds i8, ptr %pix1, i64 3, !dbg !659
  %58 = load i8, ptr %arrayidx6.3.i29, align 1, !dbg !659
  %conv7.3.i30 = zext i8 %58 to i32, !dbg !659
  %sub.3.i31 = sub nsw i32 %conv.3.i28, %conv7.3.i30, !dbg !659
  %59 = tail call i32 @llvm.abs.i32(i32 %sub.3.i31, i1 true), !dbg !659
  %add.3.i32 = add nuw nsw i32 %add.2.i26, %59, !dbg !659
    #dbg_value(i32 %add.3.i32, !528, !DIExpression(), !655)
    #dbg_value(i64 4, !531, !DIExpression(), !658)
    #dbg_value(ptr %add.ptr.i, !524, !DIExpression(), !655)
  %add.ptr9.i34 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext8.i, !dbg !660
    #dbg_value(ptr %add.ptr9.i34, !526, !DIExpression(), !655)
    #dbg_value(i32 1, !529, !DIExpression(), !657)
    #dbg_value(i32 0, !531, !DIExpression(), !658)
    #dbg_value(i64 0, !531, !DIExpression(), !658)
    #dbg_value(i32 %add.3.i32, !528, !DIExpression(), !655)
  %60 = load i8, ptr %add.ptr.i, align 1, !dbg !659
  %conv.127.i35 = zext i8 %60 to i32, !dbg !659
  %61 = load i8, ptr %add.ptr9.i34, align 1, !dbg !659
  %conv7.128.i36 = zext i8 %61 to i32, !dbg !659
  %sub.129.i37 = sub nsw i32 %conv.127.i35, %conv7.128.i36, !dbg !659
  %62 = tail call i32 @llvm.abs.i32(i32 %sub.129.i37, i1 true), !dbg !659
  %add.130.i38 = add nuw nsw i32 %add.3.i32, %62, !dbg !659
    #dbg_value(i32 %add.130.i38, !528, !DIExpression(), !655)
    #dbg_value(i64 1, !531, !DIExpression(), !658)
  %63 = load i8, ptr %arrayidx.1.1.i, align 1, !dbg !659
  %conv.1.1.i40 = zext i8 %63 to i32, !dbg !659
  %arrayidx6.1.1.i41 = getelementptr inbounds i8, ptr %add.ptr9.i34, i64 1, !dbg !659
  %64 = load i8, ptr %arrayidx6.1.1.i41, align 1, !dbg !659
  %conv7.1.1.i42 = zext i8 %64 to i32, !dbg !659
  %sub.1.1.i43 = sub nsw i32 %conv.1.1.i40, %conv7.1.1.i42, !dbg !659
  %65 = tail call i32 @llvm.abs.i32(i32 %sub.1.1.i43, i1 true), !dbg !659
  %add.1.1.i44 = add nuw nsw i32 %add.130.i38, %65, !dbg !659
    #dbg_value(i32 %add.1.1.i44, !528, !DIExpression(), !655)
    #dbg_value(i64 2, !531, !DIExpression(), !658)
  %66 = load i8, ptr %arrayidx.2.1.i, align 1, !dbg !659
  %conv.2.1.i46 = zext i8 %66 to i32, !dbg !659
  %arrayidx6.2.1.i47 = getelementptr inbounds i8, ptr %add.ptr9.i34, i64 2, !dbg !659
  %67 = load i8, ptr %arrayidx6.2.1.i47, align 1, !dbg !659
  %conv7.2.1.i48 = zext i8 %67 to i32, !dbg !659
  %sub.2.1.i49 = sub nsw i32 %conv.2.1.i46, %conv7.2.1.i48, !dbg !659
  %68 = tail call i32 @llvm.abs.i32(i32 %sub.2.1.i49, i1 true), !dbg !659
  %add.2.1.i50 = add nuw nsw i32 %add.1.1.i44, %68, !dbg !659
    #dbg_value(i32 %add.2.1.i50, !528, !DIExpression(), !655)
    #dbg_value(i64 3, !531, !DIExpression(), !658)
  %69 = load i8, ptr %arrayidx.3.1.i, align 1, !dbg !659
  %conv.3.1.i52 = zext i8 %69 to i32, !dbg !659
  %arrayidx6.3.1.i53 = getelementptr inbounds i8, ptr %add.ptr9.i34, i64 3, !dbg !659
  %70 = load i8, ptr %arrayidx6.3.1.i53, align 1, !dbg !659
  %conv7.3.1.i54 = zext i8 %70 to i32, !dbg !659
  %sub.3.1.i55 = sub nsw i32 %conv.3.1.i52, %conv7.3.1.i54, !dbg !659
  %71 = tail call i32 @llvm.abs.i32(i32 %sub.3.1.i55, i1 true), !dbg !659
  %add.3.1.i56 = add nuw nsw i32 %add.2.1.i50, %71, !dbg !659
    #dbg_value(i32 %add.3.1.i56, !528, !DIExpression(), !655)
    #dbg_value(i64 4, !531, !DIExpression(), !658)
    #dbg_value(ptr %add.ptr.1.i, !524, !DIExpression(), !655)
  %add.ptr9.1.i58 = getelementptr inbounds i8, ptr %add.ptr9.i34, i64 %idx.ext8.i, !dbg !660
    #dbg_value(ptr %add.ptr9.1.i58, !526, !DIExpression(), !655)
    #dbg_value(i32 2, !529, !DIExpression(), !657)
    #dbg_value(i32 0, !531, !DIExpression(), !658)
    #dbg_value(i64 0, !531, !DIExpression(), !658)
    #dbg_value(i32 %add.3.1.i56, !528, !DIExpression(), !655)
  %72 = load i8, ptr %add.ptr.1.i, align 1, !dbg !659
  %conv.231.i59 = zext i8 %72 to i32, !dbg !659
  %73 = load i8, ptr %add.ptr9.1.i58, align 1, !dbg !659
  %conv7.232.i60 = zext i8 %73 to i32, !dbg !659
  %sub.233.i61 = sub nsw i32 %conv.231.i59, %conv7.232.i60, !dbg !659
  %74 = tail call i32 @llvm.abs.i32(i32 %sub.233.i61, i1 true), !dbg !659
  %add.234.i62 = add nuw nsw i32 %add.3.1.i56, %74, !dbg !659
    #dbg_value(i32 %add.234.i62, !528, !DIExpression(), !655)
    #dbg_value(i64 1, !531, !DIExpression(), !658)
  %75 = load i8, ptr %arrayidx.1.2.i, align 1, !dbg !659
  %conv.1.2.i64 = zext i8 %75 to i32, !dbg !659
  %arrayidx6.1.2.i65 = getelementptr inbounds i8, ptr %add.ptr9.1.i58, i64 1, !dbg !659
  %76 = load i8, ptr %arrayidx6.1.2.i65, align 1, !dbg !659
  %conv7.1.2.i66 = zext i8 %76 to i32, !dbg !659
  %sub.1.2.i67 = sub nsw i32 %conv.1.2.i64, %conv7.1.2.i66, !dbg !659
  %77 = tail call i32 @llvm.abs.i32(i32 %sub.1.2.i67, i1 true), !dbg !659
  %add.1.2.i68 = add nuw nsw i32 %add.234.i62, %77, !dbg !659
    #dbg_value(i32 %add.1.2.i68, !528, !DIExpression(), !655)
    #dbg_value(i64 2, !531, !DIExpression(), !658)
  %78 = load i8, ptr %arrayidx.2.2.i, align 1, !dbg !659
  %conv.2.2.i70 = zext i8 %78 to i32, !dbg !659
  %arrayidx6.2.2.i71 = getelementptr inbounds i8, ptr %add.ptr9.1.i58, i64 2, !dbg !659
  %79 = load i8, ptr %arrayidx6.2.2.i71, align 1, !dbg !659
  %conv7.2.2.i72 = zext i8 %79 to i32, !dbg !659
  %sub.2.2.i73 = sub nsw i32 %conv.2.2.i70, %conv7.2.2.i72, !dbg !659
  %80 = tail call i32 @llvm.abs.i32(i32 %sub.2.2.i73, i1 true), !dbg !659
  %add.2.2.i74 = add nuw nsw i32 %add.1.2.i68, %80, !dbg !659
    #dbg_value(i32 %add.2.2.i74, !528, !DIExpression(), !655)
    #dbg_value(i64 3, !531, !DIExpression(), !658)
  %81 = load i8, ptr %arrayidx.3.2.i, align 1, !dbg !659
  %conv.3.2.i76 = zext i8 %81 to i32, !dbg !659
  %arrayidx6.3.2.i77 = getelementptr inbounds i8, ptr %add.ptr9.1.i58, i64 3, !dbg !659
  %82 = load i8, ptr %arrayidx6.3.2.i77, align 1, !dbg !659
  %conv7.3.2.i78 = zext i8 %82 to i32, !dbg !659
  %sub.3.2.i79 = sub nsw i32 %conv.3.2.i76, %conv7.3.2.i78, !dbg !659
  %83 = tail call i32 @llvm.abs.i32(i32 %sub.3.2.i79, i1 true), !dbg !659
  %add.3.2.i80 = add nuw nsw i32 %add.2.2.i74, %83, !dbg !659
    #dbg_value(i32 %add.3.2.i80, !528, !DIExpression(), !655)
    #dbg_value(i64 4, !531, !DIExpression(), !658)
    #dbg_value(ptr %add.ptr.2.i, !524, !DIExpression(), !655)
  %add.ptr9.2.i82 = getelementptr inbounds i8, ptr %add.ptr9.1.i58, i64 %idx.ext8.i, !dbg !660
    #dbg_value(ptr %add.ptr9.2.i82, !526, !DIExpression(), !655)
    #dbg_value(i32 3, !529, !DIExpression(), !657)
    #dbg_value(i32 0, !531, !DIExpression(), !658)
    #dbg_value(i64 0, !531, !DIExpression(), !658)
    #dbg_value(i32 %add.3.2.i80, !528, !DIExpression(), !655)
  %84 = load i8, ptr %add.ptr.2.i, align 1, !dbg !659
  %conv.335.i83 = zext i8 %84 to i32, !dbg !659
  %85 = load i8, ptr %add.ptr9.2.i82, align 1, !dbg !659
  %conv7.336.i84 = zext i8 %85 to i32, !dbg !659
  %sub.337.i85 = sub nsw i32 %conv.335.i83, %conv7.336.i84, !dbg !659
  %86 = tail call i32 @llvm.abs.i32(i32 %sub.337.i85, i1 true), !dbg !659
  %add.338.i86 = add nuw nsw i32 %add.3.2.i80, %86, !dbg !659
    #dbg_value(i32 %add.338.i86, !528, !DIExpression(), !655)
    #dbg_value(i64 1, !531, !DIExpression(), !658)
  %87 = load i8, ptr %arrayidx.1.3.i, align 1, !dbg !659
  %conv.1.3.i88 = zext i8 %87 to i32, !dbg !659
  %arrayidx6.1.3.i89 = getelementptr inbounds i8, ptr %add.ptr9.2.i82, i64 1, !dbg !659
  %88 = load i8, ptr %arrayidx6.1.3.i89, align 1, !dbg !659
  %conv7.1.3.i90 = zext i8 %88 to i32, !dbg !659
  %sub.1.3.i91 = sub nsw i32 %conv.1.3.i88, %conv7.1.3.i90, !dbg !659
  %89 = tail call i32 @llvm.abs.i32(i32 %sub.1.3.i91, i1 true), !dbg !659
  %add.1.3.i92 = add nuw nsw i32 %add.338.i86, %89, !dbg !659
    #dbg_value(i32 %add.1.3.i92, !528, !DIExpression(), !655)
    #dbg_value(i64 2, !531, !DIExpression(), !658)
  %90 = load i8, ptr %arrayidx.2.3.i, align 1, !dbg !659
  %conv.2.3.i94 = zext i8 %90 to i32, !dbg !659
  %arrayidx6.2.3.i95 = getelementptr inbounds i8, ptr %add.ptr9.2.i82, i64 2, !dbg !659
  %91 = load i8, ptr %arrayidx6.2.3.i95, align 1, !dbg !659
  %conv7.2.3.i96 = zext i8 %91 to i32, !dbg !659
  %sub.2.3.i97 = sub nsw i32 %conv.2.3.i94, %conv7.2.3.i96, !dbg !659
  %92 = tail call i32 @llvm.abs.i32(i32 %sub.2.3.i97, i1 true), !dbg !659
  %add.2.3.i98 = add nuw nsw i32 %add.1.3.i92, %92, !dbg !659
    #dbg_value(i32 %add.2.3.i98, !528, !DIExpression(), !655)
    #dbg_value(i64 3, !531, !DIExpression(), !658)
  %93 = load i8, ptr %arrayidx.3.3.i, align 1, !dbg !659
  %conv.3.3.i100 = zext i8 %93 to i32, !dbg !659
  %arrayidx6.3.3.i101 = getelementptr inbounds i8, ptr %add.ptr9.2.i82, i64 3, !dbg !659
  %94 = load i8, ptr %arrayidx6.3.3.i101, align 1, !dbg !659
  %conv7.3.3.i102 = zext i8 %94 to i32, !dbg !659
  %sub.3.3.i103 = sub nsw i32 %conv.3.3.i100, %conv7.3.3.i102, !dbg !659
  %95 = tail call i32 @llvm.abs.i32(i32 %sub.3.3.i103, i1 true), !dbg !659
  %add.3.3.i104 = add nuw nsw i32 %add.2.3.i98, %95, !dbg !659
    #dbg_value(i32 %add.3.3.i104, !528, !DIExpression(), !655)
    #dbg_value(i64 4, !531, !DIExpression(), !658)
    #dbg_value(!DIArgList(ptr %add.ptr.2.i, i64 16), !524, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !655)
    #dbg_value(!DIArgList(ptr %add.ptr9.2.i82, i64 %idx.ext8.i), !526, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !655)
    #dbg_value(i32 4, !529, !DIExpression(), !657)
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !654
  store i32 %add.3.3.i104, ptr %arrayidx2, align 4, !dbg !654
    #dbg_value(ptr %fenc, !524, !DIExpression(), !661)
    #dbg_value(i32 16, !525, !DIExpression(), !661)
    #dbg_value(ptr %pix2, !526, !DIExpression(), !661)
    #dbg_value(i32 %i_stride, !527, !DIExpression(), !661)
    #dbg_value(i32 0, !528, !DIExpression(), !661)
    #dbg_value(i32 0, !529, !DIExpression(), !663)
    #dbg_value(i32 0, !529, !DIExpression(), !663)
    #dbg_value(i32 0, !528, !DIExpression(), !661)
    #dbg_value(ptr %fenc, !524, !DIExpression(), !661)
    #dbg_value(ptr %pix2, !526, !DIExpression(), !661)
    #dbg_value(i32 0, !529, !DIExpression(), !663)
    #dbg_value(ptr %fenc, !524, !DIExpression(), !661)
    #dbg_value(ptr %pix2, !526, !DIExpression(), !661)
    #dbg_value(i32 0, !531, !DIExpression(), !664)
    #dbg_value(i32 0, !528, !DIExpression(), !661)
    #dbg_value(i64 0, !531, !DIExpression(), !664)
    #dbg_value(i32 0, !528, !DIExpression(), !661)
  %96 = load i8, ptr %fenc, align 1, !dbg !665
  %conv.i106 = zext i8 %96 to i32, !dbg !665
  %97 = load i8, ptr %pix2, align 1, !dbg !665
  %conv7.i107 = zext i8 %97 to i32, !dbg !665
  %sub.i108 = sub nsw i32 %conv.i106, %conv7.i107, !dbg !665
  %98 = tail call i32 @llvm.abs.i32(i32 %sub.i108, i1 true), !dbg !665
    #dbg_value(i32 %98, !528, !DIExpression(), !661)
    #dbg_value(i64 1, !531, !DIExpression(), !664)
  %99 = load i8, ptr %arrayidx.1.i, align 1, !dbg !665
  %conv.1.i110 = zext i8 %99 to i32, !dbg !665
  %arrayidx6.1.i111 = getelementptr inbounds i8, ptr %pix2, i64 1, !dbg !665
  %100 = load i8, ptr %arrayidx6.1.i111, align 1, !dbg !665
  %conv7.1.i112 = zext i8 %100 to i32, !dbg !665
  %sub.1.i113 = sub nsw i32 %conv.1.i110, %conv7.1.i112, !dbg !665
  %101 = tail call i32 @llvm.abs.i32(i32 %sub.1.i113, i1 true), !dbg !665
  %add.1.i114 = add nuw nsw i32 %101, %98, !dbg !665
    #dbg_value(i32 %add.1.i114, !528, !DIExpression(), !661)
    #dbg_value(i64 2, !531, !DIExpression(), !664)
  %102 = load i8, ptr %arrayidx.2.i, align 1, !dbg !665
  %conv.2.i116 = zext i8 %102 to i32, !dbg !665
  %arrayidx6.2.i117 = getelementptr inbounds i8, ptr %pix2, i64 2, !dbg !665
  %103 = load i8, ptr %arrayidx6.2.i117, align 1, !dbg !665
  %conv7.2.i118 = zext i8 %103 to i32, !dbg !665
  %sub.2.i119 = sub nsw i32 %conv.2.i116, %conv7.2.i118, !dbg !665
  %104 = tail call i32 @llvm.abs.i32(i32 %sub.2.i119, i1 true), !dbg !665
  %add.2.i120 = add nuw nsw i32 %add.1.i114, %104, !dbg !665
    #dbg_value(i32 %add.2.i120, !528, !DIExpression(), !661)
    #dbg_value(i64 3, !531, !DIExpression(), !664)
  %105 = load i8, ptr %arrayidx.3.i, align 1, !dbg !665
  %conv.3.i122 = zext i8 %105 to i32, !dbg !665
  %arrayidx6.3.i123 = getelementptr inbounds i8, ptr %pix2, i64 3, !dbg !665
  %106 = load i8, ptr %arrayidx6.3.i123, align 1, !dbg !665
  %conv7.3.i124 = zext i8 %106 to i32, !dbg !665
  %sub.3.i125 = sub nsw i32 %conv.3.i122, %conv7.3.i124, !dbg !665
  %107 = tail call i32 @llvm.abs.i32(i32 %sub.3.i125, i1 true), !dbg !665
  %add.3.i126 = add nuw nsw i32 %add.2.i120, %107, !dbg !665
    #dbg_value(i32 %add.3.i126, !528, !DIExpression(), !661)
    #dbg_value(i64 4, !531, !DIExpression(), !664)
    #dbg_value(ptr %add.ptr.i, !524, !DIExpression(), !661)
  %add.ptr9.i128 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext8.i, !dbg !666
    #dbg_value(ptr %add.ptr9.i128, !526, !DIExpression(), !661)
    #dbg_value(i32 1, !529, !DIExpression(), !663)
    #dbg_value(i32 0, !531, !DIExpression(), !664)
    #dbg_value(i64 0, !531, !DIExpression(), !664)
    #dbg_value(i32 %add.3.i126, !528, !DIExpression(), !661)
  %108 = load i8, ptr %add.ptr.i, align 1, !dbg !665
  %conv.127.i129 = zext i8 %108 to i32, !dbg !665
  %109 = load i8, ptr %add.ptr9.i128, align 1, !dbg !665
  %conv7.128.i130 = zext i8 %109 to i32, !dbg !665
  %sub.129.i131 = sub nsw i32 %conv.127.i129, %conv7.128.i130, !dbg !665
  %110 = tail call i32 @llvm.abs.i32(i32 %sub.129.i131, i1 true), !dbg !665
  %add.130.i132 = add nuw nsw i32 %add.3.i126, %110, !dbg !665
    #dbg_value(i32 %add.130.i132, !528, !DIExpression(), !661)
    #dbg_value(i64 1, !531, !DIExpression(), !664)
  %111 = load i8, ptr %arrayidx.1.1.i, align 1, !dbg !665
  %conv.1.1.i134 = zext i8 %111 to i32, !dbg !665
  %arrayidx6.1.1.i135 = getelementptr inbounds i8, ptr %add.ptr9.i128, i64 1, !dbg !665
  %112 = load i8, ptr %arrayidx6.1.1.i135, align 1, !dbg !665
  %conv7.1.1.i136 = zext i8 %112 to i32, !dbg !665
  %sub.1.1.i137 = sub nsw i32 %conv.1.1.i134, %conv7.1.1.i136, !dbg !665
  %113 = tail call i32 @llvm.abs.i32(i32 %sub.1.1.i137, i1 true), !dbg !665
  %add.1.1.i138 = add nuw nsw i32 %add.130.i132, %113, !dbg !665
    #dbg_value(i32 %add.1.1.i138, !528, !DIExpression(), !661)
    #dbg_value(i64 2, !531, !DIExpression(), !664)
  %114 = load i8, ptr %arrayidx.2.1.i, align 1, !dbg !665
  %conv.2.1.i140 = zext i8 %114 to i32, !dbg !665
  %arrayidx6.2.1.i141 = getelementptr inbounds i8, ptr %add.ptr9.i128, i64 2, !dbg !665
  %115 = load i8, ptr %arrayidx6.2.1.i141, align 1, !dbg !665
  %conv7.2.1.i142 = zext i8 %115 to i32, !dbg !665
  %sub.2.1.i143 = sub nsw i32 %conv.2.1.i140, %conv7.2.1.i142, !dbg !665
  %116 = tail call i32 @llvm.abs.i32(i32 %sub.2.1.i143, i1 true), !dbg !665
  %add.2.1.i144 = add nuw nsw i32 %add.1.1.i138, %116, !dbg !665
    #dbg_value(i32 %add.2.1.i144, !528, !DIExpression(), !661)
    #dbg_value(i64 3, !531, !DIExpression(), !664)
  %117 = load i8, ptr %arrayidx.3.1.i, align 1, !dbg !665
  %conv.3.1.i146 = zext i8 %117 to i32, !dbg !665
  %arrayidx6.3.1.i147 = getelementptr inbounds i8, ptr %add.ptr9.i128, i64 3, !dbg !665
  %118 = load i8, ptr %arrayidx6.3.1.i147, align 1, !dbg !665
  %conv7.3.1.i148 = zext i8 %118 to i32, !dbg !665
  %sub.3.1.i149 = sub nsw i32 %conv.3.1.i146, %conv7.3.1.i148, !dbg !665
  %119 = tail call i32 @llvm.abs.i32(i32 %sub.3.1.i149, i1 true), !dbg !665
  %add.3.1.i150 = add nuw nsw i32 %add.2.1.i144, %119, !dbg !665
    #dbg_value(i32 %add.3.1.i150, !528, !DIExpression(), !661)
    #dbg_value(i64 4, !531, !DIExpression(), !664)
    #dbg_value(ptr %add.ptr.1.i, !524, !DIExpression(), !661)
  %add.ptr9.1.i152 = getelementptr inbounds i8, ptr %add.ptr9.i128, i64 %idx.ext8.i, !dbg !666
    #dbg_value(ptr %add.ptr9.1.i152, !526, !DIExpression(), !661)
    #dbg_value(i32 2, !529, !DIExpression(), !663)
    #dbg_value(i32 0, !531, !DIExpression(), !664)
    #dbg_value(i64 0, !531, !DIExpression(), !664)
    #dbg_value(i32 %add.3.1.i150, !528, !DIExpression(), !661)
  %120 = load i8, ptr %add.ptr.1.i, align 1, !dbg !665
  %conv.231.i153 = zext i8 %120 to i32, !dbg !665
  %121 = load i8, ptr %add.ptr9.1.i152, align 1, !dbg !665
  %conv7.232.i154 = zext i8 %121 to i32, !dbg !665
  %sub.233.i155 = sub nsw i32 %conv.231.i153, %conv7.232.i154, !dbg !665
  %122 = tail call i32 @llvm.abs.i32(i32 %sub.233.i155, i1 true), !dbg !665
  %add.234.i156 = add nuw nsw i32 %add.3.1.i150, %122, !dbg !665
    #dbg_value(i32 %add.234.i156, !528, !DIExpression(), !661)
    #dbg_value(i64 1, !531, !DIExpression(), !664)
  %123 = load i8, ptr %arrayidx.1.2.i, align 1, !dbg !665
  %conv.1.2.i158 = zext i8 %123 to i32, !dbg !665
  %arrayidx6.1.2.i159 = getelementptr inbounds i8, ptr %add.ptr9.1.i152, i64 1, !dbg !665
  %124 = load i8, ptr %arrayidx6.1.2.i159, align 1, !dbg !665
  %conv7.1.2.i160 = zext i8 %124 to i32, !dbg !665
  %sub.1.2.i161 = sub nsw i32 %conv.1.2.i158, %conv7.1.2.i160, !dbg !665
  %125 = tail call i32 @llvm.abs.i32(i32 %sub.1.2.i161, i1 true), !dbg !665
  %add.1.2.i162 = add nuw nsw i32 %add.234.i156, %125, !dbg !665
    #dbg_value(i32 %add.1.2.i162, !528, !DIExpression(), !661)
    #dbg_value(i64 2, !531, !DIExpression(), !664)
  %126 = load i8, ptr %arrayidx.2.2.i, align 1, !dbg !665
  %conv.2.2.i164 = zext i8 %126 to i32, !dbg !665
  %arrayidx6.2.2.i165 = getelementptr inbounds i8, ptr %add.ptr9.1.i152, i64 2, !dbg !665
  %127 = load i8, ptr %arrayidx6.2.2.i165, align 1, !dbg !665
  %conv7.2.2.i166 = zext i8 %127 to i32, !dbg !665
  %sub.2.2.i167 = sub nsw i32 %conv.2.2.i164, %conv7.2.2.i166, !dbg !665
  %128 = tail call i32 @llvm.abs.i32(i32 %sub.2.2.i167, i1 true), !dbg !665
  %add.2.2.i168 = add nuw nsw i32 %add.1.2.i162, %128, !dbg !665
    #dbg_value(i32 %add.2.2.i168, !528, !DIExpression(), !661)
    #dbg_value(i64 3, !531, !DIExpression(), !664)
  %129 = load i8, ptr %arrayidx.3.2.i, align 1, !dbg !665
  %conv.3.2.i170 = zext i8 %129 to i32, !dbg !665
  %arrayidx6.3.2.i171 = getelementptr inbounds i8, ptr %add.ptr9.1.i152, i64 3, !dbg !665
  %130 = load i8, ptr %arrayidx6.3.2.i171, align 1, !dbg !665
  %conv7.3.2.i172 = zext i8 %130 to i32, !dbg !665
  %sub.3.2.i173 = sub nsw i32 %conv.3.2.i170, %conv7.3.2.i172, !dbg !665
  %131 = tail call i32 @llvm.abs.i32(i32 %sub.3.2.i173, i1 true), !dbg !665
  %add.3.2.i174 = add nuw nsw i32 %add.2.2.i168, %131, !dbg !665
    #dbg_value(i32 %add.3.2.i174, !528, !DIExpression(), !661)
    #dbg_value(i64 4, !531, !DIExpression(), !664)
    #dbg_value(ptr %add.ptr.2.i, !524, !DIExpression(), !661)
  %add.ptr9.2.i176 = getelementptr inbounds i8, ptr %add.ptr9.1.i152, i64 %idx.ext8.i, !dbg !666
    #dbg_value(ptr %add.ptr9.2.i176, !526, !DIExpression(), !661)
    #dbg_value(i32 3, !529, !DIExpression(), !663)
    #dbg_value(i32 0, !531, !DIExpression(), !664)
    #dbg_value(i64 0, !531, !DIExpression(), !664)
    #dbg_value(i32 %add.3.2.i174, !528, !DIExpression(), !661)
  %132 = load i8, ptr %add.ptr.2.i, align 1, !dbg !665
  %conv.335.i177 = zext i8 %132 to i32, !dbg !665
  %133 = load i8, ptr %add.ptr9.2.i176, align 1, !dbg !665
  %conv7.336.i178 = zext i8 %133 to i32, !dbg !665
  %sub.337.i179 = sub nsw i32 %conv.335.i177, %conv7.336.i178, !dbg !665
  %134 = tail call i32 @llvm.abs.i32(i32 %sub.337.i179, i1 true), !dbg !665
  %add.338.i180 = add nuw nsw i32 %add.3.2.i174, %134, !dbg !665
    #dbg_value(i32 %add.338.i180, !528, !DIExpression(), !661)
    #dbg_value(i64 1, !531, !DIExpression(), !664)
  %135 = load i8, ptr %arrayidx.1.3.i, align 1, !dbg !665
  %conv.1.3.i182 = zext i8 %135 to i32, !dbg !665
  %arrayidx6.1.3.i183 = getelementptr inbounds i8, ptr %add.ptr9.2.i176, i64 1, !dbg !665
  %136 = load i8, ptr %arrayidx6.1.3.i183, align 1, !dbg !665
  %conv7.1.3.i184 = zext i8 %136 to i32, !dbg !665
  %sub.1.3.i185 = sub nsw i32 %conv.1.3.i182, %conv7.1.3.i184, !dbg !665
  %137 = tail call i32 @llvm.abs.i32(i32 %sub.1.3.i185, i1 true), !dbg !665
  %add.1.3.i186 = add nuw nsw i32 %add.338.i180, %137, !dbg !665
    #dbg_value(i32 %add.1.3.i186, !528, !DIExpression(), !661)
    #dbg_value(i64 2, !531, !DIExpression(), !664)
  %138 = load i8, ptr %arrayidx.2.3.i, align 1, !dbg !665
  %conv.2.3.i188 = zext i8 %138 to i32, !dbg !665
  %arrayidx6.2.3.i189 = getelementptr inbounds i8, ptr %add.ptr9.2.i176, i64 2, !dbg !665
  %139 = load i8, ptr %arrayidx6.2.3.i189, align 1, !dbg !665
  %conv7.2.3.i190 = zext i8 %139 to i32, !dbg !665
  %sub.2.3.i191 = sub nsw i32 %conv.2.3.i188, %conv7.2.3.i190, !dbg !665
  %140 = tail call i32 @llvm.abs.i32(i32 %sub.2.3.i191, i1 true), !dbg !665
  %add.2.3.i192 = add nuw nsw i32 %add.1.3.i186, %140, !dbg !665
    #dbg_value(i32 %add.2.3.i192, !528, !DIExpression(), !661)
    #dbg_value(i64 3, !531, !DIExpression(), !664)
  %141 = load i8, ptr %arrayidx.3.3.i, align 1, !dbg !665
  %conv.3.3.i194 = zext i8 %141 to i32, !dbg !665
  %arrayidx6.3.3.i195 = getelementptr inbounds i8, ptr %add.ptr9.2.i176, i64 3, !dbg !665
  %142 = load i8, ptr %arrayidx6.3.3.i195, align 1, !dbg !665
  %conv7.3.3.i196 = zext i8 %142 to i32, !dbg !665
  %sub.3.3.i197 = sub nsw i32 %conv.3.3.i194, %conv7.3.3.i196, !dbg !665
  %143 = tail call i32 @llvm.abs.i32(i32 %sub.3.3.i197, i1 true), !dbg !665
  %add.3.3.i198 = add nuw nsw i32 %add.2.3.i192, %143, !dbg !665
    #dbg_value(i32 %add.3.3.i198, !528, !DIExpression(), !661)
    #dbg_value(i64 4, !531, !DIExpression(), !664)
    #dbg_value(!DIArgList(ptr %add.ptr.2.i, i64 16), !524, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !661)
    #dbg_value(!DIArgList(ptr %add.ptr9.2.i176, i64 %idx.ext8.i), !526, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !661)
    #dbg_value(i32 4, !529, !DIExpression(), !663)
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !654
  store i32 %add.3.3.i198, ptr %arrayidx4, align 4, !dbg !654
  ret void, !dbg !654
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @x264_pixel_sad_x4_16x16(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #7 !dbg !667 {
entry:
    #dbg_value(ptr %fenc, !669, !DIExpression(), !676)
    #dbg_value(ptr %pix0, !670, !DIExpression(), !676)
    #dbg_value(ptr %pix1, !671, !DIExpression(), !676)
    #dbg_value(ptr %pix2, !672, !DIExpression(), !676)
    #dbg_value(ptr %pix3, !673, !DIExpression(), !676)
    #dbg_value(i32 %i_stride, !674, !DIExpression(), !676)
    #dbg_value(ptr %scores, !675, !DIExpression(), !676)
  %call = tail call i32 @x264_pixel_sad_16x16(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix0, i32 noundef %i_stride), !dbg !677
  store i32 %call, ptr %scores, align 4, !dbg !677
  %call1 = tail call i32 @x264_pixel_sad_16x16(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix1, i32 noundef %i_stride), !dbg !677
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !677
  store i32 %call1, ptr %arrayidx2, align 4, !dbg !677
  %call3 = tail call i32 @x264_pixel_sad_16x16(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix2, i32 noundef %i_stride), !dbg !677
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !677
  store i32 %call3, ptr %arrayidx4, align 4, !dbg !677
  %call5 = tail call i32 @x264_pixel_sad_16x16(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix3, i32 noundef %i_stride), !dbg !677
  %arrayidx6 = getelementptr inbounds i8, ptr %scores, i64 12, !dbg !677
  store i32 %call5, ptr %arrayidx6, align 4, !dbg !677
  ret void, !dbg !677
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @x264_pixel_sad_x4_16x8(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #7 !dbg !678 {
entry:
    #dbg_value(ptr %fenc, !680, !DIExpression(), !687)
    #dbg_value(ptr %pix0, !681, !DIExpression(), !687)
    #dbg_value(ptr %pix1, !682, !DIExpression(), !687)
    #dbg_value(ptr %pix2, !683, !DIExpression(), !687)
    #dbg_value(ptr %pix3, !684, !DIExpression(), !687)
    #dbg_value(i32 %i_stride, !685, !DIExpression(), !687)
    #dbg_value(ptr %scores, !686, !DIExpression(), !687)
  %call = tail call i32 @x264_pixel_sad_16x8(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix0, i32 noundef %i_stride), !dbg !688
  store i32 %call, ptr %scores, align 4, !dbg !688
  %call1 = tail call i32 @x264_pixel_sad_16x8(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix1, i32 noundef %i_stride), !dbg !688
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !688
  store i32 %call1, ptr %arrayidx2, align 4, !dbg !688
  %call3 = tail call i32 @x264_pixel_sad_16x8(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix2, i32 noundef %i_stride), !dbg !688
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !688
  store i32 %call3, ptr %arrayidx4, align 4, !dbg !688
  %call5 = tail call i32 @x264_pixel_sad_16x8(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix3, i32 noundef %i_stride), !dbg !688
  %arrayidx6 = getelementptr inbounds i8, ptr %scores, i64 12, !dbg !688
  store i32 %call5, ptr %arrayidx6, align 4, !dbg !688
  ret void, !dbg !688
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @x264_pixel_sad_x4_8x16(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #7 !dbg !689 {
entry:
    #dbg_value(ptr %fenc, !691, !DIExpression(), !698)
    #dbg_value(ptr %pix0, !692, !DIExpression(), !698)
    #dbg_value(ptr %pix1, !693, !DIExpression(), !698)
    #dbg_value(ptr %pix2, !694, !DIExpression(), !698)
    #dbg_value(ptr %pix3, !695, !DIExpression(), !698)
    #dbg_value(i32 %i_stride, !696, !DIExpression(), !698)
    #dbg_value(ptr %scores, !697, !DIExpression(), !698)
    #dbg_value(ptr %fenc, !440, !DIExpression(), !699)
    #dbg_value(i32 16, !441, !DIExpression(), !699)
    #dbg_value(ptr %pix0, !442, !DIExpression(), !699)
    #dbg_value(i32 %i_stride, !443, !DIExpression(), !699)
    #dbg_value(i32 0, !444, !DIExpression(), !699)
    #dbg_value(i32 0, !445, !DIExpression(), !701)
  %idx.ext8.i = sext i32 %i_stride to i64
    #dbg_value(i32 0, !445, !DIExpression(), !701)
    #dbg_value(i32 0, !444, !DIExpression(), !699)
    #dbg_value(ptr %fenc, !440, !DIExpression(), !699)
    #dbg_value(ptr %pix0, !442, !DIExpression(), !699)
    #dbg_value(i32 0, !445, !DIExpression(), !701)
    #dbg_value(ptr %fenc, !440, !DIExpression(), !699)
    #dbg_value(ptr %pix0, !442, !DIExpression(), !699)
    #dbg_value(i32 poison, !444, !DIExpression(), !699)
    #dbg_value(i64 7, !447, !DIExpression(), !702)
  %0 = load <8 x i8>, ptr %fenc, align 1, !dbg !703
  %1 = zext <8 x i8> %0 to <8 x i16>, !dbg !703
  %2 = load <8 x i8>, ptr %pix0, align 1, !dbg !703
  %3 = zext <8 x i8> %2 to <8 x i16>, !dbg !703
  %4 = sub nsw <8 x i16> %1, %3, !dbg !703
  %5 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %4, i1 false), !dbg !703
  %6 = zext <8 x i16> %5 to <8 x i32>, !dbg !703
  %7 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %6), !dbg !703
    #dbg_value(i32 %7, !444, !DIExpression(), !699)
    #dbg_value(i64 8, !447, !DIExpression(), !702)
  %add.ptr.i = getelementptr inbounds i8, ptr %fenc, i64 16, !dbg !704
    #dbg_value(ptr %add.ptr.i, !440, !DIExpression(), !699)
  %add.ptr9.i = getelementptr inbounds i8, ptr %pix0, i64 %idx.ext8.i, !dbg !704
    #dbg_value(ptr %add.ptr9.i, !442, !DIExpression(), !699)
    #dbg_value(i32 1, !445, !DIExpression(), !701)
    #dbg_value(i32 poison, !444, !DIExpression(), !699)
    #dbg_value(i64 7, !447, !DIExpression(), !702)
  %8 = load <8 x i8>, ptr %add.ptr.i, align 1, !dbg !703
  %9 = zext <8 x i8> %8 to <8 x i16>, !dbg !703
  %10 = load <8 x i8>, ptr %add.ptr9.i, align 1, !dbg !703
  %11 = zext <8 x i8> %10 to <8 x i16>, !dbg !703
  %12 = sub nsw <8 x i16> %9, %11, !dbg !703
  %13 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %12, i1 false), !dbg !703
  %14 = zext <8 x i16> %13 to <8 x i32>, !dbg !703
  %15 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %14), !dbg !703
  %op.rdx189.1 = add i32 %15, %7, !dbg !703
    #dbg_value(i32 %op.rdx189.1, !444, !DIExpression(), !699)
    #dbg_value(i64 8, !447, !DIExpression(), !702)
  %add.ptr.i.1 = getelementptr inbounds i8, ptr %fenc, i64 32, !dbg !704
    #dbg_value(ptr %add.ptr.i.1, !440, !DIExpression(), !699)
  %add.ptr9.i.1 = getelementptr inbounds i8, ptr %add.ptr9.i, i64 %idx.ext8.i, !dbg !704
    #dbg_value(ptr %add.ptr9.i.1, !442, !DIExpression(), !699)
    #dbg_value(i32 2, !445, !DIExpression(), !701)
    #dbg_value(i32 poison, !444, !DIExpression(), !699)
    #dbg_value(i64 7, !447, !DIExpression(), !702)
  %16 = load <8 x i8>, ptr %add.ptr.i.1, align 1, !dbg !703
  %17 = zext <8 x i8> %16 to <8 x i16>, !dbg !703
  %18 = load <8 x i8>, ptr %add.ptr9.i.1, align 1, !dbg !703
  %19 = zext <8 x i8> %18 to <8 x i16>, !dbg !703
  %20 = sub nsw <8 x i16> %17, %19, !dbg !703
  %21 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %20, i1 false), !dbg !703
  %22 = zext <8 x i16> %21 to <8 x i32>, !dbg !703
  %23 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %22), !dbg !703
  %op.rdx189.2 = add i32 %23, %op.rdx189.1, !dbg !703
    #dbg_value(i32 %op.rdx189.2, !444, !DIExpression(), !699)
    #dbg_value(i64 8, !447, !DIExpression(), !702)
  %add.ptr.i.2 = getelementptr inbounds i8, ptr %fenc, i64 48, !dbg !704
    #dbg_value(ptr %add.ptr.i.2, !440, !DIExpression(), !699)
  %add.ptr9.i.2 = getelementptr inbounds i8, ptr %add.ptr9.i.1, i64 %idx.ext8.i, !dbg !704
    #dbg_value(ptr %add.ptr9.i.2, !442, !DIExpression(), !699)
    #dbg_value(i32 3, !445, !DIExpression(), !701)
    #dbg_value(i32 poison, !444, !DIExpression(), !699)
    #dbg_value(i64 7, !447, !DIExpression(), !702)
  %24 = load <8 x i8>, ptr %add.ptr.i.2, align 1, !dbg !703
  %25 = zext <8 x i8> %24 to <8 x i16>, !dbg !703
  %26 = load <8 x i8>, ptr %add.ptr9.i.2, align 1, !dbg !703
  %27 = zext <8 x i8> %26 to <8 x i16>, !dbg !703
  %28 = sub nsw <8 x i16> %25, %27, !dbg !703
  %29 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %28, i1 false), !dbg !703
  %30 = zext <8 x i16> %29 to <8 x i32>, !dbg !703
  %31 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %30), !dbg !703
  %op.rdx189.3 = add i32 %31, %op.rdx189.2, !dbg !703
    #dbg_value(i32 %op.rdx189.3, !444, !DIExpression(), !699)
    #dbg_value(i64 8, !447, !DIExpression(), !702)
  %add.ptr.i.3 = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !704
    #dbg_value(ptr %add.ptr.i.3, !440, !DIExpression(), !699)
  %add.ptr9.i.3 = getelementptr inbounds i8, ptr %add.ptr9.i.2, i64 %idx.ext8.i, !dbg !704
    #dbg_value(ptr %add.ptr9.i.3, !442, !DIExpression(), !699)
    #dbg_value(i32 4, !445, !DIExpression(), !701)
    #dbg_value(i32 poison, !444, !DIExpression(), !699)
    #dbg_value(i64 7, !447, !DIExpression(), !702)
  %32 = load <8 x i8>, ptr %add.ptr.i.3, align 1, !dbg !703
  %33 = zext <8 x i8> %32 to <8 x i16>, !dbg !703
  %34 = load <8 x i8>, ptr %add.ptr9.i.3, align 1, !dbg !703
  %35 = zext <8 x i8> %34 to <8 x i16>, !dbg !703
  %36 = sub nsw <8 x i16> %33, %35, !dbg !703
  %37 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %36, i1 false), !dbg !703
  %38 = zext <8 x i16> %37 to <8 x i32>, !dbg !703
  %39 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %38), !dbg !703
  %op.rdx189.4 = add i32 %39, %op.rdx189.3, !dbg !703
    #dbg_value(i32 %op.rdx189.4, !444, !DIExpression(), !699)
    #dbg_value(i64 8, !447, !DIExpression(), !702)
  %add.ptr.i.4 = getelementptr inbounds i8, ptr %fenc, i64 80, !dbg !704
    #dbg_value(ptr %add.ptr.i.4, !440, !DIExpression(), !699)
  %add.ptr9.i.4 = getelementptr inbounds i8, ptr %add.ptr9.i.3, i64 %idx.ext8.i, !dbg !704
    #dbg_value(ptr %add.ptr9.i.4, !442, !DIExpression(), !699)
    #dbg_value(i32 5, !445, !DIExpression(), !701)
    #dbg_value(i32 poison, !444, !DIExpression(), !699)
    #dbg_value(i64 7, !447, !DIExpression(), !702)
  %40 = load <8 x i8>, ptr %add.ptr.i.4, align 1, !dbg !703
  %41 = zext <8 x i8> %40 to <8 x i16>, !dbg !703
  %42 = load <8 x i8>, ptr %add.ptr9.i.4, align 1, !dbg !703
  %43 = zext <8 x i8> %42 to <8 x i16>, !dbg !703
  %44 = sub nsw <8 x i16> %41, %43, !dbg !703
  %45 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %44, i1 false), !dbg !703
  %46 = zext <8 x i16> %45 to <8 x i32>, !dbg !703
  %47 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %46), !dbg !703
  %op.rdx189.5 = add i32 %47, %op.rdx189.4, !dbg !703
    #dbg_value(i32 %op.rdx189.5, !444, !DIExpression(), !699)
    #dbg_value(i64 8, !447, !DIExpression(), !702)
  %add.ptr.i.5 = getelementptr inbounds i8, ptr %fenc, i64 96, !dbg !704
    #dbg_value(ptr %add.ptr.i.5, !440, !DIExpression(), !699)
  %add.ptr9.i.5 = getelementptr inbounds i8, ptr %add.ptr9.i.4, i64 %idx.ext8.i, !dbg !704
    #dbg_value(ptr %add.ptr9.i.5, !442, !DIExpression(), !699)
    #dbg_value(i32 6, !445, !DIExpression(), !701)
    #dbg_value(i32 poison, !444, !DIExpression(), !699)
    #dbg_value(i64 7, !447, !DIExpression(), !702)
  %48 = load <8 x i8>, ptr %add.ptr.i.5, align 1, !dbg !703
  %49 = zext <8 x i8> %48 to <8 x i16>, !dbg !703
  %50 = load <8 x i8>, ptr %add.ptr9.i.5, align 1, !dbg !703
  %51 = zext <8 x i8> %50 to <8 x i16>, !dbg !703
  %52 = sub nsw <8 x i16> %49, %51, !dbg !703
  %53 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %52, i1 false), !dbg !703
  %54 = zext <8 x i16> %53 to <8 x i32>, !dbg !703
  %55 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %54), !dbg !703
  %op.rdx189.6 = add i32 %55, %op.rdx189.5, !dbg !703
    #dbg_value(i32 %op.rdx189.6, !444, !DIExpression(), !699)
    #dbg_value(i64 8, !447, !DIExpression(), !702)
  %add.ptr.i.6 = getelementptr inbounds i8, ptr %fenc, i64 112, !dbg !704
    #dbg_value(ptr %add.ptr.i.6, !440, !DIExpression(), !699)
  %add.ptr9.i.6 = getelementptr inbounds i8, ptr %add.ptr9.i.5, i64 %idx.ext8.i, !dbg !704
    #dbg_value(ptr %add.ptr9.i.6, !442, !DIExpression(), !699)
    #dbg_value(i32 7, !445, !DIExpression(), !701)
    #dbg_value(i32 poison, !444, !DIExpression(), !699)
    #dbg_value(i64 7, !447, !DIExpression(), !702)
  %56 = load <8 x i8>, ptr %add.ptr.i.6, align 1, !dbg !703
  %57 = zext <8 x i8> %56 to <8 x i16>, !dbg !703
  %58 = load <8 x i8>, ptr %add.ptr9.i.6, align 1, !dbg !703
  %59 = zext <8 x i8> %58 to <8 x i16>, !dbg !703
  %60 = sub nsw <8 x i16> %57, %59, !dbg !703
  %61 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %60, i1 false), !dbg !703
  %62 = zext <8 x i16> %61 to <8 x i32>, !dbg !703
  %63 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %62), !dbg !703
  %op.rdx189.7 = add i32 %63, %op.rdx189.6, !dbg !703
    #dbg_value(i32 %op.rdx189.7, !444, !DIExpression(), !699)
    #dbg_value(i64 8, !447, !DIExpression(), !702)
  %add.ptr.i.7 = getelementptr inbounds i8, ptr %fenc, i64 128, !dbg !704
    #dbg_value(ptr %add.ptr.i.7, !440, !DIExpression(), !699)
  %add.ptr9.i.7 = getelementptr inbounds i8, ptr %add.ptr9.i.6, i64 %idx.ext8.i, !dbg !704
    #dbg_value(ptr %add.ptr9.i.7, !442, !DIExpression(), !699)
    #dbg_value(i32 8, !445, !DIExpression(), !701)
    #dbg_value(i32 poison, !444, !DIExpression(), !699)
    #dbg_value(i64 7, !447, !DIExpression(), !702)
  %64 = load <8 x i8>, ptr %add.ptr.i.7, align 1, !dbg !703
  %65 = zext <8 x i8> %64 to <8 x i16>, !dbg !703
  %66 = load <8 x i8>, ptr %add.ptr9.i.7, align 1, !dbg !703
  %67 = zext <8 x i8> %66 to <8 x i16>, !dbg !703
  %68 = sub nsw <8 x i16> %65, %67, !dbg !703
  %69 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %68, i1 false), !dbg !703
  %70 = zext <8 x i16> %69 to <8 x i32>, !dbg !703
  %71 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %70), !dbg !703
  %op.rdx189.8 = add i32 %71, %op.rdx189.7, !dbg !703
    #dbg_value(i32 %op.rdx189.8, !444, !DIExpression(), !699)
    #dbg_value(i64 8, !447, !DIExpression(), !702)
  %add.ptr.i.8 = getelementptr inbounds i8, ptr %fenc, i64 144, !dbg !704
    #dbg_value(ptr %add.ptr.i.8, !440, !DIExpression(), !699)
  %add.ptr9.i.8 = getelementptr inbounds i8, ptr %add.ptr9.i.7, i64 %idx.ext8.i, !dbg !704
    #dbg_value(ptr %add.ptr9.i.8, !442, !DIExpression(), !699)
    #dbg_value(i32 9, !445, !DIExpression(), !701)
    #dbg_value(i32 poison, !444, !DIExpression(), !699)
    #dbg_value(i64 7, !447, !DIExpression(), !702)
  %72 = load <8 x i8>, ptr %add.ptr.i.8, align 1, !dbg !703
  %73 = zext <8 x i8> %72 to <8 x i16>, !dbg !703
  %74 = load <8 x i8>, ptr %add.ptr9.i.8, align 1, !dbg !703
  %75 = zext <8 x i8> %74 to <8 x i16>, !dbg !703
  %76 = sub nsw <8 x i16> %73, %75, !dbg !703
  %77 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %76, i1 false), !dbg !703
  %78 = zext <8 x i16> %77 to <8 x i32>, !dbg !703
  %79 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %78), !dbg !703
  %op.rdx189.9 = add i32 %79, %op.rdx189.8, !dbg !703
    #dbg_value(i32 %op.rdx189.9, !444, !DIExpression(), !699)
    #dbg_value(i64 8, !447, !DIExpression(), !702)
  %add.ptr.i.9 = getelementptr inbounds i8, ptr %fenc, i64 160, !dbg !704
    #dbg_value(ptr %add.ptr.i.9, !440, !DIExpression(), !699)
  %add.ptr9.i.9 = getelementptr inbounds i8, ptr %add.ptr9.i.8, i64 %idx.ext8.i, !dbg !704
    #dbg_value(ptr %add.ptr9.i.9, !442, !DIExpression(), !699)
    #dbg_value(i32 10, !445, !DIExpression(), !701)
    #dbg_value(i32 poison, !444, !DIExpression(), !699)
    #dbg_value(i64 7, !447, !DIExpression(), !702)
  %80 = load <8 x i8>, ptr %add.ptr.i.9, align 1, !dbg !703
  %81 = zext <8 x i8> %80 to <8 x i16>, !dbg !703
  %82 = load <8 x i8>, ptr %add.ptr9.i.9, align 1, !dbg !703
  %83 = zext <8 x i8> %82 to <8 x i16>, !dbg !703
  %84 = sub nsw <8 x i16> %81, %83, !dbg !703
  %85 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %84, i1 false), !dbg !703
  %86 = zext <8 x i16> %85 to <8 x i32>, !dbg !703
  %87 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %86), !dbg !703
  %op.rdx189.10 = add i32 %87, %op.rdx189.9, !dbg !703
    #dbg_value(i32 %op.rdx189.10, !444, !DIExpression(), !699)
    #dbg_value(i64 8, !447, !DIExpression(), !702)
  %add.ptr.i.10 = getelementptr inbounds i8, ptr %fenc, i64 176, !dbg !704
    #dbg_value(ptr %add.ptr.i.10, !440, !DIExpression(), !699)
  %add.ptr9.i.10 = getelementptr inbounds i8, ptr %add.ptr9.i.9, i64 %idx.ext8.i, !dbg !704
    #dbg_value(ptr %add.ptr9.i.10, !442, !DIExpression(), !699)
    #dbg_value(i32 11, !445, !DIExpression(), !701)
    #dbg_value(i32 poison, !444, !DIExpression(), !699)
    #dbg_value(i64 7, !447, !DIExpression(), !702)
  %88 = load <8 x i8>, ptr %add.ptr.i.10, align 1, !dbg !703
  %89 = zext <8 x i8> %88 to <8 x i16>, !dbg !703
  %90 = load <8 x i8>, ptr %add.ptr9.i.10, align 1, !dbg !703
  %91 = zext <8 x i8> %90 to <8 x i16>, !dbg !703
  %92 = sub nsw <8 x i16> %89, %91, !dbg !703
  %93 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %92, i1 false), !dbg !703
  %94 = zext <8 x i16> %93 to <8 x i32>, !dbg !703
  %95 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %94), !dbg !703
  %op.rdx189.11 = add i32 %95, %op.rdx189.10, !dbg !703
    #dbg_value(i32 %op.rdx189.11, !444, !DIExpression(), !699)
    #dbg_value(i64 8, !447, !DIExpression(), !702)
  %add.ptr.i.11 = getelementptr inbounds i8, ptr %fenc, i64 192, !dbg !704
    #dbg_value(ptr %add.ptr.i.11, !440, !DIExpression(), !699)
  %add.ptr9.i.11 = getelementptr inbounds i8, ptr %add.ptr9.i.10, i64 %idx.ext8.i, !dbg !704
    #dbg_value(ptr %add.ptr9.i.11, !442, !DIExpression(), !699)
    #dbg_value(i32 12, !445, !DIExpression(), !701)
    #dbg_value(i32 poison, !444, !DIExpression(), !699)
    #dbg_value(i64 7, !447, !DIExpression(), !702)
  %96 = load <8 x i8>, ptr %add.ptr.i.11, align 1, !dbg !703
  %97 = zext <8 x i8> %96 to <8 x i16>, !dbg !703
  %98 = load <8 x i8>, ptr %add.ptr9.i.11, align 1, !dbg !703
  %99 = zext <8 x i8> %98 to <8 x i16>, !dbg !703
  %100 = sub nsw <8 x i16> %97, %99, !dbg !703
  %101 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %100, i1 false), !dbg !703
  %102 = zext <8 x i16> %101 to <8 x i32>, !dbg !703
  %103 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %102), !dbg !703
  %op.rdx189.12 = add i32 %103, %op.rdx189.11, !dbg !703
    #dbg_value(i32 %op.rdx189.12, !444, !DIExpression(), !699)
    #dbg_value(i64 8, !447, !DIExpression(), !702)
  %add.ptr.i.12 = getelementptr inbounds i8, ptr %fenc, i64 208, !dbg !704
    #dbg_value(ptr %add.ptr.i.12, !440, !DIExpression(), !699)
  %add.ptr9.i.12 = getelementptr inbounds i8, ptr %add.ptr9.i.11, i64 %idx.ext8.i, !dbg !704
    #dbg_value(ptr %add.ptr9.i.12, !442, !DIExpression(), !699)
    #dbg_value(i32 13, !445, !DIExpression(), !701)
    #dbg_value(i32 poison, !444, !DIExpression(), !699)
    #dbg_value(i64 7, !447, !DIExpression(), !702)
  %104 = load <8 x i8>, ptr %add.ptr.i.12, align 1, !dbg !703
  %105 = zext <8 x i8> %104 to <8 x i16>, !dbg !703
  %106 = load <8 x i8>, ptr %add.ptr9.i.12, align 1, !dbg !703
  %107 = zext <8 x i8> %106 to <8 x i16>, !dbg !703
  %108 = sub nsw <8 x i16> %105, %107, !dbg !703
  %109 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %108, i1 false), !dbg !703
  %110 = zext <8 x i16> %109 to <8 x i32>, !dbg !703
  %111 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %110), !dbg !703
  %op.rdx189.13 = add i32 %111, %op.rdx189.12, !dbg !703
    #dbg_value(i32 %op.rdx189.13, !444, !DIExpression(), !699)
    #dbg_value(i64 8, !447, !DIExpression(), !702)
  %add.ptr.i.13 = getelementptr inbounds i8, ptr %fenc, i64 224, !dbg !704
    #dbg_value(ptr %add.ptr.i.13, !440, !DIExpression(), !699)
  %add.ptr9.i.13 = getelementptr inbounds i8, ptr %add.ptr9.i.12, i64 %idx.ext8.i, !dbg !704
    #dbg_value(ptr %add.ptr9.i.13, !442, !DIExpression(), !699)
    #dbg_value(i32 14, !445, !DIExpression(), !701)
    #dbg_value(i32 poison, !444, !DIExpression(), !699)
    #dbg_value(i64 7, !447, !DIExpression(), !702)
  %112 = load <8 x i8>, ptr %add.ptr.i.13, align 1, !dbg !703
  %113 = zext <8 x i8> %112 to <8 x i16>, !dbg !703
  %114 = load <8 x i8>, ptr %add.ptr9.i.13, align 1, !dbg !703
  %115 = zext <8 x i8> %114 to <8 x i16>, !dbg !703
  %116 = sub nsw <8 x i16> %113, %115, !dbg !703
  %117 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %116, i1 false), !dbg !703
  %118 = zext <8 x i16> %117 to <8 x i32>, !dbg !703
  %119 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %118), !dbg !703
  %op.rdx189.14 = add i32 %119, %op.rdx189.13, !dbg !703
    #dbg_value(i32 %op.rdx189.14, !444, !DIExpression(), !699)
    #dbg_value(i64 8, !447, !DIExpression(), !702)
  %add.ptr.i.14 = getelementptr inbounds i8, ptr %fenc, i64 240, !dbg !704
    #dbg_value(ptr %add.ptr.i.14, !440, !DIExpression(), !699)
  %add.ptr9.i.14 = getelementptr inbounds i8, ptr %add.ptr9.i.13, i64 %idx.ext8.i, !dbg !704
    #dbg_value(ptr %add.ptr9.i.14, !442, !DIExpression(), !699)
    #dbg_value(i32 15, !445, !DIExpression(), !701)
    #dbg_value(i32 poison, !444, !DIExpression(), !699)
    #dbg_value(i64 7, !447, !DIExpression(), !702)
  %120 = load <8 x i8>, ptr %add.ptr.i.14, align 1, !dbg !703
  %121 = zext <8 x i8> %120 to <8 x i16>, !dbg !703
  %122 = load <8 x i8>, ptr %add.ptr9.i.14, align 1, !dbg !703
  %123 = zext <8 x i8> %122 to <8 x i16>, !dbg !703
  %124 = sub nsw <8 x i16> %121, %123, !dbg !703
  %125 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %124, i1 false), !dbg !703
  %126 = zext <8 x i16> %125 to <8 x i32>, !dbg !703
  %127 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %126), !dbg !703
  %op.rdx189.15 = add i32 %127, %op.rdx189.14, !dbg !703
    #dbg_value(i32 %op.rdx189.15, !444, !DIExpression(), !699)
    #dbg_value(i64 8, !447, !DIExpression(), !702)
    #dbg_value(ptr %add.ptr.i.14, !440, !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value), !699)
    #dbg_value(!DIArgList(ptr %add.ptr9.i.14, i64 %idx.ext8.i), !442, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !699)
    #dbg_value(i32 16, !445, !DIExpression(), !701)
  store i32 %op.rdx189.15, ptr %scores, align 4, !dbg !705
    #dbg_value(i32 16, !441, !DIExpression(), !706)
    #dbg_value(i32 %i_stride, !443, !DIExpression(), !706)
    #dbg_value(i32 0, !445, !DIExpression(), !708)
    #dbg_value(i32 0, !444, !DIExpression(), !706)
    #dbg_value(ptr %fenc, !440, !DIExpression(), !706)
    #dbg_value(ptr %pix1, !442, !DIExpression(), !706)
    #dbg_value(i32 0, !445, !DIExpression(), !708)
    #dbg_value(ptr %fenc, !440, !DIExpression(), !706)
    #dbg_value(ptr %pix1, !442, !DIExpression(), !706)
    #dbg_value(i32 poison, !444, !DIExpression(), !706)
    #dbg_value(i64 7, !447, !DIExpression(), !709)
  %128 = load <8 x i8>, ptr %fenc, align 1, !dbg !710
  %129 = zext <8 x i8> %128 to <8 x i16>, !dbg !710
  %130 = load <8 x i8>, ptr %pix1, align 1, !dbg !710
  %131 = zext <8 x i8> %130 to <8 x i16>, !dbg !710
  %132 = sub nsw <8 x i16> %129, %131, !dbg !710
  %133 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %132, i1 false), !dbg !710
  %134 = zext <8 x i16> %133 to <8 x i32>, !dbg !710
  %135 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %134), !dbg !710
    #dbg_value(i32 %135, !444, !DIExpression(), !706)
    #dbg_value(i64 8, !447, !DIExpression(), !709)
  %add.ptr.i68 = getelementptr inbounds i8, ptr %fenc, i64 16, !dbg !711
    #dbg_value(ptr %add.ptr.i68, !440, !DIExpression(), !706)
  %add.ptr9.i69 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext8.i, !dbg !711
    #dbg_value(ptr %add.ptr9.i69, !442, !DIExpression(), !706)
    #dbg_value(i32 1, !445, !DIExpression(), !708)
    #dbg_value(i32 poison, !444, !DIExpression(), !706)
    #dbg_value(i64 7, !447, !DIExpression(), !709)
  %136 = load <8 x i8>, ptr %add.ptr.i68, align 1, !dbg !710
  %137 = zext <8 x i8> %136 to <8 x i16>, !dbg !710
  %138 = load <8 x i8>, ptr %add.ptr9.i69, align 1, !dbg !710
  %139 = zext <8 x i8> %138 to <8 x i16>, !dbg !710
  %140 = sub nsw <8 x i16> %137, %139, !dbg !710
  %141 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %140, i1 false), !dbg !710
  %142 = zext <8 x i16> %141 to <8 x i32>, !dbg !710
  %143 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %142), !dbg !710
  %op.rdx188.1 = add i32 %143, %135, !dbg !710
    #dbg_value(i32 %op.rdx188.1, !444, !DIExpression(), !706)
    #dbg_value(i64 8, !447, !DIExpression(), !709)
  %add.ptr.i68.1 = getelementptr inbounds i8, ptr %fenc, i64 32, !dbg !711
    #dbg_value(ptr %add.ptr.i68.1, !440, !DIExpression(), !706)
  %add.ptr9.i69.1 = getelementptr inbounds i8, ptr %add.ptr9.i69, i64 %idx.ext8.i, !dbg !711
    #dbg_value(ptr %add.ptr9.i69.1, !442, !DIExpression(), !706)
    #dbg_value(i32 2, !445, !DIExpression(), !708)
    #dbg_value(i32 poison, !444, !DIExpression(), !706)
    #dbg_value(i64 7, !447, !DIExpression(), !709)
  %144 = load <8 x i8>, ptr %add.ptr.i68.1, align 1, !dbg !710
  %145 = zext <8 x i8> %144 to <8 x i16>, !dbg !710
  %146 = load <8 x i8>, ptr %add.ptr9.i69.1, align 1, !dbg !710
  %147 = zext <8 x i8> %146 to <8 x i16>, !dbg !710
  %148 = sub nsw <8 x i16> %145, %147, !dbg !710
  %149 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %148, i1 false), !dbg !710
  %150 = zext <8 x i16> %149 to <8 x i32>, !dbg !710
  %151 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %150), !dbg !710
  %op.rdx188.2 = add i32 %151, %op.rdx188.1, !dbg !710
    #dbg_value(i32 %op.rdx188.2, !444, !DIExpression(), !706)
    #dbg_value(i64 8, !447, !DIExpression(), !709)
  %add.ptr.i68.2 = getelementptr inbounds i8, ptr %fenc, i64 48, !dbg !711
    #dbg_value(ptr %add.ptr.i68.2, !440, !DIExpression(), !706)
  %add.ptr9.i69.2 = getelementptr inbounds i8, ptr %add.ptr9.i69.1, i64 %idx.ext8.i, !dbg !711
    #dbg_value(ptr %add.ptr9.i69.2, !442, !DIExpression(), !706)
    #dbg_value(i32 3, !445, !DIExpression(), !708)
    #dbg_value(i32 poison, !444, !DIExpression(), !706)
    #dbg_value(i64 7, !447, !DIExpression(), !709)
  %152 = load <8 x i8>, ptr %add.ptr.i68.2, align 1, !dbg !710
  %153 = zext <8 x i8> %152 to <8 x i16>, !dbg !710
  %154 = load <8 x i8>, ptr %add.ptr9.i69.2, align 1, !dbg !710
  %155 = zext <8 x i8> %154 to <8 x i16>, !dbg !710
  %156 = sub nsw <8 x i16> %153, %155, !dbg !710
  %157 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %156, i1 false), !dbg !710
  %158 = zext <8 x i16> %157 to <8 x i32>, !dbg !710
  %159 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %158), !dbg !710
  %op.rdx188.3 = add i32 %159, %op.rdx188.2, !dbg !710
    #dbg_value(i32 %op.rdx188.3, !444, !DIExpression(), !706)
    #dbg_value(i64 8, !447, !DIExpression(), !709)
  %add.ptr.i68.3 = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !711
    #dbg_value(ptr %add.ptr.i68.3, !440, !DIExpression(), !706)
  %add.ptr9.i69.3 = getelementptr inbounds i8, ptr %add.ptr9.i69.2, i64 %idx.ext8.i, !dbg !711
    #dbg_value(ptr %add.ptr9.i69.3, !442, !DIExpression(), !706)
    #dbg_value(i32 4, !445, !DIExpression(), !708)
    #dbg_value(i32 poison, !444, !DIExpression(), !706)
    #dbg_value(i64 7, !447, !DIExpression(), !709)
  %160 = load <8 x i8>, ptr %add.ptr.i68.3, align 1, !dbg !710
  %161 = zext <8 x i8> %160 to <8 x i16>, !dbg !710
  %162 = load <8 x i8>, ptr %add.ptr9.i69.3, align 1, !dbg !710
  %163 = zext <8 x i8> %162 to <8 x i16>, !dbg !710
  %164 = sub nsw <8 x i16> %161, %163, !dbg !710
  %165 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %164, i1 false), !dbg !710
  %166 = zext <8 x i16> %165 to <8 x i32>, !dbg !710
  %167 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %166), !dbg !710
  %op.rdx188.4 = add i32 %167, %op.rdx188.3, !dbg !710
    #dbg_value(i32 %op.rdx188.4, !444, !DIExpression(), !706)
    #dbg_value(i64 8, !447, !DIExpression(), !709)
  %add.ptr.i68.4 = getelementptr inbounds i8, ptr %fenc, i64 80, !dbg !711
    #dbg_value(ptr %add.ptr.i68.4, !440, !DIExpression(), !706)
  %add.ptr9.i69.4 = getelementptr inbounds i8, ptr %add.ptr9.i69.3, i64 %idx.ext8.i, !dbg !711
    #dbg_value(ptr %add.ptr9.i69.4, !442, !DIExpression(), !706)
    #dbg_value(i32 5, !445, !DIExpression(), !708)
    #dbg_value(i32 poison, !444, !DIExpression(), !706)
    #dbg_value(i64 7, !447, !DIExpression(), !709)
  %168 = load <8 x i8>, ptr %add.ptr.i68.4, align 1, !dbg !710
  %169 = zext <8 x i8> %168 to <8 x i16>, !dbg !710
  %170 = load <8 x i8>, ptr %add.ptr9.i69.4, align 1, !dbg !710
  %171 = zext <8 x i8> %170 to <8 x i16>, !dbg !710
  %172 = sub nsw <8 x i16> %169, %171, !dbg !710
  %173 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %172, i1 false), !dbg !710
  %174 = zext <8 x i16> %173 to <8 x i32>, !dbg !710
  %175 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %174), !dbg !710
  %op.rdx188.5 = add i32 %175, %op.rdx188.4, !dbg !710
    #dbg_value(i32 %op.rdx188.5, !444, !DIExpression(), !706)
    #dbg_value(i64 8, !447, !DIExpression(), !709)
  %add.ptr.i68.5 = getelementptr inbounds i8, ptr %fenc, i64 96, !dbg !711
    #dbg_value(ptr %add.ptr.i68.5, !440, !DIExpression(), !706)
  %add.ptr9.i69.5 = getelementptr inbounds i8, ptr %add.ptr9.i69.4, i64 %idx.ext8.i, !dbg !711
    #dbg_value(ptr %add.ptr9.i69.5, !442, !DIExpression(), !706)
    #dbg_value(i32 6, !445, !DIExpression(), !708)
    #dbg_value(i32 poison, !444, !DIExpression(), !706)
    #dbg_value(i64 7, !447, !DIExpression(), !709)
  %176 = load <8 x i8>, ptr %add.ptr.i68.5, align 1, !dbg !710
  %177 = zext <8 x i8> %176 to <8 x i16>, !dbg !710
  %178 = load <8 x i8>, ptr %add.ptr9.i69.5, align 1, !dbg !710
  %179 = zext <8 x i8> %178 to <8 x i16>, !dbg !710
  %180 = sub nsw <8 x i16> %177, %179, !dbg !710
  %181 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %180, i1 false), !dbg !710
  %182 = zext <8 x i16> %181 to <8 x i32>, !dbg !710
  %183 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %182), !dbg !710
  %op.rdx188.6 = add i32 %183, %op.rdx188.5, !dbg !710
    #dbg_value(i32 %op.rdx188.6, !444, !DIExpression(), !706)
    #dbg_value(i64 8, !447, !DIExpression(), !709)
  %add.ptr.i68.6 = getelementptr inbounds i8, ptr %fenc, i64 112, !dbg !711
    #dbg_value(ptr %add.ptr.i68.6, !440, !DIExpression(), !706)
  %add.ptr9.i69.6 = getelementptr inbounds i8, ptr %add.ptr9.i69.5, i64 %idx.ext8.i, !dbg !711
    #dbg_value(ptr %add.ptr9.i69.6, !442, !DIExpression(), !706)
    #dbg_value(i32 7, !445, !DIExpression(), !708)
    #dbg_value(i32 poison, !444, !DIExpression(), !706)
    #dbg_value(i64 7, !447, !DIExpression(), !709)
  %184 = load <8 x i8>, ptr %add.ptr.i68.6, align 1, !dbg !710
  %185 = zext <8 x i8> %184 to <8 x i16>, !dbg !710
  %186 = load <8 x i8>, ptr %add.ptr9.i69.6, align 1, !dbg !710
  %187 = zext <8 x i8> %186 to <8 x i16>, !dbg !710
  %188 = sub nsw <8 x i16> %185, %187, !dbg !710
  %189 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %188, i1 false), !dbg !710
  %190 = zext <8 x i16> %189 to <8 x i32>, !dbg !710
  %191 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %190), !dbg !710
  %op.rdx188.7 = add i32 %191, %op.rdx188.6, !dbg !710
    #dbg_value(i32 %op.rdx188.7, !444, !DIExpression(), !706)
    #dbg_value(i64 8, !447, !DIExpression(), !709)
  %add.ptr.i68.7 = getelementptr inbounds i8, ptr %fenc, i64 128, !dbg !711
    #dbg_value(ptr %add.ptr.i68.7, !440, !DIExpression(), !706)
  %add.ptr9.i69.7 = getelementptr inbounds i8, ptr %add.ptr9.i69.6, i64 %idx.ext8.i, !dbg !711
    #dbg_value(ptr %add.ptr9.i69.7, !442, !DIExpression(), !706)
    #dbg_value(i32 8, !445, !DIExpression(), !708)
    #dbg_value(i32 poison, !444, !DIExpression(), !706)
    #dbg_value(i64 7, !447, !DIExpression(), !709)
  %192 = load <8 x i8>, ptr %add.ptr.i68.7, align 1, !dbg !710
  %193 = zext <8 x i8> %192 to <8 x i16>, !dbg !710
  %194 = load <8 x i8>, ptr %add.ptr9.i69.7, align 1, !dbg !710
  %195 = zext <8 x i8> %194 to <8 x i16>, !dbg !710
  %196 = sub nsw <8 x i16> %193, %195, !dbg !710
  %197 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %196, i1 false), !dbg !710
  %198 = zext <8 x i16> %197 to <8 x i32>, !dbg !710
  %199 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %198), !dbg !710
  %op.rdx188.8 = add i32 %199, %op.rdx188.7, !dbg !710
    #dbg_value(i32 %op.rdx188.8, !444, !DIExpression(), !706)
    #dbg_value(i64 8, !447, !DIExpression(), !709)
  %add.ptr.i68.8 = getelementptr inbounds i8, ptr %fenc, i64 144, !dbg !711
    #dbg_value(ptr %add.ptr.i68.8, !440, !DIExpression(), !706)
  %add.ptr9.i69.8 = getelementptr inbounds i8, ptr %add.ptr9.i69.7, i64 %idx.ext8.i, !dbg !711
    #dbg_value(ptr %add.ptr9.i69.8, !442, !DIExpression(), !706)
    #dbg_value(i32 9, !445, !DIExpression(), !708)
    #dbg_value(i32 poison, !444, !DIExpression(), !706)
    #dbg_value(i64 7, !447, !DIExpression(), !709)
  %200 = load <8 x i8>, ptr %add.ptr.i68.8, align 1, !dbg !710
  %201 = zext <8 x i8> %200 to <8 x i16>, !dbg !710
  %202 = load <8 x i8>, ptr %add.ptr9.i69.8, align 1, !dbg !710
  %203 = zext <8 x i8> %202 to <8 x i16>, !dbg !710
  %204 = sub nsw <8 x i16> %201, %203, !dbg !710
  %205 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %204, i1 false), !dbg !710
  %206 = zext <8 x i16> %205 to <8 x i32>, !dbg !710
  %207 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %206), !dbg !710
  %op.rdx188.9 = add i32 %207, %op.rdx188.8, !dbg !710
    #dbg_value(i32 %op.rdx188.9, !444, !DIExpression(), !706)
    #dbg_value(i64 8, !447, !DIExpression(), !709)
  %add.ptr.i68.9 = getelementptr inbounds i8, ptr %fenc, i64 160, !dbg !711
    #dbg_value(ptr %add.ptr.i68.9, !440, !DIExpression(), !706)
  %add.ptr9.i69.9 = getelementptr inbounds i8, ptr %add.ptr9.i69.8, i64 %idx.ext8.i, !dbg !711
    #dbg_value(ptr %add.ptr9.i69.9, !442, !DIExpression(), !706)
    #dbg_value(i32 10, !445, !DIExpression(), !708)
    #dbg_value(i32 poison, !444, !DIExpression(), !706)
    #dbg_value(i64 7, !447, !DIExpression(), !709)
  %208 = load <8 x i8>, ptr %add.ptr.i68.9, align 1, !dbg !710
  %209 = zext <8 x i8> %208 to <8 x i16>, !dbg !710
  %210 = load <8 x i8>, ptr %add.ptr9.i69.9, align 1, !dbg !710
  %211 = zext <8 x i8> %210 to <8 x i16>, !dbg !710
  %212 = sub nsw <8 x i16> %209, %211, !dbg !710
  %213 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %212, i1 false), !dbg !710
  %214 = zext <8 x i16> %213 to <8 x i32>, !dbg !710
  %215 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %214), !dbg !710
  %op.rdx188.10 = add i32 %215, %op.rdx188.9, !dbg !710
    #dbg_value(i32 %op.rdx188.10, !444, !DIExpression(), !706)
    #dbg_value(i64 8, !447, !DIExpression(), !709)
  %add.ptr.i68.10 = getelementptr inbounds i8, ptr %fenc, i64 176, !dbg !711
    #dbg_value(ptr %add.ptr.i68.10, !440, !DIExpression(), !706)
  %add.ptr9.i69.10 = getelementptr inbounds i8, ptr %add.ptr9.i69.9, i64 %idx.ext8.i, !dbg !711
    #dbg_value(ptr %add.ptr9.i69.10, !442, !DIExpression(), !706)
    #dbg_value(i32 11, !445, !DIExpression(), !708)
    #dbg_value(i32 poison, !444, !DIExpression(), !706)
    #dbg_value(i64 7, !447, !DIExpression(), !709)
  %216 = load <8 x i8>, ptr %add.ptr.i68.10, align 1, !dbg !710
  %217 = zext <8 x i8> %216 to <8 x i16>, !dbg !710
  %218 = load <8 x i8>, ptr %add.ptr9.i69.10, align 1, !dbg !710
  %219 = zext <8 x i8> %218 to <8 x i16>, !dbg !710
  %220 = sub nsw <8 x i16> %217, %219, !dbg !710
  %221 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %220, i1 false), !dbg !710
  %222 = zext <8 x i16> %221 to <8 x i32>, !dbg !710
  %223 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %222), !dbg !710
  %op.rdx188.11 = add i32 %223, %op.rdx188.10, !dbg !710
    #dbg_value(i32 %op.rdx188.11, !444, !DIExpression(), !706)
    #dbg_value(i64 8, !447, !DIExpression(), !709)
  %add.ptr.i68.11 = getelementptr inbounds i8, ptr %fenc, i64 192, !dbg !711
    #dbg_value(ptr %add.ptr.i68.11, !440, !DIExpression(), !706)
  %add.ptr9.i69.11 = getelementptr inbounds i8, ptr %add.ptr9.i69.10, i64 %idx.ext8.i, !dbg !711
    #dbg_value(ptr %add.ptr9.i69.11, !442, !DIExpression(), !706)
    #dbg_value(i32 12, !445, !DIExpression(), !708)
    #dbg_value(i32 poison, !444, !DIExpression(), !706)
    #dbg_value(i64 7, !447, !DIExpression(), !709)
  %224 = load <8 x i8>, ptr %add.ptr.i68.11, align 1, !dbg !710
  %225 = zext <8 x i8> %224 to <8 x i16>, !dbg !710
  %226 = load <8 x i8>, ptr %add.ptr9.i69.11, align 1, !dbg !710
  %227 = zext <8 x i8> %226 to <8 x i16>, !dbg !710
  %228 = sub nsw <8 x i16> %225, %227, !dbg !710
  %229 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %228, i1 false), !dbg !710
  %230 = zext <8 x i16> %229 to <8 x i32>, !dbg !710
  %231 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %230), !dbg !710
  %op.rdx188.12 = add i32 %231, %op.rdx188.11, !dbg !710
    #dbg_value(i32 %op.rdx188.12, !444, !DIExpression(), !706)
    #dbg_value(i64 8, !447, !DIExpression(), !709)
  %add.ptr.i68.12 = getelementptr inbounds i8, ptr %fenc, i64 208, !dbg !711
    #dbg_value(ptr %add.ptr.i68.12, !440, !DIExpression(), !706)
  %add.ptr9.i69.12 = getelementptr inbounds i8, ptr %add.ptr9.i69.11, i64 %idx.ext8.i, !dbg !711
    #dbg_value(ptr %add.ptr9.i69.12, !442, !DIExpression(), !706)
    #dbg_value(i32 13, !445, !DIExpression(), !708)
    #dbg_value(i32 poison, !444, !DIExpression(), !706)
    #dbg_value(i64 7, !447, !DIExpression(), !709)
  %232 = load <8 x i8>, ptr %add.ptr.i68.12, align 1, !dbg !710
  %233 = zext <8 x i8> %232 to <8 x i16>, !dbg !710
  %234 = load <8 x i8>, ptr %add.ptr9.i69.12, align 1, !dbg !710
  %235 = zext <8 x i8> %234 to <8 x i16>, !dbg !710
  %236 = sub nsw <8 x i16> %233, %235, !dbg !710
  %237 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %236, i1 false), !dbg !710
  %238 = zext <8 x i16> %237 to <8 x i32>, !dbg !710
  %239 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %238), !dbg !710
  %op.rdx188.13 = add i32 %239, %op.rdx188.12, !dbg !710
    #dbg_value(i32 %op.rdx188.13, !444, !DIExpression(), !706)
    #dbg_value(i64 8, !447, !DIExpression(), !709)
  %add.ptr.i68.13 = getelementptr inbounds i8, ptr %fenc, i64 224, !dbg !711
    #dbg_value(ptr %add.ptr.i68.13, !440, !DIExpression(), !706)
  %add.ptr9.i69.13 = getelementptr inbounds i8, ptr %add.ptr9.i69.12, i64 %idx.ext8.i, !dbg !711
    #dbg_value(ptr %add.ptr9.i69.13, !442, !DIExpression(), !706)
    #dbg_value(i32 14, !445, !DIExpression(), !708)
    #dbg_value(i32 poison, !444, !DIExpression(), !706)
    #dbg_value(i64 7, !447, !DIExpression(), !709)
  %240 = load <8 x i8>, ptr %add.ptr.i68.13, align 1, !dbg !710
  %241 = zext <8 x i8> %240 to <8 x i16>, !dbg !710
  %242 = load <8 x i8>, ptr %add.ptr9.i69.13, align 1, !dbg !710
  %243 = zext <8 x i8> %242 to <8 x i16>, !dbg !710
  %244 = sub nsw <8 x i16> %241, %243, !dbg !710
  %245 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %244, i1 false), !dbg !710
  %246 = zext <8 x i16> %245 to <8 x i32>, !dbg !710
  %247 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %246), !dbg !710
  %op.rdx188.14 = add i32 %247, %op.rdx188.13, !dbg !710
    #dbg_value(i32 %op.rdx188.14, !444, !DIExpression(), !706)
    #dbg_value(i64 8, !447, !DIExpression(), !709)
  %add.ptr.i68.14 = getelementptr inbounds i8, ptr %fenc, i64 240, !dbg !711
    #dbg_value(ptr %add.ptr.i68.14, !440, !DIExpression(), !706)
  %add.ptr9.i69.14 = getelementptr inbounds i8, ptr %add.ptr9.i69.13, i64 %idx.ext8.i, !dbg !711
    #dbg_value(ptr %add.ptr9.i69.14, !442, !DIExpression(), !706)
    #dbg_value(i32 15, !445, !DIExpression(), !708)
    #dbg_value(i32 poison, !444, !DIExpression(), !706)
    #dbg_value(i64 7, !447, !DIExpression(), !709)
  %248 = load <8 x i8>, ptr %add.ptr.i68.14, align 1, !dbg !710
  %249 = zext <8 x i8> %248 to <8 x i16>, !dbg !710
  %250 = load <8 x i8>, ptr %add.ptr9.i69.14, align 1, !dbg !710
  %251 = zext <8 x i8> %250 to <8 x i16>, !dbg !710
  %252 = sub nsw <8 x i16> %249, %251, !dbg !710
  %253 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %252, i1 false), !dbg !710
  %254 = zext <8 x i16> %253 to <8 x i32>, !dbg !710
  %255 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %254), !dbg !710
  %op.rdx188.15 = add i32 %255, %op.rdx188.14, !dbg !710
    #dbg_value(i32 %op.rdx188.15, !444, !DIExpression(), !706)
    #dbg_value(i64 8, !447, !DIExpression(), !709)
    #dbg_value(ptr %add.ptr.i68.14, !440, !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value), !706)
    #dbg_value(!DIArgList(ptr %add.ptr9.i69.14, i64 %idx.ext8.i), !442, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !706)
    #dbg_value(i32 16, !445, !DIExpression(), !708)
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !705
  store i32 %op.rdx188.15, ptr %arrayidx2, align 4, !dbg !705
    #dbg_value(i32 16, !441, !DIExpression(), !712)
    #dbg_value(i32 %i_stride, !443, !DIExpression(), !712)
    #dbg_value(i32 0, !445, !DIExpression(), !714)
    #dbg_value(i32 0, !444, !DIExpression(), !712)
    #dbg_value(ptr %fenc, !440, !DIExpression(), !712)
    #dbg_value(ptr %pix2, !442, !DIExpression(), !712)
    #dbg_value(i32 0, !445, !DIExpression(), !714)
    #dbg_value(ptr %fenc, !440, !DIExpression(), !712)
    #dbg_value(ptr %pix2, !442, !DIExpression(), !712)
    #dbg_value(i32 poison, !444, !DIExpression(), !712)
    #dbg_value(i64 7, !447, !DIExpression(), !715)
  %256 = load <8 x i8>, ptr %fenc, align 1, !dbg !716
  %257 = zext <8 x i8> %256 to <8 x i16>, !dbg !716
  %258 = load <8 x i8>, ptr %pix2, align 1, !dbg !716
  %259 = zext <8 x i8> %258 to <8 x i16>, !dbg !716
  %260 = sub nsw <8 x i16> %257, %259, !dbg !716
  %261 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %260, i1 false), !dbg !716
  %262 = zext <8 x i16> %261 to <8 x i32>, !dbg !716
  %263 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %262), !dbg !716
    #dbg_value(i32 %263, !444, !DIExpression(), !712)
    #dbg_value(i64 8, !447, !DIExpression(), !715)
  %add.ptr.i125 = getelementptr inbounds i8, ptr %fenc, i64 16, !dbg !717
    #dbg_value(ptr %add.ptr.i125, !440, !DIExpression(), !712)
  %add.ptr9.i126 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext8.i, !dbg !717
    #dbg_value(ptr %add.ptr9.i126, !442, !DIExpression(), !712)
    #dbg_value(i32 1, !445, !DIExpression(), !714)
    #dbg_value(i32 poison, !444, !DIExpression(), !712)
    #dbg_value(i64 7, !447, !DIExpression(), !715)
  %264 = load <8 x i8>, ptr %add.ptr.i125, align 1, !dbg !716
  %265 = zext <8 x i8> %264 to <8 x i16>, !dbg !716
  %266 = load <8 x i8>, ptr %add.ptr9.i126, align 1, !dbg !716
  %267 = zext <8 x i8> %266 to <8 x i16>, !dbg !716
  %268 = sub nsw <8 x i16> %265, %267, !dbg !716
  %269 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %268, i1 false), !dbg !716
  %270 = zext <8 x i16> %269 to <8 x i32>, !dbg !716
  %271 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %270), !dbg !716
  %op.rdx187.1 = add i32 %271, %263, !dbg !716
    #dbg_value(i32 %op.rdx187.1, !444, !DIExpression(), !712)
    #dbg_value(i64 8, !447, !DIExpression(), !715)
  %add.ptr.i125.1 = getelementptr inbounds i8, ptr %fenc, i64 32, !dbg !717
    #dbg_value(ptr %add.ptr.i125.1, !440, !DIExpression(), !712)
  %add.ptr9.i126.1 = getelementptr inbounds i8, ptr %add.ptr9.i126, i64 %idx.ext8.i, !dbg !717
    #dbg_value(ptr %add.ptr9.i126.1, !442, !DIExpression(), !712)
    #dbg_value(i32 2, !445, !DIExpression(), !714)
    #dbg_value(i32 poison, !444, !DIExpression(), !712)
    #dbg_value(i64 7, !447, !DIExpression(), !715)
  %272 = load <8 x i8>, ptr %add.ptr.i125.1, align 1, !dbg !716
  %273 = zext <8 x i8> %272 to <8 x i16>, !dbg !716
  %274 = load <8 x i8>, ptr %add.ptr9.i126.1, align 1, !dbg !716
  %275 = zext <8 x i8> %274 to <8 x i16>, !dbg !716
  %276 = sub nsw <8 x i16> %273, %275, !dbg !716
  %277 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %276, i1 false), !dbg !716
  %278 = zext <8 x i16> %277 to <8 x i32>, !dbg !716
  %279 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %278), !dbg !716
  %op.rdx187.2 = add i32 %279, %op.rdx187.1, !dbg !716
    #dbg_value(i32 %op.rdx187.2, !444, !DIExpression(), !712)
    #dbg_value(i64 8, !447, !DIExpression(), !715)
  %add.ptr.i125.2 = getelementptr inbounds i8, ptr %fenc, i64 48, !dbg !717
    #dbg_value(ptr %add.ptr.i125.2, !440, !DIExpression(), !712)
  %add.ptr9.i126.2 = getelementptr inbounds i8, ptr %add.ptr9.i126.1, i64 %idx.ext8.i, !dbg !717
    #dbg_value(ptr %add.ptr9.i126.2, !442, !DIExpression(), !712)
    #dbg_value(i32 3, !445, !DIExpression(), !714)
    #dbg_value(i32 poison, !444, !DIExpression(), !712)
    #dbg_value(i64 7, !447, !DIExpression(), !715)
  %280 = load <8 x i8>, ptr %add.ptr.i125.2, align 1, !dbg !716
  %281 = zext <8 x i8> %280 to <8 x i16>, !dbg !716
  %282 = load <8 x i8>, ptr %add.ptr9.i126.2, align 1, !dbg !716
  %283 = zext <8 x i8> %282 to <8 x i16>, !dbg !716
  %284 = sub nsw <8 x i16> %281, %283, !dbg !716
  %285 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %284, i1 false), !dbg !716
  %286 = zext <8 x i16> %285 to <8 x i32>, !dbg !716
  %287 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %286), !dbg !716
  %op.rdx187.3 = add i32 %287, %op.rdx187.2, !dbg !716
    #dbg_value(i32 %op.rdx187.3, !444, !DIExpression(), !712)
    #dbg_value(i64 8, !447, !DIExpression(), !715)
  %add.ptr.i125.3 = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !717
    #dbg_value(ptr %add.ptr.i125.3, !440, !DIExpression(), !712)
  %add.ptr9.i126.3 = getelementptr inbounds i8, ptr %add.ptr9.i126.2, i64 %idx.ext8.i, !dbg !717
    #dbg_value(ptr %add.ptr9.i126.3, !442, !DIExpression(), !712)
    #dbg_value(i32 4, !445, !DIExpression(), !714)
    #dbg_value(i32 poison, !444, !DIExpression(), !712)
    #dbg_value(i64 7, !447, !DIExpression(), !715)
  %288 = load <8 x i8>, ptr %add.ptr.i125.3, align 1, !dbg !716
  %289 = zext <8 x i8> %288 to <8 x i16>, !dbg !716
  %290 = load <8 x i8>, ptr %add.ptr9.i126.3, align 1, !dbg !716
  %291 = zext <8 x i8> %290 to <8 x i16>, !dbg !716
  %292 = sub nsw <8 x i16> %289, %291, !dbg !716
  %293 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %292, i1 false), !dbg !716
  %294 = zext <8 x i16> %293 to <8 x i32>, !dbg !716
  %295 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %294), !dbg !716
  %op.rdx187.4 = add i32 %295, %op.rdx187.3, !dbg !716
    #dbg_value(i32 %op.rdx187.4, !444, !DIExpression(), !712)
    #dbg_value(i64 8, !447, !DIExpression(), !715)
  %add.ptr.i125.4 = getelementptr inbounds i8, ptr %fenc, i64 80, !dbg !717
    #dbg_value(ptr %add.ptr.i125.4, !440, !DIExpression(), !712)
  %add.ptr9.i126.4 = getelementptr inbounds i8, ptr %add.ptr9.i126.3, i64 %idx.ext8.i, !dbg !717
    #dbg_value(ptr %add.ptr9.i126.4, !442, !DIExpression(), !712)
    #dbg_value(i32 5, !445, !DIExpression(), !714)
    #dbg_value(i32 poison, !444, !DIExpression(), !712)
    #dbg_value(i64 7, !447, !DIExpression(), !715)
  %296 = load <8 x i8>, ptr %add.ptr.i125.4, align 1, !dbg !716
  %297 = zext <8 x i8> %296 to <8 x i16>, !dbg !716
  %298 = load <8 x i8>, ptr %add.ptr9.i126.4, align 1, !dbg !716
  %299 = zext <8 x i8> %298 to <8 x i16>, !dbg !716
  %300 = sub nsw <8 x i16> %297, %299, !dbg !716
  %301 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %300, i1 false), !dbg !716
  %302 = zext <8 x i16> %301 to <8 x i32>, !dbg !716
  %303 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %302), !dbg !716
  %op.rdx187.5 = add i32 %303, %op.rdx187.4, !dbg !716
    #dbg_value(i32 %op.rdx187.5, !444, !DIExpression(), !712)
    #dbg_value(i64 8, !447, !DIExpression(), !715)
  %add.ptr.i125.5 = getelementptr inbounds i8, ptr %fenc, i64 96, !dbg !717
    #dbg_value(ptr %add.ptr.i125.5, !440, !DIExpression(), !712)
  %add.ptr9.i126.5 = getelementptr inbounds i8, ptr %add.ptr9.i126.4, i64 %idx.ext8.i, !dbg !717
    #dbg_value(ptr %add.ptr9.i126.5, !442, !DIExpression(), !712)
    #dbg_value(i32 6, !445, !DIExpression(), !714)
    #dbg_value(i32 poison, !444, !DIExpression(), !712)
    #dbg_value(i64 7, !447, !DIExpression(), !715)
  %304 = load <8 x i8>, ptr %add.ptr.i125.5, align 1, !dbg !716
  %305 = zext <8 x i8> %304 to <8 x i16>, !dbg !716
  %306 = load <8 x i8>, ptr %add.ptr9.i126.5, align 1, !dbg !716
  %307 = zext <8 x i8> %306 to <8 x i16>, !dbg !716
  %308 = sub nsw <8 x i16> %305, %307, !dbg !716
  %309 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %308, i1 false), !dbg !716
  %310 = zext <8 x i16> %309 to <8 x i32>, !dbg !716
  %311 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %310), !dbg !716
  %op.rdx187.6 = add i32 %311, %op.rdx187.5, !dbg !716
    #dbg_value(i32 %op.rdx187.6, !444, !DIExpression(), !712)
    #dbg_value(i64 8, !447, !DIExpression(), !715)
  %add.ptr.i125.6 = getelementptr inbounds i8, ptr %fenc, i64 112, !dbg !717
    #dbg_value(ptr %add.ptr.i125.6, !440, !DIExpression(), !712)
  %add.ptr9.i126.6 = getelementptr inbounds i8, ptr %add.ptr9.i126.5, i64 %idx.ext8.i, !dbg !717
    #dbg_value(ptr %add.ptr9.i126.6, !442, !DIExpression(), !712)
    #dbg_value(i32 7, !445, !DIExpression(), !714)
    #dbg_value(i32 poison, !444, !DIExpression(), !712)
    #dbg_value(i64 7, !447, !DIExpression(), !715)
  %312 = load <8 x i8>, ptr %add.ptr.i125.6, align 1, !dbg !716
  %313 = zext <8 x i8> %312 to <8 x i16>, !dbg !716
  %314 = load <8 x i8>, ptr %add.ptr9.i126.6, align 1, !dbg !716
  %315 = zext <8 x i8> %314 to <8 x i16>, !dbg !716
  %316 = sub nsw <8 x i16> %313, %315, !dbg !716
  %317 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %316, i1 false), !dbg !716
  %318 = zext <8 x i16> %317 to <8 x i32>, !dbg !716
  %319 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %318), !dbg !716
  %op.rdx187.7 = add i32 %319, %op.rdx187.6, !dbg !716
    #dbg_value(i32 %op.rdx187.7, !444, !DIExpression(), !712)
    #dbg_value(i64 8, !447, !DIExpression(), !715)
  %add.ptr.i125.7 = getelementptr inbounds i8, ptr %fenc, i64 128, !dbg !717
    #dbg_value(ptr %add.ptr.i125.7, !440, !DIExpression(), !712)
  %add.ptr9.i126.7 = getelementptr inbounds i8, ptr %add.ptr9.i126.6, i64 %idx.ext8.i, !dbg !717
    #dbg_value(ptr %add.ptr9.i126.7, !442, !DIExpression(), !712)
    #dbg_value(i32 8, !445, !DIExpression(), !714)
    #dbg_value(i32 poison, !444, !DIExpression(), !712)
    #dbg_value(i64 7, !447, !DIExpression(), !715)
  %320 = load <8 x i8>, ptr %add.ptr.i125.7, align 1, !dbg !716
  %321 = zext <8 x i8> %320 to <8 x i16>, !dbg !716
  %322 = load <8 x i8>, ptr %add.ptr9.i126.7, align 1, !dbg !716
  %323 = zext <8 x i8> %322 to <8 x i16>, !dbg !716
  %324 = sub nsw <8 x i16> %321, %323, !dbg !716
  %325 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %324, i1 false), !dbg !716
  %326 = zext <8 x i16> %325 to <8 x i32>, !dbg !716
  %327 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %326), !dbg !716
  %op.rdx187.8 = add i32 %327, %op.rdx187.7, !dbg !716
    #dbg_value(i32 %op.rdx187.8, !444, !DIExpression(), !712)
    #dbg_value(i64 8, !447, !DIExpression(), !715)
  %add.ptr.i125.8 = getelementptr inbounds i8, ptr %fenc, i64 144, !dbg !717
    #dbg_value(ptr %add.ptr.i125.8, !440, !DIExpression(), !712)
  %add.ptr9.i126.8 = getelementptr inbounds i8, ptr %add.ptr9.i126.7, i64 %idx.ext8.i, !dbg !717
    #dbg_value(ptr %add.ptr9.i126.8, !442, !DIExpression(), !712)
    #dbg_value(i32 9, !445, !DIExpression(), !714)
    #dbg_value(i32 poison, !444, !DIExpression(), !712)
    #dbg_value(i64 7, !447, !DIExpression(), !715)
  %328 = load <8 x i8>, ptr %add.ptr.i125.8, align 1, !dbg !716
  %329 = zext <8 x i8> %328 to <8 x i16>, !dbg !716
  %330 = load <8 x i8>, ptr %add.ptr9.i126.8, align 1, !dbg !716
  %331 = zext <8 x i8> %330 to <8 x i16>, !dbg !716
  %332 = sub nsw <8 x i16> %329, %331, !dbg !716
  %333 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %332, i1 false), !dbg !716
  %334 = zext <8 x i16> %333 to <8 x i32>, !dbg !716
  %335 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %334), !dbg !716
  %op.rdx187.9 = add i32 %335, %op.rdx187.8, !dbg !716
    #dbg_value(i32 %op.rdx187.9, !444, !DIExpression(), !712)
    #dbg_value(i64 8, !447, !DIExpression(), !715)
  %add.ptr.i125.9 = getelementptr inbounds i8, ptr %fenc, i64 160, !dbg !717
    #dbg_value(ptr %add.ptr.i125.9, !440, !DIExpression(), !712)
  %add.ptr9.i126.9 = getelementptr inbounds i8, ptr %add.ptr9.i126.8, i64 %idx.ext8.i, !dbg !717
    #dbg_value(ptr %add.ptr9.i126.9, !442, !DIExpression(), !712)
    #dbg_value(i32 10, !445, !DIExpression(), !714)
    #dbg_value(i32 poison, !444, !DIExpression(), !712)
    #dbg_value(i64 7, !447, !DIExpression(), !715)
  %336 = load <8 x i8>, ptr %add.ptr.i125.9, align 1, !dbg !716
  %337 = zext <8 x i8> %336 to <8 x i16>, !dbg !716
  %338 = load <8 x i8>, ptr %add.ptr9.i126.9, align 1, !dbg !716
  %339 = zext <8 x i8> %338 to <8 x i16>, !dbg !716
  %340 = sub nsw <8 x i16> %337, %339, !dbg !716
  %341 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %340, i1 false), !dbg !716
  %342 = zext <8 x i16> %341 to <8 x i32>, !dbg !716
  %343 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %342), !dbg !716
  %op.rdx187.10 = add i32 %343, %op.rdx187.9, !dbg !716
    #dbg_value(i32 %op.rdx187.10, !444, !DIExpression(), !712)
    #dbg_value(i64 8, !447, !DIExpression(), !715)
  %add.ptr.i125.10 = getelementptr inbounds i8, ptr %fenc, i64 176, !dbg !717
    #dbg_value(ptr %add.ptr.i125.10, !440, !DIExpression(), !712)
  %add.ptr9.i126.10 = getelementptr inbounds i8, ptr %add.ptr9.i126.9, i64 %idx.ext8.i, !dbg !717
    #dbg_value(ptr %add.ptr9.i126.10, !442, !DIExpression(), !712)
    #dbg_value(i32 11, !445, !DIExpression(), !714)
    #dbg_value(i32 poison, !444, !DIExpression(), !712)
    #dbg_value(i64 7, !447, !DIExpression(), !715)
  %344 = load <8 x i8>, ptr %add.ptr.i125.10, align 1, !dbg !716
  %345 = zext <8 x i8> %344 to <8 x i16>, !dbg !716
  %346 = load <8 x i8>, ptr %add.ptr9.i126.10, align 1, !dbg !716
  %347 = zext <8 x i8> %346 to <8 x i16>, !dbg !716
  %348 = sub nsw <8 x i16> %345, %347, !dbg !716
  %349 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %348, i1 false), !dbg !716
  %350 = zext <8 x i16> %349 to <8 x i32>, !dbg !716
  %351 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %350), !dbg !716
  %op.rdx187.11 = add i32 %351, %op.rdx187.10, !dbg !716
    #dbg_value(i32 %op.rdx187.11, !444, !DIExpression(), !712)
    #dbg_value(i64 8, !447, !DIExpression(), !715)
  %add.ptr.i125.11 = getelementptr inbounds i8, ptr %fenc, i64 192, !dbg !717
    #dbg_value(ptr %add.ptr.i125.11, !440, !DIExpression(), !712)
  %add.ptr9.i126.11 = getelementptr inbounds i8, ptr %add.ptr9.i126.10, i64 %idx.ext8.i, !dbg !717
    #dbg_value(ptr %add.ptr9.i126.11, !442, !DIExpression(), !712)
    #dbg_value(i32 12, !445, !DIExpression(), !714)
    #dbg_value(i32 poison, !444, !DIExpression(), !712)
    #dbg_value(i64 7, !447, !DIExpression(), !715)
  %352 = load <8 x i8>, ptr %add.ptr.i125.11, align 1, !dbg !716
  %353 = zext <8 x i8> %352 to <8 x i16>, !dbg !716
  %354 = load <8 x i8>, ptr %add.ptr9.i126.11, align 1, !dbg !716
  %355 = zext <8 x i8> %354 to <8 x i16>, !dbg !716
  %356 = sub nsw <8 x i16> %353, %355, !dbg !716
  %357 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %356, i1 false), !dbg !716
  %358 = zext <8 x i16> %357 to <8 x i32>, !dbg !716
  %359 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %358), !dbg !716
  %op.rdx187.12 = add i32 %359, %op.rdx187.11, !dbg !716
    #dbg_value(i32 %op.rdx187.12, !444, !DIExpression(), !712)
    #dbg_value(i64 8, !447, !DIExpression(), !715)
  %add.ptr.i125.12 = getelementptr inbounds i8, ptr %fenc, i64 208, !dbg !717
    #dbg_value(ptr %add.ptr.i125.12, !440, !DIExpression(), !712)
  %add.ptr9.i126.12 = getelementptr inbounds i8, ptr %add.ptr9.i126.11, i64 %idx.ext8.i, !dbg !717
    #dbg_value(ptr %add.ptr9.i126.12, !442, !DIExpression(), !712)
    #dbg_value(i32 13, !445, !DIExpression(), !714)
    #dbg_value(i32 poison, !444, !DIExpression(), !712)
    #dbg_value(i64 7, !447, !DIExpression(), !715)
  %360 = load <8 x i8>, ptr %add.ptr.i125.12, align 1, !dbg !716
  %361 = zext <8 x i8> %360 to <8 x i16>, !dbg !716
  %362 = load <8 x i8>, ptr %add.ptr9.i126.12, align 1, !dbg !716
  %363 = zext <8 x i8> %362 to <8 x i16>, !dbg !716
  %364 = sub nsw <8 x i16> %361, %363, !dbg !716
  %365 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %364, i1 false), !dbg !716
  %366 = zext <8 x i16> %365 to <8 x i32>, !dbg !716
  %367 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %366), !dbg !716
  %op.rdx187.13 = add i32 %367, %op.rdx187.12, !dbg !716
    #dbg_value(i32 %op.rdx187.13, !444, !DIExpression(), !712)
    #dbg_value(i64 8, !447, !DIExpression(), !715)
  %add.ptr.i125.13 = getelementptr inbounds i8, ptr %fenc, i64 224, !dbg !717
    #dbg_value(ptr %add.ptr.i125.13, !440, !DIExpression(), !712)
  %add.ptr9.i126.13 = getelementptr inbounds i8, ptr %add.ptr9.i126.12, i64 %idx.ext8.i, !dbg !717
    #dbg_value(ptr %add.ptr9.i126.13, !442, !DIExpression(), !712)
    #dbg_value(i32 14, !445, !DIExpression(), !714)
    #dbg_value(i32 poison, !444, !DIExpression(), !712)
    #dbg_value(i64 7, !447, !DIExpression(), !715)
  %368 = load <8 x i8>, ptr %add.ptr.i125.13, align 1, !dbg !716
  %369 = zext <8 x i8> %368 to <8 x i16>, !dbg !716
  %370 = load <8 x i8>, ptr %add.ptr9.i126.13, align 1, !dbg !716
  %371 = zext <8 x i8> %370 to <8 x i16>, !dbg !716
  %372 = sub nsw <8 x i16> %369, %371, !dbg !716
  %373 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %372, i1 false), !dbg !716
  %374 = zext <8 x i16> %373 to <8 x i32>, !dbg !716
  %375 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %374), !dbg !716
  %op.rdx187.14 = add i32 %375, %op.rdx187.13, !dbg !716
    #dbg_value(i32 %op.rdx187.14, !444, !DIExpression(), !712)
    #dbg_value(i64 8, !447, !DIExpression(), !715)
  %add.ptr.i125.14 = getelementptr inbounds i8, ptr %fenc, i64 240, !dbg !717
    #dbg_value(ptr %add.ptr.i125.14, !440, !DIExpression(), !712)
  %add.ptr9.i126.14 = getelementptr inbounds i8, ptr %add.ptr9.i126.13, i64 %idx.ext8.i, !dbg !717
    #dbg_value(ptr %add.ptr9.i126.14, !442, !DIExpression(), !712)
    #dbg_value(i32 15, !445, !DIExpression(), !714)
    #dbg_value(i32 poison, !444, !DIExpression(), !712)
    #dbg_value(i64 7, !447, !DIExpression(), !715)
  %376 = load <8 x i8>, ptr %add.ptr.i125.14, align 1, !dbg !716
  %377 = zext <8 x i8> %376 to <8 x i16>, !dbg !716
  %378 = load <8 x i8>, ptr %add.ptr9.i126.14, align 1, !dbg !716
  %379 = zext <8 x i8> %378 to <8 x i16>, !dbg !716
  %380 = sub nsw <8 x i16> %377, %379, !dbg !716
  %381 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %380, i1 false), !dbg !716
  %382 = zext <8 x i16> %381 to <8 x i32>, !dbg !716
  %383 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %382), !dbg !716
  %op.rdx187.15 = add i32 %383, %op.rdx187.14, !dbg !716
    #dbg_value(i32 %op.rdx187.15, !444, !DIExpression(), !712)
    #dbg_value(i64 8, !447, !DIExpression(), !715)
    #dbg_value(ptr %add.ptr.i125.14, !440, !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value), !712)
    #dbg_value(!DIArgList(ptr %add.ptr9.i126.14, i64 %idx.ext8.i), !442, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !712)
    #dbg_value(i32 16, !445, !DIExpression(), !714)
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !705
  store i32 %op.rdx187.15, ptr %arrayidx4, align 4, !dbg !705
    #dbg_value(i32 16, !441, !DIExpression(), !718)
    #dbg_value(i32 %i_stride, !443, !DIExpression(), !718)
    #dbg_value(i32 0, !445, !DIExpression(), !720)
    #dbg_value(i32 0, !444, !DIExpression(), !718)
    #dbg_value(ptr %fenc, !440, !DIExpression(), !718)
    #dbg_value(ptr %pix3, !442, !DIExpression(), !718)
    #dbg_value(i32 0, !445, !DIExpression(), !720)
    #dbg_value(ptr %fenc, !440, !DIExpression(), !718)
    #dbg_value(ptr %pix3, !442, !DIExpression(), !718)
    #dbg_value(i32 poison, !444, !DIExpression(), !718)
    #dbg_value(i64 7, !447, !DIExpression(), !721)
  %384 = load <8 x i8>, ptr %fenc, align 1, !dbg !722
  %385 = zext <8 x i8> %384 to <8 x i16>, !dbg !722
  %386 = load <8 x i8>, ptr %pix3, align 1, !dbg !722
  %387 = zext <8 x i8> %386 to <8 x i16>, !dbg !722
  %388 = sub nsw <8 x i16> %385, %387, !dbg !722
  %389 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %388, i1 false), !dbg !722
  %390 = zext <8 x i16> %389 to <8 x i32>, !dbg !722
  %391 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %390), !dbg !722
    #dbg_value(i32 %391, !444, !DIExpression(), !718)
    #dbg_value(i64 8, !447, !DIExpression(), !721)
  %add.ptr.i182 = getelementptr inbounds i8, ptr %fenc, i64 16, !dbg !723
    #dbg_value(ptr %add.ptr.i182, !440, !DIExpression(), !718)
  %add.ptr9.i183 = getelementptr inbounds i8, ptr %pix3, i64 %idx.ext8.i, !dbg !723
    #dbg_value(ptr %add.ptr9.i183, !442, !DIExpression(), !718)
    #dbg_value(i32 1, !445, !DIExpression(), !720)
    #dbg_value(i32 poison, !444, !DIExpression(), !718)
    #dbg_value(i64 7, !447, !DIExpression(), !721)
  %392 = load <8 x i8>, ptr %add.ptr.i182, align 1, !dbg !722
  %393 = zext <8 x i8> %392 to <8 x i16>, !dbg !722
  %394 = load <8 x i8>, ptr %add.ptr9.i183, align 1, !dbg !722
  %395 = zext <8 x i8> %394 to <8 x i16>, !dbg !722
  %396 = sub nsw <8 x i16> %393, %395, !dbg !722
  %397 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %396, i1 false), !dbg !722
  %398 = zext <8 x i16> %397 to <8 x i32>, !dbg !722
  %399 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %398), !dbg !722
  %op.rdx.1 = add i32 %399, %391, !dbg !722
    #dbg_value(i32 %op.rdx.1, !444, !DIExpression(), !718)
    #dbg_value(i64 8, !447, !DIExpression(), !721)
  %add.ptr.i182.1 = getelementptr inbounds i8, ptr %fenc, i64 32, !dbg !723
    #dbg_value(ptr %add.ptr.i182.1, !440, !DIExpression(), !718)
  %add.ptr9.i183.1 = getelementptr inbounds i8, ptr %add.ptr9.i183, i64 %idx.ext8.i, !dbg !723
    #dbg_value(ptr %add.ptr9.i183.1, !442, !DIExpression(), !718)
    #dbg_value(i32 2, !445, !DIExpression(), !720)
    #dbg_value(i32 poison, !444, !DIExpression(), !718)
    #dbg_value(i64 7, !447, !DIExpression(), !721)
  %400 = load <8 x i8>, ptr %add.ptr.i182.1, align 1, !dbg !722
  %401 = zext <8 x i8> %400 to <8 x i16>, !dbg !722
  %402 = load <8 x i8>, ptr %add.ptr9.i183.1, align 1, !dbg !722
  %403 = zext <8 x i8> %402 to <8 x i16>, !dbg !722
  %404 = sub nsw <8 x i16> %401, %403, !dbg !722
  %405 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %404, i1 false), !dbg !722
  %406 = zext <8 x i16> %405 to <8 x i32>, !dbg !722
  %407 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %406), !dbg !722
  %op.rdx.2 = add i32 %407, %op.rdx.1, !dbg !722
    #dbg_value(i32 %op.rdx.2, !444, !DIExpression(), !718)
    #dbg_value(i64 8, !447, !DIExpression(), !721)
  %add.ptr.i182.2 = getelementptr inbounds i8, ptr %fenc, i64 48, !dbg !723
    #dbg_value(ptr %add.ptr.i182.2, !440, !DIExpression(), !718)
  %add.ptr9.i183.2 = getelementptr inbounds i8, ptr %add.ptr9.i183.1, i64 %idx.ext8.i, !dbg !723
    #dbg_value(ptr %add.ptr9.i183.2, !442, !DIExpression(), !718)
    #dbg_value(i32 3, !445, !DIExpression(), !720)
    #dbg_value(i32 poison, !444, !DIExpression(), !718)
    #dbg_value(i64 7, !447, !DIExpression(), !721)
  %408 = load <8 x i8>, ptr %add.ptr.i182.2, align 1, !dbg !722
  %409 = zext <8 x i8> %408 to <8 x i16>, !dbg !722
  %410 = load <8 x i8>, ptr %add.ptr9.i183.2, align 1, !dbg !722
  %411 = zext <8 x i8> %410 to <8 x i16>, !dbg !722
  %412 = sub nsw <8 x i16> %409, %411, !dbg !722
  %413 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %412, i1 false), !dbg !722
  %414 = zext <8 x i16> %413 to <8 x i32>, !dbg !722
  %415 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %414), !dbg !722
  %op.rdx.3 = add i32 %415, %op.rdx.2, !dbg !722
    #dbg_value(i32 %op.rdx.3, !444, !DIExpression(), !718)
    #dbg_value(i64 8, !447, !DIExpression(), !721)
  %add.ptr.i182.3 = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !723
    #dbg_value(ptr %add.ptr.i182.3, !440, !DIExpression(), !718)
  %add.ptr9.i183.3 = getelementptr inbounds i8, ptr %add.ptr9.i183.2, i64 %idx.ext8.i, !dbg !723
    #dbg_value(ptr %add.ptr9.i183.3, !442, !DIExpression(), !718)
    #dbg_value(i32 4, !445, !DIExpression(), !720)
    #dbg_value(i32 poison, !444, !DIExpression(), !718)
    #dbg_value(i64 7, !447, !DIExpression(), !721)
  %416 = load <8 x i8>, ptr %add.ptr.i182.3, align 1, !dbg !722
  %417 = zext <8 x i8> %416 to <8 x i16>, !dbg !722
  %418 = load <8 x i8>, ptr %add.ptr9.i183.3, align 1, !dbg !722
  %419 = zext <8 x i8> %418 to <8 x i16>, !dbg !722
  %420 = sub nsw <8 x i16> %417, %419, !dbg !722
  %421 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %420, i1 false), !dbg !722
  %422 = zext <8 x i16> %421 to <8 x i32>, !dbg !722
  %423 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %422), !dbg !722
  %op.rdx.4 = add i32 %423, %op.rdx.3, !dbg !722
    #dbg_value(i32 %op.rdx.4, !444, !DIExpression(), !718)
    #dbg_value(i64 8, !447, !DIExpression(), !721)
  %add.ptr.i182.4 = getelementptr inbounds i8, ptr %fenc, i64 80, !dbg !723
    #dbg_value(ptr %add.ptr.i182.4, !440, !DIExpression(), !718)
  %add.ptr9.i183.4 = getelementptr inbounds i8, ptr %add.ptr9.i183.3, i64 %idx.ext8.i, !dbg !723
    #dbg_value(ptr %add.ptr9.i183.4, !442, !DIExpression(), !718)
    #dbg_value(i32 5, !445, !DIExpression(), !720)
    #dbg_value(i32 poison, !444, !DIExpression(), !718)
    #dbg_value(i64 7, !447, !DIExpression(), !721)
  %424 = load <8 x i8>, ptr %add.ptr.i182.4, align 1, !dbg !722
  %425 = zext <8 x i8> %424 to <8 x i16>, !dbg !722
  %426 = load <8 x i8>, ptr %add.ptr9.i183.4, align 1, !dbg !722
  %427 = zext <8 x i8> %426 to <8 x i16>, !dbg !722
  %428 = sub nsw <8 x i16> %425, %427, !dbg !722
  %429 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %428, i1 false), !dbg !722
  %430 = zext <8 x i16> %429 to <8 x i32>, !dbg !722
  %431 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %430), !dbg !722
  %op.rdx.5 = add i32 %431, %op.rdx.4, !dbg !722
    #dbg_value(i32 %op.rdx.5, !444, !DIExpression(), !718)
    #dbg_value(i64 8, !447, !DIExpression(), !721)
  %add.ptr.i182.5 = getelementptr inbounds i8, ptr %fenc, i64 96, !dbg !723
    #dbg_value(ptr %add.ptr.i182.5, !440, !DIExpression(), !718)
  %add.ptr9.i183.5 = getelementptr inbounds i8, ptr %add.ptr9.i183.4, i64 %idx.ext8.i, !dbg !723
    #dbg_value(ptr %add.ptr9.i183.5, !442, !DIExpression(), !718)
    #dbg_value(i32 6, !445, !DIExpression(), !720)
    #dbg_value(i32 poison, !444, !DIExpression(), !718)
    #dbg_value(i64 7, !447, !DIExpression(), !721)
  %432 = load <8 x i8>, ptr %add.ptr.i182.5, align 1, !dbg !722
  %433 = zext <8 x i8> %432 to <8 x i16>, !dbg !722
  %434 = load <8 x i8>, ptr %add.ptr9.i183.5, align 1, !dbg !722
  %435 = zext <8 x i8> %434 to <8 x i16>, !dbg !722
  %436 = sub nsw <8 x i16> %433, %435, !dbg !722
  %437 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %436, i1 false), !dbg !722
  %438 = zext <8 x i16> %437 to <8 x i32>, !dbg !722
  %439 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %438), !dbg !722
  %op.rdx.6 = add i32 %439, %op.rdx.5, !dbg !722
    #dbg_value(i32 %op.rdx.6, !444, !DIExpression(), !718)
    #dbg_value(i64 8, !447, !DIExpression(), !721)
  %add.ptr.i182.6 = getelementptr inbounds i8, ptr %fenc, i64 112, !dbg !723
    #dbg_value(ptr %add.ptr.i182.6, !440, !DIExpression(), !718)
  %add.ptr9.i183.6 = getelementptr inbounds i8, ptr %add.ptr9.i183.5, i64 %idx.ext8.i, !dbg !723
    #dbg_value(ptr %add.ptr9.i183.6, !442, !DIExpression(), !718)
    #dbg_value(i32 7, !445, !DIExpression(), !720)
    #dbg_value(i32 poison, !444, !DIExpression(), !718)
    #dbg_value(i64 7, !447, !DIExpression(), !721)
  %440 = load <8 x i8>, ptr %add.ptr.i182.6, align 1, !dbg !722
  %441 = zext <8 x i8> %440 to <8 x i16>, !dbg !722
  %442 = load <8 x i8>, ptr %add.ptr9.i183.6, align 1, !dbg !722
  %443 = zext <8 x i8> %442 to <8 x i16>, !dbg !722
  %444 = sub nsw <8 x i16> %441, %443, !dbg !722
  %445 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %444, i1 false), !dbg !722
  %446 = zext <8 x i16> %445 to <8 x i32>, !dbg !722
  %447 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %446), !dbg !722
  %op.rdx.7 = add i32 %447, %op.rdx.6, !dbg !722
    #dbg_value(i32 %op.rdx.7, !444, !DIExpression(), !718)
    #dbg_value(i64 8, !447, !DIExpression(), !721)
  %add.ptr.i182.7 = getelementptr inbounds i8, ptr %fenc, i64 128, !dbg !723
    #dbg_value(ptr %add.ptr.i182.7, !440, !DIExpression(), !718)
  %add.ptr9.i183.7 = getelementptr inbounds i8, ptr %add.ptr9.i183.6, i64 %idx.ext8.i, !dbg !723
    #dbg_value(ptr %add.ptr9.i183.7, !442, !DIExpression(), !718)
    #dbg_value(i32 8, !445, !DIExpression(), !720)
    #dbg_value(i32 poison, !444, !DIExpression(), !718)
    #dbg_value(i64 7, !447, !DIExpression(), !721)
  %448 = load <8 x i8>, ptr %add.ptr.i182.7, align 1, !dbg !722
  %449 = zext <8 x i8> %448 to <8 x i16>, !dbg !722
  %450 = load <8 x i8>, ptr %add.ptr9.i183.7, align 1, !dbg !722
  %451 = zext <8 x i8> %450 to <8 x i16>, !dbg !722
  %452 = sub nsw <8 x i16> %449, %451, !dbg !722
  %453 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %452, i1 false), !dbg !722
  %454 = zext <8 x i16> %453 to <8 x i32>, !dbg !722
  %455 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %454), !dbg !722
  %op.rdx.8 = add i32 %455, %op.rdx.7, !dbg !722
    #dbg_value(i32 %op.rdx.8, !444, !DIExpression(), !718)
    #dbg_value(i64 8, !447, !DIExpression(), !721)
  %add.ptr.i182.8 = getelementptr inbounds i8, ptr %fenc, i64 144, !dbg !723
    #dbg_value(ptr %add.ptr.i182.8, !440, !DIExpression(), !718)
  %add.ptr9.i183.8 = getelementptr inbounds i8, ptr %add.ptr9.i183.7, i64 %idx.ext8.i, !dbg !723
    #dbg_value(ptr %add.ptr9.i183.8, !442, !DIExpression(), !718)
    #dbg_value(i32 9, !445, !DIExpression(), !720)
    #dbg_value(i32 poison, !444, !DIExpression(), !718)
    #dbg_value(i64 7, !447, !DIExpression(), !721)
  %456 = load <8 x i8>, ptr %add.ptr.i182.8, align 1, !dbg !722
  %457 = zext <8 x i8> %456 to <8 x i16>, !dbg !722
  %458 = load <8 x i8>, ptr %add.ptr9.i183.8, align 1, !dbg !722
  %459 = zext <8 x i8> %458 to <8 x i16>, !dbg !722
  %460 = sub nsw <8 x i16> %457, %459, !dbg !722
  %461 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %460, i1 false), !dbg !722
  %462 = zext <8 x i16> %461 to <8 x i32>, !dbg !722
  %463 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %462), !dbg !722
  %op.rdx.9 = add i32 %463, %op.rdx.8, !dbg !722
    #dbg_value(i32 %op.rdx.9, !444, !DIExpression(), !718)
    #dbg_value(i64 8, !447, !DIExpression(), !721)
  %add.ptr.i182.9 = getelementptr inbounds i8, ptr %fenc, i64 160, !dbg !723
    #dbg_value(ptr %add.ptr.i182.9, !440, !DIExpression(), !718)
  %add.ptr9.i183.9 = getelementptr inbounds i8, ptr %add.ptr9.i183.8, i64 %idx.ext8.i, !dbg !723
    #dbg_value(ptr %add.ptr9.i183.9, !442, !DIExpression(), !718)
    #dbg_value(i32 10, !445, !DIExpression(), !720)
    #dbg_value(i32 poison, !444, !DIExpression(), !718)
    #dbg_value(i64 7, !447, !DIExpression(), !721)
  %464 = load <8 x i8>, ptr %add.ptr.i182.9, align 1, !dbg !722
  %465 = zext <8 x i8> %464 to <8 x i16>, !dbg !722
  %466 = load <8 x i8>, ptr %add.ptr9.i183.9, align 1, !dbg !722
  %467 = zext <8 x i8> %466 to <8 x i16>, !dbg !722
  %468 = sub nsw <8 x i16> %465, %467, !dbg !722
  %469 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %468, i1 false), !dbg !722
  %470 = zext <8 x i16> %469 to <8 x i32>, !dbg !722
  %471 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %470), !dbg !722
  %op.rdx.10 = add i32 %471, %op.rdx.9, !dbg !722
    #dbg_value(i32 %op.rdx.10, !444, !DIExpression(), !718)
    #dbg_value(i64 8, !447, !DIExpression(), !721)
  %add.ptr.i182.10 = getelementptr inbounds i8, ptr %fenc, i64 176, !dbg !723
    #dbg_value(ptr %add.ptr.i182.10, !440, !DIExpression(), !718)
  %add.ptr9.i183.10 = getelementptr inbounds i8, ptr %add.ptr9.i183.9, i64 %idx.ext8.i, !dbg !723
    #dbg_value(ptr %add.ptr9.i183.10, !442, !DIExpression(), !718)
    #dbg_value(i32 11, !445, !DIExpression(), !720)
    #dbg_value(i32 poison, !444, !DIExpression(), !718)
    #dbg_value(i64 7, !447, !DIExpression(), !721)
  %472 = load <8 x i8>, ptr %add.ptr.i182.10, align 1, !dbg !722
  %473 = zext <8 x i8> %472 to <8 x i16>, !dbg !722
  %474 = load <8 x i8>, ptr %add.ptr9.i183.10, align 1, !dbg !722
  %475 = zext <8 x i8> %474 to <8 x i16>, !dbg !722
  %476 = sub nsw <8 x i16> %473, %475, !dbg !722
  %477 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %476, i1 false), !dbg !722
  %478 = zext <8 x i16> %477 to <8 x i32>, !dbg !722
  %479 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %478), !dbg !722
  %op.rdx.11 = add i32 %479, %op.rdx.10, !dbg !722
    #dbg_value(i32 %op.rdx.11, !444, !DIExpression(), !718)
    #dbg_value(i64 8, !447, !DIExpression(), !721)
  %add.ptr.i182.11 = getelementptr inbounds i8, ptr %fenc, i64 192, !dbg !723
    #dbg_value(ptr %add.ptr.i182.11, !440, !DIExpression(), !718)
  %add.ptr9.i183.11 = getelementptr inbounds i8, ptr %add.ptr9.i183.10, i64 %idx.ext8.i, !dbg !723
    #dbg_value(ptr %add.ptr9.i183.11, !442, !DIExpression(), !718)
    #dbg_value(i32 12, !445, !DIExpression(), !720)
    #dbg_value(i32 poison, !444, !DIExpression(), !718)
    #dbg_value(i64 7, !447, !DIExpression(), !721)
  %480 = load <8 x i8>, ptr %add.ptr.i182.11, align 1, !dbg !722
  %481 = zext <8 x i8> %480 to <8 x i16>, !dbg !722
  %482 = load <8 x i8>, ptr %add.ptr9.i183.11, align 1, !dbg !722
  %483 = zext <8 x i8> %482 to <8 x i16>, !dbg !722
  %484 = sub nsw <8 x i16> %481, %483, !dbg !722
  %485 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %484, i1 false), !dbg !722
  %486 = zext <8 x i16> %485 to <8 x i32>, !dbg !722
  %487 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %486), !dbg !722
  %op.rdx.12 = add i32 %487, %op.rdx.11, !dbg !722
    #dbg_value(i32 %op.rdx.12, !444, !DIExpression(), !718)
    #dbg_value(i64 8, !447, !DIExpression(), !721)
  %add.ptr.i182.12 = getelementptr inbounds i8, ptr %fenc, i64 208, !dbg !723
    #dbg_value(ptr %add.ptr.i182.12, !440, !DIExpression(), !718)
  %add.ptr9.i183.12 = getelementptr inbounds i8, ptr %add.ptr9.i183.11, i64 %idx.ext8.i, !dbg !723
    #dbg_value(ptr %add.ptr9.i183.12, !442, !DIExpression(), !718)
    #dbg_value(i32 13, !445, !DIExpression(), !720)
    #dbg_value(i32 poison, !444, !DIExpression(), !718)
    #dbg_value(i64 7, !447, !DIExpression(), !721)
  %488 = load <8 x i8>, ptr %add.ptr.i182.12, align 1, !dbg !722
  %489 = zext <8 x i8> %488 to <8 x i16>, !dbg !722
  %490 = load <8 x i8>, ptr %add.ptr9.i183.12, align 1, !dbg !722
  %491 = zext <8 x i8> %490 to <8 x i16>, !dbg !722
  %492 = sub nsw <8 x i16> %489, %491, !dbg !722
  %493 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %492, i1 false), !dbg !722
  %494 = zext <8 x i16> %493 to <8 x i32>, !dbg !722
  %495 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %494), !dbg !722
  %op.rdx.13 = add i32 %495, %op.rdx.12, !dbg !722
    #dbg_value(i32 %op.rdx.13, !444, !DIExpression(), !718)
    #dbg_value(i64 8, !447, !DIExpression(), !721)
  %add.ptr.i182.13 = getelementptr inbounds i8, ptr %fenc, i64 224, !dbg !723
    #dbg_value(ptr %add.ptr.i182.13, !440, !DIExpression(), !718)
  %add.ptr9.i183.13 = getelementptr inbounds i8, ptr %add.ptr9.i183.12, i64 %idx.ext8.i, !dbg !723
    #dbg_value(ptr %add.ptr9.i183.13, !442, !DIExpression(), !718)
    #dbg_value(i32 14, !445, !DIExpression(), !720)
    #dbg_value(i32 poison, !444, !DIExpression(), !718)
    #dbg_value(i64 7, !447, !DIExpression(), !721)
  %496 = load <8 x i8>, ptr %add.ptr.i182.13, align 1, !dbg !722
  %497 = zext <8 x i8> %496 to <8 x i16>, !dbg !722
  %498 = load <8 x i8>, ptr %add.ptr9.i183.13, align 1, !dbg !722
  %499 = zext <8 x i8> %498 to <8 x i16>, !dbg !722
  %500 = sub nsw <8 x i16> %497, %499, !dbg !722
  %501 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %500, i1 false), !dbg !722
  %502 = zext <8 x i16> %501 to <8 x i32>, !dbg !722
  %503 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %502), !dbg !722
  %op.rdx.14 = add i32 %503, %op.rdx.13, !dbg !722
    #dbg_value(i32 %op.rdx.14, !444, !DIExpression(), !718)
    #dbg_value(i64 8, !447, !DIExpression(), !721)
  %add.ptr.i182.14 = getelementptr inbounds i8, ptr %fenc, i64 240, !dbg !723
    #dbg_value(ptr %add.ptr.i182.14, !440, !DIExpression(), !718)
  %add.ptr9.i183.14 = getelementptr inbounds i8, ptr %add.ptr9.i183.13, i64 %idx.ext8.i, !dbg !723
    #dbg_value(ptr %add.ptr9.i183.14, !442, !DIExpression(), !718)
    #dbg_value(i32 15, !445, !DIExpression(), !720)
    #dbg_value(i32 poison, !444, !DIExpression(), !718)
    #dbg_value(i64 7, !447, !DIExpression(), !721)
  %504 = load <8 x i8>, ptr %add.ptr.i182.14, align 1, !dbg !722
  %505 = zext <8 x i8> %504 to <8 x i16>, !dbg !722
  %506 = load <8 x i8>, ptr %add.ptr9.i183.14, align 1, !dbg !722
  %507 = zext <8 x i8> %506 to <8 x i16>, !dbg !722
  %508 = sub nsw <8 x i16> %505, %507, !dbg !722
  %509 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %508, i1 false), !dbg !722
  %510 = zext <8 x i16> %509 to <8 x i32>, !dbg !722
  %511 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %510), !dbg !722
  %op.rdx.15 = add i32 %511, %op.rdx.14, !dbg !722
    #dbg_value(i32 %op.rdx.15, !444, !DIExpression(), !718)
    #dbg_value(i64 8, !447, !DIExpression(), !721)
    #dbg_value(ptr %add.ptr.i182.14, !440, !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value), !718)
    #dbg_value(!DIArgList(ptr %add.ptr9.i183.14, i64 %idx.ext8.i), !442, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !718)
    #dbg_value(i32 16, !445, !DIExpression(), !720)
  %arrayidx6 = getelementptr inbounds i8, ptr %scores, i64 12, !dbg !705
  store i32 %op.rdx.15, ptr %arrayidx6, align 4, !dbg !705
  ret void, !dbg !705
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @x264_pixel_sad_x4_8x8(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #7 !dbg !724 {
entry:
    #dbg_value(ptr %fenc, !726, !DIExpression(), !733)
    #dbg_value(ptr %pix0, !727, !DIExpression(), !733)
    #dbg_value(ptr %pix1, !728, !DIExpression(), !733)
    #dbg_value(ptr %pix2, !729, !DIExpression(), !733)
    #dbg_value(ptr %pix3, !730, !DIExpression(), !733)
    #dbg_value(i32 %i_stride, !731, !DIExpression(), !733)
    #dbg_value(ptr %scores, !732, !DIExpression(), !733)
    #dbg_value(ptr %fenc, !461, !DIExpression(), !734)
    #dbg_value(i32 16, !462, !DIExpression(), !734)
    #dbg_value(ptr %pix0, !463, !DIExpression(), !734)
    #dbg_value(i32 %i_stride, !464, !DIExpression(), !734)
    #dbg_value(i32 0, !465, !DIExpression(), !734)
    #dbg_value(i32 0, !466, !DIExpression(), !736)
  %idx.ext8.i = sext i32 %i_stride to i64
    #dbg_value(i32 0, !466, !DIExpression(), !736)
    #dbg_value(i32 0, !465, !DIExpression(), !734)
    #dbg_value(ptr %fenc, !461, !DIExpression(), !734)
    #dbg_value(ptr %pix0, !463, !DIExpression(), !734)
    #dbg_value(i32 0, !466, !DIExpression(), !736)
    #dbg_value(ptr %fenc, !461, !DIExpression(), !734)
    #dbg_value(ptr %pix0, !463, !DIExpression(), !734)
    #dbg_value(i32 poison, !465, !DIExpression(), !734)
    #dbg_value(i64 7, !468, !DIExpression(), !737)
  %0 = load <8 x i8>, ptr %fenc, align 1, !dbg !738
  %1 = zext <8 x i8> %0 to <8 x i16>, !dbg !738
  %2 = load <8 x i8>, ptr %pix0, align 1, !dbg !738
  %3 = zext <8 x i8> %2 to <8 x i16>, !dbg !738
  %4 = sub nsw <8 x i16> %1, %3, !dbg !738
  %5 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %4, i1 false), !dbg !738
  %6 = zext <8 x i16> %5 to <8 x i32>, !dbg !738
  %7 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %6), !dbg !738
    #dbg_value(i32 %7, !465, !DIExpression(), !734)
    #dbg_value(i64 8, !468, !DIExpression(), !737)
  %add.ptr.i = getelementptr inbounds i8, ptr %fenc, i64 16, !dbg !739
    #dbg_value(ptr %add.ptr.i, !461, !DIExpression(), !734)
  %add.ptr9.i = getelementptr inbounds i8, ptr %pix0, i64 %idx.ext8.i, !dbg !739
    #dbg_value(ptr %add.ptr9.i, !463, !DIExpression(), !734)
    #dbg_value(i32 1, !466, !DIExpression(), !736)
    #dbg_value(i32 poison, !465, !DIExpression(), !734)
    #dbg_value(i64 7, !468, !DIExpression(), !737)
  %8 = load <8 x i8>, ptr %add.ptr.i, align 1, !dbg !738
  %9 = zext <8 x i8> %8 to <8 x i16>, !dbg !738
  %10 = load <8 x i8>, ptr %add.ptr9.i, align 1, !dbg !738
  %11 = zext <8 x i8> %10 to <8 x i16>, !dbg !738
  %12 = sub nsw <8 x i16> %9, %11, !dbg !738
  %13 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %12, i1 false), !dbg !738
  %14 = zext <8 x i16> %13 to <8 x i32>, !dbg !738
  %15 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %14), !dbg !738
  %op.rdx189.1 = add i32 %15, %7, !dbg !738
    #dbg_value(i32 %op.rdx189.1, !465, !DIExpression(), !734)
    #dbg_value(i64 8, !468, !DIExpression(), !737)
  %add.ptr.i.1 = getelementptr inbounds i8, ptr %fenc, i64 32, !dbg !739
    #dbg_value(ptr %add.ptr.i.1, !461, !DIExpression(), !734)
  %add.ptr9.i.1 = getelementptr inbounds i8, ptr %add.ptr9.i, i64 %idx.ext8.i, !dbg !739
    #dbg_value(ptr %add.ptr9.i.1, !463, !DIExpression(), !734)
    #dbg_value(i32 2, !466, !DIExpression(), !736)
    #dbg_value(i32 poison, !465, !DIExpression(), !734)
    #dbg_value(i64 7, !468, !DIExpression(), !737)
  %16 = load <8 x i8>, ptr %add.ptr.i.1, align 1, !dbg !738
  %17 = zext <8 x i8> %16 to <8 x i16>, !dbg !738
  %18 = load <8 x i8>, ptr %add.ptr9.i.1, align 1, !dbg !738
  %19 = zext <8 x i8> %18 to <8 x i16>, !dbg !738
  %20 = sub nsw <8 x i16> %17, %19, !dbg !738
  %21 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %20, i1 false), !dbg !738
  %22 = zext <8 x i16> %21 to <8 x i32>, !dbg !738
  %23 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %22), !dbg !738
  %op.rdx189.2 = add i32 %23, %op.rdx189.1, !dbg !738
    #dbg_value(i32 %op.rdx189.2, !465, !DIExpression(), !734)
    #dbg_value(i64 8, !468, !DIExpression(), !737)
  %add.ptr.i.2 = getelementptr inbounds i8, ptr %fenc, i64 48, !dbg !739
    #dbg_value(ptr %add.ptr.i.2, !461, !DIExpression(), !734)
  %add.ptr9.i.2 = getelementptr inbounds i8, ptr %add.ptr9.i.1, i64 %idx.ext8.i, !dbg !739
    #dbg_value(ptr %add.ptr9.i.2, !463, !DIExpression(), !734)
    #dbg_value(i32 3, !466, !DIExpression(), !736)
    #dbg_value(i32 poison, !465, !DIExpression(), !734)
    #dbg_value(i64 7, !468, !DIExpression(), !737)
  %24 = load <8 x i8>, ptr %add.ptr.i.2, align 1, !dbg !738
  %25 = zext <8 x i8> %24 to <8 x i16>, !dbg !738
  %26 = load <8 x i8>, ptr %add.ptr9.i.2, align 1, !dbg !738
  %27 = zext <8 x i8> %26 to <8 x i16>, !dbg !738
  %28 = sub nsw <8 x i16> %25, %27, !dbg !738
  %29 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %28, i1 false), !dbg !738
  %30 = zext <8 x i16> %29 to <8 x i32>, !dbg !738
  %31 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %30), !dbg !738
  %op.rdx189.3 = add i32 %31, %op.rdx189.2, !dbg !738
    #dbg_value(i32 %op.rdx189.3, !465, !DIExpression(), !734)
    #dbg_value(i64 8, !468, !DIExpression(), !737)
  %add.ptr.i.3 = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !739
    #dbg_value(ptr %add.ptr.i.3, !461, !DIExpression(), !734)
  %add.ptr9.i.3 = getelementptr inbounds i8, ptr %add.ptr9.i.2, i64 %idx.ext8.i, !dbg !739
    #dbg_value(ptr %add.ptr9.i.3, !463, !DIExpression(), !734)
    #dbg_value(i32 4, !466, !DIExpression(), !736)
    #dbg_value(i32 poison, !465, !DIExpression(), !734)
    #dbg_value(i64 7, !468, !DIExpression(), !737)
  %32 = load <8 x i8>, ptr %add.ptr.i.3, align 1, !dbg !738
  %33 = zext <8 x i8> %32 to <8 x i16>, !dbg !738
  %34 = load <8 x i8>, ptr %add.ptr9.i.3, align 1, !dbg !738
  %35 = zext <8 x i8> %34 to <8 x i16>, !dbg !738
  %36 = sub nsw <8 x i16> %33, %35, !dbg !738
  %37 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %36, i1 false), !dbg !738
  %38 = zext <8 x i16> %37 to <8 x i32>, !dbg !738
  %39 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %38), !dbg !738
  %op.rdx189.4 = add i32 %39, %op.rdx189.3, !dbg !738
    #dbg_value(i32 %op.rdx189.4, !465, !DIExpression(), !734)
    #dbg_value(i64 8, !468, !DIExpression(), !737)
  %add.ptr.i.4 = getelementptr inbounds i8, ptr %fenc, i64 80, !dbg !739
    #dbg_value(ptr %add.ptr.i.4, !461, !DIExpression(), !734)
  %add.ptr9.i.4 = getelementptr inbounds i8, ptr %add.ptr9.i.3, i64 %idx.ext8.i, !dbg !739
    #dbg_value(ptr %add.ptr9.i.4, !463, !DIExpression(), !734)
    #dbg_value(i32 5, !466, !DIExpression(), !736)
    #dbg_value(i32 poison, !465, !DIExpression(), !734)
    #dbg_value(i64 7, !468, !DIExpression(), !737)
  %40 = load <8 x i8>, ptr %add.ptr.i.4, align 1, !dbg !738
  %41 = zext <8 x i8> %40 to <8 x i16>, !dbg !738
  %42 = load <8 x i8>, ptr %add.ptr9.i.4, align 1, !dbg !738
  %43 = zext <8 x i8> %42 to <8 x i16>, !dbg !738
  %44 = sub nsw <8 x i16> %41, %43, !dbg !738
  %45 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %44, i1 false), !dbg !738
  %46 = zext <8 x i16> %45 to <8 x i32>, !dbg !738
  %47 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %46), !dbg !738
  %op.rdx189.5 = add i32 %47, %op.rdx189.4, !dbg !738
    #dbg_value(i32 %op.rdx189.5, !465, !DIExpression(), !734)
    #dbg_value(i64 8, !468, !DIExpression(), !737)
  %add.ptr.i.5 = getelementptr inbounds i8, ptr %fenc, i64 96, !dbg !739
    #dbg_value(ptr %add.ptr.i.5, !461, !DIExpression(), !734)
  %add.ptr9.i.5 = getelementptr inbounds i8, ptr %add.ptr9.i.4, i64 %idx.ext8.i, !dbg !739
    #dbg_value(ptr %add.ptr9.i.5, !463, !DIExpression(), !734)
    #dbg_value(i32 6, !466, !DIExpression(), !736)
    #dbg_value(i32 poison, !465, !DIExpression(), !734)
    #dbg_value(i64 7, !468, !DIExpression(), !737)
  %48 = load <8 x i8>, ptr %add.ptr.i.5, align 1, !dbg !738
  %49 = zext <8 x i8> %48 to <8 x i16>, !dbg !738
  %50 = load <8 x i8>, ptr %add.ptr9.i.5, align 1, !dbg !738
  %51 = zext <8 x i8> %50 to <8 x i16>, !dbg !738
  %52 = sub nsw <8 x i16> %49, %51, !dbg !738
  %53 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %52, i1 false), !dbg !738
  %54 = zext <8 x i16> %53 to <8 x i32>, !dbg !738
  %55 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %54), !dbg !738
  %op.rdx189.6 = add i32 %55, %op.rdx189.5, !dbg !738
    #dbg_value(i32 %op.rdx189.6, !465, !DIExpression(), !734)
    #dbg_value(i64 8, !468, !DIExpression(), !737)
  %add.ptr.i.6 = getelementptr inbounds i8, ptr %fenc, i64 112, !dbg !739
    #dbg_value(ptr %add.ptr.i.6, !461, !DIExpression(), !734)
  %add.ptr9.i.6 = getelementptr inbounds i8, ptr %add.ptr9.i.5, i64 %idx.ext8.i, !dbg !739
    #dbg_value(ptr %add.ptr9.i.6, !463, !DIExpression(), !734)
    #dbg_value(i32 7, !466, !DIExpression(), !736)
    #dbg_value(i32 poison, !465, !DIExpression(), !734)
    #dbg_value(i64 7, !468, !DIExpression(), !737)
  %56 = load <8 x i8>, ptr %add.ptr.i.6, align 1, !dbg !738
  %57 = zext <8 x i8> %56 to <8 x i16>, !dbg !738
  %58 = load <8 x i8>, ptr %add.ptr9.i.6, align 1, !dbg !738
  %59 = zext <8 x i8> %58 to <8 x i16>, !dbg !738
  %60 = sub nsw <8 x i16> %57, %59, !dbg !738
  %61 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %60, i1 false), !dbg !738
  %62 = zext <8 x i16> %61 to <8 x i32>, !dbg !738
  %63 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %62), !dbg !738
  %op.rdx189.7 = add i32 %63, %op.rdx189.6, !dbg !738
    #dbg_value(i32 %op.rdx189.7, !465, !DIExpression(), !734)
    #dbg_value(i64 8, !468, !DIExpression(), !737)
    #dbg_value(ptr %add.ptr.i.6, !461, !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value), !734)
    #dbg_value(!DIArgList(ptr %add.ptr9.i.6, i64 %idx.ext8.i), !463, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !734)
    #dbg_value(i32 8, !466, !DIExpression(), !736)
  store i32 %op.rdx189.7, ptr %scores, align 4, !dbg !740
    #dbg_value(i32 16, !462, !DIExpression(), !741)
    #dbg_value(i32 %i_stride, !464, !DIExpression(), !741)
    #dbg_value(i32 0, !466, !DIExpression(), !743)
    #dbg_value(i32 0, !465, !DIExpression(), !741)
    #dbg_value(ptr %fenc, !461, !DIExpression(), !741)
    #dbg_value(ptr %pix1, !463, !DIExpression(), !741)
    #dbg_value(i32 0, !466, !DIExpression(), !743)
    #dbg_value(ptr %fenc, !461, !DIExpression(), !741)
    #dbg_value(ptr %pix1, !463, !DIExpression(), !741)
    #dbg_value(i32 poison, !465, !DIExpression(), !741)
    #dbg_value(i64 7, !468, !DIExpression(), !744)
  %64 = load <8 x i8>, ptr %fenc, align 1, !dbg !745
  %65 = zext <8 x i8> %64 to <8 x i16>, !dbg !745
  %66 = load <8 x i8>, ptr %pix1, align 1, !dbg !745
  %67 = zext <8 x i8> %66 to <8 x i16>, !dbg !745
  %68 = sub nsw <8 x i16> %65, %67, !dbg !745
  %69 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %68, i1 false), !dbg !745
  %70 = zext <8 x i16> %69 to <8 x i32>, !dbg !745
  %71 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %70), !dbg !745
    #dbg_value(i32 %71, !465, !DIExpression(), !741)
    #dbg_value(i64 8, !468, !DIExpression(), !744)
  %add.ptr.i68 = getelementptr inbounds i8, ptr %fenc, i64 16, !dbg !746
    #dbg_value(ptr %add.ptr.i68, !461, !DIExpression(), !741)
  %add.ptr9.i69 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext8.i, !dbg !746
    #dbg_value(ptr %add.ptr9.i69, !463, !DIExpression(), !741)
    #dbg_value(i32 1, !466, !DIExpression(), !743)
    #dbg_value(i32 poison, !465, !DIExpression(), !741)
    #dbg_value(i64 7, !468, !DIExpression(), !744)
  %72 = load <8 x i8>, ptr %add.ptr.i68, align 1, !dbg !745
  %73 = zext <8 x i8> %72 to <8 x i16>, !dbg !745
  %74 = load <8 x i8>, ptr %add.ptr9.i69, align 1, !dbg !745
  %75 = zext <8 x i8> %74 to <8 x i16>, !dbg !745
  %76 = sub nsw <8 x i16> %73, %75, !dbg !745
  %77 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %76, i1 false), !dbg !745
  %78 = zext <8 x i16> %77 to <8 x i32>, !dbg !745
  %79 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %78), !dbg !745
  %op.rdx188.1 = add i32 %79, %71, !dbg !745
    #dbg_value(i32 %op.rdx188.1, !465, !DIExpression(), !741)
    #dbg_value(i64 8, !468, !DIExpression(), !744)
  %add.ptr.i68.1 = getelementptr inbounds i8, ptr %fenc, i64 32, !dbg !746
    #dbg_value(ptr %add.ptr.i68.1, !461, !DIExpression(), !741)
  %add.ptr9.i69.1 = getelementptr inbounds i8, ptr %add.ptr9.i69, i64 %idx.ext8.i, !dbg !746
    #dbg_value(ptr %add.ptr9.i69.1, !463, !DIExpression(), !741)
    #dbg_value(i32 2, !466, !DIExpression(), !743)
    #dbg_value(i32 poison, !465, !DIExpression(), !741)
    #dbg_value(i64 7, !468, !DIExpression(), !744)
  %80 = load <8 x i8>, ptr %add.ptr.i68.1, align 1, !dbg !745
  %81 = zext <8 x i8> %80 to <8 x i16>, !dbg !745
  %82 = load <8 x i8>, ptr %add.ptr9.i69.1, align 1, !dbg !745
  %83 = zext <8 x i8> %82 to <8 x i16>, !dbg !745
  %84 = sub nsw <8 x i16> %81, %83, !dbg !745
  %85 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %84, i1 false), !dbg !745
  %86 = zext <8 x i16> %85 to <8 x i32>, !dbg !745
  %87 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %86), !dbg !745
  %op.rdx188.2 = add i32 %87, %op.rdx188.1, !dbg !745
    #dbg_value(i32 %op.rdx188.2, !465, !DIExpression(), !741)
    #dbg_value(i64 8, !468, !DIExpression(), !744)
  %add.ptr.i68.2 = getelementptr inbounds i8, ptr %fenc, i64 48, !dbg !746
    #dbg_value(ptr %add.ptr.i68.2, !461, !DIExpression(), !741)
  %add.ptr9.i69.2 = getelementptr inbounds i8, ptr %add.ptr9.i69.1, i64 %idx.ext8.i, !dbg !746
    #dbg_value(ptr %add.ptr9.i69.2, !463, !DIExpression(), !741)
    #dbg_value(i32 3, !466, !DIExpression(), !743)
    #dbg_value(i32 poison, !465, !DIExpression(), !741)
    #dbg_value(i64 7, !468, !DIExpression(), !744)
  %88 = load <8 x i8>, ptr %add.ptr.i68.2, align 1, !dbg !745
  %89 = zext <8 x i8> %88 to <8 x i16>, !dbg !745
  %90 = load <8 x i8>, ptr %add.ptr9.i69.2, align 1, !dbg !745
  %91 = zext <8 x i8> %90 to <8 x i16>, !dbg !745
  %92 = sub nsw <8 x i16> %89, %91, !dbg !745
  %93 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %92, i1 false), !dbg !745
  %94 = zext <8 x i16> %93 to <8 x i32>, !dbg !745
  %95 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %94), !dbg !745
  %op.rdx188.3 = add i32 %95, %op.rdx188.2, !dbg !745
    #dbg_value(i32 %op.rdx188.3, !465, !DIExpression(), !741)
    #dbg_value(i64 8, !468, !DIExpression(), !744)
  %add.ptr.i68.3 = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !746
    #dbg_value(ptr %add.ptr.i68.3, !461, !DIExpression(), !741)
  %add.ptr9.i69.3 = getelementptr inbounds i8, ptr %add.ptr9.i69.2, i64 %idx.ext8.i, !dbg !746
    #dbg_value(ptr %add.ptr9.i69.3, !463, !DIExpression(), !741)
    #dbg_value(i32 4, !466, !DIExpression(), !743)
    #dbg_value(i32 poison, !465, !DIExpression(), !741)
    #dbg_value(i64 7, !468, !DIExpression(), !744)
  %96 = load <8 x i8>, ptr %add.ptr.i68.3, align 1, !dbg !745
  %97 = zext <8 x i8> %96 to <8 x i16>, !dbg !745
  %98 = load <8 x i8>, ptr %add.ptr9.i69.3, align 1, !dbg !745
  %99 = zext <8 x i8> %98 to <8 x i16>, !dbg !745
  %100 = sub nsw <8 x i16> %97, %99, !dbg !745
  %101 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %100, i1 false), !dbg !745
  %102 = zext <8 x i16> %101 to <8 x i32>, !dbg !745
  %103 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %102), !dbg !745
  %op.rdx188.4 = add i32 %103, %op.rdx188.3, !dbg !745
    #dbg_value(i32 %op.rdx188.4, !465, !DIExpression(), !741)
    #dbg_value(i64 8, !468, !DIExpression(), !744)
  %add.ptr.i68.4 = getelementptr inbounds i8, ptr %fenc, i64 80, !dbg !746
    #dbg_value(ptr %add.ptr.i68.4, !461, !DIExpression(), !741)
  %add.ptr9.i69.4 = getelementptr inbounds i8, ptr %add.ptr9.i69.3, i64 %idx.ext8.i, !dbg !746
    #dbg_value(ptr %add.ptr9.i69.4, !463, !DIExpression(), !741)
    #dbg_value(i32 5, !466, !DIExpression(), !743)
    #dbg_value(i32 poison, !465, !DIExpression(), !741)
    #dbg_value(i64 7, !468, !DIExpression(), !744)
  %104 = load <8 x i8>, ptr %add.ptr.i68.4, align 1, !dbg !745
  %105 = zext <8 x i8> %104 to <8 x i16>, !dbg !745
  %106 = load <8 x i8>, ptr %add.ptr9.i69.4, align 1, !dbg !745
  %107 = zext <8 x i8> %106 to <8 x i16>, !dbg !745
  %108 = sub nsw <8 x i16> %105, %107, !dbg !745
  %109 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %108, i1 false), !dbg !745
  %110 = zext <8 x i16> %109 to <8 x i32>, !dbg !745
  %111 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %110), !dbg !745
  %op.rdx188.5 = add i32 %111, %op.rdx188.4, !dbg !745
    #dbg_value(i32 %op.rdx188.5, !465, !DIExpression(), !741)
    #dbg_value(i64 8, !468, !DIExpression(), !744)
  %add.ptr.i68.5 = getelementptr inbounds i8, ptr %fenc, i64 96, !dbg !746
    #dbg_value(ptr %add.ptr.i68.5, !461, !DIExpression(), !741)
  %add.ptr9.i69.5 = getelementptr inbounds i8, ptr %add.ptr9.i69.4, i64 %idx.ext8.i, !dbg !746
    #dbg_value(ptr %add.ptr9.i69.5, !463, !DIExpression(), !741)
    #dbg_value(i32 6, !466, !DIExpression(), !743)
    #dbg_value(i32 poison, !465, !DIExpression(), !741)
    #dbg_value(i64 7, !468, !DIExpression(), !744)
  %112 = load <8 x i8>, ptr %add.ptr.i68.5, align 1, !dbg !745
  %113 = zext <8 x i8> %112 to <8 x i16>, !dbg !745
  %114 = load <8 x i8>, ptr %add.ptr9.i69.5, align 1, !dbg !745
  %115 = zext <8 x i8> %114 to <8 x i16>, !dbg !745
  %116 = sub nsw <8 x i16> %113, %115, !dbg !745
  %117 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %116, i1 false), !dbg !745
  %118 = zext <8 x i16> %117 to <8 x i32>, !dbg !745
  %119 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %118), !dbg !745
  %op.rdx188.6 = add i32 %119, %op.rdx188.5, !dbg !745
    #dbg_value(i32 %op.rdx188.6, !465, !DIExpression(), !741)
    #dbg_value(i64 8, !468, !DIExpression(), !744)
  %add.ptr.i68.6 = getelementptr inbounds i8, ptr %fenc, i64 112, !dbg !746
    #dbg_value(ptr %add.ptr.i68.6, !461, !DIExpression(), !741)
  %add.ptr9.i69.6 = getelementptr inbounds i8, ptr %add.ptr9.i69.5, i64 %idx.ext8.i, !dbg !746
    #dbg_value(ptr %add.ptr9.i69.6, !463, !DIExpression(), !741)
    #dbg_value(i32 7, !466, !DIExpression(), !743)
    #dbg_value(i32 poison, !465, !DIExpression(), !741)
    #dbg_value(i64 7, !468, !DIExpression(), !744)
  %120 = load <8 x i8>, ptr %add.ptr.i68.6, align 1, !dbg !745
  %121 = zext <8 x i8> %120 to <8 x i16>, !dbg !745
  %122 = load <8 x i8>, ptr %add.ptr9.i69.6, align 1, !dbg !745
  %123 = zext <8 x i8> %122 to <8 x i16>, !dbg !745
  %124 = sub nsw <8 x i16> %121, %123, !dbg !745
  %125 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %124, i1 false), !dbg !745
  %126 = zext <8 x i16> %125 to <8 x i32>, !dbg !745
  %127 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %126), !dbg !745
  %op.rdx188.7 = add i32 %127, %op.rdx188.6, !dbg !745
    #dbg_value(i32 %op.rdx188.7, !465, !DIExpression(), !741)
    #dbg_value(i64 8, !468, !DIExpression(), !744)
    #dbg_value(ptr %add.ptr.i68.6, !461, !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value), !741)
    #dbg_value(!DIArgList(ptr %add.ptr9.i69.6, i64 %idx.ext8.i), !463, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !741)
    #dbg_value(i32 8, !466, !DIExpression(), !743)
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !740
  store i32 %op.rdx188.7, ptr %arrayidx2, align 4, !dbg !740
    #dbg_value(i32 16, !462, !DIExpression(), !747)
    #dbg_value(i32 %i_stride, !464, !DIExpression(), !747)
    #dbg_value(i32 0, !466, !DIExpression(), !749)
    #dbg_value(i32 0, !465, !DIExpression(), !747)
    #dbg_value(ptr %fenc, !461, !DIExpression(), !747)
    #dbg_value(ptr %pix2, !463, !DIExpression(), !747)
    #dbg_value(i32 0, !466, !DIExpression(), !749)
    #dbg_value(ptr %fenc, !461, !DIExpression(), !747)
    #dbg_value(ptr %pix2, !463, !DIExpression(), !747)
    #dbg_value(i32 poison, !465, !DIExpression(), !747)
    #dbg_value(i64 7, !468, !DIExpression(), !750)
  %128 = load <8 x i8>, ptr %fenc, align 1, !dbg !751
  %129 = zext <8 x i8> %128 to <8 x i16>, !dbg !751
  %130 = load <8 x i8>, ptr %pix2, align 1, !dbg !751
  %131 = zext <8 x i8> %130 to <8 x i16>, !dbg !751
  %132 = sub nsw <8 x i16> %129, %131, !dbg !751
  %133 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %132, i1 false), !dbg !751
  %134 = zext <8 x i16> %133 to <8 x i32>, !dbg !751
  %135 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %134), !dbg !751
    #dbg_value(i32 %135, !465, !DIExpression(), !747)
    #dbg_value(i64 8, !468, !DIExpression(), !750)
  %add.ptr.i125 = getelementptr inbounds i8, ptr %fenc, i64 16, !dbg !752
    #dbg_value(ptr %add.ptr.i125, !461, !DIExpression(), !747)
  %add.ptr9.i126 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext8.i, !dbg !752
    #dbg_value(ptr %add.ptr9.i126, !463, !DIExpression(), !747)
    #dbg_value(i32 1, !466, !DIExpression(), !749)
    #dbg_value(i32 poison, !465, !DIExpression(), !747)
    #dbg_value(i64 7, !468, !DIExpression(), !750)
  %136 = load <8 x i8>, ptr %add.ptr.i125, align 1, !dbg !751
  %137 = zext <8 x i8> %136 to <8 x i16>, !dbg !751
  %138 = load <8 x i8>, ptr %add.ptr9.i126, align 1, !dbg !751
  %139 = zext <8 x i8> %138 to <8 x i16>, !dbg !751
  %140 = sub nsw <8 x i16> %137, %139, !dbg !751
  %141 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %140, i1 false), !dbg !751
  %142 = zext <8 x i16> %141 to <8 x i32>, !dbg !751
  %143 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %142), !dbg !751
  %op.rdx187.1 = add i32 %143, %135, !dbg !751
    #dbg_value(i32 %op.rdx187.1, !465, !DIExpression(), !747)
    #dbg_value(i64 8, !468, !DIExpression(), !750)
  %add.ptr.i125.1 = getelementptr inbounds i8, ptr %fenc, i64 32, !dbg !752
    #dbg_value(ptr %add.ptr.i125.1, !461, !DIExpression(), !747)
  %add.ptr9.i126.1 = getelementptr inbounds i8, ptr %add.ptr9.i126, i64 %idx.ext8.i, !dbg !752
    #dbg_value(ptr %add.ptr9.i126.1, !463, !DIExpression(), !747)
    #dbg_value(i32 2, !466, !DIExpression(), !749)
    #dbg_value(i32 poison, !465, !DIExpression(), !747)
    #dbg_value(i64 7, !468, !DIExpression(), !750)
  %144 = load <8 x i8>, ptr %add.ptr.i125.1, align 1, !dbg !751
  %145 = zext <8 x i8> %144 to <8 x i16>, !dbg !751
  %146 = load <8 x i8>, ptr %add.ptr9.i126.1, align 1, !dbg !751
  %147 = zext <8 x i8> %146 to <8 x i16>, !dbg !751
  %148 = sub nsw <8 x i16> %145, %147, !dbg !751
  %149 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %148, i1 false), !dbg !751
  %150 = zext <8 x i16> %149 to <8 x i32>, !dbg !751
  %151 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %150), !dbg !751
  %op.rdx187.2 = add i32 %151, %op.rdx187.1, !dbg !751
    #dbg_value(i32 %op.rdx187.2, !465, !DIExpression(), !747)
    #dbg_value(i64 8, !468, !DIExpression(), !750)
  %add.ptr.i125.2 = getelementptr inbounds i8, ptr %fenc, i64 48, !dbg !752
    #dbg_value(ptr %add.ptr.i125.2, !461, !DIExpression(), !747)
  %add.ptr9.i126.2 = getelementptr inbounds i8, ptr %add.ptr9.i126.1, i64 %idx.ext8.i, !dbg !752
    #dbg_value(ptr %add.ptr9.i126.2, !463, !DIExpression(), !747)
    #dbg_value(i32 3, !466, !DIExpression(), !749)
    #dbg_value(i32 poison, !465, !DIExpression(), !747)
    #dbg_value(i64 7, !468, !DIExpression(), !750)
  %152 = load <8 x i8>, ptr %add.ptr.i125.2, align 1, !dbg !751
  %153 = zext <8 x i8> %152 to <8 x i16>, !dbg !751
  %154 = load <8 x i8>, ptr %add.ptr9.i126.2, align 1, !dbg !751
  %155 = zext <8 x i8> %154 to <8 x i16>, !dbg !751
  %156 = sub nsw <8 x i16> %153, %155, !dbg !751
  %157 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %156, i1 false), !dbg !751
  %158 = zext <8 x i16> %157 to <8 x i32>, !dbg !751
  %159 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %158), !dbg !751
  %op.rdx187.3 = add i32 %159, %op.rdx187.2, !dbg !751
    #dbg_value(i32 %op.rdx187.3, !465, !DIExpression(), !747)
    #dbg_value(i64 8, !468, !DIExpression(), !750)
  %add.ptr.i125.3 = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !752
    #dbg_value(ptr %add.ptr.i125.3, !461, !DIExpression(), !747)
  %add.ptr9.i126.3 = getelementptr inbounds i8, ptr %add.ptr9.i126.2, i64 %idx.ext8.i, !dbg !752
    #dbg_value(ptr %add.ptr9.i126.3, !463, !DIExpression(), !747)
    #dbg_value(i32 4, !466, !DIExpression(), !749)
    #dbg_value(i32 poison, !465, !DIExpression(), !747)
    #dbg_value(i64 7, !468, !DIExpression(), !750)
  %160 = load <8 x i8>, ptr %add.ptr.i125.3, align 1, !dbg !751
  %161 = zext <8 x i8> %160 to <8 x i16>, !dbg !751
  %162 = load <8 x i8>, ptr %add.ptr9.i126.3, align 1, !dbg !751
  %163 = zext <8 x i8> %162 to <8 x i16>, !dbg !751
  %164 = sub nsw <8 x i16> %161, %163, !dbg !751
  %165 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %164, i1 false), !dbg !751
  %166 = zext <8 x i16> %165 to <8 x i32>, !dbg !751
  %167 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %166), !dbg !751
  %op.rdx187.4 = add i32 %167, %op.rdx187.3, !dbg !751
    #dbg_value(i32 %op.rdx187.4, !465, !DIExpression(), !747)
    #dbg_value(i64 8, !468, !DIExpression(), !750)
  %add.ptr.i125.4 = getelementptr inbounds i8, ptr %fenc, i64 80, !dbg !752
    #dbg_value(ptr %add.ptr.i125.4, !461, !DIExpression(), !747)
  %add.ptr9.i126.4 = getelementptr inbounds i8, ptr %add.ptr9.i126.3, i64 %idx.ext8.i, !dbg !752
    #dbg_value(ptr %add.ptr9.i126.4, !463, !DIExpression(), !747)
    #dbg_value(i32 5, !466, !DIExpression(), !749)
    #dbg_value(i32 poison, !465, !DIExpression(), !747)
    #dbg_value(i64 7, !468, !DIExpression(), !750)
  %168 = load <8 x i8>, ptr %add.ptr.i125.4, align 1, !dbg !751
  %169 = zext <8 x i8> %168 to <8 x i16>, !dbg !751
  %170 = load <8 x i8>, ptr %add.ptr9.i126.4, align 1, !dbg !751
  %171 = zext <8 x i8> %170 to <8 x i16>, !dbg !751
  %172 = sub nsw <8 x i16> %169, %171, !dbg !751
  %173 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %172, i1 false), !dbg !751
  %174 = zext <8 x i16> %173 to <8 x i32>, !dbg !751
  %175 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %174), !dbg !751
  %op.rdx187.5 = add i32 %175, %op.rdx187.4, !dbg !751
    #dbg_value(i32 %op.rdx187.5, !465, !DIExpression(), !747)
    #dbg_value(i64 8, !468, !DIExpression(), !750)
  %add.ptr.i125.5 = getelementptr inbounds i8, ptr %fenc, i64 96, !dbg !752
    #dbg_value(ptr %add.ptr.i125.5, !461, !DIExpression(), !747)
  %add.ptr9.i126.5 = getelementptr inbounds i8, ptr %add.ptr9.i126.4, i64 %idx.ext8.i, !dbg !752
    #dbg_value(ptr %add.ptr9.i126.5, !463, !DIExpression(), !747)
    #dbg_value(i32 6, !466, !DIExpression(), !749)
    #dbg_value(i32 poison, !465, !DIExpression(), !747)
    #dbg_value(i64 7, !468, !DIExpression(), !750)
  %176 = load <8 x i8>, ptr %add.ptr.i125.5, align 1, !dbg !751
  %177 = zext <8 x i8> %176 to <8 x i16>, !dbg !751
  %178 = load <8 x i8>, ptr %add.ptr9.i126.5, align 1, !dbg !751
  %179 = zext <8 x i8> %178 to <8 x i16>, !dbg !751
  %180 = sub nsw <8 x i16> %177, %179, !dbg !751
  %181 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %180, i1 false), !dbg !751
  %182 = zext <8 x i16> %181 to <8 x i32>, !dbg !751
  %183 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %182), !dbg !751
  %op.rdx187.6 = add i32 %183, %op.rdx187.5, !dbg !751
    #dbg_value(i32 %op.rdx187.6, !465, !DIExpression(), !747)
    #dbg_value(i64 8, !468, !DIExpression(), !750)
  %add.ptr.i125.6 = getelementptr inbounds i8, ptr %fenc, i64 112, !dbg !752
    #dbg_value(ptr %add.ptr.i125.6, !461, !DIExpression(), !747)
  %add.ptr9.i126.6 = getelementptr inbounds i8, ptr %add.ptr9.i126.5, i64 %idx.ext8.i, !dbg !752
    #dbg_value(ptr %add.ptr9.i126.6, !463, !DIExpression(), !747)
    #dbg_value(i32 7, !466, !DIExpression(), !749)
    #dbg_value(i32 poison, !465, !DIExpression(), !747)
    #dbg_value(i64 7, !468, !DIExpression(), !750)
  %184 = load <8 x i8>, ptr %add.ptr.i125.6, align 1, !dbg !751
  %185 = zext <8 x i8> %184 to <8 x i16>, !dbg !751
  %186 = load <8 x i8>, ptr %add.ptr9.i126.6, align 1, !dbg !751
  %187 = zext <8 x i8> %186 to <8 x i16>, !dbg !751
  %188 = sub nsw <8 x i16> %185, %187, !dbg !751
  %189 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %188, i1 false), !dbg !751
  %190 = zext <8 x i16> %189 to <8 x i32>, !dbg !751
  %191 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %190), !dbg !751
  %op.rdx187.7 = add i32 %191, %op.rdx187.6, !dbg !751
    #dbg_value(i32 %op.rdx187.7, !465, !DIExpression(), !747)
    #dbg_value(i64 8, !468, !DIExpression(), !750)
    #dbg_value(ptr %add.ptr.i125.6, !461, !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value), !747)
    #dbg_value(!DIArgList(ptr %add.ptr9.i126.6, i64 %idx.ext8.i), !463, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !747)
    #dbg_value(i32 8, !466, !DIExpression(), !749)
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !740
  store i32 %op.rdx187.7, ptr %arrayidx4, align 4, !dbg !740
    #dbg_value(i32 16, !462, !DIExpression(), !753)
    #dbg_value(i32 %i_stride, !464, !DIExpression(), !753)
    #dbg_value(i32 0, !466, !DIExpression(), !755)
    #dbg_value(i32 0, !465, !DIExpression(), !753)
    #dbg_value(ptr %fenc, !461, !DIExpression(), !753)
    #dbg_value(ptr %pix3, !463, !DIExpression(), !753)
    #dbg_value(i32 0, !466, !DIExpression(), !755)
    #dbg_value(ptr %fenc, !461, !DIExpression(), !753)
    #dbg_value(ptr %pix3, !463, !DIExpression(), !753)
    #dbg_value(i32 poison, !465, !DIExpression(), !753)
    #dbg_value(i64 7, !468, !DIExpression(), !756)
  %192 = load <8 x i8>, ptr %fenc, align 1, !dbg !757
  %193 = zext <8 x i8> %192 to <8 x i16>, !dbg !757
  %194 = load <8 x i8>, ptr %pix3, align 1, !dbg !757
  %195 = zext <8 x i8> %194 to <8 x i16>, !dbg !757
  %196 = sub nsw <8 x i16> %193, %195, !dbg !757
  %197 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %196, i1 false), !dbg !757
  %198 = zext <8 x i16> %197 to <8 x i32>, !dbg !757
  %199 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %198), !dbg !757
    #dbg_value(i32 %199, !465, !DIExpression(), !753)
    #dbg_value(i64 8, !468, !DIExpression(), !756)
  %add.ptr.i182 = getelementptr inbounds i8, ptr %fenc, i64 16, !dbg !758
    #dbg_value(ptr %add.ptr.i182, !461, !DIExpression(), !753)
  %add.ptr9.i183 = getelementptr inbounds i8, ptr %pix3, i64 %idx.ext8.i, !dbg !758
    #dbg_value(ptr %add.ptr9.i183, !463, !DIExpression(), !753)
    #dbg_value(i32 1, !466, !DIExpression(), !755)
    #dbg_value(i32 poison, !465, !DIExpression(), !753)
    #dbg_value(i64 7, !468, !DIExpression(), !756)
  %200 = load <8 x i8>, ptr %add.ptr.i182, align 1, !dbg !757
  %201 = zext <8 x i8> %200 to <8 x i16>, !dbg !757
  %202 = load <8 x i8>, ptr %add.ptr9.i183, align 1, !dbg !757
  %203 = zext <8 x i8> %202 to <8 x i16>, !dbg !757
  %204 = sub nsw <8 x i16> %201, %203, !dbg !757
  %205 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %204, i1 false), !dbg !757
  %206 = zext <8 x i16> %205 to <8 x i32>, !dbg !757
  %207 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %206), !dbg !757
  %op.rdx.1 = add i32 %207, %199, !dbg !757
    #dbg_value(i32 %op.rdx.1, !465, !DIExpression(), !753)
    #dbg_value(i64 8, !468, !DIExpression(), !756)
  %add.ptr.i182.1 = getelementptr inbounds i8, ptr %fenc, i64 32, !dbg !758
    #dbg_value(ptr %add.ptr.i182.1, !461, !DIExpression(), !753)
  %add.ptr9.i183.1 = getelementptr inbounds i8, ptr %add.ptr9.i183, i64 %idx.ext8.i, !dbg !758
    #dbg_value(ptr %add.ptr9.i183.1, !463, !DIExpression(), !753)
    #dbg_value(i32 2, !466, !DIExpression(), !755)
    #dbg_value(i32 poison, !465, !DIExpression(), !753)
    #dbg_value(i64 7, !468, !DIExpression(), !756)
  %208 = load <8 x i8>, ptr %add.ptr.i182.1, align 1, !dbg !757
  %209 = zext <8 x i8> %208 to <8 x i16>, !dbg !757
  %210 = load <8 x i8>, ptr %add.ptr9.i183.1, align 1, !dbg !757
  %211 = zext <8 x i8> %210 to <8 x i16>, !dbg !757
  %212 = sub nsw <8 x i16> %209, %211, !dbg !757
  %213 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %212, i1 false), !dbg !757
  %214 = zext <8 x i16> %213 to <8 x i32>, !dbg !757
  %215 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %214), !dbg !757
  %op.rdx.2 = add i32 %215, %op.rdx.1, !dbg !757
    #dbg_value(i32 %op.rdx.2, !465, !DIExpression(), !753)
    #dbg_value(i64 8, !468, !DIExpression(), !756)
  %add.ptr.i182.2 = getelementptr inbounds i8, ptr %fenc, i64 48, !dbg !758
    #dbg_value(ptr %add.ptr.i182.2, !461, !DIExpression(), !753)
  %add.ptr9.i183.2 = getelementptr inbounds i8, ptr %add.ptr9.i183.1, i64 %idx.ext8.i, !dbg !758
    #dbg_value(ptr %add.ptr9.i183.2, !463, !DIExpression(), !753)
    #dbg_value(i32 3, !466, !DIExpression(), !755)
    #dbg_value(i32 poison, !465, !DIExpression(), !753)
    #dbg_value(i64 7, !468, !DIExpression(), !756)
  %216 = load <8 x i8>, ptr %add.ptr.i182.2, align 1, !dbg !757
  %217 = zext <8 x i8> %216 to <8 x i16>, !dbg !757
  %218 = load <8 x i8>, ptr %add.ptr9.i183.2, align 1, !dbg !757
  %219 = zext <8 x i8> %218 to <8 x i16>, !dbg !757
  %220 = sub nsw <8 x i16> %217, %219, !dbg !757
  %221 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %220, i1 false), !dbg !757
  %222 = zext <8 x i16> %221 to <8 x i32>, !dbg !757
  %223 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %222), !dbg !757
  %op.rdx.3 = add i32 %223, %op.rdx.2, !dbg !757
    #dbg_value(i32 %op.rdx.3, !465, !DIExpression(), !753)
    #dbg_value(i64 8, !468, !DIExpression(), !756)
  %add.ptr.i182.3 = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !758
    #dbg_value(ptr %add.ptr.i182.3, !461, !DIExpression(), !753)
  %add.ptr9.i183.3 = getelementptr inbounds i8, ptr %add.ptr9.i183.2, i64 %idx.ext8.i, !dbg !758
    #dbg_value(ptr %add.ptr9.i183.3, !463, !DIExpression(), !753)
    #dbg_value(i32 4, !466, !DIExpression(), !755)
    #dbg_value(i32 poison, !465, !DIExpression(), !753)
    #dbg_value(i64 7, !468, !DIExpression(), !756)
  %224 = load <8 x i8>, ptr %add.ptr.i182.3, align 1, !dbg !757
  %225 = zext <8 x i8> %224 to <8 x i16>, !dbg !757
  %226 = load <8 x i8>, ptr %add.ptr9.i183.3, align 1, !dbg !757
  %227 = zext <8 x i8> %226 to <8 x i16>, !dbg !757
  %228 = sub nsw <8 x i16> %225, %227, !dbg !757
  %229 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %228, i1 false), !dbg !757
  %230 = zext <8 x i16> %229 to <8 x i32>, !dbg !757
  %231 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %230), !dbg !757
  %op.rdx.4 = add i32 %231, %op.rdx.3, !dbg !757
    #dbg_value(i32 %op.rdx.4, !465, !DIExpression(), !753)
    #dbg_value(i64 8, !468, !DIExpression(), !756)
  %add.ptr.i182.4 = getelementptr inbounds i8, ptr %fenc, i64 80, !dbg !758
    #dbg_value(ptr %add.ptr.i182.4, !461, !DIExpression(), !753)
  %add.ptr9.i183.4 = getelementptr inbounds i8, ptr %add.ptr9.i183.3, i64 %idx.ext8.i, !dbg !758
    #dbg_value(ptr %add.ptr9.i183.4, !463, !DIExpression(), !753)
    #dbg_value(i32 5, !466, !DIExpression(), !755)
    #dbg_value(i32 poison, !465, !DIExpression(), !753)
    #dbg_value(i64 7, !468, !DIExpression(), !756)
  %232 = load <8 x i8>, ptr %add.ptr.i182.4, align 1, !dbg !757
  %233 = zext <8 x i8> %232 to <8 x i16>, !dbg !757
  %234 = load <8 x i8>, ptr %add.ptr9.i183.4, align 1, !dbg !757
  %235 = zext <8 x i8> %234 to <8 x i16>, !dbg !757
  %236 = sub nsw <8 x i16> %233, %235, !dbg !757
  %237 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %236, i1 false), !dbg !757
  %238 = zext <8 x i16> %237 to <8 x i32>, !dbg !757
  %239 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %238), !dbg !757
  %op.rdx.5 = add i32 %239, %op.rdx.4, !dbg !757
    #dbg_value(i32 %op.rdx.5, !465, !DIExpression(), !753)
    #dbg_value(i64 8, !468, !DIExpression(), !756)
  %add.ptr.i182.5 = getelementptr inbounds i8, ptr %fenc, i64 96, !dbg !758
    #dbg_value(ptr %add.ptr.i182.5, !461, !DIExpression(), !753)
  %add.ptr9.i183.5 = getelementptr inbounds i8, ptr %add.ptr9.i183.4, i64 %idx.ext8.i, !dbg !758
    #dbg_value(ptr %add.ptr9.i183.5, !463, !DIExpression(), !753)
    #dbg_value(i32 6, !466, !DIExpression(), !755)
    #dbg_value(i32 poison, !465, !DIExpression(), !753)
    #dbg_value(i64 7, !468, !DIExpression(), !756)
  %240 = load <8 x i8>, ptr %add.ptr.i182.5, align 1, !dbg !757
  %241 = zext <8 x i8> %240 to <8 x i16>, !dbg !757
  %242 = load <8 x i8>, ptr %add.ptr9.i183.5, align 1, !dbg !757
  %243 = zext <8 x i8> %242 to <8 x i16>, !dbg !757
  %244 = sub nsw <8 x i16> %241, %243, !dbg !757
  %245 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %244, i1 false), !dbg !757
  %246 = zext <8 x i16> %245 to <8 x i32>, !dbg !757
  %247 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %246), !dbg !757
  %op.rdx.6 = add i32 %247, %op.rdx.5, !dbg !757
    #dbg_value(i32 %op.rdx.6, !465, !DIExpression(), !753)
    #dbg_value(i64 8, !468, !DIExpression(), !756)
  %add.ptr.i182.6 = getelementptr inbounds i8, ptr %fenc, i64 112, !dbg !758
    #dbg_value(ptr %add.ptr.i182.6, !461, !DIExpression(), !753)
  %add.ptr9.i183.6 = getelementptr inbounds i8, ptr %add.ptr9.i183.5, i64 %idx.ext8.i, !dbg !758
    #dbg_value(ptr %add.ptr9.i183.6, !463, !DIExpression(), !753)
    #dbg_value(i32 7, !466, !DIExpression(), !755)
    #dbg_value(i32 poison, !465, !DIExpression(), !753)
    #dbg_value(i64 7, !468, !DIExpression(), !756)
  %248 = load <8 x i8>, ptr %add.ptr.i182.6, align 1, !dbg !757
  %249 = zext <8 x i8> %248 to <8 x i16>, !dbg !757
  %250 = load <8 x i8>, ptr %add.ptr9.i183.6, align 1, !dbg !757
  %251 = zext <8 x i8> %250 to <8 x i16>, !dbg !757
  %252 = sub nsw <8 x i16> %249, %251, !dbg !757
  %253 = tail call <8 x i16> @llvm.abs.v8i16(<8 x i16> %252, i1 false), !dbg !757
  %254 = zext <8 x i16> %253 to <8 x i32>, !dbg !757
  %255 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %254), !dbg !757
  %op.rdx.7 = add i32 %255, %op.rdx.6, !dbg !757
    #dbg_value(i32 %op.rdx.7, !465, !DIExpression(), !753)
    #dbg_value(i64 8, !468, !DIExpression(), !756)
    #dbg_value(ptr %add.ptr.i182.6, !461, !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value), !753)
    #dbg_value(!DIArgList(ptr %add.ptr9.i183.6, i64 %idx.ext8.i), !463, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !753)
    #dbg_value(i32 8, !466, !DIExpression(), !755)
  %arrayidx6 = getelementptr inbounds i8, ptr %scores, i64 12, !dbg !740
  store i32 %op.rdx.7, ptr %arrayidx6, align 4, !dbg !740
  ret void, !dbg !740
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @x264_pixel_sad_x4_8x4(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #8 !dbg !759 {
entry:
    #dbg_value(ptr %fenc, !761, !DIExpression(), !768)
    #dbg_value(ptr %pix0, !762, !DIExpression(), !768)
    #dbg_value(ptr %pix1, !763, !DIExpression(), !768)
    #dbg_value(ptr %pix2, !764, !DIExpression(), !768)
    #dbg_value(ptr %pix3, !765, !DIExpression(), !768)
    #dbg_value(i32 %i_stride, !766, !DIExpression(), !768)
    #dbg_value(ptr %scores, !767, !DIExpression(), !768)
  %call = tail call i32 @x264_pixel_sad_8x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix0, i32 noundef %i_stride), !dbg !769
  store i32 %call, ptr %scores, align 4, !dbg !769
  %call1 = tail call i32 @x264_pixel_sad_8x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix1, i32 noundef %i_stride), !dbg !769
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !769
  store i32 %call1, ptr %arrayidx2, align 4, !dbg !769
  %call3 = tail call i32 @x264_pixel_sad_8x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix2, i32 noundef %i_stride), !dbg !769
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !769
  store i32 %call3, ptr %arrayidx4, align 4, !dbg !769
  %call5 = tail call i32 @x264_pixel_sad_8x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix3, i32 noundef %i_stride), !dbg !769
  %arrayidx6 = getelementptr inbounds i8, ptr %scores, i64 12, !dbg !769
  store i32 %call5, ptr %arrayidx6, align 4, !dbg !769
  ret void, !dbg !769
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @x264_pixel_sad_x4_4x8(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #9 !dbg !770 {
entry:
    #dbg_value(ptr %fenc, !772, !DIExpression(), !779)
    #dbg_value(ptr %pix0, !773, !DIExpression(), !779)
    #dbg_value(ptr %pix1, !774, !DIExpression(), !779)
    #dbg_value(ptr %pix2, !775, !DIExpression(), !779)
    #dbg_value(ptr %pix3, !776, !DIExpression(), !779)
    #dbg_value(i32 %i_stride, !777, !DIExpression(), !779)
    #dbg_value(ptr %scores, !778, !DIExpression(), !779)
  %call = tail call i32 @x264_pixel_sad_4x8(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix0, i32 noundef %i_stride), !dbg !780
  store i32 %call, ptr %scores, align 4, !dbg !780
  %call1 = tail call i32 @x264_pixel_sad_4x8(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix1, i32 noundef %i_stride), !dbg !780
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !780
  store i32 %call1, ptr %arrayidx2, align 4, !dbg !780
  %call3 = tail call i32 @x264_pixel_sad_4x8(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix2, i32 noundef %i_stride), !dbg !780
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !780
  store i32 %call3, ptr %arrayidx4, align 4, !dbg !780
  %call5 = tail call i32 @x264_pixel_sad_4x8(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix3, i32 noundef %i_stride), !dbg !780
  %arrayidx6 = getelementptr inbounds i8, ptr %scores, i64 12, !dbg !780
  store i32 %call5, ptr %arrayidx6, align 4, !dbg !780
  ret void, !dbg !780
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @x264_pixel_sad_x4_4x4(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #8 !dbg !781 {
entry:
    #dbg_value(ptr %fenc, !783, !DIExpression(), !790)
    #dbg_value(ptr %pix0, !784, !DIExpression(), !790)
    #dbg_value(ptr %pix1, !785, !DIExpression(), !790)
    #dbg_value(ptr %pix2, !786, !DIExpression(), !790)
    #dbg_value(ptr %pix3, !787, !DIExpression(), !790)
    #dbg_value(i32 %i_stride, !788, !DIExpression(), !790)
    #dbg_value(ptr %scores, !789, !DIExpression(), !790)
    #dbg_value(ptr %fenc, !524, !DIExpression(), !791)
    #dbg_value(i32 16, !525, !DIExpression(), !791)
    #dbg_value(ptr %pix0, !526, !DIExpression(), !791)
    #dbg_value(i32 %i_stride, !527, !DIExpression(), !791)
    #dbg_value(i32 0, !528, !DIExpression(), !791)
    #dbg_value(i32 0, !529, !DIExpression(), !793)
  %idx.ext8.i = sext i32 %i_stride to i64
    #dbg_value(i32 0, !529, !DIExpression(), !793)
    #dbg_value(i32 0, !528, !DIExpression(), !791)
    #dbg_value(ptr %fenc, !524, !DIExpression(), !791)
    #dbg_value(ptr %pix0, !526, !DIExpression(), !791)
    #dbg_value(i32 0, !529, !DIExpression(), !793)
    #dbg_value(ptr %fenc, !524, !DIExpression(), !791)
    #dbg_value(ptr %pix0, !526, !DIExpression(), !791)
    #dbg_value(i32 0, !531, !DIExpression(), !794)
    #dbg_value(i32 0, !528, !DIExpression(), !791)
    #dbg_value(i64 0, !531, !DIExpression(), !794)
    #dbg_value(i32 0, !528, !DIExpression(), !791)
  %0 = load i8, ptr %fenc, align 1, !dbg !795
  %conv.i = zext i8 %0 to i32, !dbg !795
  %1 = load i8, ptr %pix0, align 1, !dbg !795
  %conv7.i = zext i8 %1 to i32, !dbg !795
  %sub.i = sub nsw i32 %conv.i, %conv7.i, !dbg !795
  %2 = tail call i32 @llvm.abs.i32(i32 %sub.i, i1 true), !dbg !795
    #dbg_value(i32 %2, !528, !DIExpression(), !791)
    #dbg_value(i64 1, !531, !DIExpression(), !794)
  %arrayidx.1.i = getelementptr inbounds i8, ptr %fenc, i64 1, !dbg !795
  %3 = load i8, ptr %arrayidx.1.i, align 1, !dbg !795
  %conv.1.i = zext i8 %3 to i32, !dbg !795
  %arrayidx6.1.i = getelementptr inbounds i8, ptr %pix0, i64 1, !dbg !795
  %4 = load i8, ptr %arrayidx6.1.i, align 1, !dbg !795
  %conv7.1.i = zext i8 %4 to i32, !dbg !795
  %sub.1.i = sub nsw i32 %conv.1.i, %conv7.1.i, !dbg !795
  %5 = tail call i32 @llvm.abs.i32(i32 %sub.1.i, i1 true), !dbg !795
  %add.1.i = add nuw nsw i32 %5, %2, !dbg !795
    #dbg_value(i32 %add.1.i, !528, !DIExpression(), !791)
    #dbg_value(i64 2, !531, !DIExpression(), !794)
  %arrayidx.2.i = getelementptr inbounds i8, ptr %fenc, i64 2, !dbg !795
  %6 = load i8, ptr %arrayidx.2.i, align 1, !dbg !795
  %conv.2.i = zext i8 %6 to i32, !dbg !795
  %arrayidx6.2.i = getelementptr inbounds i8, ptr %pix0, i64 2, !dbg !795
  %7 = load i8, ptr %arrayidx6.2.i, align 1, !dbg !795
  %conv7.2.i = zext i8 %7 to i32, !dbg !795
  %sub.2.i = sub nsw i32 %conv.2.i, %conv7.2.i, !dbg !795
  %8 = tail call i32 @llvm.abs.i32(i32 %sub.2.i, i1 true), !dbg !795
  %add.2.i = add nuw nsw i32 %add.1.i, %8, !dbg !795
    #dbg_value(i32 %add.2.i, !528, !DIExpression(), !791)
    #dbg_value(i64 3, !531, !DIExpression(), !794)
  %arrayidx.3.i = getelementptr inbounds i8, ptr %fenc, i64 3, !dbg !795
  %9 = load i8, ptr %arrayidx.3.i, align 1, !dbg !795
  %conv.3.i = zext i8 %9 to i32, !dbg !795
  %arrayidx6.3.i = getelementptr inbounds i8, ptr %pix0, i64 3, !dbg !795
  %10 = load i8, ptr %arrayidx6.3.i, align 1, !dbg !795
  %conv7.3.i = zext i8 %10 to i32, !dbg !795
  %sub.3.i = sub nsw i32 %conv.3.i, %conv7.3.i, !dbg !795
  %11 = tail call i32 @llvm.abs.i32(i32 %sub.3.i, i1 true), !dbg !795
  %add.3.i = add nuw nsw i32 %add.2.i, %11, !dbg !795
    #dbg_value(i32 %add.3.i, !528, !DIExpression(), !791)
    #dbg_value(i64 4, !531, !DIExpression(), !794)
  %add.ptr.i = getelementptr inbounds i8, ptr %fenc, i64 16, !dbg !796
    #dbg_value(ptr %add.ptr.i, !524, !DIExpression(), !791)
  %add.ptr9.i = getelementptr inbounds i8, ptr %pix0, i64 %idx.ext8.i, !dbg !796
    #dbg_value(ptr %add.ptr9.i, !526, !DIExpression(), !791)
    #dbg_value(i32 1, !529, !DIExpression(), !793)
    #dbg_value(i32 0, !531, !DIExpression(), !794)
    #dbg_value(i64 0, !531, !DIExpression(), !794)
    #dbg_value(i32 %add.3.i, !528, !DIExpression(), !791)
  %12 = load i8, ptr %add.ptr.i, align 1, !dbg !795
  %conv.127.i = zext i8 %12 to i32, !dbg !795
  %13 = load i8, ptr %add.ptr9.i, align 1, !dbg !795
  %conv7.128.i = zext i8 %13 to i32, !dbg !795
  %sub.129.i = sub nsw i32 %conv.127.i, %conv7.128.i, !dbg !795
  %14 = tail call i32 @llvm.abs.i32(i32 %sub.129.i, i1 true), !dbg !795
  %add.130.i = add nuw nsw i32 %add.3.i, %14, !dbg !795
    #dbg_value(i32 %add.130.i, !528, !DIExpression(), !791)
    #dbg_value(i64 1, !531, !DIExpression(), !794)
  %arrayidx.1.1.i = getelementptr inbounds i8, ptr %fenc, i64 17, !dbg !795
  %15 = load i8, ptr %arrayidx.1.1.i, align 1, !dbg !795
  %conv.1.1.i = zext i8 %15 to i32, !dbg !795
  %arrayidx6.1.1.i = getelementptr inbounds i8, ptr %add.ptr9.i, i64 1, !dbg !795
  %16 = load i8, ptr %arrayidx6.1.1.i, align 1, !dbg !795
  %conv7.1.1.i = zext i8 %16 to i32, !dbg !795
  %sub.1.1.i = sub nsw i32 %conv.1.1.i, %conv7.1.1.i, !dbg !795
  %17 = tail call i32 @llvm.abs.i32(i32 %sub.1.1.i, i1 true), !dbg !795
  %add.1.1.i = add nuw nsw i32 %add.130.i, %17, !dbg !795
    #dbg_value(i32 %add.1.1.i, !528, !DIExpression(), !791)
    #dbg_value(i64 2, !531, !DIExpression(), !794)
  %arrayidx.2.1.i = getelementptr inbounds i8, ptr %fenc, i64 18, !dbg !795
  %18 = load i8, ptr %arrayidx.2.1.i, align 1, !dbg !795
  %conv.2.1.i = zext i8 %18 to i32, !dbg !795
  %arrayidx6.2.1.i = getelementptr inbounds i8, ptr %add.ptr9.i, i64 2, !dbg !795
  %19 = load i8, ptr %arrayidx6.2.1.i, align 1, !dbg !795
  %conv7.2.1.i = zext i8 %19 to i32, !dbg !795
  %sub.2.1.i = sub nsw i32 %conv.2.1.i, %conv7.2.1.i, !dbg !795
  %20 = tail call i32 @llvm.abs.i32(i32 %sub.2.1.i, i1 true), !dbg !795
  %add.2.1.i = add nuw nsw i32 %add.1.1.i, %20, !dbg !795
    #dbg_value(i32 %add.2.1.i, !528, !DIExpression(), !791)
    #dbg_value(i64 3, !531, !DIExpression(), !794)
  %arrayidx.3.1.i = getelementptr inbounds i8, ptr %fenc, i64 19, !dbg !795
  %21 = load i8, ptr %arrayidx.3.1.i, align 1, !dbg !795
  %conv.3.1.i = zext i8 %21 to i32, !dbg !795
  %arrayidx6.3.1.i = getelementptr inbounds i8, ptr %add.ptr9.i, i64 3, !dbg !795
  %22 = load i8, ptr %arrayidx6.3.1.i, align 1, !dbg !795
  %conv7.3.1.i = zext i8 %22 to i32, !dbg !795
  %sub.3.1.i = sub nsw i32 %conv.3.1.i, %conv7.3.1.i, !dbg !795
  %23 = tail call i32 @llvm.abs.i32(i32 %sub.3.1.i, i1 true), !dbg !795
  %add.3.1.i = add nuw nsw i32 %add.2.1.i, %23, !dbg !795
    #dbg_value(i32 %add.3.1.i, !528, !DIExpression(), !791)
    #dbg_value(i64 4, !531, !DIExpression(), !794)
  %add.ptr.1.i = getelementptr inbounds i8, ptr %fenc, i64 32, !dbg !796
    #dbg_value(ptr %add.ptr.1.i, !524, !DIExpression(), !791)
  %add.ptr9.1.i = getelementptr inbounds i8, ptr %add.ptr9.i, i64 %idx.ext8.i, !dbg !796
    #dbg_value(ptr %add.ptr9.1.i, !526, !DIExpression(), !791)
    #dbg_value(i32 2, !529, !DIExpression(), !793)
    #dbg_value(i32 0, !531, !DIExpression(), !794)
    #dbg_value(i64 0, !531, !DIExpression(), !794)
    #dbg_value(i32 %add.3.1.i, !528, !DIExpression(), !791)
  %24 = load i8, ptr %add.ptr.1.i, align 1, !dbg !795
  %conv.231.i = zext i8 %24 to i32, !dbg !795
  %25 = load i8, ptr %add.ptr9.1.i, align 1, !dbg !795
  %conv7.232.i = zext i8 %25 to i32, !dbg !795
  %sub.233.i = sub nsw i32 %conv.231.i, %conv7.232.i, !dbg !795
  %26 = tail call i32 @llvm.abs.i32(i32 %sub.233.i, i1 true), !dbg !795
  %add.234.i = add nuw nsw i32 %add.3.1.i, %26, !dbg !795
    #dbg_value(i32 %add.234.i, !528, !DIExpression(), !791)
    #dbg_value(i64 1, !531, !DIExpression(), !794)
  %arrayidx.1.2.i = getelementptr inbounds i8, ptr %fenc, i64 33, !dbg !795
  %27 = load i8, ptr %arrayidx.1.2.i, align 1, !dbg !795
  %conv.1.2.i = zext i8 %27 to i32, !dbg !795
  %arrayidx6.1.2.i = getelementptr inbounds i8, ptr %add.ptr9.1.i, i64 1, !dbg !795
  %28 = load i8, ptr %arrayidx6.1.2.i, align 1, !dbg !795
  %conv7.1.2.i = zext i8 %28 to i32, !dbg !795
  %sub.1.2.i = sub nsw i32 %conv.1.2.i, %conv7.1.2.i, !dbg !795
  %29 = tail call i32 @llvm.abs.i32(i32 %sub.1.2.i, i1 true), !dbg !795
  %add.1.2.i = add nuw nsw i32 %add.234.i, %29, !dbg !795
    #dbg_value(i32 %add.1.2.i, !528, !DIExpression(), !791)
    #dbg_value(i64 2, !531, !DIExpression(), !794)
  %arrayidx.2.2.i = getelementptr inbounds i8, ptr %fenc, i64 34, !dbg !795
  %30 = load i8, ptr %arrayidx.2.2.i, align 1, !dbg !795
  %conv.2.2.i = zext i8 %30 to i32, !dbg !795
  %arrayidx6.2.2.i = getelementptr inbounds i8, ptr %add.ptr9.1.i, i64 2, !dbg !795
  %31 = load i8, ptr %arrayidx6.2.2.i, align 1, !dbg !795
  %conv7.2.2.i = zext i8 %31 to i32, !dbg !795
  %sub.2.2.i = sub nsw i32 %conv.2.2.i, %conv7.2.2.i, !dbg !795
  %32 = tail call i32 @llvm.abs.i32(i32 %sub.2.2.i, i1 true), !dbg !795
  %add.2.2.i = add nuw nsw i32 %add.1.2.i, %32, !dbg !795
    #dbg_value(i32 %add.2.2.i, !528, !DIExpression(), !791)
    #dbg_value(i64 3, !531, !DIExpression(), !794)
  %arrayidx.3.2.i = getelementptr inbounds i8, ptr %fenc, i64 35, !dbg !795
  %33 = load i8, ptr %arrayidx.3.2.i, align 1, !dbg !795
  %conv.3.2.i = zext i8 %33 to i32, !dbg !795
  %arrayidx6.3.2.i = getelementptr inbounds i8, ptr %add.ptr9.1.i, i64 3, !dbg !795
  %34 = load i8, ptr %arrayidx6.3.2.i, align 1, !dbg !795
  %conv7.3.2.i = zext i8 %34 to i32, !dbg !795
  %sub.3.2.i = sub nsw i32 %conv.3.2.i, %conv7.3.2.i, !dbg !795
  %35 = tail call i32 @llvm.abs.i32(i32 %sub.3.2.i, i1 true), !dbg !795
  %add.3.2.i = add nuw nsw i32 %add.2.2.i, %35, !dbg !795
    #dbg_value(i32 %add.3.2.i, !528, !DIExpression(), !791)
    #dbg_value(i64 4, !531, !DIExpression(), !794)
  %add.ptr.2.i = getelementptr inbounds i8, ptr %fenc, i64 48, !dbg !796
    #dbg_value(ptr %add.ptr.2.i, !524, !DIExpression(), !791)
  %add.ptr9.2.i = getelementptr inbounds i8, ptr %add.ptr9.1.i, i64 %idx.ext8.i, !dbg !796
    #dbg_value(ptr %add.ptr9.2.i, !526, !DIExpression(), !791)
    #dbg_value(i32 3, !529, !DIExpression(), !793)
    #dbg_value(i32 0, !531, !DIExpression(), !794)
    #dbg_value(i64 0, !531, !DIExpression(), !794)
    #dbg_value(i32 %add.3.2.i, !528, !DIExpression(), !791)
  %36 = load i8, ptr %add.ptr.2.i, align 1, !dbg !795
  %conv.335.i = zext i8 %36 to i32, !dbg !795
  %37 = load i8, ptr %add.ptr9.2.i, align 1, !dbg !795
  %conv7.336.i = zext i8 %37 to i32, !dbg !795
  %sub.337.i = sub nsw i32 %conv.335.i, %conv7.336.i, !dbg !795
  %38 = tail call i32 @llvm.abs.i32(i32 %sub.337.i, i1 true), !dbg !795
  %add.338.i = add nuw nsw i32 %add.3.2.i, %38, !dbg !795
    #dbg_value(i32 %add.338.i, !528, !DIExpression(), !791)
    #dbg_value(i64 1, !531, !DIExpression(), !794)
  %arrayidx.1.3.i = getelementptr inbounds i8, ptr %fenc, i64 49, !dbg !795
  %39 = load i8, ptr %arrayidx.1.3.i, align 1, !dbg !795
  %conv.1.3.i = zext i8 %39 to i32, !dbg !795
  %arrayidx6.1.3.i = getelementptr inbounds i8, ptr %add.ptr9.2.i, i64 1, !dbg !795
  %40 = load i8, ptr %arrayidx6.1.3.i, align 1, !dbg !795
  %conv7.1.3.i = zext i8 %40 to i32, !dbg !795
  %sub.1.3.i = sub nsw i32 %conv.1.3.i, %conv7.1.3.i, !dbg !795
  %41 = tail call i32 @llvm.abs.i32(i32 %sub.1.3.i, i1 true), !dbg !795
  %add.1.3.i = add nuw nsw i32 %add.338.i, %41, !dbg !795
    #dbg_value(i32 %add.1.3.i, !528, !DIExpression(), !791)
    #dbg_value(i64 2, !531, !DIExpression(), !794)
  %arrayidx.2.3.i = getelementptr inbounds i8, ptr %fenc, i64 50, !dbg !795
  %42 = load i8, ptr %arrayidx.2.3.i, align 1, !dbg !795
  %conv.2.3.i = zext i8 %42 to i32, !dbg !795
  %arrayidx6.2.3.i = getelementptr inbounds i8, ptr %add.ptr9.2.i, i64 2, !dbg !795
  %43 = load i8, ptr %arrayidx6.2.3.i, align 1, !dbg !795
  %conv7.2.3.i = zext i8 %43 to i32, !dbg !795
  %sub.2.3.i = sub nsw i32 %conv.2.3.i, %conv7.2.3.i, !dbg !795
  %44 = tail call i32 @llvm.abs.i32(i32 %sub.2.3.i, i1 true), !dbg !795
  %add.2.3.i = add nuw nsw i32 %add.1.3.i, %44, !dbg !795
    #dbg_value(i32 %add.2.3.i, !528, !DIExpression(), !791)
    #dbg_value(i64 3, !531, !DIExpression(), !794)
  %arrayidx.3.3.i = getelementptr inbounds i8, ptr %fenc, i64 51, !dbg !795
  %45 = load i8, ptr %arrayidx.3.3.i, align 1, !dbg !795
  %conv.3.3.i = zext i8 %45 to i32, !dbg !795
  %arrayidx6.3.3.i = getelementptr inbounds i8, ptr %add.ptr9.2.i, i64 3, !dbg !795
  %46 = load i8, ptr %arrayidx6.3.3.i, align 1, !dbg !795
  %conv7.3.3.i = zext i8 %46 to i32, !dbg !795
  %sub.3.3.i = sub nsw i32 %conv.3.3.i, %conv7.3.3.i, !dbg !795
  %47 = tail call i32 @llvm.abs.i32(i32 %sub.3.3.i, i1 true), !dbg !795
  %add.3.3.i = add nuw nsw i32 %add.2.3.i, %47, !dbg !795
    #dbg_value(i32 %add.3.3.i, !528, !DIExpression(), !791)
    #dbg_value(i64 4, !531, !DIExpression(), !794)
    #dbg_value(!DIArgList(ptr %add.ptr.2.i, i64 16), !524, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !791)
    #dbg_value(!DIArgList(ptr %add.ptr9.2.i, i64 %idx.ext8.i), !526, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !791)
    #dbg_value(i32 4, !529, !DIExpression(), !793)
  store i32 %add.3.3.i, ptr %scores, align 4, !dbg !797
    #dbg_value(ptr %fenc, !524, !DIExpression(), !798)
    #dbg_value(i32 16, !525, !DIExpression(), !798)
    #dbg_value(ptr %pix1, !526, !DIExpression(), !798)
    #dbg_value(i32 %i_stride, !527, !DIExpression(), !798)
    #dbg_value(i32 0, !528, !DIExpression(), !798)
    #dbg_value(i32 0, !529, !DIExpression(), !800)
    #dbg_value(i32 0, !529, !DIExpression(), !800)
    #dbg_value(i32 0, !528, !DIExpression(), !798)
    #dbg_value(ptr %fenc, !524, !DIExpression(), !798)
    #dbg_value(ptr %pix1, !526, !DIExpression(), !798)
    #dbg_value(i32 0, !529, !DIExpression(), !800)
    #dbg_value(ptr %fenc, !524, !DIExpression(), !798)
    #dbg_value(ptr %pix1, !526, !DIExpression(), !798)
    #dbg_value(i32 0, !531, !DIExpression(), !801)
    #dbg_value(i32 0, !528, !DIExpression(), !798)
    #dbg_value(i64 0, !531, !DIExpression(), !801)
    #dbg_value(i32 0, !528, !DIExpression(), !798)
  %48 = load i8, ptr %fenc, align 1, !dbg !802
  %conv.i17 = zext i8 %48 to i32, !dbg !802
  %49 = load i8, ptr %pix1, align 1, !dbg !802
  %conv7.i18 = zext i8 %49 to i32, !dbg !802
  %sub.i19 = sub nsw i32 %conv.i17, %conv7.i18, !dbg !802
  %50 = tail call i32 @llvm.abs.i32(i32 %sub.i19, i1 true), !dbg !802
    #dbg_value(i32 %50, !528, !DIExpression(), !798)
    #dbg_value(i64 1, !531, !DIExpression(), !801)
  %51 = load i8, ptr %arrayidx.1.i, align 1, !dbg !802
  %conv.1.i21 = zext i8 %51 to i32, !dbg !802
  %arrayidx6.1.i22 = getelementptr inbounds i8, ptr %pix1, i64 1, !dbg !802
  %52 = load i8, ptr %arrayidx6.1.i22, align 1, !dbg !802
  %conv7.1.i23 = zext i8 %52 to i32, !dbg !802
  %sub.1.i24 = sub nsw i32 %conv.1.i21, %conv7.1.i23, !dbg !802
  %53 = tail call i32 @llvm.abs.i32(i32 %sub.1.i24, i1 true), !dbg !802
  %add.1.i25 = add nuw nsw i32 %53, %50, !dbg !802
    #dbg_value(i32 %add.1.i25, !528, !DIExpression(), !798)
    #dbg_value(i64 2, !531, !DIExpression(), !801)
  %54 = load i8, ptr %arrayidx.2.i, align 1, !dbg !802
  %conv.2.i27 = zext i8 %54 to i32, !dbg !802
  %arrayidx6.2.i28 = getelementptr inbounds i8, ptr %pix1, i64 2, !dbg !802
  %55 = load i8, ptr %arrayidx6.2.i28, align 1, !dbg !802
  %conv7.2.i29 = zext i8 %55 to i32, !dbg !802
  %sub.2.i30 = sub nsw i32 %conv.2.i27, %conv7.2.i29, !dbg !802
  %56 = tail call i32 @llvm.abs.i32(i32 %sub.2.i30, i1 true), !dbg !802
  %add.2.i31 = add nuw nsw i32 %add.1.i25, %56, !dbg !802
    #dbg_value(i32 %add.2.i31, !528, !DIExpression(), !798)
    #dbg_value(i64 3, !531, !DIExpression(), !801)
  %57 = load i8, ptr %arrayidx.3.i, align 1, !dbg !802
  %conv.3.i33 = zext i8 %57 to i32, !dbg !802
  %arrayidx6.3.i34 = getelementptr inbounds i8, ptr %pix1, i64 3, !dbg !802
  %58 = load i8, ptr %arrayidx6.3.i34, align 1, !dbg !802
  %conv7.3.i35 = zext i8 %58 to i32, !dbg !802
  %sub.3.i36 = sub nsw i32 %conv.3.i33, %conv7.3.i35, !dbg !802
  %59 = tail call i32 @llvm.abs.i32(i32 %sub.3.i36, i1 true), !dbg !802
  %add.3.i37 = add nuw nsw i32 %add.2.i31, %59, !dbg !802
    #dbg_value(i32 %add.3.i37, !528, !DIExpression(), !798)
    #dbg_value(i64 4, !531, !DIExpression(), !801)
    #dbg_value(ptr %add.ptr.i, !524, !DIExpression(), !798)
  %add.ptr9.i39 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext8.i, !dbg !803
    #dbg_value(ptr %add.ptr9.i39, !526, !DIExpression(), !798)
    #dbg_value(i32 1, !529, !DIExpression(), !800)
    #dbg_value(i32 0, !531, !DIExpression(), !801)
    #dbg_value(i64 0, !531, !DIExpression(), !801)
    #dbg_value(i32 %add.3.i37, !528, !DIExpression(), !798)
  %60 = load i8, ptr %add.ptr.i, align 1, !dbg !802
  %conv.127.i40 = zext i8 %60 to i32, !dbg !802
  %61 = load i8, ptr %add.ptr9.i39, align 1, !dbg !802
  %conv7.128.i41 = zext i8 %61 to i32, !dbg !802
  %sub.129.i42 = sub nsw i32 %conv.127.i40, %conv7.128.i41, !dbg !802
  %62 = tail call i32 @llvm.abs.i32(i32 %sub.129.i42, i1 true), !dbg !802
  %add.130.i43 = add nuw nsw i32 %add.3.i37, %62, !dbg !802
    #dbg_value(i32 %add.130.i43, !528, !DIExpression(), !798)
    #dbg_value(i64 1, !531, !DIExpression(), !801)
  %63 = load i8, ptr %arrayidx.1.1.i, align 1, !dbg !802
  %conv.1.1.i45 = zext i8 %63 to i32, !dbg !802
  %arrayidx6.1.1.i46 = getelementptr inbounds i8, ptr %add.ptr9.i39, i64 1, !dbg !802
  %64 = load i8, ptr %arrayidx6.1.1.i46, align 1, !dbg !802
  %conv7.1.1.i47 = zext i8 %64 to i32, !dbg !802
  %sub.1.1.i48 = sub nsw i32 %conv.1.1.i45, %conv7.1.1.i47, !dbg !802
  %65 = tail call i32 @llvm.abs.i32(i32 %sub.1.1.i48, i1 true), !dbg !802
  %add.1.1.i49 = add nuw nsw i32 %add.130.i43, %65, !dbg !802
    #dbg_value(i32 %add.1.1.i49, !528, !DIExpression(), !798)
    #dbg_value(i64 2, !531, !DIExpression(), !801)
  %66 = load i8, ptr %arrayidx.2.1.i, align 1, !dbg !802
  %conv.2.1.i51 = zext i8 %66 to i32, !dbg !802
  %arrayidx6.2.1.i52 = getelementptr inbounds i8, ptr %add.ptr9.i39, i64 2, !dbg !802
  %67 = load i8, ptr %arrayidx6.2.1.i52, align 1, !dbg !802
  %conv7.2.1.i53 = zext i8 %67 to i32, !dbg !802
  %sub.2.1.i54 = sub nsw i32 %conv.2.1.i51, %conv7.2.1.i53, !dbg !802
  %68 = tail call i32 @llvm.abs.i32(i32 %sub.2.1.i54, i1 true), !dbg !802
  %add.2.1.i55 = add nuw nsw i32 %add.1.1.i49, %68, !dbg !802
    #dbg_value(i32 %add.2.1.i55, !528, !DIExpression(), !798)
    #dbg_value(i64 3, !531, !DIExpression(), !801)
  %69 = load i8, ptr %arrayidx.3.1.i, align 1, !dbg !802
  %conv.3.1.i57 = zext i8 %69 to i32, !dbg !802
  %arrayidx6.3.1.i58 = getelementptr inbounds i8, ptr %add.ptr9.i39, i64 3, !dbg !802
  %70 = load i8, ptr %arrayidx6.3.1.i58, align 1, !dbg !802
  %conv7.3.1.i59 = zext i8 %70 to i32, !dbg !802
  %sub.3.1.i60 = sub nsw i32 %conv.3.1.i57, %conv7.3.1.i59, !dbg !802
  %71 = tail call i32 @llvm.abs.i32(i32 %sub.3.1.i60, i1 true), !dbg !802
  %add.3.1.i61 = add nuw nsw i32 %add.2.1.i55, %71, !dbg !802
    #dbg_value(i32 %add.3.1.i61, !528, !DIExpression(), !798)
    #dbg_value(i64 4, !531, !DIExpression(), !801)
    #dbg_value(ptr %add.ptr.1.i, !524, !DIExpression(), !798)
  %add.ptr9.1.i63 = getelementptr inbounds i8, ptr %add.ptr9.i39, i64 %idx.ext8.i, !dbg !803
    #dbg_value(ptr %add.ptr9.1.i63, !526, !DIExpression(), !798)
    #dbg_value(i32 2, !529, !DIExpression(), !800)
    #dbg_value(i32 0, !531, !DIExpression(), !801)
    #dbg_value(i64 0, !531, !DIExpression(), !801)
    #dbg_value(i32 %add.3.1.i61, !528, !DIExpression(), !798)
  %72 = load i8, ptr %add.ptr.1.i, align 1, !dbg !802
  %conv.231.i64 = zext i8 %72 to i32, !dbg !802
  %73 = load i8, ptr %add.ptr9.1.i63, align 1, !dbg !802
  %conv7.232.i65 = zext i8 %73 to i32, !dbg !802
  %sub.233.i66 = sub nsw i32 %conv.231.i64, %conv7.232.i65, !dbg !802
  %74 = tail call i32 @llvm.abs.i32(i32 %sub.233.i66, i1 true), !dbg !802
  %add.234.i67 = add nuw nsw i32 %add.3.1.i61, %74, !dbg !802
    #dbg_value(i32 %add.234.i67, !528, !DIExpression(), !798)
    #dbg_value(i64 1, !531, !DIExpression(), !801)
  %75 = load i8, ptr %arrayidx.1.2.i, align 1, !dbg !802
  %conv.1.2.i69 = zext i8 %75 to i32, !dbg !802
  %arrayidx6.1.2.i70 = getelementptr inbounds i8, ptr %add.ptr9.1.i63, i64 1, !dbg !802
  %76 = load i8, ptr %arrayidx6.1.2.i70, align 1, !dbg !802
  %conv7.1.2.i71 = zext i8 %76 to i32, !dbg !802
  %sub.1.2.i72 = sub nsw i32 %conv.1.2.i69, %conv7.1.2.i71, !dbg !802
  %77 = tail call i32 @llvm.abs.i32(i32 %sub.1.2.i72, i1 true), !dbg !802
  %add.1.2.i73 = add nuw nsw i32 %add.234.i67, %77, !dbg !802
    #dbg_value(i32 %add.1.2.i73, !528, !DIExpression(), !798)
    #dbg_value(i64 2, !531, !DIExpression(), !801)
  %78 = load i8, ptr %arrayidx.2.2.i, align 1, !dbg !802
  %conv.2.2.i75 = zext i8 %78 to i32, !dbg !802
  %arrayidx6.2.2.i76 = getelementptr inbounds i8, ptr %add.ptr9.1.i63, i64 2, !dbg !802
  %79 = load i8, ptr %arrayidx6.2.2.i76, align 1, !dbg !802
  %conv7.2.2.i77 = zext i8 %79 to i32, !dbg !802
  %sub.2.2.i78 = sub nsw i32 %conv.2.2.i75, %conv7.2.2.i77, !dbg !802
  %80 = tail call i32 @llvm.abs.i32(i32 %sub.2.2.i78, i1 true), !dbg !802
  %add.2.2.i79 = add nuw nsw i32 %add.1.2.i73, %80, !dbg !802
    #dbg_value(i32 %add.2.2.i79, !528, !DIExpression(), !798)
    #dbg_value(i64 3, !531, !DIExpression(), !801)
  %81 = load i8, ptr %arrayidx.3.2.i, align 1, !dbg !802
  %conv.3.2.i81 = zext i8 %81 to i32, !dbg !802
  %arrayidx6.3.2.i82 = getelementptr inbounds i8, ptr %add.ptr9.1.i63, i64 3, !dbg !802
  %82 = load i8, ptr %arrayidx6.3.2.i82, align 1, !dbg !802
  %conv7.3.2.i83 = zext i8 %82 to i32, !dbg !802
  %sub.3.2.i84 = sub nsw i32 %conv.3.2.i81, %conv7.3.2.i83, !dbg !802
  %83 = tail call i32 @llvm.abs.i32(i32 %sub.3.2.i84, i1 true), !dbg !802
  %add.3.2.i85 = add nuw nsw i32 %add.2.2.i79, %83, !dbg !802
    #dbg_value(i32 %add.3.2.i85, !528, !DIExpression(), !798)
    #dbg_value(i64 4, !531, !DIExpression(), !801)
    #dbg_value(ptr %add.ptr.2.i, !524, !DIExpression(), !798)
  %add.ptr9.2.i87 = getelementptr inbounds i8, ptr %add.ptr9.1.i63, i64 %idx.ext8.i, !dbg !803
    #dbg_value(ptr %add.ptr9.2.i87, !526, !DIExpression(), !798)
    #dbg_value(i32 3, !529, !DIExpression(), !800)
    #dbg_value(i32 0, !531, !DIExpression(), !801)
    #dbg_value(i64 0, !531, !DIExpression(), !801)
    #dbg_value(i32 %add.3.2.i85, !528, !DIExpression(), !798)
  %84 = load i8, ptr %add.ptr.2.i, align 1, !dbg !802
  %conv.335.i88 = zext i8 %84 to i32, !dbg !802
  %85 = load i8, ptr %add.ptr9.2.i87, align 1, !dbg !802
  %conv7.336.i89 = zext i8 %85 to i32, !dbg !802
  %sub.337.i90 = sub nsw i32 %conv.335.i88, %conv7.336.i89, !dbg !802
  %86 = tail call i32 @llvm.abs.i32(i32 %sub.337.i90, i1 true), !dbg !802
  %add.338.i91 = add nuw nsw i32 %add.3.2.i85, %86, !dbg !802
    #dbg_value(i32 %add.338.i91, !528, !DIExpression(), !798)
    #dbg_value(i64 1, !531, !DIExpression(), !801)
  %87 = load i8, ptr %arrayidx.1.3.i, align 1, !dbg !802
  %conv.1.3.i93 = zext i8 %87 to i32, !dbg !802
  %arrayidx6.1.3.i94 = getelementptr inbounds i8, ptr %add.ptr9.2.i87, i64 1, !dbg !802
  %88 = load i8, ptr %arrayidx6.1.3.i94, align 1, !dbg !802
  %conv7.1.3.i95 = zext i8 %88 to i32, !dbg !802
  %sub.1.3.i96 = sub nsw i32 %conv.1.3.i93, %conv7.1.3.i95, !dbg !802
  %89 = tail call i32 @llvm.abs.i32(i32 %sub.1.3.i96, i1 true), !dbg !802
  %add.1.3.i97 = add nuw nsw i32 %add.338.i91, %89, !dbg !802
    #dbg_value(i32 %add.1.3.i97, !528, !DIExpression(), !798)
    #dbg_value(i64 2, !531, !DIExpression(), !801)
  %90 = load i8, ptr %arrayidx.2.3.i, align 1, !dbg !802
  %conv.2.3.i99 = zext i8 %90 to i32, !dbg !802
  %arrayidx6.2.3.i100 = getelementptr inbounds i8, ptr %add.ptr9.2.i87, i64 2, !dbg !802
  %91 = load i8, ptr %arrayidx6.2.3.i100, align 1, !dbg !802
  %conv7.2.3.i101 = zext i8 %91 to i32, !dbg !802
  %sub.2.3.i102 = sub nsw i32 %conv.2.3.i99, %conv7.2.3.i101, !dbg !802
  %92 = tail call i32 @llvm.abs.i32(i32 %sub.2.3.i102, i1 true), !dbg !802
  %add.2.3.i103 = add nuw nsw i32 %add.1.3.i97, %92, !dbg !802
    #dbg_value(i32 %add.2.3.i103, !528, !DIExpression(), !798)
    #dbg_value(i64 3, !531, !DIExpression(), !801)
  %93 = load i8, ptr %arrayidx.3.3.i, align 1, !dbg !802
  %conv.3.3.i105 = zext i8 %93 to i32, !dbg !802
  %arrayidx6.3.3.i106 = getelementptr inbounds i8, ptr %add.ptr9.2.i87, i64 3, !dbg !802
  %94 = load i8, ptr %arrayidx6.3.3.i106, align 1, !dbg !802
  %conv7.3.3.i107 = zext i8 %94 to i32, !dbg !802
  %sub.3.3.i108 = sub nsw i32 %conv.3.3.i105, %conv7.3.3.i107, !dbg !802
  %95 = tail call i32 @llvm.abs.i32(i32 %sub.3.3.i108, i1 true), !dbg !802
  %add.3.3.i109 = add nuw nsw i32 %add.2.3.i103, %95, !dbg !802
    #dbg_value(i32 %add.3.3.i109, !528, !DIExpression(), !798)
    #dbg_value(i64 4, !531, !DIExpression(), !801)
    #dbg_value(!DIArgList(ptr %add.ptr.2.i, i64 16), !524, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !798)
    #dbg_value(!DIArgList(ptr %add.ptr9.2.i87, i64 %idx.ext8.i), !526, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !798)
    #dbg_value(i32 4, !529, !DIExpression(), !800)
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !797
  store i32 %add.3.3.i109, ptr %arrayidx2, align 4, !dbg !797
    #dbg_value(ptr %fenc, !524, !DIExpression(), !804)
    #dbg_value(i32 16, !525, !DIExpression(), !804)
    #dbg_value(ptr %pix2, !526, !DIExpression(), !804)
    #dbg_value(i32 %i_stride, !527, !DIExpression(), !804)
    #dbg_value(i32 0, !528, !DIExpression(), !804)
    #dbg_value(i32 0, !529, !DIExpression(), !806)
    #dbg_value(i32 0, !529, !DIExpression(), !806)
    #dbg_value(i32 0, !528, !DIExpression(), !804)
    #dbg_value(ptr %fenc, !524, !DIExpression(), !804)
    #dbg_value(ptr %pix2, !526, !DIExpression(), !804)
    #dbg_value(i32 0, !529, !DIExpression(), !806)
    #dbg_value(ptr %fenc, !524, !DIExpression(), !804)
    #dbg_value(ptr %pix2, !526, !DIExpression(), !804)
    #dbg_value(i32 0, !531, !DIExpression(), !807)
    #dbg_value(i32 0, !528, !DIExpression(), !804)
    #dbg_value(i64 0, !531, !DIExpression(), !807)
    #dbg_value(i32 0, !528, !DIExpression(), !804)
  %96 = load i8, ptr %fenc, align 1, !dbg !808
  %conv.i111 = zext i8 %96 to i32, !dbg !808
  %97 = load i8, ptr %pix2, align 1, !dbg !808
  %conv7.i112 = zext i8 %97 to i32, !dbg !808
  %sub.i113 = sub nsw i32 %conv.i111, %conv7.i112, !dbg !808
  %98 = tail call i32 @llvm.abs.i32(i32 %sub.i113, i1 true), !dbg !808
    #dbg_value(i32 %98, !528, !DIExpression(), !804)
    #dbg_value(i64 1, !531, !DIExpression(), !807)
  %99 = load i8, ptr %arrayidx.1.i, align 1, !dbg !808
  %conv.1.i115 = zext i8 %99 to i32, !dbg !808
  %arrayidx6.1.i116 = getelementptr inbounds i8, ptr %pix2, i64 1, !dbg !808
  %100 = load i8, ptr %arrayidx6.1.i116, align 1, !dbg !808
  %conv7.1.i117 = zext i8 %100 to i32, !dbg !808
  %sub.1.i118 = sub nsw i32 %conv.1.i115, %conv7.1.i117, !dbg !808
  %101 = tail call i32 @llvm.abs.i32(i32 %sub.1.i118, i1 true), !dbg !808
  %add.1.i119 = add nuw nsw i32 %101, %98, !dbg !808
    #dbg_value(i32 %add.1.i119, !528, !DIExpression(), !804)
    #dbg_value(i64 2, !531, !DIExpression(), !807)
  %102 = load i8, ptr %arrayidx.2.i, align 1, !dbg !808
  %conv.2.i121 = zext i8 %102 to i32, !dbg !808
  %arrayidx6.2.i122 = getelementptr inbounds i8, ptr %pix2, i64 2, !dbg !808
  %103 = load i8, ptr %arrayidx6.2.i122, align 1, !dbg !808
  %conv7.2.i123 = zext i8 %103 to i32, !dbg !808
  %sub.2.i124 = sub nsw i32 %conv.2.i121, %conv7.2.i123, !dbg !808
  %104 = tail call i32 @llvm.abs.i32(i32 %sub.2.i124, i1 true), !dbg !808
  %add.2.i125 = add nuw nsw i32 %add.1.i119, %104, !dbg !808
    #dbg_value(i32 %add.2.i125, !528, !DIExpression(), !804)
    #dbg_value(i64 3, !531, !DIExpression(), !807)
  %105 = load i8, ptr %arrayidx.3.i, align 1, !dbg !808
  %conv.3.i127 = zext i8 %105 to i32, !dbg !808
  %arrayidx6.3.i128 = getelementptr inbounds i8, ptr %pix2, i64 3, !dbg !808
  %106 = load i8, ptr %arrayidx6.3.i128, align 1, !dbg !808
  %conv7.3.i129 = zext i8 %106 to i32, !dbg !808
  %sub.3.i130 = sub nsw i32 %conv.3.i127, %conv7.3.i129, !dbg !808
  %107 = tail call i32 @llvm.abs.i32(i32 %sub.3.i130, i1 true), !dbg !808
  %add.3.i131 = add nuw nsw i32 %add.2.i125, %107, !dbg !808
    #dbg_value(i32 %add.3.i131, !528, !DIExpression(), !804)
    #dbg_value(i64 4, !531, !DIExpression(), !807)
    #dbg_value(ptr %add.ptr.i, !524, !DIExpression(), !804)
  %add.ptr9.i133 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext8.i, !dbg !809
    #dbg_value(ptr %add.ptr9.i133, !526, !DIExpression(), !804)
    #dbg_value(i32 1, !529, !DIExpression(), !806)
    #dbg_value(i32 0, !531, !DIExpression(), !807)
    #dbg_value(i64 0, !531, !DIExpression(), !807)
    #dbg_value(i32 %add.3.i131, !528, !DIExpression(), !804)
  %108 = load i8, ptr %add.ptr.i, align 1, !dbg !808
  %conv.127.i134 = zext i8 %108 to i32, !dbg !808
  %109 = load i8, ptr %add.ptr9.i133, align 1, !dbg !808
  %conv7.128.i135 = zext i8 %109 to i32, !dbg !808
  %sub.129.i136 = sub nsw i32 %conv.127.i134, %conv7.128.i135, !dbg !808
  %110 = tail call i32 @llvm.abs.i32(i32 %sub.129.i136, i1 true), !dbg !808
  %add.130.i137 = add nuw nsw i32 %add.3.i131, %110, !dbg !808
    #dbg_value(i32 %add.130.i137, !528, !DIExpression(), !804)
    #dbg_value(i64 1, !531, !DIExpression(), !807)
  %111 = load i8, ptr %arrayidx.1.1.i, align 1, !dbg !808
  %conv.1.1.i139 = zext i8 %111 to i32, !dbg !808
  %arrayidx6.1.1.i140 = getelementptr inbounds i8, ptr %add.ptr9.i133, i64 1, !dbg !808
  %112 = load i8, ptr %arrayidx6.1.1.i140, align 1, !dbg !808
  %conv7.1.1.i141 = zext i8 %112 to i32, !dbg !808
  %sub.1.1.i142 = sub nsw i32 %conv.1.1.i139, %conv7.1.1.i141, !dbg !808
  %113 = tail call i32 @llvm.abs.i32(i32 %sub.1.1.i142, i1 true), !dbg !808
  %add.1.1.i143 = add nuw nsw i32 %add.130.i137, %113, !dbg !808
    #dbg_value(i32 %add.1.1.i143, !528, !DIExpression(), !804)
    #dbg_value(i64 2, !531, !DIExpression(), !807)
  %114 = load i8, ptr %arrayidx.2.1.i, align 1, !dbg !808
  %conv.2.1.i145 = zext i8 %114 to i32, !dbg !808
  %arrayidx6.2.1.i146 = getelementptr inbounds i8, ptr %add.ptr9.i133, i64 2, !dbg !808
  %115 = load i8, ptr %arrayidx6.2.1.i146, align 1, !dbg !808
  %conv7.2.1.i147 = zext i8 %115 to i32, !dbg !808
  %sub.2.1.i148 = sub nsw i32 %conv.2.1.i145, %conv7.2.1.i147, !dbg !808
  %116 = tail call i32 @llvm.abs.i32(i32 %sub.2.1.i148, i1 true), !dbg !808
  %add.2.1.i149 = add nuw nsw i32 %add.1.1.i143, %116, !dbg !808
    #dbg_value(i32 %add.2.1.i149, !528, !DIExpression(), !804)
    #dbg_value(i64 3, !531, !DIExpression(), !807)
  %117 = load i8, ptr %arrayidx.3.1.i, align 1, !dbg !808
  %conv.3.1.i151 = zext i8 %117 to i32, !dbg !808
  %arrayidx6.3.1.i152 = getelementptr inbounds i8, ptr %add.ptr9.i133, i64 3, !dbg !808
  %118 = load i8, ptr %arrayidx6.3.1.i152, align 1, !dbg !808
  %conv7.3.1.i153 = zext i8 %118 to i32, !dbg !808
  %sub.3.1.i154 = sub nsw i32 %conv.3.1.i151, %conv7.3.1.i153, !dbg !808
  %119 = tail call i32 @llvm.abs.i32(i32 %sub.3.1.i154, i1 true), !dbg !808
  %add.3.1.i155 = add nuw nsw i32 %add.2.1.i149, %119, !dbg !808
    #dbg_value(i32 %add.3.1.i155, !528, !DIExpression(), !804)
    #dbg_value(i64 4, !531, !DIExpression(), !807)
    #dbg_value(ptr %add.ptr.1.i, !524, !DIExpression(), !804)
  %add.ptr9.1.i157 = getelementptr inbounds i8, ptr %add.ptr9.i133, i64 %idx.ext8.i, !dbg !809
    #dbg_value(ptr %add.ptr9.1.i157, !526, !DIExpression(), !804)
    #dbg_value(i32 2, !529, !DIExpression(), !806)
    #dbg_value(i32 0, !531, !DIExpression(), !807)
    #dbg_value(i64 0, !531, !DIExpression(), !807)
    #dbg_value(i32 %add.3.1.i155, !528, !DIExpression(), !804)
  %120 = load i8, ptr %add.ptr.1.i, align 1, !dbg !808
  %conv.231.i158 = zext i8 %120 to i32, !dbg !808
  %121 = load i8, ptr %add.ptr9.1.i157, align 1, !dbg !808
  %conv7.232.i159 = zext i8 %121 to i32, !dbg !808
  %sub.233.i160 = sub nsw i32 %conv.231.i158, %conv7.232.i159, !dbg !808
  %122 = tail call i32 @llvm.abs.i32(i32 %sub.233.i160, i1 true), !dbg !808
  %add.234.i161 = add nuw nsw i32 %add.3.1.i155, %122, !dbg !808
    #dbg_value(i32 %add.234.i161, !528, !DIExpression(), !804)
    #dbg_value(i64 1, !531, !DIExpression(), !807)
  %123 = load i8, ptr %arrayidx.1.2.i, align 1, !dbg !808
  %conv.1.2.i163 = zext i8 %123 to i32, !dbg !808
  %arrayidx6.1.2.i164 = getelementptr inbounds i8, ptr %add.ptr9.1.i157, i64 1, !dbg !808
  %124 = load i8, ptr %arrayidx6.1.2.i164, align 1, !dbg !808
  %conv7.1.2.i165 = zext i8 %124 to i32, !dbg !808
  %sub.1.2.i166 = sub nsw i32 %conv.1.2.i163, %conv7.1.2.i165, !dbg !808
  %125 = tail call i32 @llvm.abs.i32(i32 %sub.1.2.i166, i1 true), !dbg !808
  %add.1.2.i167 = add nuw nsw i32 %add.234.i161, %125, !dbg !808
    #dbg_value(i32 %add.1.2.i167, !528, !DIExpression(), !804)
    #dbg_value(i64 2, !531, !DIExpression(), !807)
  %126 = load i8, ptr %arrayidx.2.2.i, align 1, !dbg !808
  %conv.2.2.i169 = zext i8 %126 to i32, !dbg !808
  %arrayidx6.2.2.i170 = getelementptr inbounds i8, ptr %add.ptr9.1.i157, i64 2, !dbg !808
  %127 = load i8, ptr %arrayidx6.2.2.i170, align 1, !dbg !808
  %conv7.2.2.i171 = zext i8 %127 to i32, !dbg !808
  %sub.2.2.i172 = sub nsw i32 %conv.2.2.i169, %conv7.2.2.i171, !dbg !808
  %128 = tail call i32 @llvm.abs.i32(i32 %sub.2.2.i172, i1 true), !dbg !808
  %add.2.2.i173 = add nuw nsw i32 %add.1.2.i167, %128, !dbg !808
    #dbg_value(i32 %add.2.2.i173, !528, !DIExpression(), !804)
    #dbg_value(i64 3, !531, !DIExpression(), !807)
  %129 = load i8, ptr %arrayidx.3.2.i, align 1, !dbg !808
  %conv.3.2.i175 = zext i8 %129 to i32, !dbg !808
  %arrayidx6.3.2.i176 = getelementptr inbounds i8, ptr %add.ptr9.1.i157, i64 3, !dbg !808
  %130 = load i8, ptr %arrayidx6.3.2.i176, align 1, !dbg !808
  %conv7.3.2.i177 = zext i8 %130 to i32, !dbg !808
  %sub.3.2.i178 = sub nsw i32 %conv.3.2.i175, %conv7.3.2.i177, !dbg !808
  %131 = tail call i32 @llvm.abs.i32(i32 %sub.3.2.i178, i1 true), !dbg !808
  %add.3.2.i179 = add nuw nsw i32 %add.2.2.i173, %131, !dbg !808
    #dbg_value(i32 %add.3.2.i179, !528, !DIExpression(), !804)
    #dbg_value(i64 4, !531, !DIExpression(), !807)
    #dbg_value(ptr %add.ptr.2.i, !524, !DIExpression(), !804)
  %add.ptr9.2.i181 = getelementptr inbounds i8, ptr %add.ptr9.1.i157, i64 %idx.ext8.i, !dbg !809
    #dbg_value(ptr %add.ptr9.2.i181, !526, !DIExpression(), !804)
    #dbg_value(i32 3, !529, !DIExpression(), !806)
    #dbg_value(i32 0, !531, !DIExpression(), !807)
    #dbg_value(i64 0, !531, !DIExpression(), !807)
    #dbg_value(i32 %add.3.2.i179, !528, !DIExpression(), !804)
  %132 = load i8, ptr %add.ptr.2.i, align 1, !dbg !808
  %conv.335.i182 = zext i8 %132 to i32, !dbg !808
  %133 = load i8, ptr %add.ptr9.2.i181, align 1, !dbg !808
  %conv7.336.i183 = zext i8 %133 to i32, !dbg !808
  %sub.337.i184 = sub nsw i32 %conv.335.i182, %conv7.336.i183, !dbg !808
  %134 = tail call i32 @llvm.abs.i32(i32 %sub.337.i184, i1 true), !dbg !808
  %add.338.i185 = add nuw nsw i32 %add.3.2.i179, %134, !dbg !808
    #dbg_value(i32 %add.338.i185, !528, !DIExpression(), !804)
    #dbg_value(i64 1, !531, !DIExpression(), !807)
  %135 = load i8, ptr %arrayidx.1.3.i, align 1, !dbg !808
  %conv.1.3.i187 = zext i8 %135 to i32, !dbg !808
  %arrayidx6.1.3.i188 = getelementptr inbounds i8, ptr %add.ptr9.2.i181, i64 1, !dbg !808
  %136 = load i8, ptr %arrayidx6.1.3.i188, align 1, !dbg !808
  %conv7.1.3.i189 = zext i8 %136 to i32, !dbg !808
  %sub.1.3.i190 = sub nsw i32 %conv.1.3.i187, %conv7.1.3.i189, !dbg !808
  %137 = tail call i32 @llvm.abs.i32(i32 %sub.1.3.i190, i1 true), !dbg !808
  %add.1.3.i191 = add nuw nsw i32 %add.338.i185, %137, !dbg !808
    #dbg_value(i32 %add.1.3.i191, !528, !DIExpression(), !804)
    #dbg_value(i64 2, !531, !DIExpression(), !807)
  %138 = load i8, ptr %arrayidx.2.3.i, align 1, !dbg !808
  %conv.2.3.i193 = zext i8 %138 to i32, !dbg !808
  %arrayidx6.2.3.i194 = getelementptr inbounds i8, ptr %add.ptr9.2.i181, i64 2, !dbg !808
  %139 = load i8, ptr %arrayidx6.2.3.i194, align 1, !dbg !808
  %conv7.2.3.i195 = zext i8 %139 to i32, !dbg !808
  %sub.2.3.i196 = sub nsw i32 %conv.2.3.i193, %conv7.2.3.i195, !dbg !808
  %140 = tail call i32 @llvm.abs.i32(i32 %sub.2.3.i196, i1 true), !dbg !808
  %add.2.3.i197 = add nuw nsw i32 %add.1.3.i191, %140, !dbg !808
    #dbg_value(i32 %add.2.3.i197, !528, !DIExpression(), !804)
    #dbg_value(i64 3, !531, !DIExpression(), !807)
  %141 = load i8, ptr %arrayidx.3.3.i, align 1, !dbg !808
  %conv.3.3.i199 = zext i8 %141 to i32, !dbg !808
  %arrayidx6.3.3.i200 = getelementptr inbounds i8, ptr %add.ptr9.2.i181, i64 3, !dbg !808
  %142 = load i8, ptr %arrayidx6.3.3.i200, align 1, !dbg !808
  %conv7.3.3.i201 = zext i8 %142 to i32, !dbg !808
  %sub.3.3.i202 = sub nsw i32 %conv.3.3.i199, %conv7.3.3.i201, !dbg !808
  %143 = tail call i32 @llvm.abs.i32(i32 %sub.3.3.i202, i1 true), !dbg !808
  %add.3.3.i203 = add nuw nsw i32 %add.2.3.i197, %143, !dbg !808
    #dbg_value(i32 %add.3.3.i203, !528, !DIExpression(), !804)
    #dbg_value(i64 4, !531, !DIExpression(), !807)
    #dbg_value(!DIArgList(ptr %add.ptr.2.i, i64 16), !524, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !804)
    #dbg_value(!DIArgList(ptr %add.ptr9.2.i181, i64 %idx.ext8.i), !526, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !804)
    #dbg_value(i32 4, !529, !DIExpression(), !806)
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !797
  store i32 %add.3.3.i203, ptr %arrayidx4, align 4, !dbg !797
    #dbg_value(ptr %fenc, !524, !DIExpression(), !810)
    #dbg_value(i32 16, !525, !DIExpression(), !810)
    #dbg_value(ptr %pix3, !526, !DIExpression(), !810)
    #dbg_value(i32 %i_stride, !527, !DIExpression(), !810)
    #dbg_value(i32 0, !528, !DIExpression(), !810)
    #dbg_value(i32 0, !529, !DIExpression(), !812)
    #dbg_value(i32 0, !529, !DIExpression(), !812)
    #dbg_value(i32 0, !528, !DIExpression(), !810)
    #dbg_value(ptr %fenc, !524, !DIExpression(), !810)
    #dbg_value(ptr %pix3, !526, !DIExpression(), !810)
    #dbg_value(i32 0, !529, !DIExpression(), !812)
    #dbg_value(ptr %fenc, !524, !DIExpression(), !810)
    #dbg_value(ptr %pix3, !526, !DIExpression(), !810)
    #dbg_value(i32 0, !531, !DIExpression(), !813)
    #dbg_value(i32 0, !528, !DIExpression(), !810)
    #dbg_value(i64 0, !531, !DIExpression(), !813)
    #dbg_value(i32 0, !528, !DIExpression(), !810)
  %144 = load i8, ptr %fenc, align 1, !dbg !814
  %conv.i205 = zext i8 %144 to i32, !dbg !814
  %145 = load i8, ptr %pix3, align 1, !dbg !814
  %conv7.i206 = zext i8 %145 to i32, !dbg !814
  %sub.i207 = sub nsw i32 %conv.i205, %conv7.i206, !dbg !814
  %146 = tail call i32 @llvm.abs.i32(i32 %sub.i207, i1 true), !dbg !814
    #dbg_value(i32 %146, !528, !DIExpression(), !810)
    #dbg_value(i64 1, !531, !DIExpression(), !813)
  %147 = load i8, ptr %arrayidx.1.i, align 1, !dbg !814
  %conv.1.i209 = zext i8 %147 to i32, !dbg !814
  %arrayidx6.1.i210 = getelementptr inbounds i8, ptr %pix3, i64 1, !dbg !814
  %148 = load i8, ptr %arrayidx6.1.i210, align 1, !dbg !814
  %conv7.1.i211 = zext i8 %148 to i32, !dbg !814
  %sub.1.i212 = sub nsw i32 %conv.1.i209, %conv7.1.i211, !dbg !814
  %149 = tail call i32 @llvm.abs.i32(i32 %sub.1.i212, i1 true), !dbg !814
  %add.1.i213 = add nuw nsw i32 %149, %146, !dbg !814
    #dbg_value(i32 %add.1.i213, !528, !DIExpression(), !810)
    #dbg_value(i64 2, !531, !DIExpression(), !813)
  %150 = load i8, ptr %arrayidx.2.i, align 1, !dbg !814
  %conv.2.i215 = zext i8 %150 to i32, !dbg !814
  %arrayidx6.2.i216 = getelementptr inbounds i8, ptr %pix3, i64 2, !dbg !814
  %151 = load i8, ptr %arrayidx6.2.i216, align 1, !dbg !814
  %conv7.2.i217 = zext i8 %151 to i32, !dbg !814
  %sub.2.i218 = sub nsw i32 %conv.2.i215, %conv7.2.i217, !dbg !814
  %152 = tail call i32 @llvm.abs.i32(i32 %sub.2.i218, i1 true), !dbg !814
  %add.2.i219 = add nuw nsw i32 %add.1.i213, %152, !dbg !814
    #dbg_value(i32 %add.2.i219, !528, !DIExpression(), !810)
    #dbg_value(i64 3, !531, !DIExpression(), !813)
  %153 = load i8, ptr %arrayidx.3.i, align 1, !dbg !814
  %conv.3.i221 = zext i8 %153 to i32, !dbg !814
  %arrayidx6.3.i222 = getelementptr inbounds i8, ptr %pix3, i64 3, !dbg !814
  %154 = load i8, ptr %arrayidx6.3.i222, align 1, !dbg !814
  %conv7.3.i223 = zext i8 %154 to i32, !dbg !814
  %sub.3.i224 = sub nsw i32 %conv.3.i221, %conv7.3.i223, !dbg !814
  %155 = tail call i32 @llvm.abs.i32(i32 %sub.3.i224, i1 true), !dbg !814
  %add.3.i225 = add nuw nsw i32 %add.2.i219, %155, !dbg !814
    #dbg_value(i32 %add.3.i225, !528, !DIExpression(), !810)
    #dbg_value(i64 4, !531, !DIExpression(), !813)
    #dbg_value(ptr %add.ptr.i, !524, !DIExpression(), !810)
  %add.ptr9.i227 = getelementptr inbounds i8, ptr %pix3, i64 %idx.ext8.i, !dbg !815
    #dbg_value(ptr %add.ptr9.i227, !526, !DIExpression(), !810)
    #dbg_value(i32 1, !529, !DIExpression(), !812)
    #dbg_value(i32 0, !531, !DIExpression(), !813)
    #dbg_value(i64 0, !531, !DIExpression(), !813)
    #dbg_value(i32 %add.3.i225, !528, !DIExpression(), !810)
  %156 = load i8, ptr %add.ptr.i, align 1, !dbg !814
  %conv.127.i228 = zext i8 %156 to i32, !dbg !814
  %157 = load i8, ptr %add.ptr9.i227, align 1, !dbg !814
  %conv7.128.i229 = zext i8 %157 to i32, !dbg !814
  %sub.129.i230 = sub nsw i32 %conv.127.i228, %conv7.128.i229, !dbg !814
  %158 = tail call i32 @llvm.abs.i32(i32 %sub.129.i230, i1 true), !dbg !814
  %add.130.i231 = add nuw nsw i32 %add.3.i225, %158, !dbg !814
    #dbg_value(i32 %add.130.i231, !528, !DIExpression(), !810)
    #dbg_value(i64 1, !531, !DIExpression(), !813)
  %159 = load i8, ptr %arrayidx.1.1.i, align 1, !dbg !814
  %conv.1.1.i233 = zext i8 %159 to i32, !dbg !814
  %arrayidx6.1.1.i234 = getelementptr inbounds i8, ptr %add.ptr9.i227, i64 1, !dbg !814
  %160 = load i8, ptr %arrayidx6.1.1.i234, align 1, !dbg !814
  %conv7.1.1.i235 = zext i8 %160 to i32, !dbg !814
  %sub.1.1.i236 = sub nsw i32 %conv.1.1.i233, %conv7.1.1.i235, !dbg !814
  %161 = tail call i32 @llvm.abs.i32(i32 %sub.1.1.i236, i1 true), !dbg !814
  %add.1.1.i237 = add nuw nsw i32 %add.130.i231, %161, !dbg !814
    #dbg_value(i32 %add.1.1.i237, !528, !DIExpression(), !810)
    #dbg_value(i64 2, !531, !DIExpression(), !813)
  %162 = load i8, ptr %arrayidx.2.1.i, align 1, !dbg !814
  %conv.2.1.i239 = zext i8 %162 to i32, !dbg !814
  %arrayidx6.2.1.i240 = getelementptr inbounds i8, ptr %add.ptr9.i227, i64 2, !dbg !814
  %163 = load i8, ptr %arrayidx6.2.1.i240, align 1, !dbg !814
  %conv7.2.1.i241 = zext i8 %163 to i32, !dbg !814
  %sub.2.1.i242 = sub nsw i32 %conv.2.1.i239, %conv7.2.1.i241, !dbg !814
  %164 = tail call i32 @llvm.abs.i32(i32 %sub.2.1.i242, i1 true), !dbg !814
  %add.2.1.i243 = add nuw nsw i32 %add.1.1.i237, %164, !dbg !814
    #dbg_value(i32 %add.2.1.i243, !528, !DIExpression(), !810)
    #dbg_value(i64 3, !531, !DIExpression(), !813)
  %165 = load i8, ptr %arrayidx.3.1.i, align 1, !dbg !814
  %conv.3.1.i245 = zext i8 %165 to i32, !dbg !814
  %arrayidx6.3.1.i246 = getelementptr inbounds i8, ptr %add.ptr9.i227, i64 3, !dbg !814
  %166 = load i8, ptr %arrayidx6.3.1.i246, align 1, !dbg !814
  %conv7.3.1.i247 = zext i8 %166 to i32, !dbg !814
  %sub.3.1.i248 = sub nsw i32 %conv.3.1.i245, %conv7.3.1.i247, !dbg !814
  %167 = tail call i32 @llvm.abs.i32(i32 %sub.3.1.i248, i1 true), !dbg !814
  %add.3.1.i249 = add nuw nsw i32 %add.2.1.i243, %167, !dbg !814
    #dbg_value(i32 %add.3.1.i249, !528, !DIExpression(), !810)
    #dbg_value(i64 4, !531, !DIExpression(), !813)
    #dbg_value(ptr %add.ptr.1.i, !524, !DIExpression(), !810)
  %add.ptr9.1.i251 = getelementptr inbounds i8, ptr %add.ptr9.i227, i64 %idx.ext8.i, !dbg !815
    #dbg_value(ptr %add.ptr9.1.i251, !526, !DIExpression(), !810)
    #dbg_value(i32 2, !529, !DIExpression(), !812)
    #dbg_value(i32 0, !531, !DIExpression(), !813)
    #dbg_value(i64 0, !531, !DIExpression(), !813)
    #dbg_value(i32 %add.3.1.i249, !528, !DIExpression(), !810)
  %168 = load i8, ptr %add.ptr.1.i, align 1, !dbg !814
  %conv.231.i252 = zext i8 %168 to i32, !dbg !814
  %169 = load i8, ptr %add.ptr9.1.i251, align 1, !dbg !814
  %conv7.232.i253 = zext i8 %169 to i32, !dbg !814
  %sub.233.i254 = sub nsw i32 %conv.231.i252, %conv7.232.i253, !dbg !814
  %170 = tail call i32 @llvm.abs.i32(i32 %sub.233.i254, i1 true), !dbg !814
  %add.234.i255 = add nuw nsw i32 %add.3.1.i249, %170, !dbg !814
    #dbg_value(i32 %add.234.i255, !528, !DIExpression(), !810)
    #dbg_value(i64 1, !531, !DIExpression(), !813)
  %171 = load i8, ptr %arrayidx.1.2.i, align 1, !dbg !814
  %conv.1.2.i257 = zext i8 %171 to i32, !dbg !814
  %arrayidx6.1.2.i258 = getelementptr inbounds i8, ptr %add.ptr9.1.i251, i64 1, !dbg !814
  %172 = load i8, ptr %arrayidx6.1.2.i258, align 1, !dbg !814
  %conv7.1.2.i259 = zext i8 %172 to i32, !dbg !814
  %sub.1.2.i260 = sub nsw i32 %conv.1.2.i257, %conv7.1.2.i259, !dbg !814
  %173 = tail call i32 @llvm.abs.i32(i32 %sub.1.2.i260, i1 true), !dbg !814
  %add.1.2.i261 = add nuw nsw i32 %add.234.i255, %173, !dbg !814
    #dbg_value(i32 %add.1.2.i261, !528, !DIExpression(), !810)
    #dbg_value(i64 2, !531, !DIExpression(), !813)
  %174 = load i8, ptr %arrayidx.2.2.i, align 1, !dbg !814
  %conv.2.2.i263 = zext i8 %174 to i32, !dbg !814
  %arrayidx6.2.2.i264 = getelementptr inbounds i8, ptr %add.ptr9.1.i251, i64 2, !dbg !814
  %175 = load i8, ptr %arrayidx6.2.2.i264, align 1, !dbg !814
  %conv7.2.2.i265 = zext i8 %175 to i32, !dbg !814
  %sub.2.2.i266 = sub nsw i32 %conv.2.2.i263, %conv7.2.2.i265, !dbg !814
  %176 = tail call i32 @llvm.abs.i32(i32 %sub.2.2.i266, i1 true), !dbg !814
  %add.2.2.i267 = add nuw nsw i32 %add.1.2.i261, %176, !dbg !814
    #dbg_value(i32 %add.2.2.i267, !528, !DIExpression(), !810)
    #dbg_value(i64 3, !531, !DIExpression(), !813)
  %177 = load i8, ptr %arrayidx.3.2.i, align 1, !dbg !814
  %conv.3.2.i269 = zext i8 %177 to i32, !dbg !814
  %arrayidx6.3.2.i270 = getelementptr inbounds i8, ptr %add.ptr9.1.i251, i64 3, !dbg !814
  %178 = load i8, ptr %arrayidx6.3.2.i270, align 1, !dbg !814
  %conv7.3.2.i271 = zext i8 %178 to i32, !dbg !814
  %sub.3.2.i272 = sub nsw i32 %conv.3.2.i269, %conv7.3.2.i271, !dbg !814
  %179 = tail call i32 @llvm.abs.i32(i32 %sub.3.2.i272, i1 true), !dbg !814
  %add.3.2.i273 = add nuw nsw i32 %add.2.2.i267, %179, !dbg !814
    #dbg_value(i32 %add.3.2.i273, !528, !DIExpression(), !810)
    #dbg_value(i64 4, !531, !DIExpression(), !813)
    #dbg_value(ptr %add.ptr.2.i, !524, !DIExpression(), !810)
  %add.ptr9.2.i275 = getelementptr inbounds i8, ptr %add.ptr9.1.i251, i64 %idx.ext8.i, !dbg !815
    #dbg_value(ptr %add.ptr9.2.i275, !526, !DIExpression(), !810)
    #dbg_value(i32 3, !529, !DIExpression(), !812)
    #dbg_value(i32 0, !531, !DIExpression(), !813)
    #dbg_value(i64 0, !531, !DIExpression(), !813)
    #dbg_value(i32 %add.3.2.i273, !528, !DIExpression(), !810)
  %180 = load i8, ptr %add.ptr.2.i, align 1, !dbg !814
  %conv.335.i276 = zext i8 %180 to i32, !dbg !814
  %181 = load i8, ptr %add.ptr9.2.i275, align 1, !dbg !814
  %conv7.336.i277 = zext i8 %181 to i32, !dbg !814
  %sub.337.i278 = sub nsw i32 %conv.335.i276, %conv7.336.i277, !dbg !814
  %182 = tail call i32 @llvm.abs.i32(i32 %sub.337.i278, i1 true), !dbg !814
  %add.338.i279 = add nuw nsw i32 %add.3.2.i273, %182, !dbg !814
    #dbg_value(i32 %add.338.i279, !528, !DIExpression(), !810)
    #dbg_value(i64 1, !531, !DIExpression(), !813)
  %183 = load i8, ptr %arrayidx.1.3.i, align 1, !dbg !814
  %conv.1.3.i281 = zext i8 %183 to i32, !dbg !814
  %arrayidx6.1.3.i282 = getelementptr inbounds i8, ptr %add.ptr9.2.i275, i64 1, !dbg !814
  %184 = load i8, ptr %arrayidx6.1.3.i282, align 1, !dbg !814
  %conv7.1.3.i283 = zext i8 %184 to i32, !dbg !814
  %sub.1.3.i284 = sub nsw i32 %conv.1.3.i281, %conv7.1.3.i283, !dbg !814
  %185 = tail call i32 @llvm.abs.i32(i32 %sub.1.3.i284, i1 true), !dbg !814
  %add.1.3.i285 = add nuw nsw i32 %add.338.i279, %185, !dbg !814
    #dbg_value(i32 %add.1.3.i285, !528, !DIExpression(), !810)
    #dbg_value(i64 2, !531, !DIExpression(), !813)
  %186 = load i8, ptr %arrayidx.2.3.i, align 1, !dbg !814
  %conv.2.3.i287 = zext i8 %186 to i32, !dbg !814
  %arrayidx6.2.3.i288 = getelementptr inbounds i8, ptr %add.ptr9.2.i275, i64 2, !dbg !814
  %187 = load i8, ptr %arrayidx6.2.3.i288, align 1, !dbg !814
  %conv7.2.3.i289 = zext i8 %187 to i32, !dbg !814
  %sub.2.3.i290 = sub nsw i32 %conv.2.3.i287, %conv7.2.3.i289, !dbg !814
  %188 = tail call i32 @llvm.abs.i32(i32 %sub.2.3.i290, i1 true), !dbg !814
  %add.2.3.i291 = add nuw nsw i32 %add.1.3.i285, %188, !dbg !814
    #dbg_value(i32 %add.2.3.i291, !528, !DIExpression(), !810)
    #dbg_value(i64 3, !531, !DIExpression(), !813)
  %189 = load i8, ptr %arrayidx.3.3.i, align 1, !dbg !814
  %conv.3.3.i293 = zext i8 %189 to i32, !dbg !814
  %arrayidx6.3.3.i294 = getelementptr inbounds i8, ptr %add.ptr9.2.i275, i64 3, !dbg !814
  %190 = load i8, ptr %arrayidx6.3.3.i294, align 1, !dbg !814
  %conv7.3.3.i295 = zext i8 %190 to i32, !dbg !814
  %sub.3.3.i296 = sub nsw i32 %conv.3.3.i293, %conv7.3.3.i295, !dbg !814
  %191 = tail call i32 @llvm.abs.i32(i32 %sub.3.3.i296, i1 true), !dbg !814
  %add.3.3.i297 = add nuw nsw i32 %add.2.3.i291, %191, !dbg !814
    #dbg_value(i32 %add.3.3.i297, !528, !DIExpression(), !810)
    #dbg_value(i64 4, !531, !DIExpression(), !813)
    #dbg_value(!DIArgList(ptr %add.ptr.2.i, i64 16), !524, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !810)
    #dbg_value(!DIArgList(ptr %add.ptr9.2.i275, i64 %idx.ext8.i), !526, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !810)
    #dbg_value(i32 4, !529, !DIExpression(), !812)
  %arrayidx6 = getelementptr inbounds i8, ptr %scores, i64 12, !dbg !797
  store i32 %add.3.3.i297, ptr %arrayidx6, align 4, !dbg !797
  ret void, !dbg !797
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define internal i32 @x264_pixel_ssd_16x16(ptr nocapture noundef readonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2) #4 !dbg !816 {
entry:
    #dbg_value(ptr %pix1, !818, !DIExpression(), !832)
    #dbg_value(i32 %i_stride_pix1, !819, !DIExpression(), !832)
    #dbg_value(ptr %pix2, !820, !DIExpression(), !832)
    #dbg_value(i32 %i_stride_pix2, !821, !DIExpression(), !832)
    #dbg_value(i32 0, !822, !DIExpression(), !832)
    #dbg_value(i32 0, !823, !DIExpression(), !833)
  %idx.ext = sext i32 %i_stride_pix1 to i64
  %idx.ext8 = sext i32 %i_stride_pix2 to i64
    #dbg_value(ptr %pix1, !818, !DIExpression(), !832)
    #dbg_value(i32 0, !823, !DIExpression(), !833)
    #dbg_value(i32 0, !822, !DIExpression(), !832)
    #dbg_value(ptr %pix2, !820, !DIExpression(), !832)
  br label %for.cond1.preheader, !dbg !834

for.cond1.preheader:                              ; preds = %entry, %for.cond1.preheader
  %pix1.addr.026 = phi ptr [ %pix1, %entry ], [ %add.ptr, %for.cond1.preheader ]
  %y.025 = phi i32 [ 0, %entry ], [ %inc11, %for.cond1.preheader ]
  %i_sum.024 = phi i32 [ 0, %entry ], [ %op.rdx, %for.cond1.preheader ]
  %pix2.addr.023 = phi ptr [ %pix2, %entry ], [ %add.ptr9, %for.cond1.preheader ]
    #dbg_value(ptr %pix1.addr.026, !818, !DIExpression(), !832)
    #dbg_value(i32 %y.025, !823, !DIExpression(), !833)
    #dbg_value(i32 %i_sum.024, !822, !DIExpression(), !832)
    #dbg_value(ptr %pix2.addr.023, !820, !DIExpression(), !832)
    #dbg_value(i32 0, !825, !DIExpression(), !835)
    #dbg_value(i32 %i_sum.024, !822, !DIExpression(), !832)
    #dbg_value(i64 0, !825, !DIExpression(), !835)
    #dbg_value(i32 %i_sum.024, !822, !DIExpression(), !832)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !829, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !836)
    #dbg_value(i32 poison, !822, !DIExpression(), !832)
    #dbg_value(i64 1, !825, !DIExpression(), !835)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !829, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !836)
    #dbg_value(i32 poison, !822, !DIExpression(), !832)
    #dbg_value(i64 2, !825, !DIExpression(), !835)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !829, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !836)
    #dbg_value(i32 poison, !822, !DIExpression(), !832)
    #dbg_value(i64 3, !825, !DIExpression(), !835)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !829, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !836)
    #dbg_value(i32 poison, !822, !DIExpression(), !832)
    #dbg_value(i64 4, !825, !DIExpression(), !835)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !829, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !836)
    #dbg_value(i32 poison, !822, !DIExpression(), !832)
    #dbg_value(i64 5, !825, !DIExpression(), !835)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !829, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !836)
    #dbg_value(i32 poison, !822, !DIExpression(), !832)
    #dbg_value(i64 6, !825, !DIExpression(), !835)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !829, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !836)
    #dbg_value(i32 poison, !822, !DIExpression(), !832)
    #dbg_value(i64 7, !825, !DIExpression(), !835)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !829, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !836)
    #dbg_value(i32 poison, !822, !DIExpression(), !832)
    #dbg_value(i64 8, !825, !DIExpression(), !835)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !829, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !836)
    #dbg_value(i32 poison, !822, !DIExpression(), !832)
    #dbg_value(i64 9, !825, !DIExpression(), !835)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !829, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !836)
    #dbg_value(i32 poison, !822, !DIExpression(), !832)
    #dbg_value(i64 10, !825, !DIExpression(), !835)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !829, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !836)
    #dbg_value(i32 poison, !822, !DIExpression(), !832)
    #dbg_value(i64 11, !825, !DIExpression(), !835)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !829, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !836)
    #dbg_value(i32 poison, !822, !DIExpression(), !832)
    #dbg_value(i64 12, !825, !DIExpression(), !835)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !829, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !836)
    #dbg_value(i32 poison, !822, !DIExpression(), !832)
    #dbg_value(i64 13, !825, !DIExpression(), !835)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !829, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !836)
    #dbg_value(i32 poison, !822, !DIExpression(), !832)
    #dbg_value(i64 14, !825, !DIExpression(), !835)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !829, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !836)
    #dbg_value(i32 poison, !822, !DIExpression(), !832)
    #dbg_value(i64 15, !825, !DIExpression(), !835)
  %0 = load <16 x i8>, ptr %pix1.addr.026, align 1, !dbg !837
  %1 = zext <16 x i8> %0 to <16 x i32>, !dbg !837
  %2 = load <16 x i8>, ptr %pix2.addr.023, align 1, !dbg !837
  %3 = zext <16 x i8> %2 to <16 x i32>, !dbg !837
  %4 = sub nsw <16 x i32> %1, %3, !dbg !837
    #dbg_value(!DIArgList(i8 poison, i32 poison), !829, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !836)
  %5 = mul nsw <16 x i32> %4, %4, !dbg !837
  %6 = tail call i32 @llvm.vector.reduce.add.v16i32(<16 x i32> %5), !dbg !837
  %op.rdx = add i32 %6, %i_sum.024, !dbg !837
    #dbg_value(i32 %op.rdx, !822, !DIExpression(), !832)
    #dbg_value(i64 16, !825, !DIExpression(), !835)
  %add.ptr = getelementptr inbounds i8, ptr %pix1.addr.026, i64 %idx.ext, !dbg !838
    #dbg_value(ptr %add.ptr, !818, !DIExpression(), !832)
  %add.ptr9 = getelementptr inbounds i8, ptr %pix2.addr.023, i64 %idx.ext8, !dbg !838
    #dbg_value(ptr %add.ptr9, !820, !DIExpression(), !832)
  %inc11 = add nuw nsw i32 %y.025, 1, !dbg !839
    #dbg_value(i32 %inc11, !823, !DIExpression(), !833)
  %exitcond.not = icmp eq i32 %inc11, 16, !dbg !839
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond1.preheader, !dbg !834, !llvm.loop !840

for.cond.cleanup:                                 ; preds = %for.cond1.preheader
  ret i32 %op.rdx, !dbg !841
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define internal i32 @x264_pixel_ssd_16x8(ptr nocapture noundef readonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2) #4 !dbg !842 {
entry:
    #dbg_value(ptr %pix1, !844, !DIExpression(), !858)
    #dbg_value(i32 %i_stride_pix1, !845, !DIExpression(), !858)
    #dbg_value(ptr %pix2, !846, !DIExpression(), !858)
    #dbg_value(i32 %i_stride_pix2, !847, !DIExpression(), !858)
    #dbg_value(i32 0, !848, !DIExpression(), !858)
    #dbg_value(i32 0, !849, !DIExpression(), !859)
  %idx.ext = sext i32 %i_stride_pix1 to i64
  %idx.ext8 = sext i32 %i_stride_pix2 to i64
    #dbg_value(ptr %pix1, !844, !DIExpression(), !858)
    #dbg_value(i32 0, !849, !DIExpression(), !859)
    #dbg_value(i32 0, !848, !DIExpression(), !858)
    #dbg_value(ptr %pix2, !846, !DIExpression(), !858)
  br label %for.cond1.preheader, !dbg !860

for.cond1.preheader:                              ; preds = %entry, %for.cond1.preheader
  %pix1.addr.026 = phi ptr [ %pix1, %entry ], [ %add.ptr, %for.cond1.preheader ]
  %y.025 = phi i32 [ 0, %entry ], [ %inc11, %for.cond1.preheader ]
  %i_sum.024 = phi i32 [ 0, %entry ], [ %op.rdx, %for.cond1.preheader ]
  %pix2.addr.023 = phi ptr [ %pix2, %entry ], [ %add.ptr9, %for.cond1.preheader ]
    #dbg_value(ptr %pix1.addr.026, !844, !DIExpression(), !858)
    #dbg_value(i32 %y.025, !849, !DIExpression(), !859)
    #dbg_value(i32 %i_sum.024, !848, !DIExpression(), !858)
    #dbg_value(ptr %pix2.addr.023, !846, !DIExpression(), !858)
    #dbg_value(i32 0, !851, !DIExpression(), !861)
    #dbg_value(i32 %i_sum.024, !848, !DIExpression(), !858)
    #dbg_value(i64 0, !851, !DIExpression(), !861)
    #dbg_value(i32 %i_sum.024, !848, !DIExpression(), !858)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !855, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !862)
    #dbg_value(i32 poison, !848, !DIExpression(), !858)
    #dbg_value(i64 1, !851, !DIExpression(), !861)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !855, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !862)
    #dbg_value(i32 poison, !848, !DIExpression(), !858)
    #dbg_value(i64 2, !851, !DIExpression(), !861)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !855, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !862)
    #dbg_value(i32 poison, !848, !DIExpression(), !858)
    #dbg_value(i64 3, !851, !DIExpression(), !861)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !855, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !862)
    #dbg_value(i32 poison, !848, !DIExpression(), !858)
    #dbg_value(i64 4, !851, !DIExpression(), !861)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !855, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !862)
    #dbg_value(i32 poison, !848, !DIExpression(), !858)
    #dbg_value(i64 5, !851, !DIExpression(), !861)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !855, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !862)
    #dbg_value(i32 poison, !848, !DIExpression(), !858)
    #dbg_value(i64 6, !851, !DIExpression(), !861)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !855, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !862)
    #dbg_value(i32 poison, !848, !DIExpression(), !858)
    #dbg_value(i64 7, !851, !DIExpression(), !861)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !855, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !862)
    #dbg_value(i32 poison, !848, !DIExpression(), !858)
    #dbg_value(i64 8, !851, !DIExpression(), !861)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !855, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !862)
    #dbg_value(i32 poison, !848, !DIExpression(), !858)
    #dbg_value(i64 9, !851, !DIExpression(), !861)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !855, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !862)
    #dbg_value(i32 poison, !848, !DIExpression(), !858)
    #dbg_value(i64 10, !851, !DIExpression(), !861)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !855, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !862)
    #dbg_value(i32 poison, !848, !DIExpression(), !858)
    #dbg_value(i64 11, !851, !DIExpression(), !861)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !855, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !862)
    #dbg_value(i32 poison, !848, !DIExpression(), !858)
    #dbg_value(i64 12, !851, !DIExpression(), !861)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !855, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !862)
    #dbg_value(i32 poison, !848, !DIExpression(), !858)
    #dbg_value(i64 13, !851, !DIExpression(), !861)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !855, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !862)
    #dbg_value(i32 poison, !848, !DIExpression(), !858)
    #dbg_value(i64 14, !851, !DIExpression(), !861)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !855, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !862)
    #dbg_value(i32 poison, !848, !DIExpression(), !858)
    #dbg_value(i64 15, !851, !DIExpression(), !861)
  %0 = load <16 x i8>, ptr %pix1.addr.026, align 1, !dbg !863
  %1 = zext <16 x i8> %0 to <16 x i32>, !dbg !863
  %2 = load <16 x i8>, ptr %pix2.addr.023, align 1, !dbg !863
  %3 = zext <16 x i8> %2 to <16 x i32>, !dbg !863
  %4 = sub nsw <16 x i32> %1, %3, !dbg !863
    #dbg_value(!DIArgList(i8 poison, i32 poison), !855, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !862)
  %5 = mul nsw <16 x i32> %4, %4, !dbg !863
  %6 = tail call i32 @llvm.vector.reduce.add.v16i32(<16 x i32> %5), !dbg !863
  %op.rdx = add i32 %6, %i_sum.024, !dbg !863
    #dbg_value(i32 %op.rdx, !848, !DIExpression(), !858)
    #dbg_value(i64 16, !851, !DIExpression(), !861)
  %add.ptr = getelementptr inbounds i8, ptr %pix1.addr.026, i64 %idx.ext, !dbg !864
    #dbg_value(ptr %add.ptr, !844, !DIExpression(), !858)
  %add.ptr9 = getelementptr inbounds i8, ptr %pix2.addr.023, i64 %idx.ext8, !dbg !864
    #dbg_value(ptr %add.ptr9, !846, !DIExpression(), !858)
  %inc11 = add nuw nsw i32 %y.025, 1, !dbg !865
    #dbg_value(i32 %inc11, !849, !DIExpression(), !859)
  %exitcond.not = icmp eq i32 %inc11, 8, !dbg !865
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond1.preheader, !dbg !860, !llvm.loop !866

for.cond.cleanup:                                 ; preds = %for.cond1.preheader
  ret i32 %op.rdx, !dbg !867
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define internal i32 @x264_pixel_ssd_8x16(ptr nocapture noundef readonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2) #4 !dbg !868 {
entry:
    #dbg_value(ptr %pix1, !870, !DIExpression(), !884)
    #dbg_value(i32 %i_stride_pix1, !871, !DIExpression(), !884)
    #dbg_value(ptr %pix2, !872, !DIExpression(), !884)
    #dbg_value(i32 %i_stride_pix2, !873, !DIExpression(), !884)
    #dbg_value(i32 0, !874, !DIExpression(), !884)
    #dbg_value(i32 0, !875, !DIExpression(), !885)
  %idx.ext = sext i32 %i_stride_pix1 to i64
  %idx.ext8 = sext i32 %i_stride_pix2 to i64
    #dbg_value(ptr %pix1, !870, !DIExpression(), !884)
    #dbg_value(i32 0, !875, !DIExpression(), !885)
    #dbg_value(i32 0, !874, !DIExpression(), !884)
    #dbg_value(ptr %pix2, !872, !DIExpression(), !884)
  br label %for.cond1.preheader, !dbg !886

for.cond1.preheader:                              ; preds = %entry, %for.cond1.preheader
  %pix1.addr.026 = phi ptr [ %pix1, %entry ], [ %add.ptr, %for.cond1.preheader ]
  %y.025 = phi i32 [ 0, %entry ], [ %inc11, %for.cond1.preheader ]
  %i_sum.024 = phi i32 [ 0, %entry ], [ %op.rdx, %for.cond1.preheader ]
  %pix2.addr.023 = phi ptr [ %pix2, %entry ], [ %add.ptr9, %for.cond1.preheader ]
    #dbg_value(ptr %pix1.addr.026, !870, !DIExpression(), !884)
    #dbg_value(i32 %y.025, !875, !DIExpression(), !885)
    #dbg_value(i32 %i_sum.024, !874, !DIExpression(), !884)
    #dbg_value(ptr %pix2.addr.023, !872, !DIExpression(), !884)
    #dbg_value(i32 0, !877, !DIExpression(), !887)
    #dbg_value(i32 %i_sum.024, !874, !DIExpression(), !884)
    #dbg_value(i64 0, !877, !DIExpression(), !887)
    #dbg_value(i32 %i_sum.024, !874, !DIExpression(), !884)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !881, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !888)
    #dbg_value(i32 poison, !874, !DIExpression(), !884)
    #dbg_value(i64 1, !877, !DIExpression(), !887)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !881, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !888)
    #dbg_value(i32 poison, !874, !DIExpression(), !884)
    #dbg_value(i64 2, !877, !DIExpression(), !887)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !881, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !888)
    #dbg_value(i32 poison, !874, !DIExpression(), !884)
    #dbg_value(i64 3, !877, !DIExpression(), !887)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !881, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !888)
    #dbg_value(i32 poison, !874, !DIExpression(), !884)
    #dbg_value(i64 4, !877, !DIExpression(), !887)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !881, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !888)
    #dbg_value(i32 poison, !874, !DIExpression(), !884)
    #dbg_value(i64 5, !877, !DIExpression(), !887)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !881, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !888)
    #dbg_value(i32 poison, !874, !DIExpression(), !884)
    #dbg_value(i64 6, !877, !DIExpression(), !887)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !881, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !888)
    #dbg_value(i32 poison, !874, !DIExpression(), !884)
    #dbg_value(i64 7, !877, !DIExpression(), !887)
  %0 = load <8 x i8>, ptr %pix1.addr.026, align 1, !dbg !889
  %1 = zext <8 x i8> %0 to <8 x i32>, !dbg !889
  %2 = load <8 x i8>, ptr %pix2.addr.023, align 1, !dbg !889
  %3 = zext <8 x i8> %2 to <8 x i32>, !dbg !889
  %4 = sub nsw <8 x i32> %1, %3, !dbg !889
    #dbg_value(!DIArgList(i8 poison, i32 poison), !881, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !888)
  %5 = mul nsw <8 x i32> %4, %4, !dbg !889
  %6 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %5), !dbg !889
  %op.rdx = add i32 %6, %i_sum.024, !dbg !889
    #dbg_value(i32 %op.rdx, !874, !DIExpression(), !884)
    #dbg_value(i64 8, !877, !DIExpression(), !887)
  %add.ptr = getelementptr inbounds i8, ptr %pix1.addr.026, i64 %idx.ext, !dbg !890
    #dbg_value(ptr %add.ptr, !870, !DIExpression(), !884)
  %add.ptr9 = getelementptr inbounds i8, ptr %pix2.addr.023, i64 %idx.ext8, !dbg !890
    #dbg_value(ptr %add.ptr9, !872, !DIExpression(), !884)
  %inc11 = add nuw nsw i32 %y.025, 1, !dbg !891
    #dbg_value(i32 %inc11, !875, !DIExpression(), !885)
  %exitcond.not = icmp eq i32 %inc11, 16, !dbg !891
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond1.preheader, !dbg !886, !llvm.loop !892

for.cond.cleanup:                                 ; preds = %for.cond1.preheader
  ret i32 %op.rdx, !dbg !893
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define internal i32 @x264_pixel_ssd_8x8(ptr nocapture noundef readonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2) #4 !dbg !894 {
entry:
    #dbg_value(ptr %pix1, !896, !DIExpression(), !910)
    #dbg_value(i32 %i_stride_pix1, !897, !DIExpression(), !910)
    #dbg_value(ptr %pix2, !898, !DIExpression(), !910)
    #dbg_value(i32 %i_stride_pix2, !899, !DIExpression(), !910)
    #dbg_value(i32 0, !900, !DIExpression(), !910)
    #dbg_value(i32 0, !901, !DIExpression(), !911)
    #dbg_value(ptr %pix1, !896, !DIExpression(), !910)
    #dbg_value(i32 0, !901, !DIExpression(), !911)
    #dbg_value(i32 0, !900, !DIExpression(), !910)
    #dbg_value(ptr %pix2, !898, !DIExpression(), !910)
  %idx.ext8 = sext i32 %i_stride_pix2 to i64
  %idx.ext = sext i32 %i_stride_pix1 to i64
    #dbg_value(ptr %pix1, !896, !DIExpression(), !910)
    #dbg_value(i32 0, !901, !DIExpression(), !911)
    #dbg_value(ptr %pix2, !898, !DIExpression(), !910)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !907, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !912)
    #dbg_value(i32 poison, !900, !DIExpression(), !910)
    #dbg_value(i64 7, !903, !DIExpression(), !913)
  %0 = load <8 x i8>, ptr %pix1, align 1, !dbg !914
  %1 = zext <8 x i8> %0 to <8 x i32>, !dbg !914
  %2 = load <8 x i8>, ptr %pix2, align 1, !dbg !914
  %3 = zext <8 x i8> %2 to <8 x i32>, !dbg !914
  %4 = sub nsw <8 x i32> %1, %3, !dbg !914
  %5 = mul nsw <8 x i32> %4, %4, !dbg !914
  %6 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %5), !dbg !914
    #dbg_value(i32 %6, !900, !DIExpression(), !910)
    #dbg_value(i64 8, !903, !DIExpression(), !913)
  %add.ptr = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext, !dbg !915
    #dbg_value(ptr %add.ptr, !896, !DIExpression(), !910)
  %add.ptr9 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext8, !dbg !915
    #dbg_value(ptr %add.ptr9, !898, !DIExpression(), !910)
    #dbg_value(i32 1, !901, !DIExpression(), !911)
    #dbg_value(i32 poison, !900, !DIExpression(), !910)
    #dbg_value(i64 7, !903, !DIExpression(), !913)
  %7 = load <8 x i8>, ptr %add.ptr, align 1, !dbg !914
  %8 = zext <8 x i8> %7 to <8 x i32>, !dbg !914
  %9 = load <8 x i8>, ptr %add.ptr9, align 1, !dbg !914
  %10 = zext <8 x i8> %9 to <8 x i32>, !dbg !914
  %11 = sub nsw <8 x i32> %8, %10, !dbg !914
  %12 = mul nsw <8 x i32> %11, %11, !dbg !914
  %13 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %12), !dbg !914
  %op.rdx.1 = add i32 %13, %6, !dbg !914
    #dbg_value(i32 %op.rdx.1, !900, !DIExpression(), !910)
    #dbg_value(i64 8, !903, !DIExpression(), !913)
  %add.ptr.1 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.ext, !dbg !915
    #dbg_value(ptr %add.ptr.1, !896, !DIExpression(), !910)
  %add.ptr9.1 = getelementptr inbounds i8, ptr %add.ptr9, i64 %idx.ext8, !dbg !915
    #dbg_value(ptr %add.ptr9.1, !898, !DIExpression(), !910)
    #dbg_value(i32 2, !901, !DIExpression(), !911)
    #dbg_value(i32 poison, !900, !DIExpression(), !910)
    #dbg_value(i64 7, !903, !DIExpression(), !913)
  %14 = load <8 x i8>, ptr %add.ptr.1, align 1, !dbg !914
  %15 = zext <8 x i8> %14 to <8 x i32>, !dbg !914
  %16 = load <8 x i8>, ptr %add.ptr9.1, align 1, !dbg !914
  %17 = zext <8 x i8> %16 to <8 x i32>, !dbg !914
  %18 = sub nsw <8 x i32> %15, %17, !dbg !914
  %19 = mul nsw <8 x i32> %18, %18, !dbg !914
  %20 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %19), !dbg !914
  %op.rdx.2 = add i32 %20, %op.rdx.1, !dbg !914
    #dbg_value(i32 %op.rdx.2, !900, !DIExpression(), !910)
    #dbg_value(i64 8, !903, !DIExpression(), !913)
  %add.ptr.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 %idx.ext, !dbg !915
    #dbg_value(ptr %add.ptr.2, !896, !DIExpression(), !910)
  %add.ptr9.2 = getelementptr inbounds i8, ptr %add.ptr9.1, i64 %idx.ext8, !dbg !915
    #dbg_value(ptr %add.ptr9.2, !898, !DIExpression(), !910)
    #dbg_value(i32 3, !901, !DIExpression(), !911)
    #dbg_value(i32 poison, !900, !DIExpression(), !910)
    #dbg_value(i64 7, !903, !DIExpression(), !913)
  %21 = load <8 x i8>, ptr %add.ptr.2, align 1, !dbg !914
  %22 = zext <8 x i8> %21 to <8 x i32>, !dbg !914
  %23 = load <8 x i8>, ptr %add.ptr9.2, align 1, !dbg !914
  %24 = zext <8 x i8> %23 to <8 x i32>, !dbg !914
  %25 = sub nsw <8 x i32> %22, %24, !dbg !914
  %26 = mul nsw <8 x i32> %25, %25, !dbg !914
  %27 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %26), !dbg !914
  %op.rdx.3 = add i32 %27, %op.rdx.2, !dbg !914
    #dbg_value(i32 %op.rdx.3, !900, !DIExpression(), !910)
    #dbg_value(i64 8, !903, !DIExpression(), !913)
  %add.ptr.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 %idx.ext, !dbg !915
    #dbg_value(ptr %add.ptr.3, !896, !DIExpression(), !910)
  %add.ptr9.3 = getelementptr inbounds i8, ptr %add.ptr9.2, i64 %idx.ext8, !dbg !915
    #dbg_value(ptr %add.ptr9.3, !898, !DIExpression(), !910)
    #dbg_value(i32 4, !901, !DIExpression(), !911)
    #dbg_value(i32 poison, !900, !DIExpression(), !910)
    #dbg_value(i64 7, !903, !DIExpression(), !913)
  %28 = load <8 x i8>, ptr %add.ptr.3, align 1, !dbg !914
  %29 = zext <8 x i8> %28 to <8 x i32>, !dbg !914
  %30 = load <8 x i8>, ptr %add.ptr9.3, align 1, !dbg !914
  %31 = zext <8 x i8> %30 to <8 x i32>, !dbg !914
  %32 = sub nsw <8 x i32> %29, %31, !dbg !914
  %33 = mul nsw <8 x i32> %32, %32, !dbg !914
  %34 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %33), !dbg !914
  %op.rdx.4 = add i32 %34, %op.rdx.3, !dbg !914
    #dbg_value(i32 %op.rdx.4, !900, !DIExpression(), !910)
    #dbg_value(i64 8, !903, !DIExpression(), !913)
  %add.ptr.4 = getelementptr inbounds i8, ptr %add.ptr.3, i64 %idx.ext, !dbg !915
    #dbg_value(ptr %add.ptr.4, !896, !DIExpression(), !910)
  %add.ptr9.4 = getelementptr inbounds i8, ptr %add.ptr9.3, i64 %idx.ext8, !dbg !915
    #dbg_value(ptr %add.ptr9.4, !898, !DIExpression(), !910)
    #dbg_value(i32 5, !901, !DIExpression(), !911)
    #dbg_value(i32 poison, !900, !DIExpression(), !910)
    #dbg_value(i64 7, !903, !DIExpression(), !913)
  %35 = load <8 x i8>, ptr %add.ptr.4, align 1, !dbg !914
  %36 = zext <8 x i8> %35 to <8 x i32>, !dbg !914
  %37 = load <8 x i8>, ptr %add.ptr9.4, align 1, !dbg !914
  %38 = zext <8 x i8> %37 to <8 x i32>, !dbg !914
  %39 = sub nsw <8 x i32> %36, %38, !dbg !914
  %40 = mul nsw <8 x i32> %39, %39, !dbg !914
  %41 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %40), !dbg !914
  %op.rdx.5 = add i32 %41, %op.rdx.4, !dbg !914
    #dbg_value(i32 %op.rdx.5, !900, !DIExpression(), !910)
    #dbg_value(i64 8, !903, !DIExpression(), !913)
  %add.ptr.5 = getelementptr inbounds i8, ptr %add.ptr.4, i64 %idx.ext, !dbg !915
    #dbg_value(ptr %add.ptr.5, !896, !DIExpression(), !910)
  %add.ptr9.5 = getelementptr inbounds i8, ptr %add.ptr9.4, i64 %idx.ext8, !dbg !915
    #dbg_value(ptr %add.ptr9.5, !898, !DIExpression(), !910)
    #dbg_value(i32 6, !901, !DIExpression(), !911)
    #dbg_value(i32 poison, !900, !DIExpression(), !910)
    #dbg_value(i64 7, !903, !DIExpression(), !913)
  %42 = load <8 x i8>, ptr %add.ptr.5, align 1, !dbg !914
  %43 = zext <8 x i8> %42 to <8 x i32>, !dbg !914
  %44 = load <8 x i8>, ptr %add.ptr9.5, align 1, !dbg !914
  %45 = zext <8 x i8> %44 to <8 x i32>, !dbg !914
  %46 = sub nsw <8 x i32> %43, %45, !dbg !914
  %47 = mul nsw <8 x i32> %46, %46, !dbg !914
  %48 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %47), !dbg !914
  %op.rdx.6 = add i32 %48, %op.rdx.5, !dbg !914
    #dbg_value(i32 %op.rdx.6, !900, !DIExpression(), !910)
    #dbg_value(i64 8, !903, !DIExpression(), !913)
  %add.ptr.6 = getelementptr inbounds i8, ptr %add.ptr.5, i64 %idx.ext, !dbg !915
    #dbg_value(ptr %add.ptr.6, !896, !DIExpression(), !910)
  %add.ptr9.6 = getelementptr inbounds i8, ptr %add.ptr9.5, i64 %idx.ext8, !dbg !915
    #dbg_value(ptr %add.ptr9.6, !898, !DIExpression(), !910)
    #dbg_value(i32 7, !901, !DIExpression(), !911)
    #dbg_value(i32 poison, !900, !DIExpression(), !910)
    #dbg_value(i64 7, !903, !DIExpression(), !913)
  %49 = load <8 x i8>, ptr %add.ptr.6, align 1, !dbg !914
  %50 = zext <8 x i8> %49 to <8 x i32>, !dbg !914
  %51 = load <8 x i8>, ptr %add.ptr9.6, align 1, !dbg !914
  %52 = zext <8 x i8> %51 to <8 x i32>, !dbg !914
  %53 = sub nsw <8 x i32> %50, %52, !dbg !914
  %54 = mul nsw <8 x i32> %53, %53, !dbg !914
  %55 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %54), !dbg !914
  %op.rdx.7 = add i32 %55, %op.rdx.6, !dbg !914
    #dbg_value(i32 %op.rdx.7, !900, !DIExpression(), !910)
    #dbg_value(i64 8, !903, !DIExpression(), !913)
    #dbg_value(!DIArgList(ptr %add.ptr.6, i64 %idx.ext), !896, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !910)
    #dbg_value(!DIArgList(ptr %add.ptr9.6, i64 %idx.ext8), !898, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !910)
    #dbg_value(i32 8, !901, !DIExpression(), !911)
  ret i32 %op.rdx.7, !dbg !916
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define internal i32 @x264_pixel_ssd_8x4(ptr nocapture noundef readonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2) #5 !dbg !917 {
entry:
    #dbg_value(ptr %pix1, !919, !DIExpression(), !933)
    #dbg_value(i32 %i_stride_pix1, !920, !DIExpression(), !933)
    #dbg_value(ptr %pix2, !921, !DIExpression(), !933)
    #dbg_value(i32 %i_stride_pix2, !922, !DIExpression(), !933)
    #dbg_value(i32 0, !923, !DIExpression(), !933)
    #dbg_value(i32 0, !924, !DIExpression(), !934)
  %idx.ext = sext i32 %i_stride_pix1 to i64
  %idx.ext8 = sext i32 %i_stride_pix2 to i64
    #dbg_value(ptr %pix1, !919, !DIExpression(), !933)
    #dbg_value(i32 0, !924, !DIExpression(), !934)
    #dbg_value(i32 0, !923, !DIExpression(), !933)
    #dbg_value(ptr %pix2, !921, !DIExpression(), !933)
    #dbg_value(ptr %pix1, !919, !DIExpression(), !933)
    #dbg_value(i32 0, !924, !DIExpression(), !934)
    #dbg_value(ptr %pix2, !921, !DIExpression(), !933)
    #dbg_value(i32 0, !926, !DIExpression(), !935)
    #dbg_value(i32 0, !923, !DIExpression(), !933)
    #dbg_value(i64 0, !926, !DIExpression(), !935)
    #dbg_value(i32 0, !923, !DIExpression(), !933)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(!DIArgList(i8 poison, i8 poison, i32 poison, i32 poison), !923, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 3, DW_OP_minus, DW_OP_mul, DW_OP_stack_value), !933)
    #dbg_value(i64 1, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 2, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 3, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 4, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 5, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 6, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 7, !926, !DIExpression(), !935)
  %0 = load <8 x i8>, ptr %pix1, align 1, !dbg !937
  %1 = zext <8 x i8> %0 to <8 x i32>, !dbg !937
  %2 = load <8 x i8>, ptr %pix2, align 1, !dbg !937
  %3 = zext <8 x i8> %2 to <8 x i32>, !dbg !937
  %4 = sub nsw <8 x i32> %1, %3, !dbg !937
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
  %5 = mul nsw <8 x i32> %4, %4, !dbg !937
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 8, !926, !DIExpression(), !935)
  %add.ptr = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext, !dbg !938
    #dbg_value(ptr %add.ptr, !919, !DIExpression(), !933)
  %add.ptr9 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext8, !dbg !938
    #dbg_value(ptr %add.ptr9, !921, !DIExpression(), !933)
    #dbg_value(i32 1, !924, !DIExpression(), !934)
    #dbg_value(i32 0, !926, !DIExpression(), !935)
    #dbg_value(i64 0, !926, !DIExpression(), !935)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 1, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 2, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 3, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 4, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 5, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 6, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 7, !926, !DIExpression(), !935)
  %6 = load <8 x i8>, ptr %add.ptr, align 1, !dbg !937
  %7 = zext <8 x i8> %6 to <8 x i32>, !dbg !937
  %8 = load <8 x i8>, ptr %add.ptr9, align 1, !dbg !937
  %9 = zext <8 x i8> %8 to <8 x i32>, !dbg !937
  %10 = sub nsw <8 x i32> %7, %9, !dbg !937
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
  %11 = mul nsw <8 x i32> %10, %10, !dbg !937
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 8, !926, !DIExpression(), !935)
  %add.ptr.1 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.ext, !dbg !938
    #dbg_value(ptr %add.ptr.1, !919, !DIExpression(), !933)
  %add.ptr9.1 = getelementptr inbounds i8, ptr %add.ptr9, i64 %idx.ext8, !dbg !938
    #dbg_value(ptr %add.ptr9.1, !921, !DIExpression(), !933)
    #dbg_value(i32 2, !924, !DIExpression(), !934)
    #dbg_value(i32 0, !926, !DIExpression(), !935)
    #dbg_value(i64 0, !926, !DIExpression(), !935)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 1, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 2, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 3, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 4, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 5, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 6, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 7, !926, !DIExpression(), !935)
  %12 = load <8 x i8>, ptr %add.ptr.1, align 1, !dbg !937
  %13 = zext <8 x i8> %12 to <8 x i32>, !dbg !937
  %14 = load <8 x i8>, ptr %add.ptr9.1, align 1, !dbg !937
  %15 = zext <8 x i8> %14 to <8 x i32>, !dbg !937
  %16 = sub nsw <8 x i32> %13, %15, !dbg !937
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
  %17 = mul nsw <8 x i32> %16, %16, !dbg !937
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 8, !926, !DIExpression(), !935)
  %add.ptr.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 %idx.ext, !dbg !938
    #dbg_value(ptr %add.ptr.2, !919, !DIExpression(), !933)
  %add.ptr9.2 = getelementptr inbounds i8, ptr %add.ptr9.1, i64 %idx.ext8, !dbg !938
    #dbg_value(ptr %add.ptr9.2, !921, !DIExpression(), !933)
    #dbg_value(i32 3, !924, !DIExpression(), !934)
    #dbg_value(i32 0, !926, !DIExpression(), !935)
    #dbg_value(i64 0, !926, !DIExpression(), !935)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 1, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 2, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 3, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 4, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 5, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 6, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
    #dbg_value(i32 poison, !923, !DIExpression(), !933)
    #dbg_value(i64 7, !926, !DIExpression(), !935)
  %18 = load <8 x i8>, ptr %add.ptr.2, align 1, !dbg !937
  %19 = zext <8 x i8> %18 to <8 x i32>, !dbg !937
  %20 = load <8 x i8>, ptr %add.ptr9.2, align 1, !dbg !937
  %21 = zext <8 x i8> %20 to <8 x i32>, !dbg !937
  %22 = sub nsw <8 x i32> %19, %21, !dbg !937
    #dbg_value(!DIArgList(i8 poison, i32 poison), !930, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !936)
  %23 = mul nsw <8 x i32> %22, %22, !dbg !937
  %24 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %5), !dbg !937
  %25 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %11), !dbg !937
  %op.rdx = add i32 %24, %25, !dbg !937
  %26 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %17), !dbg !937
  %op.rdx43 = add i32 %op.rdx, %26, !dbg !937
  %27 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %23), !dbg !937
  %op.rdx44 = add i32 %op.rdx43, %27, !dbg !937
    #dbg_value(i32 %op.rdx44, !923, !DIExpression(), !933)
    #dbg_value(i64 8, !926, !DIExpression(), !935)
    #dbg_value(!DIArgList(ptr %add.ptr.2, i64 %idx.ext), !919, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !933)
    #dbg_value(!DIArgList(ptr %add.ptr9.2, i64 %idx.ext8), !921, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !933)
    #dbg_value(i32 4, !924, !DIExpression(), !934)
  ret i32 %op.rdx44, !dbg !939
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @x264_pixel_ssd_4x8(ptr nocapture noundef readonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2) #6 !dbg !940 {
entry:
    #dbg_value(ptr %pix1, !942, !DIExpression(), !956)
    #dbg_value(i32 %i_stride_pix1, !943, !DIExpression(), !956)
    #dbg_value(ptr %pix2, !944, !DIExpression(), !956)
    #dbg_value(i32 %i_stride_pix2, !945, !DIExpression(), !956)
    #dbg_value(i32 0, !946, !DIExpression(), !956)
    #dbg_value(i32 0, !947, !DIExpression(), !957)
  %idx.ext = sext i32 %i_stride_pix1 to i64
  %idx.ext8 = sext i32 %i_stride_pix2 to i64
    #dbg_value(ptr %pix1, !942, !DIExpression(), !956)
    #dbg_value(i32 0, !947, !DIExpression(), !957)
    #dbg_value(i32 0, !946, !DIExpression(), !956)
    #dbg_value(ptr %pix2, !944, !DIExpression(), !956)
    #dbg_value(ptr %pix1, !942, !DIExpression(), !956)
    #dbg_value(i32 0, !947, !DIExpression(), !957)
    #dbg_value(ptr %pix2, !944, !DIExpression(), !956)
    #dbg_value(i32 0, !949, !DIExpression(), !958)
    #dbg_value(i32 0, !946, !DIExpression(), !956)
    #dbg_value(i64 0, !949, !DIExpression(), !958)
    #dbg_value(i32 0, !946, !DIExpression(), !956)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(!DIArgList(i8 poison, i8 poison, i32 poison, i32 poison), !946, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 3, DW_OP_minus, DW_OP_mul, DW_OP_stack_value), !956)
    #dbg_value(i64 1, !949, !DIExpression(), !958)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 2, !949, !DIExpression(), !958)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 3, !949, !DIExpression(), !958)
  %0 = load <4 x i8>, ptr %pix1, align 1, !dbg !960
  %1 = zext <4 x i8> %0 to <4 x i32>, !dbg !960
  %2 = load <4 x i8>, ptr %pix2, align 1, !dbg !960
  %3 = zext <4 x i8> %2 to <4 x i32>, !dbg !960
  %4 = sub nsw <4 x i32> %1, %3, !dbg !960
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
  %5 = mul nsw <4 x i32> %4, %4, !dbg !960
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 4, !949, !DIExpression(), !958)
  %add.ptr = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext, !dbg !961
    #dbg_value(ptr %add.ptr, !942, !DIExpression(), !956)
  %add.ptr9 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext8, !dbg !961
    #dbg_value(ptr %add.ptr9, !944, !DIExpression(), !956)
    #dbg_value(i32 1, !947, !DIExpression(), !957)
    #dbg_value(i32 0, !949, !DIExpression(), !958)
    #dbg_value(i64 0, !949, !DIExpression(), !958)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 1, !949, !DIExpression(), !958)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 2, !949, !DIExpression(), !958)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 3, !949, !DIExpression(), !958)
  %6 = load <4 x i8>, ptr %add.ptr, align 1, !dbg !960
  %7 = zext <4 x i8> %6 to <4 x i32>, !dbg !960
  %8 = load <4 x i8>, ptr %add.ptr9, align 1, !dbg !960
  %9 = zext <4 x i8> %8 to <4 x i32>, !dbg !960
  %10 = sub nsw <4 x i32> %7, %9, !dbg !960
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
  %11 = mul nsw <4 x i32> %10, %10, !dbg !960
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 4, !949, !DIExpression(), !958)
  %add.ptr.1 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.ext, !dbg !961
    #dbg_value(ptr %add.ptr.1, !942, !DIExpression(), !956)
  %add.ptr9.1 = getelementptr inbounds i8, ptr %add.ptr9, i64 %idx.ext8, !dbg !961
    #dbg_value(ptr %add.ptr9.1, !944, !DIExpression(), !956)
    #dbg_value(i32 2, !947, !DIExpression(), !957)
    #dbg_value(i32 0, !949, !DIExpression(), !958)
    #dbg_value(i64 0, !949, !DIExpression(), !958)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 1, !949, !DIExpression(), !958)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 2, !949, !DIExpression(), !958)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 3, !949, !DIExpression(), !958)
  %12 = load <4 x i8>, ptr %add.ptr.1, align 1, !dbg !960
  %13 = zext <4 x i8> %12 to <4 x i32>, !dbg !960
  %14 = load <4 x i8>, ptr %add.ptr9.1, align 1, !dbg !960
  %15 = zext <4 x i8> %14 to <4 x i32>, !dbg !960
  %16 = sub nsw <4 x i32> %13, %15, !dbg !960
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
  %17 = mul nsw <4 x i32> %16, %16, !dbg !960
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 4, !949, !DIExpression(), !958)
  %add.ptr.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 %idx.ext, !dbg !961
    #dbg_value(ptr %add.ptr.2, !942, !DIExpression(), !956)
  %add.ptr9.2 = getelementptr inbounds i8, ptr %add.ptr9.1, i64 %idx.ext8, !dbg !961
    #dbg_value(ptr %add.ptr9.2, !944, !DIExpression(), !956)
    #dbg_value(i32 3, !947, !DIExpression(), !957)
    #dbg_value(i32 0, !949, !DIExpression(), !958)
    #dbg_value(i64 0, !949, !DIExpression(), !958)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 1, !949, !DIExpression(), !958)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 2, !949, !DIExpression(), !958)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 3, !949, !DIExpression(), !958)
  %18 = load <4 x i8>, ptr %add.ptr.2, align 1, !dbg !960
  %19 = zext <4 x i8> %18 to <4 x i32>, !dbg !960
  %20 = load <4 x i8>, ptr %add.ptr9.2, align 1, !dbg !960
  %21 = zext <4 x i8> %20 to <4 x i32>, !dbg !960
  %22 = sub nsw <4 x i32> %19, %21, !dbg !960
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
  %23 = mul nsw <4 x i32> %22, %22, !dbg !960
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 4, !949, !DIExpression(), !958)
  %add.ptr.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 %idx.ext, !dbg !961
    #dbg_value(ptr %add.ptr.3, !942, !DIExpression(), !956)
  %add.ptr9.3 = getelementptr inbounds i8, ptr %add.ptr9.2, i64 %idx.ext8, !dbg !961
    #dbg_value(ptr %add.ptr9.3, !944, !DIExpression(), !956)
    #dbg_value(i32 4, !947, !DIExpression(), !957)
    #dbg_value(i32 0, !949, !DIExpression(), !958)
    #dbg_value(i64 0, !949, !DIExpression(), !958)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 1, !949, !DIExpression(), !958)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 2, !949, !DIExpression(), !958)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 3, !949, !DIExpression(), !958)
  %24 = load <4 x i8>, ptr %add.ptr.3, align 1, !dbg !960
  %25 = zext <4 x i8> %24 to <4 x i32>, !dbg !960
  %26 = load <4 x i8>, ptr %add.ptr9.3, align 1, !dbg !960
  %27 = zext <4 x i8> %26 to <4 x i32>, !dbg !960
  %28 = sub nsw <4 x i32> %25, %27, !dbg !960
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
  %29 = mul nsw <4 x i32> %28, %28, !dbg !960
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 4, !949, !DIExpression(), !958)
  %add.ptr.4 = getelementptr inbounds i8, ptr %add.ptr.3, i64 %idx.ext, !dbg !961
    #dbg_value(ptr %add.ptr.4, !942, !DIExpression(), !956)
  %add.ptr9.4 = getelementptr inbounds i8, ptr %add.ptr9.3, i64 %idx.ext8, !dbg !961
    #dbg_value(ptr %add.ptr9.4, !944, !DIExpression(), !956)
    #dbg_value(i32 5, !947, !DIExpression(), !957)
    #dbg_value(i32 0, !949, !DIExpression(), !958)
    #dbg_value(i64 0, !949, !DIExpression(), !958)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 1, !949, !DIExpression(), !958)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 2, !949, !DIExpression(), !958)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 3, !949, !DIExpression(), !958)
  %30 = load <4 x i8>, ptr %add.ptr.4, align 1, !dbg !960
  %31 = zext <4 x i8> %30 to <4 x i32>, !dbg !960
  %32 = load <4 x i8>, ptr %add.ptr9.4, align 1, !dbg !960
  %33 = zext <4 x i8> %32 to <4 x i32>, !dbg !960
  %34 = sub nsw <4 x i32> %31, %33, !dbg !960
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
  %35 = mul nsw <4 x i32> %34, %34, !dbg !960
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 4, !949, !DIExpression(), !958)
  %add.ptr.5 = getelementptr inbounds i8, ptr %add.ptr.4, i64 %idx.ext, !dbg !961
    #dbg_value(ptr %add.ptr.5, !942, !DIExpression(), !956)
  %add.ptr9.5 = getelementptr inbounds i8, ptr %add.ptr9.4, i64 %idx.ext8, !dbg !961
    #dbg_value(ptr %add.ptr9.5, !944, !DIExpression(), !956)
    #dbg_value(i32 6, !947, !DIExpression(), !957)
    #dbg_value(i32 0, !949, !DIExpression(), !958)
    #dbg_value(i64 0, !949, !DIExpression(), !958)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 1, !949, !DIExpression(), !958)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 2, !949, !DIExpression(), !958)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 3, !949, !DIExpression(), !958)
  %36 = load <4 x i8>, ptr %add.ptr.5, align 1, !dbg !960
  %37 = zext <4 x i8> %36 to <4 x i32>, !dbg !960
  %38 = load <4 x i8>, ptr %add.ptr9.5, align 1, !dbg !960
  %39 = zext <4 x i8> %38 to <4 x i32>, !dbg !960
  %40 = sub nsw <4 x i32> %37, %39, !dbg !960
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
  %41 = mul nsw <4 x i32> %40, %40, !dbg !960
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 4, !949, !DIExpression(), !958)
  %add.ptr.6 = getelementptr inbounds i8, ptr %add.ptr.5, i64 %idx.ext, !dbg !961
    #dbg_value(ptr %add.ptr.6, !942, !DIExpression(), !956)
  %add.ptr9.6 = getelementptr inbounds i8, ptr %add.ptr9.5, i64 %idx.ext8, !dbg !961
    #dbg_value(ptr %add.ptr9.6, !944, !DIExpression(), !956)
    #dbg_value(i32 7, !947, !DIExpression(), !957)
    #dbg_value(i32 0, !949, !DIExpression(), !958)
    #dbg_value(i64 0, !949, !DIExpression(), !958)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 1, !949, !DIExpression(), !958)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 2, !949, !DIExpression(), !958)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
    #dbg_value(i32 poison, !946, !DIExpression(), !956)
    #dbg_value(i64 3, !949, !DIExpression(), !958)
  %42 = load <4 x i8>, ptr %add.ptr.6, align 1, !dbg !960
  %43 = zext <4 x i8> %42 to <4 x i32>, !dbg !960
  %44 = load <4 x i8>, ptr %add.ptr9.6, align 1, !dbg !960
  %45 = zext <4 x i8> %44 to <4 x i32>, !dbg !960
  %46 = sub nsw <4 x i32> %43, %45, !dbg !960
    #dbg_value(!DIArgList(i8 poison, i32 poison), !953, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !959)
  %47 = mul nsw <4 x i32> %46, %46, !dbg !960
  %48 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %5), !dbg !960
  %49 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %11), !dbg !960
  %op.rdx = add i32 %48, %49, !dbg !960
  %50 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %17), !dbg !960
  %op.rdx43 = add i32 %op.rdx, %50, !dbg !960
  %51 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %23), !dbg !960
  %op.rdx44 = add i32 %op.rdx43, %51, !dbg !960
  %52 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %29), !dbg !960
  %op.rdx45 = add i32 %op.rdx44, %52, !dbg !960
  %53 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %35), !dbg !960
  %op.rdx46 = add i32 %op.rdx45, %53, !dbg !960
  %54 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %41), !dbg !960
  %op.rdx47 = add i32 %op.rdx46, %54, !dbg !960
  %55 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %47), !dbg !960
  %op.rdx48 = add i32 %op.rdx47, %55, !dbg !960
    #dbg_value(i32 %op.rdx48, !946, !DIExpression(), !956)
    #dbg_value(i64 4, !949, !DIExpression(), !958)
    #dbg_value(!DIArgList(ptr %add.ptr.6, i64 %idx.ext), !942, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !956)
    #dbg_value(!DIArgList(ptr %add.ptr9.6, i64 %idx.ext8), !944, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !956)
    #dbg_value(i32 8, !947, !DIExpression(), !957)
  ret i32 %op.rdx48, !dbg !962
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define internal i32 @x264_pixel_ssd_4x4(ptr nocapture noundef readonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2) #5 !dbg !963 {
entry:
    #dbg_value(ptr %pix1, !965, !DIExpression(), !979)
    #dbg_value(i32 %i_stride_pix1, !966, !DIExpression(), !979)
    #dbg_value(ptr %pix2, !967, !DIExpression(), !979)
    #dbg_value(i32 %i_stride_pix2, !968, !DIExpression(), !979)
    #dbg_value(i32 0, !969, !DIExpression(), !979)
    #dbg_value(i32 0, !970, !DIExpression(), !980)
  %idx.ext = sext i32 %i_stride_pix1 to i64
  %idx.ext8 = sext i32 %i_stride_pix2 to i64
    #dbg_value(ptr %pix1, !965, !DIExpression(), !979)
    #dbg_value(i32 0, !970, !DIExpression(), !980)
    #dbg_value(i32 0, !969, !DIExpression(), !979)
    #dbg_value(ptr %pix2, !967, !DIExpression(), !979)
    #dbg_value(ptr %pix1, !965, !DIExpression(), !979)
    #dbg_value(i32 0, !970, !DIExpression(), !980)
    #dbg_value(ptr %pix2, !967, !DIExpression(), !979)
    #dbg_value(i32 0, !972, !DIExpression(), !981)
    #dbg_value(i32 0, !969, !DIExpression(), !979)
    #dbg_value(i64 0, !972, !DIExpression(), !981)
    #dbg_value(i32 0, !969, !DIExpression(), !979)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !976, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !982)
    #dbg_value(!DIArgList(i8 poison, i8 poison, i32 poison, i32 poison), !969, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 3, DW_OP_minus, DW_OP_mul, DW_OP_stack_value), !979)
    #dbg_value(i64 1, !972, !DIExpression(), !981)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !976, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !982)
    #dbg_value(i32 poison, !969, !DIExpression(), !979)
    #dbg_value(i64 2, !972, !DIExpression(), !981)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !976, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !982)
    #dbg_value(i32 poison, !969, !DIExpression(), !979)
    #dbg_value(i64 3, !972, !DIExpression(), !981)
  %0 = load <4 x i8>, ptr %pix1, align 1, !dbg !983
  %1 = zext <4 x i8> %0 to <4 x i32>, !dbg !983
  %2 = load <4 x i8>, ptr %pix2, align 1, !dbg !983
  %3 = zext <4 x i8> %2 to <4 x i32>, !dbg !983
  %4 = sub nsw <4 x i32> %1, %3, !dbg !983
    #dbg_value(!DIArgList(i8 poison, i32 poison), !976, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !982)
  %5 = mul nsw <4 x i32> %4, %4, !dbg !983
    #dbg_value(i32 poison, !969, !DIExpression(), !979)
    #dbg_value(i64 4, !972, !DIExpression(), !981)
  %add.ptr = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext, !dbg !984
    #dbg_value(ptr %add.ptr, !965, !DIExpression(), !979)
  %add.ptr9 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext8, !dbg !984
    #dbg_value(ptr %add.ptr9, !967, !DIExpression(), !979)
    #dbg_value(i32 1, !970, !DIExpression(), !980)
    #dbg_value(i32 0, !972, !DIExpression(), !981)
    #dbg_value(i64 0, !972, !DIExpression(), !981)
    #dbg_value(i32 poison, !969, !DIExpression(), !979)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !976, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !982)
    #dbg_value(i32 poison, !969, !DIExpression(), !979)
    #dbg_value(i64 1, !972, !DIExpression(), !981)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !976, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !982)
    #dbg_value(i32 poison, !969, !DIExpression(), !979)
    #dbg_value(i64 2, !972, !DIExpression(), !981)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !976, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !982)
    #dbg_value(i32 poison, !969, !DIExpression(), !979)
    #dbg_value(i64 3, !972, !DIExpression(), !981)
  %6 = load <4 x i8>, ptr %add.ptr, align 1, !dbg !983
  %7 = zext <4 x i8> %6 to <4 x i32>, !dbg !983
  %8 = load <4 x i8>, ptr %add.ptr9, align 1, !dbg !983
  %9 = zext <4 x i8> %8 to <4 x i32>, !dbg !983
  %10 = sub nsw <4 x i32> %7, %9, !dbg !983
    #dbg_value(!DIArgList(i8 poison, i32 poison), !976, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !982)
  %11 = mul nsw <4 x i32> %10, %10, !dbg !983
    #dbg_value(i32 poison, !969, !DIExpression(), !979)
    #dbg_value(i64 4, !972, !DIExpression(), !981)
  %add.ptr.1 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.ext, !dbg !984
    #dbg_value(ptr %add.ptr.1, !965, !DIExpression(), !979)
  %add.ptr9.1 = getelementptr inbounds i8, ptr %add.ptr9, i64 %idx.ext8, !dbg !984
    #dbg_value(ptr %add.ptr9.1, !967, !DIExpression(), !979)
    #dbg_value(i32 2, !970, !DIExpression(), !980)
    #dbg_value(i32 0, !972, !DIExpression(), !981)
    #dbg_value(i64 0, !972, !DIExpression(), !981)
    #dbg_value(i32 poison, !969, !DIExpression(), !979)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !976, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !982)
    #dbg_value(i32 poison, !969, !DIExpression(), !979)
    #dbg_value(i64 1, !972, !DIExpression(), !981)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !976, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !982)
    #dbg_value(i32 poison, !969, !DIExpression(), !979)
    #dbg_value(i64 2, !972, !DIExpression(), !981)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !976, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !982)
    #dbg_value(i32 poison, !969, !DIExpression(), !979)
    #dbg_value(i64 3, !972, !DIExpression(), !981)
  %12 = load <4 x i8>, ptr %add.ptr.1, align 1, !dbg !983
  %13 = zext <4 x i8> %12 to <4 x i32>, !dbg !983
  %14 = load <4 x i8>, ptr %add.ptr9.1, align 1, !dbg !983
  %15 = zext <4 x i8> %14 to <4 x i32>, !dbg !983
  %16 = sub nsw <4 x i32> %13, %15, !dbg !983
    #dbg_value(!DIArgList(i8 poison, i32 poison), !976, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !982)
  %17 = mul nsw <4 x i32> %16, %16, !dbg !983
    #dbg_value(i32 poison, !969, !DIExpression(), !979)
    #dbg_value(i64 4, !972, !DIExpression(), !981)
  %add.ptr.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 %idx.ext, !dbg !984
    #dbg_value(ptr %add.ptr.2, !965, !DIExpression(), !979)
  %add.ptr9.2 = getelementptr inbounds i8, ptr %add.ptr9.1, i64 %idx.ext8, !dbg !984
    #dbg_value(ptr %add.ptr9.2, !967, !DIExpression(), !979)
    #dbg_value(i32 3, !970, !DIExpression(), !980)
    #dbg_value(i32 0, !972, !DIExpression(), !981)
    #dbg_value(i64 0, !972, !DIExpression(), !981)
    #dbg_value(i32 poison, !969, !DIExpression(), !979)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !976, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !982)
    #dbg_value(i32 poison, !969, !DIExpression(), !979)
    #dbg_value(i64 1, !972, !DIExpression(), !981)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !976, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !982)
    #dbg_value(i32 poison, !969, !DIExpression(), !979)
    #dbg_value(i64 2, !972, !DIExpression(), !981)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !976, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !982)
    #dbg_value(i32 poison, !969, !DIExpression(), !979)
    #dbg_value(i64 3, !972, !DIExpression(), !981)
  %18 = load <4 x i8>, ptr %add.ptr.2, align 1, !dbg !983
  %19 = zext <4 x i8> %18 to <4 x i32>, !dbg !983
  %20 = load <4 x i8>, ptr %add.ptr9.2, align 1, !dbg !983
  %21 = zext <4 x i8> %20 to <4 x i32>, !dbg !983
  %22 = sub nsw <4 x i32> %19, %21, !dbg !983
    #dbg_value(!DIArgList(i8 poison, i32 poison), !976, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !982)
  %23 = mul nsw <4 x i32> %22, %22, !dbg !983
  %24 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %5), !dbg !983
  %25 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %11), !dbg !983
  %op.rdx = add i32 %24, %25, !dbg !983
  %26 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %17), !dbg !983
  %op.rdx43 = add i32 %op.rdx, %26, !dbg !983
  %27 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %23), !dbg !983
  %op.rdx44 = add i32 %op.rdx43, %27, !dbg !983
    #dbg_value(i32 %op.rdx44, !969, !DIExpression(), !979)
    #dbg_value(i64 4, !972, !DIExpression(), !981)
    #dbg_value(!DIArgList(ptr %add.ptr.2, i64 %idx.ext), !965, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !979)
    #dbg_value(!DIArgList(ptr %add.ptr9.2, i64 %idx.ext8), !967, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !979)
    #dbg_value(i32 4, !970, !DIExpression(), !980)
  ret i32 %op.rdx44, !dbg !985
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define internal range(i32 0, 524281) i32 @x264_pixel_satd_16x16(ptr nocapture noundef readonly %pix1, i32 noundef %i_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_pix2) #5 !dbg !986 {
entry:
    #dbg_value(ptr %pix1, !988, !DIExpression(), !993)
    #dbg_value(i32 %i_pix1, !989, !DIExpression(), !993)
    #dbg_value(ptr %pix2, !990, !DIExpression(), !993)
    #dbg_value(i32 %i_pix2, !991, !DIExpression(), !993)
  %call = tail call i32 @x264_pixel_satd_8x4(ptr noundef %pix1, i32 noundef %i_pix1, ptr noundef %pix2, i32 noundef %i_pix2), !dbg !994
  %mul = shl nsw i32 %i_pix1, 2, !dbg !994
  %idx.ext = sext i32 %mul to i64, !dbg !994
  %add.ptr = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext, !dbg !994
  %mul1 = shl nsw i32 %i_pix2, 2, !dbg !994
  %idx.ext2 = sext i32 %mul1 to i64, !dbg !994
  %add.ptr3 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext2, !dbg !994
  %call4 = tail call i32 @x264_pixel_satd_8x4(ptr noundef %add.ptr, i32 noundef %i_pix1, ptr noundef %add.ptr3, i32 noundef %i_pix2), !dbg !994
    #dbg_value(i32 poison, !992, !DIExpression(), !993)
  %add.ptr5 = getelementptr inbounds i8, ptr %pix1, i64 8, !dbg !995
  %add.ptr6 = getelementptr inbounds i8, ptr %pix2, i64 8, !dbg !995
  %call7 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull %add.ptr5, i32 noundef %i_pix1, ptr noundef nonnull %add.ptr6, i32 noundef %i_pix2), !dbg !995
  %add.ptr11 = getelementptr inbounds i8, ptr %add.ptr5, i64 %idx.ext, !dbg !995
  %add.ptr15 = getelementptr inbounds i8, ptr %add.ptr6, i64 %idx.ext2, !dbg !995
  %call16 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull %add.ptr11, i32 noundef %i_pix1, ptr noundef nonnull %add.ptr15, i32 noundef %i_pix2), !dbg !995
    #dbg_value(i32 poison, !992, !DIExpression(), !993)
  %mul19 = shl nsw i32 %i_pix1, 3, !dbg !997
  %idx.ext20 = sext i32 %mul19 to i64, !dbg !997
  %add.ptr21 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext20, !dbg !997
  %mul22 = shl nsw i32 %i_pix2, 3, !dbg !997
  %idx.ext23 = sext i32 %mul22 to i64, !dbg !997
  %add.ptr24 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext23, !dbg !997
  %call25 = tail call i32 @x264_pixel_satd_8x4(ptr noundef %add.ptr21, i32 noundef %i_pix1, ptr noundef %add.ptr24, i32 noundef %i_pix2), !dbg !997
  %mul26 = mul nsw i32 %i_pix1, 12, !dbg !997
  %idx.ext27 = sext i32 %mul26 to i64, !dbg !997
  %add.ptr28 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext27, !dbg !997
  %mul29 = mul nsw i32 %i_pix2, 12, !dbg !997
  %idx.ext30 = sext i32 %mul29 to i64, !dbg !997
  %add.ptr31 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext30, !dbg !997
  %call32 = tail call i32 @x264_pixel_satd_8x4(ptr noundef %add.ptr28, i32 noundef %i_pix1, ptr noundef %add.ptr31, i32 noundef %i_pix2), !dbg !997
    #dbg_value(i32 poison, !992, !DIExpression(), !993)
  %add.ptr38 = getelementptr inbounds i8, ptr %add.ptr5, i64 %idx.ext20, !dbg !999
  %add.ptr42 = getelementptr inbounds i8, ptr %add.ptr6, i64 %idx.ext23, !dbg !999
  %call43 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull %add.ptr38, i32 noundef %i_pix1, ptr noundef nonnull %add.ptr42, i32 noundef %i_pix2), !dbg !999
  %add.ptr47 = getelementptr inbounds i8, ptr %add.ptr5, i64 %idx.ext27, !dbg !999
  %add.ptr51 = getelementptr inbounds i8, ptr %add.ptr6, i64 %idx.ext30, !dbg !999
  %call52 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull %add.ptr47, i32 noundef %i_pix1, ptr noundef nonnull %add.ptr51, i32 noundef %i_pix2), !dbg !999
  %add53 = add nuw nsw i32 %call4, %call, !dbg !999
  %add33 = add nuw nsw i32 %add53, %call7, !dbg !997
  %add17 = add nuw nsw i32 %add33, %call16, !dbg !995
  %add = add nuw nsw i32 %add17, %call25, !dbg !994
  %add18 = add nuw nsw i32 %add, %call32, !dbg !995
  %add34 = add nuw nsw i32 %add18, %call43, !dbg !997
  %add54 = add nuw nsw i32 %add34, %call52, !dbg !999
    #dbg_value(i32 %add54, !992, !DIExpression(), !993)
  ret i32 %add54, !dbg !994
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define internal range(i32 0, 262141) i32 @x264_pixel_satd_16x8(ptr nocapture noundef readonly %pix1, i32 noundef %i_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_pix2) #5 !dbg !1001 {
entry:
    #dbg_value(ptr %pix1, !1003, !DIExpression(), !1008)
    #dbg_value(i32 %i_pix1, !1004, !DIExpression(), !1008)
    #dbg_value(ptr %pix2, !1005, !DIExpression(), !1008)
    #dbg_value(i32 %i_pix2, !1006, !DIExpression(), !1008)
  %call = tail call i32 @x264_pixel_satd_8x4(ptr noundef %pix1, i32 noundef %i_pix1, ptr noundef %pix2, i32 noundef %i_pix2), !dbg !1009
  %mul = shl nsw i32 %i_pix1, 2, !dbg !1009
  %idx.ext = sext i32 %mul to i64, !dbg !1009
  %add.ptr = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext, !dbg !1009
  %mul1 = shl nsw i32 %i_pix2, 2, !dbg !1009
  %idx.ext2 = sext i32 %mul1 to i64, !dbg !1009
  %add.ptr3 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext2, !dbg !1009
  %call4 = tail call i32 @x264_pixel_satd_8x4(ptr noundef %add.ptr, i32 noundef %i_pix1, ptr noundef %add.ptr3, i32 noundef %i_pix2), !dbg !1009
    #dbg_value(i32 poison, !1007, !DIExpression(), !1008)
  %add.ptr5 = getelementptr inbounds i8, ptr %pix1, i64 8, !dbg !1010
  %add.ptr6 = getelementptr inbounds i8, ptr %pix2, i64 8, !dbg !1010
  %call7 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull %add.ptr5, i32 noundef %i_pix1, ptr noundef nonnull %add.ptr6, i32 noundef %i_pix2), !dbg !1010
  %add.ptr11 = getelementptr inbounds i8, ptr %add.ptr5, i64 %idx.ext, !dbg !1010
  %add.ptr15 = getelementptr inbounds i8, ptr %add.ptr6, i64 %idx.ext2, !dbg !1010
  %call16 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull %add.ptr11, i32 noundef %i_pix1, ptr noundef nonnull %add.ptr15, i32 noundef %i_pix2), !dbg !1010
  %add17 = add nuw nsw i32 %call4, %call, !dbg !1010
  %add = add nuw nsw i32 %add17, %call7, !dbg !1009
  %add18 = add nuw nsw i32 %add, %call16, !dbg !1010
    #dbg_value(i32 %add18, !1007, !DIExpression(), !1008)
  ret i32 %add18, !dbg !1009
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define internal range(i32 0, 262141) i32 @x264_pixel_satd_8x16(ptr nocapture noundef readonly %pix1, i32 noundef %i_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_pix2) #5 !dbg !1012 {
entry:
    #dbg_value(ptr %pix1, !1014, !DIExpression(), !1019)
    #dbg_value(i32 %i_pix1, !1015, !DIExpression(), !1019)
    #dbg_value(ptr %pix2, !1016, !DIExpression(), !1019)
    #dbg_value(i32 %i_pix2, !1017, !DIExpression(), !1019)
  %call = tail call i32 @x264_pixel_satd_8x4(ptr noundef %pix1, i32 noundef %i_pix1, ptr noundef %pix2, i32 noundef %i_pix2), !dbg !1020
  %mul = shl nsw i32 %i_pix1, 2, !dbg !1020
  %idx.ext = sext i32 %mul to i64, !dbg !1020
  %add.ptr = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext, !dbg !1020
  %mul1 = shl nsw i32 %i_pix2, 2, !dbg !1020
  %idx.ext2 = sext i32 %mul1 to i64, !dbg !1020
  %add.ptr3 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext2, !dbg !1020
  %call4 = tail call i32 @x264_pixel_satd_8x4(ptr noundef %add.ptr, i32 noundef %i_pix1, ptr noundef %add.ptr3, i32 noundef %i_pix2), !dbg !1020
    #dbg_value(i32 poison, !1018, !DIExpression(), !1019)
  %mul5 = shl nsw i32 %i_pix1, 3, !dbg !1021
  %idx.ext6 = sext i32 %mul5 to i64, !dbg !1021
  %add.ptr7 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext6, !dbg !1021
  %mul8 = shl nsw i32 %i_pix2, 3, !dbg !1021
  %idx.ext9 = sext i32 %mul8 to i64, !dbg !1021
  %add.ptr10 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext9, !dbg !1021
  %call11 = tail call i32 @x264_pixel_satd_8x4(ptr noundef %add.ptr7, i32 noundef %i_pix1, ptr noundef %add.ptr10, i32 noundef %i_pix2), !dbg !1021
  %mul12 = mul nsw i32 %i_pix1, 12, !dbg !1021
  %idx.ext13 = sext i32 %mul12 to i64, !dbg !1021
  %add.ptr14 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext13, !dbg !1021
  %mul15 = mul nsw i32 %i_pix2, 12, !dbg !1021
  %idx.ext16 = sext i32 %mul15 to i64, !dbg !1021
  %add.ptr17 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext16, !dbg !1021
  %call18 = tail call i32 @x264_pixel_satd_8x4(ptr noundef %add.ptr14, i32 noundef %i_pix1, ptr noundef %add.ptr17, i32 noundef %i_pix2), !dbg !1021
  %add19 = add nuw nsw i32 %call4, %call, !dbg !1021
  %add = add nuw nsw i32 %add19, %call11, !dbg !1020
  %add20 = add nuw nsw i32 %add, %call18, !dbg !1021
    #dbg_value(i32 %add20, !1018, !DIExpression(), !1019)
  ret i32 %add20, !dbg !1020
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define internal range(i32 0, 131071) i32 @x264_pixel_satd_8x8(ptr nocapture noundef readonly %pix1, i32 noundef %i_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_pix2) #5 !dbg !1023 {
entry:
    #dbg_value(ptr %pix1, !1025, !DIExpression(), !1030)
    #dbg_value(i32 %i_pix1, !1026, !DIExpression(), !1030)
    #dbg_value(ptr %pix2, !1027, !DIExpression(), !1030)
    #dbg_value(i32 %i_pix2, !1028, !DIExpression(), !1030)
  %call = tail call i32 @x264_pixel_satd_8x4(ptr noundef %pix1, i32 noundef %i_pix1, ptr noundef %pix2, i32 noundef %i_pix2), !dbg !1031
  %mul = shl nsw i32 %i_pix1, 2, !dbg !1031
  %idx.ext = sext i32 %mul to i64, !dbg !1031
  %add.ptr = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext, !dbg !1031
  %mul1 = shl nsw i32 %i_pix2, 2, !dbg !1031
  %idx.ext2 = sext i32 %mul1 to i64, !dbg !1031
  %add.ptr3 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext2, !dbg !1031
  %call4 = tail call i32 @x264_pixel_satd_8x4(ptr noundef %add.ptr, i32 noundef %i_pix1, ptr noundef %add.ptr3, i32 noundef %i_pix2), !dbg !1031
  %add = add nuw nsw i32 %call4, %call, !dbg !1031
    #dbg_value(i32 %add, !1029, !DIExpression(), !1030)
  ret i32 %add, !dbg !1031
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define internal range(i32 0, 65536) i32 @x264_pixel_satd_8x4(ptr nocapture noundef readonly %pix1, i32 noundef %i_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_pix2) #5 !dbg !1032 {
entry:
    #dbg_value(ptr %pix1, !1034, !DIExpression(), !1064)
    #dbg_value(i32 %i_pix1, !1035, !DIExpression(), !1064)
    #dbg_value(ptr %pix2, !1036, !DIExpression(), !1064)
    #dbg_value(i32 %i_pix2, !1037, !DIExpression(), !1064)
    #dbg_value(i32 0, !1045, !DIExpression(), !1064)
    #dbg_value(i32 0, !1046, !DIExpression(), !1065)
  %idx.ext = sext i32 %i_pix1 to i64
  %idx.ext63 = sext i32 %i_pix2 to i64
    #dbg_value(ptr %pix1, !1034, !DIExpression(), !1064)
    #dbg_value(ptr %pix2, !1036, !DIExpression(), !1064)
    #dbg_value(i64 0, !1046, !DIExpression(), !1065)
  %0 = load i8, ptr %pix1, align 1, !dbg !1066
  %conv = zext i8 %0 to i32, !dbg !1066
  %1 = load i8, ptr %pix2, align 1, !dbg !1067
  %conv2 = zext i8 %1 to i32, !dbg !1067
  %sub = sub nsw i32 %conv, %conv2, !dbg !1068
  %arrayidx3 = getelementptr inbounds i8, ptr %pix1, i64 4, !dbg !1069
  %2 = load i8, ptr %arrayidx3, align 1, !dbg !1069
  %conv4 = zext i8 %2 to i32, !dbg !1069
  %arrayidx5 = getelementptr inbounds i8, ptr %pix2, i64 4, !dbg !1070
  %3 = load i8, ptr %arrayidx5, align 1, !dbg !1070
  %conv6 = zext i8 %3 to i32, !dbg !1070
  %sub7 = sub nsw i32 %conv4, %conv6, !dbg !1071
  %shl = shl nsw i32 %sub7, 16, !dbg !1072
  %add = add nsw i32 %shl, %sub, !dbg !1073
    #dbg_value(i32 %add, !1041, !DIExpression(), !1064)
  %arrayidx8 = getelementptr inbounds i8, ptr %pix1, i64 1, !dbg !1074
  %4 = load i8, ptr %arrayidx8, align 1, !dbg !1074
  %conv9 = zext i8 %4 to i32, !dbg !1074
  %arrayidx10 = getelementptr inbounds i8, ptr %pix2, i64 1, !dbg !1075
  %5 = load i8, ptr %arrayidx10, align 1, !dbg !1075
  %conv11 = zext i8 %5 to i32, !dbg !1075
  %sub12 = sub nsw i32 %conv9, %conv11, !dbg !1076
  %arrayidx13 = getelementptr inbounds i8, ptr %pix1, i64 5, !dbg !1077
  %6 = load i8, ptr %arrayidx13, align 1, !dbg !1077
  %conv14 = zext i8 %6 to i32, !dbg !1077
  %arrayidx15 = getelementptr inbounds i8, ptr %pix2, i64 5, !dbg !1078
  %7 = load i8, ptr %arrayidx15, align 1, !dbg !1078
  %conv16 = zext i8 %7 to i32, !dbg !1078
  %sub17 = sub nsw i32 %conv14, %conv16, !dbg !1079
  %shl18 = shl nsw i32 %sub17, 16, !dbg !1080
  %add19 = add nsw i32 %shl18, %sub12, !dbg !1081
    #dbg_value(i32 %add19, !1042, !DIExpression(), !1064)
  %arrayidx20 = getelementptr inbounds i8, ptr %pix1, i64 2, !dbg !1082
  %8 = load i8, ptr %arrayidx20, align 1, !dbg !1082
  %conv21 = zext i8 %8 to i32, !dbg !1082
  %arrayidx22 = getelementptr inbounds i8, ptr %pix2, i64 2, !dbg !1083
  %9 = load i8, ptr %arrayidx22, align 1, !dbg !1083
  %conv23 = zext i8 %9 to i32, !dbg !1083
  %sub24 = sub nsw i32 %conv21, %conv23, !dbg !1084
  %arrayidx25 = getelementptr inbounds i8, ptr %pix1, i64 6, !dbg !1085
  %10 = load i8, ptr %arrayidx25, align 1, !dbg !1085
  %conv26 = zext i8 %10 to i32, !dbg !1085
  %arrayidx27 = getelementptr inbounds i8, ptr %pix2, i64 6, !dbg !1086
  %11 = load i8, ptr %arrayidx27, align 1, !dbg !1086
  %conv28 = zext i8 %11 to i32, !dbg !1086
  %sub29 = sub nsw i32 %conv26, %conv28, !dbg !1087
  %shl30 = shl nsw i32 %sub29, 16, !dbg !1088
  %add31 = add nsw i32 %shl30, %sub24, !dbg !1089
    #dbg_value(i32 %add31, !1043, !DIExpression(), !1064)
  %arrayidx32 = getelementptr inbounds i8, ptr %pix1, i64 3, !dbg !1090
  %12 = load i8, ptr %arrayidx32, align 1, !dbg !1090
  %conv33 = zext i8 %12 to i32, !dbg !1090
  %arrayidx34 = getelementptr inbounds i8, ptr %pix2, i64 3, !dbg !1091
  %13 = load i8, ptr %arrayidx34, align 1, !dbg !1091
  %conv35 = zext i8 %13 to i32, !dbg !1091
  %sub36 = sub nsw i32 %conv33, %conv35, !dbg !1092
  %arrayidx37 = getelementptr inbounds i8, ptr %pix1, i64 7, !dbg !1093
  %14 = load i8, ptr %arrayidx37, align 1, !dbg !1093
  %conv38 = zext i8 %14 to i32, !dbg !1093
  %arrayidx39 = getelementptr inbounds i8, ptr %pix2, i64 7, !dbg !1094
  %15 = load i8, ptr %arrayidx39, align 1, !dbg !1094
  %conv40 = zext i8 %15 to i32, !dbg !1094
  %sub41 = sub nsw i32 %conv38, %conv40, !dbg !1095
  %shl42 = shl nsw i32 %sub41, 16, !dbg !1096
  %add43 = add nsw i32 %shl42, %sub36, !dbg !1097
    #dbg_value(i32 %add43, !1044, !DIExpression(), !1064)
  %add44 = add nsw i32 %add19, %add, !dbg !1098
    #dbg_value(i32 %add44, !1048, !DIExpression(), !1099)
  %sub45 = sub nsw i32 %add, %add19, !dbg !1098
    #dbg_value(i32 %sub45, !1052, !DIExpression(), !1099)
  %add46 = add nsw i32 %add43, %add31, !dbg !1098
    #dbg_value(i32 %add46, !1053, !DIExpression(), !1099)
  %sub47 = sub nsw i32 %add31, %add43, !dbg !1098
    #dbg_value(i32 %sub47, !1054, !DIExpression(), !1099)
  %add48 = add nsw i32 %add46, %add44, !dbg !1098
    #dbg_value(i32 %add48, !1038, !DIExpression(DW_OP_LLVM_fragment, 0, 32), !1064)
  %sub51 = sub nsw i32 %add44, %add46, !dbg !1098
    #dbg_value(i32 %sub51, !1038, !DIExpression(DW_OP_LLVM_fragment, 64, 32), !1064)
  %add55 = add nsw i32 %sub47, %sub45, !dbg !1098
    #dbg_value(i32 %add55, !1038, !DIExpression(DW_OP_LLVM_fragment, 32, 32), !1064)
  %sub59 = sub nsw i32 %sub45, %sub47, !dbg !1098
    #dbg_value(i32 %sub59, !1038, !DIExpression(DW_OP_LLVM_fragment, 96, 32), !1064)
    #dbg_value(i64 1, !1046, !DIExpression(), !1065)
  %add.ptr = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext, !dbg !1100
    #dbg_value(ptr %add.ptr, !1034, !DIExpression(), !1064)
  %add.ptr64 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext63, !dbg !1101
    #dbg_value(ptr %add.ptr64, !1036, !DIExpression(), !1064)
  %16 = load i8, ptr %add.ptr, align 1, !dbg !1066
  %conv.1 = zext i8 %16 to i32, !dbg !1066
  %17 = load i8, ptr %add.ptr64, align 1, !dbg !1067
  %conv2.1 = zext i8 %17 to i32, !dbg !1067
  %sub.1 = sub nsw i32 %conv.1, %conv2.1, !dbg !1068
  %arrayidx3.1 = getelementptr inbounds i8, ptr %add.ptr, i64 4, !dbg !1069
  %18 = load i8, ptr %arrayidx3.1, align 1, !dbg !1069
  %conv4.1 = zext i8 %18 to i32, !dbg !1069
  %arrayidx5.1 = getelementptr inbounds i8, ptr %add.ptr64, i64 4, !dbg !1070
  %19 = load i8, ptr %arrayidx5.1, align 1, !dbg !1070
  %conv6.1 = zext i8 %19 to i32, !dbg !1070
  %sub7.1 = sub nsw i32 %conv4.1, %conv6.1, !dbg !1071
  %shl.1 = shl nsw i32 %sub7.1, 16, !dbg !1072
  %add.1 = add nsw i32 %shl.1, %sub.1, !dbg !1073
    #dbg_value(i32 %add.1, !1041, !DIExpression(), !1064)
  %arrayidx8.1 = getelementptr inbounds i8, ptr %add.ptr, i64 1, !dbg !1074
  %20 = load i8, ptr %arrayidx8.1, align 1, !dbg !1074
  %conv9.1 = zext i8 %20 to i32, !dbg !1074
  %arrayidx10.1 = getelementptr inbounds i8, ptr %add.ptr64, i64 1, !dbg !1075
  %21 = load i8, ptr %arrayidx10.1, align 1, !dbg !1075
  %conv11.1 = zext i8 %21 to i32, !dbg !1075
  %sub12.1 = sub nsw i32 %conv9.1, %conv11.1, !dbg !1076
  %arrayidx13.1 = getelementptr inbounds i8, ptr %add.ptr, i64 5, !dbg !1077
  %22 = load i8, ptr %arrayidx13.1, align 1, !dbg !1077
  %conv14.1 = zext i8 %22 to i32, !dbg !1077
  %arrayidx15.1 = getelementptr inbounds i8, ptr %add.ptr64, i64 5, !dbg !1078
  %23 = load i8, ptr %arrayidx15.1, align 1, !dbg !1078
  %conv16.1 = zext i8 %23 to i32, !dbg !1078
  %sub17.1 = sub nsw i32 %conv14.1, %conv16.1, !dbg !1079
  %shl18.1 = shl nsw i32 %sub17.1, 16, !dbg !1080
  %add19.1 = add nsw i32 %shl18.1, %sub12.1, !dbg !1081
    #dbg_value(i32 %add19.1, !1042, !DIExpression(), !1064)
  %arrayidx20.1 = getelementptr inbounds i8, ptr %add.ptr, i64 2, !dbg !1082
  %24 = load i8, ptr %arrayidx20.1, align 1, !dbg !1082
  %conv21.1 = zext i8 %24 to i32, !dbg !1082
  %arrayidx22.1 = getelementptr inbounds i8, ptr %add.ptr64, i64 2, !dbg !1083
  %25 = load i8, ptr %arrayidx22.1, align 1, !dbg !1083
  %conv23.1 = zext i8 %25 to i32, !dbg !1083
  %sub24.1 = sub nsw i32 %conv21.1, %conv23.1, !dbg !1084
  %arrayidx25.1 = getelementptr inbounds i8, ptr %add.ptr, i64 6, !dbg !1085
  %26 = load i8, ptr %arrayidx25.1, align 1, !dbg !1085
  %conv26.1 = zext i8 %26 to i32, !dbg !1085
  %arrayidx27.1 = getelementptr inbounds i8, ptr %add.ptr64, i64 6, !dbg !1086
  %27 = load i8, ptr %arrayidx27.1, align 1, !dbg !1086
  %conv28.1 = zext i8 %27 to i32, !dbg !1086
  %sub29.1 = sub nsw i32 %conv26.1, %conv28.1, !dbg !1087
  %shl30.1 = shl nsw i32 %sub29.1, 16, !dbg !1088
  %add31.1 = add nsw i32 %shl30.1, %sub24.1, !dbg !1089
    #dbg_value(i32 %add31.1, !1043, !DIExpression(), !1064)
  %arrayidx32.1 = getelementptr inbounds i8, ptr %add.ptr, i64 3, !dbg !1090
  %28 = load i8, ptr %arrayidx32.1, align 1, !dbg !1090
  %conv33.1 = zext i8 %28 to i32, !dbg !1090
  %arrayidx34.1 = getelementptr inbounds i8, ptr %add.ptr64, i64 3, !dbg !1091
  %29 = load i8, ptr %arrayidx34.1, align 1, !dbg !1091
  %conv35.1 = zext i8 %29 to i32, !dbg !1091
  %sub36.1 = sub nsw i32 %conv33.1, %conv35.1, !dbg !1092
  %arrayidx37.1 = getelementptr inbounds i8, ptr %add.ptr, i64 7, !dbg !1093
  %30 = load i8, ptr %arrayidx37.1, align 1, !dbg !1093
  %conv38.1 = zext i8 %30 to i32, !dbg !1093
  %arrayidx39.1 = getelementptr inbounds i8, ptr %add.ptr64, i64 7, !dbg !1094
  %31 = load i8, ptr %arrayidx39.1, align 1, !dbg !1094
  %conv40.1 = zext i8 %31 to i32, !dbg !1094
  %sub41.1 = sub nsw i32 %conv38.1, %conv40.1, !dbg !1095
  %shl42.1 = shl nsw i32 %sub41.1, 16, !dbg !1096
  %add43.1 = add nsw i32 %shl42.1, %sub36.1, !dbg !1097
    #dbg_value(i32 %add43.1, !1044, !DIExpression(), !1064)
  %add44.1 = add nsw i32 %add19.1, %add.1, !dbg !1098
    #dbg_value(i32 %add44.1, !1048, !DIExpression(), !1099)
  %sub45.1 = sub nsw i32 %add.1, %add19.1, !dbg !1098
    #dbg_value(i32 %sub45.1, !1052, !DIExpression(), !1099)
  %add46.1 = add nsw i32 %add43.1, %add31.1, !dbg !1098
    #dbg_value(i32 %add46.1, !1053, !DIExpression(), !1099)
  %sub47.1 = sub nsw i32 %add31.1, %add43.1, !dbg !1098
    #dbg_value(i32 %sub47.1, !1054, !DIExpression(), !1099)
  %add48.1 = add nsw i32 %add46.1, %add44.1, !dbg !1098
    #dbg_value(i32 %add48.1, !1038, !DIExpression(DW_OP_LLVM_fragment, 128, 32), !1064)
  %sub51.1 = sub nsw i32 %add44.1, %add46.1, !dbg !1098
    #dbg_value(i32 %sub51.1, !1038, !DIExpression(DW_OP_LLVM_fragment, 192, 32), !1064)
  %add55.1 = add nsw i32 %sub47.1, %sub45.1, !dbg !1098
    #dbg_value(i32 %add55.1, !1038, !DIExpression(DW_OP_LLVM_fragment, 160, 32), !1064)
  %sub59.1 = sub nsw i32 %sub45.1, %sub47.1, !dbg !1098
    #dbg_value(i32 %sub59.1, !1038, !DIExpression(DW_OP_LLVM_fragment, 224, 32), !1064)
    #dbg_value(i64 2, !1046, !DIExpression(), !1065)
  %add.ptr.1 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.ext, !dbg !1100
    #dbg_value(ptr %add.ptr.1, !1034, !DIExpression(), !1064)
  %add.ptr64.1 = getelementptr inbounds i8, ptr %add.ptr64, i64 %idx.ext63, !dbg !1101
    #dbg_value(ptr %add.ptr64.1, !1036, !DIExpression(), !1064)
  %32 = load i8, ptr %add.ptr.1, align 1, !dbg !1066
  %conv.2 = zext i8 %32 to i32, !dbg !1066
  %33 = load i8, ptr %add.ptr64.1, align 1, !dbg !1067
  %conv2.2 = zext i8 %33 to i32, !dbg !1067
  %sub.2 = sub nsw i32 %conv.2, %conv2.2, !dbg !1068
  %arrayidx3.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 4, !dbg !1069
  %34 = load i8, ptr %arrayidx3.2, align 1, !dbg !1069
  %conv4.2 = zext i8 %34 to i32, !dbg !1069
  %arrayidx5.2 = getelementptr inbounds i8, ptr %add.ptr64.1, i64 4, !dbg !1070
  %35 = load i8, ptr %arrayidx5.2, align 1, !dbg !1070
  %conv6.2 = zext i8 %35 to i32, !dbg !1070
  %sub7.2 = sub nsw i32 %conv4.2, %conv6.2, !dbg !1071
  %shl.2 = shl nsw i32 %sub7.2, 16, !dbg !1072
  %add.2 = add nsw i32 %shl.2, %sub.2, !dbg !1073
    #dbg_value(i32 %add.2, !1041, !DIExpression(), !1064)
  %arrayidx8.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 1, !dbg !1074
  %36 = load i8, ptr %arrayidx8.2, align 1, !dbg !1074
  %conv9.2 = zext i8 %36 to i32, !dbg !1074
  %arrayidx10.2 = getelementptr inbounds i8, ptr %add.ptr64.1, i64 1, !dbg !1075
  %37 = load i8, ptr %arrayidx10.2, align 1, !dbg !1075
  %conv11.2 = zext i8 %37 to i32, !dbg !1075
  %sub12.2 = sub nsw i32 %conv9.2, %conv11.2, !dbg !1076
  %arrayidx13.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 5, !dbg !1077
  %38 = load i8, ptr %arrayidx13.2, align 1, !dbg !1077
  %conv14.2 = zext i8 %38 to i32, !dbg !1077
  %arrayidx15.2 = getelementptr inbounds i8, ptr %add.ptr64.1, i64 5, !dbg !1078
  %39 = load i8, ptr %arrayidx15.2, align 1, !dbg !1078
  %conv16.2 = zext i8 %39 to i32, !dbg !1078
  %sub17.2 = sub nsw i32 %conv14.2, %conv16.2, !dbg !1079
  %shl18.2 = shl nsw i32 %sub17.2, 16, !dbg !1080
  %add19.2 = add nsw i32 %shl18.2, %sub12.2, !dbg !1081
    #dbg_value(i32 %add19.2, !1042, !DIExpression(), !1064)
  %arrayidx20.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 2, !dbg !1082
  %40 = load i8, ptr %arrayidx20.2, align 1, !dbg !1082
  %conv21.2 = zext i8 %40 to i32, !dbg !1082
  %arrayidx22.2 = getelementptr inbounds i8, ptr %add.ptr64.1, i64 2, !dbg !1083
  %41 = load i8, ptr %arrayidx22.2, align 1, !dbg !1083
  %conv23.2 = zext i8 %41 to i32, !dbg !1083
  %sub24.2 = sub nsw i32 %conv21.2, %conv23.2, !dbg !1084
  %arrayidx25.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 6, !dbg !1085
  %42 = load i8, ptr %arrayidx25.2, align 1, !dbg !1085
  %conv26.2 = zext i8 %42 to i32, !dbg !1085
  %arrayidx27.2 = getelementptr inbounds i8, ptr %add.ptr64.1, i64 6, !dbg !1086
  %43 = load i8, ptr %arrayidx27.2, align 1, !dbg !1086
  %conv28.2 = zext i8 %43 to i32, !dbg !1086
  %sub29.2 = sub nsw i32 %conv26.2, %conv28.2, !dbg !1087
  %shl30.2 = shl nsw i32 %sub29.2, 16, !dbg !1088
  %add31.2 = add nsw i32 %shl30.2, %sub24.2, !dbg !1089
    #dbg_value(i32 %add31.2, !1043, !DIExpression(), !1064)
  %arrayidx32.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 3, !dbg !1090
  %44 = load i8, ptr %arrayidx32.2, align 1, !dbg !1090
  %conv33.2 = zext i8 %44 to i32, !dbg !1090
  %arrayidx34.2 = getelementptr inbounds i8, ptr %add.ptr64.1, i64 3, !dbg !1091
  %45 = load i8, ptr %arrayidx34.2, align 1, !dbg !1091
  %conv35.2 = zext i8 %45 to i32, !dbg !1091
  %sub36.2 = sub nsw i32 %conv33.2, %conv35.2, !dbg !1092
  %arrayidx37.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 7, !dbg !1093
  %46 = load i8, ptr %arrayidx37.2, align 1, !dbg !1093
  %conv38.2 = zext i8 %46 to i32, !dbg !1093
  %arrayidx39.2 = getelementptr inbounds i8, ptr %add.ptr64.1, i64 7, !dbg !1094
  %47 = load i8, ptr %arrayidx39.2, align 1, !dbg !1094
  %conv40.2 = zext i8 %47 to i32, !dbg !1094
  %sub41.2 = sub nsw i32 %conv38.2, %conv40.2, !dbg !1095
  %shl42.2 = shl nsw i32 %sub41.2, 16, !dbg !1096
  %add43.2 = add nsw i32 %shl42.2, %sub36.2, !dbg !1097
    #dbg_value(i32 %add43.2, !1044, !DIExpression(), !1064)
  %add44.2 = add nsw i32 %add19.2, %add.2, !dbg !1098
    #dbg_value(i32 %add44.2, !1048, !DIExpression(), !1099)
  %sub45.2 = sub nsw i32 %add.2, %add19.2, !dbg !1098
    #dbg_value(i32 %sub45.2, !1052, !DIExpression(), !1099)
  %add46.2 = add nsw i32 %add43.2, %add31.2, !dbg !1098
    #dbg_value(i32 %add46.2, !1053, !DIExpression(), !1099)
  %sub47.2 = sub nsw i32 %add31.2, %add43.2, !dbg !1098
    #dbg_value(i32 %sub47.2, !1054, !DIExpression(), !1099)
  %add48.2 = add nsw i32 %add46.2, %add44.2, !dbg !1098
    #dbg_value(i32 %add48.2, !1038, !DIExpression(DW_OP_LLVM_fragment, 256, 32), !1064)
  %sub51.2 = sub nsw i32 %add44.2, %add46.2, !dbg !1098
    #dbg_value(i32 %sub51.2, !1038, !DIExpression(DW_OP_LLVM_fragment, 320, 32), !1064)
  %add55.2 = add nsw i32 %sub47.2, %sub45.2, !dbg !1098
    #dbg_value(i32 %add55.2, !1038, !DIExpression(DW_OP_LLVM_fragment, 288, 32), !1064)
  %sub59.2 = sub nsw i32 %sub45.2, %sub47.2, !dbg !1098
    #dbg_value(i32 %sub59.2, !1038, !DIExpression(DW_OP_LLVM_fragment, 352, 32), !1064)
    #dbg_value(i64 3, !1046, !DIExpression(), !1065)
  %add.ptr.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 %idx.ext, !dbg !1100
    #dbg_value(ptr %add.ptr.2, !1034, !DIExpression(), !1064)
  %add.ptr64.2 = getelementptr inbounds i8, ptr %add.ptr64.1, i64 %idx.ext63, !dbg !1101
    #dbg_value(ptr %add.ptr64.2, !1036, !DIExpression(), !1064)
  %48 = load i8, ptr %add.ptr.2, align 1, !dbg !1066
  %conv.3 = zext i8 %48 to i32, !dbg !1066
  %49 = load i8, ptr %add.ptr64.2, align 1, !dbg !1067
  %conv2.3 = zext i8 %49 to i32, !dbg !1067
  %sub.3 = sub nsw i32 %conv.3, %conv2.3, !dbg !1068
  %arrayidx3.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 4, !dbg !1069
  %50 = load i8, ptr %arrayidx3.3, align 1, !dbg !1069
  %conv4.3 = zext i8 %50 to i32, !dbg !1069
  %arrayidx5.3 = getelementptr inbounds i8, ptr %add.ptr64.2, i64 4, !dbg !1070
  %51 = load i8, ptr %arrayidx5.3, align 1, !dbg !1070
  %conv6.3 = zext i8 %51 to i32, !dbg !1070
  %sub7.3 = sub nsw i32 %conv4.3, %conv6.3, !dbg !1071
  %shl.3 = shl nsw i32 %sub7.3, 16, !dbg !1072
  %add.3 = add nsw i32 %shl.3, %sub.3, !dbg !1073
    #dbg_value(i32 %add.3, !1041, !DIExpression(), !1064)
  %arrayidx8.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 1, !dbg !1074
  %52 = load i8, ptr %arrayidx8.3, align 1, !dbg !1074
  %conv9.3 = zext i8 %52 to i32, !dbg !1074
  %arrayidx10.3 = getelementptr inbounds i8, ptr %add.ptr64.2, i64 1, !dbg !1075
  %53 = load i8, ptr %arrayidx10.3, align 1, !dbg !1075
  %conv11.3 = zext i8 %53 to i32, !dbg !1075
  %sub12.3 = sub nsw i32 %conv9.3, %conv11.3, !dbg !1076
  %arrayidx13.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 5, !dbg !1077
  %54 = load i8, ptr %arrayidx13.3, align 1, !dbg !1077
  %conv14.3 = zext i8 %54 to i32, !dbg !1077
  %arrayidx15.3 = getelementptr inbounds i8, ptr %add.ptr64.2, i64 5, !dbg !1078
  %55 = load i8, ptr %arrayidx15.3, align 1, !dbg !1078
  %conv16.3 = zext i8 %55 to i32, !dbg !1078
  %sub17.3 = sub nsw i32 %conv14.3, %conv16.3, !dbg !1079
  %shl18.3 = shl nsw i32 %sub17.3, 16, !dbg !1080
  %add19.3 = add nsw i32 %shl18.3, %sub12.3, !dbg !1081
    #dbg_value(i32 %add19.3, !1042, !DIExpression(), !1064)
  %arrayidx20.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 2, !dbg !1082
  %56 = load i8, ptr %arrayidx20.3, align 1, !dbg !1082
  %conv21.3 = zext i8 %56 to i32, !dbg !1082
  %arrayidx22.3 = getelementptr inbounds i8, ptr %add.ptr64.2, i64 2, !dbg !1083
  %57 = load i8, ptr %arrayidx22.3, align 1, !dbg !1083
  %conv23.3 = zext i8 %57 to i32, !dbg !1083
  %sub24.3 = sub nsw i32 %conv21.3, %conv23.3, !dbg !1084
  %arrayidx25.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 6, !dbg !1085
  %58 = load i8, ptr %arrayidx25.3, align 1, !dbg !1085
  %conv26.3 = zext i8 %58 to i32, !dbg !1085
  %arrayidx27.3 = getelementptr inbounds i8, ptr %add.ptr64.2, i64 6, !dbg !1086
  %59 = load i8, ptr %arrayidx27.3, align 1, !dbg !1086
  %conv28.3 = zext i8 %59 to i32, !dbg !1086
  %sub29.3 = sub nsw i32 %conv26.3, %conv28.3, !dbg !1087
  %shl30.3 = shl nsw i32 %sub29.3, 16, !dbg !1088
  %add31.3 = add nsw i32 %shl30.3, %sub24.3, !dbg !1089
    #dbg_value(i32 %add31.3, !1043, !DIExpression(), !1064)
  %arrayidx32.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 3, !dbg !1090
  %60 = load i8, ptr %arrayidx32.3, align 1, !dbg !1090
  %conv33.3 = zext i8 %60 to i32, !dbg !1090
  %arrayidx34.3 = getelementptr inbounds i8, ptr %add.ptr64.2, i64 3, !dbg !1091
  %61 = load i8, ptr %arrayidx34.3, align 1, !dbg !1091
  %conv35.3 = zext i8 %61 to i32, !dbg !1091
  %sub36.3 = sub nsw i32 %conv33.3, %conv35.3, !dbg !1092
  %arrayidx37.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 7, !dbg !1093
  %62 = load i8, ptr %arrayidx37.3, align 1, !dbg !1093
  %conv38.3 = zext i8 %62 to i32, !dbg !1093
  %arrayidx39.3 = getelementptr inbounds i8, ptr %add.ptr64.2, i64 7, !dbg !1094
  %63 = load i8, ptr %arrayidx39.3, align 1, !dbg !1094
  %conv40.3 = zext i8 %63 to i32, !dbg !1094
  %sub41.3 = sub nsw i32 %conv38.3, %conv40.3, !dbg !1095
  %shl42.3 = shl nsw i32 %sub41.3, 16, !dbg !1096
  %add43.3 = add nsw i32 %shl42.3, %sub36.3, !dbg !1097
    #dbg_value(i32 %add43.3, !1044, !DIExpression(), !1064)
  %add44.3 = add nsw i32 %add19.3, %add.3, !dbg !1098
    #dbg_value(i32 %add44.3, !1048, !DIExpression(), !1099)
  %sub45.3 = sub nsw i32 %add.3, %add19.3, !dbg !1098
    #dbg_value(i32 %sub45.3, !1052, !DIExpression(), !1099)
  %add46.3 = add nsw i32 %add43.3, %add31.3, !dbg !1098
    #dbg_value(i32 %add46.3, !1053, !DIExpression(), !1099)
  %sub47.3 = sub nsw i32 %add31.3, %add43.3, !dbg !1098
    #dbg_value(i32 %sub47.3, !1054, !DIExpression(), !1099)
  %add48.3 = add nsw i32 %add46.3, %add44.3, !dbg !1098
    #dbg_value(i32 %add48.3, !1038, !DIExpression(DW_OP_LLVM_fragment, 384, 32), !1064)
  %sub51.3 = sub nsw i32 %add44.3, %add46.3, !dbg !1098
    #dbg_value(i32 %sub51.3, !1038, !DIExpression(DW_OP_LLVM_fragment, 448, 32), !1064)
  %add55.3 = add nsw i32 %sub47.3, %sub45.3, !dbg !1098
    #dbg_value(i32 %add55.3, !1038, !DIExpression(DW_OP_LLVM_fragment, 416, 32), !1064)
  %sub59.3 = sub nsw i32 %sub45.3, %sub47.3, !dbg !1098
    #dbg_value(i32 %sub59.3, !1038, !DIExpression(DW_OP_LLVM_fragment, 480, 32), !1064)
    #dbg_value(i64 4, !1046, !DIExpression(), !1065)
    #dbg_value(!DIArgList(ptr %add.ptr.2, i64 %idx.ext), !1034, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1064)
    #dbg_value(!DIArgList(ptr %add.ptr64.2, i64 %idx.ext63), !1036, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1064)
    #dbg_value(i32 0, !1055, !DIExpression(), !1102)
    #dbg_value(i32 0, !1045, !DIExpression(), !1064)
    #dbg_value(i64 0, !1055, !DIExpression(), !1102)
    #dbg_value(i32 0, !1045, !DIExpression(), !1064)
  %add78 = add nsw i32 %add48.1, %add48, !dbg !1103
    #dbg_value(i32 %add78, !1057, !DIExpression(), !1104)
  %sub86 = sub nsw i32 %add48, %add48.1, !dbg !1103
    #dbg_value(i32 %sub86, !1061, !DIExpression(), !1104)
  %add94 = add nsw i32 %add48.3, %add48.2, !dbg !1103
    #dbg_value(i32 %add94, !1062, !DIExpression(), !1104)
  %sub102 = sub nsw i32 %add48.2, %add48.3, !dbg !1103
    #dbg_value(i32 %sub102, !1063, !DIExpression(), !1104)
  %add103 = add nsw i32 %add94, %add78, !dbg !1103
    #dbg_value(i32 %add103, !1041, !DIExpression(), !1064)
  %sub104 = sub nsw i32 %add78, %add94, !dbg !1103
    #dbg_value(i32 %sub104, !1043, !DIExpression(), !1064)
  %add105 = add nsw i32 %sub102, %sub86, !dbg !1103
    #dbg_value(i32 %add105, !1042, !DIExpression(), !1064)
  %sub106 = sub nsw i32 %sub86, %sub102, !dbg !1103
    #dbg_value(i32 %sub106, !1044, !DIExpression(), !1064)
    #dbg_value(i32 %add103, !1105, !DIExpression(), !1111)
  %shr.i = lshr i32 %add103, 15, !dbg !1113
  %and.i = and i32 %shr.i, 65537, !dbg !1114
  %mul.i = mul nuw i32 %and.i, 65535, !dbg !1115
    #dbg_value(i32 %mul.i, !1110, !DIExpression(), !1111)
  %add.i = add i32 %mul.i, %add103, !dbg !1116
  %xor.i = xor i32 %add.i, %mul.i, !dbg !1117
    #dbg_value(i32 %add105, !1105, !DIExpression(), !1118)
  %shr.i169 = lshr i32 %add105, 15, !dbg !1120
  %and.i170 = and i32 %shr.i169, 65537, !dbg !1121
  %mul.i171 = mul nuw i32 %and.i170, 65535, !dbg !1122
    #dbg_value(i32 %mul.i171, !1110, !DIExpression(), !1118)
  %add.i172 = add i32 %mul.i171, %add105, !dbg !1123
  %xor.i173 = xor i32 %add.i172, %mul.i171, !dbg !1124
    #dbg_value(i32 %sub104, !1105, !DIExpression(), !1125)
  %shr.i174 = lshr i32 %sub104, 15, !dbg !1127
  %and.i175 = and i32 %shr.i174, 65537, !dbg !1128
  %mul.i176 = mul nuw i32 %and.i175, 65535, !dbg !1129
    #dbg_value(i32 %mul.i176, !1110, !DIExpression(), !1125)
  %add.i177 = add i32 %mul.i176, %sub104, !dbg !1130
  %xor.i178 = xor i32 %add.i177, %mul.i176, !dbg !1131
    #dbg_value(i32 %sub106, !1105, !DIExpression(), !1132)
  %shr.i179 = lshr i32 %sub106, 15, !dbg !1134
  %and.i180 = and i32 %shr.i179, 65537, !dbg !1135
  %mul.i181 = mul nuw i32 %and.i180, 65535, !dbg !1136
    #dbg_value(i32 %mul.i181, !1110, !DIExpression(), !1132)
  %add.i182 = add i32 %mul.i181, %sub106, !dbg !1137
  %xor.i183 = xor i32 %add.i182, %mul.i181, !dbg !1138
  %add110 = add i32 %xor.i173, %xor.i, !dbg !1139
  %add112 = add i32 %add110, %xor.i178, !dbg !1140
  %add113 = add i32 %add112, %xor.i183, !dbg !1141
    #dbg_value(i32 %add113, !1045, !DIExpression(), !1064)
    #dbg_value(i64 1, !1055, !DIExpression(), !1102)
  %add78.1 = add nsw i32 %add55.1, %add55, !dbg !1103
    #dbg_value(i32 %add78.1, !1057, !DIExpression(), !1104)
  %sub86.1 = sub nsw i32 %add55, %add55.1, !dbg !1103
    #dbg_value(i32 %sub86.1, !1061, !DIExpression(), !1104)
  %add94.1 = add nsw i32 %add55.3, %add55.2, !dbg !1103
    #dbg_value(i32 %add94.1, !1062, !DIExpression(), !1104)
  %sub102.1 = sub nsw i32 %add55.2, %add55.3, !dbg !1103
    #dbg_value(i32 %sub102.1, !1063, !DIExpression(), !1104)
  %add103.1 = add nsw i32 %add94.1, %add78.1, !dbg !1103
    #dbg_value(i32 %add103.1, !1041, !DIExpression(), !1064)
  %sub104.1 = sub nsw i32 %add78.1, %add94.1, !dbg !1103
    #dbg_value(i32 %sub104.1, !1043, !DIExpression(), !1064)
  %add105.1 = add nsw i32 %sub102.1, %sub86.1, !dbg !1103
    #dbg_value(i32 %add105.1, !1042, !DIExpression(), !1064)
  %sub106.1 = sub nsw i32 %sub86.1, %sub102.1, !dbg !1103
    #dbg_value(i32 %sub106.1, !1044, !DIExpression(), !1064)
    #dbg_value(i32 %add103.1, !1105, !DIExpression(), !1111)
  %shr.i.1 = lshr i32 %add103.1, 15, !dbg !1113
  %and.i.1 = and i32 %shr.i.1, 65537, !dbg !1114
  %mul.i.1 = mul nuw i32 %and.i.1, 65535, !dbg !1115
    #dbg_value(i32 %mul.i.1, !1110, !DIExpression(), !1111)
  %add.i.1 = add i32 %mul.i.1, %add103.1, !dbg !1116
  %xor.i.1 = xor i32 %add.i.1, %mul.i.1, !dbg !1117
    #dbg_value(i32 %add105.1, !1105, !DIExpression(), !1118)
  %shr.i169.1 = lshr i32 %add105.1, 15, !dbg !1120
  %and.i170.1 = and i32 %shr.i169.1, 65537, !dbg !1121
  %mul.i171.1 = mul nuw i32 %and.i170.1, 65535, !dbg !1122
    #dbg_value(i32 %mul.i171.1, !1110, !DIExpression(), !1118)
  %add.i172.1 = add i32 %mul.i171.1, %add105.1, !dbg !1123
  %xor.i173.1 = xor i32 %add.i172.1, %mul.i171.1, !dbg !1124
    #dbg_value(i32 %sub104.1, !1105, !DIExpression(), !1125)
  %shr.i174.1 = lshr i32 %sub104.1, 15, !dbg !1127
  %and.i175.1 = and i32 %shr.i174.1, 65537, !dbg !1128
  %mul.i176.1 = mul nuw i32 %and.i175.1, 65535, !dbg !1129
    #dbg_value(i32 %mul.i176.1, !1110, !DIExpression(), !1125)
  %add.i177.1 = add i32 %mul.i176.1, %sub104.1, !dbg !1130
  %xor.i178.1 = xor i32 %add.i177.1, %mul.i176.1, !dbg !1131
    #dbg_value(i32 %sub106.1, !1105, !DIExpression(), !1132)
  %shr.i179.1 = lshr i32 %sub106.1, 15, !dbg !1134
  %and.i180.1 = and i32 %shr.i179.1, 65537, !dbg !1135
  %mul.i181.1 = mul nuw i32 %and.i180.1, 65535, !dbg !1136
    #dbg_value(i32 %mul.i181.1, !1110, !DIExpression(), !1132)
  %add.i182.1 = add i32 %mul.i181.1, %sub106.1, !dbg !1137
  %xor.i183.1 = xor i32 %add.i182.1, %mul.i181.1, !dbg !1138
  %add108.1 = add i32 %xor.i173.1, %add113, !dbg !1142
  %add110.1 = add i32 %add108.1, %xor.i.1, !dbg !1139
  %add112.1 = add i32 %add110.1, %xor.i178.1, !dbg !1140
  %add113.1 = add i32 %add112.1, %xor.i183.1, !dbg !1141
    #dbg_value(i32 %add113.1, !1045, !DIExpression(), !1064)
    #dbg_value(i64 2, !1055, !DIExpression(), !1102)
  %add78.2 = add nsw i32 %sub51.1, %sub51, !dbg !1103
    #dbg_value(i32 %add78.2, !1057, !DIExpression(), !1104)
  %sub86.2 = sub nsw i32 %sub51, %sub51.1, !dbg !1103
    #dbg_value(i32 %sub86.2, !1061, !DIExpression(), !1104)
  %add94.2 = add nsw i32 %sub51.3, %sub51.2, !dbg !1103
    #dbg_value(i32 %add94.2, !1062, !DIExpression(), !1104)
  %sub102.2 = sub nsw i32 %sub51.2, %sub51.3, !dbg !1103
    #dbg_value(i32 %sub102.2, !1063, !DIExpression(), !1104)
  %add103.2 = add nsw i32 %add94.2, %add78.2, !dbg !1103
    #dbg_value(i32 %add103.2, !1041, !DIExpression(), !1064)
  %sub104.2 = sub nsw i32 %add78.2, %add94.2, !dbg !1103
    #dbg_value(i32 %sub104.2, !1043, !DIExpression(), !1064)
  %add105.2 = add nsw i32 %sub102.2, %sub86.2, !dbg !1103
    #dbg_value(i32 %add105.2, !1042, !DIExpression(), !1064)
  %sub106.2 = sub nsw i32 %sub86.2, %sub102.2, !dbg !1103
    #dbg_value(i32 %sub106.2, !1044, !DIExpression(), !1064)
    #dbg_value(i32 %add103.2, !1105, !DIExpression(), !1111)
  %shr.i.2 = lshr i32 %add103.2, 15, !dbg !1113
  %and.i.2 = and i32 %shr.i.2, 65537, !dbg !1114
  %mul.i.2 = mul nuw i32 %and.i.2, 65535, !dbg !1115
    #dbg_value(i32 %mul.i.2, !1110, !DIExpression(), !1111)
  %add.i.2 = add i32 %mul.i.2, %add103.2, !dbg !1116
  %xor.i.2 = xor i32 %add.i.2, %mul.i.2, !dbg !1117
    #dbg_value(i32 %add105.2, !1105, !DIExpression(), !1118)
  %shr.i169.2 = lshr i32 %add105.2, 15, !dbg !1120
  %and.i170.2 = and i32 %shr.i169.2, 65537, !dbg !1121
  %mul.i171.2 = mul nuw i32 %and.i170.2, 65535, !dbg !1122
    #dbg_value(i32 %mul.i171.2, !1110, !DIExpression(), !1118)
  %add.i172.2 = add i32 %mul.i171.2, %add105.2, !dbg !1123
  %xor.i173.2 = xor i32 %add.i172.2, %mul.i171.2, !dbg !1124
    #dbg_value(i32 %sub104.2, !1105, !DIExpression(), !1125)
  %shr.i174.2 = lshr i32 %sub104.2, 15, !dbg !1127
  %and.i175.2 = and i32 %shr.i174.2, 65537, !dbg !1128
  %mul.i176.2 = mul nuw i32 %and.i175.2, 65535, !dbg !1129
    #dbg_value(i32 %mul.i176.2, !1110, !DIExpression(), !1125)
  %add.i177.2 = add i32 %mul.i176.2, %sub104.2, !dbg !1130
  %xor.i178.2 = xor i32 %add.i177.2, %mul.i176.2, !dbg !1131
    #dbg_value(i32 %sub106.2, !1105, !DIExpression(), !1132)
  %shr.i179.2 = lshr i32 %sub106.2, 15, !dbg !1134
  %and.i180.2 = and i32 %shr.i179.2, 65537, !dbg !1135
  %mul.i181.2 = mul nuw i32 %and.i180.2, 65535, !dbg !1136
    #dbg_value(i32 %mul.i181.2, !1110, !DIExpression(), !1132)
  %add.i182.2 = add i32 %mul.i181.2, %sub106.2, !dbg !1137
  %xor.i183.2 = xor i32 %add.i182.2, %mul.i181.2, !dbg !1138
  %add108.2 = add i32 %xor.i173.2, %add113.1, !dbg !1142
  %add110.2 = add i32 %add108.2, %xor.i.2, !dbg !1139
  %add112.2 = add i32 %add110.2, %xor.i178.2, !dbg !1140
  %add113.2 = add i32 %add112.2, %xor.i183.2, !dbg !1141
    #dbg_value(i32 %add113.2, !1045, !DIExpression(), !1064)
    #dbg_value(i64 3, !1055, !DIExpression(), !1102)
  %add78.3 = add nsw i32 %sub59.1, %sub59, !dbg !1103
    #dbg_value(i32 %add78.3, !1057, !DIExpression(), !1104)
  %sub86.3 = sub nsw i32 %sub59, %sub59.1, !dbg !1103
    #dbg_value(i32 %sub86.3, !1061, !DIExpression(), !1104)
  %add94.3 = add nsw i32 %sub59.3, %sub59.2, !dbg !1103
    #dbg_value(i32 %add94.3, !1062, !DIExpression(), !1104)
  %sub102.3 = sub nsw i32 %sub59.2, %sub59.3, !dbg !1103
    #dbg_value(i32 %sub102.3, !1063, !DIExpression(), !1104)
  %add103.3 = add nsw i32 %add94.3, %add78.3, !dbg !1103
    #dbg_value(i32 %add103.3, !1041, !DIExpression(), !1064)
  %sub104.3 = sub nsw i32 %add78.3, %add94.3, !dbg !1103
    #dbg_value(i32 %sub104.3, !1043, !DIExpression(), !1064)
  %add105.3 = add nsw i32 %sub102.3, %sub86.3, !dbg !1103
    #dbg_value(i32 %add105.3, !1042, !DIExpression(), !1064)
  %sub106.3 = sub nsw i32 %sub86.3, %sub102.3, !dbg !1103
    #dbg_value(i32 %sub106.3, !1044, !DIExpression(), !1064)
    #dbg_value(i32 %add103.3, !1105, !DIExpression(), !1111)
  %shr.i.3 = lshr i32 %add103.3, 15, !dbg !1113
  %and.i.3 = and i32 %shr.i.3, 65537, !dbg !1114
  %mul.i.3 = mul nuw i32 %and.i.3, 65535, !dbg !1115
    #dbg_value(i32 %mul.i.3, !1110, !DIExpression(), !1111)
  %add.i.3 = add i32 %mul.i.3, %add103.3, !dbg !1116
  %xor.i.3 = xor i32 %add.i.3, %mul.i.3, !dbg !1117
    #dbg_value(i32 %add105.3, !1105, !DIExpression(), !1118)
  %shr.i169.3 = lshr i32 %add105.3, 15, !dbg !1120
  %and.i170.3 = and i32 %shr.i169.3, 65537, !dbg !1121
  %mul.i171.3 = mul nuw i32 %and.i170.3, 65535, !dbg !1122
    #dbg_value(i32 %mul.i171.3, !1110, !DIExpression(), !1118)
  %add.i172.3 = add i32 %mul.i171.3, %add105.3, !dbg !1123
  %xor.i173.3 = xor i32 %add.i172.3, %mul.i171.3, !dbg !1124
    #dbg_value(i32 %sub104.3, !1105, !DIExpression(), !1125)
  %shr.i174.3 = lshr i32 %sub104.3, 15, !dbg !1127
  %and.i175.3 = and i32 %shr.i174.3, 65537, !dbg !1128
  %mul.i176.3 = mul nuw i32 %and.i175.3, 65535, !dbg !1129
    #dbg_value(i32 %mul.i176.3, !1110, !DIExpression(), !1125)
  %add.i177.3 = add i32 %mul.i176.3, %sub104.3, !dbg !1130
  %xor.i178.3 = xor i32 %add.i177.3, %mul.i176.3, !dbg !1131
    #dbg_value(i32 %sub106.3, !1105, !DIExpression(), !1132)
  %shr.i179.3 = lshr i32 %sub106.3, 15, !dbg !1134
  %and.i180.3 = and i32 %shr.i179.3, 65537, !dbg !1135
  %mul.i181.3 = mul nuw i32 %and.i180.3, 65535, !dbg !1136
    #dbg_value(i32 %mul.i181.3, !1110, !DIExpression(), !1132)
  %add.i182.3 = add i32 %mul.i181.3, %sub106.3, !dbg !1137
  %xor.i183.3 = xor i32 %add.i182.3, %mul.i181.3, !dbg !1138
  %add108.3 = add i32 %xor.i173.3, %add113.2, !dbg !1142
  %add110.3 = add i32 %add108.3, %xor.i.3, !dbg !1139
  %add112.3 = add i32 %add110.3, %xor.i178.3, !dbg !1140
  %add113.3 = add i32 %add112.3, %xor.i183.3, !dbg !1141
    #dbg_value(i32 %add113.3, !1045, !DIExpression(), !1064)
    #dbg_value(i64 4, !1055, !DIExpression(), !1102)
  %conv118 = and i32 %add113.3, 65535, !dbg !1143
  %shr = lshr i32 %add113.3, 16, !dbg !1144
  %add119 = add nuw nsw i32 %conv118, %shr, !dbg !1145
  %shr120 = lshr i32 %add119, 1, !dbg !1146
  ret i32 %shr120, !dbg !1147
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define internal range(i32 -2147483648, 2147483647) i32 @x264_pixel_satd_4x8(ptr nocapture noundef readonly %pix1, i32 noundef %i_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_pix2) #5 !dbg !1148 {
entry:
    #dbg_value(ptr %pix1, !1150, !DIExpression(), !1155)
    #dbg_value(i32 %i_pix1, !1151, !DIExpression(), !1155)
    #dbg_value(ptr %pix2, !1152, !DIExpression(), !1155)
    #dbg_value(i32 %i_pix2, !1153, !DIExpression(), !1155)
  %call = tail call i32 @x264_pixel_satd_4x4(ptr noundef %pix1, i32 noundef %i_pix1, ptr noundef %pix2, i32 noundef %i_pix2), !dbg !1156
  %mul = shl nsw i32 %i_pix1, 2, !dbg !1156
  %idx.ext = sext i32 %mul to i64, !dbg !1156
  %add.ptr = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext, !dbg !1156
  %mul1 = shl nsw i32 %i_pix2, 2, !dbg !1156
  %idx.ext2 = sext i32 %mul1 to i64, !dbg !1156
  %add.ptr3 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext2, !dbg !1156
  %call4 = tail call i32 @x264_pixel_satd_4x4(ptr noundef %add.ptr, i32 noundef %i_pix1, ptr noundef %add.ptr3, i32 noundef %i_pix2), !dbg !1156
  %add = add nsw i32 %call4, %call, !dbg !1156
    #dbg_value(i32 %add, !1154, !DIExpression(), !1155)
  ret i32 %add, !dbg !1156
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define internal range(i32 -1073741824, 1073741824) i32 @x264_pixel_satd_4x4(ptr nocapture noundef readonly %pix1, i32 noundef %i_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_pix2) #5 !dbg !1157 {
entry:
    #dbg_value(ptr %pix1, !1159, !DIExpression(), !1185)
    #dbg_value(i32 %i_pix1, !1160, !DIExpression(), !1185)
    #dbg_value(ptr %pix2, !1161, !DIExpression(), !1185)
    #dbg_value(i32 %i_pix2, !1162, !DIExpression(), !1185)
    #dbg_value(i32 0, !1173, !DIExpression(), !1185)
    #dbg_value(i32 0, !1174, !DIExpression(), !1186)
  %idx.ext = sext i32 %i_pix1 to i64
  %idx.ext31 = sext i32 %i_pix2 to i64
    #dbg_value(ptr %pix1, !1159, !DIExpression(), !1185)
    #dbg_value(ptr %pix2, !1161, !DIExpression(), !1185)
    #dbg_value(i64 0, !1174, !DIExpression(), !1186)
  %0 = load i8, ptr %pix1, align 1, !dbg !1187
  %conv = zext i8 %0 to i32, !dbg !1187
  %1 = load i8, ptr %pix2, align 1, !dbg !1190
  %conv2 = zext i8 %1 to i32, !dbg !1190
  %sub = sub nsw i32 %conv, %conv2, !dbg !1191
    #dbg_value(i32 %sub, !1167, !DIExpression(), !1185)
  %arrayidx3 = getelementptr inbounds i8, ptr %pix1, i64 1, !dbg !1192
  %2 = load i8, ptr %arrayidx3, align 1, !dbg !1192
  %conv4 = zext i8 %2 to i32, !dbg !1192
  %arrayidx5 = getelementptr inbounds i8, ptr %pix2, i64 1, !dbg !1193
  %3 = load i8, ptr %arrayidx5, align 1, !dbg !1193
  %conv6 = zext i8 %3 to i32, !dbg !1193
  %sub7 = sub nsw i32 %conv4, %conv6, !dbg !1194
    #dbg_value(i32 %sub7, !1168, !DIExpression(), !1185)
  %add = add nsw i32 %sub7, %sub, !dbg !1195
  %sub8 = sub nsw i32 %sub, %sub7, !dbg !1196
  %shl = shl nsw i32 %sub8, 16, !dbg !1197
  %add9 = add nsw i32 %add, %shl, !dbg !1198
    #dbg_value(i32 %add9, !1171, !DIExpression(), !1185)
  %arrayidx10 = getelementptr inbounds i8, ptr %pix1, i64 2, !dbg !1199
  %4 = load i8, ptr %arrayidx10, align 1, !dbg !1199
  %conv11 = zext i8 %4 to i32, !dbg !1199
  %arrayidx12 = getelementptr inbounds i8, ptr %pix2, i64 2, !dbg !1200
  %5 = load i8, ptr %arrayidx12, align 1, !dbg !1200
  %conv13 = zext i8 %5 to i32, !dbg !1200
  %sub14 = sub nsw i32 %conv11, %conv13, !dbg !1201
    #dbg_value(i32 %sub14, !1169, !DIExpression(), !1185)
  %arrayidx15 = getelementptr inbounds i8, ptr %pix1, i64 3, !dbg !1202
  %6 = load i8, ptr %arrayidx15, align 1, !dbg !1202
  %conv16 = zext i8 %6 to i32, !dbg !1202
  %arrayidx17 = getelementptr inbounds i8, ptr %pix2, i64 3, !dbg !1203
  %7 = load i8, ptr %arrayidx17, align 1, !dbg !1203
  %conv18 = zext i8 %7 to i32, !dbg !1203
  %sub19 = sub nsw i32 %conv16, %conv18, !dbg !1204
    #dbg_value(i32 %sub19, !1170, !DIExpression(), !1185)
  %add20 = add nsw i32 %sub19, %sub14, !dbg !1205
  %sub21 = sub nsw i32 %sub14, %sub19, !dbg !1206
  %shl22 = shl nsw i32 %sub21, 16, !dbg !1207
  %add23 = add nsw i32 %add20, %shl22, !dbg !1208
    #dbg_value(i32 %add23, !1172, !DIExpression(), !1185)
  %add24 = add nsw i32 %add23, %add9, !dbg !1209
    #dbg_value(i32 %add24, !1163, !DIExpression(DW_OP_LLVM_fragment, 0, 32), !1185)
  %sub27 = sub nsw i32 %add9, %add23, !dbg !1210
    #dbg_value(i32 %sub27, !1163, !DIExpression(DW_OP_LLVM_fragment, 32, 32), !1185)
    #dbg_value(i64 1, !1174, !DIExpression(), !1186)
  %add.ptr = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext, !dbg !1211
    #dbg_value(ptr %add.ptr, !1159, !DIExpression(), !1185)
  %add.ptr32 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext31, !dbg !1212
    #dbg_value(ptr %add.ptr32, !1161, !DIExpression(), !1185)
  %8 = load i8, ptr %add.ptr, align 1, !dbg !1187
  %conv.1 = zext i8 %8 to i32, !dbg !1187
  %9 = load i8, ptr %add.ptr32, align 1, !dbg !1190
  %conv2.1 = zext i8 %9 to i32, !dbg !1190
  %sub.1 = sub nsw i32 %conv.1, %conv2.1, !dbg !1191
    #dbg_value(i32 %sub.1, !1167, !DIExpression(), !1185)
  %arrayidx3.1 = getelementptr inbounds i8, ptr %add.ptr, i64 1, !dbg !1192
  %10 = load i8, ptr %arrayidx3.1, align 1, !dbg !1192
  %conv4.1 = zext i8 %10 to i32, !dbg !1192
  %arrayidx5.1 = getelementptr inbounds i8, ptr %add.ptr32, i64 1, !dbg !1193
  %11 = load i8, ptr %arrayidx5.1, align 1, !dbg !1193
  %conv6.1 = zext i8 %11 to i32, !dbg !1193
  %sub7.1 = sub nsw i32 %conv4.1, %conv6.1, !dbg !1194
    #dbg_value(i32 %sub7.1, !1168, !DIExpression(), !1185)
  %add.1 = add nsw i32 %sub7.1, %sub.1, !dbg !1195
  %sub8.1 = sub nsw i32 %sub.1, %sub7.1, !dbg !1196
  %shl.1 = shl nsw i32 %sub8.1, 16, !dbg !1197
  %add9.1 = add nsw i32 %add.1, %shl.1, !dbg !1198
    #dbg_value(i32 %add9.1, !1171, !DIExpression(), !1185)
  %arrayidx10.1 = getelementptr inbounds i8, ptr %add.ptr, i64 2, !dbg !1199
  %12 = load i8, ptr %arrayidx10.1, align 1, !dbg !1199
  %conv11.1 = zext i8 %12 to i32, !dbg !1199
  %arrayidx12.1 = getelementptr inbounds i8, ptr %add.ptr32, i64 2, !dbg !1200
  %13 = load i8, ptr %arrayidx12.1, align 1, !dbg !1200
  %conv13.1 = zext i8 %13 to i32, !dbg !1200
  %sub14.1 = sub nsw i32 %conv11.1, %conv13.1, !dbg !1201
    #dbg_value(i32 %sub14.1, !1169, !DIExpression(), !1185)
  %arrayidx15.1 = getelementptr inbounds i8, ptr %add.ptr, i64 3, !dbg !1202
  %14 = load i8, ptr %arrayidx15.1, align 1, !dbg !1202
  %conv16.1 = zext i8 %14 to i32, !dbg !1202
  %arrayidx17.1 = getelementptr inbounds i8, ptr %add.ptr32, i64 3, !dbg !1203
  %15 = load i8, ptr %arrayidx17.1, align 1, !dbg !1203
  %conv18.1 = zext i8 %15 to i32, !dbg !1203
  %sub19.1 = sub nsw i32 %conv16.1, %conv18.1, !dbg !1204
    #dbg_value(i32 %sub19.1, !1170, !DIExpression(), !1185)
  %add20.1 = add nsw i32 %sub19.1, %sub14.1, !dbg !1205
  %sub21.1 = sub nsw i32 %sub14.1, %sub19.1, !dbg !1206
  %shl22.1 = shl nsw i32 %sub21.1, 16, !dbg !1207
  %add23.1 = add nsw i32 %add20.1, %shl22.1, !dbg !1208
    #dbg_value(i32 %add23.1, !1172, !DIExpression(), !1185)
  %add24.1 = add nsw i32 %add23.1, %add9.1, !dbg !1209
    #dbg_value(i32 %add24.1, !1163, !DIExpression(DW_OP_LLVM_fragment, 64, 32), !1185)
  %sub27.1 = sub nsw i32 %add9.1, %add23.1, !dbg !1210
    #dbg_value(i32 %sub27.1, !1163, !DIExpression(DW_OP_LLVM_fragment, 96, 32), !1185)
    #dbg_value(i64 2, !1174, !DIExpression(), !1186)
  %add.ptr.1 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.ext, !dbg !1211
    #dbg_value(ptr %add.ptr.1, !1159, !DIExpression(), !1185)
  %add.ptr32.1 = getelementptr inbounds i8, ptr %add.ptr32, i64 %idx.ext31, !dbg !1212
    #dbg_value(ptr %add.ptr32.1, !1161, !DIExpression(), !1185)
  %16 = load i8, ptr %add.ptr.1, align 1, !dbg !1187
  %conv.2 = zext i8 %16 to i32, !dbg !1187
  %17 = load i8, ptr %add.ptr32.1, align 1, !dbg !1190
  %conv2.2 = zext i8 %17 to i32, !dbg !1190
  %sub.2 = sub nsw i32 %conv.2, %conv2.2, !dbg !1191
    #dbg_value(i32 %sub.2, !1167, !DIExpression(), !1185)
  %arrayidx3.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 1, !dbg !1192
  %18 = load i8, ptr %arrayidx3.2, align 1, !dbg !1192
  %conv4.2 = zext i8 %18 to i32, !dbg !1192
  %arrayidx5.2 = getelementptr inbounds i8, ptr %add.ptr32.1, i64 1, !dbg !1193
  %19 = load i8, ptr %arrayidx5.2, align 1, !dbg !1193
  %conv6.2 = zext i8 %19 to i32, !dbg !1193
  %sub7.2 = sub nsw i32 %conv4.2, %conv6.2, !dbg !1194
    #dbg_value(i32 %sub7.2, !1168, !DIExpression(), !1185)
  %add.2 = add nsw i32 %sub7.2, %sub.2, !dbg !1195
  %sub8.2 = sub nsw i32 %sub.2, %sub7.2, !dbg !1196
  %shl.2 = shl nsw i32 %sub8.2, 16, !dbg !1197
  %add9.2 = add nsw i32 %add.2, %shl.2, !dbg !1198
    #dbg_value(i32 %add9.2, !1171, !DIExpression(), !1185)
  %arrayidx10.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 2, !dbg !1199
  %20 = load i8, ptr %arrayidx10.2, align 1, !dbg !1199
  %conv11.2 = zext i8 %20 to i32, !dbg !1199
  %arrayidx12.2 = getelementptr inbounds i8, ptr %add.ptr32.1, i64 2, !dbg !1200
  %21 = load i8, ptr %arrayidx12.2, align 1, !dbg !1200
  %conv13.2 = zext i8 %21 to i32, !dbg !1200
  %sub14.2 = sub nsw i32 %conv11.2, %conv13.2, !dbg !1201
    #dbg_value(i32 %sub14.2, !1169, !DIExpression(), !1185)
  %arrayidx15.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 3, !dbg !1202
  %22 = load i8, ptr %arrayidx15.2, align 1, !dbg !1202
  %conv16.2 = zext i8 %22 to i32, !dbg !1202
  %arrayidx17.2 = getelementptr inbounds i8, ptr %add.ptr32.1, i64 3, !dbg !1203
  %23 = load i8, ptr %arrayidx17.2, align 1, !dbg !1203
  %conv18.2 = zext i8 %23 to i32, !dbg !1203
  %sub19.2 = sub nsw i32 %conv16.2, %conv18.2, !dbg !1204
    #dbg_value(i32 %sub19.2, !1170, !DIExpression(), !1185)
  %add20.2 = add nsw i32 %sub19.2, %sub14.2, !dbg !1205
  %sub21.2 = sub nsw i32 %sub14.2, %sub19.2, !dbg !1206
  %shl22.2 = shl nsw i32 %sub21.2, 16, !dbg !1207
  %add23.2 = add nsw i32 %add20.2, %shl22.2, !dbg !1208
    #dbg_value(i32 %add23.2, !1172, !DIExpression(), !1185)
  %add24.2 = add nsw i32 %add23.2, %add9.2, !dbg !1209
    #dbg_value(i32 %add24.2, !1163, !DIExpression(DW_OP_LLVM_fragment, 128, 32), !1185)
  %sub27.2 = sub nsw i32 %add9.2, %add23.2, !dbg !1210
    #dbg_value(i32 %sub27.2, !1163, !DIExpression(DW_OP_LLVM_fragment, 160, 32), !1185)
    #dbg_value(i64 3, !1174, !DIExpression(), !1186)
  %add.ptr.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 %idx.ext, !dbg !1211
    #dbg_value(ptr %add.ptr.2, !1159, !DIExpression(), !1185)
  %add.ptr32.2 = getelementptr inbounds i8, ptr %add.ptr32.1, i64 %idx.ext31, !dbg !1212
    #dbg_value(ptr %add.ptr32.2, !1161, !DIExpression(), !1185)
  %24 = load i8, ptr %add.ptr.2, align 1, !dbg !1187
  %conv.3 = zext i8 %24 to i32, !dbg !1187
  %25 = load i8, ptr %add.ptr32.2, align 1, !dbg !1190
  %conv2.3 = zext i8 %25 to i32, !dbg !1190
  %sub.3 = sub nsw i32 %conv.3, %conv2.3, !dbg !1191
    #dbg_value(i32 %sub.3, !1167, !DIExpression(), !1185)
  %arrayidx3.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 1, !dbg !1192
  %26 = load i8, ptr %arrayidx3.3, align 1, !dbg !1192
  %conv4.3 = zext i8 %26 to i32, !dbg !1192
  %arrayidx5.3 = getelementptr inbounds i8, ptr %add.ptr32.2, i64 1, !dbg !1193
  %27 = load i8, ptr %arrayidx5.3, align 1, !dbg !1193
  %conv6.3 = zext i8 %27 to i32, !dbg !1193
  %sub7.3 = sub nsw i32 %conv4.3, %conv6.3, !dbg !1194
    #dbg_value(i32 %sub7.3, !1168, !DIExpression(), !1185)
  %add.3 = add nsw i32 %sub7.3, %sub.3, !dbg !1195
  %sub8.3 = sub nsw i32 %sub.3, %sub7.3, !dbg !1196
  %shl.3 = shl nsw i32 %sub8.3, 16, !dbg !1197
  %add9.3 = add nsw i32 %add.3, %shl.3, !dbg !1198
    #dbg_value(i32 %add9.3, !1171, !DIExpression(), !1185)
  %arrayidx10.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 2, !dbg !1199
  %28 = load i8, ptr %arrayidx10.3, align 1, !dbg !1199
  %conv11.3 = zext i8 %28 to i32, !dbg !1199
  %arrayidx12.3 = getelementptr inbounds i8, ptr %add.ptr32.2, i64 2, !dbg !1200
  %29 = load i8, ptr %arrayidx12.3, align 1, !dbg !1200
  %conv13.3 = zext i8 %29 to i32, !dbg !1200
  %sub14.3 = sub nsw i32 %conv11.3, %conv13.3, !dbg !1201
    #dbg_value(i32 %sub14.3, !1169, !DIExpression(), !1185)
  %arrayidx15.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 3, !dbg !1202
  %30 = load i8, ptr %arrayidx15.3, align 1, !dbg !1202
  %conv16.3 = zext i8 %30 to i32, !dbg !1202
  %arrayidx17.3 = getelementptr inbounds i8, ptr %add.ptr32.2, i64 3, !dbg !1203
  %31 = load i8, ptr %arrayidx17.3, align 1, !dbg !1203
  %conv18.3 = zext i8 %31 to i32, !dbg !1203
  %sub19.3 = sub nsw i32 %conv16.3, %conv18.3, !dbg !1204
    #dbg_value(i32 %sub19.3, !1170, !DIExpression(), !1185)
  %add20.3 = add nsw i32 %sub19.3, %sub14.3, !dbg !1205
  %sub21.3 = sub nsw i32 %sub14.3, %sub19.3, !dbg !1206
  %shl22.3 = shl nsw i32 %sub21.3, 16, !dbg !1207
  %add23.3 = add nsw i32 %add20.3, %shl22.3, !dbg !1208
    #dbg_value(i32 %add23.3, !1172, !DIExpression(), !1185)
  %add24.3 = add nsw i32 %add23.3, %add9.3, !dbg !1209
    #dbg_value(i32 %add24.3, !1163, !DIExpression(DW_OP_LLVM_fragment, 192, 32), !1185)
  %sub27.3 = sub nsw i32 %add9.3, %add23.3, !dbg !1210
    #dbg_value(i32 %sub27.3, !1163, !DIExpression(DW_OP_LLVM_fragment, 224, 32), !1185)
    #dbg_value(i64 4, !1174, !DIExpression(), !1186)
    #dbg_value(!DIArgList(ptr %add.ptr.2, i64 %idx.ext), !1159, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1185)
    #dbg_value(!DIArgList(ptr %add.ptr32.2, i64 %idx.ext31), !1161, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1185)
    #dbg_value(i32 0, !1176, !DIExpression(), !1213)
    #dbg_value(i32 0, !1173, !DIExpression(), !1185)
    #dbg_value(i64 0, !1176, !DIExpression(), !1213)
    #dbg_value(i32 0, !1173, !DIExpression(), !1185)
  %add45 = add nsw i32 %add24.1, %add24, !dbg !1214
    #dbg_value(i32 %add45, !1178, !DIExpression(), !1215)
  %sub52 = sub nsw i32 %add24, %add24.1, !dbg !1214
    #dbg_value(i32 %sub52, !1182, !DIExpression(), !1215)
  %add59 = add nsw i32 %add24.3, %add24.2, !dbg !1214
    #dbg_value(i32 %add59, !1183, !DIExpression(), !1215)
  %sub66 = sub nsw i32 %add24.2, %add24.3, !dbg !1214
    #dbg_value(i32 %sub66, !1184, !DIExpression(), !1215)
  %add67 = add nsw i32 %add59, %add45, !dbg !1214
    #dbg_value(i32 %add67, !1167, !DIExpression(), !1185)
  %sub68 = sub nsw i32 %add45, %add59, !dbg !1214
    #dbg_value(i32 %sub68, !1169, !DIExpression(), !1185)
  %add69 = add nsw i32 %sub66, %sub52, !dbg !1214
    #dbg_value(i32 %add69, !1168, !DIExpression(), !1185)
  %sub70 = sub nsw i32 %sub52, %sub66, !dbg !1214
    #dbg_value(i32 %sub70, !1170, !DIExpression(), !1185)
    #dbg_value(i32 %add67, !1105, !DIExpression(), !1216)
  %shr.i = lshr i32 %add67, 15, !dbg !1218
  %and.i = and i32 %shr.i, 65537, !dbg !1219
  %mul.i = mul nuw i32 %and.i, 65535, !dbg !1220
    #dbg_value(i32 %mul.i, !1110, !DIExpression(), !1216)
  %add.i = add i32 %mul.i, %add67, !dbg !1221
  %xor.i = xor i32 %add.i, %mul.i, !dbg !1222
    #dbg_value(i32 %add69, !1105, !DIExpression(), !1223)
  %shr.i122 = lshr i32 %add69, 15, !dbg !1225
  %and.i123 = and i32 %shr.i122, 65537, !dbg !1226
  %mul.i124 = mul nuw i32 %and.i123, 65535, !dbg !1227
    #dbg_value(i32 %mul.i124, !1110, !DIExpression(), !1223)
  %add.i125 = add i32 %mul.i124, %add69, !dbg !1228
  %xor.i126 = xor i32 %add.i125, %mul.i124, !dbg !1229
  %add72 = add i32 %xor.i, %xor.i126, !dbg !1230
    #dbg_value(i32 %sub68, !1105, !DIExpression(), !1231)
  %shr.i127 = lshr i32 %sub68, 15, !dbg !1233
  %and.i128 = and i32 %shr.i127, 65537, !dbg !1234
  %mul.i129 = mul nuw i32 %and.i128, 65535, !dbg !1235
    #dbg_value(i32 %mul.i129, !1110, !DIExpression(), !1231)
  %add.i130 = add i32 %mul.i129, %sub68, !dbg !1236
  %xor.i131 = xor i32 %add.i130, %mul.i129, !dbg !1237
  %add74 = add i32 %add72, %xor.i131, !dbg !1238
    #dbg_value(i32 %sub70, !1105, !DIExpression(), !1239)
  %shr.i132 = lshr i32 %sub70, 15, !dbg !1241
  %and.i133 = and i32 %shr.i132, 65537, !dbg !1242
  %mul.i134 = mul nuw i32 %and.i133, 65535, !dbg !1243
    #dbg_value(i32 %mul.i134, !1110, !DIExpression(), !1239)
  %add.i135 = add i32 %mul.i134, %sub70, !dbg !1244
  %xor.i136 = xor i32 %add.i135, %mul.i134, !dbg !1245
  %add76 = add i32 %add74, %xor.i136, !dbg !1246
    #dbg_value(i32 %add76, !1167, !DIExpression(), !1185)
  %conv78 = and i32 %add76, 65535, !dbg !1247
  %shr = lshr i32 %add76, 16, !dbg !1248
  %add80 = add nuw nsw i32 %shr, %conv78, !dbg !1249
    #dbg_value(i32 %add80, !1173, !DIExpression(), !1185)
    #dbg_value(i64 1, !1176, !DIExpression(), !1213)
  %add45.1 = add nsw i32 %sub27.1, %sub27, !dbg !1214
    #dbg_value(i32 %add45.1, !1178, !DIExpression(), !1215)
  %sub52.1 = sub nsw i32 %sub27, %sub27.1, !dbg !1214
    #dbg_value(i32 %sub52.1, !1182, !DIExpression(), !1215)
  %add59.1 = add nsw i32 %sub27.3, %sub27.2, !dbg !1214
    #dbg_value(i32 %add59.1, !1183, !DIExpression(), !1215)
  %sub66.1 = sub nsw i32 %sub27.2, %sub27.3, !dbg !1214
    #dbg_value(i32 %sub66.1, !1184, !DIExpression(), !1215)
  %add67.1 = add nsw i32 %add59.1, %add45.1, !dbg !1214
    #dbg_value(i32 %add67.1, !1167, !DIExpression(), !1185)
  %sub68.1 = sub nsw i32 %add45.1, %add59.1, !dbg !1214
    #dbg_value(i32 %sub68.1, !1169, !DIExpression(), !1185)
  %add69.1 = add nsw i32 %sub66.1, %sub52.1, !dbg !1214
    #dbg_value(i32 %add69.1, !1168, !DIExpression(), !1185)
  %sub70.1 = sub nsw i32 %sub52.1, %sub66.1, !dbg !1214
    #dbg_value(i32 %sub70.1, !1170, !DIExpression(), !1185)
    #dbg_value(i32 %add67.1, !1105, !DIExpression(), !1216)
  %shr.i.1 = lshr i32 %add67.1, 15, !dbg !1218
  %and.i.1 = and i32 %shr.i.1, 65537, !dbg !1219
  %mul.i.1 = mul nuw i32 %and.i.1, 65535, !dbg !1220
    #dbg_value(i32 %mul.i.1, !1110, !DIExpression(), !1216)
  %add.i.1 = add i32 %mul.i.1, %add67.1, !dbg !1221
  %xor.i.1 = xor i32 %add.i.1, %mul.i.1, !dbg !1222
    #dbg_value(i32 %add69.1, !1105, !DIExpression(), !1223)
  %shr.i122.1 = lshr i32 %add69.1, 15, !dbg !1225
  %and.i123.1 = and i32 %shr.i122.1, 65537, !dbg !1226
  %mul.i124.1 = mul nuw i32 %and.i123.1, 65535, !dbg !1227
    #dbg_value(i32 %mul.i124.1, !1110, !DIExpression(), !1223)
  %add.i125.1 = add i32 %mul.i124.1, %add69.1, !dbg !1228
  %xor.i126.1 = xor i32 %add.i125.1, %mul.i124.1, !dbg !1229
  %add72.1 = add i32 %xor.i.1, %xor.i126.1, !dbg !1230
    #dbg_value(i32 %sub68.1, !1105, !DIExpression(), !1231)
  %shr.i127.1 = lshr i32 %sub68.1, 15, !dbg !1233
  %and.i128.1 = and i32 %shr.i127.1, 65537, !dbg !1234
  %mul.i129.1 = mul nuw i32 %and.i128.1, 65535, !dbg !1235
    #dbg_value(i32 %mul.i129.1, !1110, !DIExpression(), !1231)
  %add.i130.1 = add i32 %mul.i129.1, %sub68.1, !dbg !1236
  %xor.i131.1 = xor i32 %add.i130.1, %mul.i129.1, !dbg !1237
  %add74.1 = add i32 %add72.1, %xor.i131.1, !dbg !1238
    #dbg_value(i32 %sub70.1, !1105, !DIExpression(), !1239)
  %shr.i132.1 = lshr i32 %sub70.1, 15, !dbg !1241
  %and.i133.1 = and i32 %shr.i132.1, 65537, !dbg !1242
  %mul.i134.1 = mul nuw i32 %and.i133.1, 65535, !dbg !1243
    #dbg_value(i32 %mul.i134.1, !1110, !DIExpression(), !1239)
  %add.i135.1 = add i32 %mul.i134.1, %sub70.1, !dbg !1244
  %xor.i136.1 = xor i32 %add.i135.1, %mul.i134.1, !dbg !1245
  %add76.1 = add i32 %add74.1, %xor.i136.1, !dbg !1246
    #dbg_value(i32 %add76.1, !1167, !DIExpression(), !1185)
  %conv78.1 = and i32 %add76.1, 65535, !dbg !1247
  %shr.1 = lshr i32 %add76.1, 16, !dbg !1248
  %add79.1 = add nuw nsw i32 %shr.1, %add80, !dbg !1250
  %add80.1 = add nuw nsw i32 %add79.1, %conv78.1, !dbg !1249
    #dbg_value(i32 %add80.1, !1173, !DIExpression(), !1185)
    #dbg_value(i64 2, !1176, !DIExpression(), !1213)
  %shr84 = lshr i32 %add80.1, 1, !dbg !1251
  ret i32 %shr84, !dbg !1252
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @x264_pixel_satd_x3_16x16(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #8 !dbg !1253 {
entry:
    #dbg_value(ptr %fenc, !1255, !DIExpression(), !1261)
    #dbg_value(ptr %pix0, !1256, !DIExpression(), !1261)
    #dbg_value(ptr %pix1, !1257, !DIExpression(), !1261)
    #dbg_value(ptr %pix2, !1258, !DIExpression(), !1261)
    #dbg_value(i32 %i_stride, !1259, !DIExpression(), !1261)
    #dbg_value(ptr %scores, !1260, !DIExpression(), !1261)
  %call = tail call i32 @x264_pixel_satd_16x16(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix0, i32 noundef %i_stride), !dbg !1262
  store i32 %call, ptr %scores, align 4, !dbg !1262
  %call1 = tail call i32 @x264_pixel_satd_16x16(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix1, i32 noundef %i_stride), !dbg !1262
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !1262
  store i32 %call1, ptr %arrayidx2, align 4, !dbg !1262
  %call3 = tail call i32 @x264_pixel_satd_16x16(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix2, i32 noundef %i_stride), !dbg !1262
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !1262
  store i32 %call3, ptr %arrayidx4, align 4, !dbg !1262
  ret void, !dbg !1262
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @x264_pixel_satd_x3_16x8(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #8 !dbg !1263 {
entry:
    #dbg_value(ptr %fenc, !1265, !DIExpression(), !1271)
    #dbg_value(ptr %pix0, !1266, !DIExpression(), !1271)
    #dbg_value(ptr %pix1, !1267, !DIExpression(), !1271)
    #dbg_value(ptr %pix2, !1268, !DIExpression(), !1271)
    #dbg_value(i32 %i_stride, !1269, !DIExpression(), !1271)
    #dbg_value(ptr %scores, !1270, !DIExpression(), !1271)
    #dbg_value(ptr %fenc, !1003, !DIExpression(), !1272)
    #dbg_value(i32 16, !1004, !DIExpression(), !1272)
    #dbg_value(ptr %pix0, !1005, !DIExpression(), !1272)
    #dbg_value(i32 %i_stride, !1006, !DIExpression(), !1272)
  %call.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix0, i32 noundef %i_stride), !dbg !1274
  %add.ptr.i = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !1274
  %mul1.i = shl nsw i32 %i_stride, 2, !dbg !1274
  %idx.ext2.i = sext i32 %mul1.i to i64, !dbg !1274
  %add.ptr3.i = getelementptr inbounds i8, ptr %pix0, i64 %idx.ext2.i, !dbg !1274
  %call4.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i, i32 noundef %i_stride), !dbg !1274
    #dbg_value(i32 poison, !1007, !DIExpression(), !1272)
  %add.ptr5.i = getelementptr inbounds i8, ptr %fenc, i64 8, !dbg !1275
  %add.ptr6.i = getelementptr inbounds i8, ptr %pix0, i64 8, !dbg !1275
  %call7.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr5.i, i32 noundef 16, ptr noundef nonnull readonly %add.ptr6.i, i32 noundef %i_stride), !dbg !1275
  %add.ptr11.i = getelementptr inbounds i8, ptr %fenc, i64 72, !dbg !1275
  %add.ptr15.i = getelementptr inbounds i8, ptr %add.ptr6.i, i64 %idx.ext2.i, !dbg !1275
  %call16.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr11.i, i32 noundef 16, ptr noundef nonnull readonly %add.ptr15.i, i32 noundef %i_stride), !dbg !1275
  %add17.i = add nuw nsw i32 %call4.i, %call.i, !dbg !1275
  %add.i = add nuw nsw i32 %add17.i, %call7.i, !dbg !1274
  %add18.i = add nuw nsw i32 %add.i, %call16.i, !dbg !1275
    #dbg_value(i32 %add18.i, !1007, !DIExpression(), !1272)
  store i32 %add18.i, ptr %scores, align 4, !dbg !1276
    #dbg_value(ptr %fenc, !1003, !DIExpression(), !1277)
    #dbg_value(i32 16, !1004, !DIExpression(), !1277)
    #dbg_value(ptr %pix1, !1005, !DIExpression(), !1277)
    #dbg_value(i32 %i_stride, !1006, !DIExpression(), !1277)
  %call.i11 = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix1, i32 noundef %i_stride), !dbg !1279
  %add.ptr3.i15 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext2.i, !dbg !1279
  %call4.i16 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i15, i32 noundef %i_stride), !dbg !1279
    #dbg_value(i32 poison, !1007, !DIExpression(), !1277)
  %add.ptr6.i18 = getelementptr inbounds i8, ptr %pix1, i64 8, !dbg !1280
  %call7.i19 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr5.i, i32 noundef 16, ptr noundef nonnull readonly %add.ptr6.i18, i32 noundef %i_stride), !dbg !1280
  %add.ptr15.i21 = getelementptr inbounds i8, ptr %add.ptr6.i18, i64 %idx.ext2.i, !dbg !1280
  %call16.i22 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr11.i, i32 noundef 16, ptr noundef nonnull readonly %add.ptr15.i21, i32 noundef %i_stride), !dbg !1280
  %add17.i23 = add nuw nsw i32 %call4.i16, %call.i11, !dbg !1280
  %add.i24 = add nuw nsw i32 %add17.i23, %call7.i19, !dbg !1279
  %add18.i25 = add nuw nsw i32 %add.i24, %call16.i22, !dbg !1280
    #dbg_value(i32 %add18.i25, !1007, !DIExpression(), !1277)
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !1276
  store i32 %add18.i25, ptr %arrayidx2, align 4, !dbg !1276
    #dbg_value(ptr %fenc, !1003, !DIExpression(), !1281)
    #dbg_value(i32 16, !1004, !DIExpression(), !1281)
    #dbg_value(ptr %pix2, !1005, !DIExpression(), !1281)
    #dbg_value(i32 %i_stride, !1006, !DIExpression(), !1281)
  %call.i26 = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix2, i32 noundef %i_stride), !dbg !1283
  %add.ptr3.i30 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext2.i, !dbg !1283
  %call4.i31 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i30, i32 noundef %i_stride), !dbg !1283
    #dbg_value(i32 poison, !1007, !DIExpression(), !1281)
  %add.ptr6.i33 = getelementptr inbounds i8, ptr %pix2, i64 8, !dbg !1284
  %call7.i34 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr5.i, i32 noundef 16, ptr noundef nonnull readonly %add.ptr6.i33, i32 noundef %i_stride), !dbg !1284
  %add.ptr15.i36 = getelementptr inbounds i8, ptr %add.ptr6.i33, i64 %idx.ext2.i, !dbg !1284
  %call16.i37 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr11.i, i32 noundef 16, ptr noundef nonnull readonly %add.ptr15.i36, i32 noundef %i_stride), !dbg !1284
  %add17.i38 = add nuw nsw i32 %call4.i31, %call.i26, !dbg !1284
  %add.i39 = add nuw nsw i32 %add17.i38, %call7.i34, !dbg !1283
  %add18.i40 = add nuw nsw i32 %add.i39, %call16.i37, !dbg !1284
    #dbg_value(i32 %add18.i40, !1007, !DIExpression(), !1281)
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !1276
  store i32 %add18.i40, ptr %arrayidx4, align 4, !dbg !1276
  ret void, !dbg !1276
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @x264_pixel_satd_x3_8x16(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #8 !dbg !1285 {
entry:
    #dbg_value(ptr %fenc, !1287, !DIExpression(), !1293)
    #dbg_value(ptr %pix0, !1288, !DIExpression(), !1293)
    #dbg_value(ptr %pix1, !1289, !DIExpression(), !1293)
    #dbg_value(ptr %pix2, !1290, !DIExpression(), !1293)
    #dbg_value(i32 %i_stride, !1291, !DIExpression(), !1293)
    #dbg_value(ptr %scores, !1292, !DIExpression(), !1293)
    #dbg_value(ptr %fenc, !1014, !DIExpression(), !1294)
    #dbg_value(i32 16, !1015, !DIExpression(), !1294)
    #dbg_value(ptr %pix0, !1016, !DIExpression(), !1294)
    #dbg_value(i32 %i_stride, !1017, !DIExpression(), !1294)
  %call.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix0, i32 noundef %i_stride), !dbg !1296
  %add.ptr.i = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !1296
  %mul1.i = shl nsw i32 %i_stride, 2, !dbg !1296
  %idx.ext2.i = sext i32 %mul1.i to i64, !dbg !1296
  %add.ptr3.i = getelementptr inbounds i8, ptr %pix0, i64 %idx.ext2.i, !dbg !1296
  %call4.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i, i32 noundef %i_stride), !dbg !1296
    #dbg_value(i32 poison, !1018, !DIExpression(), !1294)
  %add.ptr7.i = getelementptr inbounds i8, ptr %fenc, i64 128, !dbg !1297
  %mul8.i = shl nsw i32 %i_stride, 3, !dbg !1297
  %idx.ext9.i = sext i32 %mul8.i to i64, !dbg !1297
  %add.ptr10.i = getelementptr inbounds i8, ptr %pix0, i64 %idx.ext9.i, !dbg !1297
  %call11.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr7.i, i32 noundef 16, ptr noundef readonly %add.ptr10.i, i32 noundef %i_stride), !dbg !1297
  %add.ptr14.i = getelementptr inbounds i8, ptr %fenc, i64 192, !dbg !1297
  %mul15.i = mul nsw i32 %i_stride, 12, !dbg !1297
  %idx.ext16.i = sext i32 %mul15.i to i64, !dbg !1297
  %add.ptr17.i = getelementptr inbounds i8, ptr %pix0, i64 %idx.ext16.i, !dbg !1297
  %call18.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr14.i, i32 noundef 16, ptr noundef readonly %add.ptr17.i, i32 noundef %i_stride), !dbg !1297
  %add19.i = add nuw nsw i32 %call4.i, %call.i, !dbg !1297
  %add.i = add nuw nsw i32 %add19.i, %call11.i, !dbg !1296
  %add20.i = add nuw nsw i32 %add.i, %call18.i, !dbg !1297
    #dbg_value(i32 %add20.i, !1018, !DIExpression(), !1294)
  store i32 %add20.i, ptr %scores, align 4, !dbg !1298
    #dbg_value(ptr %fenc, !1014, !DIExpression(), !1299)
    #dbg_value(i32 16, !1015, !DIExpression(), !1299)
    #dbg_value(ptr %pix1, !1016, !DIExpression(), !1299)
    #dbg_value(i32 %i_stride, !1017, !DIExpression(), !1299)
  %call.i11 = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix1, i32 noundef %i_stride), !dbg !1301
  %add.ptr3.i15 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext2.i, !dbg !1301
  %call4.i16 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i15, i32 noundef %i_stride), !dbg !1301
    #dbg_value(i32 poison, !1018, !DIExpression(), !1299)
  %add.ptr10.i20 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext9.i, !dbg !1302
  %call11.i21 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr7.i, i32 noundef 16, ptr noundef readonly %add.ptr10.i20, i32 noundef %i_stride), !dbg !1302
  %add.ptr17.i25 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext16.i, !dbg !1302
  %call18.i26 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr14.i, i32 noundef 16, ptr noundef readonly %add.ptr17.i25, i32 noundef %i_stride), !dbg !1302
  %add19.i27 = add nuw nsw i32 %call4.i16, %call.i11, !dbg !1302
  %add.i28 = add nuw nsw i32 %add19.i27, %call11.i21, !dbg !1301
  %add20.i29 = add nuw nsw i32 %add.i28, %call18.i26, !dbg !1302
    #dbg_value(i32 %add20.i29, !1018, !DIExpression(), !1299)
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !1298
  store i32 %add20.i29, ptr %arrayidx2, align 4, !dbg !1298
    #dbg_value(ptr %fenc, !1014, !DIExpression(), !1303)
    #dbg_value(i32 16, !1015, !DIExpression(), !1303)
    #dbg_value(ptr %pix2, !1016, !DIExpression(), !1303)
    #dbg_value(i32 %i_stride, !1017, !DIExpression(), !1303)
  %call.i30 = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix2, i32 noundef %i_stride), !dbg !1305
  %add.ptr3.i34 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext2.i, !dbg !1305
  %call4.i35 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i34, i32 noundef %i_stride), !dbg !1305
    #dbg_value(i32 poison, !1018, !DIExpression(), !1303)
  %add.ptr10.i39 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext9.i, !dbg !1306
  %call11.i40 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr7.i, i32 noundef 16, ptr noundef readonly %add.ptr10.i39, i32 noundef %i_stride), !dbg !1306
  %add.ptr17.i44 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext16.i, !dbg !1306
  %call18.i45 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr14.i, i32 noundef 16, ptr noundef readonly %add.ptr17.i44, i32 noundef %i_stride), !dbg !1306
  %add19.i46 = add nuw nsw i32 %call4.i35, %call.i30, !dbg !1306
  %add.i47 = add nuw nsw i32 %add19.i46, %call11.i40, !dbg !1305
  %add20.i48 = add nuw nsw i32 %add.i47, %call18.i45, !dbg !1306
    #dbg_value(i32 %add20.i48, !1018, !DIExpression(), !1303)
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !1298
  store i32 %add20.i48, ptr %arrayidx4, align 4, !dbg !1298
  ret void, !dbg !1298
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @x264_pixel_satd_x3_8x8(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #8 !dbg !1307 {
entry:
    #dbg_value(ptr %fenc, !1309, !DIExpression(), !1315)
    #dbg_value(ptr %pix0, !1310, !DIExpression(), !1315)
    #dbg_value(ptr %pix1, !1311, !DIExpression(), !1315)
    #dbg_value(ptr %pix2, !1312, !DIExpression(), !1315)
    #dbg_value(i32 %i_stride, !1313, !DIExpression(), !1315)
    #dbg_value(ptr %scores, !1314, !DIExpression(), !1315)
    #dbg_value(ptr %fenc, !1025, !DIExpression(), !1316)
    #dbg_value(i32 16, !1026, !DIExpression(), !1316)
    #dbg_value(ptr %pix0, !1027, !DIExpression(), !1316)
    #dbg_value(i32 %i_stride, !1028, !DIExpression(), !1316)
  %call.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix0, i32 noundef %i_stride), !dbg !1318
  %add.ptr.i = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !1318
  %mul1.i = shl nsw i32 %i_stride, 2, !dbg !1318
  %idx.ext2.i = sext i32 %mul1.i to i64, !dbg !1318
  %add.ptr3.i = getelementptr inbounds i8, ptr %pix0, i64 %idx.ext2.i, !dbg !1318
  %call4.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i, i32 noundef %i_stride), !dbg !1318
  %add.i = add nuw nsw i32 %call4.i, %call.i, !dbg !1318
    #dbg_value(i32 %add.i, !1029, !DIExpression(), !1316)
  store i32 %add.i, ptr %scores, align 4, !dbg !1319
    #dbg_value(ptr %fenc, !1025, !DIExpression(), !1320)
    #dbg_value(i32 16, !1026, !DIExpression(), !1320)
    #dbg_value(ptr %pix1, !1027, !DIExpression(), !1320)
    #dbg_value(i32 %i_stride, !1028, !DIExpression(), !1320)
  %call.i11 = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix1, i32 noundef %i_stride), !dbg !1322
  %add.ptr3.i15 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext2.i, !dbg !1322
  %call4.i16 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i15, i32 noundef %i_stride), !dbg !1322
  %add.i17 = add nuw nsw i32 %call4.i16, %call.i11, !dbg !1322
    #dbg_value(i32 %add.i17, !1029, !DIExpression(), !1320)
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !1319
  store i32 %add.i17, ptr %arrayidx2, align 4, !dbg !1319
    #dbg_value(ptr %fenc, !1025, !DIExpression(), !1323)
    #dbg_value(i32 16, !1026, !DIExpression(), !1323)
    #dbg_value(ptr %pix2, !1027, !DIExpression(), !1323)
    #dbg_value(i32 %i_stride, !1028, !DIExpression(), !1323)
  %call.i18 = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix2, i32 noundef %i_stride), !dbg !1325
  %add.ptr3.i22 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext2.i, !dbg !1325
  %call4.i23 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i22, i32 noundef %i_stride), !dbg !1325
  %add.i24 = add nuw nsw i32 %call4.i23, %call.i18, !dbg !1325
    #dbg_value(i32 %add.i24, !1029, !DIExpression(), !1323)
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !1319
  store i32 %add.i24, ptr %arrayidx4, align 4, !dbg !1319
  ret void, !dbg !1319
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @x264_pixel_satd_x3_8x4(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #8 !dbg !1326 {
entry:
    #dbg_value(ptr %fenc, !1328, !DIExpression(), !1334)
    #dbg_value(ptr %pix0, !1329, !DIExpression(), !1334)
    #dbg_value(ptr %pix1, !1330, !DIExpression(), !1334)
    #dbg_value(ptr %pix2, !1331, !DIExpression(), !1334)
    #dbg_value(i32 %i_stride, !1332, !DIExpression(), !1334)
    #dbg_value(ptr %scores, !1333, !DIExpression(), !1334)
  %call = tail call i32 @x264_pixel_satd_8x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix0, i32 noundef %i_stride), !dbg !1335
  store i32 %call, ptr %scores, align 4, !dbg !1335
  %call1 = tail call i32 @x264_pixel_satd_8x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix1, i32 noundef %i_stride), !dbg !1335
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !1335
  store i32 %call1, ptr %arrayidx2, align 4, !dbg !1335
  %call3 = tail call i32 @x264_pixel_satd_8x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix2, i32 noundef %i_stride), !dbg !1335
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !1335
  store i32 %call3, ptr %arrayidx4, align 4, !dbg !1335
  ret void, !dbg !1335
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @x264_pixel_satd_x3_4x8(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #8 !dbg !1336 {
entry:
    #dbg_value(ptr %fenc, !1338, !DIExpression(), !1344)
    #dbg_value(ptr %pix0, !1339, !DIExpression(), !1344)
    #dbg_value(ptr %pix1, !1340, !DIExpression(), !1344)
    #dbg_value(ptr %pix2, !1341, !DIExpression(), !1344)
    #dbg_value(i32 %i_stride, !1342, !DIExpression(), !1344)
    #dbg_value(ptr %scores, !1343, !DIExpression(), !1344)
    #dbg_value(ptr %fenc, !1150, !DIExpression(), !1345)
    #dbg_value(i32 16, !1151, !DIExpression(), !1345)
    #dbg_value(ptr %pix0, !1152, !DIExpression(), !1345)
    #dbg_value(i32 %i_stride, !1153, !DIExpression(), !1345)
  %call.i = tail call i32 @x264_pixel_satd_4x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix0, i32 noundef %i_stride), !dbg !1347
  %add.ptr.i = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !1347
  %mul1.i = shl nsw i32 %i_stride, 2, !dbg !1347
  %idx.ext2.i = sext i32 %mul1.i to i64, !dbg !1347
  %add.ptr3.i = getelementptr inbounds i8, ptr %pix0, i64 %idx.ext2.i, !dbg !1347
  %call4.i = tail call i32 @x264_pixel_satd_4x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i, i32 noundef %i_stride), !dbg !1347
  %add.i = add nsw i32 %call4.i, %call.i, !dbg !1347
    #dbg_value(i32 %add.i, !1154, !DIExpression(), !1345)
  store i32 %add.i, ptr %scores, align 4, !dbg !1348
    #dbg_value(ptr %fenc, !1150, !DIExpression(), !1349)
    #dbg_value(i32 16, !1151, !DIExpression(), !1349)
    #dbg_value(ptr %pix1, !1152, !DIExpression(), !1349)
    #dbg_value(i32 %i_stride, !1153, !DIExpression(), !1349)
  %call.i11 = tail call i32 @x264_pixel_satd_4x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix1, i32 noundef %i_stride), !dbg !1351
  %add.ptr3.i15 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext2.i, !dbg !1351
  %call4.i16 = tail call i32 @x264_pixel_satd_4x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i15, i32 noundef %i_stride), !dbg !1351
  %add.i17 = add nsw i32 %call4.i16, %call.i11, !dbg !1351
    #dbg_value(i32 %add.i17, !1154, !DIExpression(), !1349)
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !1348
  store i32 %add.i17, ptr %arrayidx2, align 4, !dbg !1348
    #dbg_value(ptr %fenc, !1150, !DIExpression(), !1352)
    #dbg_value(i32 16, !1151, !DIExpression(), !1352)
    #dbg_value(ptr %pix2, !1152, !DIExpression(), !1352)
    #dbg_value(i32 %i_stride, !1153, !DIExpression(), !1352)
  %call.i18 = tail call i32 @x264_pixel_satd_4x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix2, i32 noundef %i_stride), !dbg !1354
  %add.ptr3.i22 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext2.i, !dbg !1354
  %call4.i23 = tail call i32 @x264_pixel_satd_4x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i22, i32 noundef %i_stride), !dbg !1354
  %add.i24 = add nsw i32 %call4.i23, %call.i18, !dbg !1354
    #dbg_value(i32 %add.i24, !1154, !DIExpression(), !1352)
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !1348
  store i32 %add.i24, ptr %arrayidx4, align 4, !dbg !1348
  ret void, !dbg !1348
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @x264_pixel_satd_x3_4x4(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #8 !dbg !1355 {
entry:
    #dbg_value(ptr %fenc, !1357, !DIExpression(), !1363)
    #dbg_value(ptr %pix0, !1358, !DIExpression(), !1363)
    #dbg_value(ptr %pix1, !1359, !DIExpression(), !1363)
    #dbg_value(ptr %pix2, !1360, !DIExpression(), !1363)
    #dbg_value(i32 %i_stride, !1361, !DIExpression(), !1363)
    #dbg_value(ptr %scores, !1362, !DIExpression(), !1363)
  %call = tail call i32 @x264_pixel_satd_4x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix0, i32 noundef %i_stride), !dbg !1364
  store i32 %call, ptr %scores, align 4, !dbg !1364
  %call1 = tail call i32 @x264_pixel_satd_4x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix1, i32 noundef %i_stride), !dbg !1364
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !1364
  store i32 %call1, ptr %arrayidx2, align 4, !dbg !1364
  %call3 = tail call i32 @x264_pixel_satd_4x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix2, i32 noundef %i_stride), !dbg !1364
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !1364
  store i32 %call3, ptr %arrayidx4, align 4, !dbg !1364
  ret void, !dbg !1364
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @x264_pixel_satd_x4_16x16(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #8 !dbg !1365 {
entry:
    #dbg_value(ptr %fenc, !1367, !DIExpression(), !1374)
    #dbg_value(ptr %pix0, !1368, !DIExpression(), !1374)
    #dbg_value(ptr %pix1, !1369, !DIExpression(), !1374)
    #dbg_value(ptr %pix2, !1370, !DIExpression(), !1374)
    #dbg_value(ptr %pix3, !1371, !DIExpression(), !1374)
    #dbg_value(i32 %i_stride, !1372, !DIExpression(), !1374)
    #dbg_value(ptr %scores, !1373, !DIExpression(), !1374)
  %call = tail call i32 @x264_pixel_satd_16x16(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix0, i32 noundef %i_stride), !dbg !1375
  store i32 %call, ptr %scores, align 4, !dbg !1375
  %call1 = tail call i32 @x264_pixel_satd_16x16(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix1, i32 noundef %i_stride), !dbg !1375
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !1375
  store i32 %call1, ptr %arrayidx2, align 4, !dbg !1375
  %call3 = tail call i32 @x264_pixel_satd_16x16(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix2, i32 noundef %i_stride), !dbg !1375
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !1375
  store i32 %call3, ptr %arrayidx4, align 4, !dbg !1375
  %call5 = tail call i32 @x264_pixel_satd_16x16(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix3, i32 noundef %i_stride), !dbg !1375
  %arrayidx6 = getelementptr inbounds i8, ptr %scores, i64 12, !dbg !1375
  store i32 %call5, ptr %arrayidx6, align 4, !dbg !1375
  ret void, !dbg !1375
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @x264_pixel_satd_x4_16x8(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #8 !dbg !1376 {
entry:
    #dbg_value(ptr %fenc, !1378, !DIExpression(), !1385)
    #dbg_value(ptr %pix0, !1379, !DIExpression(), !1385)
    #dbg_value(ptr %pix1, !1380, !DIExpression(), !1385)
    #dbg_value(ptr %pix2, !1381, !DIExpression(), !1385)
    #dbg_value(ptr %pix3, !1382, !DIExpression(), !1385)
    #dbg_value(i32 %i_stride, !1383, !DIExpression(), !1385)
    #dbg_value(ptr %scores, !1384, !DIExpression(), !1385)
    #dbg_value(ptr %fenc, !1003, !DIExpression(), !1386)
    #dbg_value(i32 16, !1004, !DIExpression(), !1386)
    #dbg_value(ptr %pix0, !1005, !DIExpression(), !1386)
    #dbg_value(i32 %i_stride, !1006, !DIExpression(), !1386)
  %call.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix0, i32 noundef %i_stride), !dbg !1388
  %add.ptr.i = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !1388
  %mul1.i = shl nsw i32 %i_stride, 2, !dbg !1388
  %idx.ext2.i = sext i32 %mul1.i to i64, !dbg !1388
  %add.ptr3.i = getelementptr inbounds i8, ptr %pix0, i64 %idx.ext2.i, !dbg !1388
  %call4.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i, i32 noundef %i_stride), !dbg !1388
    #dbg_value(i32 poison, !1007, !DIExpression(), !1386)
  %add.ptr5.i = getelementptr inbounds i8, ptr %fenc, i64 8, !dbg !1389
  %add.ptr6.i = getelementptr inbounds i8, ptr %pix0, i64 8, !dbg !1389
  %call7.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr5.i, i32 noundef 16, ptr noundef nonnull readonly %add.ptr6.i, i32 noundef %i_stride), !dbg !1389
  %add.ptr11.i = getelementptr inbounds i8, ptr %fenc, i64 72, !dbg !1389
  %add.ptr15.i = getelementptr inbounds i8, ptr %add.ptr6.i, i64 %idx.ext2.i, !dbg !1389
  %call16.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr11.i, i32 noundef 16, ptr noundef nonnull readonly %add.ptr15.i, i32 noundef %i_stride), !dbg !1389
  %add17.i = add nuw nsw i32 %call4.i, %call.i, !dbg !1389
  %add.i = add nuw nsw i32 %add17.i, %call7.i, !dbg !1388
  %add18.i = add nuw nsw i32 %add.i, %call16.i, !dbg !1389
    #dbg_value(i32 %add18.i, !1007, !DIExpression(), !1386)
  store i32 %add18.i, ptr %scores, align 4, !dbg !1390
    #dbg_value(ptr %fenc, !1003, !DIExpression(), !1391)
    #dbg_value(i32 16, !1004, !DIExpression(), !1391)
    #dbg_value(ptr %pix1, !1005, !DIExpression(), !1391)
    #dbg_value(i32 %i_stride, !1006, !DIExpression(), !1391)
  %call.i16 = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix1, i32 noundef %i_stride), !dbg !1393
  %add.ptr3.i20 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext2.i, !dbg !1393
  %call4.i21 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i20, i32 noundef %i_stride), !dbg !1393
    #dbg_value(i32 poison, !1007, !DIExpression(), !1391)
  %add.ptr6.i23 = getelementptr inbounds i8, ptr %pix1, i64 8, !dbg !1394
  %call7.i24 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr5.i, i32 noundef 16, ptr noundef nonnull readonly %add.ptr6.i23, i32 noundef %i_stride), !dbg !1394
  %add.ptr15.i26 = getelementptr inbounds i8, ptr %add.ptr6.i23, i64 %idx.ext2.i, !dbg !1394
  %call16.i27 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr11.i, i32 noundef 16, ptr noundef nonnull readonly %add.ptr15.i26, i32 noundef %i_stride), !dbg !1394
  %add17.i28 = add nuw nsw i32 %call4.i21, %call.i16, !dbg !1394
  %add.i29 = add nuw nsw i32 %add17.i28, %call7.i24, !dbg !1393
  %add18.i30 = add nuw nsw i32 %add.i29, %call16.i27, !dbg !1394
    #dbg_value(i32 %add18.i30, !1007, !DIExpression(), !1391)
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !1390
  store i32 %add18.i30, ptr %arrayidx2, align 4, !dbg !1390
    #dbg_value(ptr %fenc, !1003, !DIExpression(), !1395)
    #dbg_value(i32 16, !1004, !DIExpression(), !1395)
    #dbg_value(ptr %pix2, !1005, !DIExpression(), !1395)
    #dbg_value(i32 %i_stride, !1006, !DIExpression(), !1395)
  %call.i31 = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix2, i32 noundef %i_stride), !dbg !1397
  %add.ptr3.i35 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext2.i, !dbg !1397
  %call4.i36 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i35, i32 noundef %i_stride), !dbg !1397
    #dbg_value(i32 poison, !1007, !DIExpression(), !1395)
  %add.ptr6.i38 = getelementptr inbounds i8, ptr %pix2, i64 8, !dbg !1398
  %call7.i39 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr5.i, i32 noundef 16, ptr noundef nonnull readonly %add.ptr6.i38, i32 noundef %i_stride), !dbg !1398
  %add.ptr15.i41 = getelementptr inbounds i8, ptr %add.ptr6.i38, i64 %idx.ext2.i, !dbg !1398
  %call16.i42 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr11.i, i32 noundef 16, ptr noundef nonnull readonly %add.ptr15.i41, i32 noundef %i_stride), !dbg !1398
  %add17.i43 = add nuw nsw i32 %call4.i36, %call.i31, !dbg !1398
  %add.i44 = add nuw nsw i32 %add17.i43, %call7.i39, !dbg !1397
  %add18.i45 = add nuw nsw i32 %add.i44, %call16.i42, !dbg !1398
    #dbg_value(i32 %add18.i45, !1007, !DIExpression(), !1395)
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !1390
  store i32 %add18.i45, ptr %arrayidx4, align 4, !dbg !1390
    #dbg_value(ptr %fenc, !1003, !DIExpression(), !1399)
    #dbg_value(i32 16, !1004, !DIExpression(), !1399)
    #dbg_value(ptr %pix3, !1005, !DIExpression(), !1399)
    #dbg_value(i32 %i_stride, !1006, !DIExpression(), !1399)
  %call.i46 = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix3, i32 noundef %i_stride), !dbg !1401
  %add.ptr3.i50 = getelementptr inbounds i8, ptr %pix3, i64 %idx.ext2.i, !dbg !1401
  %call4.i51 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i50, i32 noundef %i_stride), !dbg !1401
    #dbg_value(i32 poison, !1007, !DIExpression(), !1399)
  %add.ptr6.i53 = getelementptr inbounds i8, ptr %pix3, i64 8, !dbg !1402
  %call7.i54 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr5.i, i32 noundef 16, ptr noundef nonnull readonly %add.ptr6.i53, i32 noundef %i_stride), !dbg !1402
  %add.ptr15.i56 = getelementptr inbounds i8, ptr %add.ptr6.i53, i64 %idx.ext2.i, !dbg !1402
  %call16.i57 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr11.i, i32 noundef 16, ptr noundef nonnull readonly %add.ptr15.i56, i32 noundef %i_stride), !dbg !1402
  %add17.i58 = add nuw nsw i32 %call4.i51, %call.i46, !dbg !1402
  %add.i59 = add nuw nsw i32 %add17.i58, %call7.i54, !dbg !1401
  %add18.i60 = add nuw nsw i32 %add.i59, %call16.i57, !dbg !1402
    #dbg_value(i32 %add18.i60, !1007, !DIExpression(), !1399)
  %arrayidx6 = getelementptr inbounds i8, ptr %scores, i64 12, !dbg !1390
  store i32 %add18.i60, ptr %arrayidx6, align 4, !dbg !1390
  ret void, !dbg !1390
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @x264_pixel_satd_x4_8x16(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #8 !dbg !1403 {
entry:
    #dbg_value(ptr %fenc, !1405, !DIExpression(), !1412)
    #dbg_value(ptr %pix0, !1406, !DIExpression(), !1412)
    #dbg_value(ptr %pix1, !1407, !DIExpression(), !1412)
    #dbg_value(ptr %pix2, !1408, !DIExpression(), !1412)
    #dbg_value(ptr %pix3, !1409, !DIExpression(), !1412)
    #dbg_value(i32 %i_stride, !1410, !DIExpression(), !1412)
    #dbg_value(ptr %scores, !1411, !DIExpression(), !1412)
    #dbg_value(ptr %fenc, !1014, !DIExpression(), !1413)
    #dbg_value(i32 16, !1015, !DIExpression(), !1413)
    #dbg_value(ptr %pix0, !1016, !DIExpression(), !1413)
    #dbg_value(i32 %i_stride, !1017, !DIExpression(), !1413)
  %call.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix0, i32 noundef %i_stride), !dbg !1415
  %add.ptr.i = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !1415
  %mul1.i = shl nsw i32 %i_stride, 2, !dbg !1415
  %idx.ext2.i = sext i32 %mul1.i to i64, !dbg !1415
  %add.ptr3.i = getelementptr inbounds i8, ptr %pix0, i64 %idx.ext2.i, !dbg !1415
  %call4.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i, i32 noundef %i_stride), !dbg !1415
    #dbg_value(i32 poison, !1018, !DIExpression(), !1413)
  %add.ptr7.i = getelementptr inbounds i8, ptr %fenc, i64 128, !dbg !1416
  %mul8.i = shl nsw i32 %i_stride, 3, !dbg !1416
  %idx.ext9.i = sext i32 %mul8.i to i64, !dbg !1416
  %add.ptr10.i = getelementptr inbounds i8, ptr %pix0, i64 %idx.ext9.i, !dbg !1416
  %call11.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr7.i, i32 noundef 16, ptr noundef readonly %add.ptr10.i, i32 noundef %i_stride), !dbg !1416
  %add.ptr14.i = getelementptr inbounds i8, ptr %fenc, i64 192, !dbg !1416
  %mul15.i = mul nsw i32 %i_stride, 12, !dbg !1416
  %idx.ext16.i = sext i32 %mul15.i to i64, !dbg !1416
  %add.ptr17.i = getelementptr inbounds i8, ptr %pix0, i64 %idx.ext16.i, !dbg !1416
  %call18.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr14.i, i32 noundef 16, ptr noundef readonly %add.ptr17.i, i32 noundef %i_stride), !dbg !1416
  %add19.i = add nuw nsw i32 %call4.i, %call.i, !dbg !1416
  %add.i = add nuw nsw i32 %add19.i, %call11.i, !dbg !1415
  %add20.i = add nuw nsw i32 %add.i, %call18.i, !dbg !1416
    #dbg_value(i32 %add20.i, !1018, !DIExpression(), !1413)
  store i32 %add20.i, ptr %scores, align 4, !dbg !1417
    #dbg_value(ptr %fenc, !1014, !DIExpression(), !1418)
    #dbg_value(i32 16, !1015, !DIExpression(), !1418)
    #dbg_value(ptr %pix1, !1016, !DIExpression(), !1418)
    #dbg_value(i32 %i_stride, !1017, !DIExpression(), !1418)
  %call.i16 = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix1, i32 noundef %i_stride), !dbg !1420
  %add.ptr3.i20 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext2.i, !dbg !1420
  %call4.i21 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i20, i32 noundef %i_stride), !dbg !1420
    #dbg_value(i32 poison, !1018, !DIExpression(), !1418)
  %add.ptr10.i25 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext9.i, !dbg !1421
  %call11.i26 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr7.i, i32 noundef 16, ptr noundef readonly %add.ptr10.i25, i32 noundef %i_stride), !dbg !1421
  %add.ptr17.i30 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext16.i, !dbg !1421
  %call18.i31 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr14.i, i32 noundef 16, ptr noundef readonly %add.ptr17.i30, i32 noundef %i_stride), !dbg !1421
  %add19.i32 = add nuw nsw i32 %call4.i21, %call.i16, !dbg !1421
  %add.i33 = add nuw nsw i32 %add19.i32, %call11.i26, !dbg !1420
  %add20.i34 = add nuw nsw i32 %add.i33, %call18.i31, !dbg !1421
    #dbg_value(i32 %add20.i34, !1018, !DIExpression(), !1418)
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !1417
  store i32 %add20.i34, ptr %arrayidx2, align 4, !dbg !1417
    #dbg_value(ptr %fenc, !1014, !DIExpression(), !1422)
    #dbg_value(i32 16, !1015, !DIExpression(), !1422)
    #dbg_value(ptr %pix2, !1016, !DIExpression(), !1422)
    #dbg_value(i32 %i_stride, !1017, !DIExpression(), !1422)
  %call.i35 = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix2, i32 noundef %i_stride), !dbg !1424
  %add.ptr3.i39 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext2.i, !dbg !1424
  %call4.i40 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i39, i32 noundef %i_stride), !dbg !1424
    #dbg_value(i32 poison, !1018, !DIExpression(), !1422)
  %add.ptr10.i44 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext9.i, !dbg !1425
  %call11.i45 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr7.i, i32 noundef 16, ptr noundef readonly %add.ptr10.i44, i32 noundef %i_stride), !dbg !1425
  %add.ptr17.i49 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext16.i, !dbg !1425
  %call18.i50 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr14.i, i32 noundef 16, ptr noundef readonly %add.ptr17.i49, i32 noundef %i_stride), !dbg !1425
  %add19.i51 = add nuw nsw i32 %call4.i40, %call.i35, !dbg !1425
  %add.i52 = add nuw nsw i32 %add19.i51, %call11.i45, !dbg !1424
  %add20.i53 = add nuw nsw i32 %add.i52, %call18.i50, !dbg !1425
    #dbg_value(i32 %add20.i53, !1018, !DIExpression(), !1422)
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !1417
  store i32 %add20.i53, ptr %arrayidx4, align 4, !dbg !1417
    #dbg_value(ptr %fenc, !1014, !DIExpression(), !1426)
    #dbg_value(i32 16, !1015, !DIExpression(), !1426)
    #dbg_value(ptr %pix3, !1016, !DIExpression(), !1426)
    #dbg_value(i32 %i_stride, !1017, !DIExpression(), !1426)
  %call.i54 = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix3, i32 noundef %i_stride), !dbg !1428
  %add.ptr3.i58 = getelementptr inbounds i8, ptr %pix3, i64 %idx.ext2.i, !dbg !1428
  %call4.i59 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i58, i32 noundef %i_stride), !dbg !1428
    #dbg_value(i32 poison, !1018, !DIExpression(), !1426)
  %add.ptr10.i63 = getelementptr inbounds i8, ptr %pix3, i64 %idx.ext9.i, !dbg !1429
  %call11.i64 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr7.i, i32 noundef 16, ptr noundef readonly %add.ptr10.i63, i32 noundef %i_stride), !dbg !1429
  %add.ptr17.i68 = getelementptr inbounds i8, ptr %pix3, i64 %idx.ext16.i, !dbg !1429
  %call18.i69 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr14.i, i32 noundef 16, ptr noundef readonly %add.ptr17.i68, i32 noundef %i_stride), !dbg !1429
  %add19.i70 = add nuw nsw i32 %call4.i59, %call.i54, !dbg !1429
  %add.i71 = add nuw nsw i32 %add19.i70, %call11.i64, !dbg !1428
  %add20.i72 = add nuw nsw i32 %add.i71, %call18.i69, !dbg !1429
    #dbg_value(i32 %add20.i72, !1018, !DIExpression(), !1426)
  %arrayidx6 = getelementptr inbounds i8, ptr %scores, i64 12, !dbg !1417
  store i32 %add20.i72, ptr %arrayidx6, align 4, !dbg !1417
  ret void, !dbg !1417
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @x264_pixel_satd_x4_8x8(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #8 !dbg !1430 {
entry:
    #dbg_value(ptr %fenc, !1432, !DIExpression(), !1439)
    #dbg_value(ptr %pix0, !1433, !DIExpression(), !1439)
    #dbg_value(ptr %pix1, !1434, !DIExpression(), !1439)
    #dbg_value(ptr %pix2, !1435, !DIExpression(), !1439)
    #dbg_value(ptr %pix3, !1436, !DIExpression(), !1439)
    #dbg_value(i32 %i_stride, !1437, !DIExpression(), !1439)
    #dbg_value(ptr %scores, !1438, !DIExpression(), !1439)
    #dbg_value(ptr %fenc, !1025, !DIExpression(), !1440)
    #dbg_value(i32 16, !1026, !DIExpression(), !1440)
    #dbg_value(ptr %pix0, !1027, !DIExpression(), !1440)
    #dbg_value(i32 %i_stride, !1028, !DIExpression(), !1440)
  %call.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix0, i32 noundef %i_stride), !dbg !1442
  %add.ptr.i = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !1442
  %mul1.i = shl nsw i32 %i_stride, 2, !dbg !1442
  %idx.ext2.i = sext i32 %mul1.i to i64, !dbg !1442
  %add.ptr3.i = getelementptr inbounds i8, ptr %pix0, i64 %idx.ext2.i, !dbg !1442
  %call4.i = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i, i32 noundef %i_stride), !dbg !1442
  %add.i = add nuw nsw i32 %call4.i, %call.i, !dbg !1442
    #dbg_value(i32 %add.i, !1029, !DIExpression(), !1440)
  store i32 %add.i, ptr %scores, align 4, !dbg !1443
    #dbg_value(ptr %fenc, !1025, !DIExpression(), !1444)
    #dbg_value(i32 16, !1026, !DIExpression(), !1444)
    #dbg_value(ptr %pix1, !1027, !DIExpression(), !1444)
    #dbg_value(i32 %i_stride, !1028, !DIExpression(), !1444)
  %call.i16 = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix1, i32 noundef %i_stride), !dbg !1446
  %add.ptr3.i20 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext2.i, !dbg !1446
  %call4.i21 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i20, i32 noundef %i_stride), !dbg !1446
  %add.i22 = add nuw nsw i32 %call4.i21, %call.i16, !dbg !1446
    #dbg_value(i32 %add.i22, !1029, !DIExpression(), !1444)
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !1443
  store i32 %add.i22, ptr %arrayidx2, align 4, !dbg !1443
    #dbg_value(ptr %fenc, !1025, !DIExpression(), !1447)
    #dbg_value(i32 16, !1026, !DIExpression(), !1447)
    #dbg_value(ptr %pix2, !1027, !DIExpression(), !1447)
    #dbg_value(i32 %i_stride, !1028, !DIExpression(), !1447)
  %call.i23 = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix2, i32 noundef %i_stride), !dbg !1449
  %add.ptr3.i27 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext2.i, !dbg !1449
  %call4.i28 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i27, i32 noundef %i_stride), !dbg !1449
  %add.i29 = add nuw nsw i32 %call4.i28, %call.i23, !dbg !1449
    #dbg_value(i32 %add.i29, !1029, !DIExpression(), !1447)
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !1443
  store i32 %add.i29, ptr %arrayidx4, align 4, !dbg !1443
    #dbg_value(ptr %fenc, !1025, !DIExpression(), !1450)
    #dbg_value(i32 16, !1026, !DIExpression(), !1450)
    #dbg_value(ptr %pix3, !1027, !DIExpression(), !1450)
    #dbg_value(i32 %i_stride, !1028, !DIExpression(), !1450)
  %call.i30 = tail call i32 @x264_pixel_satd_8x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix3, i32 noundef %i_stride), !dbg !1452
  %add.ptr3.i34 = getelementptr inbounds i8, ptr %pix3, i64 %idx.ext2.i, !dbg !1452
  %call4.i35 = tail call i32 @x264_pixel_satd_8x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i34, i32 noundef %i_stride), !dbg !1452
  %add.i36 = add nuw nsw i32 %call4.i35, %call.i30, !dbg !1452
    #dbg_value(i32 %add.i36, !1029, !DIExpression(), !1450)
  %arrayidx6 = getelementptr inbounds i8, ptr %scores, i64 12, !dbg !1443
  store i32 %add.i36, ptr %arrayidx6, align 4, !dbg !1443
  ret void, !dbg !1443
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @x264_pixel_satd_x4_8x4(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #8 !dbg !1453 {
entry:
    #dbg_value(ptr %fenc, !1455, !DIExpression(), !1462)
    #dbg_value(ptr %pix0, !1456, !DIExpression(), !1462)
    #dbg_value(ptr %pix1, !1457, !DIExpression(), !1462)
    #dbg_value(ptr %pix2, !1458, !DIExpression(), !1462)
    #dbg_value(ptr %pix3, !1459, !DIExpression(), !1462)
    #dbg_value(i32 %i_stride, !1460, !DIExpression(), !1462)
    #dbg_value(ptr %scores, !1461, !DIExpression(), !1462)
  %call = tail call i32 @x264_pixel_satd_8x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix0, i32 noundef %i_stride), !dbg !1463
  store i32 %call, ptr %scores, align 4, !dbg !1463
  %call1 = tail call i32 @x264_pixel_satd_8x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix1, i32 noundef %i_stride), !dbg !1463
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !1463
  store i32 %call1, ptr %arrayidx2, align 4, !dbg !1463
  %call3 = tail call i32 @x264_pixel_satd_8x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix2, i32 noundef %i_stride), !dbg !1463
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !1463
  store i32 %call3, ptr %arrayidx4, align 4, !dbg !1463
  %call5 = tail call i32 @x264_pixel_satd_8x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix3, i32 noundef %i_stride), !dbg !1463
  %arrayidx6 = getelementptr inbounds i8, ptr %scores, i64 12, !dbg !1463
  store i32 %call5, ptr %arrayidx6, align 4, !dbg !1463
  ret void, !dbg !1463
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @x264_pixel_satd_x4_4x8(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #8 !dbg !1464 {
entry:
    #dbg_value(ptr %fenc, !1466, !DIExpression(), !1473)
    #dbg_value(ptr %pix0, !1467, !DIExpression(), !1473)
    #dbg_value(ptr %pix1, !1468, !DIExpression(), !1473)
    #dbg_value(ptr %pix2, !1469, !DIExpression(), !1473)
    #dbg_value(ptr %pix3, !1470, !DIExpression(), !1473)
    #dbg_value(i32 %i_stride, !1471, !DIExpression(), !1473)
    #dbg_value(ptr %scores, !1472, !DIExpression(), !1473)
    #dbg_value(ptr %fenc, !1150, !DIExpression(), !1474)
    #dbg_value(i32 16, !1151, !DIExpression(), !1474)
    #dbg_value(ptr %pix0, !1152, !DIExpression(), !1474)
    #dbg_value(i32 %i_stride, !1153, !DIExpression(), !1474)
  %call.i = tail call i32 @x264_pixel_satd_4x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix0, i32 noundef %i_stride), !dbg !1476
  %add.ptr.i = getelementptr inbounds i8, ptr %fenc, i64 64, !dbg !1476
  %mul1.i = shl nsw i32 %i_stride, 2, !dbg !1476
  %idx.ext2.i = sext i32 %mul1.i to i64, !dbg !1476
  %add.ptr3.i = getelementptr inbounds i8, ptr %pix0, i64 %idx.ext2.i, !dbg !1476
  %call4.i = tail call i32 @x264_pixel_satd_4x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i, i32 noundef %i_stride), !dbg !1476
  %add.i = add nsw i32 %call4.i, %call.i, !dbg !1476
    #dbg_value(i32 %add.i, !1154, !DIExpression(), !1474)
  store i32 %add.i, ptr %scores, align 4, !dbg !1477
    #dbg_value(ptr %fenc, !1150, !DIExpression(), !1478)
    #dbg_value(i32 16, !1151, !DIExpression(), !1478)
    #dbg_value(ptr %pix1, !1152, !DIExpression(), !1478)
    #dbg_value(i32 %i_stride, !1153, !DIExpression(), !1478)
  %call.i16 = tail call i32 @x264_pixel_satd_4x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix1, i32 noundef %i_stride), !dbg !1480
  %add.ptr3.i20 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext2.i, !dbg !1480
  %call4.i21 = tail call i32 @x264_pixel_satd_4x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i20, i32 noundef %i_stride), !dbg !1480
  %add.i22 = add nsw i32 %call4.i21, %call.i16, !dbg !1480
    #dbg_value(i32 %add.i22, !1154, !DIExpression(), !1478)
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !1477
  store i32 %add.i22, ptr %arrayidx2, align 4, !dbg !1477
    #dbg_value(ptr %fenc, !1150, !DIExpression(), !1481)
    #dbg_value(i32 16, !1151, !DIExpression(), !1481)
    #dbg_value(ptr %pix2, !1152, !DIExpression(), !1481)
    #dbg_value(i32 %i_stride, !1153, !DIExpression(), !1481)
  %call.i23 = tail call i32 @x264_pixel_satd_4x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix2, i32 noundef %i_stride), !dbg !1483
  %add.ptr3.i27 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext2.i, !dbg !1483
  %call4.i28 = tail call i32 @x264_pixel_satd_4x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i27, i32 noundef %i_stride), !dbg !1483
  %add.i29 = add nsw i32 %call4.i28, %call.i23, !dbg !1483
    #dbg_value(i32 %add.i29, !1154, !DIExpression(), !1481)
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !1477
  store i32 %add.i29, ptr %arrayidx4, align 4, !dbg !1477
    #dbg_value(ptr %fenc, !1150, !DIExpression(), !1484)
    #dbg_value(i32 16, !1151, !DIExpression(), !1484)
    #dbg_value(ptr %pix3, !1152, !DIExpression(), !1484)
    #dbg_value(i32 %i_stride, !1153, !DIExpression(), !1484)
  %call.i30 = tail call i32 @x264_pixel_satd_4x4(ptr noundef readonly %fenc, i32 noundef 16, ptr noundef readonly %pix3, i32 noundef %i_stride), !dbg !1486
  %add.ptr3.i34 = getelementptr inbounds i8, ptr %pix3, i64 %idx.ext2.i, !dbg !1486
  %call4.i35 = tail call i32 @x264_pixel_satd_4x4(ptr noundef nonnull readonly %add.ptr.i, i32 noundef 16, ptr noundef readonly %add.ptr3.i34, i32 noundef %i_stride), !dbg !1486
  %add.i36 = add nsw i32 %call4.i35, %call.i30, !dbg !1486
    #dbg_value(i32 %add.i36, !1154, !DIExpression(), !1484)
  %arrayidx6 = getelementptr inbounds i8, ptr %scores, i64 12, !dbg !1477
  store i32 %add.i36, ptr %arrayidx6, align 4, !dbg !1477
  ret void, !dbg !1477
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @x264_pixel_satd_x4_4x4(ptr nocapture noundef readonly %fenc, ptr nocapture noundef readonly %pix0, ptr nocapture noundef readonly %pix1, ptr nocapture noundef readonly %pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride, ptr nocapture noundef writeonly %scores) #8 !dbg !1487 {
entry:
    #dbg_value(ptr %fenc, !1489, !DIExpression(), !1496)
    #dbg_value(ptr %pix0, !1490, !DIExpression(), !1496)
    #dbg_value(ptr %pix1, !1491, !DIExpression(), !1496)
    #dbg_value(ptr %pix2, !1492, !DIExpression(), !1496)
    #dbg_value(ptr %pix3, !1493, !DIExpression(), !1496)
    #dbg_value(i32 %i_stride, !1494, !DIExpression(), !1496)
    #dbg_value(ptr %scores, !1495, !DIExpression(), !1496)
  %call = tail call i32 @x264_pixel_satd_4x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix0, i32 noundef %i_stride), !dbg !1497
  store i32 %call, ptr %scores, align 4, !dbg !1497
  %call1 = tail call i32 @x264_pixel_satd_4x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix1, i32 noundef %i_stride), !dbg !1497
  %arrayidx2 = getelementptr inbounds i8, ptr %scores, i64 4, !dbg !1497
  store i32 %call1, ptr %arrayidx2, align 4, !dbg !1497
  %call3 = tail call i32 @x264_pixel_satd_4x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix2, i32 noundef %i_stride), !dbg !1497
  %arrayidx4 = getelementptr inbounds i8, ptr %scores, i64 8, !dbg !1497
  store i32 %call3, ptr %arrayidx4, align 4, !dbg !1497
  %call5 = tail call i32 @x264_pixel_satd_4x4(ptr noundef %fenc, i32 noundef 16, ptr noundef %pix3, i32 noundef %i_stride), !dbg !1497
  %arrayidx6 = getelementptr inbounds i8, ptr %scores, i64 12, !dbg !1497
  store i32 %call5, ptr %arrayidx6, align 4, !dbg !1497
  ret void, !dbg !1497
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define internal range(i64 0, 4611686016279904256) i64 @x264_pixel_hadamard_ac_16x16(ptr nocapture noundef readonly %pix, i32 noundef %stride) #4 !dbg !1498 {
entry:
    #dbg_value(ptr %pix, !1500, !DIExpression(), !1503)
    #dbg_value(i32 %stride, !1501, !DIExpression(), !1503)
  %call = tail call fastcc i64 @pixel_hadamard_ac(ptr noundef %pix, i32 noundef %stride), !dbg !1504
    #dbg_value(i64 %call, !1502, !DIExpression(), !1503)
  %add.ptr = getelementptr inbounds i8, ptr %pix, i64 8, !dbg !1505
  %call1 = tail call fastcc i64 @pixel_hadamard_ac(ptr noundef nonnull %add.ptr, i32 noundef %stride), !dbg !1505
  %add = add i64 %call1, %call, !dbg !1505
    #dbg_value(i64 %add, !1502, !DIExpression(), !1503)
  %mul = shl nsw i32 %stride, 3, !dbg !1507
  %idx.ext = sext i32 %mul to i64, !dbg !1507
  %add.ptr2 = getelementptr inbounds i8, ptr %pix, i64 %idx.ext, !dbg !1507
  %call3 = tail call fastcc i64 @pixel_hadamard_ac(ptr noundef %add.ptr2, i32 noundef %stride), !dbg !1507
  %add4 = add i64 %add, %call3, !dbg !1507
    #dbg_value(i64 %add4, !1502, !DIExpression(), !1503)
  %add.ptr8 = getelementptr inbounds i8, ptr %add.ptr2, i64 8, !dbg !1509
  %call9 = tail call fastcc i64 @pixel_hadamard_ac(ptr noundef nonnull %add.ptr8, i32 noundef %stride), !dbg !1509
  %add10 = add i64 %add4, %call9, !dbg !1509
    #dbg_value(i64 %add10, !1502, !DIExpression(), !1503)
  %0 = lshr i64 %add10, 2, !dbg !1504
  %shl = and i64 %0, 4611686014132420608, !dbg !1504
  %shr11 = lshr i64 %add10, 1, !dbg !1504
  %conv12 = and i64 %shr11, 2147483647, !dbg !1504
  %add13 = or disjoint i64 %shl, %conv12, !dbg !1504
  ret i64 %add13, !dbg !1504
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define internal range(i64 0, 4611686016279904256) i64 @x264_pixel_hadamard_ac_16x8(ptr nocapture noundef readonly %pix, i32 noundef %stride) #4 !dbg !1511 {
entry:
    #dbg_value(ptr %pix, !1513, !DIExpression(), !1516)
    #dbg_value(i32 %stride, !1514, !DIExpression(), !1516)
  %call = tail call fastcc i64 @pixel_hadamard_ac(ptr noundef %pix, i32 noundef %stride), !dbg !1517
    #dbg_value(i64 %call, !1515, !DIExpression(), !1516)
  %add.ptr = getelementptr inbounds i8, ptr %pix, i64 8, !dbg !1518
  %call1 = tail call fastcc i64 @pixel_hadamard_ac(ptr noundef nonnull %add.ptr, i32 noundef %stride), !dbg !1518
  %add = add i64 %call1, %call, !dbg !1518
    #dbg_value(i64 %add, !1515, !DIExpression(), !1516)
  %0 = lshr i64 %add, 2, !dbg !1517
  %shl = and i64 %0, 4611686014132420608, !dbg !1517
  %shr2 = lshr i64 %add, 1, !dbg !1517
  %conv3 = and i64 %shr2, 2147483647, !dbg !1517
  %add4 = or disjoint i64 %shl, %conv3, !dbg !1517
  ret i64 %add4, !dbg !1517
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define internal range(i64 0, 4611686016279904256) i64 @x264_pixel_hadamard_ac_8x16(ptr nocapture noundef readonly %pix, i32 noundef %stride) #4 !dbg !1520 {
entry:
    #dbg_value(ptr %pix, !1522, !DIExpression(), !1525)
    #dbg_value(i32 %stride, !1523, !DIExpression(), !1525)
  %call = tail call fastcc i64 @pixel_hadamard_ac(ptr noundef %pix, i32 noundef %stride), !dbg !1526
    #dbg_value(i64 %call, !1524, !DIExpression(), !1525)
  %mul = shl nsw i32 %stride, 3, !dbg !1527
  %idx.ext = sext i32 %mul to i64, !dbg !1527
  %add.ptr = getelementptr inbounds i8, ptr %pix, i64 %idx.ext, !dbg !1527
  %call1 = tail call fastcc i64 @pixel_hadamard_ac(ptr noundef %add.ptr, i32 noundef %stride), !dbg !1527
  %add = add i64 %call1, %call, !dbg !1527
    #dbg_value(i64 %add, !1524, !DIExpression(), !1525)
  %0 = lshr i64 %add, 2, !dbg !1526
  %shl = and i64 %0, 4611686014132420608, !dbg !1526
  %shr2 = lshr i64 %add, 1, !dbg !1526
  %conv3 = and i64 %shr2, 2147483647, !dbg !1526
  %add4 = or disjoint i64 %shl, %conv3, !dbg !1526
  ret i64 %add4, !dbg !1526
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define internal range(i64 0, 4611686016279904256) i64 @x264_pixel_hadamard_ac_8x8(ptr nocapture noundef readonly %pix, i32 noundef %stride) #4 !dbg !1529 {
entry:
    #dbg_value(ptr %pix, !1531, !DIExpression(), !1534)
    #dbg_value(i32 %stride, !1532, !DIExpression(), !1534)
  %call = tail call fastcc i64 @pixel_hadamard_ac(ptr noundef %pix, i32 noundef %stride), !dbg !1535
    #dbg_value(i64 %call, !1533, !DIExpression(), !1534)
  %0 = lshr i64 %call, 2, !dbg !1535
  %shl = and i64 %0, 4611686014132420608, !dbg !1535
  %shr1 = lshr i64 %call, 1, !dbg !1535
  %conv2 = and i64 %shr1, 2147483647, !dbg !1535
  %add = or disjoint i64 %shl, %conv2, !dbg !1535
  ret i64 %add, !dbg !1535
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal i32 @x264_pixel_ads4(ptr nocapture noundef readonly %enc_dc, ptr nocapture noundef readonly %sums, i32 noundef %delta, ptr nocapture noundef readonly %cost_mvx, ptr nocapture noundef writeonly %mvs, i32 noundef %width, i32 noundef %thresh) #7 !dbg !1536 {
entry:
    #dbg_value(ptr %enc_dc, !1538, !DIExpression(), !1551)
    #dbg_value(ptr %sums, !1539, !DIExpression(), !1551)
    #dbg_value(i32 %delta, !1540, !DIExpression(), !1551)
    #dbg_value(ptr %cost_mvx, !1541, !DIExpression(), !1551)
    #dbg_value(ptr %mvs, !1542, !DIExpression(), !1551)
    #dbg_value(i32 %width, !1543, !DIExpression(), !1551)
    #dbg_value(i32 %thresh, !1544, !DIExpression(), !1551)
    #dbg_value(i32 0, !1545, !DIExpression(), !1551)
    #dbg_value(i32 0, !1546, !DIExpression(), !1552)
  %cmp40 = icmp sgt i32 %width, 0, !dbg !1553
  br i1 %cmp40, label %for.body.lr.ph, label %for.cond.cleanup, !dbg !1554

for.body.lr.ph:                                   ; preds = %entry
  %idxprom = sext i32 %delta to i64
  %add12 = add nsw i32 %delta, 8
  %idxprom13 = sext i32 %add12 to i64
  %wide.trip.count = zext nneg i32 %width to i64, !dbg !1553
  br label %for.body, !dbg !1554

for.cond.cleanup:                                 ; preds = %if.end, %entry
  %nmv.0.lcssa = phi i32 [ 0, %entry ], [ %nmv.1, %if.end ], !dbg !1551
  ret i32 %nmv.0.lcssa, !dbg !1555

for.body:                                         ; preds = %for.body.lr.ph, %if.end
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end ]
  %sums.addr.043 = phi ptr [ %sums, %for.body.lr.ph ], [ %incdec.ptr, %if.end ]
  %nmv.041 = phi i32 [ 0, %for.body.lr.ph ], [ %nmv.1, %if.end ]
    #dbg_value(ptr %sums.addr.043, !1539, !DIExpression(), !1551)
    #dbg_value(i64 %indvars.iv, !1546, !DIExpression(), !1552)
    #dbg_value(i32 %nmv.041, !1545, !DIExpression(), !1551)
  %0 = load i16, ptr %sums.addr.043, align 2, !dbg !1556
  %arrayidx3 = getelementptr inbounds i8, ptr %sums.addr.043, i64 16, !dbg !1557
  %1 = load i16, ptr %arrayidx3, align 2, !dbg !1557
  %arrayidx7 = getelementptr inbounds i16, ptr %sums.addr.043, i64 %idxprom, !dbg !1558
  %2 = load i16, ptr %arrayidx7, align 2, !dbg !1558
  %arrayidx14 = getelementptr inbounds i16, ptr %sums.addr.043, i64 %idxprom13, !dbg !1559
  %3 = load i16, ptr %arrayidx14, align 2, !dbg !1559
  %4 = load <4 x i32>, ptr %enc_dc, align 4, !dbg !1560
  %5 = insertelement <4 x i16> poison, i16 %0, i64 0, !dbg !1557
  %6 = insertelement <4 x i16> %5, i16 %1, i64 1, !dbg !1557
  %7 = insertelement <4 x i16> %6, i16 %2, i64 2, !dbg !1557
  %8 = insertelement <4 x i16> %7, i16 %3, i64 3, !dbg !1557
  %9 = zext <4 x i16> %8 to <4 x i32>, !dbg !1557
  %10 = sub nsw <4 x i32> %4, %9, !dbg !1561
  %11 = tail call <4 x i32> @llvm.abs.v4i32(<4 x i32> %10, i1 true), !dbg !1562
  %arrayidx19 = getelementptr inbounds i16, ptr %cost_mvx, i64 %indvars.iv, !dbg !1563
  %12 = load i16, ptr %arrayidx19, align 2, !dbg !1563
  %conv20 = zext i16 %12 to i32, !dbg !1563
  %13 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %11), !dbg !1564
  %op.rdx = add i32 %13, %conv20, !dbg !1565
    #dbg_value(i32 %op.rdx, !1548, !DIExpression(), !1566)
  %cmp22 = icmp slt i32 %op.rdx, %thresh, !dbg !1567
  br i1 %cmp22, label %if.then, label %if.end, !dbg !1569

if.then:                                          ; preds = %for.body
  %conv24 = trunc i64 %indvars.iv to i16, !dbg !1570
  %inc = add nsw i32 %nmv.041, 1, !dbg !1571
    #dbg_value(i32 %inc, !1545, !DIExpression(), !1551)
  %idxprom25 = sext i32 %nmv.041 to i64, !dbg !1572
  %arrayidx26 = getelementptr inbounds i16, ptr %mvs, i64 %idxprom25, !dbg !1572
  store i16 %conv24, ptr %arrayidx26, align 2, !dbg !1573
  br label %if.end, !dbg !1572

if.end:                                           ; preds = %if.then, %for.body
  %nmv.1 = phi i32 [ %inc, %if.then ], [ %nmv.041, %for.body ], !dbg !1551
    #dbg_value(i32 %nmv.1, !1545, !DIExpression(), !1551)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1574
    #dbg_value(i64 %indvars.iv.next, !1546, !DIExpression(), !1552)
  %incdec.ptr = getelementptr inbounds i8, ptr %sums.addr.043, i64 2, !dbg !1575
    #dbg_value(ptr %incdec.ptr, !1539, !DIExpression(), !1551)
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !1553
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !dbg !1554, !llvm.loop !1576
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal i32 @x264_pixel_ads2(ptr nocapture noundef readonly %enc_dc, ptr nocapture noundef readonly %sums, i32 noundef %delta, ptr nocapture noundef readonly %cost_mvx, ptr nocapture noundef writeonly %mvs, i32 noundef %width, i32 noundef %thresh) #7 !dbg !1578 {
entry:
    #dbg_value(ptr %enc_dc, !1580, !DIExpression(), !1593)
    #dbg_value(ptr %sums, !1581, !DIExpression(), !1593)
    #dbg_value(i32 %delta, !1582, !DIExpression(), !1593)
    #dbg_value(ptr %cost_mvx, !1583, !DIExpression(), !1593)
    #dbg_value(ptr %mvs, !1584, !DIExpression(), !1593)
    #dbg_value(i32 %width, !1585, !DIExpression(), !1593)
    #dbg_value(i32 %thresh, !1586, !DIExpression(), !1593)
    #dbg_value(i32 0, !1587, !DIExpression(), !1593)
    #dbg_value(i32 0, !1588, !DIExpression(), !1594)
  %cmp23 = icmp sgt i32 %width, 0, !dbg !1595
  br i1 %cmp23, label %for.body.lr.ph, label %for.cond.cleanup, !dbg !1596

for.body.lr.ph:                                   ; preds = %entry
  %arrayidx2 = getelementptr inbounds i8, ptr %enc_dc, i64 4
  %idxprom = sext i32 %delta to i64
  %wide.trip.count = zext nneg i32 %width to i64, !dbg !1595
  br label %for.body, !dbg !1596

for.cond.cleanup:                                 ; preds = %if.end, %entry
  %nmv.0.lcssa = phi i32 [ 0, %entry ], [ %nmv.1, %if.end ], !dbg !1593
  ret i32 %nmv.0.lcssa, !dbg !1597

for.body:                                         ; preds = %for.body.lr.ph, %if.end
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end ]
  %sums.addr.026 = phi ptr [ %sums, %for.body.lr.ph ], [ %incdec.ptr, %if.end ]
  %nmv.024 = phi i32 [ 0, %for.body.lr.ph ], [ %nmv.1, %if.end ]
    #dbg_value(ptr %sums.addr.026, !1581, !DIExpression(), !1593)
    #dbg_value(i64 %indvars.iv, !1588, !DIExpression(), !1594)
    #dbg_value(i32 %nmv.024, !1587, !DIExpression(), !1593)
  %0 = load i32, ptr %enc_dc, align 4, !dbg !1598
  %1 = load i16, ptr %sums.addr.026, align 2, !dbg !1599
  %conv = zext i16 %1 to i32, !dbg !1599
  %sub = sub nsw i32 %0, %conv, !dbg !1600
  %2 = tail call i32 @llvm.abs.i32(i32 %sub, i1 true), !dbg !1601
  %3 = load i32, ptr %arrayidx2, align 4, !dbg !1602
  %arrayidx3 = getelementptr inbounds i16, ptr %sums.addr.026, i64 %idxprom, !dbg !1603
  %4 = load i16, ptr %arrayidx3, align 2, !dbg !1603
  %conv4 = zext i16 %4 to i32, !dbg !1603
  %sub5 = sub nsw i32 %3, %conv4, !dbg !1604
  %5 = tail call i32 @llvm.abs.i32(i32 %sub5, i1 true), !dbg !1605
  %arrayidx7 = getelementptr inbounds i16, ptr %cost_mvx, i64 %indvars.iv, !dbg !1606
  %6 = load i16, ptr %arrayidx7, align 2, !dbg !1606
  %conv8 = zext i16 %6 to i32, !dbg !1606
  %add = add nuw nsw i32 %2, %conv8, !dbg !1607
  %add9 = add nuw nsw i32 %add, %5, !dbg !1608
    #dbg_value(i32 %add9, !1590, !DIExpression(), !1609)
  %cmp10 = icmp slt i32 %add9, %thresh, !dbg !1610
  br i1 %cmp10, label %if.then, label %if.end, !dbg !1612

if.then:                                          ; preds = %for.body
  %conv12 = trunc i64 %indvars.iv to i16, !dbg !1613
  %inc = add nsw i32 %nmv.024, 1, !dbg !1614
    #dbg_value(i32 %inc, !1587, !DIExpression(), !1593)
  %idxprom13 = sext i32 %nmv.024 to i64, !dbg !1615
  %arrayidx14 = getelementptr inbounds i16, ptr %mvs, i64 %idxprom13, !dbg !1615
  store i16 %conv12, ptr %arrayidx14, align 2, !dbg !1616
  br label %if.end, !dbg !1615

if.end:                                           ; preds = %if.then, %for.body
  %nmv.1 = phi i32 [ %inc, %if.then ], [ %nmv.024, %for.body ], !dbg !1593
    #dbg_value(i32 %nmv.1, !1587, !DIExpression(), !1593)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1617
    #dbg_value(i64 %indvars.iv.next, !1588, !DIExpression(), !1594)
  %incdec.ptr = getelementptr inbounds i8, ptr %sums.addr.026, i64 2, !dbg !1618
    #dbg_value(ptr %incdec.ptr, !1581, !DIExpression(), !1593)
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !1595
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !dbg !1596, !llvm.loop !1619
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal i32 @x264_pixel_ads1(ptr nocapture noundef readonly %enc_dc, ptr nocapture noundef readonly %sums, i32 %delta, ptr nocapture noundef readonly %cost_mvx, ptr nocapture noundef writeonly %mvs, i32 noundef %width, i32 noundef %thresh) #7 !dbg !1621 {
entry:
    #dbg_value(ptr %enc_dc, !1623, !DIExpression(), !1636)
    #dbg_value(ptr %sums, !1624, !DIExpression(), !1636)
    #dbg_value(i32 poison, !1625, !DIExpression(), !1636)
    #dbg_value(ptr %cost_mvx, !1626, !DIExpression(), !1636)
    #dbg_value(ptr %mvs, !1627, !DIExpression(), !1636)
    #dbg_value(i32 %width, !1628, !DIExpression(), !1636)
    #dbg_value(i32 %thresh, !1629, !DIExpression(), !1636)
    #dbg_value(i32 0, !1630, !DIExpression(), !1636)
    #dbg_value(i32 0, !1631, !DIExpression(), !1637)
  %cmp15 = icmp sgt i32 %width, 0, !dbg !1638
  br i1 %cmp15, label %for.body.preheader, label %for.cond.cleanup, !dbg !1639

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext nneg i32 %width to i64, !dbg !1638
  br label %for.body, !dbg !1639

for.cond.cleanup:                                 ; preds = %if.end, %entry
  %nmv.0.lcssa = phi i32 [ 0, %entry ], [ %nmv.1, %if.end ], !dbg !1636
  ret i32 %nmv.0.lcssa, !dbg !1640

for.body:                                         ; preds = %for.body.preheader, %if.end
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %if.end ]
  %sums.addr.018 = phi ptr [ %sums, %for.body.preheader ], [ %incdec.ptr, %if.end ]
  %nmv.016 = phi i32 [ 0, %for.body.preheader ], [ %nmv.1, %if.end ]
    #dbg_value(ptr %sums.addr.018, !1624, !DIExpression(), !1636)
    #dbg_value(i64 %indvars.iv, !1631, !DIExpression(), !1637)
    #dbg_value(i32 %nmv.016, !1630, !DIExpression(), !1636)
  %0 = load i32, ptr %enc_dc, align 4, !dbg !1641
  %1 = load i16, ptr %sums.addr.018, align 2, !dbg !1642
  %conv = zext i16 %1 to i32, !dbg !1642
  %sub = sub nsw i32 %0, %conv, !dbg !1643
  %2 = tail call i32 @llvm.abs.i32(i32 %sub, i1 true), !dbg !1644
  %arrayidx2 = getelementptr inbounds i16, ptr %cost_mvx, i64 %indvars.iv, !dbg !1645
  %3 = load i16, ptr %arrayidx2, align 2, !dbg !1645
  %conv3 = zext i16 %3 to i32, !dbg !1645
  %add = add nuw nsw i32 %2, %conv3, !dbg !1646
    #dbg_value(i32 %add, !1633, !DIExpression(), !1647)
  %cmp4 = icmp slt i32 %add, %thresh, !dbg !1648
  br i1 %cmp4, label %if.then, label %if.end, !dbg !1650

if.then:                                          ; preds = %for.body
  %conv6 = trunc i64 %indvars.iv to i16, !dbg !1651
  %inc = add nsw i32 %nmv.016, 1, !dbg !1652
    #dbg_value(i32 %inc, !1630, !DIExpression(), !1636)
  %idxprom7 = sext i32 %nmv.016 to i64, !dbg !1653
  %arrayidx8 = getelementptr inbounds i16, ptr %mvs, i64 %idxprom7, !dbg !1653
  store i16 %conv6, ptr %arrayidx8, align 2, !dbg !1654
  br label %if.end, !dbg !1653

if.end:                                           ; preds = %if.then, %for.body
  %nmv.1 = phi i32 [ %inc, %if.then ], [ %nmv.016, %for.body ], !dbg !1636
    #dbg_value(i32 %nmv.1, !1630, !DIExpression(), !1636)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1655
    #dbg_value(i64 %indvars.iv.next, !1631, !DIExpression(), !1637)
  %incdec.ptr = getelementptr inbounds i8, ptr %sums.addr.018, i64 2, !dbg !1656
    #dbg_value(ptr %incdec.ptr, !1624, !DIExpression(), !1636)
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !1638
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !dbg !1639, !llvm.loop !1657
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define internal range(i32 -536870912, 536870912) i32 @x264_pixel_sa8d_16x16(ptr nocapture noundef readonly %pix1, i32 noundef %i_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_pix2) #4 !dbg !1659 {
entry:
    #dbg_value(ptr %pix1, !1661, !DIExpression(), !1666)
    #dbg_value(i32 %i_pix1, !1662, !DIExpression(), !1666)
    #dbg_value(ptr %pix2, !1663, !DIExpression(), !1666)
    #dbg_value(i32 %i_pix2, !1664, !DIExpression(), !1666)
  %call = tail call fastcc i32 @sa8d_8x8(ptr noundef %pix1, i32 noundef %i_pix1, ptr noundef %pix2, i32 noundef %i_pix2), !dbg !1667
  %add.ptr = getelementptr inbounds i8, ptr %pix1, i64 8, !dbg !1668
  %add.ptr1 = getelementptr inbounds i8, ptr %pix2, i64 8, !dbg !1669
  %call2 = tail call fastcc i32 @sa8d_8x8(ptr noundef nonnull %add.ptr, i32 noundef %i_pix1, ptr noundef nonnull %add.ptr1, i32 noundef %i_pix2), !dbg !1670
  %mul = shl nsw i32 %i_pix1, 3, !dbg !1671
  %idx.ext = sext i32 %mul to i64, !dbg !1672
  %add.ptr3 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext, !dbg !1672
  %mul4 = shl nsw i32 %i_pix2, 3, !dbg !1673
  %idx.ext5 = sext i32 %mul4 to i64, !dbg !1674
  %add.ptr6 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext5, !dbg !1674
  %call7 = tail call fastcc i32 @sa8d_8x8(ptr noundef %add.ptr3, i32 noundef %i_pix1, ptr noundef %add.ptr6, i32 noundef %i_pix2), !dbg !1675
  %add.ptr12 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.ext, !dbg !1676
  %add.ptr16 = getelementptr inbounds i8, ptr %add.ptr1, i64 %idx.ext5, !dbg !1677
  %call17 = tail call fastcc i32 @sa8d_8x8(ptr noundef nonnull %add.ptr12, i32 noundef %i_pix1, ptr noundef nonnull %add.ptr16, i32 noundef %i_pix2), !dbg !1678
    #dbg_value(i32 poison, !1665, !DIExpression(), !1666)
  %add = add i32 %call, 2, !dbg !1679
  %add8 = add i32 %add, %call2, !dbg !1680
  %add18 = add i32 %add8, %call7, !dbg !1681
  %add19 = add i32 %add18, %call17, !dbg !1682
  %shr = ashr i32 %add19, 2, !dbg !1683
  ret i32 %shr, !dbg !1684
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define internal range(i32 -536870912, 536870912) i32 @x264_pixel_sa8d_8x8(ptr nocapture noundef readonly %pix1, i32 noundef %i_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_pix2) #4 !dbg !1685 {
entry:
    #dbg_value(ptr %pix1, !1687, !DIExpression(), !1692)
    #dbg_value(i32 %i_pix1, !1688, !DIExpression(), !1692)
    #dbg_value(ptr %pix2, !1689, !DIExpression(), !1692)
    #dbg_value(i32 %i_pix2, !1690, !DIExpression(), !1692)
  %call = tail call fastcc i32 @sa8d_8x8(ptr noundef %pix1, i32 noundef %i_pix1, ptr noundef %pix2, i32 noundef %i_pix2), !dbg !1693
    #dbg_value(i32 %call, !1691, !DIExpression(), !1692)
  %add = add nsw i32 %call, 2, !dbg !1694
  %shr = ashr i32 %add, 2, !dbg !1695
  ret i32 %shr, !dbg !1696
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define internal i64 @x264_pixel_var_16x16(ptr nocapture noundef readonly %pix, i32 noundef %i_stride) #4 !dbg !1697 {
entry:
    #dbg_value(ptr %pix, !1699, !DIExpression(), !1709)
    #dbg_value(i32 %i_stride, !1700, !DIExpression(), !1709)
    #dbg_value(i32 0, !1701, !DIExpression(), !1709)
    #dbg_value(i32 0, !1702, !DIExpression(), !1709)
    #dbg_value(i32 0, !1703, !DIExpression(), !1710)
  %idx.ext = sext i32 %i_stride to i64
    #dbg_value(i32 0, !1703, !DIExpression(), !1710)
    #dbg_value(i32 0, !1702, !DIExpression(), !1709)
    #dbg_value(i32 0, !1701, !DIExpression(), !1709)
    #dbg_value(ptr %pix, !1699, !DIExpression(), !1709)
  br label %for.cond1.preheader, !dbg !1711

for.cond1.preheader:                              ; preds = %entry, %for.cond1.preheader
  %y.034 = phi i32 [ 0, %entry ], [ %inc13, %for.cond1.preheader ]
  %sqr.033 = phi i32 [ 0, %entry ], [ %add11.15, %for.cond1.preheader ]
  %sum.032 = phi i32 [ 0, %entry ], [ %add.15, %for.cond1.preheader ]
  %pix.addr.031 = phi ptr [ %pix, %entry ], [ %add.ptr, %for.cond1.preheader ]
    #dbg_value(i32 %y.034, !1703, !DIExpression(), !1710)
    #dbg_value(i32 %sqr.033, !1702, !DIExpression(), !1709)
    #dbg_value(i32 %sum.032, !1701, !DIExpression(), !1709)
    #dbg_value(ptr %pix.addr.031, !1699, !DIExpression(), !1709)
    #dbg_value(i32 0, !1705, !DIExpression(), !1712)
    #dbg_value(i32 %sqr.033, !1702, !DIExpression(), !1709)
    #dbg_value(i32 %sum.032, !1701, !DIExpression(), !1709)
    #dbg_value(i64 0, !1705, !DIExpression(), !1712)
    #dbg_value(i32 %sqr.033, !1702, !DIExpression(), !1709)
    #dbg_value(i32 %sum.032, !1701, !DIExpression(), !1709)
  %0 = load i8, ptr %pix.addr.031, align 1, !dbg !1713
  %conv = zext i8 %0 to i32, !dbg !1713
  %add = add i32 %sum.032, %conv, !dbg !1713
    #dbg_value(i32 %add, !1701, !DIExpression(), !1709)
  %mul = mul nuw nsw i32 %conv, %conv, !dbg !1713
  %add11 = add i32 %mul, %sqr.033, !dbg !1713
    #dbg_value(i32 %add11, !1702, !DIExpression(), !1709)
    #dbg_value(i64 1, !1705, !DIExpression(), !1712)
  %arrayidx.1 = getelementptr inbounds i8, ptr %pix.addr.031, i64 1, !dbg !1713
  %1 = load i8, ptr %arrayidx.1, align 1, !dbg !1713
  %conv.1 = zext i8 %1 to i32, !dbg !1713
  %add.1 = add i32 %add, %conv.1, !dbg !1713
    #dbg_value(i32 %add.1, !1701, !DIExpression(), !1709)
  %mul.1 = mul nuw nsw i32 %conv.1, %conv.1, !dbg !1713
  %add11.1 = add i32 %mul.1, %add11, !dbg !1713
    #dbg_value(i32 %add11.1, !1702, !DIExpression(), !1709)
    #dbg_value(i64 2, !1705, !DIExpression(), !1712)
  %arrayidx.2 = getelementptr inbounds i8, ptr %pix.addr.031, i64 2, !dbg !1713
  %2 = load i8, ptr %arrayidx.2, align 1, !dbg !1713
  %conv.2 = zext i8 %2 to i32, !dbg !1713
  %add.2 = add i32 %add.1, %conv.2, !dbg !1713
    #dbg_value(i32 %add.2, !1701, !DIExpression(), !1709)
  %mul.2 = mul nuw nsw i32 %conv.2, %conv.2, !dbg !1713
  %add11.2 = add i32 %mul.2, %add11.1, !dbg !1713
    #dbg_value(i32 %add11.2, !1702, !DIExpression(), !1709)
    #dbg_value(i64 3, !1705, !DIExpression(), !1712)
  %arrayidx.3 = getelementptr inbounds i8, ptr %pix.addr.031, i64 3, !dbg !1713
  %3 = load i8, ptr %arrayidx.3, align 1, !dbg !1713
  %conv.3 = zext i8 %3 to i32, !dbg !1713
  %add.3 = add i32 %add.2, %conv.3, !dbg !1713
    #dbg_value(i32 %add.3, !1701, !DIExpression(), !1709)
  %mul.3 = mul nuw nsw i32 %conv.3, %conv.3, !dbg !1713
  %add11.3 = add i32 %mul.3, %add11.2, !dbg !1713
    #dbg_value(i32 %add11.3, !1702, !DIExpression(), !1709)
    #dbg_value(i64 4, !1705, !DIExpression(), !1712)
  %arrayidx.4 = getelementptr inbounds i8, ptr %pix.addr.031, i64 4, !dbg !1713
  %4 = load i8, ptr %arrayidx.4, align 1, !dbg !1713
  %conv.4 = zext i8 %4 to i32, !dbg !1713
  %add.4 = add i32 %add.3, %conv.4, !dbg !1713
    #dbg_value(i32 %add.4, !1701, !DIExpression(), !1709)
  %mul.4 = mul nuw nsw i32 %conv.4, %conv.4, !dbg !1713
  %add11.4 = add i32 %mul.4, %add11.3, !dbg !1713
    #dbg_value(i32 %add11.4, !1702, !DIExpression(), !1709)
    #dbg_value(i64 5, !1705, !DIExpression(), !1712)
  %arrayidx.5 = getelementptr inbounds i8, ptr %pix.addr.031, i64 5, !dbg !1713
  %5 = load i8, ptr %arrayidx.5, align 1, !dbg !1713
  %conv.5 = zext i8 %5 to i32, !dbg !1713
  %add.5 = add i32 %add.4, %conv.5, !dbg !1713
    #dbg_value(i32 %add.5, !1701, !DIExpression(), !1709)
  %mul.5 = mul nuw nsw i32 %conv.5, %conv.5, !dbg !1713
  %add11.5 = add i32 %mul.5, %add11.4, !dbg !1713
    #dbg_value(i32 %add11.5, !1702, !DIExpression(), !1709)
    #dbg_value(i64 6, !1705, !DIExpression(), !1712)
  %arrayidx.6 = getelementptr inbounds i8, ptr %pix.addr.031, i64 6, !dbg !1713
  %6 = load i8, ptr %arrayidx.6, align 1, !dbg !1713
  %conv.6 = zext i8 %6 to i32, !dbg !1713
  %add.6 = add i32 %add.5, %conv.6, !dbg !1713
    #dbg_value(i32 %add.6, !1701, !DIExpression(), !1709)
  %mul.6 = mul nuw nsw i32 %conv.6, %conv.6, !dbg !1713
  %add11.6 = add i32 %mul.6, %add11.5, !dbg !1713
    #dbg_value(i32 %add11.6, !1702, !DIExpression(), !1709)
    #dbg_value(i64 7, !1705, !DIExpression(), !1712)
  %arrayidx.7 = getelementptr inbounds i8, ptr %pix.addr.031, i64 7, !dbg !1713
  %7 = load i8, ptr %arrayidx.7, align 1, !dbg !1713
  %conv.7 = zext i8 %7 to i32, !dbg !1713
  %add.7 = add i32 %add.6, %conv.7, !dbg !1713
    #dbg_value(i32 %add.7, !1701, !DIExpression(), !1709)
  %mul.7 = mul nuw nsw i32 %conv.7, %conv.7, !dbg !1713
  %add11.7 = add i32 %mul.7, %add11.6, !dbg !1713
    #dbg_value(i32 %add11.7, !1702, !DIExpression(), !1709)
    #dbg_value(i64 8, !1705, !DIExpression(), !1712)
  %arrayidx.8 = getelementptr inbounds i8, ptr %pix.addr.031, i64 8, !dbg !1713
  %8 = load i8, ptr %arrayidx.8, align 1, !dbg !1713
  %conv.8 = zext i8 %8 to i32, !dbg !1713
  %add.8 = add i32 %add.7, %conv.8, !dbg !1713
    #dbg_value(i32 %add.8, !1701, !DIExpression(), !1709)
  %mul.8 = mul nuw nsw i32 %conv.8, %conv.8, !dbg !1713
  %add11.8 = add i32 %mul.8, %add11.7, !dbg !1713
    #dbg_value(i32 %add11.8, !1702, !DIExpression(), !1709)
    #dbg_value(i64 9, !1705, !DIExpression(), !1712)
  %arrayidx.9 = getelementptr inbounds i8, ptr %pix.addr.031, i64 9, !dbg !1713
  %9 = load i8, ptr %arrayidx.9, align 1, !dbg !1713
  %conv.9 = zext i8 %9 to i32, !dbg !1713
  %add.9 = add i32 %add.8, %conv.9, !dbg !1713
    #dbg_value(i32 %add.9, !1701, !DIExpression(), !1709)
  %mul.9 = mul nuw nsw i32 %conv.9, %conv.9, !dbg !1713
  %add11.9 = add i32 %mul.9, %add11.8, !dbg !1713
    #dbg_value(i32 %add11.9, !1702, !DIExpression(), !1709)
    #dbg_value(i64 10, !1705, !DIExpression(), !1712)
  %arrayidx.10 = getelementptr inbounds i8, ptr %pix.addr.031, i64 10, !dbg !1713
  %10 = load i8, ptr %arrayidx.10, align 1, !dbg !1713
  %conv.10 = zext i8 %10 to i32, !dbg !1713
  %add.10 = add i32 %add.9, %conv.10, !dbg !1713
    #dbg_value(i32 %add.10, !1701, !DIExpression(), !1709)
  %mul.10 = mul nuw nsw i32 %conv.10, %conv.10, !dbg !1713
  %add11.10 = add i32 %mul.10, %add11.9, !dbg !1713
    #dbg_value(i32 %add11.10, !1702, !DIExpression(), !1709)
    #dbg_value(i64 11, !1705, !DIExpression(), !1712)
  %arrayidx.11 = getelementptr inbounds i8, ptr %pix.addr.031, i64 11, !dbg !1713
  %11 = load i8, ptr %arrayidx.11, align 1, !dbg !1713
  %conv.11 = zext i8 %11 to i32, !dbg !1713
  %add.11 = add i32 %add.10, %conv.11, !dbg !1713
    #dbg_value(i32 %add.11, !1701, !DIExpression(), !1709)
  %mul.11 = mul nuw nsw i32 %conv.11, %conv.11, !dbg !1713
  %add11.11 = add i32 %mul.11, %add11.10, !dbg !1713
    #dbg_value(i32 %add11.11, !1702, !DIExpression(), !1709)
    #dbg_value(i64 12, !1705, !DIExpression(), !1712)
  %arrayidx.12 = getelementptr inbounds i8, ptr %pix.addr.031, i64 12, !dbg !1713
  %12 = load i8, ptr %arrayidx.12, align 1, !dbg !1713
  %conv.12 = zext i8 %12 to i32, !dbg !1713
  %add.12 = add i32 %add.11, %conv.12, !dbg !1713
    #dbg_value(i32 %add.12, !1701, !DIExpression(), !1709)
  %mul.12 = mul nuw nsw i32 %conv.12, %conv.12, !dbg !1713
  %add11.12 = add i32 %mul.12, %add11.11, !dbg !1713
    #dbg_value(i32 %add11.12, !1702, !DIExpression(), !1709)
    #dbg_value(i64 13, !1705, !DIExpression(), !1712)
  %arrayidx.13 = getelementptr inbounds i8, ptr %pix.addr.031, i64 13, !dbg !1713
  %13 = load i8, ptr %arrayidx.13, align 1, !dbg !1713
  %conv.13 = zext i8 %13 to i32, !dbg !1713
  %add.13 = add i32 %add.12, %conv.13, !dbg !1713
    #dbg_value(i32 %add.13, !1701, !DIExpression(), !1709)
  %mul.13 = mul nuw nsw i32 %conv.13, %conv.13, !dbg !1713
  %add11.13 = add i32 %mul.13, %add11.12, !dbg !1713
    #dbg_value(i32 %add11.13, !1702, !DIExpression(), !1709)
    #dbg_value(i64 14, !1705, !DIExpression(), !1712)
  %arrayidx.14 = getelementptr inbounds i8, ptr %pix.addr.031, i64 14, !dbg !1713
  %14 = load i8, ptr %arrayidx.14, align 1, !dbg !1713
  %conv.14 = zext i8 %14 to i32, !dbg !1713
  %add.14 = add i32 %add.13, %conv.14, !dbg !1713
    #dbg_value(i32 %add.14, !1701, !DIExpression(), !1709)
  %mul.14 = mul nuw nsw i32 %conv.14, %conv.14, !dbg !1713
  %add11.14 = add i32 %mul.14, %add11.13, !dbg !1713
    #dbg_value(i32 %add11.14, !1702, !DIExpression(), !1709)
    #dbg_value(i64 15, !1705, !DIExpression(), !1712)
  %arrayidx.15 = getelementptr inbounds i8, ptr %pix.addr.031, i64 15, !dbg !1713
  %15 = load i8, ptr %arrayidx.15, align 1, !dbg !1713
  %conv.15 = zext i8 %15 to i32, !dbg !1713
  %add.15 = add i32 %add.14, %conv.15, !dbg !1713
    #dbg_value(i32 %add.15, !1701, !DIExpression(), !1709)
  %mul.15 = mul nuw nsw i32 %conv.15, %conv.15, !dbg !1713
  %add11.15 = add i32 %mul.15, %add11.14, !dbg !1713
    #dbg_value(i32 %add11.15, !1702, !DIExpression(), !1709)
    #dbg_value(i64 16, !1705, !DIExpression(), !1712)
  %add.ptr = getelementptr inbounds i8, ptr %pix.addr.031, i64 %idx.ext, !dbg !1716
    #dbg_value(ptr %add.ptr, !1699, !DIExpression(), !1709)
  %inc13 = add nuw nsw i32 %y.034, 1, !dbg !1717
    #dbg_value(i32 %inc13, !1703, !DIExpression(), !1710)
  %exitcond.not = icmp eq i32 %inc13, 16, !dbg !1717
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond1.preheader, !dbg !1711, !llvm.loop !1718

for.cond.cleanup:                                 ; preds = %for.cond1.preheader
  %conv15 = zext i32 %add.15 to i64, !dbg !1719
  %conv16 = zext i32 %add11.15 to i64, !dbg !1719
  %shl = shl nuw i64 %conv16, 32, !dbg !1719
  %add17 = or disjoint i64 %shl, %conv15, !dbg !1719
  ret i64 %add17, !dbg !1719
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define internal i64 @x264_pixel_var_8x8(ptr nocapture noundef readonly %pix, i32 noundef %i_stride) #6 !dbg !1720 {
entry:
    #dbg_value(ptr %pix, !1722, !DIExpression(), !1732)
    #dbg_value(i32 %i_stride, !1723, !DIExpression(), !1732)
    #dbg_value(i32 0, !1724, !DIExpression(), !1732)
    #dbg_value(i32 0, !1725, !DIExpression(), !1732)
    #dbg_value(i32 0, !1726, !DIExpression(), !1733)
  %idx.ext = sext i32 %i_stride to i64
    #dbg_value(i32 0, !1726, !DIExpression(), !1733)
    #dbg_value(i32 0, !1725, !DIExpression(), !1732)
    #dbg_value(i32 0, !1724, !DIExpression(), !1732)
    #dbg_value(ptr %pix, !1722, !DIExpression(), !1732)
    #dbg_value(i32 0, !1726, !DIExpression(), !1733)
    #dbg_value(ptr %pix, !1722, !DIExpression(), !1732)
    #dbg_value(i32 0, !1728, !DIExpression(), !1734)
    #dbg_value(i32 0, !1725, !DIExpression(), !1732)
    #dbg_value(i32 0, !1724, !DIExpression(), !1732)
    #dbg_value(i64 0, !1728, !DIExpression(), !1734)
    #dbg_value(i32 0, !1725, !DIExpression(), !1732)
    #dbg_value(i32 0, !1724, !DIExpression(), !1732)
  %0 = load i8, ptr %pix, align 1, !dbg !1735
  %conv = zext i8 %0 to i32, !dbg !1735
    #dbg_value(i32 %conv, !1724, !DIExpression(), !1732)
  %mul = mul nuw nsw i32 %conv, %conv, !dbg !1735
    #dbg_value(i32 %mul, !1725, !DIExpression(), !1732)
    #dbg_value(i64 1, !1728, !DIExpression(), !1734)
  %arrayidx.1 = getelementptr inbounds i8, ptr %pix, i64 1, !dbg !1735
  %1 = load i8, ptr %arrayidx.1, align 1, !dbg !1735
  %conv.1 = zext i8 %1 to i32, !dbg !1735
  %add.1 = add nuw nsw i32 %conv, %conv.1, !dbg !1735
    #dbg_value(i32 %add.1, !1724, !DIExpression(), !1732)
  %mul.1 = mul nuw nsw i32 %conv.1, %conv.1, !dbg !1735
  %add11.1 = add nuw nsw i32 %mul.1, %mul, !dbg !1735
    #dbg_value(i32 %add11.1, !1725, !DIExpression(), !1732)
    #dbg_value(i64 2, !1728, !DIExpression(), !1734)
  %arrayidx.2 = getelementptr inbounds i8, ptr %pix, i64 2, !dbg !1735
  %2 = load i8, ptr %arrayidx.2, align 1, !dbg !1735
  %conv.2 = zext i8 %2 to i32, !dbg !1735
  %add.2 = add nuw nsw i32 %add.1, %conv.2, !dbg !1735
    #dbg_value(i32 %add.2, !1724, !DIExpression(), !1732)
  %mul.2 = mul nuw nsw i32 %conv.2, %conv.2, !dbg !1735
  %add11.2 = add nuw nsw i32 %mul.2, %add11.1, !dbg !1735
    #dbg_value(i32 %add11.2, !1725, !DIExpression(), !1732)
    #dbg_value(i64 3, !1728, !DIExpression(), !1734)
  %arrayidx.3 = getelementptr inbounds i8, ptr %pix, i64 3, !dbg !1735
  %3 = load i8, ptr %arrayidx.3, align 1, !dbg !1735
  %conv.3 = zext i8 %3 to i32, !dbg !1735
  %add.3 = add nuw nsw i32 %add.2, %conv.3, !dbg !1735
    #dbg_value(i32 %add.3, !1724, !DIExpression(), !1732)
  %mul.3 = mul nuw nsw i32 %conv.3, %conv.3, !dbg !1735
  %add11.3 = add nuw nsw i32 %mul.3, %add11.2, !dbg !1735
    #dbg_value(i32 %add11.3, !1725, !DIExpression(), !1732)
    #dbg_value(i64 4, !1728, !DIExpression(), !1734)
  %arrayidx.4 = getelementptr inbounds i8, ptr %pix, i64 4, !dbg !1735
  %4 = load i8, ptr %arrayidx.4, align 1, !dbg !1735
  %conv.4 = zext i8 %4 to i32, !dbg !1735
  %add.4 = add nuw nsw i32 %add.3, %conv.4, !dbg !1735
    #dbg_value(i32 %add.4, !1724, !DIExpression(), !1732)
  %mul.4 = mul nuw nsw i32 %conv.4, %conv.4, !dbg !1735
  %add11.4 = add nuw nsw i32 %mul.4, %add11.3, !dbg !1735
    #dbg_value(i32 %add11.4, !1725, !DIExpression(), !1732)
    #dbg_value(i64 5, !1728, !DIExpression(), !1734)
  %arrayidx.5 = getelementptr inbounds i8, ptr %pix, i64 5, !dbg !1735
  %5 = load i8, ptr %arrayidx.5, align 1, !dbg !1735
  %conv.5 = zext i8 %5 to i32, !dbg !1735
  %add.5 = add nuw nsw i32 %add.4, %conv.5, !dbg !1735
    #dbg_value(i32 %add.5, !1724, !DIExpression(), !1732)
  %mul.5 = mul nuw nsw i32 %conv.5, %conv.5, !dbg !1735
  %add11.5 = add nuw nsw i32 %mul.5, %add11.4, !dbg !1735
    #dbg_value(i32 %add11.5, !1725, !DIExpression(), !1732)
    #dbg_value(i64 6, !1728, !DIExpression(), !1734)
  %arrayidx.6 = getelementptr inbounds i8, ptr %pix, i64 6, !dbg !1735
  %6 = load i8, ptr %arrayidx.6, align 1, !dbg !1735
  %conv.6 = zext i8 %6 to i32, !dbg !1735
  %add.6 = add nuw nsw i32 %add.5, %conv.6, !dbg !1735
    #dbg_value(i32 %add.6, !1724, !DIExpression(), !1732)
  %mul.6 = mul nuw nsw i32 %conv.6, %conv.6, !dbg !1735
  %add11.6 = add nuw nsw i32 %mul.6, %add11.5, !dbg !1735
    #dbg_value(i32 %add11.6, !1725, !DIExpression(), !1732)
    #dbg_value(i64 7, !1728, !DIExpression(), !1734)
  %arrayidx.7 = getelementptr inbounds i8, ptr %pix, i64 7, !dbg !1735
  %7 = load i8, ptr %arrayidx.7, align 1, !dbg !1735
  %conv.7 = zext i8 %7 to i32, !dbg !1735
  %add.7 = add nuw nsw i32 %add.6, %conv.7, !dbg !1735
    #dbg_value(i32 %add.7, !1724, !DIExpression(), !1732)
  %mul.7 = mul nuw nsw i32 %conv.7, %conv.7, !dbg !1735
  %add11.7 = add nuw nsw i32 %mul.7, %add11.6, !dbg !1735
    #dbg_value(i32 %add11.7, !1725, !DIExpression(), !1732)
    #dbg_value(i64 8, !1728, !DIExpression(), !1734)
  %add.ptr = getelementptr inbounds i8, ptr %pix, i64 %idx.ext, !dbg !1738
    #dbg_value(ptr %add.ptr, !1722, !DIExpression(), !1732)
    #dbg_value(i32 1, !1726, !DIExpression(), !1733)
    #dbg_value(i32 0, !1728, !DIExpression(), !1734)
    #dbg_value(i64 0, !1728, !DIExpression(), !1734)
    #dbg_value(i32 %add11.7, !1725, !DIExpression(), !1732)
    #dbg_value(i32 %add.7, !1724, !DIExpression(), !1732)
  %8 = load i8, ptr %add.ptr, align 1, !dbg !1735
  %conv.136 = zext i8 %8 to i32, !dbg !1735
  %add.137 = add nuw nsw i32 %add.7, %conv.136, !dbg !1735
    #dbg_value(i32 %add.137, !1724, !DIExpression(), !1732)
  %mul.138 = mul nuw nsw i32 %conv.136, %conv.136, !dbg !1735
  %add11.139 = add nuw nsw i32 %mul.138, %add11.7, !dbg !1735
    #dbg_value(i32 %add11.139, !1725, !DIExpression(), !1732)
    #dbg_value(i64 1, !1728, !DIExpression(), !1734)
  %arrayidx.1.1 = getelementptr inbounds i8, ptr %add.ptr, i64 1, !dbg !1735
  %9 = load i8, ptr %arrayidx.1.1, align 1, !dbg !1735
  %conv.1.1 = zext i8 %9 to i32, !dbg !1735
  %add.1.1 = add nuw nsw i32 %add.137, %conv.1.1, !dbg !1735
    #dbg_value(i32 %add.1.1, !1724, !DIExpression(), !1732)
  %mul.1.1 = mul nuw nsw i32 %conv.1.1, %conv.1.1, !dbg !1735
  %add11.1.1 = add nuw nsw i32 %mul.1.1, %add11.139, !dbg !1735
    #dbg_value(i32 %add11.1.1, !1725, !DIExpression(), !1732)
    #dbg_value(i64 2, !1728, !DIExpression(), !1734)
  %arrayidx.2.1 = getelementptr inbounds i8, ptr %add.ptr, i64 2, !dbg !1735
  %10 = load i8, ptr %arrayidx.2.1, align 1, !dbg !1735
  %conv.2.1 = zext i8 %10 to i32, !dbg !1735
  %add.2.1 = add nuw nsw i32 %add.1.1, %conv.2.1, !dbg !1735
    #dbg_value(i32 %add.2.1, !1724, !DIExpression(), !1732)
  %mul.2.1 = mul nuw nsw i32 %conv.2.1, %conv.2.1, !dbg !1735
  %add11.2.1 = add nuw nsw i32 %mul.2.1, %add11.1.1, !dbg !1735
    #dbg_value(i32 %add11.2.1, !1725, !DIExpression(), !1732)
    #dbg_value(i64 3, !1728, !DIExpression(), !1734)
  %arrayidx.3.1 = getelementptr inbounds i8, ptr %add.ptr, i64 3, !dbg !1735
  %11 = load i8, ptr %arrayidx.3.1, align 1, !dbg !1735
  %conv.3.1 = zext i8 %11 to i32, !dbg !1735
  %add.3.1 = add nuw nsw i32 %add.2.1, %conv.3.1, !dbg !1735
    #dbg_value(i32 %add.3.1, !1724, !DIExpression(), !1732)
  %mul.3.1 = mul nuw nsw i32 %conv.3.1, %conv.3.1, !dbg !1735
  %add11.3.1 = add nuw nsw i32 %mul.3.1, %add11.2.1, !dbg !1735
    #dbg_value(i32 %add11.3.1, !1725, !DIExpression(), !1732)
    #dbg_value(i64 4, !1728, !DIExpression(), !1734)
  %arrayidx.4.1 = getelementptr inbounds i8, ptr %add.ptr, i64 4, !dbg !1735
  %12 = load i8, ptr %arrayidx.4.1, align 1, !dbg !1735
  %conv.4.1 = zext i8 %12 to i32, !dbg !1735
  %add.4.1 = add nuw nsw i32 %add.3.1, %conv.4.1, !dbg !1735
    #dbg_value(i32 %add.4.1, !1724, !DIExpression(), !1732)
  %mul.4.1 = mul nuw nsw i32 %conv.4.1, %conv.4.1, !dbg !1735
  %add11.4.1 = add nuw nsw i32 %mul.4.1, %add11.3.1, !dbg !1735
    #dbg_value(i32 %add11.4.1, !1725, !DIExpression(), !1732)
    #dbg_value(i64 5, !1728, !DIExpression(), !1734)
  %arrayidx.5.1 = getelementptr inbounds i8, ptr %add.ptr, i64 5, !dbg !1735
  %13 = load i8, ptr %arrayidx.5.1, align 1, !dbg !1735
  %conv.5.1 = zext i8 %13 to i32, !dbg !1735
  %add.5.1 = add nuw nsw i32 %add.4.1, %conv.5.1, !dbg !1735
    #dbg_value(i32 %add.5.1, !1724, !DIExpression(), !1732)
  %mul.5.1 = mul nuw nsw i32 %conv.5.1, %conv.5.1, !dbg !1735
  %add11.5.1 = add nuw nsw i32 %mul.5.1, %add11.4.1, !dbg !1735
    #dbg_value(i32 %add11.5.1, !1725, !DIExpression(), !1732)
    #dbg_value(i64 6, !1728, !DIExpression(), !1734)
  %arrayidx.6.1 = getelementptr inbounds i8, ptr %add.ptr, i64 6, !dbg !1735
  %14 = load i8, ptr %arrayidx.6.1, align 1, !dbg !1735
  %conv.6.1 = zext i8 %14 to i32, !dbg !1735
  %add.6.1 = add nuw nsw i32 %add.5.1, %conv.6.1, !dbg !1735
    #dbg_value(i32 %add.6.1, !1724, !DIExpression(), !1732)
  %mul.6.1 = mul nuw nsw i32 %conv.6.1, %conv.6.1, !dbg !1735
  %add11.6.1 = add nuw nsw i32 %mul.6.1, %add11.5.1, !dbg !1735
    #dbg_value(i32 %add11.6.1, !1725, !DIExpression(), !1732)
    #dbg_value(i64 7, !1728, !DIExpression(), !1734)
  %arrayidx.7.1 = getelementptr inbounds i8, ptr %add.ptr, i64 7, !dbg !1735
  %15 = load i8, ptr %arrayidx.7.1, align 1, !dbg !1735
  %conv.7.1 = zext i8 %15 to i32, !dbg !1735
  %add.7.1 = add nuw nsw i32 %add.6.1, %conv.7.1, !dbg !1735
    #dbg_value(i32 %add.7.1, !1724, !DIExpression(), !1732)
  %mul.7.1 = mul nuw nsw i32 %conv.7.1, %conv.7.1, !dbg !1735
  %add11.7.1 = add nuw nsw i32 %mul.7.1, %add11.6.1, !dbg !1735
    #dbg_value(i32 %add11.7.1, !1725, !DIExpression(), !1732)
    #dbg_value(i64 8, !1728, !DIExpression(), !1734)
  %add.ptr.1 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.ext, !dbg !1738
    #dbg_value(ptr %add.ptr.1, !1722, !DIExpression(), !1732)
    #dbg_value(i32 2, !1726, !DIExpression(), !1733)
    #dbg_value(i32 0, !1728, !DIExpression(), !1734)
    #dbg_value(i64 0, !1728, !DIExpression(), !1734)
    #dbg_value(i32 %add11.7.1, !1725, !DIExpression(), !1732)
    #dbg_value(i32 %add.7.1, !1724, !DIExpression(), !1732)
  %16 = load i8, ptr %add.ptr.1, align 1, !dbg !1735
  %conv.240 = zext i8 %16 to i32, !dbg !1735
  %add.241 = add nuw nsw i32 %add.7.1, %conv.240, !dbg !1735
    #dbg_value(i32 %add.241, !1724, !DIExpression(), !1732)
  %mul.242 = mul nuw nsw i32 %conv.240, %conv.240, !dbg !1735
  %add11.243 = add nuw nsw i32 %mul.242, %add11.7.1, !dbg !1735
    #dbg_value(i32 %add11.243, !1725, !DIExpression(), !1732)
    #dbg_value(i64 1, !1728, !DIExpression(), !1734)
  %arrayidx.1.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 1, !dbg !1735
  %17 = load i8, ptr %arrayidx.1.2, align 1, !dbg !1735
  %conv.1.2 = zext i8 %17 to i32, !dbg !1735
  %add.1.2 = add nuw nsw i32 %add.241, %conv.1.2, !dbg !1735
    #dbg_value(i32 %add.1.2, !1724, !DIExpression(), !1732)
  %mul.1.2 = mul nuw nsw i32 %conv.1.2, %conv.1.2, !dbg !1735
  %add11.1.2 = add nuw nsw i32 %mul.1.2, %add11.243, !dbg !1735
    #dbg_value(i32 %add11.1.2, !1725, !DIExpression(), !1732)
    #dbg_value(i64 2, !1728, !DIExpression(), !1734)
  %arrayidx.2.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 2, !dbg !1735
  %18 = load i8, ptr %arrayidx.2.2, align 1, !dbg !1735
  %conv.2.2 = zext i8 %18 to i32, !dbg !1735
  %add.2.2 = add nuw nsw i32 %add.1.2, %conv.2.2, !dbg !1735
    #dbg_value(i32 %add.2.2, !1724, !DIExpression(), !1732)
  %mul.2.2 = mul nuw nsw i32 %conv.2.2, %conv.2.2, !dbg !1735
  %add11.2.2 = add nuw nsw i32 %mul.2.2, %add11.1.2, !dbg !1735
    #dbg_value(i32 %add11.2.2, !1725, !DIExpression(), !1732)
    #dbg_value(i64 3, !1728, !DIExpression(), !1734)
  %arrayidx.3.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 3, !dbg !1735
  %19 = load i8, ptr %arrayidx.3.2, align 1, !dbg !1735
  %conv.3.2 = zext i8 %19 to i32, !dbg !1735
  %add.3.2 = add nuw nsw i32 %add.2.2, %conv.3.2, !dbg !1735
    #dbg_value(i32 %add.3.2, !1724, !DIExpression(), !1732)
  %mul.3.2 = mul nuw nsw i32 %conv.3.2, %conv.3.2, !dbg !1735
  %add11.3.2 = add nuw nsw i32 %mul.3.2, %add11.2.2, !dbg !1735
    #dbg_value(i32 %add11.3.2, !1725, !DIExpression(), !1732)
    #dbg_value(i64 4, !1728, !DIExpression(), !1734)
  %arrayidx.4.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 4, !dbg !1735
  %20 = load i8, ptr %arrayidx.4.2, align 1, !dbg !1735
  %conv.4.2 = zext i8 %20 to i32, !dbg !1735
  %add.4.2 = add nuw nsw i32 %add.3.2, %conv.4.2, !dbg !1735
    #dbg_value(i32 %add.4.2, !1724, !DIExpression(), !1732)
  %mul.4.2 = mul nuw nsw i32 %conv.4.2, %conv.4.2, !dbg !1735
  %add11.4.2 = add nuw nsw i32 %mul.4.2, %add11.3.2, !dbg !1735
    #dbg_value(i32 %add11.4.2, !1725, !DIExpression(), !1732)
    #dbg_value(i64 5, !1728, !DIExpression(), !1734)
  %arrayidx.5.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 5, !dbg !1735
  %21 = load i8, ptr %arrayidx.5.2, align 1, !dbg !1735
  %conv.5.2 = zext i8 %21 to i32, !dbg !1735
  %add.5.2 = add nuw nsw i32 %add.4.2, %conv.5.2, !dbg !1735
    #dbg_value(i32 %add.5.2, !1724, !DIExpression(), !1732)
  %mul.5.2 = mul nuw nsw i32 %conv.5.2, %conv.5.2, !dbg !1735
  %add11.5.2 = add nuw nsw i32 %mul.5.2, %add11.4.2, !dbg !1735
    #dbg_value(i32 %add11.5.2, !1725, !DIExpression(), !1732)
    #dbg_value(i64 6, !1728, !DIExpression(), !1734)
  %arrayidx.6.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 6, !dbg !1735
  %22 = load i8, ptr %arrayidx.6.2, align 1, !dbg !1735
  %conv.6.2 = zext i8 %22 to i32, !dbg !1735
  %add.6.2 = add nuw nsw i32 %add.5.2, %conv.6.2, !dbg !1735
    #dbg_value(i32 %add.6.2, !1724, !DIExpression(), !1732)
  %mul.6.2 = mul nuw nsw i32 %conv.6.2, %conv.6.2, !dbg !1735
  %add11.6.2 = add nuw nsw i32 %mul.6.2, %add11.5.2, !dbg !1735
    #dbg_value(i32 %add11.6.2, !1725, !DIExpression(), !1732)
    #dbg_value(i64 7, !1728, !DIExpression(), !1734)
  %arrayidx.7.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 7, !dbg !1735
  %23 = load i8, ptr %arrayidx.7.2, align 1, !dbg !1735
  %conv.7.2 = zext i8 %23 to i32, !dbg !1735
  %add.7.2 = add nuw nsw i32 %add.6.2, %conv.7.2, !dbg !1735
    #dbg_value(i32 %add.7.2, !1724, !DIExpression(), !1732)
  %mul.7.2 = mul nuw nsw i32 %conv.7.2, %conv.7.2, !dbg !1735
  %add11.7.2 = add nuw nsw i32 %mul.7.2, %add11.6.2, !dbg !1735
    #dbg_value(i32 %add11.7.2, !1725, !DIExpression(), !1732)
    #dbg_value(i64 8, !1728, !DIExpression(), !1734)
  %add.ptr.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 %idx.ext, !dbg !1738
    #dbg_value(ptr %add.ptr.2, !1722, !DIExpression(), !1732)
    #dbg_value(i32 3, !1726, !DIExpression(), !1733)
    #dbg_value(i32 0, !1728, !DIExpression(), !1734)
    #dbg_value(i64 0, !1728, !DIExpression(), !1734)
    #dbg_value(i32 %add11.7.2, !1725, !DIExpression(), !1732)
    #dbg_value(i32 %add.7.2, !1724, !DIExpression(), !1732)
  %24 = load i8, ptr %add.ptr.2, align 1, !dbg !1735
  %conv.344 = zext i8 %24 to i32, !dbg !1735
  %add.345 = add nuw nsw i32 %add.7.2, %conv.344, !dbg !1735
    #dbg_value(i32 %add.345, !1724, !DIExpression(), !1732)
  %mul.346 = mul nuw nsw i32 %conv.344, %conv.344, !dbg !1735
  %add11.347 = add nuw nsw i32 %mul.346, %add11.7.2, !dbg !1735
    #dbg_value(i32 %add11.347, !1725, !DIExpression(), !1732)
    #dbg_value(i64 1, !1728, !DIExpression(), !1734)
  %arrayidx.1.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 1, !dbg !1735
  %25 = load i8, ptr %arrayidx.1.3, align 1, !dbg !1735
  %conv.1.3 = zext i8 %25 to i32, !dbg !1735
  %add.1.3 = add nuw nsw i32 %add.345, %conv.1.3, !dbg !1735
    #dbg_value(i32 %add.1.3, !1724, !DIExpression(), !1732)
  %mul.1.3 = mul nuw nsw i32 %conv.1.3, %conv.1.3, !dbg !1735
  %add11.1.3 = add nuw nsw i32 %mul.1.3, %add11.347, !dbg !1735
    #dbg_value(i32 %add11.1.3, !1725, !DIExpression(), !1732)
    #dbg_value(i64 2, !1728, !DIExpression(), !1734)
  %arrayidx.2.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 2, !dbg !1735
  %26 = load i8, ptr %arrayidx.2.3, align 1, !dbg !1735
  %conv.2.3 = zext i8 %26 to i32, !dbg !1735
  %add.2.3 = add nuw nsw i32 %add.1.3, %conv.2.3, !dbg !1735
    #dbg_value(i32 %add.2.3, !1724, !DIExpression(), !1732)
  %mul.2.3 = mul nuw nsw i32 %conv.2.3, %conv.2.3, !dbg !1735
  %add11.2.3 = add nuw nsw i32 %mul.2.3, %add11.1.3, !dbg !1735
    #dbg_value(i32 %add11.2.3, !1725, !DIExpression(), !1732)
    #dbg_value(i64 3, !1728, !DIExpression(), !1734)
  %arrayidx.3.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 3, !dbg !1735
  %27 = load i8, ptr %arrayidx.3.3, align 1, !dbg !1735
  %conv.3.3 = zext i8 %27 to i32, !dbg !1735
  %add.3.3 = add nuw nsw i32 %add.2.3, %conv.3.3, !dbg !1735
    #dbg_value(i32 %add.3.3, !1724, !DIExpression(), !1732)
  %mul.3.3 = mul nuw nsw i32 %conv.3.3, %conv.3.3, !dbg !1735
  %add11.3.3 = add nuw nsw i32 %mul.3.3, %add11.2.3, !dbg !1735
    #dbg_value(i32 %add11.3.3, !1725, !DIExpression(), !1732)
    #dbg_value(i64 4, !1728, !DIExpression(), !1734)
  %arrayidx.4.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 4, !dbg !1735
  %28 = load i8, ptr %arrayidx.4.3, align 1, !dbg !1735
  %conv.4.3 = zext i8 %28 to i32, !dbg !1735
  %add.4.3 = add nuw nsw i32 %add.3.3, %conv.4.3, !dbg !1735
    #dbg_value(i32 %add.4.3, !1724, !DIExpression(), !1732)
  %mul.4.3 = mul nuw nsw i32 %conv.4.3, %conv.4.3, !dbg !1735
  %add11.4.3 = add nuw nsw i32 %mul.4.3, %add11.3.3, !dbg !1735
    #dbg_value(i32 %add11.4.3, !1725, !DIExpression(), !1732)
    #dbg_value(i64 5, !1728, !DIExpression(), !1734)
  %arrayidx.5.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 5, !dbg !1735
  %29 = load i8, ptr %arrayidx.5.3, align 1, !dbg !1735
  %conv.5.3 = zext i8 %29 to i32, !dbg !1735
  %add.5.3 = add nuw nsw i32 %add.4.3, %conv.5.3, !dbg !1735
    #dbg_value(i32 %add.5.3, !1724, !DIExpression(), !1732)
  %mul.5.3 = mul nuw nsw i32 %conv.5.3, %conv.5.3, !dbg !1735
  %add11.5.3 = add nuw nsw i32 %mul.5.3, %add11.4.3, !dbg !1735
    #dbg_value(i32 %add11.5.3, !1725, !DIExpression(), !1732)
    #dbg_value(i64 6, !1728, !DIExpression(), !1734)
  %arrayidx.6.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 6, !dbg !1735
  %30 = load i8, ptr %arrayidx.6.3, align 1, !dbg !1735
  %conv.6.3 = zext i8 %30 to i32, !dbg !1735
  %add.6.3 = add nuw nsw i32 %add.5.3, %conv.6.3, !dbg !1735
    #dbg_value(i32 %add.6.3, !1724, !DIExpression(), !1732)
  %mul.6.3 = mul nuw nsw i32 %conv.6.3, %conv.6.3, !dbg !1735
  %add11.6.3 = add nuw nsw i32 %mul.6.3, %add11.5.3, !dbg !1735
    #dbg_value(i32 %add11.6.3, !1725, !DIExpression(), !1732)
    #dbg_value(i64 7, !1728, !DIExpression(), !1734)
  %arrayidx.7.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 7, !dbg !1735
  %31 = load i8, ptr %arrayidx.7.3, align 1, !dbg !1735
  %conv.7.3 = zext i8 %31 to i32, !dbg !1735
  %add.7.3 = add nuw nsw i32 %add.6.3, %conv.7.3, !dbg !1735
    #dbg_value(i32 %add.7.3, !1724, !DIExpression(), !1732)
  %mul.7.3 = mul nuw nsw i32 %conv.7.3, %conv.7.3, !dbg !1735
  %add11.7.3 = add nuw nsw i32 %mul.7.3, %add11.6.3, !dbg !1735
    #dbg_value(i32 %add11.7.3, !1725, !DIExpression(), !1732)
    #dbg_value(i64 8, !1728, !DIExpression(), !1734)
  %add.ptr.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 %idx.ext, !dbg !1738
    #dbg_value(ptr %add.ptr.3, !1722, !DIExpression(), !1732)
    #dbg_value(i32 4, !1726, !DIExpression(), !1733)
    #dbg_value(i32 0, !1728, !DIExpression(), !1734)
    #dbg_value(i64 0, !1728, !DIExpression(), !1734)
    #dbg_value(i32 %add11.7.3, !1725, !DIExpression(), !1732)
    #dbg_value(i32 %add.7.3, !1724, !DIExpression(), !1732)
  %32 = load i8, ptr %add.ptr.3, align 1, !dbg !1735
  %conv.448 = zext i8 %32 to i32, !dbg !1735
  %add.449 = add nuw nsw i32 %add.7.3, %conv.448, !dbg !1735
    #dbg_value(i32 %add.449, !1724, !DIExpression(), !1732)
  %mul.450 = mul nuw nsw i32 %conv.448, %conv.448, !dbg !1735
  %add11.451 = add nuw nsw i32 %mul.450, %add11.7.3, !dbg !1735
    #dbg_value(i32 %add11.451, !1725, !DIExpression(), !1732)
    #dbg_value(i64 1, !1728, !DIExpression(), !1734)
  %arrayidx.1.4 = getelementptr inbounds i8, ptr %add.ptr.3, i64 1, !dbg !1735
  %33 = load i8, ptr %arrayidx.1.4, align 1, !dbg !1735
  %conv.1.4 = zext i8 %33 to i32, !dbg !1735
  %add.1.4 = add nuw nsw i32 %add.449, %conv.1.4, !dbg !1735
    #dbg_value(i32 %add.1.4, !1724, !DIExpression(), !1732)
  %mul.1.4 = mul nuw nsw i32 %conv.1.4, %conv.1.4, !dbg !1735
  %add11.1.4 = add nuw nsw i32 %mul.1.4, %add11.451, !dbg !1735
    #dbg_value(i32 %add11.1.4, !1725, !DIExpression(), !1732)
    #dbg_value(i64 2, !1728, !DIExpression(), !1734)
  %arrayidx.2.4 = getelementptr inbounds i8, ptr %add.ptr.3, i64 2, !dbg !1735
  %34 = load i8, ptr %arrayidx.2.4, align 1, !dbg !1735
  %conv.2.4 = zext i8 %34 to i32, !dbg !1735
  %add.2.4 = add nuw nsw i32 %add.1.4, %conv.2.4, !dbg !1735
    #dbg_value(i32 %add.2.4, !1724, !DIExpression(), !1732)
  %mul.2.4 = mul nuw nsw i32 %conv.2.4, %conv.2.4, !dbg !1735
  %add11.2.4 = add nuw nsw i32 %mul.2.4, %add11.1.4, !dbg !1735
    #dbg_value(i32 %add11.2.4, !1725, !DIExpression(), !1732)
    #dbg_value(i64 3, !1728, !DIExpression(), !1734)
  %arrayidx.3.4 = getelementptr inbounds i8, ptr %add.ptr.3, i64 3, !dbg !1735
  %35 = load i8, ptr %arrayidx.3.4, align 1, !dbg !1735
  %conv.3.4 = zext i8 %35 to i32, !dbg !1735
  %add.3.4 = add nuw nsw i32 %add.2.4, %conv.3.4, !dbg !1735
    #dbg_value(i32 %add.3.4, !1724, !DIExpression(), !1732)
  %mul.3.4 = mul nuw nsw i32 %conv.3.4, %conv.3.4, !dbg !1735
  %add11.3.4 = add nuw nsw i32 %mul.3.4, %add11.2.4, !dbg !1735
    #dbg_value(i32 %add11.3.4, !1725, !DIExpression(), !1732)
    #dbg_value(i64 4, !1728, !DIExpression(), !1734)
  %arrayidx.4.4 = getelementptr inbounds i8, ptr %add.ptr.3, i64 4, !dbg !1735
  %36 = load i8, ptr %arrayidx.4.4, align 1, !dbg !1735
  %conv.4.4 = zext i8 %36 to i32, !dbg !1735
  %add.4.4 = add nuw nsw i32 %add.3.4, %conv.4.4, !dbg !1735
    #dbg_value(i32 %add.4.4, !1724, !DIExpression(), !1732)
  %mul.4.4 = mul nuw nsw i32 %conv.4.4, %conv.4.4, !dbg !1735
  %add11.4.4 = add nuw nsw i32 %mul.4.4, %add11.3.4, !dbg !1735
    #dbg_value(i32 %add11.4.4, !1725, !DIExpression(), !1732)
    #dbg_value(i64 5, !1728, !DIExpression(), !1734)
  %arrayidx.5.4 = getelementptr inbounds i8, ptr %add.ptr.3, i64 5, !dbg !1735
  %37 = load i8, ptr %arrayidx.5.4, align 1, !dbg !1735
  %conv.5.4 = zext i8 %37 to i32, !dbg !1735
  %add.5.4 = add nuw nsw i32 %add.4.4, %conv.5.4, !dbg !1735
    #dbg_value(i32 %add.5.4, !1724, !DIExpression(), !1732)
  %mul.5.4 = mul nuw nsw i32 %conv.5.4, %conv.5.4, !dbg !1735
  %add11.5.4 = add nuw nsw i32 %mul.5.4, %add11.4.4, !dbg !1735
    #dbg_value(i32 %add11.5.4, !1725, !DIExpression(), !1732)
    #dbg_value(i64 6, !1728, !DIExpression(), !1734)
  %arrayidx.6.4 = getelementptr inbounds i8, ptr %add.ptr.3, i64 6, !dbg !1735
  %38 = load i8, ptr %arrayidx.6.4, align 1, !dbg !1735
  %conv.6.4 = zext i8 %38 to i32, !dbg !1735
  %add.6.4 = add nuw nsw i32 %add.5.4, %conv.6.4, !dbg !1735
    #dbg_value(i32 %add.6.4, !1724, !DIExpression(), !1732)
  %mul.6.4 = mul nuw nsw i32 %conv.6.4, %conv.6.4, !dbg !1735
  %add11.6.4 = add nuw nsw i32 %mul.6.4, %add11.5.4, !dbg !1735
    #dbg_value(i32 %add11.6.4, !1725, !DIExpression(), !1732)
    #dbg_value(i64 7, !1728, !DIExpression(), !1734)
  %arrayidx.7.4 = getelementptr inbounds i8, ptr %add.ptr.3, i64 7, !dbg !1735
  %39 = load i8, ptr %arrayidx.7.4, align 1, !dbg !1735
  %conv.7.4 = zext i8 %39 to i32, !dbg !1735
  %add.7.4 = add nuw nsw i32 %add.6.4, %conv.7.4, !dbg !1735
    #dbg_value(i32 %add.7.4, !1724, !DIExpression(), !1732)
  %mul.7.4 = mul nuw nsw i32 %conv.7.4, %conv.7.4, !dbg !1735
  %add11.7.4 = add nuw nsw i32 %mul.7.4, %add11.6.4, !dbg !1735
    #dbg_value(i32 %add11.7.4, !1725, !DIExpression(), !1732)
    #dbg_value(i64 8, !1728, !DIExpression(), !1734)
  %add.ptr.4 = getelementptr inbounds i8, ptr %add.ptr.3, i64 %idx.ext, !dbg !1738
    #dbg_value(ptr %add.ptr.4, !1722, !DIExpression(), !1732)
    #dbg_value(i32 5, !1726, !DIExpression(), !1733)
    #dbg_value(i32 0, !1728, !DIExpression(), !1734)
    #dbg_value(i64 0, !1728, !DIExpression(), !1734)
    #dbg_value(i32 %add11.7.4, !1725, !DIExpression(), !1732)
    #dbg_value(i32 %add.7.4, !1724, !DIExpression(), !1732)
  %40 = load i8, ptr %add.ptr.4, align 1, !dbg !1735
  %conv.552 = zext i8 %40 to i32, !dbg !1735
  %add.553 = add nuw nsw i32 %add.7.4, %conv.552, !dbg !1735
    #dbg_value(i32 %add.553, !1724, !DIExpression(), !1732)
  %mul.554 = mul nuw nsw i32 %conv.552, %conv.552, !dbg !1735
  %add11.555 = add nuw nsw i32 %mul.554, %add11.7.4, !dbg !1735
    #dbg_value(i32 %add11.555, !1725, !DIExpression(), !1732)
    #dbg_value(i64 1, !1728, !DIExpression(), !1734)
  %arrayidx.1.5 = getelementptr inbounds i8, ptr %add.ptr.4, i64 1, !dbg !1735
  %41 = load i8, ptr %arrayidx.1.5, align 1, !dbg !1735
  %conv.1.5 = zext i8 %41 to i32, !dbg !1735
  %add.1.5 = add nuw nsw i32 %add.553, %conv.1.5, !dbg !1735
    #dbg_value(i32 %add.1.5, !1724, !DIExpression(), !1732)
  %mul.1.5 = mul nuw nsw i32 %conv.1.5, %conv.1.5, !dbg !1735
  %add11.1.5 = add nuw nsw i32 %mul.1.5, %add11.555, !dbg !1735
    #dbg_value(i32 %add11.1.5, !1725, !DIExpression(), !1732)
    #dbg_value(i64 2, !1728, !DIExpression(), !1734)
  %arrayidx.2.5 = getelementptr inbounds i8, ptr %add.ptr.4, i64 2, !dbg !1735
  %42 = load i8, ptr %arrayidx.2.5, align 1, !dbg !1735
  %conv.2.5 = zext i8 %42 to i32, !dbg !1735
  %add.2.5 = add nuw nsw i32 %add.1.5, %conv.2.5, !dbg !1735
    #dbg_value(i32 %add.2.5, !1724, !DIExpression(), !1732)
  %mul.2.5 = mul nuw nsw i32 %conv.2.5, %conv.2.5, !dbg !1735
  %add11.2.5 = add nuw nsw i32 %mul.2.5, %add11.1.5, !dbg !1735
    #dbg_value(i32 %add11.2.5, !1725, !DIExpression(), !1732)
    #dbg_value(i64 3, !1728, !DIExpression(), !1734)
  %arrayidx.3.5 = getelementptr inbounds i8, ptr %add.ptr.4, i64 3, !dbg !1735
  %43 = load i8, ptr %arrayidx.3.5, align 1, !dbg !1735
  %conv.3.5 = zext i8 %43 to i32, !dbg !1735
  %add.3.5 = add nuw nsw i32 %add.2.5, %conv.3.5, !dbg !1735
    #dbg_value(i32 %add.3.5, !1724, !DIExpression(), !1732)
  %mul.3.5 = mul nuw nsw i32 %conv.3.5, %conv.3.5, !dbg !1735
  %add11.3.5 = add nuw nsw i32 %mul.3.5, %add11.2.5, !dbg !1735
    #dbg_value(i32 %add11.3.5, !1725, !DIExpression(), !1732)
    #dbg_value(i64 4, !1728, !DIExpression(), !1734)
  %arrayidx.4.5 = getelementptr inbounds i8, ptr %add.ptr.4, i64 4, !dbg !1735
  %44 = load i8, ptr %arrayidx.4.5, align 1, !dbg !1735
  %conv.4.5 = zext i8 %44 to i32, !dbg !1735
  %add.4.5 = add nuw nsw i32 %add.3.5, %conv.4.5, !dbg !1735
    #dbg_value(i32 %add.4.5, !1724, !DIExpression(), !1732)
  %mul.4.5 = mul nuw nsw i32 %conv.4.5, %conv.4.5, !dbg !1735
  %add11.4.5 = add nuw nsw i32 %mul.4.5, %add11.3.5, !dbg !1735
    #dbg_value(i32 %add11.4.5, !1725, !DIExpression(), !1732)
    #dbg_value(i64 5, !1728, !DIExpression(), !1734)
  %arrayidx.5.5 = getelementptr inbounds i8, ptr %add.ptr.4, i64 5, !dbg !1735
  %45 = load i8, ptr %arrayidx.5.5, align 1, !dbg !1735
  %conv.5.5 = zext i8 %45 to i32, !dbg !1735
  %add.5.5 = add nuw nsw i32 %add.4.5, %conv.5.5, !dbg !1735
    #dbg_value(i32 %add.5.5, !1724, !DIExpression(), !1732)
  %mul.5.5 = mul nuw nsw i32 %conv.5.5, %conv.5.5, !dbg !1735
  %add11.5.5 = add nuw nsw i32 %mul.5.5, %add11.4.5, !dbg !1735
    #dbg_value(i32 %add11.5.5, !1725, !DIExpression(), !1732)
    #dbg_value(i64 6, !1728, !DIExpression(), !1734)
  %arrayidx.6.5 = getelementptr inbounds i8, ptr %add.ptr.4, i64 6, !dbg !1735
  %46 = load i8, ptr %arrayidx.6.5, align 1, !dbg !1735
  %conv.6.5 = zext i8 %46 to i32, !dbg !1735
  %add.6.5 = add nuw nsw i32 %add.5.5, %conv.6.5, !dbg !1735
    #dbg_value(i32 %add.6.5, !1724, !DIExpression(), !1732)
  %mul.6.5 = mul nuw nsw i32 %conv.6.5, %conv.6.5, !dbg !1735
  %add11.6.5 = add nuw nsw i32 %mul.6.5, %add11.5.5, !dbg !1735
    #dbg_value(i32 %add11.6.5, !1725, !DIExpression(), !1732)
    #dbg_value(i64 7, !1728, !DIExpression(), !1734)
  %arrayidx.7.5 = getelementptr inbounds i8, ptr %add.ptr.4, i64 7, !dbg !1735
  %47 = load i8, ptr %arrayidx.7.5, align 1, !dbg !1735
  %conv.7.5 = zext i8 %47 to i32, !dbg !1735
  %add.7.5 = add nuw nsw i32 %add.6.5, %conv.7.5, !dbg !1735
    #dbg_value(i32 %add.7.5, !1724, !DIExpression(), !1732)
  %mul.7.5 = mul nuw nsw i32 %conv.7.5, %conv.7.5, !dbg !1735
  %add11.7.5 = add nuw nsw i32 %mul.7.5, %add11.6.5, !dbg !1735
    #dbg_value(i32 %add11.7.5, !1725, !DIExpression(), !1732)
    #dbg_value(i64 8, !1728, !DIExpression(), !1734)
  %add.ptr.5 = getelementptr inbounds i8, ptr %add.ptr.4, i64 %idx.ext, !dbg !1738
    #dbg_value(ptr %add.ptr.5, !1722, !DIExpression(), !1732)
    #dbg_value(i32 6, !1726, !DIExpression(), !1733)
    #dbg_value(i32 0, !1728, !DIExpression(), !1734)
    #dbg_value(i64 0, !1728, !DIExpression(), !1734)
    #dbg_value(i32 %add11.7.5, !1725, !DIExpression(), !1732)
    #dbg_value(i32 %add.7.5, !1724, !DIExpression(), !1732)
  %48 = load i8, ptr %add.ptr.5, align 1, !dbg !1735
  %conv.656 = zext i8 %48 to i32, !dbg !1735
  %add.657 = add nuw nsw i32 %add.7.5, %conv.656, !dbg !1735
    #dbg_value(i32 %add.657, !1724, !DIExpression(), !1732)
  %mul.658 = mul nuw nsw i32 %conv.656, %conv.656, !dbg !1735
  %add11.659 = add nuw nsw i32 %mul.658, %add11.7.5, !dbg !1735
    #dbg_value(i32 %add11.659, !1725, !DIExpression(), !1732)
    #dbg_value(i64 1, !1728, !DIExpression(), !1734)
  %arrayidx.1.6 = getelementptr inbounds i8, ptr %add.ptr.5, i64 1, !dbg !1735
  %49 = load i8, ptr %arrayidx.1.6, align 1, !dbg !1735
  %conv.1.6 = zext i8 %49 to i32, !dbg !1735
  %add.1.6 = add nuw nsw i32 %add.657, %conv.1.6, !dbg !1735
    #dbg_value(i32 %add.1.6, !1724, !DIExpression(), !1732)
  %mul.1.6 = mul nuw nsw i32 %conv.1.6, %conv.1.6, !dbg !1735
  %add11.1.6 = add nuw nsw i32 %mul.1.6, %add11.659, !dbg !1735
    #dbg_value(i32 %add11.1.6, !1725, !DIExpression(), !1732)
    #dbg_value(i64 2, !1728, !DIExpression(), !1734)
  %arrayidx.2.6 = getelementptr inbounds i8, ptr %add.ptr.5, i64 2, !dbg !1735
  %50 = load i8, ptr %arrayidx.2.6, align 1, !dbg !1735
  %conv.2.6 = zext i8 %50 to i32, !dbg !1735
  %add.2.6 = add nuw nsw i32 %add.1.6, %conv.2.6, !dbg !1735
    #dbg_value(i32 %add.2.6, !1724, !DIExpression(), !1732)
  %mul.2.6 = mul nuw nsw i32 %conv.2.6, %conv.2.6, !dbg !1735
  %add11.2.6 = add nuw nsw i32 %mul.2.6, %add11.1.6, !dbg !1735
    #dbg_value(i32 %add11.2.6, !1725, !DIExpression(), !1732)
    #dbg_value(i64 3, !1728, !DIExpression(), !1734)
  %arrayidx.3.6 = getelementptr inbounds i8, ptr %add.ptr.5, i64 3, !dbg !1735
  %51 = load i8, ptr %arrayidx.3.6, align 1, !dbg !1735
  %conv.3.6 = zext i8 %51 to i32, !dbg !1735
  %add.3.6 = add nuw nsw i32 %add.2.6, %conv.3.6, !dbg !1735
    #dbg_value(i32 %add.3.6, !1724, !DIExpression(), !1732)
  %mul.3.6 = mul nuw nsw i32 %conv.3.6, %conv.3.6, !dbg !1735
  %add11.3.6 = add nuw nsw i32 %mul.3.6, %add11.2.6, !dbg !1735
    #dbg_value(i32 %add11.3.6, !1725, !DIExpression(), !1732)
    #dbg_value(i64 4, !1728, !DIExpression(), !1734)
  %arrayidx.4.6 = getelementptr inbounds i8, ptr %add.ptr.5, i64 4, !dbg !1735
  %52 = load i8, ptr %arrayidx.4.6, align 1, !dbg !1735
  %conv.4.6 = zext i8 %52 to i32, !dbg !1735
  %add.4.6 = add nuw nsw i32 %add.3.6, %conv.4.6, !dbg !1735
    #dbg_value(i32 %add.4.6, !1724, !DIExpression(), !1732)
  %mul.4.6 = mul nuw nsw i32 %conv.4.6, %conv.4.6, !dbg !1735
  %add11.4.6 = add nuw nsw i32 %mul.4.6, %add11.3.6, !dbg !1735
    #dbg_value(i32 %add11.4.6, !1725, !DIExpression(), !1732)
    #dbg_value(i64 5, !1728, !DIExpression(), !1734)
  %arrayidx.5.6 = getelementptr inbounds i8, ptr %add.ptr.5, i64 5, !dbg !1735
  %53 = load i8, ptr %arrayidx.5.6, align 1, !dbg !1735
  %conv.5.6 = zext i8 %53 to i32, !dbg !1735
  %add.5.6 = add nuw nsw i32 %add.4.6, %conv.5.6, !dbg !1735
    #dbg_value(i32 %add.5.6, !1724, !DIExpression(), !1732)
  %mul.5.6 = mul nuw nsw i32 %conv.5.6, %conv.5.6, !dbg !1735
  %add11.5.6 = add nuw nsw i32 %mul.5.6, %add11.4.6, !dbg !1735
    #dbg_value(i32 %add11.5.6, !1725, !DIExpression(), !1732)
    #dbg_value(i64 6, !1728, !DIExpression(), !1734)
  %arrayidx.6.6 = getelementptr inbounds i8, ptr %add.ptr.5, i64 6, !dbg !1735
  %54 = load i8, ptr %arrayidx.6.6, align 1, !dbg !1735
  %conv.6.6 = zext i8 %54 to i32, !dbg !1735
  %add.6.6 = add nuw nsw i32 %add.5.6, %conv.6.6, !dbg !1735
    #dbg_value(i32 %add.6.6, !1724, !DIExpression(), !1732)
  %mul.6.6 = mul nuw nsw i32 %conv.6.6, %conv.6.6, !dbg !1735
  %add11.6.6 = add nuw nsw i32 %mul.6.6, %add11.5.6, !dbg !1735
    #dbg_value(i32 %add11.6.6, !1725, !DIExpression(), !1732)
    #dbg_value(i64 7, !1728, !DIExpression(), !1734)
  %arrayidx.7.6 = getelementptr inbounds i8, ptr %add.ptr.5, i64 7, !dbg !1735
  %55 = load i8, ptr %arrayidx.7.6, align 1, !dbg !1735
  %conv.7.6 = zext i8 %55 to i32, !dbg !1735
  %add.7.6 = add nuw nsw i32 %add.6.6, %conv.7.6, !dbg !1735
    #dbg_value(i32 %add.7.6, !1724, !DIExpression(), !1732)
  %mul.7.6 = mul nuw nsw i32 %conv.7.6, %conv.7.6, !dbg !1735
  %add11.7.6 = add nuw nsw i32 %mul.7.6, %add11.6.6, !dbg !1735
    #dbg_value(i32 %add11.7.6, !1725, !DIExpression(), !1732)
    #dbg_value(i64 8, !1728, !DIExpression(), !1734)
  %add.ptr.6 = getelementptr inbounds i8, ptr %add.ptr.5, i64 %idx.ext, !dbg !1738
    #dbg_value(ptr %add.ptr.6, !1722, !DIExpression(), !1732)
    #dbg_value(i32 7, !1726, !DIExpression(), !1733)
    #dbg_value(i32 0, !1728, !DIExpression(), !1734)
    #dbg_value(i64 0, !1728, !DIExpression(), !1734)
    #dbg_value(i32 %add11.7.6, !1725, !DIExpression(), !1732)
    #dbg_value(i32 %add.7.6, !1724, !DIExpression(), !1732)
  %56 = load i8, ptr %add.ptr.6, align 1, !dbg !1735
  %conv.760 = zext i8 %56 to i32, !dbg !1735
  %add.761 = add nuw nsw i32 %add.7.6, %conv.760, !dbg !1735
    #dbg_value(i32 %add.761, !1724, !DIExpression(), !1732)
  %mul.762 = mul nuw nsw i32 %conv.760, %conv.760, !dbg !1735
  %add11.763 = add nuw nsw i32 %mul.762, %add11.7.6, !dbg !1735
    #dbg_value(i32 %add11.763, !1725, !DIExpression(), !1732)
    #dbg_value(i64 1, !1728, !DIExpression(), !1734)
  %arrayidx.1.7 = getelementptr inbounds i8, ptr %add.ptr.6, i64 1, !dbg !1735
  %57 = load i8, ptr %arrayidx.1.7, align 1, !dbg !1735
  %conv.1.7 = zext i8 %57 to i32, !dbg !1735
  %add.1.7 = add nuw nsw i32 %add.761, %conv.1.7, !dbg !1735
    #dbg_value(i32 %add.1.7, !1724, !DIExpression(), !1732)
  %mul.1.7 = mul nuw nsw i32 %conv.1.7, %conv.1.7, !dbg !1735
  %add11.1.7 = add nuw nsw i32 %mul.1.7, %add11.763, !dbg !1735
    #dbg_value(i32 %add11.1.7, !1725, !DIExpression(), !1732)
    #dbg_value(i64 2, !1728, !DIExpression(), !1734)
  %arrayidx.2.7 = getelementptr inbounds i8, ptr %add.ptr.6, i64 2, !dbg !1735
  %58 = load i8, ptr %arrayidx.2.7, align 1, !dbg !1735
  %conv.2.7 = zext i8 %58 to i32, !dbg !1735
  %add.2.7 = add nuw nsw i32 %add.1.7, %conv.2.7, !dbg !1735
    #dbg_value(i32 %add.2.7, !1724, !DIExpression(), !1732)
  %mul.2.7 = mul nuw nsw i32 %conv.2.7, %conv.2.7, !dbg !1735
  %add11.2.7 = add nuw nsw i32 %mul.2.7, %add11.1.7, !dbg !1735
    #dbg_value(i32 %add11.2.7, !1725, !DIExpression(), !1732)
    #dbg_value(i64 3, !1728, !DIExpression(), !1734)
  %arrayidx.3.7 = getelementptr inbounds i8, ptr %add.ptr.6, i64 3, !dbg !1735
  %59 = load i8, ptr %arrayidx.3.7, align 1, !dbg !1735
  %conv.3.7 = zext i8 %59 to i32, !dbg !1735
  %add.3.7 = add nuw nsw i32 %add.2.7, %conv.3.7, !dbg !1735
    #dbg_value(i32 %add.3.7, !1724, !DIExpression(), !1732)
  %mul.3.7 = mul nuw nsw i32 %conv.3.7, %conv.3.7, !dbg !1735
  %add11.3.7 = add nuw nsw i32 %mul.3.7, %add11.2.7, !dbg !1735
    #dbg_value(i32 %add11.3.7, !1725, !DIExpression(), !1732)
    #dbg_value(i64 4, !1728, !DIExpression(), !1734)
  %arrayidx.4.7 = getelementptr inbounds i8, ptr %add.ptr.6, i64 4, !dbg !1735
  %60 = load i8, ptr %arrayidx.4.7, align 1, !dbg !1735
  %conv.4.7 = zext i8 %60 to i32, !dbg !1735
  %add.4.7 = add nuw nsw i32 %add.3.7, %conv.4.7, !dbg !1735
    #dbg_value(i32 %add.4.7, !1724, !DIExpression(), !1732)
  %mul.4.7 = mul nuw nsw i32 %conv.4.7, %conv.4.7, !dbg !1735
  %add11.4.7 = add nuw nsw i32 %mul.4.7, %add11.3.7, !dbg !1735
    #dbg_value(i32 %add11.4.7, !1725, !DIExpression(), !1732)
    #dbg_value(i64 5, !1728, !DIExpression(), !1734)
  %arrayidx.5.7 = getelementptr inbounds i8, ptr %add.ptr.6, i64 5, !dbg !1735
  %61 = load i8, ptr %arrayidx.5.7, align 1, !dbg !1735
  %conv.5.7 = zext i8 %61 to i32, !dbg !1735
  %add.5.7 = add nuw nsw i32 %add.4.7, %conv.5.7, !dbg !1735
    #dbg_value(i32 %add.5.7, !1724, !DIExpression(), !1732)
  %mul.5.7 = mul nuw nsw i32 %conv.5.7, %conv.5.7, !dbg !1735
  %add11.5.7 = add nuw nsw i32 %mul.5.7, %add11.4.7, !dbg !1735
    #dbg_value(i32 %add11.5.7, !1725, !DIExpression(), !1732)
    #dbg_value(i64 6, !1728, !DIExpression(), !1734)
  %arrayidx.6.7 = getelementptr inbounds i8, ptr %add.ptr.6, i64 6, !dbg !1735
  %62 = load i8, ptr %arrayidx.6.7, align 1, !dbg !1735
  %conv.6.7 = zext i8 %62 to i32, !dbg !1735
  %add.6.7 = add nuw nsw i32 %add.5.7, %conv.6.7, !dbg !1735
    #dbg_value(i32 %add.6.7, !1724, !DIExpression(), !1732)
  %mul.6.7 = mul nuw nsw i32 %conv.6.7, %conv.6.7, !dbg !1735
  %add11.6.7 = add nuw nsw i32 %mul.6.7, %add11.5.7, !dbg !1735
    #dbg_value(i32 %add11.6.7, !1725, !DIExpression(), !1732)
    #dbg_value(i64 7, !1728, !DIExpression(), !1734)
  %arrayidx.7.7 = getelementptr inbounds i8, ptr %add.ptr.6, i64 7, !dbg !1735
  %63 = load i8, ptr %arrayidx.7.7, align 1, !dbg !1735
  %conv.7.7 = zext i8 %63 to i32, !dbg !1735
  %add.7.7 = add nuw nsw i32 %add.6.7, %conv.7.7, !dbg !1735
    #dbg_value(i32 %add.7.7, !1724, !DIExpression(), !1732)
  %mul.7.7 = mul nuw nsw i32 %conv.7.7, %conv.7.7, !dbg !1735
  %add11.7.7 = add nuw nsw i32 %mul.7.7, %add11.6.7, !dbg !1735
    #dbg_value(i32 %add11.7.7, !1725, !DIExpression(), !1732)
    #dbg_value(i64 8, !1728, !DIExpression(), !1734)
    #dbg_value(!DIArgList(ptr %add.ptr.6, i64 %idx.ext), !1722, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1732)
    #dbg_value(i32 8, !1726, !DIExpression(), !1733)
  %conv15 = zext nneg i32 %add.7.7 to i64, !dbg !1739
  %conv16 = zext nneg i32 %add11.7.7 to i64, !dbg !1739
  %shl = shl nuw nsw i64 %conv16, 32, !dbg !1739
  %add17 = or disjoint i64 %shl, %conv15, !dbg !1739
  ret i64 %add17, !dbg !1739
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @ssim_4x4x2_core(ptr nocapture noundef readonly %pix1, i32 noundef %stride1, ptr nocapture noundef readonly %pix2, i32 noundef %stride2, ptr nocapture noundef writeonly %sums) #7 !dbg !1740 {
entry:
    #dbg_value(ptr %pix1, !1742, !DIExpression(), !1764)
    #dbg_value(i32 %stride1, !1743, !DIExpression(), !1764)
    #dbg_value(ptr %pix2, !1744, !DIExpression(), !1764)
    #dbg_value(i32 %stride2, !1745, !DIExpression(), !1764)
    #dbg_value(ptr %sums, !1746, !DIExpression(), !1764)
    #dbg_value(i32 0, !1747, !DIExpression(), !1765)
  %0 = sext i32 %stride1 to i64, !dbg !1766
  %1 = sext i32 %stride2 to i64, !dbg !1766
  %2 = add nsw i64 %0, 1
  %3 = add nsw i64 %1, 1
  %4 = add nsw i64 %0, 2
  %5 = add nsw i64 %1, 2
  %6 = add nsw i64 %0, 3
  %7 = add nsw i64 %1, 3
  %8 = shl nsw i64 %0, 1
  %9 = shl nsw i64 %1, 1
  %10 = or disjoint i64 %8, 1
  %11 = or disjoint i64 %9, 1
  %12 = add nsw i64 %8, 2
  %13 = add nsw i64 %9, 2
  %14 = add nsw i64 %8, 3
  %15 = add nsw i64 %9, 3
  %16 = mul nsw i64 %0, 3
  %17 = mul nsw i64 %1, 3
  %18 = add nsw i64 %16, 1
  %19 = add nsw i64 %17, 1
  %20 = add nsw i64 %16, 2
  %21 = add nsw i64 %17, 2
  %22 = add nsw i64 %16, 3
  %23 = add nsw i64 %17, 3
  br label %for.cond1.preheader, !dbg !1766

for.cond1.preheader:                              ; preds = %entry, %for.cond1.preheader
  %cmp = phi i1 [ true, %entry ], [ false, %for.cond1.preheader ]
  %indvars.iv = phi i64 [ 0, %entry ], [ 1, %for.cond1.preheader ]
  %pix1.addr.080 = phi ptr [ %pix1, %entry ], [ %add.ptr, %for.cond1.preheader ]
  %pix2.addr.079 = phi ptr [ %pix2, %entry ], [ %add.ptr37, %for.cond1.preheader ]
    #dbg_value(ptr %pix1.addr.080, !1742, !DIExpression(), !1764)
    #dbg_value(ptr %pix2.addr.079, !1744, !DIExpression(), !1764)
    #dbg_value(i64 %indvars.iv, !1747, !DIExpression(), !1765)
    #dbg_value(i32 0, !1755, !DIExpression(), !1767)
    #dbg_value(i32 0, !1754, !DIExpression(), !1768)
    #dbg_value(i32 0, !1753, !DIExpression(), !1768)
    #dbg_value(i32 0, !1752, !DIExpression(), !1768)
    #dbg_value(i32 0, !1749, !DIExpression(), !1768)
    #dbg_value(i64 0, !1755, !DIExpression(), !1767)
    #dbg_value(i32 0, !1754, !DIExpression(), !1768)
    #dbg_value(i32 0, !1753, !DIExpression(), !1768)
    #dbg_value(i32 0, !1752, !DIExpression(), !1768)
    #dbg_value(i32 0, !1749, !DIExpression(), !1768)
    #dbg_value(i32 0, !1757, !DIExpression(), !1769)
    #dbg_value(i64 0, !1757, !DIExpression(), !1769)
    #dbg_value(i32 0, !1754, !DIExpression(), !1768)
    #dbg_value(i32 0, !1753, !DIExpression(), !1768)
    #dbg_value(i32 0, !1752, !DIExpression(), !1768)
    #dbg_value(i32 0, !1749, !DIExpression(), !1768)
  %24 = load i8, ptr %pix1.addr.080, align 1, !dbg !1770
  %conv = zext i8 %24 to i32, !dbg !1770
    #dbg_value(i32 %conv, !1760, !DIExpression(), !1771)
  %25 = load i8, ptr %pix2.addr.079, align 1, !dbg !1772
  %conv13 = zext i8 %25 to i32, !dbg !1772
    #dbg_value(i32 %conv13, !1763, !DIExpression(), !1771)
    #dbg_value(i32 %conv, !1749, !DIExpression(), !1768)
    #dbg_value(i32 %conv13, !1752, !DIExpression(), !1768)
  %mul16 = mul nuw nsw i32 %conv, %conv, !dbg !1773
    #dbg_value(i32 %mul16, !1753, !DIExpression(), !1768)
  %mul18 = mul nuw nsw i32 %conv13, %conv13, !dbg !1774
  %add19 = add nuw nsw i32 %mul16, %mul18, !dbg !1775
    #dbg_value(i32 %add19, !1753, !DIExpression(), !1768)
  %mul20 = mul nuw nsw i32 %conv13, %conv, !dbg !1776
    #dbg_value(i32 %mul20, !1754, !DIExpression(), !1768)
    #dbg_value(i64 1, !1757, !DIExpression(), !1769)
  %arrayidx.1 = getelementptr inbounds i8, ptr %pix1.addr.080, i64 1, !dbg !1770
  %26 = load i8, ptr %arrayidx.1, align 1, !dbg !1770
  %conv.1 = zext i8 %26 to i32, !dbg !1770
    #dbg_value(i32 %conv.1, !1760, !DIExpression(), !1771)
  %arrayidx12.1 = getelementptr inbounds i8, ptr %pix2.addr.079, i64 1, !dbg !1772
  %27 = load i8, ptr %arrayidx12.1, align 1, !dbg !1772
  %conv13.1 = zext i8 %27 to i32, !dbg !1772
    #dbg_value(i32 %conv13.1, !1763, !DIExpression(), !1771)
  %add14.1 = add nuw nsw i32 %conv, %conv.1, !dbg !1777
    #dbg_value(i32 %add14.1, !1749, !DIExpression(), !1768)
  %add15.1 = add nuw nsw i32 %conv13, %conv13.1, !dbg !1778
    #dbg_value(i32 %add15.1, !1752, !DIExpression(), !1768)
  %mul16.1 = mul nuw nsw i32 %conv.1, %conv.1, !dbg !1773
  %add17.1 = add nuw nsw i32 %mul16.1, %add19, !dbg !1779
    #dbg_value(i32 %add17.1, !1753, !DIExpression(), !1768)
  %mul18.1 = mul nuw nsw i32 %conv13.1, %conv13.1, !dbg !1774
  %add19.1 = add nuw nsw i32 %add17.1, %mul18.1, !dbg !1775
    #dbg_value(i32 %add19.1, !1753, !DIExpression(), !1768)
  %mul20.1 = mul nuw nsw i32 %conv13.1, %conv.1, !dbg !1776
  %add21.1 = add nuw nsw i32 %mul20.1, %mul20, !dbg !1780
    #dbg_value(i32 %add21.1, !1754, !DIExpression(), !1768)
    #dbg_value(i64 2, !1757, !DIExpression(), !1769)
  %arrayidx.2 = getelementptr inbounds i8, ptr %pix1.addr.080, i64 2, !dbg !1770
  %28 = load i8, ptr %arrayidx.2, align 1, !dbg !1770
  %conv.2 = zext i8 %28 to i32, !dbg !1770
    #dbg_value(i32 %conv.2, !1760, !DIExpression(), !1771)
  %arrayidx12.2 = getelementptr inbounds i8, ptr %pix2.addr.079, i64 2, !dbg !1772
  %29 = load i8, ptr %arrayidx12.2, align 1, !dbg !1772
  %conv13.2 = zext i8 %29 to i32, !dbg !1772
    #dbg_value(i32 %conv13.2, !1763, !DIExpression(), !1771)
  %add14.2 = add nuw nsw i32 %add14.1, %conv.2, !dbg !1777
    #dbg_value(i32 %add14.2, !1749, !DIExpression(), !1768)
  %add15.2 = add nuw nsw i32 %add15.1, %conv13.2, !dbg !1778
    #dbg_value(i32 %add15.2, !1752, !DIExpression(), !1768)
  %mul16.2 = mul nuw nsw i32 %conv.2, %conv.2, !dbg !1773
  %add17.2 = add nuw nsw i32 %mul16.2, %add19.1, !dbg !1779
    #dbg_value(i32 %add17.2, !1753, !DIExpression(), !1768)
  %mul18.2 = mul nuw nsw i32 %conv13.2, %conv13.2, !dbg !1774
  %add19.2 = add nuw nsw i32 %add17.2, %mul18.2, !dbg !1775
    #dbg_value(i32 %add19.2, !1753, !DIExpression(), !1768)
  %mul20.2 = mul nuw nsw i32 %conv13.2, %conv.2, !dbg !1776
  %add21.2 = add nuw nsw i32 %mul20.2, %add21.1, !dbg !1780
    #dbg_value(i32 %add21.2, !1754, !DIExpression(), !1768)
    #dbg_value(i64 3, !1757, !DIExpression(), !1769)
  %arrayidx.3 = getelementptr inbounds i8, ptr %pix1.addr.080, i64 3, !dbg !1770
  %30 = load i8, ptr %arrayidx.3, align 1, !dbg !1770
  %conv.3 = zext i8 %30 to i32, !dbg !1770
    #dbg_value(i32 %conv.3, !1760, !DIExpression(), !1771)
  %arrayidx12.3 = getelementptr inbounds i8, ptr %pix2.addr.079, i64 3, !dbg !1772
  %31 = load i8, ptr %arrayidx12.3, align 1, !dbg !1772
  %conv13.3 = zext i8 %31 to i32, !dbg !1772
    #dbg_value(i32 %conv13.3, !1763, !DIExpression(), !1771)
  %add14.3 = add nuw nsw i32 %add14.2, %conv.3, !dbg !1777
    #dbg_value(i32 %add14.3, !1749, !DIExpression(), !1768)
  %add15.3 = add nuw nsw i32 %add15.2, %conv13.3, !dbg !1778
    #dbg_value(i32 %add15.3, !1752, !DIExpression(), !1768)
  %mul16.3 = mul nuw nsw i32 %conv.3, %conv.3, !dbg !1773
  %add17.3 = add nuw nsw i32 %mul16.3, %add19.2, !dbg !1779
    #dbg_value(i32 %add17.3, !1753, !DIExpression(), !1768)
  %mul18.3 = mul nuw nsw i32 %conv13.3, %conv13.3, !dbg !1774
  %add19.3 = add nuw nsw i32 %add17.3, %mul18.3, !dbg !1775
    #dbg_value(i32 %add19.3, !1753, !DIExpression(), !1768)
  %mul20.3 = mul nuw nsw i32 %conv13.3, %conv.3, !dbg !1776
  %add21.3 = add nuw nsw i32 %mul20.3, %add21.2, !dbg !1780
    #dbg_value(i32 %add21.3, !1754, !DIExpression(), !1768)
    #dbg_value(i64 4, !1757, !DIExpression(), !1769)
    #dbg_value(i64 1, !1755, !DIExpression(), !1767)
    #dbg_value(i32 0, !1757, !DIExpression(), !1769)
    #dbg_value(i64 0, !1757, !DIExpression(), !1769)
    #dbg_value(i32 %add21.3, !1754, !DIExpression(), !1768)
    #dbg_value(i32 %add19.3, !1753, !DIExpression(), !1768)
    #dbg_value(i32 %add15.3, !1752, !DIExpression(), !1768)
    #dbg_value(i32 %add14.3, !1749, !DIExpression(), !1768)
  %arrayidx.187 = getelementptr inbounds i8, ptr %pix1.addr.080, i64 %0, !dbg !1770
  %32 = load i8, ptr %arrayidx.187, align 1, !dbg !1770
  %conv.188 = zext i8 %32 to i32, !dbg !1770
    #dbg_value(i32 %conv.188, !1760, !DIExpression(), !1771)
  %arrayidx12.189 = getelementptr inbounds i8, ptr %pix2.addr.079, i64 %1, !dbg !1772
  %33 = load i8, ptr %arrayidx12.189, align 1, !dbg !1772
  %conv13.190 = zext i8 %33 to i32, !dbg !1772
    #dbg_value(i32 %conv13.190, !1763, !DIExpression(), !1771)
  %add14.191 = add nuw nsw i32 %add14.3, %conv.188, !dbg !1777
    #dbg_value(i32 %add14.191, !1749, !DIExpression(), !1768)
  %add15.192 = add nuw nsw i32 %add15.3, %conv13.190, !dbg !1778
    #dbg_value(i32 %add15.192, !1752, !DIExpression(), !1768)
  %mul16.193 = mul nuw nsw i32 %conv.188, %conv.188, !dbg !1773
  %add17.194 = add nuw nsw i32 %mul16.193, %add19.3, !dbg !1779
    #dbg_value(i32 %add17.194, !1753, !DIExpression(), !1768)
  %mul18.195 = mul nuw nsw i32 %conv13.190, %conv13.190, !dbg !1774
  %add19.196 = add nuw nsw i32 %add17.194, %mul18.195, !dbg !1775
    #dbg_value(i32 %add19.196, !1753, !DIExpression(), !1768)
  %mul20.197 = mul nuw nsw i32 %conv13.190, %conv.188, !dbg !1776
  %add21.198 = add nuw nsw i32 %mul20.197, %add21.3, !dbg !1780
    #dbg_value(i32 %add21.198, !1754, !DIExpression(), !1768)
    #dbg_value(i64 1, !1757, !DIExpression(), !1769)
  %arrayidx.1.1 = getelementptr inbounds i8, ptr %pix1.addr.080, i64 %2, !dbg !1770
  %34 = load i8, ptr %arrayidx.1.1, align 1, !dbg !1770
  %conv.1.1 = zext i8 %34 to i32, !dbg !1770
    #dbg_value(i32 %conv.1.1, !1760, !DIExpression(), !1771)
  %arrayidx12.1.1 = getelementptr inbounds i8, ptr %pix2.addr.079, i64 %3, !dbg !1772
  %35 = load i8, ptr %arrayidx12.1.1, align 1, !dbg !1772
  %conv13.1.1 = zext i8 %35 to i32, !dbg !1772
    #dbg_value(i32 %conv13.1.1, !1763, !DIExpression(), !1771)
  %add14.1.1 = add nuw nsw i32 %add14.191, %conv.1.1, !dbg !1777
    #dbg_value(i32 %add14.1.1, !1749, !DIExpression(), !1768)
  %add15.1.1 = add nuw nsw i32 %add15.192, %conv13.1.1, !dbg !1778
    #dbg_value(i32 %add15.1.1, !1752, !DIExpression(), !1768)
  %mul16.1.1 = mul nuw nsw i32 %conv.1.1, %conv.1.1, !dbg !1773
  %add17.1.1 = add nuw nsw i32 %mul16.1.1, %add19.196, !dbg !1779
    #dbg_value(i32 %add17.1.1, !1753, !DIExpression(), !1768)
  %mul18.1.1 = mul nuw nsw i32 %conv13.1.1, %conv13.1.1, !dbg !1774
  %add19.1.1 = add nuw nsw i32 %add17.1.1, %mul18.1.1, !dbg !1775
    #dbg_value(i32 %add19.1.1, !1753, !DIExpression(), !1768)
  %mul20.1.1 = mul nuw nsw i32 %conv13.1.1, %conv.1.1, !dbg !1776
  %add21.1.1 = add nuw nsw i32 %mul20.1.1, %add21.198, !dbg !1780
    #dbg_value(i32 %add21.1.1, !1754, !DIExpression(), !1768)
    #dbg_value(i64 2, !1757, !DIExpression(), !1769)
  %arrayidx.2.1 = getelementptr inbounds i8, ptr %pix1.addr.080, i64 %4, !dbg !1770
  %36 = load i8, ptr %arrayidx.2.1, align 1, !dbg !1770
  %conv.2.1 = zext i8 %36 to i32, !dbg !1770
    #dbg_value(i32 %conv.2.1, !1760, !DIExpression(), !1771)
  %arrayidx12.2.1 = getelementptr inbounds i8, ptr %pix2.addr.079, i64 %5, !dbg !1772
  %37 = load i8, ptr %arrayidx12.2.1, align 1, !dbg !1772
  %conv13.2.1 = zext i8 %37 to i32, !dbg !1772
    #dbg_value(i32 %conv13.2.1, !1763, !DIExpression(), !1771)
  %add14.2.1 = add nuw nsw i32 %add14.1.1, %conv.2.1, !dbg !1777
    #dbg_value(i32 %add14.2.1, !1749, !DIExpression(), !1768)
  %add15.2.1 = add nuw nsw i32 %add15.1.1, %conv13.2.1, !dbg !1778
    #dbg_value(i32 %add15.2.1, !1752, !DIExpression(), !1768)
  %mul16.2.1 = mul nuw nsw i32 %conv.2.1, %conv.2.1, !dbg !1773
  %add17.2.1 = add nuw nsw i32 %mul16.2.1, %add19.1.1, !dbg !1779
    #dbg_value(i32 %add17.2.1, !1753, !DIExpression(), !1768)
  %mul18.2.1 = mul nuw nsw i32 %conv13.2.1, %conv13.2.1, !dbg !1774
  %add19.2.1 = add nuw nsw i32 %add17.2.1, %mul18.2.1, !dbg !1775
    #dbg_value(i32 %add19.2.1, !1753, !DIExpression(), !1768)
  %mul20.2.1 = mul nuw nsw i32 %conv13.2.1, %conv.2.1, !dbg !1776
  %add21.2.1 = add nuw nsw i32 %mul20.2.1, %add21.1.1, !dbg !1780
    #dbg_value(i32 %add21.2.1, !1754, !DIExpression(), !1768)
    #dbg_value(i64 3, !1757, !DIExpression(), !1769)
  %arrayidx.3.1 = getelementptr inbounds i8, ptr %pix1.addr.080, i64 %6, !dbg !1770
  %38 = load i8, ptr %arrayidx.3.1, align 1, !dbg !1770
  %conv.3.1 = zext i8 %38 to i32, !dbg !1770
    #dbg_value(i32 %conv.3.1, !1760, !DIExpression(), !1771)
  %arrayidx12.3.1 = getelementptr inbounds i8, ptr %pix2.addr.079, i64 %7, !dbg !1772
  %39 = load i8, ptr %arrayidx12.3.1, align 1, !dbg !1772
  %conv13.3.1 = zext i8 %39 to i32, !dbg !1772
    #dbg_value(i32 %conv13.3.1, !1763, !DIExpression(), !1771)
  %add14.3.1 = add nuw nsw i32 %add14.2.1, %conv.3.1, !dbg !1777
    #dbg_value(i32 %add14.3.1, !1749, !DIExpression(), !1768)
  %add15.3.1 = add nuw nsw i32 %add15.2.1, %conv13.3.1, !dbg !1778
    #dbg_value(i32 %add15.3.1, !1752, !DIExpression(), !1768)
  %mul16.3.1 = mul nuw nsw i32 %conv.3.1, %conv.3.1, !dbg !1773
  %add17.3.1 = add nuw nsw i32 %mul16.3.1, %add19.2.1, !dbg !1779
    #dbg_value(i32 %add17.3.1, !1753, !DIExpression(), !1768)
  %mul18.3.1 = mul nuw nsw i32 %conv13.3.1, %conv13.3.1, !dbg !1774
  %add19.3.1 = add nuw nsw i32 %add17.3.1, %mul18.3.1, !dbg !1775
    #dbg_value(i32 %add19.3.1, !1753, !DIExpression(), !1768)
  %mul20.3.1 = mul nuw nsw i32 %conv13.3.1, %conv.3.1, !dbg !1776
  %add21.3.1 = add nuw nsw i32 %mul20.3.1, %add21.2.1, !dbg !1780
    #dbg_value(i32 %add21.3.1, !1754, !DIExpression(), !1768)
    #dbg_value(i64 4, !1757, !DIExpression(), !1769)
    #dbg_value(i64 2, !1755, !DIExpression(), !1767)
    #dbg_value(i32 0, !1757, !DIExpression(), !1769)
    #dbg_value(i64 0, !1757, !DIExpression(), !1769)
    #dbg_value(i32 %add21.3.1, !1754, !DIExpression(), !1768)
    #dbg_value(i32 %add19.3.1, !1753, !DIExpression(), !1768)
    #dbg_value(i32 %add15.3.1, !1752, !DIExpression(), !1768)
    #dbg_value(i32 %add14.3.1, !1749, !DIExpression(), !1768)
  %arrayidx.299 = getelementptr inbounds i8, ptr %pix1.addr.080, i64 %8, !dbg !1770
  %40 = load i8, ptr %arrayidx.299, align 1, !dbg !1770
  %conv.2100 = zext i8 %40 to i32, !dbg !1770
    #dbg_value(i32 %conv.2100, !1760, !DIExpression(), !1771)
  %arrayidx12.2101 = getelementptr inbounds i8, ptr %pix2.addr.079, i64 %9, !dbg !1772
  %41 = load i8, ptr %arrayidx12.2101, align 1, !dbg !1772
  %conv13.2102 = zext i8 %41 to i32, !dbg !1772
    #dbg_value(i32 %conv13.2102, !1763, !DIExpression(), !1771)
  %add14.2103 = add nuw nsw i32 %add14.3.1, %conv.2100, !dbg !1777
    #dbg_value(i32 %add14.2103, !1749, !DIExpression(), !1768)
  %add15.2104 = add nuw nsw i32 %add15.3.1, %conv13.2102, !dbg !1778
    #dbg_value(i32 %add15.2104, !1752, !DIExpression(), !1768)
  %mul16.2105 = mul nuw nsw i32 %conv.2100, %conv.2100, !dbg !1773
  %add17.2106 = add nuw nsw i32 %mul16.2105, %add19.3.1, !dbg !1779
    #dbg_value(i32 %add17.2106, !1753, !DIExpression(), !1768)
  %mul18.2107 = mul nuw nsw i32 %conv13.2102, %conv13.2102, !dbg !1774
  %add19.2108 = add nuw nsw i32 %add17.2106, %mul18.2107, !dbg !1775
    #dbg_value(i32 %add19.2108, !1753, !DIExpression(), !1768)
  %mul20.2109 = mul nuw nsw i32 %conv13.2102, %conv.2100, !dbg !1776
  %add21.2110 = add nuw nsw i32 %mul20.2109, %add21.3.1, !dbg !1780
    #dbg_value(i32 %add21.2110, !1754, !DIExpression(), !1768)
    #dbg_value(i64 1, !1757, !DIExpression(), !1769)
  %arrayidx.1.2 = getelementptr inbounds i8, ptr %pix1.addr.080, i64 %10, !dbg !1770
  %42 = load i8, ptr %arrayidx.1.2, align 1, !dbg !1770
  %conv.1.2 = zext i8 %42 to i32, !dbg !1770
    #dbg_value(i32 %conv.1.2, !1760, !DIExpression(), !1771)
  %arrayidx12.1.2 = getelementptr inbounds i8, ptr %pix2.addr.079, i64 %11, !dbg !1772
  %43 = load i8, ptr %arrayidx12.1.2, align 1, !dbg !1772
  %conv13.1.2 = zext i8 %43 to i32, !dbg !1772
    #dbg_value(i32 %conv13.1.2, !1763, !DIExpression(), !1771)
  %add14.1.2 = add nuw nsw i32 %add14.2103, %conv.1.2, !dbg !1777
    #dbg_value(i32 %add14.1.2, !1749, !DIExpression(), !1768)
  %add15.1.2 = add nuw nsw i32 %add15.2104, %conv13.1.2, !dbg !1778
    #dbg_value(i32 %add15.1.2, !1752, !DIExpression(), !1768)
  %mul16.1.2 = mul nuw nsw i32 %conv.1.2, %conv.1.2, !dbg !1773
  %add17.1.2 = add nuw nsw i32 %mul16.1.2, %add19.2108, !dbg !1779
    #dbg_value(i32 %add17.1.2, !1753, !DIExpression(), !1768)
  %mul18.1.2 = mul nuw nsw i32 %conv13.1.2, %conv13.1.2, !dbg !1774
  %add19.1.2 = add nuw nsw i32 %add17.1.2, %mul18.1.2, !dbg !1775
    #dbg_value(i32 %add19.1.2, !1753, !DIExpression(), !1768)
  %mul20.1.2 = mul nuw nsw i32 %conv13.1.2, %conv.1.2, !dbg !1776
  %add21.1.2 = add nuw nsw i32 %mul20.1.2, %add21.2110, !dbg !1780
    #dbg_value(i32 %add21.1.2, !1754, !DIExpression(), !1768)
    #dbg_value(i64 2, !1757, !DIExpression(), !1769)
  %arrayidx.2.2 = getelementptr inbounds i8, ptr %pix1.addr.080, i64 %12, !dbg !1770
  %44 = load i8, ptr %arrayidx.2.2, align 1, !dbg !1770
  %conv.2.2 = zext i8 %44 to i32, !dbg !1770
    #dbg_value(i32 %conv.2.2, !1760, !DIExpression(), !1771)
  %arrayidx12.2.2 = getelementptr inbounds i8, ptr %pix2.addr.079, i64 %13, !dbg !1772
  %45 = load i8, ptr %arrayidx12.2.2, align 1, !dbg !1772
  %conv13.2.2 = zext i8 %45 to i32, !dbg !1772
    #dbg_value(i32 %conv13.2.2, !1763, !DIExpression(), !1771)
  %add14.2.2 = add nuw nsw i32 %add14.1.2, %conv.2.2, !dbg !1777
    #dbg_value(i32 %add14.2.2, !1749, !DIExpression(), !1768)
  %add15.2.2 = add nuw nsw i32 %add15.1.2, %conv13.2.2, !dbg !1778
    #dbg_value(i32 %add15.2.2, !1752, !DIExpression(), !1768)
  %mul16.2.2 = mul nuw nsw i32 %conv.2.2, %conv.2.2, !dbg !1773
  %add17.2.2 = add nuw nsw i32 %mul16.2.2, %add19.1.2, !dbg !1779
    #dbg_value(i32 %add17.2.2, !1753, !DIExpression(), !1768)
  %mul18.2.2 = mul nuw nsw i32 %conv13.2.2, %conv13.2.2, !dbg !1774
  %add19.2.2 = add nuw nsw i32 %add17.2.2, %mul18.2.2, !dbg !1775
    #dbg_value(i32 %add19.2.2, !1753, !DIExpression(), !1768)
  %mul20.2.2 = mul nuw nsw i32 %conv13.2.2, %conv.2.2, !dbg !1776
  %add21.2.2 = add nuw nsw i32 %mul20.2.2, %add21.1.2, !dbg !1780
    #dbg_value(i32 %add21.2.2, !1754, !DIExpression(), !1768)
    #dbg_value(i64 3, !1757, !DIExpression(), !1769)
  %arrayidx.3.2 = getelementptr inbounds i8, ptr %pix1.addr.080, i64 %14, !dbg !1770
  %46 = load i8, ptr %arrayidx.3.2, align 1, !dbg !1770
  %conv.3.2 = zext i8 %46 to i32, !dbg !1770
    #dbg_value(i32 %conv.3.2, !1760, !DIExpression(), !1771)
  %arrayidx12.3.2 = getelementptr inbounds i8, ptr %pix2.addr.079, i64 %15, !dbg !1772
  %47 = load i8, ptr %arrayidx12.3.2, align 1, !dbg !1772
  %conv13.3.2 = zext i8 %47 to i32, !dbg !1772
    #dbg_value(i32 %conv13.3.2, !1763, !DIExpression(), !1771)
  %add14.3.2 = add nuw nsw i32 %add14.2.2, %conv.3.2, !dbg !1777
    #dbg_value(i32 %add14.3.2, !1749, !DIExpression(), !1768)
  %add15.3.2 = add nuw nsw i32 %add15.2.2, %conv13.3.2, !dbg !1778
    #dbg_value(i32 %add15.3.2, !1752, !DIExpression(), !1768)
  %mul16.3.2 = mul nuw nsw i32 %conv.3.2, %conv.3.2, !dbg !1773
  %add17.3.2 = add nuw nsw i32 %mul16.3.2, %add19.2.2, !dbg !1779
    #dbg_value(i32 %add17.3.2, !1753, !DIExpression(), !1768)
  %mul18.3.2 = mul nuw nsw i32 %conv13.3.2, %conv13.3.2, !dbg !1774
  %add19.3.2 = add nuw nsw i32 %add17.3.2, %mul18.3.2, !dbg !1775
    #dbg_value(i32 %add19.3.2, !1753, !DIExpression(), !1768)
  %mul20.3.2 = mul nuw nsw i32 %conv13.3.2, %conv.3.2, !dbg !1776
  %add21.3.2 = add nuw nsw i32 %mul20.3.2, %add21.2.2, !dbg !1780
    #dbg_value(i32 %add21.3.2, !1754, !DIExpression(), !1768)
    #dbg_value(i64 4, !1757, !DIExpression(), !1769)
    #dbg_value(i64 3, !1755, !DIExpression(), !1767)
    #dbg_value(i32 0, !1757, !DIExpression(), !1769)
    #dbg_value(i64 0, !1757, !DIExpression(), !1769)
    #dbg_value(i32 %add21.3.2, !1754, !DIExpression(), !1768)
    #dbg_value(i32 %add19.3.2, !1753, !DIExpression(), !1768)
    #dbg_value(i32 %add15.3.2, !1752, !DIExpression(), !1768)
    #dbg_value(i32 %add14.3.2, !1749, !DIExpression(), !1768)
  %arrayidx.3111 = getelementptr inbounds i8, ptr %pix1.addr.080, i64 %16, !dbg !1770
  %48 = load i8, ptr %arrayidx.3111, align 1, !dbg !1770
  %conv.3112 = zext i8 %48 to i32, !dbg !1770
    #dbg_value(i32 %conv.3112, !1760, !DIExpression(), !1771)
  %arrayidx12.3113 = getelementptr inbounds i8, ptr %pix2.addr.079, i64 %17, !dbg !1772
  %49 = load i8, ptr %arrayidx12.3113, align 1, !dbg !1772
  %conv13.3114 = zext i8 %49 to i32, !dbg !1772
    #dbg_value(i32 %conv13.3114, !1763, !DIExpression(), !1771)
  %add14.3115 = add nuw nsw i32 %add14.3.2, %conv.3112, !dbg !1777
    #dbg_value(i32 %add14.3115, !1749, !DIExpression(), !1768)
  %add15.3116 = add nuw nsw i32 %add15.3.2, %conv13.3114, !dbg !1778
    #dbg_value(i32 %add15.3116, !1752, !DIExpression(), !1768)
  %mul16.3117 = mul nuw nsw i32 %conv.3112, %conv.3112, !dbg !1773
  %add17.3118 = add nuw nsw i32 %mul16.3117, %add19.3.2, !dbg !1779
    #dbg_value(i32 %add17.3118, !1753, !DIExpression(), !1768)
  %mul18.3119 = mul nuw nsw i32 %conv13.3114, %conv13.3114, !dbg !1774
  %add19.3120 = add nuw nsw i32 %add17.3118, %mul18.3119, !dbg !1775
    #dbg_value(i32 %add19.3120, !1753, !DIExpression(), !1768)
  %mul20.3121 = mul nuw nsw i32 %conv13.3114, %conv.3112, !dbg !1776
  %add21.3122 = add nuw nsw i32 %mul20.3121, %add21.3.2, !dbg !1780
    #dbg_value(i32 %add21.3122, !1754, !DIExpression(), !1768)
    #dbg_value(i64 1, !1757, !DIExpression(), !1769)
  %arrayidx.1.3 = getelementptr inbounds i8, ptr %pix1.addr.080, i64 %18, !dbg !1770
  %50 = load i8, ptr %arrayidx.1.3, align 1, !dbg !1770
  %conv.1.3 = zext i8 %50 to i32, !dbg !1770
    #dbg_value(i32 %conv.1.3, !1760, !DIExpression(), !1771)
  %arrayidx12.1.3 = getelementptr inbounds i8, ptr %pix2.addr.079, i64 %19, !dbg !1772
  %51 = load i8, ptr %arrayidx12.1.3, align 1, !dbg !1772
  %conv13.1.3 = zext i8 %51 to i32, !dbg !1772
    #dbg_value(i32 %conv13.1.3, !1763, !DIExpression(), !1771)
  %add14.1.3 = add nuw nsw i32 %add14.3115, %conv.1.3, !dbg !1777
    #dbg_value(i32 %add14.1.3, !1749, !DIExpression(), !1768)
  %add15.1.3 = add nuw nsw i32 %add15.3116, %conv13.1.3, !dbg !1778
    #dbg_value(i32 %add15.1.3, !1752, !DIExpression(), !1768)
  %mul16.1.3 = mul nuw nsw i32 %conv.1.3, %conv.1.3, !dbg !1773
  %add17.1.3 = add nuw nsw i32 %mul16.1.3, %add19.3120, !dbg !1779
    #dbg_value(i32 %add17.1.3, !1753, !DIExpression(), !1768)
  %mul18.1.3 = mul nuw nsw i32 %conv13.1.3, %conv13.1.3, !dbg !1774
  %add19.1.3 = add nuw nsw i32 %add17.1.3, %mul18.1.3, !dbg !1775
    #dbg_value(i32 %add19.1.3, !1753, !DIExpression(), !1768)
  %mul20.1.3 = mul nuw nsw i32 %conv13.1.3, %conv.1.3, !dbg !1776
  %add21.1.3 = add nuw nsw i32 %mul20.1.3, %add21.3122, !dbg !1780
    #dbg_value(i32 %add21.1.3, !1754, !DIExpression(), !1768)
    #dbg_value(i64 2, !1757, !DIExpression(), !1769)
  %arrayidx.2.3 = getelementptr inbounds i8, ptr %pix1.addr.080, i64 %20, !dbg !1770
  %52 = load i8, ptr %arrayidx.2.3, align 1, !dbg !1770
  %conv.2.3 = zext i8 %52 to i32, !dbg !1770
    #dbg_value(i32 %conv.2.3, !1760, !DIExpression(), !1771)
  %arrayidx12.2.3 = getelementptr inbounds i8, ptr %pix2.addr.079, i64 %21, !dbg !1772
  %53 = load i8, ptr %arrayidx12.2.3, align 1, !dbg !1772
  %conv13.2.3 = zext i8 %53 to i32, !dbg !1772
    #dbg_value(i32 %conv13.2.3, !1763, !DIExpression(), !1771)
  %add14.2.3 = add nuw nsw i32 %add14.1.3, %conv.2.3, !dbg !1777
    #dbg_value(i32 %add14.2.3, !1749, !DIExpression(), !1768)
  %add15.2.3 = add nuw nsw i32 %add15.1.3, %conv13.2.3, !dbg !1778
    #dbg_value(i32 %add15.2.3, !1752, !DIExpression(), !1768)
  %mul16.2.3 = mul nuw nsw i32 %conv.2.3, %conv.2.3, !dbg !1773
  %add17.2.3 = add nuw nsw i32 %mul16.2.3, %add19.1.3, !dbg !1779
    #dbg_value(i32 %add17.2.3, !1753, !DIExpression(), !1768)
  %mul18.2.3 = mul nuw nsw i32 %conv13.2.3, %conv13.2.3, !dbg !1774
  %add19.2.3 = add nuw nsw i32 %add17.2.3, %mul18.2.3, !dbg !1775
    #dbg_value(i32 %add19.2.3, !1753, !DIExpression(), !1768)
  %mul20.2.3 = mul nuw nsw i32 %conv13.2.3, %conv.2.3, !dbg !1776
  %add21.2.3 = add nuw nsw i32 %mul20.2.3, %add21.1.3, !dbg !1780
    #dbg_value(i32 %add21.2.3, !1754, !DIExpression(), !1768)
    #dbg_value(i64 3, !1757, !DIExpression(), !1769)
  %arrayidx.3.3 = getelementptr inbounds i8, ptr %pix1.addr.080, i64 %22, !dbg !1770
  %54 = load i8, ptr %arrayidx.3.3, align 1, !dbg !1770
  %conv.3.3 = zext i8 %54 to i32, !dbg !1770
    #dbg_value(i32 %conv.3.3, !1760, !DIExpression(), !1771)
  %arrayidx12.3.3 = getelementptr inbounds i8, ptr %pix2.addr.079, i64 %23, !dbg !1772
  %55 = load i8, ptr %arrayidx12.3.3, align 1, !dbg !1772
  %conv13.3.3 = zext i8 %55 to i32, !dbg !1772
    #dbg_value(i32 %conv13.3.3, !1763, !DIExpression(), !1771)
  %add14.3.3 = add nuw nsw i32 %add14.2.3, %conv.3.3, !dbg !1777
    #dbg_value(i32 %add14.3.3, !1749, !DIExpression(), !1768)
  %add15.3.3 = add nuw nsw i32 %add15.2.3, %conv13.3.3, !dbg !1778
    #dbg_value(i32 %add15.3.3, !1752, !DIExpression(), !1768)
  %mul16.3.3 = mul nuw nsw i32 %conv.3.3, %conv.3.3, !dbg !1773
  %add17.3.3 = add nuw nsw i32 %mul16.3.3, %add19.2.3, !dbg !1779
    #dbg_value(i32 %add17.3.3, !1753, !DIExpression(), !1768)
  %mul18.3.3 = mul nuw nsw i32 %conv13.3.3, %conv13.3.3, !dbg !1774
  %add19.3.3 = add nuw nsw i32 %add17.3.3, %mul18.3.3, !dbg !1775
    #dbg_value(i32 %add19.3.3, !1753, !DIExpression(), !1768)
  %mul20.3.3 = mul nuw nsw i32 %conv13.3.3, %conv.3.3, !dbg !1776
  %add21.3.3 = add nuw nsw i32 %mul20.3.3, %add21.2.3, !dbg !1780
    #dbg_value(i32 %add21.3.3, !1754, !DIExpression(), !1768)
    #dbg_value(i64 4, !1757, !DIExpression(), !1769)
    #dbg_value(i64 4, !1755, !DIExpression(), !1767)
  %arrayidx26 = getelementptr inbounds [4 x i32], ptr %sums, i64 %indvars.iv, !dbg !1781
  store i32 %add14.3.3, ptr %arrayidx26, align 4, !dbg !1782
  %arrayidx30 = getelementptr inbounds i8, ptr %arrayidx26, i64 4, !dbg !1783
  store i32 %add15.3.3, ptr %arrayidx30, align 4, !dbg !1784
  %arrayidx33 = getelementptr inbounds i8, ptr %arrayidx26, i64 8, !dbg !1785
  store i32 %add19.3.3, ptr %arrayidx33, align 4, !dbg !1786
  %arrayidx36 = getelementptr inbounds i8, ptr %arrayidx26, i64 12, !dbg !1787
  store i32 %add21.3.3, ptr %arrayidx36, align 4, !dbg !1788
  %add.ptr = getelementptr inbounds i8, ptr %pix1.addr.080, i64 4, !dbg !1789
    #dbg_value(ptr %add.ptr, !1742, !DIExpression(), !1764)
  %add.ptr37 = getelementptr inbounds i8, ptr %pix2.addr.079, i64 4, !dbg !1790
    #dbg_value(ptr %add.ptr37, !1744, !DIExpression(), !1764)
    #dbg_value(i64 %indvars.iv, !1747, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1765)
  br i1 %cmp, label %for.cond1.preheader, label %for.cond.cleanup, !dbg !1766, !llvm.loop !1791

for.cond.cleanup:                                 ; preds = %for.cond1.preheader
  ret void, !dbg !1793
}

; Function Attrs: nofree norecurse nosync nounwind memory(argmem: read) uwtable
define internal float @ssim_end4(ptr nocapture noundef readonly %sum0, ptr nocapture noundef readonly %sum1, i32 noundef %width) #10 !dbg !1794 {
entry:
    #dbg_value(ptr %sum0, !1796, !DIExpression(), !1802)
    #dbg_value(ptr %sum1, !1797, !DIExpression(), !1802)
    #dbg_value(i32 %width, !1798, !DIExpression(), !1802)
    #dbg_value(float 0.000000e+00, !1799, !DIExpression(), !1802)
    #dbg_value(i32 0, !1800, !DIExpression(), !1803)
  %cmp99 = icmp sgt i32 %width, 0, !dbg !1804
  br i1 %cmp99, label %for.body.preheader, label %for.cond.cleanup, !dbg !1806

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext nneg i32 %width to i64, !dbg !1804
  %0 = load <2 x i32>, ptr %sum0, align 4, !dbg !1807
  %1 = load <2 x i32>, ptr %sum1, align 4, !dbg !1808
  %arrayidx34.phi.trans.insert = getelementptr inbounds i8, ptr %sum0, i64 8
  %.pre106 = load i32, ptr %arrayidx34.phi.trans.insert, align 4, !dbg !1809
  %arrayidx42.phi.trans.insert = getelementptr inbounds i8, ptr %sum1, i64 8
  %.pre107 = load i32, ptr %arrayidx42.phi.trans.insert, align 4, !dbg !1810
  %arrayidx51.phi.trans.insert = getelementptr inbounds i8, ptr %sum0, i64 12
  %.pre108 = load i32, ptr %arrayidx51.phi.trans.insert, align 4, !dbg !1811
  %arrayidx59.phi.trans.insert = getelementptr inbounds i8, ptr %sum1, i64 12
  %.pre109 = load i32, ptr %arrayidx59.phi.trans.insert, align 4, !dbg !1812
  br label %for.body, !dbg !1806

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %ssim.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %add66, %for.body ], !dbg !1802
  ret float %ssim.0.lcssa, !dbg !1813

for.body:                                         ; preds = %for.body.preheader, %for.body
  %2 = phi i32 [ %.pre109, %for.body.preheader ], [ %16, %for.body ], !dbg !1812
  %3 = phi i32 [ %.pre108, %for.body.preheader ], [ %15, %for.body ], !dbg !1811
  %4 = phi i32 [ %.pre107, %for.body.preheader ], [ %14, %for.body ], !dbg !1810
  %5 = phi i32 [ %.pre106, %for.body.preheader ], [ %13, %for.body ], !dbg !1809
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %ssim.0100 = phi float [ 0.000000e+00, %for.body.preheader ], [ %add66, %for.body ]
  %6 = phi <2 x i32> [ %0, %for.body.preheader ], [ %8, %for.body ], !dbg !1807
  %7 = phi <2 x i32> [ %1, %for.body.preheader ], [ %11, %for.body ], !dbg !1808
    #dbg_value(i64 %indvars.iv, !1800, !DIExpression(), !1803)
    #dbg_value(float %ssim.0100, !1799, !DIExpression(), !1802)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1814
  %arrayidx3 = getelementptr inbounds [4 x i32], ptr %sum0, i64 %indvars.iv.next, !dbg !1815
  %arrayidx12 = getelementptr inbounds [4 x i32], ptr %sum1, i64 %indvars.iv.next, !dbg !1816
  %8 = load <2 x i32>, ptr %arrayidx3, align 4, !dbg !1815
  %9 = add nsw <2 x i32> %8, %6, !dbg !1817
  %10 = add nsw <2 x i32> %9, %7, !dbg !1818
  %11 = load <2 x i32>, ptr %arrayidx12, align 4, !dbg !1816
  %12 = add nsw <2 x i32> %10, %11, !dbg !1819
  %arrayidx38 = getelementptr inbounds i8, ptr %arrayidx3, i64 8, !dbg !1820
  %13 = load i32, ptr %arrayidx38, align 4, !dbg !1820
  %add39 = add nsw i32 %13, %5, !dbg !1821
  %add43 = add nsw i32 %add39, %4, !dbg !1822
  %arrayidx47 = getelementptr inbounds i8, ptr %arrayidx12, i64 8, !dbg !1823
  %14 = load i32, ptr %arrayidx47, align 4, !dbg !1823
  %add48 = add nsw i32 %add43, %14, !dbg !1824
  %arrayidx55 = getelementptr inbounds i8, ptr %arrayidx3, i64 12, !dbg !1825
  %15 = load i32, ptr %arrayidx55, align 4, !dbg !1825
  %add56 = add nsw i32 %15, %3, !dbg !1826
  %add60 = add nsw i32 %add56, %2, !dbg !1827
  %arrayidx64 = getelementptr inbounds i8, ptr %arrayidx12, i64 12, !dbg !1828
  %16 = load i32, ptr %arrayidx64, align 4, !dbg !1828
  %add65 = add nsw i32 %add60, %16, !dbg !1829
    #dbg_value(!DIArgList(i32 poison, i32 poison, i32 poison, i32 poison), !40, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1830)
    #dbg_value(!DIArgList(i32 poison, i32 poison, i32 poison, i32 poison), !41, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1830)
    #dbg_value(i32 %add48, !42, !DIExpression(), !1830)
    #dbg_value(i32 %add65, !43, !DIExpression(), !1830)
  %mul.i = shl nsw i32 %add48, 6, !dbg !1832
  %17 = extractelement <2 x i32> %12, i64 0, !dbg !1833
  %mul1.i = mul nsw i32 %17, %17, !dbg !1834
  %18 = extractelement <2 x i32> %12, i64 1
  %mul2.i = mul nsw i32 %18, %18, !dbg !1835
  %19 = add nuw i32 %mul2.i, %mul1.i, !dbg !1836
    #dbg_value(i32 poison, !44, !DIExpression(), !1830)
    #dbg_value(!DIArgList(i32 poison, i32 poison), !45, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 6, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !1830)
  %mul7.i = shl nsw i32 %17, 1, !dbg !1833
  %mul8.i = mul nsw i32 %mul7.i, %18, !dbg !1837
  %add.i = add nsw i32 %mul8.i, 416, !dbg !1838
  %conv.i = sitofp i32 %add.i to float, !dbg !1839
  %20 = shl i32 %add65, 7, !dbg !1840
  %21 = mul i32 %17, -2, !dbg !1840
  %.neg31.i = mul i32 %21, %18
  %mul9.i = add i32 %.neg31.i, 235963, !dbg !1840
  %add10.i = add i32 %mul9.i, %20, !dbg !1841
  %conv11.i = sitofp i32 %add10.i to float, !dbg !1842
  %mul12.i = fmul float %conv.i, %conv11.i, !dbg !1843
  %add16.i = add nuw nsw i32 %19, 416, !dbg !1844
  %conv17.i = uitofp nneg i32 %add16.i to float, !dbg !1845
  %reass.sub = sub i32 %mul.i, %19, !dbg !1846
  %add18.i = add i32 %reass.sub, 235963, !dbg !1846
  %conv19.i = sitofp i32 %add18.i to float, !dbg !1847
  %mul20.i = fmul float %conv17.i, %conv19.i, !dbg !1848
  %div.i = fdiv float %mul12.i, %mul20.i, !dbg !1849
  %add66 = fadd float %ssim.0100, %div.i, !dbg !1850
    #dbg_value(i64 %indvars.iv.next, !1800, !DIExpression(), !1803)
    #dbg_value(float %add66, !1799, !DIExpression(), !1802)
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !1804
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !dbg !1806, !llvm.loop !1851
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal i32 @pixel_var2_8x8(ptr nocapture noundef readonly %pix1, i32 noundef %i_stride1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride2, ptr nocapture noundef writeonly %ssd) #7 !dbg !1853 {
entry:
    #dbg_value(ptr %pix1, !1855, !DIExpression(), !1872)
    #dbg_value(i32 %i_stride1, !1856, !DIExpression(), !1872)
    #dbg_value(ptr %pix2, !1857, !DIExpression(), !1872)
    #dbg_value(i32 %i_stride2, !1858, !DIExpression(), !1872)
    #dbg_value(ptr %ssd, !1859, !DIExpression(), !1872)
    #dbg_value(i32 0, !1860, !DIExpression(), !1872)
    #dbg_value(i32 0, !1861, !DIExpression(), !1872)
    #dbg_value(i32 0, !1862, !DIExpression(), !1872)
    #dbg_value(i32 0, !1863, !DIExpression(), !1873)
  %idx.ext = sext i32 %i_stride1 to i64
  %idx.ext9 = sext i32 %i_stride2 to i64
    #dbg_value(ptr %pix1, !1855, !DIExpression(), !1872)
    #dbg_value(i32 0, !1863, !DIExpression(), !1873)
    #dbg_value(i32 0, !1862, !DIExpression(), !1872)
    #dbg_value(i32 0, !1861, !DIExpression(), !1872)
    #dbg_value(ptr %pix2, !1857, !DIExpression(), !1872)
  br label %for.cond1.preheader, !dbg !1874

for.cond1.preheader:                              ; preds = %entry, %for.cond1.preheader
  %pix1.addr.036 = phi ptr [ %pix1, %entry ], [ %add.ptr, %for.cond1.preheader ]
  %y.035 = phi i32 [ 0, %entry ], [ %inc12, %for.cond1.preheader ]
  %sqr.034 = phi i32 [ 0, %entry ], [ %add8.7, %for.cond1.preheader ]
  %sum.033 = phi i32 [ 0, %entry ], [ %op.rdx, %for.cond1.preheader ]
  %pix2.addr.032 = phi ptr [ %pix2, %entry ], [ %add.ptr10, %for.cond1.preheader ]
    #dbg_value(ptr %pix1.addr.036, !1855, !DIExpression(), !1872)
    #dbg_value(i32 %y.035, !1863, !DIExpression(), !1873)
    #dbg_value(i32 %sqr.034, !1862, !DIExpression(), !1872)
    #dbg_value(i32 %sum.033, !1861, !DIExpression(), !1872)
    #dbg_value(ptr %pix2.addr.032, !1857, !DIExpression(), !1872)
    #dbg_value(i32 0, !1865, !DIExpression(), !1875)
    #dbg_value(i32 %sqr.034, !1862, !DIExpression(), !1872)
    #dbg_value(i32 %sum.033, !1861, !DIExpression(), !1872)
    #dbg_value(i64 0, !1865, !DIExpression(), !1875)
    #dbg_value(i32 %sqr.034, !1862, !DIExpression(), !1872)
    #dbg_value(i32 %sum.033, !1861, !DIExpression(), !1872)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !1869, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !1876)
    #dbg_value(i32 poison, !1861, !DIExpression(), !1872)
    #dbg_value(i32 %add8, !1862, !DIExpression(), !1872)
    #dbg_value(i64 1, !1865, !DIExpression(), !1875)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !1869, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !1876)
    #dbg_value(i32 poison, !1861, !DIExpression(), !1872)
    #dbg_value(i32 %add8.1, !1862, !DIExpression(), !1872)
    #dbg_value(i64 2, !1865, !DIExpression(), !1875)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !1869, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !1876)
    #dbg_value(i32 poison, !1861, !DIExpression(), !1872)
    #dbg_value(i32 %add8.2, !1862, !DIExpression(), !1872)
    #dbg_value(i64 3, !1865, !DIExpression(), !1875)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !1869, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !1876)
    #dbg_value(i32 poison, !1861, !DIExpression(), !1872)
    #dbg_value(i32 %add8.3, !1862, !DIExpression(), !1872)
    #dbg_value(i64 4, !1865, !DIExpression(), !1875)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !1869, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !1876)
    #dbg_value(i32 poison, !1861, !DIExpression(), !1872)
    #dbg_value(i32 %add8.4, !1862, !DIExpression(), !1872)
    #dbg_value(i64 5, !1865, !DIExpression(), !1875)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !1869, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !1876)
    #dbg_value(i32 poison, !1861, !DIExpression(), !1872)
    #dbg_value(i32 %add8.5, !1862, !DIExpression(), !1872)
    #dbg_value(i64 6, !1865, !DIExpression(), !1875)
    #dbg_value(!DIArgList(i8 poison, i32 poison), !1869, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !1876)
    #dbg_value(i32 poison, !1861, !DIExpression(), !1872)
    #dbg_value(i32 %add8.6, !1862, !DIExpression(), !1872)
    #dbg_value(i64 7, !1865, !DIExpression(), !1875)
  %0 = load <8 x i8>, ptr %pix1.addr.036, align 1, !dbg !1877
  %1 = zext <8 x i8> %0 to <8 x i32>, !dbg !1877
  %2 = load <8 x i8>, ptr %pix2.addr.032, align 1, !dbg !1878
  %3 = zext <8 x i8> %2 to <8 x i32>, !dbg !1878
  %4 = sub nsw <8 x i32> %1, %3, !dbg !1879
  %5 = extractelement <8 x i32> %4, i64 0, !dbg !1880
  %mul = mul nsw i32 %5, %5, !dbg !1880
  %add8 = add i32 %mul, %sqr.034, !dbg !1881
  %6 = extractelement <8 x i32> %4, i64 1, !dbg !1880
  %mul.1 = mul nsw i32 %6, %6, !dbg !1880
  %add8.1 = add i32 %mul.1, %add8, !dbg !1881
  %7 = extractelement <8 x i32> %4, i64 2, !dbg !1880
  %mul.2 = mul nsw i32 %7, %7, !dbg !1880
  %add8.2 = add i32 %mul.2, %add8.1, !dbg !1881
  %8 = extractelement <8 x i32> %4, i64 3, !dbg !1880
  %mul.3 = mul nsw i32 %8, %8, !dbg !1880
  %add8.3 = add i32 %mul.3, %add8.2, !dbg !1881
  %9 = extractelement <8 x i32> %4, i64 4, !dbg !1880
  %mul.4 = mul nsw i32 %9, %9, !dbg !1880
  %add8.4 = add i32 %mul.4, %add8.3, !dbg !1881
  %10 = extractelement <8 x i32> %4, i64 5, !dbg !1880
  %mul.5 = mul nsw i32 %10, %10, !dbg !1880
  %add8.5 = add i32 %mul.5, %add8.4, !dbg !1881
  %11 = extractelement <8 x i32> %4, i64 6, !dbg !1880
  %mul.6 = mul nsw i32 %11, %11, !dbg !1880
  %add8.6 = add i32 %mul.6, %add8.5, !dbg !1881
    #dbg_value(!DIArgList(i8 poison, i32 poison), !1869, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value), !1876)
  %12 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %4), !dbg !1882
  %op.rdx = add i32 %12, %sum.033, !dbg !1882
    #dbg_value(i32 %op.rdx, !1861, !DIExpression(), !1872)
  %13 = extractelement <8 x i32> %4, i64 7, !dbg !1880
  %mul.7 = mul nsw i32 %13, %13, !dbg !1880
  %add8.7 = add i32 %mul.7, %add8.6, !dbg !1881
    #dbg_value(i32 %add8.7, !1862, !DIExpression(), !1872)
    #dbg_value(i64 8, !1865, !DIExpression(), !1875)
  %add.ptr = getelementptr inbounds i8, ptr %pix1.addr.036, i64 %idx.ext, !dbg !1883
    #dbg_value(ptr %add.ptr, !1855, !DIExpression(), !1872)
  %add.ptr10 = getelementptr inbounds i8, ptr %pix2.addr.032, i64 %idx.ext9, !dbg !1884
    #dbg_value(ptr %add.ptr10, !1857, !DIExpression(), !1872)
  %inc12 = add nuw nsw i32 %y.035, 1, !dbg !1885
    #dbg_value(i32 %inc12, !1863, !DIExpression(), !1873)
  %exitcond.not = icmp eq i32 %inc12, 8, !dbg !1886
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond1.preheader, !dbg !1874, !llvm.loop !1887

for.cond.cleanup:                                 ; preds = %for.cond1.preheader
    #dbg_value(i32 poison, !1861, !DIExpression(), !1872)
  %mul14 = mul i32 %op.rdx, %op.rdx, !dbg !1889
  %shr = lshr i32 %mul14, 6, !dbg !1890
  %sub15 = sub i32 %add8.7, %shr, !dbg !1891
    #dbg_value(i32 %sub15, !1860, !DIExpression(), !1872)
  store i32 %add8.7, ptr %ssd, align 4, !dbg !1892
  ret i32 %sub15, !dbg !1893
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #11

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define internal fastcc range(i64 -65535, -4294836225) i64 @pixel_hadamard_ac(ptr nocapture noundef readonly %pix, i32 noundef %stride) unnamed_addr #4 !dbg !1894 {
entry:
  %tmp = alloca [32 x i32], align 16, !DIAssignID !1933
    #dbg_assign(i1 undef, !1898, !DIExpression(), !1933, ptr %tmp, !DIExpression(), !1934)
    #dbg_value(ptr %pix, !1896, !DIExpression(), !1934)
    #dbg_value(i32 %stride, !1897, !DIExpression(), !1934)
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %tmp) #13, !dbg !1935
    #dbg_value(i32 0, !1907, !DIExpression(), !1934)
    #dbg_value(i32 0, !1908, !DIExpression(), !1934)
    #dbg_value(i32 0, !1909, !DIExpression(), !1936)
  %idx.ext55 = sext i32 %stride to i64
    #dbg_value(ptr %tmp, !1911, !DIExpression(), !1937)
  %0 = load i8, ptr %pix, align 1, !dbg !1938
  %conv = zext i8 %0 to i32, !dbg !1938
  %arrayidx4 = getelementptr inbounds i8, ptr %pix, i64 1, !dbg !1939
  %1 = load i8, ptr %arrayidx4, align 1, !dbg !1939
  %conv5 = zext i8 %1 to i32, !dbg !1939
  %add = add nuw nsw i32 %conv5, %conv, !dbg !1940
  %sub = sub nsw i32 %conv, %conv5, !dbg !1941
  %shl = shl nsw i32 %sub, 16, !dbg !1942
  %add10 = or disjoint i32 %shl, %add, !dbg !1943
    #dbg_value(i32 %add10, !1902, !DIExpression(), !1934)
  %arrayidx11 = getelementptr inbounds i8, ptr %pix, i64 2, !dbg !1944
  %2 = load i8, ptr %arrayidx11, align 1, !dbg !1944
  %conv12 = zext i8 %2 to i32, !dbg !1944
  %arrayidx13 = getelementptr inbounds i8, ptr %pix, i64 3, !dbg !1945
  %3 = load i8, ptr %arrayidx13, align 1, !dbg !1945
  %conv14 = zext i8 %3 to i32, !dbg !1945
  %add15 = add nuw nsw i32 %conv14, %conv12, !dbg !1946
  %sub20 = sub nsw i32 %conv12, %conv14, !dbg !1947
  %shl21 = shl nsw i32 %sub20, 16, !dbg !1948
  %add22 = or disjoint i32 %shl21, %add15, !dbg !1949
    #dbg_value(i32 %add22, !1903, !DIExpression(), !1934)
  %add23 = add nsw i32 %add22, %add10, !dbg !1950
  store i32 %add23, ptr %tmp, align 16, !dbg !1951
  %sub25 = sub nsw i32 %add10, %add22, !dbg !1952
  %arrayidx26 = getelementptr inbounds i8, ptr %tmp, i64 16, !dbg !1953
  store i32 %sub25, ptr %arrayidx26, align 16, !dbg !1954
  %arrayidx27 = getelementptr inbounds i8, ptr %pix, i64 4, !dbg !1955
  %4 = load i8, ptr %arrayidx27, align 1, !dbg !1955
  %conv28 = zext i8 %4 to i32, !dbg !1955
  %arrayidx29 = getelementptr inbounds i8, ptr %pix, i64 5, !dbg !1956
  %5 = load i8, ptr %arrayidx29, align 1, !dbg !1956
  %conv30 = zext i8 %5 to i32, !dbg !1956
  %add31 = add nuw nsw i32 %conv30, %conv28, !dbg !1957
  %sub36 = sub nsw i32 %conv28, %conv30, !dbg !1958
  %shl37 = shl nsw i32 %sub36, 16, !dbg !1959
  %add38 = or disjoint i32 %shl37, %add31, !dbg !1960
    #dbg_value(i32 %add38, !1904, !DIExpression(), !1934)
  %arrayidx39 = getelementptr inbounds i8, ptr %pix, i64 6, !dbg !1961
  %6 = load i8, ptr %arrayidx39, align 1, !dbg !1961
  %conv40 = zext i8 %6 to i32, !dbg !1961
  %arrayidx41 = getelementptr inbounds i8, ptr %pix, i64 7, !dbg !1962
  %7 = load i8, ptr %arrayidx41, align 1, !dbg !1962
  %conv42 = zext i8 %7 to i32, !dbg !1962
  %add43 = add nuw nsw i32 %conv42, %conv40, !dbg !1963
  %sub48 = sub nsw i32 %conv40, %conv42, !dbg !1964
  %shl49 = shl nsw i32 %sub48, 16, !dbg !1965
  %add50 = or disjoint i32 %shl49, %add43, !dbg !1966
    #dbg_value(i32 %add50, !1905, !DIExpression(), !1934)
  %add51 = add nsw i32 %add50, %add38, !dbg !1967
  %arrayidx52 = getelementptr inbounds i8, ptr %tmp, i64 32, !dbg !1968
  store i32 %add51, ptr %arrayidx52, align 16, !dbg !1969
  %sub53 = sub nsw i32 %add38, %add50, !dbg !1970
  %arrayidx54 = getelementptr inbounds i8, ptr %tmp, i64 48, !dbg !1971
  store i32 %sub53, ptr %arrayidx54, align 16, !dbg !1972
    #dbg_value(i32 1, !1909, !DIExpression(), !1936)
  %add.ptr56 = getelementptr inbounds i8, ptr %pix, i64 %idx.ext55, !dbg !1973
    #dbg_value(ptr %add.ptr56, !1896, !DIExpression(), !1934)
  %add.ptr.1 = getelementptr inbounds i8, ptr %tmp, i64 4, !dbg !1974
    #dbg_value(ptr %add.ptr.1, !1911, !DIExpression(), !1937)
  %8 = load i8, ptr %add.ptr56, align 1, !dbg !1938
  %conv.1 = zext i8 %8 to i32, !dbg !1938
  %arrayidx4.1 = getelementptr inbounds i8, ptr %add.ptr56, i64 1, !dbg !1939
  %9 = load i8, ptr %arrayidx4.1, align 1, !dbg !1939
  %conv5.1 = zext i8 %9 to i32, !dbg !1939
  %add.1 = add nuw nsw i32 %conv5.1, %conv.1, !dbg !1940
  %sub.1 = sub nsw i32 %conv.1, %conv5.1, !dbg !1941
  %shl.1 = shl nsw i32 %sub.1, 16, !dbg !1942
  %add10.1 = or disjoint i32 %shl.1, %add.1, !dbg !1943
    #dbg_value(i32 %add10.1, !1902, !DIExpression(), !1934)
  %arrayidx11.1 = getelementptr inbounds i8, ptr %add.ptr56, i64 2, !dbg !1944
  %10 = load i8, ptr %arrayidx11.1, align 1, !dbg !1944
  %conv12.1 = zext i8 %10 to i32, !dbg !1944
  %arrayidx13.1 = getelementptr inbounds i8, ptr %add.ptr56, i64 3, !dbg !1945
  %11 = load i8, ptr %arrayidx13.1, align 1, !dbg !1945
  %conv14.1 = zext i8 %11 to i32, !dbg !1945
  %add15.1 = add nuw nsw i32 %conv14.1, %conv12.1, !dbg !1946
  %sub20.1 = sub nsw i32 %conv12.1, %conv14.1, !dbg !1947
  %shl21.1 = shl nsw i32 %sub20.1, 16, !dbg !1948
  %add22.1 = or disjoint i32 %shl21.1, %add15.1, !dbg !1949
    #dbg_value(i32 %add22.1, !1903, !DIExpression(), !1934)
  %add23.1 = add nsw i32 %add22.1, %add10.1, !dbg !1950
  store i32 %add23.1, ptr %add.ptr.1, align 4, !dbg !1951
  %sub25.1 = sub nsw i32 %add10.1, %add22.1, !dbg !1952
  %arrayidx26.1 = getelementptr inbounds i8, ptr %tmp, i64 20, !dbg !1953
  store i32 %sub25.1, ptr %arrayidx26.1, align 4, !dbg !1954
  %arrayidx27.1 = getelementptr inbounds i8, ptr %add.ptr56, i64 4, !dbg !1955
  %12 = load i8, ptr %arrayidx27.1, align 1, !dbg !1955
  %conv28.1 = zext i8 %12 to i32, !dbg !1955
  %arrayidx29.1 = getelementptr inbounds i8, ptr %add.ptr56, i64 5, !dbg !1956
  %13 = load i8, ptr %arrayidx29.1, align 1, !dbg !1956
  %conv30.1 = zext i8 %13 to i32, !dbg !1956
  %add31.1 = add nuw nsw i32 %conv30.1, %conv28.1, !dbg !1957
  %sub36.1 = sub nsw i32 %conv28.1, %conv30.1, !dbg !1958
  %shl37.1 = shl nsw i32 %sub36.1, 16, !dbg !1959
  %add38.1 = or disjoint i32 %shl37.1, %add31.1, !dbg !1960
    #dbg_value(i32 %add38.1, !1904, !DIExpression(), !1934)
  %arrayidx39.1 = getelementptr inbounds i8, ptr %add.ptr56, i64 6, !dbg !1961
  %14 = load i8, ptr %arrayidx39.1, align 1, !dbg !1961
  %conv40.1 = zext i8 %14 to i32, !dbg !1961
  %arrayidx41.1 = getelementptr inbounds i8, ptr %add.ptr56, i64 7, !dbg !1962
  %15 = load i8, ptr %arrayidx41.1, align 1, !dbg !1962
  %conv42.1 = zext i8 %15 to i32, !dbg !1962
  %add43.1 = add nuw nsw i32 %conv42.1, %conv40.1, !dbg !1963
  %sub48.1 = sub nsw i32 %conv40.1, %conv42.1, !dbg !1964
  %shl49.1 = shl nsw i32 %sub48.1, 16, !dbg !1965
  %add50.1 = or disjoint i32 %shl49.1, %add43.1, !dbg !1966
    #dbg_value(i32 %add50.1, !1905, !DIExpression(), !1934)
  %add51.1 = add nsw i32 %add50.1, %add38.1, !dbg !1967
  %arrayidx52.1 = getelementptr inbounds i8, ptr %tmp, i64 36, !dbg !1968
  store i32 %add51.1, ptr %arrayidx52.1, align 4, !dbg !1969
  %sub53.1 = sub nsw i32 %add38.1, %add50.1, !dbg !1970
  %arrayidx54.1 = getelementptr inbounds i8, ptr %tmp, i64 52, !dbg !1971
  store i32 %sub53.1, ptr %arrayidx54.1, align 4, !dbg !1972
    #dbg_value(i32 2, !1909, !DIExpression(), !1936)
  %add.ptr56.1 = getelementptr inbounds i8, ptr %add.ptr56, i64 %idx.ext55, !dbg !1973
    #dbg_value(ptr %add.ptr56.1, !1896, !DIExpression(), !1934)
  %add.ptr.2 = getelementptr inbounds i8, ptr %tmp, i64 8, !dbg !1974
    #dbg_value(ptr %add.ptr.2, !1911, !DIExpression(), !1937)
  %16 = load i8, ptr %add.ptr56.1, align 1, !dbg !1938
  %conv.2 = zext i8 %16 to i32, !dbg !1938
  %arrayidx4.2 = getelementptr inbounds i8, ptr %add.ptr56.1, i64 1, !dbg !1939
  %17 = load i8, ptr %arrayidx4.2, align 1, !dbg !1939
  %conv5.2 = zext i8 %17 to i32, !dbg !1939
  %add.2 = add nuw nsw i32 %conv5.2, %conv.2, !dbg !1940
  %sub.2 = sub nsw i32 %conv.2, %conv5.2, !dbg !1941
  %shl.2 = shl nsw i32 %sub.2, 16, !dbg !1942
  %add10.2 = or disjoint i32 %shl.2, %add.2, !dbg !1943
    #dbg_value(i32 %add10.2, !1902, !DIExpression(), !1934)
  %arrayidx11.2 = getelementptr inbounds i8, ptr %add.ptr56.1, i64 2, !dbg !1944
  %18 = load i8, ptr %arrayidx11.2, align 1, !dbg !1944
  %conv12.2 = zext i8 %18 to i32, !dbg !1944
  %arrayidx13.2 = getelementptr inbounds i8, ptr %add.ptr56.1, i64 3, !dbg !1945
  %19 = load i8, ptr %arrayidx13.2, align 1, !dbg !1945
  %conv14.2 = zext i8 %19 to i32, !dbg !1945
  %add15.2 = add nuw nsw i32 %conv14.2, %conv12.2, !dbg !1946
  %sub20.2 = sub nsw i32 %conv12.2, %conv14.2, !dbg !1947
  %shl21.2 = shl nsw i32 %sub20.2, 16, !dbg !1948
  %add22.2 = or disjoint i32 %shl21.2, %add15.2, !dbg !1949
    #dbg_value(i32 %add22.2, !1903, !DIExpression(), !1934)
  %add23.2 = add nsw i32 %add22.2, %add10.2, !dbg !1950
  store i32 %add23.2, ptr %add.ptr.2, align 8, !dbg !1951
  %sub25.2 = sub nsw i32 %add10.2, %add22.2, !dbg !1952
  %arrayidx26.2 = getelementptr inbounds i8, ptr %tmp, i64 24, !dbg !1953
  store i32 %sub25.2, ptr %arrayidx26.2, align 8, !dbg !1954
  %arrayidx27.2 = getelementptr inbounds i8, ptr %add.ptr56.1, i64 4, !dbg !1955
  %20 = load i8, ptr %arrayidx27.2, align 1, !dbg !1955
  %conv28.2 = zext i8 %20 to i32, !dbg !1955
  %arrayidx29.2 = getelementptr inbounds i8, ptr %add.ptr56.1, i64 5, !dbg !1956
  %21 = load i8, ptr %arrayidx29.2, align 1, !dbg !1956
  %conv30.2 = zext i8 %21 to i32, !dbg !1956
  %add31.2 = add nuw nsw i32 %conv30.2, %conv28.2, !dbg !1957
  %sub36.2 = sub nsw i32 %conv28.2, %conv30.2, !dbg !1958
  %shl37.2 = shl nsw i32 %sub36.2, 16, !dbg !1959
  %add38.2 = or disjoint i32 %shl37.2, %add31.2, !dbg !1960
    #dbg_value(i32 %add38.2, !1904, !DIExpression(), !1934)
  %arrayidx39.2 = getelementptr inbounds i8, ptr %add.ptr56.1, i64 6, !dbg !1961
  %22 = load i8, ptr %arrayidx39.2, align 1, !dbg !1961
  %conv40.2 = zext i8 %22 to i32, !dbg !1961
  %arrayidx41.2 = getelementptr inbounds i8, ptr %add.ptr56.1, i64 7, !dbg !1962
  %23 = load i8, ptr %arrayidx41.2, align 1, !dbg !1962
  %conv42.2 = zext i8 %23 to i32, !dbg !1962
  %add43.2 = add nuw nsw i32 %conv42.2, %conv40.2, !dbg !1963
  %sub48.2 = sub nsw i32 %conv40.2, %conv42.2, !dbg !1964
  %shl49.2 = shl nsw i32 %sub48.2, 16, !dbg !1965
  %add50.2 = or disjoint i32 %shl49.2, %add43.2, !dbg !1966
    #dbg_value(i32 %add50.2, !1905, !DIExpression(), !1934)
  %add51.2 = add nsw i32 %add50.2, %add38.2, !dbg !1967
  %arrayidx52.2 = getelementptr inbounds i8, ptr %tmp, i64 40, !dbg !1968
  store i32 %add51.2, ptr %arrayidx52.2, align 8, !dbg !1969
  %sub53.2 = sub nsw i32 %add38.2, %add50.2, !dbg !1970
  %arrayidx54.2 = getelementptr inbounds i8, ptr %tmp, i64 56, !dbg !1971
  store i32 %sub53.2, ptr %arrayidx54.2, align 8, !dbg !1972
    #dbg_value(i32 3, !1909, !DIExpression(), !1936)
  %add.ptr56.2 = getelementptr inbounds i8, ptr %add.ptr56.1, i64 %idx.ext55, !dbg !1973
    #dbg_value(ptr %add.ptr56.2, !1896, !DIExpression(), !1934)
  %add.ptr.3 = getelementptr inbounds i8, ptr %tmp, i64 12, !dbg !1974
    #dbg_value(ptr %add.ptr.3, !1911, !DIExpression(), !1937)
  %24 = load i8, ptr %add.ptr56.2, align 1, !dbg !1938
  %conv.3 = zext i8 %24 to i32, !dbg !1938
  %arrayidx4.3 = getelementptr inbounds i8, ptr %add.ptr56.2, i64 1, !dbg !1939
  %25 = load i8, ptr %arrayidx4.3, align 1, !dbg !1939
  %conv5.3 = zext i8 %25 to i32, !dbg !1939
  %add.3 = add nuw nsw i32 %conv5.3, %conv.3, !dbg !1940
  %sub.3 = sub nsw i32 %conv.3, %conv5.3, !dbg !1941
  %shl.3 = shl nsw i32 %sub.3, 16, !dbg !1942
  %add10.3 = or disjoint i32 %shl.3, %add.3, !dbg !1943
    #dbg_value(i32 %add10.3, !1902, !DIExpression(), !1934)
  %arrayidx11.3 = getelementptr inbounds i8, ptr %add.ptr56.2, i64 2, !dbg !1944
  %26 = load i8, ptr %arrayidx11.3, align 1, !dbg !1944
  %conv12.3 = zext i8 %26 to i32, !dbg !1944
  %arrayidx13.3 = getelementptr inbounds i8, ptr %add.ptr56.2, i64 3, !dbg !1945
  %27 = load i8, ptr %arrayidx13.3, align 1, !dbg !1945
  %conv14.3 = zext i8 %27 to i32, !dbg !1945
  %add15.3 = add nuw nsw i32 %conv14.3, %conv12.3, !dbg !1946
  %sub20.3 = sub nsw i32 %conv12.3, %conv14.3, !dbg !1947
  %shl21.3 = shl nsw i32 %sub20.3, 16, !dbg !1948
  %add22.3 = or disjoint i32 %shl21.3, %add15.3, !dbg !1949
    #dbg_value(i32 %add22.3, !1903, !DIExpression(), !1934)
  %add23.3 = add nsw i32 %add22.3, %add10.3, !dbg !1950
  store i32 %add23.3, ptr %add.ptr.3, align 4, !dbg !1951
  %sub25.3 = sub nsw i32 %add10.3, %add22.3, !dbg !1952
  %arrayidx26.3 = getelementptr inbounds i8, ptr %tmp, i64 28, !dbg !1953
  store i32 %sub25.3, ptr %arrayidx26.3, align 4, !dbg !1954
  %arrayidx27.3 = getelementptr inbounds i8, ptr %add.ptr56.2, i64 4, !dbg !1955
  %28 = load i8, ptr %arrayidx27.3, align 1, !dbg !1955
  %conv28.3 = zext i8 %28 to i32, !dbg !1955
  %arrayidx29.3 = getelementptr inbounds i8, ptr %add.ptr56.2, i64 5, !dbg !1956
  %29 = load i8, ptr %arrayidx29.3, align 1, !dbg !1956
  %conv30.3 = zext i8 %29 to i32, !dbg !1956
  %add31.3 = add nuw nsw i32 %conv30.3, %conv28.3, !dbg !1957
  %sub36.3 = sub nsw i32 %conv28.3, %conv30.3, !dbg !1958
  %shl37.3 = shl nsw i32 %sub36.3, 16, !dbg !1959
  %add38.3 = or disjoint i32 %shl37.3, %add31.3, !dbg !1960
    #dbg_value(i32 %add38.3, !1904, !DIExpression(), !1934)
  %arrayidx39.3 = getelementptr inbounds i8, ptr %add.ptr56.2, i64 6, !dbg !1961
  %30 = load i8, ptr %arrayidx39.3, align 1, !dbg !1961
  %conv40.3 = zext i8 %30 to i32, !dbg !1961
  %arrayidx41.3 = getelementptr inbounds i8, ptr %add.ptr56.2, i64 7, !dbg !1962
  %31 = load i8, ptr %arrayidx41.3, align 1, !dbg !1962
  %conv42.3 = zext i8 %31 to i32, !dbg !1962
  %add43.3 = add nuw nsw i32 %conv42.3, %conv40.3, !dbg !1963
  %sub48.3 = sub nsw i32 %conv40.3, %conv42.3, !dbg !1964
  %shl49.3 = shl nsw i32 %sub48.3, 16, !dbg !1965
  %add50.3 = or disjoint i32 %shl49.3, %add43.3, !dbg !1966
    #dbg_value(i32 %add50.3, !1905, !DIExpression(), !1934)
  %add51.3 = add nsw i32 %add50.3, %add38.3, !dbg !1967
  %arrayidx52.3 = getelementptr inbounds i8, ptr %tmp, i64 44, !dbg !1968
  store i32 %add51.3, ptr %arrayidx52.3, align 4, !dbg !1969
  %sub53.3 = sub nsw i32 %add38.3, %add50.3, !dbg !1970
  %arrayidx54.3 = getelementptr inbounds i8, ptr %tmp, i64 60, !dbg !1971
  store i32 %sub53.3, ptr %arrayidx54.3, align 4, !dbg !1972
    #dbg_value(i32 4, !1909, !DIExpression(), !1936)
  %add.ptr56.3 = getelementptr inbounds i8, ptr %add.ptr56.2, i64 %idx.ext55, !dbg !1973
    #dbg_value(ptr %add.ptr56.3, !1896, !DIExpression(), !1934)
  %add.ptr3.4 = getelementptr inbounds i8, ptr %tmp, i64 64, !dbg !1975
    #dbg_value(ptr %add.ptr3.4, !1911, !DIExpression(), !1937)
  %32 = load i8, ptr %add.ptr56.3, align 1, !dbg !1938
  %conv.4 = zext i8 %32 to i32, !dbg !1938
  %arrayidx4.4 = getelementptr inbounds i8, ptr %add.ptr56.3, i64 1, !dbg !1939
  %33 = load i8, ptr %arrayidx4.4, align 1, !dbg !1939
  %conv5.4 = zext i8 %33 to i32, !dbg !1939
  %add.4 = add nuw nsw i32 %conv5.4, %conv.4, !dbg !1940
  %sub.4 = sub nsw i32 %conv.4, %conv5.4, !dbg !1941
  %shl.4 = shl nsw i32 %sub.4, 16, !dbg !1942
  %add10.4 = or disjoint i32 %shl.4, %add.4, !dbg !1943
    #dbg_value(i32 %add10.4, !1902, !DIExpression(), !1934)
  %arrayidx11.4 = getelementptr inbounds i8, ptr %add.ptr56.3, i64 2, !dbg !1944
  %34 = load i8, ptr %arrayidx11.4, align 1, !dbg !1944
  %conv12.4 = zext i8 %34 to i32, !dbg !1944
  %arrayidx13.4 = getelementptr inbounds i8, ptr %add.ptr56.3, i64 3, !dbg !1945
  %35 = load i8, ptr %arrayidx13.4, align 1, !dbg !1945
  %conv14.4 = zext i8 %35 to i32, !dbg !1945
  %add15.4 = add nuw nsw i32 %conv14.4, %conv12.4, !dbg !1946
  %sub20.4 = sub nsw i32 %conv12.4, %conv14.4, !dbg !1947
  %shl21.4 = shl nsw i32 %sub20.4, 16, !dbg !1948
  %add22.4 = or disjoint i32 %shl21.4, %add15.4, !dbg !1949
    #dbg_value(i32 %add22.4, !1903, !DIExpression(), !1934)
  %add23.4 = add nsw i32 %add22.4, %add10.4, !dbg !1950
  store i32 %add23.4, ptr %add.ptr3.4, align 16, !dbg !1951
  %sub25.4 = sub nsw i32 %add10.4, %add22.4, !dbg !1952
  %arrayidx26.4 = getelementptr inbounds i8, ptr %tmp, i64 80, !dbg !1953
  store i32 %sub25.4, ptr %arrayidx26.4, align 16, !dbg !1954
  %arrayidx27.4 = getelementptr inbounds i8, ptr %add.ptr56.3, i64 4, !dbg !1955
  %36 = load i8, ptr %arrayidx27.4, align 1, !dbg !1955
  %conv28.4 = zext i8 %36 to i32, !dbg !1955
  %arrayidx29.4 = getelementptr inbounds i8, ptr %add.ptr56.3, i64 5, !dbg !1956
  %37 = load i8, ptr %arrayidx29.4, align 1, !dbg !1956
  %conv30.4 = zext i8 %37 to i32, !dbg !1956
  %add31.4 = add nuw nsw i32 %conv30.4, %conv28.4, !dbg !1957
  %sub36.4 = sub nsw i32 %conv28.4, %conv30.4, !dbg !1958
  %shl37.4 = shl nsw i32 %sub36.4, 16, !dbg !1959
  %add38.4 = or disjoint i32 %shl37.4, %add31.4, !dbg !1960
    #dbg_value(i32 %add38.4, !1904, !DIExpression(), !1934)
  %arrayidx39.4 = getelementptr inbounds i8, ptr %add.ptr56.3, i64 6, !dbg !1961
  %38 = load i8, ptr %arrayidx39.4, align 1, !dbg !1961
  %conv40.4 = zext i8 %38 to i32, !dbg !1961
  %arrayidx41.4 = getelementptr inbounds i8, ptr %add.ptr56.3, i64 7, !dbg !1962
  %39 = load i8, ptr %arrayidx41.4, align 1, !dbg !1962
  %conv42.4 = zext i8 %39 to i32, !dbg !1962
  %add43.4 = add nuw nsw i32 %conv42.4, %conv40.4, !dbg !1963
  %sub48.4 = sub nsw i32 %conv40.4, %conv42.4, !dbg !1964
  %shl49.4 = shl nsw i32 %sub48.4, 16, !dbg !1965
  %add50.4 = or disjoint i32 %shl49.4, %add43.4, !dbg !1966
    #dbg_value(i32 %add50.4, !1905, !DIExpression(), !1934)
  %add51.4 = add nsw i32 %add50.4, %add38.4, !dbg !1967
  %arrayidx52.4 = getelementptr inbounds i8, ptr %tmp, i64 96, !dbg !1968
  store i32 %add51.4, ptr %arrayidx52.4, align 16, !dbg !1969
  %sub53.4 = sub nsw i32 %add38.4, %add50.4, !dbg !1970
  %arrayidx54.4 = getelementptr inbounds i8, ptr %tmp, i64 112, !dbg !1971
  store i32 %sub53.4, ptr %arrayidx54.4, align 16, !dbg !1972
    #dbg_value(i32 5, !1909, !DIExpression(), !1936)
  %add.ptr56.4 = getelementptr inbounds i8, ptr %add.ptr56.3, i64 %idx.ext55, !dbg !1973
    #dbg_value(ptr %add.ptr56.4, !1896, !DIExpression(), !1934)
  %add.ptr3.5 = getelementptr inbounds i8, ptr %tmp, i64 68, !dbg !1975
    #dbg_value(ptr %add.ptr3.5, !1911, !DIExpression(), !1937)
  %40 = load i8, ptr %add.ptr56.4, align 1, !dbg !1938
  %conv.5 = zext i8 %40 to i32, !dbg !1938
  %arrayidx4.5 = getelementptr inbounds i8, ptr %add.ptr56.4, i64 1, !dbg !1939
  %41 = load i8, ptr %arrayidx4.5, align 1, !dbg !1939
  %conv5.5 = zext i8 %41 to i32, !dbg !1939
  %add.5 = add nuw nsw i32 %conv5.5, %conv.5, !dbg !1940
  %sub.5 = sub nsw i32 %conv.5, %conv5.5, !dbg !1941
  %shl.5 = shl nsw i32 %sub.5, 16, !dbg !1942
  %add10.5 = or disjoint i32 %shl.5, %add.5, !dbg !1943
    #dbg_value(i32 %add10.5, !1902, !DIExpression(), !1934)
  %arrayidx11.5 = getelementptr inbounds i8, ptr %add.ptr56.4, i64 2, !dbg !1944
  %42 = load i8, ptr %arrayidx11.5, align 1, !dbg !1944
  %conv12.5 = zext i8 %42 to i32, !dbg !1944
  %arrayidx13.5 = getelementptr inbounds i8, ptr %add.ptr56.4, i64 3, !dbg !1945
  %43 = load i8, ptr %arrayidx13.5, align 1, !dbg !1945
  %conv14.5 = zext i8 %43 to i32, !dbg !1945
  %add15.5 = add nuw nsw i32 %conv14.5, %conv12.5, !dbg !1946
  %sub20.5 = sub nsw i32 %conv12.5, %conv14.5, !dbg !1947
  %shl21.5 = shl nsw i32 %sub20.5, 16, !dbg !1948
  %add22.5 = or disjoint i32 %shl21.5, %add15.5, !dbg !1949
    #dbg_value(i32 %add22.5, !1903, !DIExpression(), !1934)
  %add23.5 = add nsw i32 %add22.5, %add10.5, !dbg !1950
  store i32 %add23.5, ptr %add.ptr3.5, align 4, !dbg !1951
  %sub25.5 = sub nsw i32 %add10.5, %add22.5, !dbg !1952
  %arrayidx26.5 = getelementptr inbounds i8, ptr %tmp, i64 84, !dbg !1953
  store i32 %sub25.5, ptr %arrayidx26.5, align 4, !dbg !1954
  %arrayidx27.5 = getelementptr inbounds i8, ptr %add.ptr56.4, i64 4, !dbg !1955
  %44 = load i8, ptr %arrayidx27.5, align 1, !dbg !1955
  %conv28.5 = zext i8 %44 to i32, !dbg !1955
  %arrayidx29.5 = getelementptr inbounds i8, ptr %add.ptr56.4, i64 5, !dbg !1956
  %45 = load i8, ptr %arrayidx29.5, align 1, !dbg !1956
  %conv30.5 = zext i8 %45 to i32, !dbg !1956
  %add31.5 = add nuw nsw i32 %conv30.5, %conv28.5, !dbg !1957
  %sub36.5 = sub nsw i32 %conv28.5, %conv30.5, !dbg !1958
  %shl37.5 = shl nsw i32 %sub36.5, 16, !dbg !1959
  %add38.5 = or disjoint i32 %shl37.5, %add31.5, !dbg !1960
    #dbg_value(i32 %add38.5, !1904, !DIExpression(), !1934)
  %arrayidx39.5 = getelementptr inbounds i8, ptr %add.ptr56.4, i64 6, !dbg !1961
  %46 = load i8, ptr %arrayidx39.5, align 1, !dbg !1961
  %conv40.5 = zext i8 %46 to i32, !dbg !1961
  %arrayidx41.5 = getelementptr inbounds i8, ptr %add.ptr56.4, i64 7, !dbg !1962
  %47 = load i8, ptr %arrayidx41.5, align 1, !dbg !1962
  %conv42.5 = zext i8 %47 to i32, !dbg !1962
  %add43.5 = add nuw nsw i32 %conv42.5, %conv40.5, !dbg !1963
  %sub48.5 = sub nsw i32 %conv40.5, %conv42.5, !dbg !1964
  %shl49.5 = shl nsw i32 %sub48.5, 16, !dbg !1965
  %add50.5 = or disjoint i32 %shl49.5, %add43.5, !dbg !1966
    #dbg_value(i32 %add50.5, !1905, !DIExpression(), !1934)
  %add51.5 = add nsw i32 %add50.5, %add38.5, !dbg !1967
  %arrayidx52.5 = getelementptr inbounds i8, ptr %tmp, i64 100, !dbg !1968
  store i32 %add51.5, ptr %arrayidx52.5, align 4, !dbg !1969
  %sub53.5 = sub nsw i32 %add38.5, %add50.5, !dbg !1970
  %arrayidx54.5 = getelementptr inbounds i8, ptr %tmp, i64 116, !dbg !1971
  store i32 %sub53.5, ptr %arrayidx54.5, align 4, !dbg !1972
    #dbg_value(i32 6, !1909, !DIExpression(), !1936)
  %add.ptr56.5 = getelementptr inbounds i8, ptr %add.ptr56.4, i64 %idx.ext55, !dbg !1973
    #dbg_value(ptr %add.ptr56.5, !1896, !DIExpression(), !1934)
  %add.ptr3.6 = getelementptr inbounds i8, ptr %tmp, i64 72, !dbg !1975
    #dbg_value(ptr %add.ptr3.6, !1911, !DIExpression(), !1937)
  %48 = load i8, ptr %add.ptr56.5, align 1, !dbg !1938
  %conv.6 = zext i8 %48 to i32, !dbg !1938
  %arrayidx4.6 = getelementptr inbounds i8, ptr %add.ptr56.5, i64 1, !dbg !1939
  %49 = load i8, ptr %arrayidx4.6, align 1, !dbg !1939
  %conv5.6 = zext i8 %49 to i32, !dbg !1939
  %add.6 = add nuw nsw i32 %conv5.6, %conv.6, !dbg !1940
  %sub.6 = sub nsw i32 %conv.6, %conv5.6, !dbg !1941
  %shl.6 = shl nsw i32 %sub.6, 16, !dbg !1942
  %add10.6 = or disjoint i32 %shl.6, %add.6, !dbg !1943
    #dbg_value(i32 %add10.6, !1902, !DIExpression(), !1934)
  %arrayidx11.6 = getelementptr inbounds i8, ptr %add.ptr56.5, i64 2, !dbg !1944
  %50 = load i8, ptr %arrayidx11.6, align 1, !dbg !1944
  %conv12.6 = zext i8 %50 to i32, !dbg !1944
  %arrayidx13.6 = getelementptr inbounds i8, ptr %add.ptr56.5, i64 3, !dbg !1945
  %51 = load i8, ptr %arrayidx13.6, align 1, !dbg !1945
  %conv14.6 = zext i8 %51 to i32, !dbg !1945
  %add15.6 = add nuw nsw i32 %conv14.6, %conv12.6, !dbg !1946
  %sub20.6 = sub nsw i32 %conv12.6, %conv14.6, !dbg !1947
  %shl21.6 = shl nsw i32 %sub20.6, 16, !dbg !1948
  %add22.6 = or disjoint i32 %shl21.6, %add15.6, !dbg !1949
    #dbg_value(i32 %add22.6, !1903, !DIExpression(), !1934)
  %add23.6 = add nsw i32 %add22.6, %add10.6, !dbg !1950
  store i32 %add23.6, ptr %add.ptr3.6, align 8, !dbg !1951
  %sub25.6 = sub nsw i32 %add10.6, %add22.6, !dbg !1952
  %arrayidx26.6 = getelementptr inbounds i8, ptr %tmp, i64 88, !dbg !1953
  store i32 %sub25.6, ptr %arrayidx26.6, align 8, !dbg !1954
  %arrayidx27.6 = getelementptr inbounds i8, ptr %add.ptr56.5, i64 4, !dbg !1955
  %52 = load i8, ptr %arrayidx27.6, align 1, !dbg !1955
  %conv28.6 = zext i8 %52 to i32, !dbg !1955
  %arrayidx29.6 = getelementptr inbounds i8, ptr %add.ptr56.5, i64 5, !dbg !1956
  %53 = load i8, ptr %arrayidx29.6, align 1, !dbg !1956
  %conv30.6 = zext i8 %53 to i32, !dbg !1956
  %add31.6 = add nuw nsw i32 %conv30.6, %conv28.6, !dbg !1957
  %sub36.6 = sub nsw i32 %conv28.6, %conv30.6, !dbg !1958
  %shl37.6 = shl nsw i32 %sub36.6, 16, !dbg !1959
  %add38.6 = or disjoint i32 %shl37.6, %add31.6, !dbg !1960
    #dbg_value(i32 %add38.6, !1904, !DIExpression(), !1934)
  %arrayidx39.6 = getelementptr inbounds i8, ptr %add.ptr56.5, i64 6, !dbg !1961
  %54 = load i8, ptr %arrayidx39.6, align 1, !dbg !1961
  %conv40.6 = zext i8 %54 to i32, !dbg !1961
  %arrayidx41.6 = getelementptr inbounds i8, ptr %add.ptr56.5, i64 7, !dbg !1962
  %55 = load i8, ptr %arrayidx41.6, align 1, !dbg !1962
  %conv42.6 = zext i8 %55 to i32, !dbg !1962
  %add43.6 = add nuw nsw i32 %conv42.6, %conv40.6, !dbg !1963
  %sub48.6 = sub nsw i32 %conv40.6, %conv42.6, !dbg !1964
  %shl49.6 = shl nsw i32 %sub48.6, 16, !dbg !1965
  %add50.6 = or disjoint i32 %shl49.6, %add43.6, !dbg !1966
    #dbg_value(i32 %add50.6, !1905, !DIExpression(), !1934)
  %add51.6 = add nsw i32 %add50.6, %add38.6, !dbg !1967
  %arrayidx52.6 = getelementptr inbounds i8, ptr %tmp, i64 104, !dbg !1968
  store i32 %add51.6, ptr %arrayidx52.6, align 8, !dbg !1969
  %sub53.6 = sub nsw i32 %add38.6, %add50.6, !dbg !1970
  %arrayidx54.6 = getelementptr inbounds i8, ptr %tmp, i64 120, !dbg !1971
  store i32 %sub53.6, ptr %arrayidx54.6, align 8, !dbg !1972
    #dbg_value(i32 7, !1909, !DIExpression(), !1936)
  %add.ptr56.6 = getelementptr inbounds i8, ptr %add.ptr56.5, i64 %idx.ext55, !dbg !1973
    #dbg_value(ptr %add.ptr56.6, !1896, !DIExpression(), !1934)
  %add.ptr3.7 = getelementptr inbounds i8, ptr %tmp, i64 76, !dbg !1975
    #dbg_value(ptr %add.ptr3.7, !1911, !DIExpression(), !1937)
  %56 = load i8, ptr %add.ptr56.6, align 1, !dbg !1938
  %conv.7 = zext i8 %56 to i32, !dbg !1938
  %arrayidx4.7 = getelementptr inbounds i8, ptr %add.ptr56.6, i64 1, !dbg !1939
  %57 = load i8, ptr %arrayidx4.7, align 1, !dbg !1939
  %conv5.7 = zext i8 %57 to i32, !dbg !1939
  %add.7 = add nuw nsw i32 %conv5.7, %conv.7, !dbg !1940
  %sub.7 = sub nsw i32 %conv.7, %conv5.7, !dbg !1941
  %shl.7 = shl nsw i32 %sub.7, 16, !dbg !1942
  %add10.7 = or disjoint i32 %shl.7, %add.7, !dbg !1943
    #dbg_value(i32 %add10.7, !1902, !DIExpression(), !1934)
  %arrayidx11.7 = getelementptr inbounds i8, ptr %add.ptr56.6, i64 2, !dbg !1944
  %58 = load i8, ptr %arrayidx11.7, align 1, !dbg !1944
  %conv12.7 = zext i8 %58 to i32, !dbg !1944
  %arrayidx13.7 = getelementptr inbounds i8, ptr %add.ptr56.6, i64 3, !dbg !1945
  %59 = load i8, ptr %arrayidx13.7, align 1, !dbg !1945
  %conv14.7 = zext i8 %59 to i32, !dbg !1945
  %add15.7 = add nuw nsw i32 %conv14.7, %conv12.7, !dbg !1946
  %sub20.7 = sub nsw i32 %conv12.7, %conv14.7, !dbg !1947
  %shl21.7 = shl nsw i32 %sub20.7, 16, !dbg !1948
  %add22.7 = or disjoint i32 %shl21.7, %add15.7, !dbg !1949
    #dbg_value(i32 %add22.7, !1903, !DIExpression(), !1934)
  %add23.7 = add nsw i32 %add22.7, %add10.7, !dbg !1950
  store i32 %add23.7, ptr %add.ptr3.7, align 4, !dbg !1951
  %sub25.7 = sub nsw i32 %add10.7, %add22.7, !dbg !1952
  %arrayidx26.7 = getelementptr inbounds i8, ptr %tmp, i64 92, !dbg !1953
  store i32 %sub25.7, ptr %arrayidx26.7, align 4, !dbg !1954
  %arrayidx27.7 = getelementptr inbounds i8, ptr %add.ptr56.6, i64 4, !dbg !1955
  %60 = load i8, ptr %arrayidx27.7, align 1, !dbg !1955
  %conv28.7 = zext i8 %60 to i32, !dbg !1955
  %arrayidx29.7 = getelementptr inbounds i8, ptr %add.ptr56.6, i64 5, !dbg !1956
  %61 = load i8, ptr %arrayidx29.7, align 1, !dbg !1956
  %conv30.7 = zext i8 %61 to i32, !dbg !1956
  %add31.7 = add nuw nsw i32 %conv30.7, %conv28.7, !dbg !1957
  %sub36.7 = sub nsw i32 %conv28.7, %conv30.7, !dbg !1958
  %shl37.7 = shl nsw i32 %sub36.7, 16, !dbg !1959
  %add38.7 = or disjoint i32 %shl37.7, %add31.7, !dbg !1960
    #dbg_value(i32 %add38.7, !1904, !DIExpression(), !1934)
  %arrayidx39.7 = getelementptr inbounds i8, ptr %add.ptr56.6, i64 6, !dbg !1961
  %62 = load i8, ptr %arrayidx39.7, align 1, !dbg !1961
  %conv40.7 = zext i8 %62 to i32, !dbg !1961
  %arrayidx41.7 = getelementptr inbounds i8, ptr %add.ptr56.6, i64 7, !dbg !1962
  %63 = load i8, ptr %arrayidx41.7, align 1, !dbg !1962
  %conv42.7 = zext i8 %63 to i32, !dbg !1962
  %add43.7 = add nuw nsw i32 %conv42.7, %conv40.7, !dbg !1963
  %sub48.7 = sub nsw i32 %conv40.7, %conv42.7, !dbg !1964
  %shl49.7 = shl nsw i32 %sub48.7, 16, !dbg !1965
  %add50.7 = or disjoint i32 %shl49.7, %add43.7, !dbg !1966
    #dbg_value(i32 %add50.7, !1905, !DIExpression(), !1934)
  %add51.7 = add nsw i32 %add50.7, %add38.7, !dbg !1967
  %arrayidx52.7 = getelementptr inbounds i8, ptr %tmp, i64 108, !dbg !1968
  store i32 %add51.7, ptr %arrayidx52.7, align 4, !dbg !1969
  %sub53.7 = sub nsw i32 %add38.7, %add50.7, !dbg !1970
  %arrayidx54.7 = getelementptr inbounds i8, ptr %tmp, i64 124, !dbg !1971
  store i32 %sub53.7, ptr %arrayidx54.7, align 4, !dbg !1972
    #dbg_value(i32 8, !1909, !DIExpression(), !1936)
    #dbg_value(!DIArgList(ptr %add.ptr56.6, i64 %idx.ext55), !1896, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1934)
  br label %vector.body, !dbg !1976

vector.body:                                      ; preds = %pred.store.continue370, %entry
  %index = phi i64 [ 0, %entry ], [ %index.next, %pred.store.continue370 ], !dbg !1977
  %64 = phi <4 x i32> [ zeroinitializer, %entry ], [ %193, %pred.store.continue370 ]
  %65 = insertelement <4 x i64> poison, i64 %index, i64 0
  %66 = icmp ult <4 x i64> %65, <i64 8, i64 8, i64 8, i64 8>
  %67 = shl nuw nsw i64 %index, 2, !dbg !1978
  %68 = shl i64 %index, 2, !dbg !1978
  %69 = or disjoint i64 %68, 4, !dbg !1978
  %70 = shl i64 %index, 2, !dbg !1978
  %71 = or disjoint i64 %70, 8, !dbg !1978
  %72 = shl i64 %index, 2, !dbg !1978
  %73 = or disjoint i64 %72, 12, !dbg !1978
  %74 = getelementptr inbounds [32 x i32], ptr %tmp, i64 0, i64 %67, !dbg !1978
  %75 = getelementptr inbounds [32 x i32], ptr %tmp, i64 0, i64 %69, !dbg !1978
  %76 = getelementptr inbounds [32 x i32], ptr %tmp, i64 0, i64 %71, !dbg !1978
  %77 = getelementptr inbounds [32 x i32], ptr %tmp, i64 0, i64 %73, !dbg !1978
  %78 = extractelement <4 x i1> %66, i64 0, !dbg !1976
  br i1 %78, label %pred.load.if, label %pred.load.continue, !dbg !1976

pred.load.if:                                     ; preds = %vector.body
  %79 = load i32, ptr %74, align 16, !dbg !1978
  br label %pred.load.continue, !dbg !1978

pred.load.continue:                               ; preds = %pred.load.if, %vector.body
  %80 = phi i32 [ poison, %vector.body ], [ %79, %pred.load.if ], !dbg !1978
  %81 = extractelement <4 x i1> %66, i64 0, !dbg !1978
  br i1 %81, label %pred.load.if335, label %pred.load.continue336, !dbg !1978

pred.load.if335:                                  ; preds = %pred.load.continue
  %82 = load i32, ptr %75, align 16, !dbg !1978
  br label %pred.load.continue336, !dbg !1978

pred.load.continue336:                            ; preds = %pred.load.if335, %pred.load.continue
  %83 = phi i32 [ poison, %pred.load.continue ], [ %82, %pred.load.if335 ], !dbg !1978
  %84 = extractelement <4 x i1> %66, i64 0, !dbg !1978
  br i1 %84, label %pred.load.if337, label %pred.load.continue338, !dbg !1978

pred.load.if337:                                  ; preds = %pred.load.continue336
  %85 = load i32, ptr %76, align 16, !dbg !1978
  br label %pred.load.continue338, !dbg !1978

pred.load.continue338:                            ; preds = %pred.load.if337, %pred.load.continue336
  %86 = phi i32 [ poison, %pred.load.continue336 ], [ %85, %pred.load.if337 ], !dbg !1978
  %87 = extractelement <4 x i1> %66, i64 0, !dbg !1978
  br i1 %87, label %pred.load.if339, label %pred.load.continue340, !dbg !1978

pred.load.if339:                                  ; preds = %pred.load.continue338
  %88 = load i32, ptr %77, align 16, !dbg !1978
  br label %pred.load.continue340, !dbg !1978

pred.load.continue340:                            ; preds = %pred.load.if339, %pred.load.continue338
  %89 = phi i32 [ poison, %pred.load.continue338 ], [ %88, %pred.load.if339 ], !dbg !1978
  %90 = or disjoint i64 %68, 5, !dbg !1978
  %91 = or disjoint i64 %70, 9, !dbg !1978
  %92 = or disjoint i64 %72, 13, !dbg !1978
  %93 = getelementptr inbounds [32 x i32], ptr %tmp, i64 0, i64 %90, !dbg !1978
  %94 = getelementptr inbounds [32 x i32], ptr %tmp, i64 0, i64 %91, !dbg !1978
  %95 = getelementptr inbounds [32 x i32], ptr %tmp, i64 0, i64 %92, !dbg !1978
  br i1 %78, label %pred.load.if341, label %pred.load.continue342, !dbg !1978

pred.load.if341:                                  ; preds = %pred.load.continue340
  %96 = or disjoint i64 %67, 1, !dbg !1978
  %97 = getelementptr inbounds [32 x i32], ptr %tmp, i64 0, i64 %96, !dbg !1978
  %98 = load i32, ptr %97, align 4, !dbg !1978
  br label %pred.load.continue342, !dbg !1978

pred.load.continue342:                            ; preds = %pred.load.if341, %pred.load.continue340
  %99 = phi i32 [ poison, %pred.load.continue340 ], [ %98, %pred.load.if341 ], !dbg !1978
  br i1 %81, label %pred.load.if343, label %pred.load.continue344, !dbg !1978

pred.load.if343:                                  ; preds = %pred.load.continue342
  %100 = load i32, ptr %93, align 4, !dbg !1978
  br label %pred.load.continue344, !dbg !1978

pred.load.continue344:                            ; preds = %pred.load.if343, %pred.load.continue342
  %101 = phi i32 [ poison, %pred.load.continue342 ], [ %100, %pred.load.if343 ], !dbg !1978
  br i1 %84, label %pred.load.if345, label %pred.load.continue346, !dbg !1978

pred.load.if345:                                  ; preds = %pred.load.continue344
  %102 = load i32, ptr %94, align 4, !dbg !1978
  br label %pred.load.continue346, !dbg !1978

pred.load.continue346:                            ; preds = %pred.load.if345, %pred.load.continue344
  %103 = phi i32 [ poison, %pred.load.continue344 ], [ %102, %pred.load.if345 ], !dbg !1978
  br i1 %87, label %pred.load.if347, label %pred.load.continue348, !dbg !1978

pred.load.if347:                                  ; preds = %pred.load.continue346
  %104 = load i32, ptr %95, align 4, !dbg !1978
  br label %pred.load.continue348, !dbg !1978

pred.load.continue348:                            ; preds = %pred.load.if347, %pred.load.continue346
  %105 = phi i32 [ poison, %pred.load.continue346 ], [ %104, %pred.load.if347 ], !dbg !1978
  %106 = insertelement <4 x i32> poison, i32 %101, i64 0, !dbg !1978
  %107 = insertelement <4 x i32> %106, i32 %99, i64 1, !dbg !1978
  %108 = insertelement <4 x i32> %107, i32 %103, i64 2, !dbg !1978
  %109 = insertelement <4 x i32> %108, i32 %105, i64 3, !dbg !1978
  %110 = insertelement <4 x i32> poison, i32 %83, i64 0, !dbg !1978
  %111 = insertelement <4 x i32> %110, i32 %80, i64 1, !dbg !1978
  %112 = insertelement <4 x i32> %111, i32 %86, i64 2, !dbg !1978
  %113 = insertelement <4 x i32> %112, i32 %89, i64 3, !dbg !1978
  %114 = add <4 x i32> %109, %113, !dbg !1978
  %115 = sub <4 x i32> %113, %109, !dbg !1978
  %116 = or disjoint i64 %67, 2, !dbg !1978
  %117 = or disjoint i64 %68, 6, !dbg !1978
  %118 = or disjoint i64 %70, 10, !dbg !1978
  %119 = or disjoint i64 %72, 14, !dbg !1978
  %120 = getelementptr inbounds [32 x i32], ptr %tmp, i64 0, i64 %116, !dbg !1978
  %121 = getelementptr inbounds [32 x i32], ptr %tmp, i64 0, i64 %117, !dbg !1978
  %122 = getelementptr inbounds [32 x i32], ptr %tmp, i64 0, i64 %118, !dbg !1978
  %123 = getelementptr inbounds [32 x i32], ptr %tmp, i64 0, i64 %119, !dbg !1978
  br i1 %78, label %pred.load.if349, label %pred.load.continue350, !dbg !1978

pred.load.if349:                                  ; preds = %pred.load.continue348
  %124 = load i32, ptr %120, align 8, !dbg !1978
  br label %pred.load.continue350, !dbg !1978

pred.load.continue350:                            ; preds = %pred.load.if349, %pred.load.continue348
  %125 = phi i32 [ poison, %pred.load.continue348 ], [ %124, %pred.load.if349 ], !dbg !1978
  br i1 %81, label %pred.load.if351, label %pred.load.continue352, !dbg !1978

pred.load.if351:                                  ; preds = %pred.load.continue350
  %126 = load i32, ptr %121, align 8, !dbg !1978
  br label %pred.load.continue352, !dbg !1978

pred.load.continue352:                            ; preds = %pred.load.if351, %pred.load.continue350
  %127 = phi i32 [ poison, %pred.load.continue350 ], [ %126, %pred.load.if351 ], !dbg !1978
  br i1 %84, label %pred.load.if353, label %pred.load.continue354, !dbg !1978

pred.load.if353:                                  ; preds = %pred.load.continue352
  %128 = load i32, ptr %122, align 8, !dbg !1978
  br label %pred.load.continue354, !dbg !1978

pred.load.continue354:                            ; preds = %pred.load.if353, %pred.load.continue352
  %129 = phi i32 [ poison, %pred.load.continue352 ], [ %128, %pred.load.if353 ], !dbg !1978
  br i1 %87, label %pred.load.if355, label %pred.load.continue356, !dbg !1978

pred.load.if355:                                  ; preds = %pred.load.continue354
  %130 = load i32, ptr %123, align 8, !dbg !1978
  br label %pred.load.continue356, !dbg !1978

pred.load.continue356:                            ; preds = %pred.load.if355, %pred.load.continue354
  %131 = phi i32 [ poison, %pred.load.continue354 ], [ %130, %pred.load.if355 ], !dbg !1978
  %132 = or disjoint i64 %68, 7, !dbg !1978
  %133 = or disjoint i64 %70, 11, !dbg !1978
  %134 = or disjoint i64 %72, 15, !dbg !1978
  %135 = getelementptr inbounds [32 x i32], ptr %tmp, i64 0, i64 %132, !dbg !1978
  %136 = getelementptr inbounds [32 x i32], ptr %tmp, i64 0, i64 %133, !dbg !1978
  %137 = getelementptr inbounds [32 x i32], ptr %tmp, i64 0, i64 %134, !dbg !1978
  br i1 %78, label %pred.load.if357, label %pred.load.continue358, !dbg !1978

pred.load.if357:                                  ; preds = %pred.load.continue356
  %138 = or disjoint i64 %67, 3, !dbg !1978
  %139 = getelementptr inbounds [32 x i32], ptr %tmp, i64 0, i64 %138, !dbg !1978
  %140 = load i32, ptr %139, align 4, !dbg !1978
  br label %pred.load.continue358, !dbg !1978

pred.load.continue358:                            ; preds = %pred.load.if357, %pred.load.continue356
  %141 = phi i32 [ poison, %pred.load.continue356 ], [ %140, %pred.load.if357 ], !dbg !1978
  br i1 %81, label %pred.load.if359, label %pred.load.continue360, !dbg !1978

pred.load.if359:                                  ; preds = %pred.load.continue358
  %142 = load i32, ptr %135, align 4, !dbg !1978
  br label %pred.load.continue360, !dbg !1978

pred.load.continue360:                            ; preds = %pred.load.if359, %pred.load.continue358
  %143 = phi i32 [ poison, %pred.load.continue358 ], [ %142, %pred.load.if359 ], !dbg !1978
  br i1 %84, label %pred.load.if361, label %pred.load.continue362, !dbg !1978

pred.load.if361:                                  ; preds = %pred.load.continue360
  %144 = load i32, ptr %136, align 4, !dbg !1978
  br label %pred.load.continue362, !dbg !1978

pred.load.continue362:                            ; preds = %pred.load.if361, %pred.load.continue360
  %145 = phi i32 [ poison, %pred.load.continue360 ], [ %144, %pred.load.if361 ], !dbg !1978
  br i1 %87, label %pred.load.if363, label %pred.load.continue364, !dbg !1978

pred.load.if363:                                  ; preds = %pred.load.continue362
  %146 = load i32, ptr %137, align 4, !dbg !1978
  br label %pred.load.continue364, !dbg !1978

pred.load.continue364:                            ; preds = %pred.load.if363, %pred.load.continue362
  %147 = phi i32 [ poison, %pred.load.continue362 ], [ %146, %pred.load.if363 ], !dbg !1978
  %148 = insertelement <4 x i32> poison, i32 %143, i64 0, !dbg !1978
  %149 = insertelement <4 x i32> %148, i32 %141, i64 1, !dbg !1978
  %150 = insertelement <4 x i32> %149, i32 %145, i64 2, !dbg !1978
  %151 = insertelement <4 x i32> %150, i32 %147, i64 3, !dbg !1978
  %152 = insertelement <4 x i32> poison, i32 %127, i64 0, !dbg !1978
  %153 = insertelement <4 x i32> %152, i32 %125, i64 1, !dbg !1978
  %154 = insertelement <4 x i32> %153, i32 %129, i64 2, !dbg !1978
  %155 = insertelement <4 x i32> %154, i32 %131, i64 3, !dbg !1978
  %156 = add <4 x i32> %151, %155, !dbg !1978
  %157 = sub <4 x i32> %155, %151, !dbg !1978
  %158 = add nsw <4 x i32> %156, %114, !dbg !1978
  %159 = sub nsw <4 x i32> %114, %156, !dbg !1978
  %160 = add nsw <4 x i32> %157, %115, !dbg !1978
  %161 = sub nsw <4 x i32> %115, %157, !dbg !1978
  br i1 %78, label %pred.store.if, label %pred.store.continue, !dbg !1978

pred.store.if:                                    ; preds = %pred.load.continue364
  %162 = shufflevector <4 x i32> %158, <4 x i32> %160, <2 x i32> <i32 1, i32 5>, !dbg !1979
  store <2 x i32> %162, ptr %74, align 16, !dbg !1979
  %163 = shufflevector <4 x i32> %159, <4 x i32> %161, <2 x i32> <i32 1, i32 5>, !dbg !1980
  store <2 x i32> %163, ptr %120, align 8, !dbg !1980
  br label %pred.store.continue, !dbg !1978

pred.store.continue:                              ; preds = %pred.store.if, %pred.load.continue364
  br i1 %81, label %pred.store.if365, label %pred.store.continue366, !dbg !1981

pred.store.if365:                                 ; preds = %pred.store.continue
  %164 = shufflevector <4 x i32> %158, <4 x i32> %160, <2 x i32> <i32 0, i32 4>, !dbg !1979
  store <2 x i32> %164, ptr %75, align 16, !dbg !1979
  %165 = shufflevector <4 x i32> %159, <4 x i32> %161, <2 x i32> <i32 0, i32 4>, !dbg !1980
  store <2 x i32> %165, ptr %121, align 8, !dbg !1980
  br label %pred.store.continue366, !dbg !1981

pred.store.continue366:                           ; preds = %pred.store.if365, %pred.store.continue
  br i1 %84, label %pred.store.if367, label %pred.store.continue368, !dbg !1981

pred.store.if367:                                 ; preds = %pred.store.continue366
  %166 = shufflevector <4 x i32> %158, <4 x i32> %160, <2 x i32> <i32 2, i32 6>, !dbg !1979
  store <2 x i32> %166, ptr %76, align 16, !dbg !1979
  %167 = shufflevector <4 x i32> %159, <4 x i32> %161, <2 x i32> <i32 2, i32 6>, !dbg !1980
  store <2 x i32> %167, ptr %122, align 8, !dbg !1980
  br label %pred.store.continue368, !dbg !1981

pred.store.continue368:                           ; preds = %pred.store.if367, %pred.store.continue366
  br i1 %87, label %pred.store.if369, label %pred.store.continue370, !dbg !1981

pred.store.if369:                                 ; preds = %pred.store.continue368
  %168 = shufflevector <4 x i32> %158, <4 x i32> %160, <2 x i32> <i32 3, i32 7>, !dbg !1979
  store <2 x i32> %168, ptr %77, align 16, !dbg !1979
  %169 = shufflevector <4 x i32> %159, <4 x i32> %161, <2 x i32> <i32 3, i32 7>, !dbg !1980
  store <2 x i32> %169, ptr %123, align 8, !dbg !1980
  br label %pred.store.continue370, !dbg !1981

pred.store.continue370:                           ; preds = %pred.store.if369, %pred.store.continue368
  %170 = lshr <4 x i32> %158, <i32 15, i32 15, i32 15, i32 15>, !dbg !1982
  %171 = lshr <4 x i32> %160, <i32 15, i32 15, i32 15, i32 15>, !dbg !1984
  %172 = lshr <4 x i32> %159, <i32 15, i32 15, i32 15, i32 15>, !dbg !1986
  %173 = lshr <4 x i32> %161, <i32 15, i32 15, i32 15, i32 15>, !dbg !1988
  %174 = and <4 x i32> %170, <i32 65537, i32 65537, i32 65537, i32 65537>, !dbg !1990
  %175 = mul nuw <4 x i32> %174, <i32 65535, i32 65535, i32 65535, i32 65535>, !dbg !1991
  %176 = add <4 x i32> %175, %158, !dbg !1992
  %177 = xor <4 x i32> %176, %175, !dbg !1993
  %178 = and <4 x i32> %171, <i32 65537, i32 65537, i32 65537, i32 65537>, !dbg !1994
  %179 = mul nuw <4 x i32> %178, <i32 65535, i32 65535, i32 65535, i32 65535>, !dbg !1995
  %180 = add <4 x i32> %179, %160, !dbg !1996
  %181 = xor <4 x i32> %180, %179, !dbg !1997
  %182 = and <4 x i32> %172, <i32 65537, i32 65537, i32 65537, i32 65537>, !dbg !1998
  %183 = mul nuw <4 x i32> %182, <i32 65535, i32 65535, i32 65535, i32 65535>, !dbg !1999
  %184 = add <4 x i32> %183, %159, !dbg !2000
  %185 = xor <4 x i32> %184, %183, !dbg !2001
  %186 = and <4 x i32> %173, <i32 65537, i32 65537, i32 65537, i32 65537>, !dbg !2002
  %187 = mul nuw <4 x i32> %186, <i32 65535, i32 65535, i32 65535, i32 65535>, !dbg !2003
  %188 = add <4 x i32> %187, %161, !dbg !2004
  %189 = xor <4 x i32> %188, %187, !dbg !2005
  %190 = add <4 x i32> %181, %64, !dbg !2006
  %191 = add <4 x i32> %190, %177, !dbg !2007
  %192 = add <4 x i32> %191, %185, !dbg !2008
  %193 = add <4 x i32> %192, %189, !dbg !2009
  %index.next = add i64 %index, 4, !dbg !1977
  %194 = icmp eq i64 %index.next, 8, !dbg !1977
  br i1 %194, label %middle.block, label %vector.body, !dbg !1977, !llvm.loop !2010

middle.block:                                     ; preds = %pred.store.continue370
  %195 = shufflevector <4 x i1> %66, <4 x i1> poison, <4 x i32> zeroinitializer
  %196 = select <4 x i1> %195, <4 x i32> %193, <4 x i32> %64
  %197 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %196), !dbg !1976
    #dbg_value(i64 0, !1924, !DIExpression(), !2012)
    #dbg_value(i32 0, !1908, !DIExpression(), !1934)
  %198 = load i32, ptr %tmp, align 16, !dbg !2013
  %199 = load i32, ptr %arrayidx52, align 16, !dbg !2013
  %add140 = add i32 %199, %198, !dbg !2013
    #dbg_value(i32 %add140, !1926, !DIExpression(), !2014)
  %sub147 = sub i32 %198, %199, !dbg !2013
    #dbg_value(i32 %sub147, !1930, !DIExpression(), !2014)
  %200 = load i32, ptr %add.ptr3.4, align 16, !dbg !2013
  %arrayidx154 = getelementptr inbounds i8, ptr %tmp, i64 96, !dbg !2013
  %201 = load i32, ptr %arrayidx154, align 16, !dbg !2013
  %add155 = add i32 %201, %200, !dbg !2013
    #dbg_value(i32 %add155, !1931, !DIExpression(), !2014)
  %sub163 = sub i32 %200, %201, !dbg !2013
    #dbg_value(i32 %sub163, !1932, !DIExpression(), !2014)
  %add164 = add nsw i32 %add155, %add140, !dbg !2013
    #dbg_value(i32 %add164, !1902, !DIExpression(), !1934)
  %sub165 = sub nsw i32 %add140, %add155, !dbg !2013
    #dbg_value(i32 %sub165, !1904, !DIExpression(), !1934)
  %add166 = add nsw i32 %sub163, %sub147, !dbg !2013
    #dbg_value(i32 %add166, !1903, !DIExpression(), !1934)
  %sub167 = sub nsw i32 %sub147, %sub163, !dbg !2013
    #dbg_value(i32 %sub167, !1905, !DIExpression(), !1934)
    #dbg_value(i32 %add164, !1105, !DIExpression(), !2015)
  %shr.i291 = lshr i32 %add164, 15, !dbg !2017
  %and.i292 = and i32 %shr.i291, 65537, !dbg !2018
  %mul.i293 = mul nuw i32 %and.i292, 65535, !dbg !2019
    #dbg_value(i32 %mul.i293, !1110, !DIExpression(), !2015)
  %add.i294 = add i32 %mul.i293, %add164, !dbg !2020
  %xor.i295 = xor i32 %add.i294, %mul.i293, !dbg !2021
    #dbg_value(i32 %add166, !1105, !DIExpression(), !2022)
  %shr.i296 = lshr i32 %add166, 15, !dbg !2024
  %and.i297 = and i32 %shr.i296, 65537, !dbg !2025
  %mul.i298 = mul nuw i32 %and.i297, 65535, !dbg !2026
    #dbg_value(i32 %mul.i298, !1110, !DIExpression(), !2022)
  %add.i299 = add i32 %mul.i298, %add166, !dbg !2027
  %xor.i300 = xor i32 %add.i299, %mul.i298, !dbg !2028
    #dbg_value(i32 %sub165, !1105, !DIExpression(), !2029)
  %shr.i301 = lshr i32 %sub165, 15, !dbg !2031
  %and.i302 = and i32 %shr.i301, 65537, !dbg !2032
  %mul.i303 = mul nuw i32 %and.i302, 65535, !dbg !2033
    #dbg_value(i32 %mul.i303, !1110, !DIExpression(), !2029)
  %add.i304 = add i32 %mul.i303, %sub165, !dbg !2034
  %xor.i305 = xor i32 %add.i304, %mul.i303, !dbg !2035
    #dbg_value(i32 %sub167, !1105, !DIExpression(), !2036)
  %shr.i306 = lshr i32 %sub167, 15, !dbg !2038
  %and.i307 = and i32 %shr.i306, 65537, !dbg !2039
  %mul.i308 = mul nuw i32 %and.i307, 65535, !dbg !2040
    #dbg_value(i32 %mul.i308, !1110, !DIExpression(), !2036)
  %add.i309 = add i32 %mul.i308, %sub167, !dbg !2041
  %xor.i310 = xor i32 %add.i309, %mul.i308, !dbg !2042
  %add172 = add i32 %xor.i300, %xor.i295, !dbg !2043
  %add174 = add i32 %add172, %xor.i305, !dbg !2044
  %add175 = add i32 %add174, %xor.i310, !dbg !2045
    #dbg_value(i32 %add175, !1908, !DIExpression(), !1934)
    #dbg_value(i64 1, !1924, !DIExpression(), !2012)
  %202 = load i32, ptr %add.ptr.1, align 4, !dbg !2013
  %arrayidx139.1 = getelementptr inbounds i8, ptr %tmp, i64 36, !dbg !2013
  %203 = load i32, ptr %arrayidx139.1, align 4, !dbg !2013
  %add140.1 = add i32 %203, %202, !dbg !2013
    #dbg_value(i32 %add140.1, !1926, !DIExpression(), !2014)
  %sub147.1 = sub i32 %202, %203, !dbg !2013
    #dbg_value(i32 %sub147.1, !1930, !DIExpression(), !2014)
  %arrayidx151.1 = getelementptr inbounds i8, ptr %tmp, i64 68, !dbg !2013
  %204 = load i32, ptr %arrayidx151.1, align 4, !dbg !2013
  %arrayidx154.1 = getelementptr inbounds i8, ptr %tmp, i64 100, !dbg !2013
  %205 = load i32, ptr %arrayidx154.1, align 4, !dbg !2013
  %add155.1 = add i32 %205, %204, !dbg !2013
    #dbg_value(i32 %add155.1, !1931, !DIExpression(), !2014)
  %sub163.1 = sub i32 %204, %205, !dbg !2013
    #dbg_value(i32 %sub163.1, !1932, !DIExpression(), !2014)
  %add164.1 = add nsw i32 %add155.1, %add140.1, !dbg !2013
    #dbg_value(i32 %add164.1, !1902, !DIExpression(), !1934)
  %sub165.1 = sub nsw i32 %add140.1, %add155.1, !dbg !2013
    #dbg_value(i32 %sub165.1, !1904, !DIExpression(), !1934)
  %add166.1 = add nsw i32 %sub163.1, %sub147.1, !dbg !2013
    #dbg_value(i32 %add166.1, !1903, !DIExpression(), !1934)
  %sub167.1 = sub nsw i32 %sub147.1, %sub163.1, !dbg !2013
    #dbg_value(i32 %sub167.1, !1905, !DIExpression(), !1934)
    #dbg_value(i32 %add164.1, !1105, !DIExpression(), !2015)
  %shr.i291.1 = lshr i32 %add164.1, 15, !dbg !2017
  %and.i292.1 = and i32 %shr.i291.1, 65537, !dbg !2018
  %mul.i293.1 = mul nuw i32 %and.i292.1, 65535, !dbg !2019
    #dbg_value(i32 %mul.i293.1, !1110, !DIExpression(), !2015)
  %add.i294.1 = add i32 %mul.i293.1, %add164.1, !dbg !2020
  %xor.i295.1 = xor i32 %add.i294.1, %mul.i293.1, !dbg !2021
    #dbg_value(i32 %add166.1, !1105, !DIExpression(), !2022)
  %shr.i296.1 = lshr i32 %add166.1, 15, !dbg !2024
  %and.i297.1 = and i32 %shr.i296.1, 65537, !dbg !2025
  %mul.i298.1 = mul nuw i32 %and.i297.1, 65535, !dbg !2026
    #dbg_value(i32 %mul.i298.1, !1110, !DIExpression(), !2022)
  %add.i299.1 = add i32 %mul.i298.1, %add166.1, !dbg !2027
  %xor.i300.1 = xor i32 %add.i299.1, %mul.i298.1, !dbg !2028
    #dbg_value(i32 %sub165.1, !1105, !DIExpression(), !2029)
  %shr.i301.1 = lshr i32 %sub165.1, 15, !dbg !2031
  %and.i302.1 = and i32 %shr.i301.1, 65537, !dbg !2032
  %mul.i303.1 = mul nuw i32 %and.i302.1, 65535, !dbg !2033
    #dbg_value(i32 %mul.i303.1, !1110, !DIExpression(), !2029)
  %add.i304.1 = add i32 %mul.i303.1, %sub165.1, !dbg !2034
  %xor.i305.1 = xor i32 %add.i304.1, %mul.i303.1, !dbg !2035
    #dbg_value(i32 %sub167.1, !1105, !DIExpression(), !2036)
  %shr.i306.1 = lshr i32 %sub167.1, 15, !dbg !2038
  %and.i307.1 = and i32 %shr.i306.1, 65537, !dbg !2039
  %mul.i308.1 = mul nuw i32 %and.i307.1, 65535, !dbg !2040
    #dbg_value(i32 %mul.i308.1, !1110, !DIExpression(), !2036)
  %add.i309.1 = add i32 %mul.i308.1, %sub167.1, !dbg !2041
  %xor.i310.1 = xor i32 %add.i309.1, %mul.i308.1, !dbg !2042
  %add170.1 = add i32 %xor.i300.1, %add175, !dbg !2046
  %add172.1 = add i32 %add170.1, %xor.i295.1, !dbg !2043
  %add174.1 = add i32 %add172.1, %xor.i305.1, !dbg !2044
  %add175.1 = add i32 %add174.1, %xor.i310.1, !dbg !2045
    #dbg_value(i32 %add175.1, !1908, !DIExpression(), !1934)
    #dbg_value(i64 2, !1924, !DIExpression(), !2012)
  %206 = load i32, ptr %add.ptr.2, align 8, !dbg !2013
  %arrayidx139.2 = getelementptr inbounds i8, ptr %tmp, i64 40, !dbg !2013
  %207 = load i32, ptr %arrayidx139.2, align 8, !dbg !2013
  %add140.2 = add i32 %207, %206, !dbg !2013
    #dbg_value(i32 %add140.2, !1926, !DIExpression(), !2014)
  %sub147.2 = sub i32 %206, %207, !dbg !2013
    #dbg_value(i32 %sub147.2, !1930, !DIExpression(), !2014)
  %arrayidx151.2 = getelementptr inbounds i8, ptr %tmp, i64 72, !dbg !2013
  %208 = load i32, ptr %arrayidx151.2, align 8, !dbg !2013
  %arrayidx154.2 = getelementptr inbounds i8, ptr %tmp, i64 104, !dbg !2013
  %209 = load i32, ptr %arrayidx154.2, align 8, !dbg !2013
  %add155.2 = add i32 %209, %208, !dbg !2013
    #dbg_value(i32 %add155.2, !1931, !DIExpression(), !2014)
  %sub163.2 = sub i32 %208, %209, !dbg !2013
    #dbg_value(i32 %sub163.2, !1932, !DIExpression(), !2014)
  %add164.2 = add nsw i32 %add155.2, %add140.2, !dbg !2013
    #dbg_value(i32 %add164.2, !1902, !DIExpression(), !1934)
  %sub165.2 = sub nsw i32 %add140.2, %add155.2, !dbg !2013
    #dbg_value(i32 %sub165.2, !1904, !DIExpression(), !1934)
  %add166.2 = add nsw i32 %sub163.2, %sub147.2, !dbg !2013
    #dbg_value(i32 %add166.2, !1903, !DIExpression(), !1934)
  %sub167.2 = sub nsw i32 %sub147.2, %sub163.2, !dbg !2013
    #dbg_value(i32 %sub167.2, !1905, !DIExpression(), !1934)
    #dbg_value(i32 %add164.2, !1105, !DIExpression(), !2015)
  %shr.i291.2 = lshr i32 %add164.2, 15, !dbg !2017
  %and.i292.2 = and i32 %shr.i291.2, 65537, !dbg !2018
  %mul.i293.2 = mul nuw i32 %and.i292.2, 65535, !dbg !2019
    #dbg_value(i32 %mul.i293.2, !1110, !DIExpression(), !2015)
  %add.i294.2 = add i32 %mul.i293.2, %add164.2, !dbg !2020
  %xor.i295.2 = xor i32 %add.i294.2, %mul.i293.2, !dbg !2021
    #dbg_value(i32 %add166.2, !1105, !DIExpression(), !2022)
  %shr.i296.2 = lshr i32 %add166.2, 15, !dbg !2024
  %and.i297.2 = and i32 %shr.i296.2, 65537, !dbg !2025
  %mul.i298.2 = mul nuw i32 %and.i297.2, 65535, !dbg !2026
    #dbg_value(i32 %mul.i298.2, !1110, !DIExpression(), !2022)
  %add.i299.2 = add i32 %mul.i298.2, %add166.2, !dbg !2027
  %xor.i300.2 = xor i32 %add.i299.2, %mul.i298.2, !dbg !2028
    #dbg_value(i32 %sub165.2, !1105, !DIExpression(), !2029)
  %shr.i301.2 = lshr i32 %sub165.2, 15, !dbg !2031
  %and.i302.2 = and i32 %shr.i301.2, 65537, !dbg !2032
  %mul.i303.2 = mul nuw i32 %and.i302.2, 65535, !dbg !2033
    #dbg_value(i32 %mul.i303.2, !1110, !DIExpression(), !2029)
  %add.i304.2 = add i32 %mul.i303.2, %sub165.2, !dbg !2034
  %xor.i305.2 = xor i32 %add.i304.2, %mul.i303.2, !dbg !2035
    #dbg_value(i32 %sub167.2, !1105, !DIExpression(), !2036)
  %shr.i306.2 = lshr i32 %sub167.2, 15, !dbg !2038
  %and.i307.2 = and i32 %shr.i306.2, 65537, !dbg !2039
  %mul.i308.2 = mul nuw i32 %and.i307.2, 65535, !dbg !2040
    #dbg_value(i32 %mul.i308.2, !1110, !DIExpression(), !2036)
  %add.i309.2 = add i32 %mul.i308.2, %sub167.2, !dbg !2041
  %xor.i310.2 = xor i32 %add.i309.2, %mul.i308.2, !dbg !2042
  %add170.2 = add i32 %xor.i300.2, %add175.1, !dbg !2046
  %add172.2 = add i32 %add170.2, %xor.i295.2, !dbg !2043
  %add174.2 = add i32 %add172.2, %xor.i305.2, !dbg !2044
  %add175.2 = add i32 %add174.2, %xor.i310.2, !dbg !2045
    #dbg_value(i32 %add175.2, !1908, !DIExpression(), !1934)
    #dbg_value(i64 3, !1924, !DIExpression(), !2012)
  %210 = load i32, ptr %add.ptr.3, align 4, !dbg !2013
  %arrayidx139.3 = getelementptr inbounds i8, ptr %tmp, i64 44, !dbg !2013
  %211 = load i32, ptr %arrayidx139.3, align 4, !dbg !2013
  %add140.3 = add i32 %211, %210, !dbg !2013
    #dbg_value(i32 %add140.3, !1926, !DIExpression(), !2014)
  %sub147.3 = sub i32 %210, %211, !dbg !2013
    #dbg_value(i32 %sub147.3, !1930, !DIExpression(), !2014)
  %arrayidx151.3 = getelementptr inbounds i8, ptr %tmp, i64 76, !dbg !2013
  %212 = load i32, ptr %arrayidx151.3, align 4, !dbg !2013
  %arrayidx154.3 = getelementptr inbounds i8, ptr %tmp, i64 108, !dbg !2013
  %213 = load i32, ptr %arrayidx154.3, align 4, !dbg !2013
  %add155.3 = add i32 %213, %212, !dbg !2013
    #dbg_value(i32 %add155.3, !1931, !DIExpression(), !2014)
  %sub163.3 = sub i32 %212, %213, !dbg !2013
    #dbg_value(i32 %sub163.3, !1932, !DIExpression(), !2014)
  %add164.3 = add nsw i32 %add155.3, %add140.3, !dbg !2013
    #dbg_value(i32 %add164.3, !1902, !DIExpression(), !1934)
  %sub165.3 = sub nsw i32 %add140.3, %add155.3, !dbg !2013
    #dbg_value(i32 %sub165.3, !1904, !DIExpression(), !1934)
  %add166.3 = add nsw i32 %sub163.3, %sub147.3, !dbg !2013
    #dbg_value(i32 %add166.3, !1903, !DIExpression(), !1934)
  %sub167.3 = sub nsw i32 %sub147.3, %sub163.3, !dbg !2013
    #dbg_value(i32 %sub167.3, !1905, !DIExpression(), !1934)
    #dbg_value(i32 %add164.3, !1105, !DIExpression(), !2015)
  %shr.i291.3 = lshr i32 %add164.3, 15, !dbg !2017
  %and.i292.3 = and i32 %shr.i291.3, 65537, !dbg !2018
  %mul.i293.3 = mul nuw i32 %and.i292.3, 65535, !dbg !2019
    #dbg_value(i32 %mul.i293.3, !1110, !DIExpression(), !2015)
  %add.i294.3 = add i32 %mul.i293.3, %add164.3, !dbg !2020
  %xor.i295.3 = xor i32 %add.i294.3, %mul.i293.3, !dbg !2021
    #dbg_value(i32 %add166.3, !1105, !DIExpression(), !2022)
  %shr.i296.3 = lshr i32 %add166.3, 15, !dbg !2024
  %and.i297.3 = and i32 %shr.i296.3, 65537, !dbg !2025
  %mul.i298.3 = mul nuw i32 %and.i297.3, 65535, !dbg !2026
    #dbg_value(i32 %mul.i298.3, !1110, !DIExpression(), !2022)
  %add.i299.3 = add i32 %mul.i298.3, %add166.3, !dbg !2027
  %xor.i300.3 = xor i32 %add.i299.3, %mul.i298.3, !dbg !2028
    #dbg_value(i32 %sub165.3, !1105, !DIExpression(), !2029)
  %shr.i301.3 = lshr i32 %sub165.3, 15, !dbg !2031
  %and.i302.3 = and i32 %shr.i301.3, 65537, !dbg !2032
  %mul.i303.3 = mul nuw i32 %and.i302.3, 65535, !dbg !2033
    #dbg_value(i32 %mul.i303.3, !1110, !DIExpression(), !2029)
  %add.i304.3 = add i32 %mul.i303.3, %sub165.3, !dbg !2034
  %xor.i305.3 = xor i32 %add.i304.3, %mul.i303.3, !dbg !2035
    #dbg_value(i32 %sub167.3, !1105, !DIExpression(), !2036)
  %shr.i306.3 = lshr i32 %sub167.3, 15, !dbg !2038
  %and.i307.3 = and i32 %shr.i306.3, 65537, !dbg !2039
  %mul.i308.3 = mul nuw i32 %and.i307.3, 65535, !dbg !2040
    #dbg_value(i32 %mul.i308.3, !1110, !DIExpression(), !2036)
  %add.i309.3 = add i32 %mul.i308.3, %sub167.3, !dbg !2041
  %xor.i310.3 = xor i32 %add.i309.3, %mul.i308.3, !dbg !2042
  %add170.3 = add i32 %xor.i300.3, %add175.2, !dbg !2046
  %add172.3 = add i32 %add170.3, %xor.i295.3, !dbg !2043
  %add174.3 = add i32 %add172.3, %xor.i305.3, !dbg !2044
  %add175.3 = add i32 %add174.3, %xor.i310.3, !dbg !2045
    #dbg_value(i32 %add175.3, !1908, !DIExpression(), !1934)
    #dbg_value(i64 4, !1924, !DIExpression(), !2012)
  %214 = load i32, ptr %arrayidx26, align 16, !dbg !2013
  %215 = load i32, ptr %arrayidx54, align 16, !dbg !2013
  %add140.4 = add i32 %215, %214, !dbg !2013
    #dbg_value(i32 %add140.4, !1926, !DIExpression(), !2014)
  %sub147.4 = sub i32 %214, %215, !dbg !2013
    #dbg_value(i32 %sub147.4, !1930, !DIExpression(), !2014)
  %arrayidx151.4 = getelementptr inbounds i8, ptr %tmp, i64 80, !dbg !2013
  %216 = load i32, ptr %arrayidx151.4, align 16, !dbg !2013
  %arrayidx154.4 = getelementptr inbounds i8, ptr %tmp, i64 112, !dbg !2013
  %217 = load i32, ptr %arrayidx154.4, align 16, !dbg !2013
  %add155.4 = add i32 %217, %216, !dbg !2013
    #dbg_value(i32 %add155.4, !1931, !DIExpression(), !2014)
  %sub163.4 = sub i32 %216, %217, !dbg !2013
    #dbg_value(i32 %sub163.4, !1932, !DIExpression(), !2014)
  %add164.4 = add nsw i32 %add155.4, %add140.4, !dbg !2013
    #dbg_value(i32 %add164.4, !1902, !DIExpression(), !1934)
  %sub165.4 = sub nsw i32 %add140.4, %add155.4, !dbg !2013
    #dbg_value(i32 %sub165.4, !1904, !DIExpression(), !1934)
  %add166.4 = add nsw i32 %sub163.4, %sub147.4, !dbg !2013
    #dbg_value(i32 %add166.4, !1903, !DIExpression(), !1934)
  %sub167.4 = sub nsw i32 %sub147.4, %sub163.4, !dbg !2013
    #dbg_value(i32 %sub167.4, !1905, !DIExpression(), !1934)
    #dbg_value(i32 %add164.4, !1105, !DIExpression(), !2015)
  %shr.i291.4 = lshr i32 %add164.4, 15, !dbg !2017
  %and.i292.4 = and i32 %shr.i291.4, 65537, !dbg !2018
  %mul.i293.4 = mul nuw i32 %and.i292.4, 65535, !dbg !2019
    #dbg_value(i32 %mul.i293.4, !1110, !DIExpression(), !2015)
  %add.i294.4 = add i32 %mul.i293.4, %add164.4, !dbg !2020
  %xor.i295.4 = xor i32 %add.i294.4, %mul.i293.4, !dbg !2021
    #dbg_value(i32 %add166.4, !1105, !DIExpression(), !2022)
  %shr.i296.4 = lshr i32 %add166.4, 15, !dbg !2024
  %and.i297.4 = and i32 %shr.i296.4, 65537, !dbg !2025
  %mul.i298.4 = mul nuw i32 %and.i297.4, 65535, !dbg !2026
    #dbg_value(i32 %mul.i298.4, !1110, !DIExpression(), !2022)
  %add.i299.4 = add i32 %mul.i298.4, %add166.4, !dbg !2027
  %xor.i300.4 = xor i32 %add.i299.4, %mul.i298.4, !dbg !2028
    #dbg_value(i32 %sub165.4, !1105, !DIExpression(), !2029)
  %shr.i301.4 = lshr i32 %sub165.4, 15, !dbg !2031
  %and.i302.4 = and i32 %shr.i301.4, 65537, !dbg !2032
  %mul.i303.4 = mul nuw i32 %and.i302.4, 65535, !dbg !2033
    #dbg_value(i32 %mul.i303.4, !1110, !DIExpression(), !2029)
  %add.i304.4 = add i32 %mul.i303.4, %sub165.4, !dbg !2034
  %xor.i305.4 = xor i32 %add.i304.4, %mul.i303.4, !dbg !2035
    #dbg_value(i32 %sub167.4, !1105, !DIExpression(), !2036)
  %shr.i306.4 = lshr i32 %sub167.4, 15, !dbg !2038
  %and.i307.4 = and i32 %shr.i306.4, 65537, !dbg !2039
  %mul.i308.4 = mul nuw i32 %and.i307.4, 65535, !dbg !2040
    #dbg_value(i32 %mul.i308.4, !1110, !DIExpression(), !2036)
  %add.i309.4 = add i32 %mul.i308.4, %sub167.4, !dbg !2041
  %xor.i310.4 = xor i32 %add.i309.4, %mul.i308.4, !dbg !2042
  %add170.4 = add i32 %xor.i300.4, %add175.3, !dbg !2046
  %add172.4 = add i32 %add170.4, %xor.i295.4, !dbg !2043
  %add174.4 = add i32 %add172.4, %xor.i305.4, !dbg !2044
  %add175.4 = add i32 %add174.4, %xor.i310.4, !dbg !2045
    #dbg_value(i32 %add175.4, !1908, !DIExpression(), !1934)
    #dbg_value(i64 5, !1924, !DIExpression(), !2012)
  %arrayidx136.5 = getelementptr inbounds i8, ptr %tmp, i64 20, !dbg !2013
  %218 = load i32, ptr %arrayidx136.5, align 4, !dbg !2013
  %arrayidx139.5 = getelementptr inbounds i8, ptr %tmp, i64 52, !dbg !2013
  %219 = load i32, ptr %arrayidx139.5, align 4, !dbg !2013
  %add140.5 = add i32 %219, %218, !dbg !2013
    #dbg_value(i32 %add140.5, !1926, !DIExpression(), !2014)
  %sub147.5 = sub i32 %218, %219, !dbg !2013
    #dbg_value(i32 %sub147.5, !1930, !DIExpression(), !2014)
  %arrayidx151.5 = getelementptr inbounds i8, ptr %tmp, i64 84, !dbg !2013
  %220 = load i32, ptr %arrayidx151.5, align 4, !dbg !2013
  %arrayidx154.5 = getelementptr inbounds i8, ptr %tmp, i64 116, !dbg !2013
  %221 = load i32, ptr %arrayidx154.5, align 4, !dbg !2013
  %add155.5 = add i32 %221, %220, !dbg !2013
    #dbg_value(i32 %add155.5, !1931, !DIExpression(), !2014)
  %sub163.5 = sub i32 %220, %221, !dbg !2013
    #dbg_value(i32 %sub163.5, !1932, !DIExpression(), !2014)
  %add164.5 = add nsw i32 %add155.5, %add140.5, !dbg !2013
    #dbg_value(i32 %add164.5, !1902, !DIExpression(), !1934)
  %sub165.5 = sub nsw i32 %add140.5, %add155.5, !dbg !2013
    #dbg_value(i32 %sub165.5, !1904, !DIExpression(), !1934)
  %add166.5 = add nsw i32 %sub163.5, %sub147.5, !dbg !2013
    #dbg_value(i32 %add166.5, !1903, !DIExpression(), !1934)
  %sub167.5 = sub nsw i32 %sub147.5, %sub163.5, !dbg !2013
    #dbg_value(i32 %sub167.5, !1905, !DIExpression(), !1934)
    #dbg_value(i32 %add164.5, !1105, !DIExpression(), !2015)
  %shr.i291.5 = lshr i32 %add164.5, 15, !dbg !2017
  %and.i292.5 = and i32 %shr.i291.5, 65537, !dbg !2018
  %mul.i293.5 = mul nuw i32 %and.i292.5, 65535, !dbg !2019
    #dbg_value(i32 %mul.i293.5, !1110, !DIExpression(), !2015)
  %add.i294.5 = add i32 %mul.i293.5, %add164.5, !dbg !2020
  %xor.i295.5 = xor i32 %add.i294.5, %mul.i293.5, !dbg !2021
    #dbg_value(i32 %add166.5, !1105, !DIExpression(), !2022)
  %shr.i296.5 = lshr i32 %add166.5, 15, !dbg !2024
  %and.i297.5 = and i32 %shr.i296.5, 65537, !dbg !2025
  %mul.i298.5 = mul nuw i32 %and.i297.5, 65535, !dbg !2026
    #dbg_value(i32 %mul.i298.5, !1110, !DIExpression(), !2022)
  %add.i299.5 = add i32 %mul.i298.5, %add166.5, !dbg !2027
  %xor.i300.5 = xor i32 %add.i299.5, %mul.i298.5, !dbg !2028
    #dbg_value(i32 %sub165.5, !1105, !DIExpression(), !2029)
  %shr.i301.5 = lshr i32 %sub165.5, 15, !dbg !2031
  %and.i302.5 = and i32 %shr.i301.5, 65537, !dbg !2032
  %mul.i303.5 = mul nuw i32 %and.i302.5, 65535, !dbg !2033
    #dbg_value(i32 %mul.i303.5, !1110, !DIExpression(), !2029)
  %add.i304.5 = add i32 %mul.i303.5, %sub165.5, !dbg !2034
  %xor.i305.5 = xor i32 %add.i304.5, %mul.i303.5, !dbg !2035
    #dbg_value(i32 %sub167.5, !1105, !DIExpression(), !2036)
  %shr.i306.5 = lshr i32 %sub167.5, 15, !dbg !2038
  %and.i307.5 = and i32 %shr.i306.5, 65537, !dbg !2039
  %mul.i308.5 = mul nuw i32 %and.i307.5, 65535, !dbg !2040
    #dbg_value(i32 %mul.i308.5, !1110, !DIExpression(), !2036)
  %add.i309.5 = add i32 %mul.i308.5, %sub167.5, !dbg !2041
  %xor.i310.5 = xor i32 %add.i309.5, %mul.i308.5, !dbg !2042
  %add170.5 = add i32 %xor.i300.5, %add175.4, !dbg !2046
  %add172.5 = add i32 %add170.5, %xor.i295.5, !dbg !2043
  %add174.5 = add i32 %add172.5, %xor.i305.5, !dbg !2044
  %add175.5 = add i32 %add174.5, %xor.i310.5, !dbg !2045
    #dbg_value(i32 %add175.5, !1908, !DIExpression(), !1934)
    #dbg_value(i64 6, !1924, !DIExpression(), !2012)
  %arrayidx136.6 = getelementptr inbounds i8, ptr %tmp, i64 24, !dbg !2013
  %222 = load i32, ptr %arrayidx136.6, align 8, !dbg !2013
  %arrayidx139.6 = getelementptr inbounds i8, ptr %tmp, i64 56, !dbg !2013
  %223 = load i32, ptr %arrayidx139.6, align 8, !dbg !2013
  %add140.6 = add i32 %223, %222, !dbg !2013
    #dbg_value(i32 %add140.6, !1926, !DIExpression(), !2014)
  %sub147.6 = sub i32 %222, %223, !dbg !2013
    #dbg_value(i32 %sub147.6, !1930, !DIExpression(), !2014)
  %arrayidx151.6 = getelementptr inbounds i8, ptr %tmp, i64 88, !dbg !2013
  %224 = load i32, ptr %arrayidx151.6, align 8, !dbg !2013
  %arrayidx154.6 = getelementptr inbounds i8, ptr %tmp, i64 120, !dbg !2013
  %225 = load i32, ptr %arrayidx154.6, align 8, !dbg !2013
  %add155.6 = add i32 %225, %224, !dbg !2013
    #dbg_value(i32 %add155.6, !1931, !DIExpression(), !2014)
  %sub163.6 = sub i32 %224, %225, !dbg !2013
    #dbg_value(i32 %sub163.6, !1932, !DIExpression(), !2014)
  %add164.6 = add nsw i32 %add155.6, %add140.6, !dbg !2013
    #dbg_value(i32 %add164.6, !1902, !DIExpression(), !1934)
  %sub165.6 = sub nsw i32 %add140.6, %add155.6, !dbg !2013
    #dbg_value(i32 %sub165.6, !1904, !DIExpression(), !1934)
  %add166.6 = add nsw i32 %sub163.6, %sub147.6, !dbg !2013
    #dbg_value(i32 %add166.6, !1903, !DIExpression(), !1934)
  %sub167.6 = sub nsw i32 %sub147.6, %sub163.6, !dbg !2013
    #dbg_value(i32 %sub167.6, !1905, !DIExpression(), !1934)
    #dbg_value(i32 %add164.6, !1105, !DIExpression(), !2015)
  %shr.i291.6 = lshr i32 %add164.6, 15, !dbg !2017
  %and.i292.6 = and i32 %shr.i291.6, 65537, !dbg !2018
  %mul.i293.6 = mul nuw i32 %and.i292.6, 65535, !dbg !2019
    #dbg_value(i32 %mul.i293.6, !1110, !DIExpression(), !2015)
  %add.i294.6 = add i32 %mul.i293.6, %add164.6, !dbg !2020
  %xor.i295.6 = xor i32 %add.i294.6, %mul.i293.6, !dbg !2021
    #dbg_value(i32 %add166.6, !1105, !DIExpression(), !2022)
  %shr.i296.6 = lshr i32 %add166.6, 15, !dbg !2024
  %and.i297.6 = and i32 %shr.i296.6, 65537, !dbg !2025
  %mul.i298.6 = mul nuw i32 %and.i297.6, 65535, !dbg !2026
    #dbg_value(i32 %mul.i298.6, !1110, !DIExpression(), !2022)
  %add.i299.6 = add i32 %mul.i298.6, %add166.6, !dbg !2027
  %xor.i300.6 = xor i32 %add.i299.6, %mul.i298.6, !dbg !2028
    #dbg_value(i32 %sub165.6, !1105, !DIExpression(), !2029)
  %shr.i301.6 = lshr i32 %sub165.6, 15, !dbg !2031
  %and.i302.6 = and i32 %shr.i301.6, 65537, !dbg !2032
  %mul.i303.6 = mul nuw i32 %and.i302.6, 65535, !dbg !2033
    #dbg_value(i32 %mul.i303.6, !1110, !DIExpression(), !2029)
  %add.i304.6 = add i32 %mul.i303.6, %sub165.6, !dbg !2034
  %xor.i305.6 = xor i32 %add.i304.6, %mul.i303.6, !dbg !2035
    #dbg_value(i32 %sub167.6, !1105, !DIExpression(), !2036)
  %shr.i306.6 = lshr i32 %sub167.6, 15, !dbg !2038
  %and.i307.6 = and i32 %shr.i306.6, 65537, !dbg !2039
  %mul.i308.6 = mul nuw i32 %and.i307.6, 65535, !dbg !2040
    #dbg_value(i32 %mul.i308.6, !1110, !DIExpression(), !2036)
  %add.i309.6 = add i32 %mul.i308.6, %sub167.6, !dbg !2041
  %xor.i310.6 = xor i32 %add.i309.6, %mul.i308.6, !dbg !2042
  %add170.6 = add i32 %xor.i300.6, %add175.5, !dbg !2046
  %add172.6 = add i32 %add170.6, %xor.i295.6, !dbg !2043
  %add174.6 = add i32 %add172.6, %xor.i305.6, !dbg !2044
  %add175.6 = add i32 %add174.6, %xor.i310.6, !dbg !2045
    #dbg_value(i32 %add175.6, !1908, !DIExpression(), !1934)
    #dbg_value(i64 7, !1924, !DIExpression(), !2012)
  %arrayidx136.7 = getelementptr inbounds i8, ptr %tmp, i64 28, !dbg !2013
  %226 = load i32, ptr %arrayidx136.7, align 4, !dbg !2013
  %arrayidx139.7 = getelementptr inbounds i8, ptr %tmp, i64 60, !dbg !2013
  %227 = load i32, ptr %arrayidx139.7, align 4, !dbg !2013
  %add140.7 = add i32 %227, %226, !dbg !2013
    #dbg_value(i32 %add140.7, !1926, !DIExpression(), !2014)
  %sub147.7 = sub i32 %226, %227, !dbg !2013
    #dbg_value(i32 %sub147.7, !1930, !DIExpression(), !2014)
  %arrayidx151.7 = getelementptr inbounds i8, ptr %tmp, i64 92, !dbg !2013
  %228 = load i32, ptr %arrayidx151.7, align 4, !dbg !2013
  %arrayidx154.7 = getelementptr inbounds i8, ptr %tmp, i64 124, !dbg !2013
  %229 = load i32, ptr %arrayidx154.7, align 4, !dbg !2013
  %add155.7 = add i32 %229, %228, !dbg !2013
    #dbg_value(i32 %add155.7, !1931, !DIExpression(), !2014)
  %sub163.7 = sub i32 %228, %229, !dbg !2013
    #dbg_value(i32 %sub163.7, !1932, !DIExpression(), !2014)
  %add164.7 = add nsw i32 %add155.7, %add140.7, !dbg !2013
    #dbg_value(i32 %add164.7, !1902, !DIExpression(), !1934)
  %sub165.7 = sub nsw i32 %add140.7, %add155.7, !dbg !2013
    #dbg_value(i32 %sub165.7, !1904, !DIExpression(), !1934)
  %add166.7 = add nsw i32 %sub163.7, %sub147.7, !dbg !2013
    #dbg_value(i32 %add166.7, !1903, !DIExpression(), !1934)
  %sub167.7 = sub nsw i32 %sub147.7, %sub163.7, !dbg !2013
    #dbg_value(i32 %sub167.7, !1905, !DIExpression(), !1934)
    #dbg_value(i32 %add164.7, !1105, !DIExpression(), !2015)
  %shr.i291.7 = lshr i32 %add164.7, 15, !dbg !2017
  %and.i292.7 = and i32 %shr.i291.7, 65537, !dbg !2018
  %mul.i293.7 = mul nuw i32 %and.i292.7, 65535, !dbg !2019
    #dbg_value(i32 %mul.i293.7, !1110, !DIExpression(), !2015)
  %add.i294.7 = add i32 %mul.i293.7, %add164.7, !dbg !2020
  %xor.i295.7 = xor i32 %add.i294.7, %mul.i293.7, !dbg !2021
    #dbg_value(i32 %add166.7, !1105, !DIExpression(), !2022)
  %shr.i296.7 = lshr i32 %add166.7, 15, !dbg !2024
  %and.i297.7 = and i32 %shr.i296.7, 65537, !dbg !2025
  %mul.i298.7 = mul nuw i32 %and.i297.7, 65535, !dbg !2026
    #dbg_value(i32 %mul.i298.7, !1110, !DIExpression(), !2022)
  %add.i299.7 = add i32 %mul.i298.7, %add166.7, !dbg !2027
  %xor.i300.7 = xor i32 %add.i299.7, %mul.i298.7, !dbg !2028
    #dbg_value(i32 %sub165.7, !1105, !DIExpression(), !2029)
  %shr.i301.7 = lshr i32 %sub165.7, 15, !dbg !2031
  %and.i302.7 = and i32 %shr.i301.7, 65537, !dbg !2032
  %mul.i303.7 = mul nuw i32 %and.i302.7, 65535, !dbg !2033
    #dbg_value(i32 %mul.i303.7, !1110, !DIExpression(), !2029)
  %add.i304.7 = add i32 %mul.i303.7, %sub165.7, !dbg !2034
  %xor.i305.7 = xor i32 %add.i304.7, %mul.i303.7, !dbg !2035
    #dbg_value(i32 %sub167.7, !1105, !DIExpression(), !2036)
  %shr.i306.7 = lshr i32 %sub167.7, 15, !dbg !2038
  %and.i307.7 = and i32 %shr.i306.7, 65537, !dbg !2039
  %mul.i308.7 = mul nuw i32 %and.i307.7, 65535, !dbg !2040
    #dbg_value(i32 %mul.i308.7, !1110, !DIExpression(), !2036)
  %add.i309.7 = add i32 %mul.i308.7, %sub167.7, !dbg !2041
  %xor.i310.7 = xor i32 %add.i309.7, %mul.i308.7, !dbg !2042
  %add170.7 = add i32 %xor.i300.7, %add175.6, !dbg !2046
  %add172.7 = add i32 %add170.7, %xor.i295.7, !dbg !2043
  %add174.7 = add i32 %add172.7, %xor.i305.7, !dbg !2044
  %add175.7 = add i32 %add174.7, %xor.i310.7, !dbg !2045
    #dbg_value(i32 %add175.7, !1908, !DIExpression(), !1934)
    #dbg_value(i64 8, !1924, !DIExpression(), !2012)
  %230 = load i32, ptr %tmp, align 16, !dbg !2047
  %231 = load i32, ptr %arrayidx52, align 16, !dbg !2048
  %add181 = add i32 %231, %230, !dbg !2049
  %232 = load i32, ptr %add.ptr3.4, align 16, !dbg !2050
  %add183 = add i32 %add181, %232, !dbg !2051
  %233 = load i32, ptr %arrayidx154, align 16, !dbg !2052
  %add185 = add i32 %add183, %233, !dbg !2053
  %conv187 = and i32 %add185, 65535, !dbg !2054
    #dbg_value(i32 %conv187, !1906, !DIExpression(), !1934)
  %conv189 = and i32 %197, 65535, !dbg !2055
  %shr = lshr i32 %197, 16, !dbg !2056
  %add190 = add nuw nsw i32 %conv189, %shr, !dbg !2057
  %sub191 = sub nsw i32 %add190, %conv187, !dbg !2058
    #dbg_value(i32 %sub191, !1907, !DIExpression(), !1934)
  %conv193 = and i32 %add175.7, 65535, !dbg !2059
  %shr194 = lshr i32 %add175.7, 16, !dbg !2060
  %add195 = add nuw nsw i32 %conv193, %shr194, !dbg !2061
  %sub196 = sub nsw i32 %add195, %conv187, !dbg !2062
    #dbg_value(i32 %sub196, !1908, !DIExpression(), !1934)
  %conv197 = sext i32 %sub196 to i64, !dbg !2063
  %shl198 = shl nsw i64 %conv197, 32, !dbg !2064
  %conv199 = sext i32 %sub191 to i64, !dbg !2065
  %add200 = add nsw i64 %shl198, %conv199, !dbg !2066
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %tmp) #13, !dbg !2067
  ret i64 %add200, !dbg !2068
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define internal fastcc i32 @sa8d_8x8(ptr nocapture noundef readonly %pix1, i32 noundef %i_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_pix2) unnamed_addr #4 !dbg !2069 {
entry:
  %tmp = alloca [8 x [4 x i32]], align 16, !DIAssignID !2115
    #dbg_assign(i1 undef, !2075, !DIExpression(), !2115, ptr %tmp, !DIExpression(), !2116)
    #dbg_value(ptr %pix1, !2071, !DIExpression(), !2116)
    #dbg_value(i32 %i_pix1, !2072, !DIExpression(), !2116)
    #dbg_value(ptr %pix2, !2073, !DIExpression(), !2116)
    #dbg_value(i32 %i_pix2, !2074, !DIExpression(), !2116)
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %tmp) #13, !dbg !2117
    #dbg_value(i32 0, !2091, !DIExpression(), !2116)
    #dbg_value(i32 0, !2092, !DIExpression(), !2118)
  %idx.ext = sext i32 %i_pix1 to i64
  %idx.ext71 = sext i32 %i_pix2 to i64
  br label %for.body, !dbg !2119

for.cond74.preheader:                             ; preds = %for.body
  %arrayidx83 = getelementptr inbounds i8, ptr %tmp, i64 16
  %arrayidx96 = getelementptr inbounds i8, ptr %tmp, i64 32
  %arrayidx99 = getelementptr inbounds i8, ptr %tmp, i64 48
  %arrayidx116 = getelementptr inbounds i8, ptr %tmp, i64 64
  %arrayidx119 = getelementptr inbounds i8, ptr %tmp, i64 80
  %arrayidx132 = getelementptr inbounds i8, ptr %tmp, i64 96
  %arrayidx135 = getelementptr inbounds i8, ptr %tmp, i64 112
    #dbg_value(i32 0, !2101, !DIExpression(), !2120)
    #dbg_value(i32 0, !2091, !DIExpression(), !2116)
  %0 = load <4 x i32>, ptr %tmp, align 16, !dbg !2121
  %1 = shufflevector <4 x i32> %0, <4 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>, !dbg !2121
  %2 = load <4 x i32>, ptr %arrayidx83, align 16, !dbg !2121
  %3 = shufflevector <4 x i32> %2, <4 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>, !dbg !2121
  %4 = add <4 x i32> %3, %1, !dbg !2121
  %5 = sub <4 x i32> %1, %3, !dbg !2121
  %6 = load <4 x i32>, ptr %arrayidx96, align 16, !dbg !2121
  %7 = shufflevector <4 x i32> %6, <4 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>, !dbg !2121
  %8 = load <4 x i32>, ptr %arrayidx99, align 16, !dbg !2121
  %9 = shufflevector <4 x i32> %8, <4 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>, !dbg !2121
  %10 = add <4 x i32> %9, %7, !dbg !2121
  %11 = sub <4 x i32> %7, %9, !dbg !2121
  %12 = add nsw <4 x i32> %10, %4, !dbg !2121
  %13 = sub nsw <4 x i32> %4, %10, !dbg !2121
  %14 = add nsw <4 x i32> %11, %5, !dbg !2121
  %15 = sub nsw <4 x i32> %5, %11, !dbg !2121
  %16 = load <4 x i32>, ptr %arrayidx116, align 16, !dbg !2122
  %17 = shufflevector <4 x i32> %16, <4 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>, !dbg !2122
  %18 = load <4 x i32>, ptr %arrayidx119, align 16, !dbg !2122
  %19 = shufflevector <4 x i32> %18, <4 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>, !dbg !2122
  %20 = add <4 x i32> %19, %17, !dbg !2122
  %21 = sub <4 x i32> %17, %19, !dbg !2122
  %22 = load <4 x i32>, ptr %arrayidx132, align 16, !dbg !2122
  %23 = shufflevector <4 x i32> %22, <4 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>, !dbg !2122
  %24 = load <4 x i32>, ptr %arrayidx135, align 16, !dbg !2122
  %25 = shufflevector <4 x i32> %24, <4 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>, !dbg !2122
  %26 = sub <4 x i32> %23, %25, !dbg !2122
  %27 = sub nsw <4 x i32> %21, %26, !dbg !2122
  %28 = add <4 x i32> %27, %15, !dbg !2123
  %29 = sub <4 x i32> %15, %27, !dbg !2124
  %30 = lshr <4 x i32> %28, <i32 15, i32 15, i32 15, i32 15>, !dbg !2125
  %31 = and <4 x i32> %30, <i32 65537, i32 65537, i32 65537, i32 65537>, !dbg !2127
  %32 = mul nuw <4 x i32> %31, <i32 65535, i32 65535, i32 65535, i32 65535>, !dbg !2128
  %33 = add <4 x i32> %32, %28, !dbg !2129
  %34 = xor <4 x i32> %33, %32, !dbg !2130
  %35 = lshr <4 x i32> %29, <i32 15, i32 15, i32 15, i32 15>, !dbg !2131
  %36 = and <4 x i32> %35, <i32 65537, i32 65537, i32 65537, i32 65537>, !dbg !2133
  %37 = mul nuw <4 x i32> %36, <i32 65535, i32 65535, i32 65535, i32 65535>, !dbg !2134
  %38 = add <4 x i32> %37, %29, !dbg !2135
  %39 = xor <4 x i32> %38, %37, !dbg !2136
  %40 = add <4 x i32> %34, %39, !dbg !2137
  %41 = add <4 x i32> %25, %23, !dbg !2122
  %42 = sub nsw <4 x i32> %20, %41, !dbg !2122
  %43 = sub <4 x i32> %13, %42, !dbg !2138
  %44 = lshr <4 x i32> %43, <i32 15, i32 15, i32 15, i32 15>, !dbg !2139
  %45 = and <4 x i32> %44, <i32 65537, i32 65537, i32 65537, i32 65537>, !dbg !2141
  %46 = mul nuw <4 x i32> %45, <i32 65535, i32 65535, i32 65535, i32 65535>, !dbg !2142
  %47 = add <4 x i32> %46, %43, !dbg !2143
  %48 = xor <4 x i32> %47, %46, !dbg !2144
  %49 = add <4 x i32> %40, %48, !dbg !2145
  %50 = add <4 x i32> %42, %13, !dbg !2146
  %51 = lshr <4 x i32> %50, <i32 15, i32 15, i32 15, i32 15>, !dbg !2147
  %52 = and <4 x i32> %51, <i32 65537, i32 65537, i32 65537, i32 65537>, !dbg !2149
  %53 = mul nuw <4 x i32> %52, <i32 65535, i32 65535, i32 65535, i32 65535>, !dbg !2150
  %54 = add <4 x i32> %53, %50, !dbg !2151
  %55 = xor <4 x i32> %54, %53, !dbg !2152
  %56 = add <4 x i32> %49, %55, !dbg !2153
  %57 = add nsw <4 x i32> %41, %20, !dbg !2122
  %58 = sub <4 x i32> %12, %57, !dbg !2154
  %59 = lshr <4 x i32> %58, <i32 15, i32 15, i32 15, i32 15>, !dbg !2155
  %60 = and <4 x i32> %59, <i32 65537, i32 65537, i32 65537, i32 65537>, !dbg !2157
  %61 = mul nuw <4 x i32> %60, <i32 65535, i32 65535, i32 65535, i32 65535>, !dbg !2158
  %62 = add <4 x i32> %61, %58, !dbg !2159
  %63 = xor <4 x i32> %62, %61, !dbg !2160
  %64 = add <4 x i32> %56, %63, !dbg !2161
  %65 = add <4 x i32> %57, %12, !dbg !2162
  %66 = lshr <4 x i32> %65, <i32 15, i32 15, i32 15, i32 15>, !dbg !2163
  %67 = and <4 x i32> %66, <i32 65537, i32 65537, i32 65537, i32 65537>, !dbg !2165
  %68 = mul nuw <4 x i32> %67, <i32 65535, i32 65535, i32 65535, i32 65535>, !dbg !2166
  %69 = add <4 x i32> %68, %65, !dbg !2167
  %70 = xor <4 x i32> %69, %68, !dbg !2168
  %71 = add <4 x i32> %64, %70, !dbg !2169
  %72 = add nsw <4 x i32> %26, %21, !dbg !2122
  %73 = sub <4 x i32> %14, %72, !dbg !2170
  %74 = lshr <4 x i32> %73, <i32 15, i32 15, i32 15, i32 15>, !dbg !2171
  %75 = and <4 x i32> %74, <i32 65537, i32 65537, i32 65537, i32 65537>, !dbg !2173
  %76 = mul nuw <4 x i32> %75, <i32 65535, i32 65535, i32 65535, i32 65535>, !dbg !2174
  %77 = add <4 x i32> %76, %73, !dbg !2175
  %78 = xor <4 x i32> %77, %76, !dbg !2176
  %79 = add <4 x i32> %71, %78, !dbg !2177
  %80 = add <4 x i32> %72, %14, !dbg !2178
  %81 = lshr <4 x i32> %80, <i32 15, i32 15, i32 15, i32 15>, !dbg !2179
  %82 = and <4 x i32> %81, <i32 65537, i32 65537, i32 65537, i32 65537>, !dbg !2181
  %83 = mul nuw <4 x i32> %82, <i32 65535, i32 65535, i32 65535, i32 65535>, !dbg !2182
  %84 = add <4 x i32> %83, %80, !dbg !2183
  %85 = xor <4 x i32> %84, %83, !dbg !2184
  %86 = add <4 x i32> %79, %85, !dbg !2185
  %87 = and <4 x i32> %86, <i32 65535, i32 65535, i32 65535, i32 65535>, !dbg !2186
  %88 = lshr <4 x i32> %86, <i32 16, i32 16, i32 16, i32 16>, !dbg !2187
  %89 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %87), !dbg !2188
  %90 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %88), !dbg !2188
  %op.rdx = add i32 %89, %90, !dbg !2188
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %tmp) #13, !dbg !2189
  ret i32 %op.rdx, !dbg !2190

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %pix1.addr.0301 = phi ptr [ %pix1, %entry ], [ %add.ptr, %for.body ]
  %pix2.addr.0300 = phi ptr [ %pix2, %entry ], [ %add.ptr72, %for.body ]
    #dbg_value(ptr %pix1.addr.0301, !2071, !DIExpression(), !2116)
    #dbg_value(ptr %pix2.addr.0300, !2073, !DIExpression(), !2116)
    #dbg_value(i64 %indvars.iv, !2092, !DIExpression(), !2118)
  %91 = load i8, ptr %pix1.addr.0301, align 1, !dbg !2191
  %conv = zext i8 %91 to i32, !dbg !2191
  %92 = load i8, ptr %pix2.addr.0300, align 1, !dbg !2192
  %conv2 = zext i8 %92 to i32, !dbg !2192
  %sub = sub nsw i32 %conv, %conv2, !dbg !2193
    #dbg_value(i32 %sub, !2079, !DIExpression(), !2116)
  %arrayidx3 = getelementptr inbounds i8, ptr %pix1.addr.0301, i64 1, !dbg !2194
  %93 = load i8, ptr %arrayidx3, align 1, !dbg !2194
  %conv4 = zext i8 %93 to i32, !dbg !2194
  %arrayidx5 = getelementptr inbounds i8, ptr %pix2.addr.0300, i64 1, !dbg !2195
  %94 = load i8, ptr %arrayidx5, align 1, !dbg !2195
  %conv6 = zext i8 %94 to i32, !dbg !2195
  %sub7 = sub nsw i32 %conv4, %conv6, !dbg !2196
    #dbg_value(i32 %sub7, !2080, !DIExpression(), !2116)
  %add = add nsw i32 %sub7, %sub, !dbg !2197
  %sub8 = sub nsw i32 %sub, %sub7, !dbg !2198
  %shl = shl nsw i32 %sub8, 16, !dbg !2199
  %add9 = add nsw i32 %add, %shl, !dbg !2200
    #dbg_value(i32 %add9, !2087, !DIExpression(), !2116)
  %arrayidx10 = getelementptr inbounds i8, ptr %pix1.addr.0301, i64 2, !dbg !2201
  %95 = load i8, ptr %arrayidx10, align 1, !dbg !2201
  %conv11 = zext i8 %95 to i32, !dbg !2201
  %arrayidx12 = getelementptr inbounds i8, ptr %pix2.addr.0300, i64 2, !dbg !2202
  %96 = load i8, ptr %arrayidx12, align 1, !dbg !2202
  %conv13 = zext i8 %96 to i32, !dbg !2202
  %sub14 = sub nsw i32 %conv11, %conv13, !dbg !2203
    #dbg_value(i32 %sub14, !2081, !DIExpression(), !2116)
  %arrayidx15 = getelementptr inbounds i8, ptr %pix1.addr.0301, i64 3, !dbg !2204
  %97 = load i8, ptr %arrayidx15, align 1, !dbg !2204
  %conv16 = zext i8 %97 to i32, !dbg !2204
  %arrayidx17 = getelementptr inbounds i8, ptr %pix2.addr.0300, i64 3, !dbg !2205
  %98 = load i8, ptr %arrayidx17, align 1, !dbg !2205
  %conv18 = zext i8 %98 to i32, !dbg !2205
  %sub19 = sub nsw i32 %conv16, %conv18, !dbg !2206
    #dbg_value(i32 %sub19, !2082, !DIExpression(), !2116)
  %add20 = add nsw i32 %sub19, %sub14, !dbg !2207
  %sub21 = sub nsw i32 %sub14, %sub19, !dbg !2208
  %shl22 = shl nsw i32 %sub21, 16, !dbg !2209
  %add23 = add nsw i32 %add20, %shl22, !dbg !2210
    #dbg_value(i32 %add23, !2088, !DIExpression(), !2116)
  %arrayidx24 = getelementptr inbounds i8, ptr %pix1.addr.0301, i64 4, !dbg !2211
  %99 = load i8, ptr %arrayidx24, align 1, !dbg !2211
  %conv25 = zext i8 %99 to i32, !dbg !2211
  %arrayidx26 = getelementptr inbounds i8, ptr %pix2.addr.0300, i64 4, !dbg !2212
  %100 = load i8, ptr %arrayidx26, align 1, !dbg !2212
  %conv27 = zext i8 %100 to i32, !dbg !2212
  %sub28 = sub nsw i32 %conv25, %conv27, !dbg !2213
    #dbg_value(i32 %sub28, !2083, !DIExpression(), !2116)
  %arrayidx29 = getelementptr inbounds i8, ptr %pix1.addr.0301, i64 5, !dbg !2214
  %101 = load i8, ptr %arrayidx29, align 1, !dbg !2214
  %conv30 = zext i8 %101 to i32, !dbg !2214
  %arrayidx31 = getelementptr inbounds i8, ptr %pix2.addr.0300, i64 5, !dbg !2215
  %102 = load i8, ptr %arrayidx31, align 1, !dbg !2215
  %conv32 = zext i8 %102 to i32, !dbg !2215
  %sub33 = sub nsw i32 %conv30, %conv32, !dbg !2216
    #dbg_value(i32 %sub33, !2084, !DIExpression(), !2116)
  %add34 = add nsw i32 %sub33, %sub28, !dbg !2217
  %sub35 = sub nsw i32 %sub28, %sub33, !dbg !2218
  %shl36 = shl nsw i32 %sub35, 16, !dbg !2219
  %add37 = add nsw i32 %add34, %shl36, !dbg !2220
    #dbg_value(i32 %add37, !2089, !DIExpression(), !2116)
  %arrayidx38 = getelementptr inbounds i8, ptr %pix1.addr.0301, i64 6, !dbg !2221
  %103 = load i8, ptr %arrayidx38, align 1, !dbg !2221
  %conv39 = zext i8 %103 to i32, !dbg !2221
  %arrayidx40 = getelementptr inbounds i8, ptr %pix2.addr.0300, i64 6, !dbg !2222
  %104 = load i8, ptr %arrayidx40, align 1, !dbg !2222
  %conv41 = zext i8 %104 to i32, !dbg !2222
  %sub42 = sub nsw i32 %conv39, %conv41, !dbg !2223
    #dbg_value(i32 %sub42, !2085, !DIExpression(), !2116)
  %arrayidx43 = getelementptr inbounds i8, ptr %pix1.addr.0301, i64 7, !dbg !2224
  %105 = load i8, ptr %arrayidx43, align 1, !dbg !2224
  %conv44 = zext i8 %105 to i32, !dbg !2224
  %arrayidx45 = getelementptr inbounds i8, ptr %pix2.addr.0300, i64 7, !dbg !2225
  %106 = load i8, ptr %arrayidx45, align 1, !dbg !2225
  %conv46 = zext i8 %106 to i32, !dbg !2225
  %sub47 = sub nsw i32 %conv44, %conv46, !dbg !2226
    #dbg_value(i32 %sub47, !2086, !DIExpression(), !2116)
  %add48 = add nsw i32 %sub47, %sub42, !dbg !2227
  %sub49 = sub nsw i32 %sub42, %sub47, !dbg !2228
  %shl50 = shl nsw i32 %sub49, 16, !dbg !2229
  %add51 = add nsw i32 %add48, %shl50, !dbg !2230
    #dbg_value(i32 %add51, !2090, !DIExpression(), !2116)
  %add52 = add nsw i32 %add23, %add9, !dbg !2231
    #dbg_value(i32 %add52, !2094, !DIExpression(), !2232)
  %sub53 = sub nsw i32 %add9, %add23, !dbg !2231
    #dbg_value(i32 %sub53, !2098, !DIExpression(), !2232)
  %add54 = add nsw i32 %add51, %add37, !dbg !2231
    #dbg_value(i32 %add54, !2099, !DIExpression(), !2232)
  %sub55 = sub nsw i32 %add37, %add51, !dbg !2231
    #dbg_value(i32 %sub55, !2100, !DIExpression(), !2232)
  %add56 = add nsw i32 %add54, %add52, !dbg !2231
  %arrayidx57 = getelementptr inbounds [8 x [4 x i32]], ptr %tmp, i64 0, i64 %indvars.iv, !dbg !2231
  store i32 %add56, ptr %arrayidx57, align 16, !dbg !2231
  %sub59 = sub nsw i32 %add52, %add54, !dbg !2231
  %arrayidx62 = getelementptr inbounds i8, ptr %arrayidx57, i64 8, !dbg !2231
  store i32 %sub59, ptr %arrayidx62, align 8, !dbg !2231
  %add63 = add nsw i32 %sub55, %sub53, !dbg !2231
  %arrayidx66 = getelementptr inbounds i8, ptr %arrayidx57, i64 4, !dbg !2231
  store i32 %add63, ptr %arrayidx66, align 4, !dbg !2231
  %sub67 = sub nsw i32 %sub53, %sub55, !dbg !2231
  %arrayidx70 = getelementptr inbounds i8, ptr %arrayidx57, i64 12, !dbg !2231
  store i32 %sub67, ptr %arrayidx70, align 4, !dbg !2231
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2233
    #dbg_value(i64 %indvars.iv.next, !2092, !DIExpression(), !2118)
  %add.ptr = getelementptr inbounds i8, ptr %pix1.addr.0301, i64 %idx.ext, !dbg !2234
    #dbg_value(ptr %add.ptr, !2071, !DIExpression(), !2116)
  %add.ptr72 = getelementptr inbounds i8, ptr %pix2.addr.0300, i64 %idx.ext71, !dbg !2235
    #dbg_value(ptr %add.ptr72, !2073, !DIExpression(), !2116)
  %exitcond.not = icmp eq i64 %indvars.iv.next, 8, !dbg !2236
  br i1 %exitcond.not, label %for.cond74.preheader, label %for.body, !dbg !2119, !llvm.loop !2237
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <16 x i16> @llvm.abs.v16i16(<16 x i16>, i1 immarg) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v16i32(<16 x i32>) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x i16> @llvm.abs.v8i16(<8 x i16>, i1 immarg) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v8i32(<8 x i32>) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x i16> @llvm.abs.v4i16(<4 x i16>, i1 immarg) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x i32> @llvm.abs.v4i32(<4 x i32>, i1 immarg) #12

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #4 = { nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nofree norecurse nosync nounwind memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #12 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #13 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!49, !50, !51, !52, !53, !54, !55}
!llvm.ident = !{!56}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !17, globals: !33, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "x264_src/common/pixel.c", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "ec44c8243ddf76cb02dcc088b0e26787")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 30, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "x264_src/common/pixel.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "e9056d80edbb4dc2514d271d596c298e")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9, !10, !11, !12, !13, !14, !15, !16}
!7 = !DIEnumerator(name: "PIXEL_16x16", value: 0)
!8 = !DIEnumerator(name: "PIXEL_16x8", value: 1)
!9 = !DIEnumerator(name: "PIXEL_8x16", value: 2)
!10 = !DIEnumerator(name: "PIXEL_8x8", value: 3)
!11 = !DIEnumerator(name: "PIXEL_8x4", value: 4)
!12 = !DIEnumerator(name: "PIXEL_4x8", value: 5)
!13 = !DIEnumerator(name: "PIXEL_4x4", value: 6)
!14 = !DIEnumerator(name: "PIXEL_4x2", value: 7)
!15 = !DIEnumerator(name: "PIXEL_2x4", value: 8)
!16 = !DIEnumerator(name: "PIXEL_2x2", value: 9)
!17 = !{!18, !21, !26, !28, !31, !32}
!18 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !19, line: 87, baseType: !20)
!19 = !DIFile(filename: "/usr/include/stdint.h", directory: "", checksumkind: CSK_MD5, checksum: "a48e64edacc5b19f56c99745232c963c")
!20 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !22, line: 25, baseType: !23)
!22 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "", checksumkind: CSK_MD5, checksum: "2bf2ae53c58c01b1a1b9383b5195125c")
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !24, line: 40, baseType: !25)
!24 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "d108b5f93a74c50510d7d9bc0ab36df9")
!25 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !22, line: 26, baseType: !27)
!27 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !24, line: 42, baseType: !5)
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !22, line: 27, baseType: !29)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !24, line: 45, baseType: !30)
!30 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!31 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!32 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!33 = !{!34, !47}
!34 = !DIGlobalVariableExpression(var: !35, expr: !DIExpression())
!35 = distinct !DIGlobalVariable(name: "ssim_c1", scope: !36, file: !1, line: 490, type: !46, isLocal: true, isDefinition: true)
!36 = distinct !DISubprogram(name: "ssim_end1", scope: !1, file: !1, line: 488, type: !37, scopeLine: 489, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !39)
!37 = !DISubroutineType(types: !38)
!38 = !{!32, !31, !31, !31, !31}
!39 = !{!40, !41, !42, !43, !44, !45}
!40 = !DILocalVariable(name: "s1", arg: 1, scope: !36, file: !1, line: 488, type: !31)
!41 = !DILocalVariable(name: "s2", arg: 2, scope: !36, file: !1, line: 488, type: !31)
!42 = !DILocalVariable(name: "ss", arg: 3, scope: !36, file: !1, line: 488, type: !31)
!43 = !DILocalVariable(name: "s12", arg: 4, scope: !36, file: !1, line: 488, type: !31)
!44 = !DILocalVariable(name: "vars", scope: !36, file: !1, line: 492, type: !31)
!45 = !DILocalVariable(name: "covar", scope: !36, file: !1, line: 493, type: !31)
!46 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !31)
!47 = !DIGlobalVariableExpression(var: !48, expr: !DIExpression())
!48 = distinct !DIGlobalVariable(name: "ssim_c2", scope: !36, file: !1, line: 491, type: !46, isLocal: true, isDefinition: true)
!49 = !{i32 7, !"Dwarf Version", i32 5}
!50 = !{i32 2, !"Debug Info Version", i32 3}
!51 = !{i32 1, !"wchar_size", i32 4}
!52 = !{i32 8, !"PIC Level", i32 2}
!53 = !{i32 7, !"PIE Level", i32 2}
!54 = !{i32 7, !"uwtable", i32 2}
!55 = !{i32 7, !"debug-info-assignment-tracking", i1 true}
!56 = !{!"clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)"}
!57 = distinct !DISubprogram(name: "x264_pixel_ssd_wxh", scope: !1, file: !1, line: 99, type: !58, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !154)
!58 = !DISubroutineType(types: !59)
!59 = !{!60, !63, !73, !31, !73, !31, !31, !31}
!60 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !61, line: 27, baseType: !62)
!61 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "", checksumkind: CSK_MD5, checksum: "55bcbdc3159515ebd91d351a70d505f4")
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !24, line: 44, baseType: !20)
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !64, size: 64)
!64 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_pixel_function_t", file: !4, line: 110, baseType: !65)
!65 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 63, size: 8448, elements: !66)
!66 = !{!67, !79, !80, !81, !82, !86, !87, !88, !89, !96, !102, !103, !107, !112, !113, !121, !125, !126, !127, !128, !129, !139, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153}
!67 = !DIDerivedType(tag: DW_TAG_member, name: "sad", scope: !65, file: !4, line: 65, baseType: !68, size: 448)
!68 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 448, elements: !77)
!69 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_pixel_cmp_t", file: !4, line: 26, baseType: !70)
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!71 = !DISubroutineType(types: !72)
!72 = !{!31, !73, !31, !73, !31}
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!74 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !22, line: 24, baseType: !75)
!75 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !24, line: 38, baseType: !76)
!76 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!77 = !{!78}
!78 = !DISubrange(count: 7)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "ssd", scope: !65, file: !4, line: 66, baseType: !68, size: 448, offset: 448)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "satd", scope: !65, file: !4, line: 67, baseType: !68, size: 448, offset: 896)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "ssim", scope: !65, file: !4, line: 68, baseType: !68, size: 448, offset: 1344)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "sa8d", scope: !65, file: !4, line: 69, baseType: !83, size: 256, offset: 1792)
!83 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 256, elements: !84)
!84 = !{!85}
!85 = !DISubrange(count: 4)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "mbcmp", scope: !65, file: !4, line: 70, baseType: !68, size: 448, offset: 2048)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "mbcmp_unaligned", scope: !65, file: !4, line: 71, baseType: !68, size: 448, offset: 2496)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "fpelcmp", scope: !65, file: !4, line: 72, baseType: !68, size: 448, offset: 2944)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "fpelcmp_x3", scope: !65, file: !4, line: 73, baseType: !90, size: 448, offset: 3392)
!90 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 448, elements: !77)
!91 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_pixel_cmp_x3_t", file: !4, line: 27, baseType: !92)
!92 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64)
!93 = !DISubroutineType(types: !94)
!94 = !{null, !73, !73, !73, !73, !31, !95}
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "fpelcmp_x4", scope: !65, file: !4, line: 74, baseType: !97, size: 448, offset: 3840)
!97 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 448, elements: !77)
!98 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_pixel_cmp_x4_t", file: !4, line: 28, baseType: !99)
!99 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !100, size: 64)
!100 = !DISubroutineType(types: !101)
!101 = !{null, !73, !73, !73, !73, !73, !31, !95}
!102 = !DIDerivedType(tag: DW_TAG_member, name: "sad_aligned", scope: !65, file: !4, line: 75, baseType: !68, size: 448, offset: 4288)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "var2_8x8", scope: !65, file: !4, line: 76, baseType: !104, size: 64, offset: 4736)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 64)
!105 = !DISubroutineType(types: !106)
!106 = !{!31, !73, !31, !73, !31, !95}
!107 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !65, file: !4, line: 78, baseType: !108, size: 256, offset: 4800)
!108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 256, elements: !84)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!110 = !DISubroutineType(types: !111)
!111 = !{!28, !73, !31}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "hadamard_ac", scope: !65, file: !4, line: 79, baseType: !108, size: 256, offset: 5056)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "ssim_4x4x2_core", scope: !65, file: !4, line: 81, baseType: !114, size: 64, offset: 5312)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!115 = !DISubroutineType(types: !116)
!116 = !{null, !117, !31, !117, !31, !119}
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 64)
!118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !74)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 128, elements: !84)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "ssim_end4", scope: !65, file: !4, line: 83, baseType: !122, size: 64, offset: 5376)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64)
!123 = !DISubroutineType(types: !124)
!124 = !{!32, !119, !119, !31}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "sad_x3", scope: !65, file: !4, line: 86, baseType: !90, size: 448, offset: 5440)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "sad_x4", scope: !65, file: !4, line: 87, baseType: !97, size: 448, offset: 5888)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "satd_x3", scope: !65, file: !4, line: 88, baseType: !90, size: 448, offset: 6336)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "satd_x4", scope: !65, file: !4, line: 89, baseType: !97, size: 448, offset: 6784)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "ads", scope: !65, file: !4, line: 93, baseType: !130, size: 448, offset: 7232)
!130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 448, elements: !77)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64)
!132 = !DISubroutineType(types: !133)
!133 = !{!31, !95, !134, !31, !134, !135, !31, !31}
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !61, line: 25, baseType: !137)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !24, line: 39, baseType: !138)
!138 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "intra_mbcmp_x3_16x16", scope: !65, file: !4, line: 98, baseType: !140, size: 64, offset: 7680)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!141 = !DISubroutineType(types: !142)
!142 = !{null, !73, !73, !95}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "intra_satd_x3_16x16", scope: !65, file: !4, line: 99, baseType: !140, size: 64, offset: 7744)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "intra_sad_x3_16x16", scope: !65, file: !4, line: 100, baseType: !140, size: 64, offset: 7808)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "intra_mbcmp_x3_8x8c", scope: !65, file: !4, line: 101, baseType: !140, size: 64, offset: 7872)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "intra_satd_x3_8x8c", scope: !65, file: !4, line: 102, baseType: !140, size: 64, offset: 7936)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "intra_sad_x3_8x8c", scope: !65, file: !4, line: 103, baseType: !140, size: 64, offset: 8000)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "intra_mbcmp_x3_4x4", scope: !65, file: !4, line: 104, baseType: !140, size: 64, offset: 8064)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "intra_satd_x3_4x4", scope: !65, file: !4, line: 105, baseType: !140, size: 64, offset: 8128)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "intra_sad_x3_4x4", scope: !65, file: !4, line: 106, baseType: !140, size: 64, offset: 8192)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "intra_mbcmp_x3_8x8", scope: !65, file: !4, line: 107, baseType: !140, size: 64, offset: 8256)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "intra_sa8d_x3_8x8", scope: !65, file: !4, line: 108, baseType: !140, size: 64, offset: 8320)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "intra_sad_x3_8x8", scope: !65, file: !4, line: 109, baseType: !140, size: 64, offset: 8384)
!154 = !{!155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !169, !172, !178, !181, !187}
!155 = !DILocalVariable(name: "pf", arg: 1, scope: !57, file: !1, line: 99, type: !63)
!156 = !DILocalVariable(name: "pix1", arg: 2, scope: !57, file: !1, line: 99, type: !73)
!157 = !DILocalVariable(name: "i_pix1", arg: 3, scope: !57, file: !1, line: 99, type: !31)
!158 = !DILocalVariable(name: "pix2", arg: 4, scope: !57, file: !1, line: 99, type: !73)
!159 = !DILocalVariable(name: "i_pix2", arg: 5, scope: !57, file: !1, line: 99, type: !31)
!160 = !DILocalVariable(name: "i_width", arg: 6, scope: !57, file: !1, line: 99, type: !31)
!161 = !DILocalVariable(name: "i_height", arg: 7, scope: !57, file: !1, line: 99, type: !31)
!162 = !DILocalVariable(name: "i_ssd", scope: !57, file: !1, line: 101, type: !60)
!163 = !DILocalVariable(name: "y", scope: !57, file: !1, line: 102, type: !31)
!164 = !DILocalVariable(name: "align", scope: !57, file: !1, line: 103, type: !31)
!165 = !DILocalVariable(name: "x", scope: !166, file: !1, line: 109, type: !31)
!166 = distinct !DILexicalBlock(scope: !167, file: !1, line: 108, column: 5)
!167 = distinct !DILexicalBlock(scope: !168, file: !1, line: 107, column: 5)
!168 = distinct !DILexicalBlock(scope: !57, file: !1, line: 107, column: 5)
!169 = !DILocalVariable(name: "x", scope: !170, file: !1, line: 117, type: !31)
!170 = distinct !DILexicalBlock(scope: !171, file: !1, line: 117, column: 9)
!171 = distinct !DILexicalBlock(scope: !57, file: !1, line: 116, column: 9)
!172 = !DILocalVariable(name: "x", scope: !173, file: !1, line: 125, type: !31)
!173 = distinct !DILexicalBlock(scope: !174, file: !1, line: 125, column: 13)
!174 = distinct !DILexicalBlock(scope: !175, file: !1, line: 124, column: 9)
!175 = distinct !DILexicalBlock(scope: !176, file: !1, line: 124, column: 9)
!176 = distinct !DILexicalBlock(scope: !177, file: !1, line: 123, column: 5)
!177 = distinct !DILexicalBlock(scope: !57, file: !1, line: 122, column: 9)
!178 = !DILocalVariable(name: "d", scope: !179, file: !1, line: 126, type: !31)
!179 = distinct !DILexicalBlock(scope: !180, file: !1, line: 126, column: 17)
!180 = distinct !DILexicalBlock(scope: !173, file: !1, line: 125, column: 13)
!181 = !DILocalVariable(name: "x", scope: !182, file: !1, line: 131, type: !31)
!182 = distinct !DILexicalBlock(scope: !183, file: !1, line: 131, column: 13)
!183 = distinct !DILexicalBlock(scope: !184, file: !1, line: 130, column: 9)
!184 = distinct !DILexicalBlock(scope: !185, file: !1, line: 130, column: 9)
!185 = distinct !DILexicalBlock(scope: !186, file: !1, line: 129, column: 5)
!186 = distinct !DILexicalBlock(scope: !57, file: !1, line: 128, column: 9)
!187 = !DILocalVariable(name: "d", scope: !188, file: !1, line: 132, type: !31)
!188 = distinct !DILexicalBlock(scope: !189, file: !1, line: 132, column: 17)
!189 = distinct !DILexicalBlock(scope: !182, file: !1, line: 131, column: 13)
!190 = !DILocation(line: 0, scope: !57)
!191 = !DILocation(line: 107, column: 19, scope: !167)
!192 = !DILocation(line: 107, column: 5, scope: !168)
!193 = !DILocation(line: 103, column: 54, scope: !57)
!194 = !DILocation(line: 103, column: 20, scope: !57)
!195 = !DILocation(line: 103, column: 35, scope: !57)
!196 = !DILocation(line: 103, column: 37, scope: !57)
!197 = !DILocation(line: 103, column: 52, scope: !57)
!198 = !DILocation(line: 103, column: 63, scope: !57)
!199 = !DILocation(line: 103, column: 61, scope: !57)
!200 = !DILocation(line: 103, column: 71, scope: !57)
!201 = !DILocation(line: 103, column: 17, scope: !57)
!202 = !DILocation(line: 0, scope: !166)
!203 = !DILocation(line: 111, column: 13, scope: !204)
!204 = distinct !DILexicalBlock(scope: !205, file: !1, line: 111, column: 13)
!205 = distinct !DILexicalBlock(scope: !166, file: !1, line: 110, column: 13)
!206 = !DILocation(line: 107, column: 36, scope: !167)
!207 = distinct !{!207, !192, !208}
!208 = !DILocation(line: 115, column: 5, scope: !168)
!209 = !DILocation(line: 114, column: 13, scope: !210)
!210 = distinct !DILexicalBlock(scope: !211, file: !1, line: 113, column: 9)
!211 = distinct !DILexicalBlock(scope: !166, file: !1, line: 113, column: 9)
!212 = !DILocation(line: 113, column: 33, scope: !210)
!213 = !DILocation(line: 113, column: 18, scope: !210)
!214 = !DILocation(line: 113, column: 9, scope: !211)
!215 = distinct !{!215, !214, !216}
!216 = !DILocation(line: 114, column: 13, scope: !211)
!217 = !DILocation(line: 112, column: 17, scope: !218)
!218 = distinct !DILexicalBlock(scope: !204, file: !1, line: 111, column: 13)
!219 = !DILocation(line: 111, column: 38, scope: !218)
!220 = !DILocation(line: 111, column: 22, scope: !218)
!221 = distinct !{!221, !203, !222}
!222 = !DILocation(line: 112, column: 17, scope: !204)
!223 = !DILocation(line: 116, column: 21, scope: !171)
!224 = !DILocation(line: 107, scope: !168)
!225 = !DILocation(line: 101, column: 13, scope: !57)
!226 = !DILocation(line: 116, column: 11, scope: !171)
!227 = !DILocation(line: 116, column: 9, scope: !57)
!228 = !DILocation(line: 0, scope: !170)
!229 = !DILocation(line: 117, column: 27, scope: !230)
!230 = distinct !DILexicalBlock(scope: !170, file: !1, line: 117, column: 9)
!231 = !DILocation(line: 117, column: 9, scope: !170)
!232 = !DILocation(line: 118, column: 13, scope: !230)
!233 = !DILocation(line: 117, column: 42, scope: !230)
!234 = distinct !{!234, !231, !235}
!235 = !DILocation(line: 118, column: 13, scope: !170)
!236 = !DILocation(line: 122, column: 17, scope: !177)
!237 = !DILocation(line: 122, column: 9, scope: !57)
!238 = !DILocation(line: 124, column: 23, scope: !174)
!239 = !DILocation(line: 124, column: 9, scope: !175)
!240 = !DILocation(line: 0, scope: !173)
!241 = !DILocation(line: 125, column: 13, scope: !173)
!242 = !DILocation(line: 126, column: 17, scope: !179)
!243 = distinct !{!243, !241, !244, !245, !246}
!244 = !DILocation(line: 126, column: 17, scope: !173)
!245 = !{!"llvm.loop.isvectorized", i32 1}
!246 = !{!"llvm.loop.unroll.runtime.disable"}
!247 = !DILocation(line: 0, scope: !179)
!248 = !DILocation(line: 125, column: 54, scope: !180)
!249 = !DILocation(line: 125, column: 42, scope: !180)
!250 = distinct !{!250, !241, !244, !245}
!251 = !DILocation(line: 124, column: 43, scope: !174)
!252 = distinct !{!252, !239, !253}
!253 = !DILocation(line: 126, column: 17, scope: !175)
!254 = !DILocation(line: 128, column: 18, scope: !186)
!255 = !DILocation(line: 128, column: 9, scope: !57)
!256 = !DILocation(line: 130, column: 27, scope: !184)
!257 = !DILocation(line: 130, column: 35, scope: !183)
!258 = !DILocation(line: 130, column: 9, scope: !184)
!259 = !DILocation(line: 0, scope: !182)
!260 = !DILocation(line: 131, column: 13, scope: !182)
!261 = !DILocation(line: 131, column: 43, scope: !189)
!262 = !DILocation(line: 132, column: 17, scope: !188)
!263 = distinct !{!263, !260, !264, !245, !246}
!264 = !DILocation(line: 132, column: 17, scope: !182)
!265 = !DILocation(line: 0, scope: !188)
!266 = distinct !{!266, !267}
!267 = !{!"llvm.loop.unroll.disable"}
!268 = !DILocation(line: 131, column: 31, scope: !189)
!269 = distinct !{!269, !260, !264, !245}
!270 = !DILocation(line: 130, column: 48, scope: !183)
!271 = distinct !{!271, !258, !272}
!272 = !DILocation(line: 132, column: 17, scope: !184)
!273 = !DILocation(line: 136, column: 5, scope: !57)
!274 = distinct !DISubprogram(name: "x264_pixel_ssim_wxh", scope: !1, file: !1, line: 509, type: !275, scopeLine: 513, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !278)
!275 = !DISubroutineType(types: !276)
!276 = !{!32, !63, !73, !31, !73, !31, !31, !31, !277}
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!278 = !{!279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !293, !300, !302}
!279 = !DILocalVariable(name: "pf", arg: 1, scope: !274, file: !1, line: 509, type: !63)
!280 = !DILocalVariable(name: "pix1", arg: 2, scope: !274, file: !1, line: 510, type: !73)
!281 = !DILocalVariable(name: "stride1", arg: 3, scope: !274, file: !1, line: 510, type: !31)
!282 = !DILocalVariable(name: "pix2", arg: 4, scope: !274, file: !1, line: 511, type: !73)
!283 = !DILocalVariable(name: "stride2", arg: 5, scope: !274, file: !1, line: 511, type: !31)
!284 = !DILocalVariable(name: "width", arg: 6, scope: !274, file: !1, line: 512, type: !31)
!285 = !DILocalVariable(name: "height", arg: 7, scope: !274, file: !1, line: 512, type: !31)
!286 = !DILocalVariable(name: "buf", arg: 8, scope: !274, file: !1, line: 512, type: !277)
!287 = !DILocalVariable(name: "z", scope: !274, file: !1, line: 514, type: !31)
!288 = !DILocalVariable(name: "ssim", scope: !274, file: !1, line: 515, type: !32)
!289 = !DILocalVariable(name: "sum0", scope: !274, file: !1, line: 516, type: !119)
!290 = !DILocalVariable(name: "sum1", scope: !274, file: !1, line: 517, type: !119)
!291 = !DILocalVariable(name: "y", scope: !292, file: !1, line: 520, type: !31)
!292 = distinct !DILexicalBlock(scope: !274, file: !1, line: 520, column: 5)
!293 = !DILocalVariable(name: "t", scope: !294, file: !1, line: 524, type: !277)
!294 = distinct !DILexicalBlock(scope: !295, file: !1, line: 524, column: 13)
!295 = distinct !DILexicalBlock(scope: !296, file: !1, line: 523, column: 9)
!296 = distinct !DILexicalBlock(scope: !297, file: !1, line: 522, column: 9)
!297 = distinct !DILexicalBlock(scope: !298, file: !1, line: 522, column: 9)
!298 = distinct !DILexicalBlock(scope: !299, file: !1, line: 521, column: 5)
!299 = distinct !DILexicalBlock(scope: !292, file: !1, line: 520, column: 5)
!300 = !DILocalVariable(name: "x", scope: !301, file: !1, line: 525, type: !31)
!301 = distinct !DILexicalBlock(scope: !295, file: !1, line: 525, column: 13)
!302 = !DILocalVariable(name: "x", scope: !303, file: !1, line: 528, type: !31)
!303 = distinct !DILexicalBlock(scope: !298, file: !1, line: 528, column: 9)
!304 = !DILocation(line: 0, scope: !274)
!305 = !DILocation(line: 517, column: 34, scope: !274)
!306 = !DILocation(line: 517, column: 27, scope: !274)
!307 = !DILocation(line: 517, column: 36, scope: !274)
!308 = !DILocation(line: 518, column: 11, scope: !274)
!309 = !DILocation(line: 519, column: 12, scope: !274)
!310 = !DILocation(line: 0, scope: !292)
!311 = !DILocation(line: 520, column: 23, scope: !299)
!312 = !DILocation(line: 520, column: 5, scope: !292)
!313 = !DILocation(line: 522, column: 18, scope: !296)
!314 = !DILocation(line: 522, column: 9, scope: !297)
!315 = !DILocation(line: 0, scope: !303)
!316 = !DILocation(line: 529, column: 25, scope: !317)
!317 = distinct !DILexicalBlock(scope: !303, file: !1, line: 528, column: 9)
!318 = !DILocation(line: 529, column: 40, scope: !317)
!319 = !DILocation(line: 529, column: 48, scope: !317)
!320 = !DILocation(line: 529, column: 52, scope: !317)
!321 = !DILocation(line: 529, column: 21, scope: !317)
!322 = !DILocation(line: 529, column: 18, scope: !317)
!323 = !DILocation(line: 528, column: 40, scope: !317)
!324 = !DILocation(line: 528, column: 27, scope: !317)
!325 = !DILocation(line: 528, column: 9, scope: !303)
!326 = distinct !{!326, !325, !327}
!327 = !DILocation(line: 529, column: 74, scope: !303)
!328 = !DILocation(line: 0, scope: !301)
!329 = !DILocation(line: 525, column: 13, scope: !301)
!330 = !DILocation(line: 526, column: 21, scope: !331)
!331 = distinct !DILexicalBlock(scope: !301, file: !1, line: 525, column: 13)
!332 = !DILocation(line: 526, column: 48, scope: !331)
!333 = !DILocation(line: 526, column: 45, scope: !331)
!334 = !DILocation(line: 526, column: 39, scope: !331)
!335 = !DILocation(line: 526, column: 81, scope: !331)
!336 = !DILocation(line: 526, column: 78, scope: !331)
!337 = !DILocation(line: 526, column: 72, scope: !331)
!338 = !DILocation(line: 526, column: 105, scope: !331)
!339 = !DILocation(line: 526, column: 17, scope: !331)
!340 = !DILocation(line: 525, column: 41, scope: !331)
!341 = !DILocation(line: 525, column: 31, scope: !331)
!342 = distinct !{!342, !329, !343}
!343 = !DILocation(line: 526, column: 113, scope: !301)
!344 = !DILocation(line: 522, column: 25, scope: !296)
!345 = distinct !{!345, !314, !346}
!346 = !DILocation(line: 527, column: 9, scope: !297)
!347 = !DILocation(line: 520, column: 34, scope: !299)
!348 = distinct !{!348, !312, !349}
!349 = !DILocation(line: 530, column: 5, scope: !292)
!350 = !DILocation(line: 515, column: 11, scope: !274)
!351 = !DILocation(line: 531, column: 5, scope: !274)
!352 = distinct !DISubprogram(name: "x264_pixel_init", scope: !1, file: !1, line: 588, type: !353, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !355)
!353 = !DISubroutineType(types: !354)
!354 = !{null, !31, !63}
!355 = !{!356, !357}
!356 = !DILocalVariable(name: "cpu", arg: 1, scope: !352, file: !1, line: 588, type: !31)
!357 = !DILocalVariable(name: "pixf", arg: 2, scope: !352, file: !1, line: 588, type: !63)
!358 = !DILocation(line: 0, scope: !352)
!359 = !DILocation(line: 590, column: 5, scope: !352)
!360 = !DILocation(line: 619, column: 5, scope: !352)
!361 = !DILocation(line: 620, column: 5, scope: !352)
!362 = !DILocation(line: 621, column: 5, scope: !352)
!363 = !DILocation(line: 622, column: 5, scope: !352)
!364 = !DILocation(line: 623, column: 5, scope: !352)
!365 = !DILocation(line: 624, column: 5, scope: !352)
!366 = !DILocation(line: 625, column: 5, scope: !352)
!367 = !DILocation(line: 626, column: 5, scope: !352)
!368 = !DILocation(line: 627, column: 5, scope: !352)
!369 = !DILocation(line: 628, column: 5, scope: !352)
!370 = !DILocation(line: 630, column: 11, scope: !352)
!371 = !DILocation(line: 630, column: 29, scope: !352)
!372 = !DILocation(line: 631, column: 5, scope: !352)
!373 = !DILocation(line: 631, column: 29, scope: !352)
!374 = !DILocation(line: 632, column: 11, scope: !352)
!375 = !DILocation(line: 632, column: 28, scope: !352)
!376 = !DILocation(line: 633, column: 5, scope: !352)
!377 = !DILocation(line: 633, column: 28, scope: !352)
!378 = !DILocation(line: 635, column: 11, scope: !352)
!379 = !DILocation(line: 635, column: 27, scope: !352)
!380 = !DILocation(line: 636, column: 11, scope: !352)
!381 = !DILocation(line: 636, column: 21, scope: !352)
!382 = !DILocation(line: 637, column: 11, scope: !352)
!383 = !DILocation(line: 637, column: 20, scope: !352)
!384 = !DILocation(line: 875, column: 5, scope: !352)
!385 = !DILocation(line: 875, column: 26, scope: !352)
!386 = !DILocation(line: 874, column: 5, scope: !352)
!387 = !DILocation(line: 874, column: 26, scope: !352)
!388 = !DILocation(line: 873, column: 5, scope: !352)
!389 = !DILocation(line: 873, column: 27, scope: !352)
!390 = !DILocation(line: 876, column: 5, scope: !352)
!391 = !DILocation(line: 876, column: 26, scope: !352)
!392 = !DILocation(line: 877, column: 1, scope: !352)
!393 = distinct !DISubprogram(name: "x264_pixel_sad_16x16", scope: !1, file: !1, line: 61, type: !71, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !394)
!394 = !{!395, !396, !397, !398, !399, !400, !402}
!395 = !DILocalVariable(name: "pix1", arg: 1, scope: !393, file: !1, line: 61, type: !73)
!396 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !393, file: !1, line: 61, type: !31)
!397 = !DILocalVariable(name: "pix2", arg: 3, scope: !393, file: !1, line: 61, type: !73)
!398 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !393, file: !1, line: 61, type: !31)
!399 = !DILocalVariable(name: "i_sum", scope: !393, file: !1, line: 61, type: !31)
!400 = !DILocalVariable(name: "y", scope: !401, file: !1, line: 61, type: !31)
!401 = distinct !DILexicalBlock(scope: !393, file: !1, line: 61, column: 1)
!402 = !DILocalVariable(name: "x", scope: !403, file: !1, line: 61, type: !31)
!403 = distinct !DILexicalBlock(scope: !404, file: !1, line: 61, column: 1)
!404 = distinct !DILexicalBlock(scope: !405, file: !1, line: 61, column: 1)
!405 = distinct !DILexicalBlock(scope: !401, file: !1, line: 61, column: 1)
!406 = !DILocation(line: 0, scope: !393)
!407 = !DILocation(line: 0, scope: !401)
!408 = !DILocation(line: 61, column: 1, scope: !401)
!409 = !DILocation(line: 0, scope: !403)
!410 = !DILocation(line: 61, column: 1, scope: !411)
!411 = distinct !DILexicalBlock(scope: !412, file: !1, line: 61, column: 1)
!412 = distinct !DILexicalBlock(scope: !403, file: !1, line: 61, column: 1)
!413 = !DILocation(line: 61, column: 1, scope: !404)
!414 = !DILocation(line: 61, column: 1, scope: !405)
!415 = distinct !{!415, !408, !408}
!416 = !DILocation(line: 61, column: 1, scope: !393)
!417 = distinct !DISubprogram(name: "x264_pixel_sad_16x8", scope: !1, file: !1, line: 62, type: !71, scopeLine: 62, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !418)
!418 = !{!419, !420, !421, !422, !423, !424, !426}
!419 = !DILocalVariable(name: "pix1", arg: 1, scope: !417, file: !1, line: 62, type: !73)
!420 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !417, file: !1, line: 62, type: !31)
!421 = !DILocalVariable(name: "pix2", arg: 3, scope: !417, file: !1, line: 62, type: !73)
!422 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !417, file: !1, line: 62, type: !31)
!423 = !DILocalVariable(name: "i_sum", scope: !417, file: !1, line: 62, type: !31)
!424 = !DILocalVariable(name: "y", scope: !425, file: !1, line: 62, type: !31)
!425 = distinct !DILexicalBlock(scope: !417, file: !1, line: 62, column: 1)
!426 = !DILocalVariable(name: "x", scope: !427, file: !1, line: 62, type: !31)
!427 = distinct !DILexicalBlock(scope: !428, file: !1, line: 62, column: 1)
!428 = distinct !DILexicalBlock(scope: !429, file: !1, line: 62, column: 1)
!429 = distinct !DILexicalBlock(scope: !425, file: !1, line: 62, column: 1)
!430 = !DILocation(line: 0, scope: !417)
!431 = !DILocation(line: 0, scope: !425)
!432 = !DILocation(line: 0, scope: !427)
!433 = !DILocation(line: 62, column: 1, scope: !434)
!434 = distinct !DILexicalBlock(scope: !435, file: !1, line: 62, column: 1)
!435 = distinct !DILexicalBlock(scope: !427, file: !1, line: 62, column: 1)
!436 = !DILocation(line: 62, column: 1, scope: !428)
!437 = !DILocation(line: 62, column: 1, scope: !417)
!438 = distinct !DISubprogram(name: "x264_pixel_sad_8x16", scope: !1, file: !1, line: 63, type: !71, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !439)
!439 = !{!440, !441, !442, !443, !444, !445, !447}
!440 = !DILocalVariable(name: "pix1", arg: 1, scope: !438, file: !1, line: 63, type: !73)
!441 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !438, file: !1, line: 63, type: !31)
!442 = !DILocalVariable(name: "pix2", arg: 3, scope: !438, file: !1, line: 63, type: !73)
!443 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !438, file: !1, line: 63, type: !31)
!444 = !DILocalVariable(name: "i_sum", scope: !438, file: !1, line: 63, type: !31)
!445 = !DILocalVariable(name: "y", scope: !446, file: !1, line: 63, type: !31)
!446 = distinct !DILexicalBlock(scope: !438, file: !1, line: 63, column: 1)
!447 = !DILocalVariable(name: "x", scope: !448, file: !1, line: 63, type: !31)
!448 = distinct !DILexicalBlock(scope: !449, file: !1, line: 63, column: 1)
!449 = distinct !DILexicalBlock(scope: !450, file: !1, line: 63, column: 1)
!450 = distinct !DILexicalBlock(scope: !446, file: !1, line: 63, column: 1)
!451 = !DILocation(line: 0, scope: !438)
!452 = !DILocation(line: 0, scope: !446)
!453 = !DILocation(line: 0, scope: !448)
!454 = !DILocation(line: 63, column: 1, scope: !455)
!455 = distinct !DILexicalBlock(scope: !456, file: !1, line: 63, column: 1)
!456 = distinct !DILexicalBlock(scope: !448, file: !1, line: 63, column: 1)
!457 = !DILocation(line: 63, column: 1, scope: !449)
!458 = !DILocation(line: 63, column: 1, scope: !438)
!459 = distinct !DISubprogram(name: "x264_pixel_sad_8x8", scope: !1, file: !1, line: 64, type: !71, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !468}
!461 = !DILocalVariable(name: "pix1", arg: 1, scope: !459, file: !1, line: 64, type: !73)
!462 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !459, file: !1, line: 64, type: !31)
!463 = !DILocalVariable(name: "pix2", arg: 3, scope: !459, file: !1, line: 64, type: !73)
!464 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !459, file: !1, line: 64, type: !31)
!465 = !DILocalVariable(name: "i_sum", scope: !459, file: !1, line: 64, type: !31)
!466 = !DILocalVariable(name: "y", scope: !467, file: !1, line: 64, type: !31)
!467 = distinct !DILexicalBlock(scope: !459, file: !1, line: 64, column: 1)
!468 = !DILocalVariable(name: "x", scope: !469, file: !1, line: 64, type: !31)
!469 = distinct !DILexicalBlock(scope: !470, file: !1, line: 64, column: 1)
!470 = distinct !DILexicalBlock(scope: !471, file: !1, line: 64, column: 1)
!471 = distinct !DILexicalBlock(scope: !467, file: !1, line: 64, column: 1)
!472 = !DILocation(line: 0, scope: !459)
!473 = !DILocation(line: 0, scope: !467)
!474 = !DILocation(line: 0, scope: !469)
!475 = !DILocation(line: 64, column: 1, scope: !476)
!476 = distinct !DILexicalBlock(scope: !477, file: !1, line: 64, column: 1)
!477 = distinct !DILexicalBlock(scope: !469, file: !1, line: 64, column: 1)
!478 = !DILocation(line: 64, column: 1, scope: !470)
!479 = !DILocation(line: 64, column: 1, scope: !459)
!480 = distinct !DISubprogram(name: "x264_pixel_sad_8x4", scope: !1, file: !1, line: 65, type: !71, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !481)
!481 = !{!482, !483, !484, !485, !486, !487, !489}
!482 = !DILocalVariable(name: "pix1", arg: 1, scope: !480, file: !1, line: 65, type: !73)
!483 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !480, file: !1, line: 65, type: !31)
!484 = !DILocalVariable(name: "pix2", arg: 3, scope: !480, file: !1, line: 65, type: !73)
!485 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !480, file: !1, line: 65, type: !31)
!486 = !DILocalVariable(name: "i_sum", scope: !480, file: !1, line: 65, type: !31)
!487 = !DILocalVariable(name: "y", scope: !488, file: !1, line: 65, type: !31)
!488 = distinct !DILexicalBlock(scope: !480, file: !1, line: 65, column: 1)
!489 = !DILocalVariable(name: "x", scope: !490, file: !1, line: 65, type: !31)
!490 = distinct !DILexicalBlock(scope: !491, file: !1, line: 65, column: 1)
!491 = distinct !DILexicalBlock(scope: !492, file: !1, line: 65, column: 1)
!492 = distinct !DILexicalBlock(scope: !488, file: !1, line: 65, column: 1)
!493 = !DILocation(line: 0, scope: !480)
!494 = !DILocation(line: 0, scope: !488)
!495 = !DILocation(line: 0, scope: !490)
!496 = !DILocation(line: 65, column: 1, scope: !497)
!497 = distinct !DILexicalBlock(scope: !498, file: !1, line: 65, column: 1)
!498 = distinct !DILexicalBlock(scope: !490, file: !1, line: 65, column: 1)
!499 = !DILocation(line: 65, column: 1, scope: !491)
!500 = !DILocation(line: 65, column: 1, scope: !480)
!501 = distinct !DISubprogram(name: "x264_pixel_sad_4x8", scope: !1, file: !1, line: 66, type: !71, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !502)
!502 = !{!503, !504, !505, !506, !507, !508, !510}
!503 = !DILocalVariable(name: "pix1", arg: 1, scope: !501, file: !1, line: 66, type: !73)
!504 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !501, file: !1, line: 66, type: !31)
!505 = !DILocalVariable(name: "pix2", arg: 3, scope: !501, file: !1, line: 66, type: !73)
!506 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !501, file: !1, line: 66, type: !31)
!507 = !DILocalVariable(name: "i_sum", scope: !501, file: !1, line: 66, type: !31)
!508 = !DILocalVariable(name: "y", scope: !509, file: !1, line: 66, type: !31)
!509 = distinct !DILexicalBlock(scope: !501, file: !1, line: 66, column: 1)
!510 = !DILocalVariable(name: "x", scope: !511, file: !1, line: 66, type: !31)
!511 = distinct !DILexicalBlock(scope: !512, file: !1, line: 66, column: 1)
!512 = distinct !DILexicalBlock(scope: !513, file: !1, line: 66, column: 1)
!513 = distinct !DILexicalBlock(scope: !509, file: !1, line: 66, column: 1)
!514 = !DILocation(line: 0, scope: !501)
!515 = !DILocation(line: 0, scope: !509)
!516 = !DILocation(line: 0, scope: !511)
!517 = !DILocation(line: 66, column: 1, scope: !518)
!518 = distinct !DILexicalBlock(scope: !519, file: !1, line: 66, column: 1)
!519 = distinct !DILexicalBlock(scope: !511, file: !1, line: 66, column: 1)
!520 = !DILocation(line: 66, column: 1, scope: !512)
!521 = !DILocation(line: 66, column: 1, scope: !501)
!522 = distinct !DISubprogram(name: "x264_pixel_sad_4x4", scope: !1, file: !1, line: 67, type: !71, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !523)
!523 = !{!524, !525, !526, !527, !528, !529, !531}
!524 = !DILocalVariable(name: "pix1", arg: 1, scope: !522, file: !1, line: 67, type: !73)
!525 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !522, file: !1, line: 67, type: !31)
!526 = !DILocalVariable(name: "pix2", arg: 3, scope: !522, file: !1, line: 67, type: !73)
!527 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !522, file: !1, line: 67, type: !31)
!528 = !DILocalVariable(name: "i_sum", scope: !522, file: !1, line: 67, type: !31)
!529 = !DILocalVariable(name: "y", scope: !530, file: !1, line: 67, type: !31)
!530 = distinct !DILexicalBlock(scope: !522, file: !1, line: 67, column: 1)
!531 = !DILocalVariable(name: "x", scope: !532, file: !1, line: 67, type: !31)
!532 = distinct !DILexicalBlock(scope: !533, file: !1, line: 67, column: 1)
!533 = distinct !DILexicalBlock(scope: !534, file: !1, line: 67, column: 1)
!534 = distinct !DILexicalBlock(scope: !530, file: !1, line: 67, column: 1)
!535 = !DILocation(line: 0, scope: !522)
!536 = !DILocation(line: 0, scope: !530)
!537 = !DILocation(line: 0, scope: !532)
!538 = !DILocation(line: 67, column: 1, scope: !539)
!539 = distinct !DILexicalBlock(scope: !540, file: !1, line: 67, column: 1)
!540 = distinct !DILexicalBlock(scope: !532, file: !1, line: 67, column: 1)
!541 = !DILocation(line: 67, column: 1, scope: !533)
!542 = !DILocation(line: 67, column: 1, scope: !522)
!543 = distinct !DISubprogram(name: "x264_pixel_sad_x3_16x16", scope: !1, file: !1, line: 401, type: !93, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !544)
!544 = !{!545, !546, !547, !548, !549, !550}
!545 = !DILocalVariable(name: "fenc", arg: 1, scope: !543, file: !1, line: 401, type: !73)
!546 = !DILocalVariable(name: "pix0", arg: 2, scope: !543, file: !1, line: 401, type: !73)
!547 = !DILocalVariable(name: "pix1", arg: 3, scope: !543, file: !1, line: 401, type: !73)
!548 = !DILocalVariable(name: "pix2", arg: 4, scope: !543, file: !1, line: 401, type: !73)
!549 = !DILocalVariable(name: "i_stride", arg: 5, scope: !543, file: !1, line: 401, type: !31)
!550 = !DILocalVariable(name: "scores", arg: 6, scope: !543, file: !1, line: 401, type: !95)
!551 = !DILocation(line: 0, scope: !543)
!552 = !DILocation(line: 401, column: 1, scope: !543)
!553 = distinct !DISubprogram(name: "x264_pixel_sad_x3_16x8", scope: !1, file: !1, line: 402, type: !93, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !554)
!554 = !{!555, !556, !557, !558, !559, !560}
!555 = !DILocalVariable(name: "fenc", arg: 1, scope: !553, file: !1, line: 402, type: !73)
!556 = !DILocalVariable(name: "pix0", arg: 2, scope: !553, file: !1, line: 402, type: !73)
!557 = !DILocalVariable(name: "pix1", arg: 3, scope: !553, file: !1, line: 402, type: !73)
!558 = !DILocalVariable(name: "pix2", arg: 4, scope: !553, file: !1, line: 402, type: !73)
!559 = !DILocalVariable(name: "i_stride", arg: 5, scope: !553, file: !1, line: 402, type: !31)
!560 = !DILocalVariable(name: "scores", arg: 6, scope: !553, file: !1, line: 402, type: !95)
!561 = !DILocation(line: 0, scope: !553)
!562 = !DILocation(line: 402, column: 1, scope: !553)
!563 = distinct !DISubprogram(name: "x264_pixel_sad_x3_8x16", scope: !1, file: !1, line: 403, type: !93, scopeLine: 403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !564)
!564 = !{!565, !566, !567, !568, !569, !570}
!565 = !DILocalVariable(name: "fenc", arg: 1, scope: !563, file: !1, line: 403, type: !73)
!566 = !DILocalVariable(name: "pix0", arg: 2, scope: !563, file: !1, line: 403, type: !73)
!567 = !DILocalVariable(name: "pix1", arg: 3, scope: !563, file: !1, line: 403, type: !73)
!568 = !DILocalVariable(name: "pix2", arg: 4, scope: !563, file: !1, line: 403, type: !73)
!569 = !DILocalVariable(name: "i_stride", arg: 5, scope: !563, file: !1, line: 403, type: !31)
!570 = !DILocalVariable(name: "scores", arg: 6, scope: !563, file: !1, line: 403, type: !95)
!571 = !DILocation(line: 0, scope: !563)
!572 = !DILocation(line: 0, scope: !438, inlinedAt: !573)
!573 = distinct !DILocation(line: 403, column: 1, scope: !563)
!574 = !DILocation(line: 0, scope: !446, inlinedAt: !573)
!575 = !DILocation(line: 0, scope: !448, inlinedAt: !573)
!576 = !DILocation(line: 63, column: 1, scope: !455, inlinedAt: !573)
!577 = !DILocation(line: 63, column: 1, scope: !449, inlinedAt: !573)
!578 = !DILocation(line: 403, column: 1, scope: !563)
!579 = !DILocation(line: 0, scope: !438, inlinedAt: !580)
!580 = distinct !DILocation(line: 403, column: 1, scope: !563)
!581 = !DILocation(line: 0, scope: !446, inlinedAt: !580)
!582 = !DILocation(line: 0, scope: !448, inlinedAt: !580)
!583 = !DILocation(line: 63, column: 1, scope: !455, inlinedAt: !580)
!584 = !DILocation(line: 63, column: 1, scope: !449, inlinedAt: !580)
!585 = !DILocation(line: 0, scope: !438, inlinedAt: !586)
!586 = distinct !DILocation(line: 403, column: 1, scope: !563)
!587 = !DILocation(line: 0, scope: !446, inlinedAt: !586)
!588 = !DILocation(line: 0, scope: !448, inlinedAt: !586)
!589 = !DILocation(line: 63, column: 1, scope: !455, inlinedAt: !586)
!590 = !DILocation(line: 63, column: 1, scope: !449, inlinedAt: !586)
!591 = distinct !DISubprogram(name: "x264_pixel_sad_x3_8x8", scope: !1, file: !1, line: 404, type: !93, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !592)
!592 = !{!593, !594, !595, !596, !597, !598}
!593 = !DILocalVariable(name: "fenc", arg: 1, scope: !591, file: !1, line: 404, type: !73)
!594 = !DILocalVariable(name: "pix0", arg: 2, scope: !591, file: !1, line: 404, type: !73)
!595 = !DILocalVariable(name: "pix1", arg: 3, scope: !591, file: !1, line: 404, type: !73)
!596 = !DILocalVariable(name: "pix2", arg: 4, scope: !591, file: !1, line: 404, type: !73)
!597 = !DILocalVariable(name: "i_stride", arg: 5, scope: !591, file: !1, line: 404, type: !31)
!598 = !DILocalVariable(name: "scores", arg: 6, scope: !591, file: !1, line: 404, type: !95)
!599 = !DILocation(line: 0, scope: !591)
!600 = !DILocation(line: 0, scope: !459, inlinedAt: !601)
!601 = distinct !DILocation(line: 404, column: 1, scope: !591)
!602 = !DILocation(line: 0, scope: !467, inlinedAt: !601)
!603 = !DILocation(line: 0, scope: !469, inlinedAt: !601)
!604 = !DILocation(line: 64, column: 1, scope: !476, inlinedAt: !601)
!605 = !DILocation(line: 64, column: 1, scope: !470, inlinedAt: !601)
!606 = !DILocation(line: 404, column: 1, scope: !591)
!607 = !DILocation(line: 0, scope: !459, inlinedAt: !608)
!608 = distinct !DILocation(line: 404, column: 1, scope: !591)
!609 = !DILocation(line: 0, scope: !467, inlinedAt: !608)
!610 = !DILocation(line: 0, scope: !469, inlinedAt: !608)
!611 = !DILocation(line: 64, column: 1, scope: !476, inlinedAt: !608)
!612 = !DILocation(line: 64, column: 1, scope: !470, inlinedAt: !608)
!613 = !DILocation(line: 0, scope: !459, inlinedAt: !614)
!614 = distinct !DILocation(line: 404, column: 1, scope: !591)
!615 = !DILocation(line: 0, scope: !467, inlinedAt: !614)
!616 = !DILocation(line: 0, scope: !469, inlinedAt: !614)
!617 = !DILocation(line: 64, column: 1, scope: !476, inlinedAt: !614)
!618 = !DILocation(line: 64, column: 1, scope: !470, inlinedAt: !614)
!619 = distinct !DISubprogram(name: "x264_pixel_sad_x3_8x4", scope: !1, file: !1, line: 405, type: !93, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !620)
!620 = !{!621, !622, !623, !624, !625, !626}
!621 = !DILocalVariable(name: "fenc", arg: 1, scope: !619, file: !1, line: 405, type: !73)
!622 = !DILocalVariable(name: "pix0", arg: 2, scope: !619, file: !1, line: 405, type: !73)
!623 = !DILocalVariable(name: "pix1", arg: 3, scope: !619, file: !1, line: 405, type: !73)
!624 = !DILocalVariable(name: "pix2", arg: 4, scope: !619, file: !1, line: 405, type: !73)
!625 = !DILocalVariable(name: "i_stride", arg: 5, scope: !619, file: !1, line: 405, type: !31)
!626 = !DILocalVariable(name: "scores", arg: 6, scope: !619, file: !1, line: 405, type: !95)
!627 = !DILocation(line: 0, scope: !619)
!628 = !DILocation(line: 405, column: 1, scope: !619)
!629 = distinct !DISubprogram(name: "x264_pixel_sad_x3_4x8", scope: !1, file: !1, line: 406, type: !93, scopeLine: 406, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !630)
!630 = !{!631, !632, !633, !634, !635, !636}
!631 = !DILocalVariable(name: "fenc", arg: 1, scope: !629, file: !1, line: 406, type: !73)
!632 = !DILocalVariable(name: "pix0", arg: 2, scope: !629, file: !1, line: 406, type: !73)
!633 = !DILocalVariable(name: "pix1", arg: 3, scope: !629, file: !1, line: 406, type: !73)
!634 = !DILocalVariable(name: "pix2", arg: 4, scope: !629, file: !1, line: 406, type: !73)
!635 = !DILocalVariable(name: "i_stride", arg: 5, scope: !629, file: !1, line: 406, type: !31)
!636 = !DILocalVariable(name: "scores", arg: 6, scope: !629, file: !1, line: 406, type: !95)
!637 = !DILocation(line: 0, scope: !629)
!638 = !DILocation(line: 406, column: 1, scope: !629)
!639 = distinct !DISubprogram(name: "x264_pixel_sad_x3_4x4", scope: !1, file: !1, line: 407, type: !93, scopeLine: 407, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !640)
!640 = !{!641, !642, !643, !644, !645, !646}
!641 = !DILocalVariable(name: "fenc", arg: 1, scope: !639, file: !1, line: 407, type: !73)
!642 = !DILocalVariable(name: "pix0", arg: 2, scope: !639, file: !1, line: 407, type: !73)
!643 = !DILocalVariable(name: "pix1", arg: 3, scope: !639, file: !1, line: 407, type: !73)
!644 = !DILocalVariable(name: "pix2", arg: 4, scope: !639, file: !1, line: 407, type: !73)
!645 = !DILocalVariable(name: "i_stride", arg: 5, scope: !639, file: !1, line: 407, type: !31)
!646 = !DILocalVariable(name: "scores", arg: 6, scope: !639, file: !1, line: 407, type: !95)
!647 = !DILocation(line: 0, scope: !639)
!648 = !DILocation(line: 0, scope: !522, inlinedAt: !649)
!649 = distinct !DILocation(line: 407, column: 1, scope: !639)
!650 = !DILocation(line: 0, scope: !530, inlinedAt: !649)
!651 = !DILocation(line: 0, scope: !532, inlinedAt: !649)
!652 = !DILocation(line: 67, column: 1, scope: !539, inlinedAt: !649)
!653 = !DILocation(line: 67, column: 1, scope: !533, inlinedAt: !649)
!654 = !DILocation(line: 407, column: 1, scope: !639)
!655 = !DILocation(line: 0, scope: !522, inlinedAt: !656)
!656 = distinct !DILocation(line: 407, column: 1, scope: !639)
!657 = !DILocation(line: 0, scope: !530, inlinedAt: !656)
!658 = !DILocation(line: 0, scope: !532, inlinedAt: !656)
!659 = !DILocation(line: 67, column: 1, scope: !539, inlinedAt: !656)
!660 = !DILocation(line: 67, column: 1, scope: !533, inlinedAt: !656)
!661 = !DILocation(line: 0, scope: !522, inlinedAt: !662)
!662 = distinct !DILocation(line: 407, column: 1, scope: !639)
!663 = !DILocation(line: 0, scope: !530, inlinedAt: !662)
!664 = !DILocation(line: 0, scope: !532, inlinedAt: !662)
!665 = !DILocation(line: 67, column: 1, scope: !539, inlinedAt: !662)
!666 = !DILocation(line: 67, column: 1, scope: !533, inlinedAt: !662)
!667 = distinct !DISubprogram(name: "x264_pixel_sad_x4_16x16", scope: !1, file: !1, line: 401, type: !100, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !668)
!668 = !{!669, !670, !671, !672, !673, !674, !675}
!669 = !DILocalVariable(name: "fenc", arg: 1, scope: !667, file: !1, line: 401, type: !73)
!670 = !DILocalVariable(name: "pix0", arg: 2, scope: !667, file: !1, line: 401, type: !73)
!671 = !DILocalVariable(name: "pix1", arg: 3, scope: !667, file: !1, line: 401, type: !73)
!672 = !DILocalVariable(name: "pix2", arg: 4, scope: !667, file: !1, line: 401, type: !73)
!673 = !DILocalVariable(name: "pix3", arg: 5, scope: !667, file: !1, line: 401, type: !73)
!674 = !DILocalVariable(name: "i_stride", arg: 6, scope: !667, file: !1, line: 401, type: !31)
!675 = !DILocalVariable(name: "scores", arg: 7, scope: !667, file: !1, line: 401, type: !95)
!676 = !DILocation(line: 0, scope: !667)
!677 = !DILocation(line: 401, column: 1, scope: !667)
!678 = distinct !DISubprogram(name: "x264_pixel_sad_x4_16x8", scope: !1, file: !1, line: 402, type: !100, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !679)
!679 = !{!680, !681, !682, !683, !684, !685, !686}
!680 = !DILocalVariable(name: "fenc", arg: 1, scope: !678, file: !1, line: 402, type: !73)
!681 = !DILocalVariable(name: "pix0", arg: 2, scope: !678, file: !1, line: 402, type: !73)
!682 = !DILocalVariable(name: "pix1", arg: 3, scope: !678, file: !1, line: 402, type: !73)
!683 = !DILocalVariable(name: "pix2", arg: 4, scope: !678, file: !1, line: 402, type: !73)
!684 = !DILocalVariable(name: "pix3", arg: 5, scope: !678, file: !1, line: 402, type: !73)
!685 = !DILocalVariable(name: "i_stride", arg: 6, scope: !678, file: !1, line: 402, type: !31)
!686 = !DILocalVariable(name: "scores", arg: 7, scope: !678, file: !1, line: 402, type: !95)
!687 = !DILocation(line: 0, scope: !678)
!688 = !DILocation(line: 402, column: 1, scope: !678)
!689 = distinct !DISubprogram(name: "x264_pixel_sad_x4_8x16", scope: !1, file: !1, line: 403, type: !100, scopeLine: 403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !690)
!690 = !{!691, !692, !693, !694, !695, !696, !697}
!691 = !DILocalVariable(name: "fenc", arg: 1, scope: !689, file: !1, line: 403, type: !73)
!692 = !DILocalVariable(name: "pix0", arg: 2, scope: !689, file: !1, line: 403, type: !73)
!693 = !DILocalVariable(name: "pix1", arg: 3, scope: !689, file: !1, line: 403, type: !73)
!694 = !DILocalVariable(name: "pix2", arg: 4, scope: !689, file: !1, line: 403, type: !73)
!695 = !DILocalVariable(name: "pix3", arg: 5, scope: !689, file: !1, line: 403, type: !73)
!696 = !DILocalVariable(name: "i_stride", arg: 6, scope: !689, file: !1, line: 403, type: !31)
!697 = !DILocalVariable(name: "scores", arg: 7, scope: !689, file: !1, line: 403, type: !95)
!698 = !DILocation(line: 0, scope: !689)
!699 = !DILocation(line: 0, scope: !438, inlinedAt: !700)
!700 = distinct !DILocation(line: 403, column: 1, scope: !689)
!701 = !DILocation(line: 0, scope: !446, inlinedAt: !700)
!702 = !DILocation(line: 0, scope: !448, inlinedAt: !700)
!703 = !DILocation(line: 63, column: 1, scope: !455, inlinedAt: !700)
!704 = !DILocation(line: 63, column: 1, scope: !449, inlinedAt: !700)
!705 = !DILocation(line: 403, column: 1, scope: !689)
!706 = !DILocation(line: 0, scope: !438, inlinedAt: !707)
!707 = distinct !DILocation(line: 403, column: 1, scope: !689)
!708 = !DILocation(line: 0, scope: !446, inlinedAt: !707)
!709 = !DILocation(line: 0, scope: !448, inlinedAt: !707)
!710 = !DILocation(line: 63, column: 1, scope: !455, inlinedAt: !707)
!711 = !DILocation(line: 63, column: 1, scope: !449, inlinedAt: !707)
!712 = !DILocation(line: 0, scope: !438, inlinedAt: !713)
!713 = distinct !DILocation(line: 403, column: 1, scope: !689)
!714 = !DILocation(line: 0, scope: !446, inlinedAt: !713)
!715 = !DILocation(line: 0, scope: !448, inlinedAt: !713)
!716 = !DILocation(line: 63, column: 1, scope: !455, inlinedAt: !713)
!717 = !DILocation(line: 63, column: 1, scope: !449, inlinedAt: !713)
!718 = !DILocation(line: 0, scope: !438, inlinedAt: !719)
!719 = distinct !DILocation(line: 403, column: 1, scope: !689)
!720 = !DILocation(line: 0, scope: !446, inlinedAt: !719)
!721 = !DILocation(line: 0, scope: !448, inlinedAt: !719)
!722 = !DILocation(line: 63, column: 1, scope: !455, inlinedAt: !719)
!723 = !DILocation(line: 63, column: 1, scope: !449, inlinedAt: !719)
!724 = distinct !DISubprogram(name: "x264_pixel_sad_x4_8x8", scope: !1, file: !1, line: 404, type: !100, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !725)
!725 = !{!726, !727, !728, !729, !730, !731, !732}
!726 = !DILocalVariable(name: "fenc", arg: 1, scope: !724, file: !1, line: 404, type: !73)
!727 = !DILocalVariable(name: "pix0", arg: 2, scope: !724, file: !1, line: 404, type: !73)
!728 = !DILocalVariable(name: "pix1", arg: 3, scope: !724, file: !1, line: 404, type: !73)
!729 = !DILocalVariable(name: "pix2", arg: 4, scope: !724, file: !1, line: 404, type: !73)
!730 = !DILocalVariable(name: "pix3", arg: 5, scope: !724, file: !1, line: 404, type: !73)
!731 = !DILocalVariable(name: "i_stride", arg: 6, scope: !724, file: !1, line: 404, type: !31)
!732 = !DILocalVariable(name: "scores", arg: 7, scope: !724, file: !1, line: 404, type: !95)
!733 = !DILocation(line: 0, scope: !724)
!734 = !DILocation(line: 0, scope: !459, inlinedAt: !735)
!735 = distinct !DILocation(line: 404, column: 1, scope: !724)
!736 = !DILocation(line: 0, scope: !467, inlinedAt: !735)
!737 = !DILocation(line: 0, scope: !469, inlinedAt: !735)
!738 = !DILocation(line: 64, column: 1, scope: !476, inlinedAt: !735)
!739 = !DILocation(line: 64, column: 1, scope: !470, inlinedAt: !735)
!740 = !DILocation(line: 404, column: 1, scope: !724)
!741 = !DILocation(line: 0, scope: !459, inlinedAt: !742)
!742 = distinct !DILocation(line: 404, column: 1, scope: !724)
!743 = !DILocation(line: 0, scope: !467, inlinedAt: !742)
!744 = !DILocation(line: 0, scope: !469, inlinedAt: !742)
!745 = !DILocation(line: 64, column: 1, scope: !476, inlinedAt: !742)
!746 = !DILocation(line: 64, column: 1, scope: !470, inlinedAt: !742)
!747 = !DILocation(line: 0, scope: !459, inlinedAt: !748)
!748 = distinct !DILocation(line: 404, column: 1, scope: !724)
!749 = !DILocation(line: 0, scope: !467, inlinedAt: !748)
!750 = !DILocation(line: 0, scope: !469, inlinedAt: !748)
!751 = !DILocation(line: 64, column: 1, scope: !476, inlinedAt: !748)
!752 = !DILocation(line: 64, column: 1, scope: !470, inlinedAt: !748)
!753 = !DILocation(line: 0, scope: !459, inlinedAt: !754)
!754 = distinct !DILocation(line: 404, column: 1, scope: !724)
!755 = !DILocation(line: 0, scope: !467, inlinedAt: !754)
!756 = !DILocation(line: 0, scope: !469, inlinedAt: !754)
!757 = !DILocation(line: 64, column: 1, scope: !476, inlinedAt: !754)
!758 = !DILocation(line: 64, column: 1, scope: !470, inlinedAt: !754)
!759 = distinct !DISubprogram(name: "x264_pixel_sad_x4_8x4", scope: !1, file: !1, line: 405, type: !100, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !760)
!760 = !{!761, !762, !763, !764, !765, !766, !767}
!761 = !DILocalVariable(name: "fenc", arg: 1, scope: !759, file: !1, line: 405, type: !73)
!762 = !DILocalVariable(name: "pix0", arg: 2, scope: !759, file: !1, line: 405, type: !73)
!763 = !DILocalVariable(name: "pix1", arg: 3, scope: !759, file: !1, line: 405, type: !73)
!764 = !DILocalVariable(name: "pix2", arg: 4, scope: !759, file: !1, line: 405, type: !73)
!765 = !DILocalVariable(name: "pix3", arg: 5, scope: !759, file: !1, line: 405, type: !73)
!766 = !DILocalVariable(name: "i_stride", arg: 6, scope: !759, file: !1, line: 405, type: !31)
!767 = !DILocalVariable(name: "scores", arg: 7, scope: !759, file: !1, line: 405, type: !95)
!768 = !DILocation(line: 0, scope: !759)
!769 = !DILocation(line: 405, column: 1, scope: !759)
!770 = distinct !DISubprogram(name: "x264_pixel_sad_x4_4x8", scope: !1, file: !1, line: 406, type: !100, scopeLine: 406, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !771)
!771 = !{!772, !773, !774, !775, !776, !777, !778}
!772 = !DILocalVariable(name: "fenc", arg: 1, scope: !770, file: !1, line: 406, type: !73)
!773 = !DILocalVariable(name: "pix0", arg: 2, scope: !770, file: !1, line: 406, type: !73)
!774 = !DILocalVariable(name: "pix1", arg: 3, scope: !770, file: !1, line: 406, type: !73)
!775 = !DILocalVariable(name: "pix2", arg: 4, scope: !770, file: !1, line: 406, type: !73)
!776 = !DILocalVariable(name: "pix3", arg: 5, scope: !770, file: !1, line: 406, type: !73)
!777 = !DILocalVariable(name: "i_stride", arg: 6, scope: !770, file: !1, line: 406, type: !31)
!778 = !DILocalVariable(name: "scores", arg: 7, scope: !770, file: !1, line: 406, type: !95)
!779 = !DILocation(line: 0, scope: !770)
!780 = !DILocation(line: 406, column: 1, scope: !770)
!781 = distinct !DISubprogram(name: "x264_pixel_sad_x4_4x4", scope: !1, file: !1, line: 407, type: !100, scopeLine: 407, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !782)
!782 = !{!783, !784, !785, !786, !787, !788, !789}
!783 = !DILocalVariable(name: "fenc", arg: 1, scope: !781, file: !1, line: 407, type: !73)
!784 = !DILocalVariable(name: "pix0", arg: 2, scope: !781, file: !1, line: 407, type: !73)
!785 = !DILocalVariable(name: "pix1", arg: 3, scope: !781, file: !1, line: 407, type: !73)
!786 = !DILocalVariable(name: "pix2", arg: 4, scope: !781, file: !1, line: 407, type: !73)
!787 = !DILocalVariable(name: "pix3", arg: 5, scope: !781, file: !1, line: 407, type: !73)
!788 = !DILocalVariable(name: "i_stride", arg: 6, scope: !781, file: !1, line: 407, type: !31)
!789 = !DILocalVariable(name: "scores", arg: 7, scope: !781, file: !1, line: 407, type: !95)
!790 = !DILocation(line: 0, scope: !781)
!791 = !DILocation(line: 0, scope: !522, inlinedAt: !792)
!792 = distinct !DILocation(line: 407, column: 1, scope: !781)
!793 = !DILocation(line: 0, scope: !530, inlinedAt: !792)
!794 = !DILocation(line: 0, scope: !532, inlinedAt: !792)
!795 = !DILocation(line: 67, column: 1, scope: !539, inlinedAt: !792)
!796 = !DILocation(line: 67, column: 1, scope: !533, inlinedAt: !792)
!797 = !DILocation(line: 407, column: 1, scope: !781)
!798 = !DILocation(line: 0, scope: !522, inlinedAt: !799)
!799 = distinct !DILocation(line: 407, column: 1, scope: !781)
!800 = !DILocation(line: 0, scope: !530, inlinedAt: !799)
!801 = !DILocation(line: 0, scope: !532, inlinedAt: !799)
!802 = !DILocation(line: 67, column: 1, scope: !539, inlinedAt: !799)
!803 = !DILocation(line: 67, column: 1, scope: !533, inlinedAt: !799)
!804 = !DILocation(line: 0, scope: !522, inlinedAt: !805)
!805 = distinct !DILocation(line: 407, column: 1, scope: !781)
!806 = !DILocation(line: 0, scope: !530, inlinedAt: !805)
!807 = !DILocation(line: 0, scope: !532, inlinedAt: !805)
!808 = !DILocation(line: 67, column: 1, scope: !539, inlinedAt: !805)
!809 = !DILocation(line: 67, column: 1, scope: !533, inlinedAt: !805)
!810 = !DILocation(line: 0, scope: !522, inlinedAt: !811)
!811 = distinct !DILocation(line: 407, column: 1, scope: !781)
!812 = !DILocation(line: 0, scope: !530, inlinedAt: !811)
!813 = !DILocation(line: 0, scope: !532, inlinedAt: !811)
!814 = !DILocation(line: 67, column: 1, scope: !539, inlinedAt: !811)
!815 = !DILocation(line: 67, column: 1, scope: !533, inlinedAt: !811)
!816 = distinct !DISubprogram(name: "x264_pixel_ssd_16x16", scope: !1, file: !1, line: 91, type: !71, scopeLine: 91, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !817)
!817 = !{!818, !819, !820, !821, !822, !823, !825, !829}
!818 = !DILocalVariable(name: "pix1", arg: 1, scope: !816, file: !1, line: 91, type: !73)
!819 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !816, file: !1, line: 91, type: !31)
!820 = !DILocalVariable(name: "pix2", arg: 3, scope: !816, file: !1, line: 91, type: !73)
!821 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !816, file: !1, line: 91, type: !31)
!822 = !DILocalVariable(name: "i_sum", scope: !816, file: !1, line: 91, type: !31)
!823 = !DILocalVariable(name: "y", scope: !824, file: !1, line: 91, type: !31)
!824 = distinct !DILexicalBlock(scope: !816, file: !1, line: 91, column: 1)
!825 = !DILocalVariable(name: "x", scope: !826, file: !1, line: 91, type: !31)
!826 = distinct !DILexicalBlock(scope: !827, file: !1, line: 91, column: 1)
!827 = distinct !DILexicalBlock(scope: !828, file: !1, line: 91, column: 1)
!828 = distinct !DILexicalBlock(scope: !824, file: !1, line: 91, column: 1)
!829 = !DILocalVariable(name: "d", scope: !830, file: !1, line: 91, type: !31)
!830 = distinct !DILexicalBlock(scope: !831, file: !1, line: 91, column: 1)
!831 = distinct !DILexicalBlock(scope: !826, file: !1, line: 91, column: 1)
!832 = !DILocation(line: 0, scope: !816)
!833 = !DILocation(line: 0, scope: !824)
!834 = !DILocation(line: 91, column: 1, scope: !824)
!835 = !DILocation(line: 0, scope: !826)
!836 = !DILocation(line: 0, scope: !830)
!837 = !DILocation(line: 91, column: 1, scope: !830)
!838 = !DILocation(line: 91, column: 1, scope: !827)
!839 = !DILocation(line: 91, column: 1, scope: !828)
!840 = distinct !{!840, !834, !834}
!841 = !DILocation(line: 91, column: 1, scope: !816)
!842 = distinct !DISubprogram(name: "x264_pixel_ssd_16x8", scope: !1, file: !1, line: 92, type: !71, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !843)
!843 = !{!844, !845, !846, !847, !848, !849, !851, !855}
!844 = !DILocalVariable(name: "pix1", arg: 1, scope: !842, file: !1, line: 92, type: !73)
!845 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !842, file: !1, line: 92, type: !31)
!846 = !DILocalVariable(name: "pix2", arg: 3, scope: !842, file: !1, line: 92, type: !73)
!847 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !842, file: !1, line: 92, type: !31)
!848 = !DILocalVariable(name: "i_sum", scope: !842, file: !1, line: 92, type: !31)
!849 = !DILocalVariable(name: "y", scope: !850, file: !1, line: 92, type: !31)
!850 = distinct !DILexicalBlock(scope: !842, file: !1, line: 92, column: 1)
!851 = !DILocalVariable(name: "x", scope: !852, file: !1, line: 92, type: !31)
!852 = distinct !DILexicalBlock(scope: !853, file: !1, line: 92, column: 1)
!853 = distinct !DILexicalBlock(scope: !854, file: !1, line: 92, column: 1)
!854 = distinct !DILexicalBlock(scope: !850, file: !1, line: 92, column: 1)
!855 = !DILocalVariable(name: "d", scope: !856, file: !1, line: 92, type: !31)
!856 = distinct !DILexicalBlock(scope: !857, file: !1, line: 92, column: 1)
!857 = distinct !DILexicalBlock(scope: !852, file: !1, line: 92, column: 1)
!858 = !DILocation(line: 0, scope: !842)
!859 = !DILocation(line: 0, scope: !850)
!860 = !DILocation(line: 92, column: 1, scope: !850)
!861 = !DILocation(line: 0, scope: !852)
!862 = !DILocation(line: 0, scope: !856)
!863 = !DILocation(line: 92, column: 1, scope: !856)
!864 = !DILocation(line: 92, column: 1, scope: !853)
!865 = !DILocation(line: 92, column: 1, scope: !854)
!866 = distinct !{!866, !860, !860}
!867 = !DILocation(line: 92, column: 1, scope: !842)
!868 = distinct !DISubprogram(name: "x264_pixel_ssd_8x16", scope: !1, file: !1, line: 93, type: !71, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !869)
!869 = !{!870, !871, !872, !873, !874, !875, !877, !881}
!870 = !DILocalVariable(name: "pix1", arg: 1, scope: !868, file: !1, line: 93, type: !73)
!871 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !868, file: !1, line: 93, type: !31)
!872 = !DILocalVariable(name: "pix2", arg: 3, scope: !868, file: !1, line: 93, type: !73)
!873 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !868, file: !1, line: 93, type: !31)
!874 = !DILocalVariable(name: "i_sum", scope: !868, file: !1, line: 93, type: !31)
!875 = !DILocalVariable(name: "y", scope: !876, file: !1, line: 93, type: !31)
!876 = distinct !DILexicalBlock(scope: !868, file: !1, line: 93, column: 1)
!877 = !DILocalVariable(name: "x", scope: !878, file: !1, line: 93, type: !31)
!878 = distinct !DILexicalBlock(scope: !879, file: !1, line: 93, column: 1)
!879 = distinct !DILexicalBlock(scope: !880, file: !1, line: 93, column: 1)
!880 = distinct !DILexicalBlock(scope: !876, file: !1, line: 93, column: 1)
!881 = !DILocalVariable(name: "d", scope: !882, file: !1, line: 93, type: !31)
!882 = distinct !DILexicalBlock(scope: !883, file: !1, line: 93, column: 1)
!883 = distinct !DILexicalBlock(scope: !878, file: !1, line: 93, column: 1)
!884 = !DILocation(line: 0, scope: !868)
!885 = !DILocation(line: 0, scope: !876)
!886 = !DILocation(line: 93, column: 1, scope: !876)
!887 = !DILocation(line: 0, scope: !878)
!888 = !DILocation(line: 0, scope: !882)
!889 = !DILocation(line: 93, column: 1, scope: !882)
!890 = !DILocation(line: 93, column: 1, scope: !879)
!891 = !DILocation(line: 93, column: 1, scope: !880)
!892 = distinct !{!892, !886, !886}
!893 = !DILocation(line: 93, column: 1, scope: !868)
!894 = distinct !DISubprogram(name: "x264_pixel_ssd_8x8", scope: !1, file: !1, line: 94, type: !71, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !895)
!895 = !{!896, !897, !898, !899, !900, !901, !903, !907}
!896 = !DILocalVariable(name: "pix1", arg: 1, scope: !894, file: !1, line: 94, type: !73)
!897 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !894, file: !1, line: 94, type: !31)
!898 = !DILocalVariable(name: "pix2", arg: 3, scope: !894, file: !1, line: 94, type: !73)
!899 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !894, file: !1, line: 94, type: !31)
!900 = !DILocalVariable(name: "i_sum", scope: !894, file: !1, line: 94, type: !31)
!901 = !DILocalVariable(name: "y", scope: !902, file: !1, line: 94, type: !31)
!902 = distinct !DILexicalBlock(scope: !894, file: !1, line: 94, column: 1)
!903 = !DILocalVariable(name: "x", scope: !904, file: !1, line: 94, type: !31)
!904 = distinct !DILexicalBlock(scope: !905, file: !1, line: 94, column: 1)
!905 = distinct !DILexicalBlock(scope: !906, file: !1, line: 94, column: 1)
!906 = distinct !DILexicalBlock(scope: !902, file: !1, line: 94, column: 1)
!907 = !DILocalVariable(name: "d", scope: !908, file: !1, line: 94, type: !31)
!908 = distinct !DILexicalBlock(scope: !909, file: !1, line: 94, column: 1)
!909 = distinct !DILexicalBlock(scope: !904, file: !1, line: 94, column: 1)
!910 = !DILocation(line: 0, scope: !894)
!911 = !DILocation(line: 0, scope: !902)
!912 = !DILocation(line: 0, scope: !908)
!913 = !DILocation(line: 0, scope: !904)
!914 = !DILocation(line: 94, column: 1, scope: !908)
!915 = !DILocation(line: 94, column: 1, scope: !905)
!916 = !DILocation(line: 94, column: 1, scope: !894)
!917 = distinct !DISubprogram(name: "x264_pixel_ssd_8x4", scope: !1, file: !1, line: 95, type: !71, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !918)
!918 = !{!919, !920, !921, !922, !923, !924, !926, !930}
!919 = !DILocalVariable(name: "pix1", arg: 1, scope: !917, file: !1, line: 95, type: !73)
!920 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !917, file: !1, line: 95, type: !31)
!921 = !DILocalVariable(name: "pix2", arg: 3, scope: !917, file: !1, line: 95, type: !73)
!922 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !917, file: !1, line: 95, type: !31)
!923 = !DILocalVariable(name: "i_sum", scope: !917, file: !1, line: 95, type: !31)
!924 = !DILocalVariable(name: "y", scope: !925, file: !1, line: 95, type: !31)
!925 = distinct !DILexicalBlock(scope: !917, file: !1, line: 95, column: 1)
!926 = !DILocalVariable(name: "x", scope: !927, file: !1, line: 95, type: !31)
!927 = distinct !DILexicalBlock(scope: !928, file: !1, line: 95, column: 1)
!928 = distinct !DILexicalBlock(scope: !929, file: !1, line: 95, column: 1)
!929 = distinct !DILexicalBlock(scope: !925, file: !1, line: 95, column: 1)
!930 = !DILocalVariable(name: "d", scope: !931, file: !1, line: 95, type: !31)
!931 = distinct !DILexicalBlock(scope: !932, file: !1, line: 95, column: 1)
!932 = distinct !DILexicalBlock(scope: !927, file: !1, line: 95, column: 1)
!933 = !DILocation(line: 0, scope: !917)
!934 = !DILocation(line: 0, scope: !925)
!935 = !DILocation(line: 0, scope: !927)
!936 = !DILocation(line: 0, scope: !931)
!937 = !DILocation(line: 95, column: 1, scope: !931)
!938 = !DILocation(line: 95, column: 1, scope: !928)
!939 = !DILocation(line: 95, column: 1, scope: !917)
!940 = distinct !DISubprogram(name: "x264_pixel_ssd_4x8", scope: !1, file: !1, line: 96, type: !71, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !941)
!941 = !{!942, !943, !944, !945, !946, !947, !949, !953}
!942 = !DILocalVariable(name: "pix1", arg: 1, scope: !940, file: !1, line: 96, type: !73)
!943 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !940, file: !1, line: 96, type: !31)
!944 = !DILocalVariable(name: "pix2", arg: 3, scope: !940, file: !1, line: 96, type: !73)
!945 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !940, file: !1, line: 96, type: !31)
!946 = !DILocalVariable(name: "i_sum", scope: !940, file: !1, line: 96, type: !31)
!947 = !DILocalVariable(name: "y", scope: !948, file: !1, line: 96, type: !31)
!948 = distinct !DILexicalBlock(scope: !940, file: !1, line: 96, column: 1)
!949 = !DILocalVariable(name: "x", scope: !950, file: !1, line: 96, type: !31)
!950 = distinct !DILexicalBlock(scope: !951, file: !1, line: 96, column: 1)
!951 = distinct !DILexicalBlock(scope: !952, file: !1, line: 96, column: 1)
!952 = distinct !DILexicalBlock(scope: !948, file: !1, line: 96, column: 1)
!953 = !DILocalVariable(name: "d", scope: !954, file: !1, line: 96, type: !31)
!954 = distinct !DILexicalBlock(scope: !955, file: !1, line: 96, column: 1)
!955 = distinct !DILexicalBlock(scope: !950, file: !1, line: 96, column: 1)
!956 = !DILocation(line: 0, scope: !940)
!957 = !DILocation(line: 0, scope: !948)
!958 = !DILocation(line: 0, scope: !950)
!959 = !DILocation(line: 0, scope: !954)
!960 = !DILocation(line: 96, column: 1, scope: !954)
!961 = !DILocation(line: 96, column: 1, scope: !951)
!962 = !DILocation(line: 96, column: 1, scope: !940)
!963 = distinct !DISubprogram(name: "x264_pixel_ssd_4x4", scope: !1, file: !1, line: 97, type: !71, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !964)
!964 = !{!965, !966, !967, !968, !969, !970, !972, !976}
!965 = !DILocalVariable(name: "pix1", arg: 1, scope: !963, file: !1, line: 97, type: !73)
!966 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !963, file: !1, line: 97, type: !31)
!967 = !DILocalVariable(name: "pix2", arg: 3, scope: !963, file: !1, line: 97, type: !73)
!968 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !963, file: !1, line: 97, type: !31)
!969 = !DILocalVariable(name: "i_sum", scope: !963, file: !1, line: 97, type: !31)
!970 = !DILocalVariable(name: "y", scope: !971, file: !1, line: 97, type: !31)
!971 = distinct !DILexicalBlock(scope: !963, file: !1, line: 97, column: 1)
!972 = !DILocalVariable(name: "x", scope: !973, file: !1, line: 97, type: !31)
!973 = distinct !DILexicalBlock(scope: !974, file: !1, line: 97, column: 1)
!974 = distinct !DILexicalBlock(scope: !975, file: !1, line: 97, column: 1)
!975 = distinct !DILexicalBlock(scope: !971, file: !1, line: 97, column: 1)
!976 = !DILocalVariable(name: "d", scope: !977, file: !1, line: 97, type: !31)
!977 = distinct !DILexicalBlock(scope: !978, file: !1, line: 97, column: 1)
!978 = distinct !DILexicalBlock(scope: !973, file: !1, line: 97, column: 1)
!979 = !DILocation(line: 0, scope: !963)
!980 = !DILocation(line: 0, scope: !971)
!981 = !DILocation(line: 0, scope: !973)
!982 = !DILocation(line: 0, scope: !977)
!983 = !DILocation(line: 97, column: 1, scope: !977)
!984 = !DILocation(line: 97, column: 1, scope: !974)
!985 = !DILocation(line: 97, column: 1, scope: !963)
!986 = distinct !DISubprogram(name: "x264_pixel_satd_16x16", scope: !1, file: !1, line: 271, type: !71, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !987)
!987 = !{!988, !989, !990, !991, !992}
!988 = !DILocalVariable(name: "pix1", arg: 1, scope: !986, file: !1, line: 271, type: !73)
!989 = !DILocalVariable(name: "i_pix1", arg: 2, scope: !986, file: !1, line: 271, type: !31)
!990 = !DILocalVariable(name: "pix2", arg: 3, scope: !986, file: !1, line: 271, type: !73)
!991 = !DILocalVariable(name: "i_pix2", arg: 4, scope: !986, file: !1, line: 271, type: !31)
!992 = !DILocalVariable(name: "sum", scope: !986, file: !1, line: 271, type: !31)
!993 = !DILocation(line: 0, scope: !986)
!994 = !DILocation(line: 271, column: 1, scope: !986)
!995 = !DILocation(line: 271, column: 1, scope: !996)
!996 = distinct !DILexicalBlock(scope: !986, file: !1, line: 271, column: 1)
!997 = !DILocation(line: 271, column: 1, scope: !998)
!998 = distinct !DILexicalBlock(scope: !986, file: !1, line: 271, column: 1)
!999 = !DILocation(line: 271, column: 1, scope: !1000)
!1000 = distinct !DILexicalBlock(scope: !986, file: !1, line: 271, column: 1)
!1001 = distinct !DISubprogram(name: "x264_pixel_satd_16x8", scope: !1, file: !1, line: 272, type: !71, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1002)
!1002 = !{!1003, !1004, !1005, !1006, !1007}
!1003 = !DILocalVariable(name: "pix1", arg: 1, scope: !1001, file: !1, line: 272, type: !73)
!1004 = !DILocalVariable(name: "i_pix1", arg: 2, scope: !1001, file: !1, line: 272, type: !31)
!1005 = !DILocalVariable(name: "pix2", arg: 3, scope: !1001, file: !1, line: 272, type: !73)
!1006 = !DILocalVariable(name: "i_pix2", arg: 4, scope: !1001, file: !1, line: 272, type: !31)
!1007 = !DILocalVariable(name: "sum", scope: !1001, file: !1, line: 272, type: !31)
!1008 = !DILocation(line: 0, scope: !1001)
!1009 = !DILocation(line: 272, column: 1, scope: !1001)
!1010 = !DILocation(line: 272, column: 1, scope: !1011)
!1011 = distinct !DILexicalBlock(scope: !1001, file: !1, line: 272, column: 1)
!1012 = distinct !DISubprogram(name: "x264_pixel_satd_8x16", scope: !1, file: !1, line: 273, type: !71, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1013)
!1013 = !{!1014, !1015, !1016, !1017, !1018}
!1014 = !DILocalVariable(name: "pix1", arg: 1, scope: !1012, file: !1, line: 273, type: !73)
!1015 = !DILocalVariable(name: "i_pix1", arg: 2, scope: !1012, file: !1, line: 273, type: !31)
!1016 = !DILocalVariable(name: "pix2", arg: 3, scope: !1012, file: !1, line: 273, type: !73)
!1017 = !DILocalVariable(name: "i_pix2", arg: 4, scope: !1012, file: !1, line: 273, type: !31)
!1018 = !DILocalVariable(name: "sum", scope: !1012, file: !1, line: 273, type: !31)
!1019 = !DILocation(line: 0, scope: !1012)
!1020 = !DILocation(line: 273, column: 1, scope: !1012)
!1021 = !DILocation(line: 273, column: 1, scope: !1022)
!1022 = distinct !DILexicalBlock(scope: !1012, file: !1, line: 273, column: 1)
!1023 = distinct !DISubprogram(name: "x264_pixel_satd_8x8", scope: !1, file: !1, line: 274, type: !71, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1024)
!1024 = !{!1025, !1026, !1027, !1028, !1029}
!1025 = !DILocalVariable(name: "pix1", arg: 1, scope: !1023, file: !1, line: 274, type: !73)
!1026 = !DILocalVariable(name: "i_pix1", arg: 2, scope: !1023, file: !1, line: 274, type: !31)
!1027 = !DILocalVariable(name: "pix2", arg: 3, scope: !1023, file: !1, line: 274, type: !73)
!1028 = !DILocalVariable(name: "i_pix2", arg: 4, scope: !1023, file: !1, line: 274, type: !31)
!1029 = !DILocalVariable(name: "sum", scope: !1023, file: !1, line: 274, type: !31)
!1030 = !DILocation(line: 0, scope: !1023)
!1031 = !DILocation(line: 274, column: 1, scope: !1023)
!1032 = distinct !DISubprogram(name: "x264_pixel_satd_8x4", scope: !1, file: !1, line: 234, type: !71, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1033)
!1033 = !{!1034, !1035, !1036, !1037, !1038, !1041, !1042, !1043, !1044, !1045, !1046, !1048, !1052, !1053, !1054, !1055, !1057, !1061, !1062, !1063}
!1034 = !DILocalVariable(name: "pix1", arg: 1, scope: !1032, file: !1, line: 234, type: !73)
!1035 = !DILocalVariable(name: "i_pix1", arg: 2, scope: !1032, file: !1, line: 234, type: !31)
!1036 = !DILocalVariable(name: "pix2", arg: 3, scope: !1032, file: !1, line: 234, type: !73)
!1037 = !DILocalVariable(name: "i_pix2", arg: 4, scope: !1032, file: !1, line: 234, type: !31)
!1038 = !DILocalVariable(name: "tmp", scope: !1032, file: !1, line: 236, type: !1039)
!1039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 512, elements: !1040)
!1040 = !{!85, !85}
!1041 = !DILocalVariable(name: "a0", scope: !1032, file: !1, line: 237, type: !26)
!1042 = !DILocalVariable(name: "a1", scope: !1032, file: !1, line: 237, type: !26)
!1043 = !DILocalVariable(name: "a2", scope: !1032, file: !1, line: 237, type: !26)
!1044 = !DILocalVariable(name: "a3", scope: !1032, file: !1, line: 237, type: !26)
!1045 = !DILocalVariable(name: "sum", scope: !1032, file: !1, line: 238, type: !31)
!1046 = !DILocalVariable(name: "i", scope: !1047, file: !1, line: 239, type: !31)
!1047 = distinct !DILexicalBlock(scope: !1032, file: !1, line: 239, column: 5)
!1048 = !DILocalVariable(name: "t0", scope: !1049, file: !1, line: 245, type: !31)
!1049 = distinct !DILexicalBlock(scope: !1050, file: !1, line: 245, column: 9)
!1050 = distinct !DILexicalBlock(scope: !1051, file: !1, line: 240, column: 5)
!1051 = distinct !DILexicalBlock(scope: !1047, file: !1, line: 239, column: 5)
!1052 = !DILocalVariable(name: "t1", scope: !1049, file: !1, line: 245, type: !31)
!1053 = !DILocalVariable(name: "t2", scope: !1049, file: !1, line: 245, type: !31)
!1054 = !DILocalVariable(name: "t3", scope: !1049, file: !1, line: 245, type: !31)
!1055 = !DILocalVariable(name: "i", scope: !1056, file: !1, line: 247, type: !31)
!1056 = distinct !DILexicalBlock(scope: !1032, file: !1, line: 247, column: 5)
!1057 = !DILocalVariable(name: "t0", scope: !1058, file: !1, line: 249, type: !31)
!1058 = distinct !DILexicalBlock(scope: !1059, file: !1, line: 249, column: 9)
!1059 = distinct !DILexicalBlock(scope: !1060, file: !1, line: 248, column: 5)
!1060 = distinct !DILexicalBlock(scope: !1056, file: !1, line: 247, column: 5)
!1061 = !DILocalVariable(name: "t1", scope: !1058, file: !1, line: 249, type: !31)
!1062 = !DILocalVariable(name: "t2", scope: !1058, file: !1, line: 249, type: !31)
!1063 = !DILocalVariable(name: "t3", scope: !1058, file: !1, line: 249, type: !31)
!1064 = !DILocation(line: 0, scope: !1032)
!1065 = !DILocation(line: 0, scope: !1047)
!1066 = !DILocation(line: 241, column: 15, scope: !1050)
!1067 = !DILocation(line: 241, column: 25, scope: !1050)
!1068 = !DILocation(line: 241, column: 23, scope: !1050)
!1069 = !DILocation(line: 241, column: 38, scope: !1050)
!1070 = !DILocation(line: 241, column: 48, scope: !1050)
!1071 = !DILocation(line: 241, column: 46, scope: !1050)
!1072 = !DILocation(line: 241, column: 57, scope: !1050)
!1073 = !DILocation(line: 241, column: 34, scope: !1050)
!1074 = !DILocation(line: 242, column: 15, scope: !1050)
!1075 = !DILocation(line: 242, column: 25, scope: !1050)
!1076 = !DILocation(line: 242, column: 23, scope: !1050)
!1077 = !DILocation(line: 242, column: 38, scope: !1050)
!1078 = !DILocation(line: 242, column: 48, scope: !1050)
!1079 = !DILocation(line: 242, column: 46, scope: !1050)
!1080 = !DILocation(line: 242, column: 57, scope: !1050)
!1081 = !DILocation(line: 242, column: 34, scope: !1050)
!1082 = !DILocation(line: 243, column: 15, scope: !1050)
!1083 = !DILocation(line: 243, column: 25, scope: !1050)
!1084 = !DILocation(line: 243, column: 23, scope: !1050)
!1085 = !DILocation(line: 243, column: 38, scope: !1050)
!1086 = !DILocation(line: 243, column: 48, scope: !1050)
!1087 = !DILocation(line: 243, column: 46, scope: !1050)
!1088 = !DILocation(line: 243, column: 57, scope: !1050)
!1089 = !DILocation(line: 243, column: 34, scope: !1050)
!1090 = !DILocation(line: 244, column: 15, scope: !1050)
!1091 = !DILocation(line: 244, column: 25, scope: !1050)
!1092 = !DILocation(line: 244, column: 23, scope: !1050)
!1093 = !DILocation(line: 244, column: 38, scope: !1050)
!1094 = !DILocation(line: 244, column: 48, scope: !1050)
!1095 = !DILocation(line: 244, column: 46, scope: !1050)
!1096 = !DILocation(line: 244, column: 57, scope: !1050)
!1097 = !DILocation(line: 244, column: 34, scope: !1050)
!1098 = !DILocation(line: 245, column: 9, scope: !1049)
!1099 = !DILocation(line: 0, scope: !1049)
!1100 = !DILocation(line: 239, column: 38, scope: !1051)
!1101 = !DILocation(line: 239, column: 54, scope: !1051)
!1102 = !DILocation(line: 0, scope: !1056)
!1103 = !DILocation(line: 249, column: 9, scope: !1058)
!1104 = !DILocation(line: 0, scope: !1058)
!1105 = !DILocalVariable(name: "a", arg: 1, scope: !1106, file: !1, line: 199, type: !26)
!1106 = distinct !DISubprogram(name: "abs2", scope: !1, file: !1, line: 199, type: !1107, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1109)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{!26, !26}
!1109 = !{!1105, !1110}
!1110 = !DILocalVariable(name: "s", scope: !1106, file: !1, line: 201, type: !26)
!1111 = !DILocation(line: 0, scope: !1106, inlinedAt: !1112)
!1112 = distinct !DILocation(line: 250, column: 16, scope: !1059)
!1113 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !1112)
!1114 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !1112)
!1115 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !1112)
!1116 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !1112)
!1117 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !1112)
!1118 = !DILocation(line: 0, scope: !1106, inlinedAt: !1119)
!1119 = distinct !DILocation(line: 250, column: 27, scope: !1059)
!1120 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !1119)
!1121 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !1119)
!1122 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !1119)
!1123 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !1119)
!1124 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !1119)
!1125 = !DILocation(line: 0, scope: !1106, inlinedAt: !1126)
!1126 = distinct !DILocation(line: 250, column: 38, scope: !1059)
!1127 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !1126)
!1128 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !1126)
!1129 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !1126)
!1130 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !1126)
!1131 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !1126)
!1132 = !DILocation(line: 0, scope: !1106, inlinedAt: !1133)
!1133 = distinct !DILocation(line: 250, column: 49, scope: !1059)
!1134 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !1133)
!1135 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !1133)
!1136 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !1133)
!1137 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !1133)
!1138 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !1133)
!1139 = !DILocation(line: 250, column: 36, scope: !1059)
!1140 = !DILocation(line: 250, column: 47, scope: !1059)
!1141 = !DILocation(line: 250, column: 13, scope: !1059)
!1142 = !DILocation(line: 250, column: 25, scope: !1059)
!1143 = !DILocation(line: 252, column: 13, scope: !1032)
!1144 = !DILocation(line: 252, column: 45, scope: !1032)
!1145 = !DILocation(line: 252, column: 29, scope: !1032)
!1146 = !DILocation(line: 252, column: 52, scope: !1032)
!1147 = !DILocation(line: 252, column: 5, scope: !1032)
!1148 = distinct !DISubprogram(name: "x264_pixel_satd_4x8", scope: !1, file: !1, line: 275, type: !71, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1149)
!1149 = !{!1150, !1151, !1152, !1153, !1154}
!1150 = !DILocalVariable(name: "pix1", arg: 1, scope: !1148, file: !1, line: 275, type: !73)
!1151 = !DILocalVariable(name: "i_pix1", arg: 2, scope: !1148, file: !1, line: 275, type: !31)
!1152 = !DILocalVariable(name: "pix2", arg: 3, scope: !1148, file: !1, line: 275, type: !73)
!1153 = !DILocalVariable(name: "i_pix2", arg: 4, scope: !1148, file: !1, line: 275, type: !31)
!1154 = !DILocalVariable(name: "sum", scope: !1148, file: !1, line: 275, type: !31)
!1155 = !DILocation(line: 0, scope: !1148)
!1156 = !DILocation(line: 275, column: 1, scope: !1148)
!1157 = distinct !DISubprogram(name: "x264_pixel_satd_4x4", scope: !1, file: !1, line: 209, type: !71, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1158)
!1158 = !{!1159, !1160, !1161, !1162, !1163, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1176, !1178, !1182, !1183, !1184}
!1159 = !DILocalVariable(name: "pix1", arg: 1, scope: !1157, file: !1, line: 209, type: !73)
!1160 = !DILocalVariable(name: "i_pix1", arg: 2, scope: !1157, file: !1, line: 209, type: !31)
!1161 = !DILocalVariable(name: "pix2", arg: 3, scope: !1157, file: !1, line: 209, type: !73)
!1162 = !DILocalVariable(name: "i_pix2", arg: 4, scope: !1157, file: !1, line: 209, type: !31)
!1163 = !DILocalVariable(name: "tmp", scope: !1157, file: !1, line: 211, type: !1164)
!1164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 256, elements: !1165)
!1165 = !{!85, !1166}
!1166 = !DISubrange(count: 2)
!1167 = !DILocalVariable(name: "a0", scope: !1157, file: !1, line: 212, type: !26)
!1168 = !DILocalVariable(name: "a1", scope: !1157, file: !1, line: 212, type: !26)
!1169 = !DILocalVariable(name: "a2", scope: !1157, file: !1, line: 212, type: !26)
!1170 = !DILocalVariable(name: "a3", scope: !1157, file: !1, line: 212, type: !26)
!1171 = !DILocalVariable(name: "b0", scope: !1157, file: !1, line: 212, type: !26)
!1172 = !DILocalVariable(name: "b1", scope: !1157, file: !1, line: 212, type: !26)
!1173 = !DILocalVariable(name: "sum", scope: !1157, file: !1, line: 213, type: !31)
!1174 = !DILocalVariable(name: "i", scope: !1175, file: !1, line: 214, type: !31)
!1175 = distinct !DILexicalBlock(scope: !1157, file: !1, line: 214, column: 5)
!1176 = !DILocalVariable(name: "i", scope: !1177, file: !1, line: 225, type: !31)
!1177 = distinct !DILexicalBlock(scope: !1157, file: !1, line: 225, column: 5)
!1178 = !DILocalVariable(name: "t0", scope: !1179, file: !1, line: 227, type: !31)
!1179 = distinct !DILexicalBlock(scope: !1180, file: !1, line: 227, column: 9)
!1180 = distinct !DILexicalBlock(scope: !1181, file: !1, line: 226, column: 5)
!1181 = distinct !DILexicalBlock(scope: !1177, file: !1, line: 225, column: 5)
!1182 = !DILocalVariable(name: "t1", scope: !1179, file: !1, line: 227, type: !31)
!1183 = !DILocalVariable(name: "t2", scope: !1179, file: !1, line: 227, type: !31)
!1184 = !DILocalVariable(name: "t3", scope: !1179, file: !1, line: 227, type: !31)
!1185 = !DILocation(line: 0, scope: !1157)
!1186 = !DILocation(line: 0, scope: !1175)
!1187 = !DILocation(line: 216, column: 14, scope: !1188)
!1188 = distinct !DILexicalBlock(scope: !1189, file: !1, line: 215, column: 5)
!1189 = distinct !DILexicalBlock(scope: !1175, file: !1, line: 214, column: 5)
!1190 = !DILocation(line: 216, column: 24, scope: !1188)
!1191 = !DILocation(line: 216, column: 22, scope: !1188)
!1192 = !DILocation(line: 217, column: 14, scope: !1188)
!1193 = !DILocation(line: 217, column: 24, scope: !1188)
!1194 = !DILocation(line: 217, column: 22, scope: !1188)
!1195 = !DILocation(line: 218, column: 17, scope: !1188)
!1196 = !DILocation(line: 218, column: 28, scope: !1188)
!1197 = !DILocation(line: 218, column: 32, scope: !1188)
!1198 = !DILocation(line: 218, column: 22, scope: !1188)
!1199 = !DILocation(line: 219, column: 14, scope: !1188)
!1200 = !DILocation(line: 219, column: 24, scope: !1188)
!1201 = !DILocation(line: 219, column: 22, scope: !1188)
!1202 = !DILocation(line: 220, column: 14, scope: !1188)
!1203 = !DILocation(line: 220, column: 24, scope: !1188)
!1204 = !DILocation(line: 220, column: 22, scope: !1188)
!1205 = !DILocation(line: 221, column: 17, scope: !1188)
!1206 = !DILocation(line: 221, column: 28, scope: !1188)
!1207 = !DILocation(line: 221, column: 32, scope: !1188)
!1208 = !DILocation(line: 221, column: 22, scope: !1188)
!1209 = !DILocation(line: 222, column: 24, scope: !1188)
!1210 = !DILocation(line: 223, column: 24, scope: !1188)
!1211 = !DILocation(line: 214, column: 38, scope: !1189)
!1212 = !DILocation(line: 214, column: 54, scope: !1189)
!1213 = !DILocation(line: 0, scope: !1177)
!1214 = !DILocation(line: 227, column: 9, scope: !1179)
!1215 = !DILocation(line: 0, scope: !1179)
!1216 = !DILocation(line: 0, scope: !1106, inlinedAt: !1217)
!1217 = distinct !DILocation(line: 228, column: 14, scope: !1180)
!1218 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !1217)
!1219 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !1217)
!1220 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !1217)
!1221 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !1217)
!1222 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !1217)
!1223 = !DILocation(line: 0, scope: !1106, inlinedAt: !1224)
!1224 = distinct !DILocation(line: 228, column: 25, scope: !1180)
!1225 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !1224)
!1226 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !1224)
!1227 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !1224)
!1228 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !1224)
!1229 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !1224)
!1230 = !DILocation(line: 228, column: 23, scope: !1180)
!1231 = !DILocation(line: 0, scope: !1106, inlinedAt: !1232)
!1232 = distinct !DILocation(line: 228, column: 36, scope: !1180)
!1233 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !1232)
!1234 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !1232)
!1235 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !1232)
!1236 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !1232)
!1237 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !1232)
!1238 = !DILocation(line: 228, column: 34, scope: !1180)
!1239 = !DILocation(line: 0, scope: !1106, inlinedAt: !1240)
!1240 = distinct !DILocation(line: 228, column: 47, scope: !1180)
!1241 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !1240)
!1242 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !1240)
!1243 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !1240)
!1244 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !1240)
!1245 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !1240)
!1246 = !DILocation(line: 228, column: 45, scope: !1180)
!1247 = !DILocation(line: 229, column: 16, scope: !1180)
!1248 = !DILocation(line: 229, column: 36, scope: !1180)
!1249 = !DILocation(line: 229, column: 13, scope: !1180)
!1250 = !DILocation(line: 229, column: 31, scope: !1180)
!1251 = !DILocation(line: 231, column: 16, scope: !1157)
!1252 = !DILocation(line: 231, column: 5, scope: !1157)
!1253 = distinct !DISubprogram(name: "x264_pixel_satd_x3_16x16", scope: !1, file: !1, line: 446, type: !93, scopeLine: 446, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1254)
!1254 = !{!1255, !1256, !1257, !1258, !1259, !1260}
!1255 = !DILocalVariable(name: "fenc", arg: 1, scope: !1253, file: !1, line: 446, type: !73)
!1256 = !DILocalVariable(name: "pix0", arg: 2, scope: !1253, file: !1, line: 446, type: !73)
!1257 = !DILocalVariable(name: "pix1", arg: 3, scope: !1253, file: !1, line: 446, type: !73)
!1258 = !DILocalVariable(name: "pix2", arg: 4, scope: !1253, file: !1, line: 446, type: !73)
!1259 = !DILocalVariable(name: "i_stride", arg: 5, scope: !1253, file: !1, line: 446, type: !31)
!1260 = !DILocalVariable(name: "scores", arg: 6, scope: !1253, file: !1, line: 446, type: !95)
!1261 = !DILocation(line: 0, scope: !1253)
!1262 = !DILocation(line: 446, column: 1, scope: !1253)
!1263 = distinct !DISubprogram(name: "x264_pixel_satd_x3_16x8", scope: !1, file: !1, line: 446, type: !93, scopeLine: 446, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1264)
!1264 = !{!1265, !1266, !1267, !1268, !1269, !1270}
!1265 = !DILocalVariable(name: "fenc", arg: 1, scope: !1263, file: !1, line: 446, type: !73)
!1266 = !DILocalVariable(name: "pix0", arg: 2, scope: !1263, file: !1, line: 446, type: !73)
!1267 = !DILocalVariable(name: "pix1", arg: 3, scope: !1263, file: !1, line: 446, type: !73)
!1268 = !DILocalVariable(name: "pix2", arg: 4, scope: !1263, file: !1, line: 446, type: !73)
!1269 = !DILocalVariable(name: "i_stride", arg: 5, scope: !1263, file: !1, line: 446, type: !31)
!1270 = !DILocalVariable(name: "scores", arg: 6, scope: !1263, file: !1, line: 446, type: !95)
!1271 = !DILocation(line: 0, scope: !1263)
!1272 = !DILocation(line: 0, scope: !1001, inlinedAt: !1273)
!1273 = distinct !DILocation(line: 446, column: 1, scope: !1263)
!1274 = !DILocation(line: 272, column: 1, scope: !1001, inlinedAt: !1273)
!1275 = !DILocation(line: 272, column: 1, scope: !1011, inlinedAt: !1273)
!1276 = !DILocation(line: 446, column: 1, scope: !1263)
!1277 = !DILocation(line: 0, scope: !1001, inlinedAt: !1278)
!1278 = distinct !DILocation(line: 446, column: 1, scope: !1263)
!1279 = !DILocation(line: 272, column: 1, scope: !1001, inlinedAt: !1278)
!1280 = !DILocation(line: 272, column: 1, scope: !1011, inlinedAt: !1278)
!1281 = !DILocation(line: 0, scope: !1001, inlinedAt: !1282)
!1282 = distinct !DILocation(line: 446, column: 1, scope: !1263)
!1283 = !DILocation(line: 272, column: 1, scope: !1001, inlinedAt: !1282)
!1284 = !DILocation(line: 272, column: 1, scope: !1011, inlinedAt: !1282)
!1285 = distinct !DISubprogram(name: "x264_pixel_satd_x3_8x16", scope: !1, file: !1, line: 446, type: !93, scopeLine: 446, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1286)
!1286 = !{!1287, !1288, !1289, !1290, !1291, !1292}
!1287 = !DILocalVariable(name: "fenc", arg: 1, scope: !1285, file: !1, line: 446, type: !73)
!1288 = !DILocalVariable(name: "pix0", arg: 2, scope: !1285, file: !1, line: 446, type: !73)
!1289 = !DILocalVariable(name: "pix1", arg: 3, scope: !1285, file: !1, line: 446, type: !73)
!1290 = !DILocalVariable(name: "pix2", arg: 4, scope: !1285, file: !1, line: 446, type: !73)
!1291 = !DILocalVariable(name: "i_stride", arg: 5, scope: !1285, file: !1, line: 446, type: !31)
!1292 = !DILocalVariable(name: "scores", arg: 6, scope: !1285, file: !1, line: 446, type: !95)
!1293 = !DILocation(line: 0, scope: !1285)
!1294 = !DILocation(line: 0, scope: !1012, inlinedAt: !1295)
!1295 = distinct !DILocation(line: 446, column: 1, scope: !1285)
!1296 = !DILocation(line: 273, column: 1, scope: !1012, inlinedAt: !1295)
!1297 = !DILocation(line: 273, column: 1, scope: !1022, inlinedAt: !1295)
!1298 = !DILocation(line: 446, column: 1, scope: !1285)
!1299 = !DILocation(line: 0, scope: !1012, inlinedAt: !1300)
!1300 = distinct !DILocation(line: 446, column: 1, scope: !1285)
!1301 = !DILocation(line: 273, column: 1, scope: !1012, inlinedAt: !1300)
!1302 = !DILocation(line: 273, column: 1, scope: !1022, inlinedAt: !1300)
!1303 = !DILocation(line: 0, scope: !1012, inlinedAt: !1304)
!1304 = distinct !DILocation(line: 446, column: 1, scope: !1285)
!1305 = !DILocation(line: 273, column: 1, scope: !1012, inlinedAt: !1304)
!1306 = !DILocation(line: 273, column: 1, scope: !1022, inlinedAt: !1304)
!1307 = distinct !DISubprogram(name: "x264_pixel_satd_x3_8x8", scope: !1, file: !1, line: 446, type: !93, scopeLine: 446, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1308)
!1308 = !{!1309, !1310, !1311, !1312, !1313, !1314}
!1309 = !DILocalVariable(name: "fenc", arg: 1, scope: !1307, file: !1, line: 446, type: !73)
!1310 = !DILocalVariable(name: "pix0", arg: 2, scope: !1307, file: !1, line: 446, type: !73)
!1311 = !DILocalVariable(name: "pix1", arg: 3, scope: !1307, file: !1, line: 446, type: !73)
!1312 = !DILocalVariable(name: "pix2", arg: 4, scope: !1307, file: !1, line: 446, type: !73)
!1313 = !DILocalVariable(name: "i_stride", arg: 5, scope: !1307, file: !1, line: 446, type: !31)
!1314 = !DILocalVariable(name: "scores", arg: 6, scope: !1307, file: !1, line: 446, type: !95)
!1315 = !DILocation(line: 0, scope: !1307)
!1316 = !DILocation(line: 0, scope: !1023, inlinedAt: !1317)
!1317 = distinct !DILocation(line: 446, column: 1, scope: !1307)
!1318 = !DILocation(line: 274, column: 1, scope: !1023, inlinedAt: !1317)
!1319 = !DILocation(line: 446, column: 1, scope: !1307)
!1320 = !DILocation(line: 0, scope: !1023, inlinedAt: !1321)
!1321 = distinct !DILocation(line: 446, column: 1, scope: !1307)
!1322 = !DILocation(line: 274, column: 1, scope: !1023, inlinedAt: !1321)
!1323 = !DILocation(line: 0, scope: !1023, inlinedAt: !1324)
!1324 = distinct !DILocation(line: 446, column: 1, scope: !1307)
!1325 = !DILocation(line: 274, column: 1, scope: !1023, inlinedAt: !1324)
!1326 = distinct !DISubprogram(name: "x264_pixel_satd_x3_8x4", scope: !1, file: !1, line: 446, type: !93, scopeLine: 446, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1327)
!1327 = !{!1328, !1329, !1330, !1331, !1332, !1333}
!1328 = !DILocalVariable(name: "fenc", arg: 1, scope: !1326, file: !1, line: 446, type: !73)
!1329 = !DILocalVariable(name: "pix0", arg: 2, scope: !1326, file: !1, line: 446, type: !73)
!1330 = !DILocalVariable(name: "pix1", arg: 3, scope: !1326, file: !1, line: 446, type: !73)
!1331 = !DILocalVariable(name: "pix2", arg: 4, scope: !1326, file: !1, line: 446, type: !73)
!1332 = !DILocalVariable(name: "i_stride", arg: 5, scope: !1326, file: !1, line: 446, type: !31)
!1333 = !DILocalVariable(name: "scores", arg: 6, scope: !1326, file: !1, line: 446, type: !95)
!1334 = !DILocation(line: 0, scope: !1326)
!1335 = !DILocation(line: 446, column: 1, scope: !1326)
!1336 = distinct !DISubprogram(name: "x264_pixel_satd_x3_4x8", scope: !1, file: !1, line: 446, type: !93, scopeLine: 446, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1337)
!1337 = !{!1338, !1339, !1340, !1341, !1342, !1343}
!1338 = !DILocalVariable(name: "fenc", arg: 1, scope: !1336, file: !1, line: 446, type: !73)
!1339 = !DILocalVariable(name: "pix0", arg: 2, scope: !1336, file: !1, line: 446, type: !73)
!1340 = !DILocalVariable(name: "pix1", arg: 3, scope: !1336, file: !1, line: 446, type: !73)
!1341 = !DILocalVariable(name: "pix2", arg: 4, scope: !1336, file: !1, line: 446, type: !73)
!1342 = !DILocalVariable(name: "i_stride", arg: 5, scope: !1336, file: !1, line: 446, type: !31)
!1343 = !DILocalVariable(name: "scores", arg: 6, scope: !1336, file: !1, line: 446, type: !95)
!1344 = !DILocation(line: 0, scope: !1336)
!1345 = !DILocation(line: 0, scope: !1148, inlinedAt: !1346)
!1346 = distinct !DILocation(line: 446, column: 1, scope: !1336)
!1347 = !DILocation(line: 275, column: 1, scope: !1148, inlinedAt: !1346)
!1348 = !DILocation(line: 446, column: 1, scope: !1336)
!1349 = !DILocation(line: 0, scope: !1148, inlinedAt: !1350)
!1350 = distinct !DILocation(line: 446, column: 1, scope: !1336)
!1351 = !DILocation(line: 275, column: 1, scope: !1148, inlinedAt: !1350)
!1352 = !DILocation(line: 0, scope: !1148, inlinedAt: !1353)
!1353 = distinct !DILocation(line: 446, column: 1, scope: !1336)
!1354 = !DILocation(line: 275, column: 1, scope: !1148, inlinedAt: !1353)
!1355 = distinct !DISubprogram(name: "x264_pixel_satd_x3_4x4", scope: !1, file: !1, line: 446, type: !93, scopeLine: 446, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1356)
!1356 = !{!1357, !1358, !1359, !1360, !1361, !1362}
!1357 = !DILocalVariable(name: "fenc", arg: 1, scope: !1355, file: !1, line: 446, type: !73)
!1358 = !DILocalVariable(name: "pix0", arg: 2, scope: !1355, file: !1, line: 446, type: !73)
!1359 = !DILocalVariable(name: "pix1", arg: 3, scope: !1355, file: !1, line: 446, type: !73)
!1360 = !DILocalVariable(name: "pix2", arg: 4, scope: !1355, file: !1, line: 446, type: !73)
!1361 = !DILocalVariable(name: "i_stride", arg: 5, scope: !1355, file: !1, line: 446, type: !31)
!1362 = !DILocalVariable(name: "scores", arg: 6, scope: !1355, file: !1, line: 446, type: !95)
!1363 = !DILocation(line: 0, scope: !1355)
!1364 = !DILocation(line: 446, column: 1, scope: !1355)
!1365 = distinct !DISubprogram(name: "x264_pixel_satd_x4_16x16", scope: !1, file: !1, line: 446, type: !100, scopeLine: 446, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1366)
!1366 = !{!1367, !1368, !1369, !1370, !1371, !1372, !1373}
!1367 = !DILocalVariable(name: "fenc", arg: 1, scope: !1365, file: !1, line: 446, type: !73)
!1368 = !DILocalVariable(name: "pix0", arg: 2, scope: !1365, file: !1, line: 446, type: !73)
!1369 = !DILocalVariable(name: "pix1", arg: 3, scope: !1365, file: !1, line: 446, type: !73)
!1370 = !DILocalVariable(name: "pix2", arg: 4, scope: !1365, file: !1, line: 446, type: !73)
!1371 = !DILocalVariable(name: "pix3", arg: 5, scope: !1365, file: !1, line: 446, type: !73)
!1372 = !DILocalVariable(name: "i_stride", arg: 6, scope: !1365, file: !1, line: 446, type: !31)
!1373 = !DILocalVariable(name: "scores", arg: 7, scope: !1365, file: !1, line: 446, type: !95)
!1374 = !DILocation(line: 0, scope: !1365)
!1375 = !DILocation(line: 446, column: 1, scope: !1365)
!1376 = distinct !DISubprogram(name: "x264_pixel_satd_x4_16x8", scope: !1, file: !1, line: 446, type: !100, scopeLine: 446, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1377)
!1377 = !{!1378, !1379, !1380, !1381, !1382, !1383, !1384}
!1378 = !DILocalVariable(name: "fenc", arg: 1, scope: !1376, file: !1, line: 446, type: !73)
!1379 = !DILocalVariable(name: "pix0", arg: 2, scope: !1376, file: !1, line: 446, type: !73)
!1380 = !DILocalVariable(name: "pix1", arg: 3, scope: !1376, file: !1, line: 446, type: !73)
!1381 = !DILocalVariable(name: "pix2", arg: 4, scope: !1376, file: !1, line: 446, type: !73)
!1382 = !DILocalVariable(name: "pix3", arg: 5, scope: !1376, file: !1, line: 446, type: !73)
!1383 = !DILocalVariable(name: "i_stride", arg: 6, scope: !1376, file: !1, line: 446, type: !31)
!1384 = !DILocalVariable(name: "scores", arg: 7, scope: !1376, file: !1, line: 446, type: !95)
!1385 = !DILocation(line: 0, scope: !1376)
!1386 = !DILocation(line: 0, scope: !1001, inlinedAt: !1387)
!1387 = distinct !DILocation(line: 446, column: 1, scope: !1376)
!1388 = !DILocation(line: 272, column: 1, scope: !1001, inlinedAt: !1387)
!1389 = !DILocation(line: 272, column: 1, scope: !1011, inlinedAt: !1387)
!1390 = !DILocation(line: 446, column: 1, scope: !1376)
!1391 = !DILocation(line: 0, scope: !1001, inlinedAt: !1392)
!1392 = distinct !DILocation(line: 446, column: 1, scope: !1376)
!1393 = !DILocation(line: 272, column: 1, scope: !1001, inlinedAt: !1392)
!1394 = !DILocation(line: 272, column: 1, scope: !1011, inlinedAt: !1392)
!1395 = !DILocation(line: 0, scope: !1001, inlinedAt: !1396)
!1396 = distinct !DILocation(line: 446, column: 1, scope: !1376)
!1397 = !DILocation(line: 272, column: 1, scope: !1001, inlinedAt: !1396)
!1398 = !DILocation(line: 272, column: 1, scope: !1011, inlinedAt: !1396)
!1399 = !DILocation(line: 0, scope: !1001, inlinedAt: !1400)
!1400 = distinct !DILocation(line: 446, column: 1, scope: !1376)
!1401 = !DILocation(line: 272, column: 1, scope: !1001, inlinedAt: !1400)
!1402 = !DILocation(line: 272, column: 1, scope: !1011, inlinedAt: !1400)
!1403 = distinct !DISubprogram(name: "x264_pixel_satd_x4_8x16", scope: !1, file: !1, line: 446, type: !100, scopeLine: 446, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1404)
!1404 = !{!1405, !1406, !1407, !1408, !1409, !1410, !1411}
!1405 = !DILocalVariable(name: "fenc", arg: 1, scope: !1403, file: !1, line: 446, type: !73)
!1406 = !DILocalVariable(name: "pix0", arg: 2, scope: !1403, file: !1, line: 446, type: !73)
!1407 = !DILocalVariable(name: "pix1", arg: 3, scope: !1403, file: !1, line: 446, type: !73)
!1408 = !DILocalVariable(name: "pix2", arg: 4, scope: !1403, file: !1, line: 446, type: !73)
!1409 = !DILocalVariable(name: "pix3", arg: 5, scope: !1403, file: !1, line: 446, type: !73)
!1410 = !DILocalVariable(name: "i_stride", arg: 6, scope: !1403, file: !1, line: 446, type: !31)
!1411 = !DILocalVariable(name: "scores", arg: 7, scope: !1403, file: !1, line: 446, type: !95)
!1412 = !DILocation(line: 0, scope: !1403)
!1413 = !DILocation(line: 0, scope: !1012, inlinedAt: !1414)
!1414 = distinct !DILocation(line: 446, column: 1, scope: !1403)
!1415 = !DILocation(line: 273, column: 1, scope: !1012, inlinedAt: !1414)
!1416 = !DILocation(line: 273, column: 1, scope: !1022, inlinedAt: !1414)
!1417 = !DILocation(line: 446, column: 1, scope: !1403)
!1418 = !DILocation(line: 0, scope: !1012, inlinedAt: !1419)
!1419 = distinct !DILocation(line: 446, column: 1, scope: !1403)
!1420 = !DILocation(line: 273, column: 1, scope: !1012, inlinedAt: !1419)
!1421 = !DILocation(line: 273, column: 1, scope: !1022, inlinedAt: !1419)
!1422 = !DILocation(line: 0, scope: !1012, inlinedAt: !1423)
!1423 = distinct !DILocation(line: 446, column: 1, scope: !1403)
!1424 = !DILocation(line: 273, column: 1, scope: !1012, inlinedAt: !1423)
!1425 = !DILocation(line: 273, column: 1, scope: !1022, inlinedAt: !1423)
!1426 = !DILocation(line: 0, scope: !1012, inlinedAt: !1427)
!1427 = distinct !DILocation(line: 446, column: 1, scope: !1403)
!1428 = !DILocation(line: 273, column: 1, scope: !1012, inlinedAt: !1427)
!1429 = !DILocation(line: 273, column: 1, scope: !1022, inlinedAt: !1427)
!1430 = distinct !DISubprogram(name: "x264_pixel_satd_x4_8x8", scope: !1, file: !1, line: 446, type: !100, scopeLine: 446, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1431)
!1431 = !{!1432, !1433, !1434, !1435, !1436, !1437, !1438}
!1432 = !DILocalVariable(name: "fenc", arg: 1, scope: !1430, file: !1, line: 446, type: !73)
!1433 = !DILocalVariable(name: "pix0", arg: 2, scope: !1430, file: !1, line: 446, type: !73)
!1434 = !DILocalVariable(name: "pix1", arg: 3, scope: !1430, file: !1, line: 446, type: !73)
!1435 = !DILocalVariable(name: "pix2", arg: 4, scope: !1430, file: !1, line: 446, type: !73)
!1436 = !DILocalVariable(name: "pix3", arg: 5, scope: !1430, file: !1, line: 446, type: !73)
!1437 = !DILocalVariable(name: "i_stride", arg: 6, scope: !1430, file: !1, line: 446, type: !31)
!1438 = !DILocalVariable(name: "scores", arg: 7, scope: !1430, file: !1, line: 446, type: !95)
!1439 = !DILocation(line: 0, scope: !1430)
!1440 = !DILocation(line: 0, scope: !1023, inlinedAt: !1441)
!1441 = distinct !DILocation(line: 446, column: 1, scope: !1430)
!1442 = !DILocation(line: 274, column: 1, scope: !1023, inlinedAt: !1441)
!1443 = !DILocation(line: 446, column: 1, scope: !1430)
!1444 = !DILocation(line: 0, scope: !1023, inlinedAt: !1445)
!1445 = distinct !DILocation(line: 446, column: 1, scope: !1430)
!1446 = !DILocation(line: 274, column: 1, scope: !1023, inlinedAt: !1445)
!1447 = !DILocation(line: 0, scope: !1023, inlinedAt: !1448)
!1448 = distinct !DILocation(line: 446, column: 1, scope: !1430)
!1449 = !DILocation(line: 274, column: 1, scope: !1023, inlinedAt: !1448)
!1450 = !DILocation(line: 0, scope: !1023, inlinedAt: !1451)
!1451 = distinct !DILocation(line: 446, column: 1, scope: !1430)
!1452 = !DILocation(line: 274, column: 1, scope: !1023, inlinedAt: !1451)
!1453 = distinct !DISubprogram(name: "x264_pixel_satd_x4_8x4", scope: !1, file: !1, line: 446, type: !100, scopeLine: 446, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1454)
!1454 = !{!1455, !1456, !1457, !1458, !1459, !1460, !1461}
!1455 = !DILocalVariable(name: "fenc", arg: 1, scope: !1453, file: !1, line: 446, type: !73)
!1456 = !DILocalVariable(name: "pix0", arg: 2, scope: !1453, file: !1, line: 446, type: !73)
!1457 = !DILocalVariable(name: "pix1", arg: 3, scope: !1453, file: !1, line: 446, type: !73)
!1458 = !DILocalVariable(name: "pix2", arg: 4, scope: !1453, file: !1, line: 446, type: !73)
!1459 = !DILocalVariable(name: "pix3", arg: 5, scope: !1453, file: !1, line: 446, type: !73)
!1460 = !DILocalVariable(name: "i_stride", arg: 6, scope: !1453, file: !1, line: 446, type: !31)
!1461 = !DILocalVariable(name: "scores", arg: 7, scope: !1453, file: !1, line: 446, type: !95)
!1462 = !DILocation(line: 0, scope: !1453)
!1463 = !DILocation(line: 446, column: 1, scope: !1453)
!1464 = distinct !DISubprogram(name: "x264_pixel_satd_x4_4x8", scope: !1, file: !1, line: 446, type: !100, scopeLine: 446, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1465)
!1465 = !{!1466, !1467, !1468, !1469, !1470, !1471, !1472}
!1466 = !DILocalVariable(name: "fenc", arg: 1, scope: !1464, file: !1, line: 446, type: !73)
!1467 = !DILocalVariable(name: "pix0", arg: 2, scope: !1464, file: !1, line: 446, type: !73)
!1468 = !DILocalVariable(name: "pix1", arg: 3, scope: !1464, file: !1, line: 446, type: !73)
!1469 = !DILocalVariable(name: "pix2", arg: 4, scope: !1464, file: !1, line: 446, type: !73)
!1470 = !DILocalVariable(name: "pix3", arg: 5, scope: !1464, file: !1, line: 446, type: !73)
!1471 = !DILocalVariable(name: "i_stride", arg: 6, scope: !1464, file: !1, line: 446, type: !31)
!1472 = !DILocalVariable(name: "scores", arg: 7, scope: !1464, file: !1, line: 446, type: !95)
!1473 = !DILocation(line: 0, scope: !1464)
!1474 = !DILocation(line: 0, scope: !1148, inlinedAt: !1475)
!1475 = distinct !DILocation(line: 446, column: 1, scope: !1464)
!1476 = !DILocation(line: 275, column: 1, scope: !1148, inlinedAt: !1475)
!1477 = !DILocation(line: 446, column: 1, scope: !1464)
!1478 = !DILocation(line: 0, scope: !1148, inlinedAt: !1479)
!1479 = distinct !DILocation(line: 446, column: 1, scope: !1464)
!1480 = !DILocation(line: 275, column: 1, scope: !1148, inlinedAt: !1479)
!1481 = !DILocation(line: 0, scope: !1148, inlinedAt: !1482)
!1482 = distinct !DILocation(line: 446, column: 1, scope: !1464)
!1483 = !DILocation(line: 275, column: 1, scope: !1148, inlinedAt: !1482)
!1484 = !DILocation(line: 0, scope: !1148, inlinedAt: !1485)
!1485 = distinct !DILocation(line: 446, column: 1, scope: !1464)
!1486 = !DILocation(line: 275, column: 1, scope: !1148, inlinedAt: !1485)
!1487 = distinct !DISubprogram(name: "x264_pixel_satd_x4_4x4", scope: !1, file: !1, line: 446, type: !100, scopeLine: 446, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1488)
!1488 = !{!1489, !1490, !1491, !1492, !1493, !1494, !1495}
!1489 = !DILocalVariable(name: "fenc", arg: 1, scope: !1487, file: !1, line: 446, type: !73)
!1490 = !DILocalVariable(name: "pix0", arg: 2, scope: !1487, file: !1, line: 446, type: !73)
!1491 = !DILocalVariable(name: "pix1", arg: 3, scope: !1487, file: !1, line: 446, type: !73)
!1492 = !DILocalVariable(name: "pix2", arg: 4, scope: !1487, file: !1, line: 446, type: !73)
!1493 = !DILocalVariable(name: "pix3", arg: 5, scope: !1487, file: !1, line: 446, type: !73)
!1494 = !DILocalVariable(name: "i_stride", arg: 6, scope: !1487, file: !1, line: 446, type: !31)
!1495 = !DILocalVariable(name: "scores", arg: 7, scope: !1487, file: !1, line: 446, type: !95)
!1496 = !DILocation(line: 0, scope: !1487)
!1497 = !DILocation(line: 446, column: 1, scope: !1487)
!1498 = distinct !DISubprogram(name: "x264_pixel_hadamard_ac_16x16", scope: !1, file: !1, line: 377, type: !110, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1499)
!1499 = !{!1500, !1501, !1502}
!1500 = !DILocalVariable(name: "pix", arg: 1, scope: !1498, file: !1, line: 377, type: !73)
!1501 = !DILocalVariable(name: "stride", arg: 2, scope: !1498, file: !1, line: 377, type: !31)
!1502 = !DILocalVariable(name: "sum", scope: !1498, file: !1, line: 377, type: !28)
!1503 = !DILocation(line: 0, scope: !1498)
!1504 = !DILocation(line: 377, column: 1, scope: !1498)
!1505 = !DILocation(line: 377, column: 1, scope: !1506)
!1506 = distinct !DILexicalBlock(scope: !1498, file: !1, line: 377, column: 1)
!1507 = !DILocation(line: 377, column: 1, scope: !1508)
!1508 = distinct !DILexicalBlock(scope: !1498, file: !1, line: 377, column: 1)
!1509 = !DILocation(line: 377, column: 1, scope: !1510)
!1510 = distinct !DILexicalBlock(scope: !1498, file: !1, line: 377, column: 1)
!1511 = distinct !DISubprogram(name: "x264_pixel_hadamard_ac_16x8", scope: !1, file: !1, line: 378, type: !110, scopeLine: 378, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1512)
!1512 = !{!1513, !1514, !1515}
!1513 = !DILocalVariable(name: "pix", arg: 1, scope: !1511, file: !1, line: 378, type: !73)
!1514 = !DILocalVariable(name: "stride", arg: 2, scope: !1511, file: !1, line: 378, type: !31)
!1515 = !DILocalVariable(name: "sum", scope: !1511, file: !1, line: 378, type: !28)
!1516 = !DILocation(line: 0, scope: !1511)
!1517 = !DILocation(line: 378, column: 1, scope: !1511)
!1518 = !DILocation(line: 378, column: 1, scope: !1519)
!1519 = distinct !DILexicalBlock(scope: !1511, file: !1, line: 378, column: 1)
!1520 = distinct !DISubprogram(name: "x264_pixel_hadamard_ac_8x16", scope: !1, file: !1, line: 379, type: !110, scopeLine: 379, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1521)
!1521 = !{!1522, !1523, !1524}
!1522 = !DILocalVariable(name: "pix", arg: 1, scope: !1520, file: !1, line: 379, type: !73)
!1523 = !DILocalVariable(name: "stride", arg: 2, scope: !1520, file: !1, line: 379, type: !31)
!1524 = !DILocalVariable(name: "sum", scope: !1520, file: !1, line: 379, type: !28)
!1525 = !DILocation(line: 0, scope: !1520)
!1526 = !DILocation(line: 379, column: 1, scope: !1520)
!1527 = !DILocation(line: 379, column: 1, scope: !1528)
!1528 = distinct !DILexicalBlock(scope: !1520, file: !1, line: 379, column: 1)
!1529 = distinct !DISubprogram(name: "x264_pixel_hadamard_ac_8x8", scope: !1, file: !1, line: 380, type: !110, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1530)
!1530 = !{!1531, !1532, !1533}
!1531 = !DILocalVariable(name: "pix", arg: 1, scope: !1529, file: !1, line: 380, type: !73)
!1532 = !DILocalVariable(name: "stride", arg: 2, scope: !1529, file: !1, line: 380, type: !31)
!1533 = !DILocalVariable(name: "sum", scope: !1529, file: !1, line: 380, type: !28)
!1534 = !DILocation(line: 0, scope: !1529)
!1535 = !DILocation(line: 380, column: 1, scope: !1529)
!1536 = distinct !DISubprogram(name: "x264_pixel_ads4", scope: !1, file: !1, line: 538, type: !132, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1537)
!1537 = !{!1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1548}
!1538 = !DILocalVariable(name: "enc_dc", arg: 1, scope: !1536, file: !1, line: 538, type: !95)
!1539 = !DILocalVariable(name: "sums", arg: 2, scope: !1536, file: !1, line: 538, type: !134)
!1540 = !DILocalVariable(name: "delta", arg: 3, scope: !1536, file: !1, line: 538, type: !31)
!1541 = !DILocalVariable(name: "cost_mvx", arg: 4, scope: !1536, file: !1, line: 539, type: !134)
!1542 = !DILocalVariable(name: "mvs", arg: 5, scope: !1536, file: !1, line: 539, type: !135)
!1543 = !DILocalVariable(name: "width", arg: 6, scope: !1536, file: !1, line: 539, type: !31)
!1544 = !DILocalVariable(name: "thresh", arg: 7, scope: !1536, file: !1, line: 539, type: !31)
!1545 = !DILocalVariable(name: "nmv", scope: !1536, file: !1, line: 541, type: !31)
!1546 = !DILocalVariable(name: "i", scope: !1547, file: !1, line: 542, type: !31)
!1547 = distinct !DILexicalBlock(scope: !1536, file: !1, line: 542, column: 5)
!1548 = !DILocalVariable(name: "ads", scope: !1549, file: !1, line: 544, type: !31)
!1549 = distinct !DILexicalBlock(scope: !1550, file: !1, line: 543, column: 5)
!1550 = distinct !DILexicalBlock(scope: !1547, file: !1, line: 542, column: 5)
!1551 = !DILocation(line: 0, scope: !1536)
!1552 = !DILocation(line: 0, scope: !1547)
!1553 = !DILocation(line: 542, column: 23, scope: !1550)
!1554 = !DILocation(line: 542, column: 5, scope: !1547)
!1555 = !DILocation(line: 552, column: 5, scope: !1536)
!1556 = !DILocation(line: 544, column: 36, scope: !1549)
!1557 = !DILocation(line: 545, column: 36, scope: !1549)
!1558 = !DILocation(line: 546, column: 36, scope: !1549)
!1559 = !DILocation(line: 547, column: 36, scope: !1549)
!1560 = !DILocation(line: 544, column: 24, scope: !1549)
!1561 = !DILocation(line: 545, column: 34, scope: !1549)
!1562 = !DILocation(line: 545, column: 19, scope: !1549)
!1563 = !DILocation(line: 548, column: 19, scope: !1549)
!1564 = !DILocation(line: 548, column: 17, scope: !1549)
!1565 = !DILocation(line: 547, column: 17, scope: !1549)
!1566 = !DILocation(line: 0, scope: !1549)
!1567 = !DILocation(line: 549, column: 17, scope: !1568)
!1568 = distinct !DILexicalBlock(scope: !1549, file: !1, line: 549, column: 13)
!1569 = !DILocation(line: 549, column: 13, scope: !1549)
!1570 = !DILocation(line: 550, column: 26, scope: !1568)
!1571 = !DILocation(line: 550, column: 20, scope: !1568)
!1572 = !DILocation(line: 550, column: 13, scope: !1568)
!1573 = !DILocation(line: 550, column: 24, scope: !1568)
!1574 = !DILocation(line: 542, column: 33, scope: !1550)
!1575 = !DILocation(line: 542, column: 41, scope: !1550)
!1576 = distinct !{!1576, !1554, !1577}
!1577 = !DILocation(line: 551, column: 5, scope: !1547)
!1578 = distinct !DISubprogram(name: "x264_pixel_ads2", scope: !1, file: !1, line: 555, type: !132, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1579)
!1579 = !{!1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1590}
!1580 = !DILocalVariable(name: "enc_dc", arg: 1, scope: !1578, file: !1, line: 555, type: !95)
!1581 = !DILocalVariable(name: "sums", arg: 2, scope: !1578, file: !1, line: 555, type: !134)
!1582 = !DILocalVariable(name: "delta", arg: 3, scope: !1578, file: !1, line: 555, type: !31)
!1583 = !DILocalVariable(name: "cost_mvx", arg: 4, scope: !1578, file: !1, line: 556, type: !134)
!1584 = !DILocalVariable(name: "mvs", arg: 5, scope: !1578, file: !1, line: 556, type: !135)
!1585 = !DILocalVariable(name: "width", arg: 6, scope: !1578, file: !1, line: 556, type: !31)
!1586 = !DILocalVariable(name: "thresh", arg: 7, scope: !1578, file: !1, line: 556, type: !31)
!1587 = !DILocalVariable(name: "nmv", scope: !1578, file: !1, line: 558, type: !31)
!1588 = !DILocalVariable(name: "i", scope: !1589, file: !1, line: 559, type: !31)
!1589 = distinct !DILexicalBlock(scope: !1578, file: !1, line: 559, column: 5)
!1590 = !DILocalVariable(name: "ads", scope: !1591, file: !1, line: 561, type: !31)
!1591 = distinct !DILexicalBlock(scope: !1592, file: !1, line: 560, column: 5)
!1592 = distinct !DILexicalBlock(scope: !1589, file: !1, line: 559, column: 5)
!1593 = !DILocation(line: 0, scope: !1578)
!1594 = !DILocation(line: 0, scope: !1589)
!1595 = !DILocation(line: 559, column: 23, scope: !1592)
!1596 = !DILocation(line: 559, column: 5, scope: !1589)
!1597 = !DILocation(line: 567, column: 5, scope: !1578)
!1598 = !DILocation(line: 561, column: 24, scope: !1591)
!1599 = !DILocation(line: 561, column: 36, scope: !1591)
!1600 = !DILocation(line: 561, column: 34, scope: !1591)
!1601 = !DILocation(line: 561, column: 19, scope: !1591)
!1602 = !DILocation(line: 562, column: 24, scope: !1591)
!1603 = !DILocation(line: 562, column: 36, scope: !1591)
!1604 = !DILocation(line: 562, column: 34, scope: !1591)
!1605 = !DILocation(line: 562, column: 19, scope: !1591)
!1606 = !DILocation(line: 563, column: 19, scope: !1591)
!1607 = !DILocation(line: 562, column: 17, scope: !1591)
!1608 = !DILocation(line: 563, column: 17, scope: !1591)
!1609 = !DILocation(line: 0, scope: !1591)
!1610 = !DILocation(line: 564, column: 17, scope: !1611)
!1611 = distinct !DILexicalBlock(scope: !1591, file: !1, line: 564, column: 13)
!1612 = !DILocation(line: 564, column: 13, scope: !1591)
!1613 = !DILocation(line: 565, column: 26, scope: !1611)
!1614 = !DILocation(line: 565, column: 20, scope: !1611)
!1615 = !DILocation(line: 565, column: 13, scope: !1611)
!1616 = !DILocation(line: 565, column: 24, scope: !1611)
!1617 = !DILocation(line: 559, column: 33, scope: !1592)
!1618 = !DILocation(line: 559, column: 41, scope: !1592)
!1619 = distinct !{!1619, !1596, !1620}
!1620 = !DILocation(line: 566, column: 5, scope: !1589)
!1621 = distinct !DISubprogram(name: "x264_pixel_ads1", scope: !1, file: !1, line: 570, type: !132, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1622)
!1622 = !{!1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1633}
!1623 = !DILocalVariable(name: "enc_dc", arg: 1, scope: !1621, file: !1, line: 570, type: !95)
!1624 = !DILocalVariable(name: "sums", arg: 2, scope: !1621, file: !1, line: 570, type: !134)
!1625 = !DILocalVariable(name: "delta", arg: 3, scope: !1621, file: !1, line: 570, type: !31)
!1626 = !DILocalVariable(name: "cost_mvx", arg: 4, scope: !1621, file: !1, line: 571, type: !134)
!1627 = !DILocalVariable(name: "mvs", arg: 5, scope: !1621, file: !1, line: 571, type: !135)
!1628 = !DILocalVariable(name: "width", arg: 6, scope: !1621, file: !1, line: 571, type: !31)
!1629 = !DILocalVariable(name: "thresh", arg: 7, scope: !1621, file: !1, line: 571, type: !31)
!1630 = !DILocalVariable(name: "nmv", scope: !1621, file: !1, line: 573, type: !31)
!1631 = !DILocalVariable(name: "i", scope: !1632, file: !1, line: 574, type: !31)
!1632 = distinct !DILexicalBlock(scope: !1621, file: !1, line: 574, column: 5)
!1633 = !DILocalVariable(name: "ads", scope: !1634, file: !1, line: 576, type: !31)
!1634 = distinct !DILexicalBlock(scope: !1635, file: !1, line: 575, column: 5)
!1635 = distinct !DILexicalBlock(scope: !1632, file: !1, line: 574, column: 5)
!1636 = !DILocation(line: 0, scope: !1621)
!1637 = !DILocation(line: 0, scope: !1632)
!1638 = !DILocation(line: 574, column: 22, scope: !1635)
!1639 = !DILocation(line: 574, column: 5, scope: !1632)
!1640 = !DILocation(line: 581, column: 5, scope: !1621)
!1641 = !DILocation(line: 576, column: 24, scope: !1634)
!1642 = !DILocation(line: 576, column: 36, scope: !1634)
!1643 = !DILocation(line: 576, column: 34, scope: !1634)
!1644 = !DILocation(line: 576, column: 19, scope: !1634)
!1645 = !DILocation(line: 577, column: 19, scope: !1634)
!1646 = !DILocation(line: 577, column: 17, scope: !1634)
!1647 = !DILocation(line: 0, scope: !1634)
!1648 = !DILocation(line: 578, column: 17, scope: !1649)
!1649 = distinct !DILexicalBlock(scope: !1634, file: !1, line: 578, column: 13)
!1650 = !DILocation(line: 578, column: 13, scope: !1634)
!1651 = !DILocation(line: 579, column: 26, scope: !1649)
!1652 = !DILocation(line: 579, column: 20, scope: !1649)
!1653 = !DILocation(line: 579, column: 13, scope: !1649)
!1654 = !DILocation(line: 579, column: 24, scope: !1649)
!1655 = !DILocation(line: 574, column: 31, scope: !1635)
!1656 = !DILocation(line: 574, column: 39, scope: !1635)
!1657 = distinct !{!1657, !1639, !1658}
!1658 = !DILocation(line: 580, column: 5, scope: !1632)
!1659 = distinct !DISubprogram(name: "x264_pixel_sa8d_16x16", scope: !1, file: !1, line: 318, type: !71, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1660)
!1660 = !{!1661, !1662, !1663, !1664, !1665}
!1661 = !DILocalVariable(name: "pix1", arg: 1, scope: !1659, file: !1, line: 318, type: !73)
!1662 = !DILocalVariable(name: "i_pix1", arg: 2, scope: !1659, file: !1, line: 318, type: !31)
!1663 = !DILocalVariable(name: "pix2", arg: 3, scope: !1659, file: !1, line: 318, type: !73)
!1664 = !DILocalVariable(name: "i_pix2", arg: 4, scope: !1659, file: !1, line: 318, type: !31)
!1665 = !DILocalVariable(name: "sum", scope: !1659, file: !1, line: 320, type: !31)
!1666 = !DILocation(line: 0, scope: !1659)
!1667 = !DILocation(line: 320, column: 15, scope: !1659)
!1668 = !DILocation(line: 321, column: 29, scope: !1659)
!1669 = !DILocation(line: 321, column: 45, scope: !1659)
!1670 = !DILocation(line: 321, column: 15, scope: !1659)
!1671 = !DILocation(line: 322, column: 31, scope: !1659)
!1672 = !DILocation(line: 322, column: 29, scope: !1659)
!1673 = !DILocation(line: 322, column: 54, scope: !1659)
!1674 = !DILocation(line: 322, column: 52, scope: !1659)
!1675 = !DILocation(line: 322, column: 15, scope: !1659)
!1676 = !DILocation(line: 323, column: 31, scope: !1659)
!1677 = !DILocation(line: 323, column: 56, scope: !1659)
!1678 = !DILocation(line: 323, column: 15, scope: !1659)
!1679 = !DILocation(line: 321, column: 13, scope: !1659)
!1680 = !DILocation(line: 322, column: 13, scope: !1659)
!1681 = !DILocation(line: 323, column: 13, scope: !1659)
!1682 = !DILocation(line: 324, column: 16, scope: !1659)
!1683 = !DILocation(line: 324, column: 19, scope: !1659)
!1684 = !DILocation(line: 324, column: 5, scope: !1659)
!1685 = distinct !DISubprogram(name: "x264_pixel_sa8d_8x8", scope: !1, file: !1, line: 312, type: !71, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1686)
!1686 = !{!1687, !1688, !1689, !1690, !1691}
!1687 = !DILocalVariable(name: "pix1", arg: 1, scope: !1685, file: !1, line: 312, type: !73)
!1688 = !DILocalVariable(name: "i_pix1", arg: 2, scope: !1685, file: !1, line: 312, type: !31)
!1689 = !DILocalVariable(name: "pix2", arg: 3, scope: !1685, file: !1, line: 312, type: !73)
!1690 = !DILocalVariable(name: "i_pix2", arg: 4, scope: !1685, file: !1, line: 312, type: !31)
!1691 = !DILocalVariable(name: "sum", scope: !1685, file: !1, line: 314, type: !31)
!1692 = !DILocation(line: 0, scope: !1685)
!1693 = !DILocation(line: 314, column: 15, scope: !1685)
!1694 = !DILocation(line: 315, column: 16, scope: !1685)
!1695 = !DILocation(line: 315, column: 19, scope: !1685)
!1696 = !DILocation(line: 315, column: 5, scope: !1685)
!1697 = distinct !DISubprogram(name: "x264_pixel_var_16x16", scope: !1, file: !1, line: 159, type: !110, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1698)
!1698 = !{!1699, !1700, !1701, !1702, !1703, !1705}
!1699 = !DILocalVariable(name: "pix", arg: 1, scope: !1697, file: !1, line: 159, type: !73)
!1700 = !DILocalVariable(name: "i_stride", arg: 2, scope: !1697, file: !1, line: 159, type: !31)
!1701 = !DILocalVariable(name: "sum", scope: !1697, file: !1, line: 159, type: !26)
!1702 = !DILocalVariable(name: "sqr", scope: !1697, file: !1, line: 159, type: !26)
!1703 = !DILocalVariable(name: "y", scope: !1704, file: !1, line: 159, type: !31)
!1704 = distinct !DILexicalBlock(scope: !1697, file: !1, line: 159, column: 1)
!1705 = !DILocalVariable(name: "x", scope: !1706, file: !1, line: 159, type: !31)
!1706 = distinct !DILexicalBlock(scope: !1707, file: !1, line: 159, column: 1)
!1707 = distinct !DILexicalBlock(scope: !1708, file: !1, line: 159, column: 1)
!1708 = distinct !DILexicalBlock(scope: !1704, file: !1, line: 159, column: 1)
!1709 = !DILocation(line: 0, scope: !1697)
!1710 = !DILocation(line: 0, scope: !1704)
!1711 = !DILocation(line: 159, column: 1, scope: !1704)
!1712 = !DILocation(line: 0, scope: !1706)
!1713 = !DILocation(line: 159, column: 1, scope: !1714)
!1714 = distinct !DILexicalBlock(scope: !1715, file: !1, line: 159, column: 1)
!1715 = distinct !DILexicalBlock(scope: !1706, file: !1, line: 159, column: 1)
!1716 = !DILocation(line: 159, column: 1, scope: !1707)
!1717 = !DILocation(line: 159, column: 1, scope: !1708)
!1718 = distinct !{!1718, !1711, !1711}
!1719 = !DILocation(line: 159, column: 1, scope: !1697)
!1720 = distinct !DISubprogram(name: "x264_pixel_var_8x8", scope: !1, file: !1, line: 160, type: !110, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1721)
!1721 = !{!1722, !1723, !1724, !1725, !1726, !1728}
!1722 = !DILocalVariable(name: "pix", arg: 1, scope: !1720, file: !1, line: 160, type: !73)
!1723 = !DILocalVariable(name: "i_stride", arg: 2, scope: !1720, file: !1, line: 160, type: !31)
!1724 = !DILocalVariable(name: "sum", scope: !1720, file: !1, line: 160, type: !26)
!1725 = !DILocalVariable(name: "sqr", scope: !1720, file: !1, line: 160, type: !26)
!1726 = !DILocalVariable(name: "y", scope: !1727, file: !1, line: 160, type: !31)
!1727 = distinct !DILexicalBlock(scope: !1720, file: !1, line: 160, column: 1)
!1728 = !DILocalVariable(name: "x", scope: !1729, file: !1, line: 160, type: !31)
!1729 = distinct !DILexicalBlock(scope: !1730, file: !1, line: 160, column: 1)
!1730 = distinct !DILexicalBlock(scope: !1731, file: !1, line: 160, column: 1)
!1731 = distinct !DILexicalBlock(scope: !1727, file: !1, line: 160, column: 1)
!1732 = !DILocation(line: 0, scope: !1720)
!1733 = !DILocation(line: 0, scope: !1727)
!1734 = !DILocation(line: 0, scope: !1729)
!1735 = !DILocation(line: 160, column: 1, scope: !1736)
!1736 = distinct !DILexicalBlock(scope: !1737, file: !1, line: 160, column: 1)
!1737 = distinct !DILexicalBlock(scope: !1729, file: !1, line: 160, column: 1)
!1738 = !DILocation(line: 160, column: 1, scope: !1730)
!1739 = !DILocation(line: 160, column: 1, scope: !1720)
!1740 = distinct !DISubprogram(name: "ssim_4x4x2_core", scope: !1, file: !1, line: 461, type: !115, scopeLine: 464, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1741)
!1741 = !{!1742, !1743, !1744, !1745, !1746, !1747, !1749, !1752, !1753, !1754, !1755, !1757, !1760, !1763}
!1742 = !DILocalVariable(name: "pix1", arg: 1, scope: !1740, file: !1, line: 461, type: !117)
!1743 = !DILocalVariable(name: "stride1", arg: 2, scope: !1740, file: !1, line: 461, type: !31)
!1744 = !DILocalVariable(name: "pix2", arg: 3, scope: !1740, file: !1, line: 462, type: !117)
!1745 = !DILocalVariable(name: "stride2", arg: 4, scope: !1740, file: !1, line: 462, type: !31)
!1746 = !DILocalVariable(name: "sums", arg: 5, scope: !1740, file: !1, line: 463, type: !119)
!1747 = !DILocalVariable(name: "z", scope: !1748, file: !1, line: 465, type: !31)
!1748 = distinct !DILexicalBlock(scope: !1740, file: !1, line: 465, column: 5)
!1749 = !DILocalVariable(name: "s1", scope: !1750, file: !1, line: 467, type: !26)
!1750 = distinct !DILexicalBlock(scope: !1751, file: !1, line: 466, column: 5)
!1751 = distinct !DILexicalBlock(scope: !1748, file: !1, line: 465, column: 5)
!1752 = !DILocalVariable(name: "s2", scope: !1750, file: !1, line: 467, type: !26)
!1753 = !DILocalVariable(name: "ss", scope: !1750, file: !1, line: 467, type: !26)
!1754 = !DILocalVariable(name: "s12", scope: !1750, file: !1, line: 467, type: !26)
!1755 = !DILocalVariable(name: "y", scope: !1756, file: !1, line: 468, type: !31)
!1756 = distinct !DILexicalBlock(scope: !1750, file: !1, line: 468, column: 9)
!1757 = !DILocalVariable(name: "x", scope: !1758, file: !1, line: 469, type: !31)
!1758 = distinct !DILexicalBlock(scope: !1759, file: !1, line: 469, column: 13)
!1759 = distinct !DILexicalBlock(scope: !1756, file: !1, line: 468, column: 9)
!1760 = !DILocalVariable(name: "a", scope: !1761, file: !1, line: 471, type: !31)
!1761 = distinct !DILexicalBlock(scope: !1762, file: !1, line: 470, column: 13)
!1762 = distinct !DILexicalBlock(scope: !1758, file: !1, line: 469, column: 13)
!1763 = !DILocalVariable(name: "b", scope: !1761, file: !1, line: 472, type: !31)
!1764 = !DILocation(line: 0, scope: !1740)
!1765 = !DILocation(line: 0, scope: !1748)
!1766 = !DILocation(line: 465, column: 5, scope: !1748)
!1767 = !DILocation(line: 0, scope: !1756)
!1768 = !DILocation(line: 0, scope: !1750)
!1769 = !DILocation(line: 0, scope: !1758)
!1770 = !DILocation(line: 471, column: 25, scope: !1761)
!1771 = !DILocation(line: 0, scope: !1761)
!1772 = !DILocation(line: 472, column: 25, scope: !1761)
!1773 = !DILocation(line: 475, column: 25, scope: !1761)
!1774 = !DILocation(line: 476, column: 25, scope: !1761)
!1775 = !DILocation(line: 476, column: 21, scope: !1761)
!1776 = !DILocation(line: 477, column: 25, scope: !1761)
!1777 = !DILocation(line: 473, column: 21, scope: !1761)
!1778 = !DILocation(line: 474, column: 21, scope: !1761)
!1779 = !DILocation(line: 475, column: 21, scope: !1761)
!1780 = !DILocation(line: 477, column: 21, scope: !1761)
!1781 = !DILocation(line: 479, column: 9, scope: !1750)
!1782 = !DILocation(line: 479, column: 20, scope: !1750)
!1783 = !DILocation(line: 480, column: 9, scope: !1750)
!1784 = !DILocation(line: 480, column: 20, scope: !1750)
!1785 = !DILocation(line: 481, column: 9, scope: !1750)
!1786 = !DILocation(line: 481, column: 20, scope: !1750)
!1787 = !DILocation(line: 482, column: 9, scope: !1750)
!1788 = !DILocation(line: 482, column: 20, scope: !1750)
!1789 = !DILocation(line: 483, column: 14, scope: !1750)
!1790 = !DILocation(line: 484, column: 14, scope: !1750)
!1791 = distinct !{!1791, !1766, !1792}
!1792 = !DILocation(line: 485, column: 5, scope: !1748)
!1793 = !DILocation(line: 486, column: 1, scope: !1740)
!1794 = distinct !DISubprogram(name: "ssim_end4", scope: !1, file: !1, line: 498, type: !123, scopeLine: 499, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1795)
!1795 = !{!1796, !1797, !1798, !1799, !1800}
!1796 = !DILocalVariable(name: "sum0", arg: 1, scope: !1794, file: !1, line: 498, type: !119)
!1797 = !DILocalVariable(name: "sum1", arg: 2, scope: !1794, file: !1, line: 498, type: !119)
!1798 = !DILocalVariable(name: "width", arg: 3, scope: !1794, file: !1, line: 498, type: !31)
!1799 = !DILocalVariable(name: "ssim", scope: !1794, file: !1, line: 500, type: !32)
!1800 = !DILocalVariable(name: "i", scope: !1801, file: !1, line: 501, type: !31)
!1801 = distinct !DILexicalBlock(scope: !1794, file: !1, line: 501, column: 5)
!1802 = !DILocation(line: 0, scope: !1794)
!1803 = !DILocation(line: 0, scope: !1801)
!1804 = !DILocation(line: 501, column: 23, scope: !1805)
!1805 = distinct !DILexicalBlock(scope: !1801, file: !1, line: 501, column: 5)
!1806 = !DILocation(line: 501, column: 5, scope: !1801)
!1807 = !DILocation(line: 502, column: 28, scope: !1805)
!1808 = !DILocation(line: 502, column: 56, scope: !1805)
!1809 = !DILocation(line: 504, column: 28, scope: !1805)
!1810 = !DILocation(line: 504, column: 56, scope: !1805)
!1811 = !DILocation(line: 505, column: 28, scope: !1805)
!1812 = !DILocation(line: 505, column: 56, scope: !1805)
!1813 = !DILocation(line: 506, column: 5, scope: !1794)
!1814 = !DILocation(line: 502, column: 47, scope: !1805)
!1815 = !DILocation(line: 502, column: 41, scope: !1805)
!1816 = !DILocation(line: 502, column: 69, scope: !1805)
!1817 = !DILocation(line: 502, column: 39, scope: !1805)
!1818 = !DILocation(line: 502, column: 54, scope: !1805)
!1819 = !DILocation(line: 502, column: 67, scope: !1805)
!1820 = !DILocation(line: 504, column: 41, scope: !1805)
!1821 = !DILocation(line: 504, column: 39, scope: !1805)
!1822 = !DILocation(line: 504, column: 54, scope: !1805)
!1823 = !DILocation(line: 504, column: 69, scope: !1805)
!1824 = !DILocation(line: 504, column: 67, scope: !1805)
!1825 = !DILocation(line: 505, column: 41, scope: !1805)
!1826 = !DILocation(line: 505, column: 39, scope: !1805)
!1827 = !DILocation(line: 505, column: 54, scope: !1805)
!1828 = !DILocation(line: 505, column: 69, scope: !1805)
!1829 = !DILocation(line: 505, column: 67, scope: !1805)
!1830 = !DILocation(line: 0, scope: !36, inlinedAt: !1831)
!1831 = distinct !DILocation(line: 502, column: 17, scope: !1805)
!1832 = !DILocation(line: 492, column: 18, scope: !36, inlinedAt: !1831)
!1833 = !DILocation(line: 494, column: 21, scope: !36, inlinedAt: !1831)
!1834 = !DILocation(line: 492, column: 26, scope: !36, inlinedAt: !1831)
!1835 = !DILocation(line: 492, column: 34, scope: !36, inlinedAt: !1831)
!1836 = !DILocation(line: 492, column: 30, scope: !36, inlinedAt: !1831)
!1837 = !DILocation(line: 494, column: 24, scope: !36, inlinedAt: !1831)
!1838 = !DILocation(line: 494, column: 28, scope: !36, inlinedAt: !1831)
!1839 = !DILocation(line: 494, column: 12, scope: !36, inlinedAt: !1831)
!1840 = !DILocation(line: 494, column: 50, scope: !36, inlinedAt: !1831)
!1841 = !DILocation(line: 494, column: 57, scope: !36, inlinedAt: !1831)
!1842 = !DILocation(line: 494, column: 41, scope: !36, inlinedAt: !1831)
!1843 = !DILocation(line: 494, column: 39, scope: !36, inlinedAt: !1831)
!1844 = !DILocation(line: 495, column: 35, scope: !36, inlinedAt: !1831)
!1845 = !DILocation(line: 495, column: 13, scope: !36, inlinedAt: !1831)
!1846 = !DILocation(line: 495, column: 61, scope: !36, inlinedAt: !1831)
!1847 = !DILocation(line: 495, column: 48, scope: !36, inlinedAt: !1831)
!1848 = !DILocation(line: 495, column: 46, scope: !36, inlinedAt: !1831)
!1849 = !DILocation(line: 495, column: 10, scope: !36, inlinedAt: !1831)
!1850 = !DILocation(line: 502, column: 14, scope: !1805)
!1851 = distinct !{!1851, !1806, !1852}
!1852 = !DILocation(line: 505, column: 82, scope: !1801)
!1853 = distinct !DISubprogram(name: "pixel_var2_8x8", scope: !1, file: !1, line: 165, type: !105, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1854)
!1854 = !{!1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1865, !1869}
!1855 = !DILocalVariable(name: "pix1", arg: 1, scope: !1853, file: !1, line: 165, type: !73)
!1856 = !DILocalVariable(name: "i_stride1", arg: 2, scope: !1853, file: !1, line: 165, type: !31)
!1857 = !DILocalVariable(name: "pix2", arg: 3, scope: !1853, file: !1, line: 165, type: !73)
!1858 = !DILocalVariable(name: "i_stride2", arg: 4, scope: !1853, file: !1, line: 165, type: !31)
!1859 = !DILocalVariable(name: "ssd", arg: 5, scope: !1853, file: !1, line: 165, type: !95)
!1860 = !DILocalVariable(name: "var", scope: !1853, file: !1, line: 167, type: !26)
!1861 = !DILocalVariable(name: "sum", scope: !1853, file: !1, line: 167, type: !26)
!1862 = !DILocalVariable(name: "sqr", scope: !1853, file: !1, line: 167, type: !26)
!1863 = !DILocalVariable(name: "y", scope: !1864, file: !1, line: 168, type: !31)
!1864 = distinct !DILexicalBlock(scope: !1853, file: !1, line: 168, column: 5)
!1865 = !DILocalVariable(name: "x", scope: !1866, file: !1, line: 170, type: !31)
!1866 = distinct !DILexicalBlock(scope: !1867, file: !1, line: 170, column: 9)
!1867 = distinct !DILexicalBlock(scope: !1868, file: !1, line: 169, column: 5)
!1868 = distinct !DILexicalBlock(scope: !1864, file: !1, line: 168, column: 5)
!1869 = !DILocalVariable(name: "diff", scope: !1870, file: !1, line: 172, type: !31)
!1870 = distinct !DILexicalBlock(scope: !1871, file: !1, line: 171, column: 9)
!1871 = distinct !DILexicalBlock(scope: !1866, file: !1, line: 170, column: 9)
!1872 = !DILocation(line: 0, scope: !1853)
!1873 = !DILocation(line: 0, scope: !1864)
!1874 = !DILocation(line: 168, column: 5, scope: !1864)
!1875 = !DILocation(line: 0, scope: !1866)
!1876 = !DILocation(line: 0, scope: !1870)
!1877 = !DILocation(line: 172, column: 24, scope: !1870)
!1878 = !DILocation(line: 172, column: 34, scope: !1870)
!1879 = !DILocation(line: 172, column: 32, scope: !1870)
!1880 = !DILocation(line: 174, column: 25, scope: !1870)
!1881 = !DILocation(line: 174, column: 17, scope: !1870)
!1882 = !DILocation(line: 173, column: 17, scope: !1870)
!1883 = !DILocation(line: 176, column: 14, scope: !1867)
!1884 = !DILocation(line: 177, column: 14, scope: !1867)
!1885 = !DILocation(line: 168, column: 29, scope: !1868)
!1886 = !DILocation(line: 168, column: 23, scope: !1868)
!1887 = distinct !{!1887, !1874, !1888}
!1888 = !DILocation(line: 178, column: 5, scope: !1864)
!1889 = !DILocation(line: 180, column: 22, scope: !1853)
!1890 = !DILocation(line: 180, column: 28, scope: !1853)
!1891 = !DILocation(line: 180, column: 15, scope: !1853)
!1892 = !DILocation(line: 181, column: 10, scope: !1853)
!1893 = !DILocation(line: 182, column: 5, scope: !1853)
!1894 = distinct !DISubprogram(name: "pixel_hadamard_ac", scope: !1, file: !1, line: 328, type: !110, scopeLine: 329, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1895)
!1895 = !{!1896, !1897, !1898, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1911, !1915, !1917, !1921, !1922, !1923, !1924, !1926, !1930, !1931, !1932}
!1896 = !DILocalVariable(name: "pix", arg: 1, scope: !1894, file: !1, line: 328, type: !73)
!1897 = !DILocalVariable(name: "stride", arg: 2, scope: !1894, file: !1, line: 328, type: !31)
!1898 = !DILocalVariable(name: "tmp", scope: !1894, file: !1, line: 330, type: !1899)
!1899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 1024, elements: !1900)
!1900 = !{!1901}
!1901 = !DISubrange(count: 32)
!1902 = !DILocalVariable(name: "a0", scope: !1894, file: !1, line: 331, type: !26)
!1903 = !DILocalVariable(name: "a1", scope: !1894, file: !1, line: 331, type: !26)
!1904 = !DILocalVariable(name: "a2", scope: !1894, file: !1, line: 331, type: !26)
!1905 = !DILocalVariable(name: "a3", scope: !1894, file: !1, line: 331, type: !26)
!1906 = !DILocalVariable(name: "dc", scope: !1894, file: !1, line: 331, type: !26)
!1907 = !DILocalVariable(name: "sum4", scope: !1894, file: !1, line: 332, type: !31)
!1908 = !DILocalVariable(name: "sum8", scope: !1894, file: !1, line: 332, type: !31)
!1909 = !DILocalVariable(name: "i", scope: !1910, file: !1, line: 333, type: !31)
!1910 = distinct !DILexicalBlock(scope: !1894, file: !1, line: 333, column: 5)
!1911 = !DILocalVariable(name: "t", scope: !1912, file: !1, line: 335, type: !1914)
!1912 = distinct !DILexicalBlock(scope: !1913, file: !1, line: 334, column: 5)
!1913 = distinct !DILexicalBlock(scope: !1910, file: !1, line: 333, column: 5)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!1915 = !DILocalVariable(name: "i", scope: !1916, file: !1, line: 345, type: !31)
!1916 = distinct !DILexicalBlock(scope: !1894, file: !1, line: 345, column: 5)
!1917 = !DILocalVariable(name: "t0", scope: !1918, file: !1, line: 347, type: !31)
!1918 = distinct !DILexicalBlock(scope: !1919, file: !1, line: 347, column: 9)
!1919 = distinct !DILexicalBlock(scope: !1920, file: !1, line: 346, column: 5)
!1920 = distinct !DILexicalBlock(scope: !1916, file: !1, line: 345, column: 5)
!1921 = !DILocalVariable(name: "t1", scope: !1918, file: !1, line: 347, type: !31)
!1922 = !DILocalVariable(name: "t2", scope: !1918, file: !1, line: 347, type: !31)
!1923 = !DILocalVariable(name: "t3", scope: !1918, file: !1, line: 347, type: !31)
!1924 = !DILocalVariable(name: "i", scope: !1925, file: !1, line: 354, type: !31)
!1925 = distinct !DILexicalBlock(scope: !1894, file: !1, line: 354, column: 5)
!1926 = !DILocalVariable(name: "t0", scope: !1927, file: !1, line: 356, type: !31)
!1927 = distinct !DILexicalBlock(scope: !1928, file: !1, line: 356, column: 9)
!1928 = distinct !DILexicalBlock(scope: !1929, file: !1, line: 355, column: 5)
!1929 = distinct !DILexicalBlock(scope: !1925, file: !1, line: 354, column: 5)
!1930 = !DILocalVariable(name: "t1", scope: !1927, file: !1, line: 356, type: !31)
!1931 = !DILocalVariable(name: "t2", scope: !1927, file: !1, line: 356, type: !31)
!1932 = !DILocalVariable(name: "t3", scope: !1927, file: !1, line: 356, type: !31)
!1933 = distinct !DIAssignID()
!1934 = !DILocation(line: 0, scope: !1894)
!1935 = !DILocation(line: 330, column: 5, scope: !1894)
!1936 = !DILocation(line: 0, scope: !1910)
!1937 = !DILocation(line: 0, scope: !1912)
!1938 = !DILocation(line: 336, column: 15, scope: !1912)
!1939 = !DILocation(line: 336, column: 22, scope: !1912)
!1940 = !DILocation(line: 336, column: 21, scope: !1912)
!1941 = !DILocation(line: 336, column: 40, scope: !1912)
!1942 = !DILocation(line: 336, column: 48, scope: !1912)
!1943 = !DILocation(line: 336, column: 30, scope: !1912)
!1944 = !DILocation(line: 337, column: 15, scope: !1912)
!1945 = !DILocation(line: 337, column: 22, scope: !1912)
!1946 = !DILocation(line: 337, column: 21, scope: !1912)
!1947 = !DILocation(line: 337, column: 40, scope: !1912)
!1948 = !DILocation(line: 337, column: 48, scope: !1912)
!1949 = !DILocation(line: 337, column: 30, scope: !1912)
!1950 = !DILocation(line: 338, column: 19, scope: !1912)
!1951 = !DILocation(line: 338, column: 14, scope: !1912)
!1952 = !DILocation(line: 339, column: 19, scope: !1912)
!1953 = !DILocation(line: 339, column: 9, scope: !1912)
!1954 = !DILocation(line: 339, column: 14, scope: !1912)
!1955 = !DILocation(line: 340, column: 15, scope: !1912)
!1956 = !DILocation(line: 340, column: 22, scope: !1912)
!1957 = !DILocation(line: 340, column: 21, scope: !1912)
!1958 = !DILocation(line: 340, column: 40, scope: !1912)
!1959 = !DILocation(line: 340, column: 48, scope: !1912)
!1960 = !DILocation(line: 340, column: 30, scope: !1912)
!1961 = !DILocation(line: 341, column: 15, scope: !1912)
!1962 = !DILocation(line: 341, column: 22, scope: !1912)
!1963 = !DILocation(line: 341, column: 21, scope: !1912)
!1964 = !DILocation(line: 341, column: 40, scope: !1912)
!1965 = !DILocation(line: 341, column: 48, scope: !1912)
!1966 = !DILocation(line: 341, column: 30, scope: !1912)
!1967 = !DILocation(line: 342, column: 19, scope: !1912)
!1968 = !DILocation(line: 342, column: 9, scope: !1912)
!1969 = !DILocation(line: 342, column: 14, scope: !1912)
!1970 = !DILocation(line: 343, column: 20, scope: !1912)
!1971 = !DILocation(line: 343, column: 9, scope: !1912)
!1972 = !DILocation(line: 343, column: 15, scope: !1912)
!1973 = !DILocation(line: 333, column: 36, scope: !1913)
!1974 = !DILocation(line: 335, column: 27, scope: !1912)
!1975 = !DILocation(line: 335, column: 35, scope: !1912)
!1976 = !DILocation(line: 345, column: 5, scope: !1916)
!1977 = !DILocation(line: 345, column: 29, scope: !1920)
!1978 = !DILocation(line: 347, column: 9, scope: !1918)
!1979 = !DILocation(line: 348, column: 20, scope: !1919)
!1980 = !DILocation(line: 350, column: 20, scope: !1919)
!1981 = !DILocation(line: 351, column: 20, scope: !1919)
!1982 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !1983)
!1983 = distinct !DILocation(line: 352, column: 17, scope: !1919)
!1984 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !1985)
!1985 = distinct !DILocation(line: 352, column: 28, scope: !1919)
!1986 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !1987)
!1987 = distinct !DILocation(line: 352, column: 39, scope: !1919)
!1988 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !1989)
!1989 = distinct !DILocation(line: 352, column: 50, scope: !1919)
!1990 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !1983)
!1991 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !1983)
!1992 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !1983)
!1993 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !1983)
!1994 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !1985)
!1995 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !1985)
!1996 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !1985)
!1997 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !1985)
!1998 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !1987)
!1999 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !1987)
!2000 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !1987)
!2001 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !1987)
!2002 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !1989)
!2003 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !1989)
!2004 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !1989)
!2005 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !1989)
!2006 = !DILocation(line: 352, column: 26, scope: !1919)
!2007 = !DILocation(line: 352, column: 37, scope: !1919)
!2008 = !DILocation(line: 352, column: 48, scope: !1919)
!2009 = !DILocation(line: 352, column: 14, scope: !1919)
!2010 = distinct !{!2010, !1976, !2011, !245, !246}
!2011 = !DILocation(line: 353, column: 5, scope: !1916)
!2012 = !DILocation(line: 0, scope: !1925)
!2013 = !DILocation(line: 356, column: 9, scope: !1927)
!2014 = !DILocation(line: 0, scope: !1927)
!2015 = !DILocation(line: 0, scope: !1106, inlinedAt: !2016)
!2016 = distinct !DILocation(line: 357, column: 17, scope: !1928)
!2017 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !2016)
!2018 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !2016)
!2019 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !2016)
!2020 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !2016)
!2021 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !2016)
!2022 = !DILocation(line: 0, scope: !1106, inlinedAt: !2023)
!2023 = distinct !DILocation(line: 357, column: 28, scope: !1928)
!2024 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !2023)
!2025 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !2023)
!2026 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !2023)
!2027 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !2023)
!2028 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !2023)
!2029 = !DILocation(line: 0, scope: !1106, inlinedAt: !2030)
!2030 = distinct !DILocation(line: 357, column: 39, scope: !1928)
!2031 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !2030)
!2032 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !2030)
!2033 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !2030)
!2034 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !2030)
!2035 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !2030)
!2036 = !DILocation(line: 0, scope: !1106, inlinedAt: !2037)
!2037 = distinct !DILocation(line: 357, column: 50, scope: !1928)
!2038 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !2037)
!2039 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !2037)
!2040 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !2037)
!2041 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !2037)
!2042 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !2037)
!2043 = !DILocation(line: 357, column: 37, scope: !1928)
!2044 = !DILocation(line: 357, column: 48, scope: !1928)
!2045 = !DILocation(line: 357, column: 14, scope: !1928)
!2046 = !DILocation(line: 357, column: 26, scope: !1928)
!2047 = !DILocation(line: 359, column: 21, scope: !1894)
!2048 = !DILocation(line: 359, column: 30, scope: !1894)
!2049 = !DILocation(line: 359, column: 28, scope: !1894)
!2050 = !DILocation(line: 359, column: 39, scope: !1894)
!2051 = !DILocation(line: 359, column: 37, scope: !1894)
!2052 = !DILocation(line: 359, column: 49, scope: !1894)
!2053 = !DILocation(line: 359, column: 47, scope: !1894)
!2054 = !DILocation(line: 359, column: 10, scope: !1894)
!2055 = !DILocation(line: 360, column: 12, scope: !1894)
!2056 = !DILocation(line: 360, column: 44, scope: !1894)
!2057 = !DILocation(line: 360, column: 27, scope: !1894)
!2058 = !DILocation(line: 360, column: 50, scope: !1894)
!2059 = !DILocation(line: 361, column: 12, scope: !1894)
!2060 = !DILocation(line: 361, column: 44, scope: !1894)
!2061 = !DILocation(line: 361, column: 27, scope: !1894)
!2062 = !DILocation(line: 361, column: 50, scope: !1894)
!2063 = !DILocation(line: 362, column: 13, scope: !1894)
!2064 = !DILocation(line: 362, column: 27, scope: !1894)
!2065 = !DILocation(line: 362, column: 35, scope: !1894)
!2066 = !DILocation(line: 362, column: 33, scope: !1894)
!2067 = !DILocation(line: 363, column: 1, scope: !1894)
!2068 = !DILocation(line: 362, column: 5, scope: !1894)
!2069 = distinct !DISubprogram(name: "sa8d_8x8", scope: !1, file: !1, line: 278, type: !71, scopeLine: 279, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2070)
!2070 = !{!2071, !2072, !2073, !2074, !2075, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2094, !2098, !2099, !2100, !2101, !2103, !2107, !2108, !2109, !2110, !2112, !2113, !2114}
!2071 = !DILocalVariable(name: "pix1", arg: 1, scope: !2069, file: !1, line: 278, type: !73)
!2072 = !DILocalVariable(name: "i_pix1", arg: 2, scope: !2069, file: !1, line: 278, type: !31)
!2073 = !DILocalVariable(name: "pix2", arg: 3, scope: !2069, file: !1, line: 278, type: !73)
!2074 = !DILocalVariable(name: "i_pix2", arg: 4, scope: !2069, file: !1, line: 278, type: !31)
!2075 = !DILocalVariable(name: "tmp", scope: !2069, file: !1, line: 280, type: !2076)
!2076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 1024, elements: !2077)
!2077 = !{!2078, !85}
!2078 = !DISubrange(count: 8)
!2079 = !DILocalVariable(name: "a0", scope: !2069, file: !1, line: 281, type: !26)
!2080 = !DILocalVariable(name: "a1", scope: !2069, file: !1, line: 281, type: !26)
!2081 = !DILocalVariable(name: "a2", scope: !2069, file: !1, line: 281, type: !26)
!2082 = !DILocalVariable(name: "a3", scope: !2069, file: !1, line: 281, type: !26)
!2083 = !DILocalVariable(name: "a4", scope: !2069, file: !1, line: 281, type: !26)
!2084 = !DILocalVariable(name: "a5", scope: !2069, file: !1, line: 281, type: !26)
!2085 = !DILocalVariable(name: "a6", scope: !2069, file: !1, line: 281, type: !26)
!2086 = !DILocalVariable(name: "a7", scope: !2069, file: !1, line: 281, type: !26)
!2087 = !DILocalVariable(name: "b0", scope: !2069, file: !1, line: 281, type: !26)
!2088 = !DILocalVariable(name: "b1", scope: !2069, file: !1, line: 281, type: !26)
!2089 = !DILocalVariable(name: "b2", scope: !2069, file: !1, line: 281, type: !26)
!2090 = !DILocalVariable(name: "b3", scope: !2069, file: !1, line: 281, type: !26)
!2091 = !DILocalVariable(name: "sum", scope: !2069, file: !1, line: 282, type: !31)
!2092 = !DILocalVariable(name: "i", scope: !2093, file: !1, line: 283, type: !31)
!2093 = distinct !DILexicalBlock(scope: !2069, file: !1, line: 283, column: 5)
!2094 = !DILocalVariable(name: "t0", scope: !2095, file: !1, line: 297, type: !31)
!2095 = distinct !DILexicalBlock(scope: !2096, file: !1, line: 297, column: 9)
!2096 = distinct !DILexicalBlock(scope: !2097, file: !1, line: 284, column: 5)
!2097 = distinct !DILexicalBlock(scope: !2093, file: !1, line: 283, column: 5)
!2098 = !DILocalVariable(name: "t1", scope: !2095, file: !1, line: 297, type: !31)
!2099 = !DILocalVariable(name: "t2", scope: !2095, file: !1, line: 297, type: !31)
!2100 = !DILocalVariable(name: "t3", scope: !2095, file: !1, line: 297, type: !31)
!2101 = !DILocalVariable(name: "i", scope: !2102, file: !1, line: 299, type: !31)
!2102 = distinct !DILexicalBlock(scope: !2069, file: !1, line: 299, column: 5)
!2103 = !DILocalVariable(name: "t0", scope: !2104, file: !1, line: 301, type: !31)
!2104 = distinct !DILexicalBlock(scope: !2105, file: !1, line: 301, column: 9)
!2105 = distinct !DILexicalBlock(scope: !2106, file: !1, line: 300, column: 5)
!2106 = distinct !DILexicalBlock(scope: !2102, file: !1, line: 299, column: 5)
!2107 = !DILocalVariable(name: "t1", scope: !2104, file: !1, line: 301, type: !31)
!2108 = !DILocalVariable(name: "t2", scope: !2104, file: !1, line: 301, type: !31)
!2109 = !DILocalVariable(name: "t3", scope: !2104, file: !1, line: 301, type: !31)
!2110 = !DILocalVariable(name: "t0", scope: !2111, file: !1, line: 302, type: !31)
!2111 = distinct !DILexicalBlock(scope: !2105, file: !1, line: 302, column: 9)
!2112 = !DILocalVariable(name: "t1", scope: !2111, file: !1, line: 302, type: !31)
!2113 = !DILocalVariable(name: "t2", scope: !2111, file: !1, line: 302, type: !31)
!2114 = !DILocalVariable(name: "t3", scope: !2111, file: !1, line: 302, type: !31)
!2115 = distinct !DIAssignID()
!2116 = !DILocation(line: 0, scope: !2069)
!2117 = !DILocation(line: 280, column: 5, scope: !2069)
!2118 = !DILocation(line: 0, scope: !2093)
!2119 = !DILocation(line: 283, column: 5, scope: !2093)
!2120 = !DILocation(line: 0, scope: !2102)
!2121 = !DILocation(line: 301, column: 9, scope: !2104)
!2122 = !DILocation(line: 302, column: 9, scope: !2111)
!2123 = !DILocation(line: 306, column: 22, scope: !2105)
!2124 = !DILocation(line: 306, column: 36, scope: !2105)
!2125 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !2126)
!2126 = distinct !DILocation(line: 306, column: 15, scope: !2105)
!2127 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !2126)
!2128 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !2126)
!2129 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !2126)
!2130 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !2126)
!2131 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !2132)
!2132 = distinct !DILocation(line: 306, column: 29, scope: !2105)
!2133 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !2132)
!2134 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !2132)
!2135 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !2132)
!2136 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !2132)
!2137 = !DILocation(line: 304, column: 27, scope: !2105)
!2138 = !DILocation(line: 305, column: 36, scope: !2105)
!2139 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !2140)
!2140 = distinct !DILocation(line: 305, column: 29, scope: !2105)
!2141 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !2140)
!2142 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !2140)
!2143 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !2140)
!2144 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !2140)
!2145 = !DILocation(line: 303, column: 27, scope: !2105)
!2146 = !DILocation(line: 305, column: 22, scope: !2105)
!2147 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !2148)
!2148 = distinct !DILocation(line: 305, column: 15, scope: !2105)
!2149 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !2148)
!2150 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !2148)
!2151 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !2148)
!2152 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !2148)
!2153 = !DILocation(line: 304, column: 12, scope: !2105)
!2154 = !DILocation(line: 303, column: 36, scope: !2105)
!2155 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !2156)
!2156 = distinct !DILocation(line: 303, column: 29, scope: !2105)
!2157 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !2156)
!2158 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !2156)
!2159 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !2156)
!2160 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !2156)
!2161 = !DILocation(line: 305, column: 27, scope: !2105)
!2162 = !DILocation(line: 303, column: 22, scope: !2105)
!2163 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !2164)
!2164 = distinct !DILocation(line: 303, column: 15, scope: !2105)
!2165 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !2164)
!2166 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !2164)
!2167 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !2164)
!2168 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !2164)
!2169 = !DILocation(line: 305, column: 12, scope: !2105)
!2170 = !DILocation(line: 304, column: 36, scope: !2105)
!2171 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !2172)
!2172 = distinct !DILocation(line: 304, column: 29, scope: !2105)
!2173 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !2172)
!2174 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !2172)
!2175 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !2172)
!2176 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !2172)
!2177 = !DILocation(line: 306, column: 27, scope: !2105)
!2178 = !DILocation(line: 304, column: 22, scope: !2105)
!2179 = !DILocation(line: 201, column: 21, scope: !1106, inlinedAt: !2180)
!2180 = distinct !DILocation(line: 304, column: 15, scope: !2105)
!2181 = !DILocation(line: 201, column: 26, scope: !1106, inlinedAt: !2180)
!2182 = !DILocation(line: 201, column: 35, scope: !1106, inlinedAt: !2180)
!2183 = !DILocation(line: 202, column: 14, scope: !1106, inlinedAt: !2180)
!2184 = !DILocation(line: 202, column: 17, scope: !1106, inlinedAt: !2180)
!2185 = !DILocation(line: 306, column: 12, scope: !2105)
!2186 = !DILocation(line: 307, column: 16, scope: !2105)
!2187 = !DILocation(line: 307, column: 34, scope: !2105)
!2188 = !DILocation(line: 299, column: 5, scope: !2102)
!2189 = !DILocation(line: 310, column: 1, scope: !2069)
!2190 = !DILocation(line: 309, column: 5, scope: !2069)
!2191 = !DILocation(line: 285, column: 14, scope: !2096)
!2192 = !DILocation(line: 285, column: 24, scope: !2096)
!2193 = !DILocation(line: 285, column: 22, scope: !2096)
!2194 = !DILocation(line: 286, column: 14, scope: !2096)
!2195 = !DILocation(line: 286, column: 24, scope: !2096)
!2196 = !DILocation(line: 286, column: 22, scope: !2096)
!2197 = !DILocation(line: 287, column: 17, scope: !2096)
!2198 = !DILocation(line: 287, column: 28, scope: !2096)
!2199 = !DILocation(line: 287, column: 32, scope: !2096)
!2200 = !DILocation(line: 287, column: 22, scope: !2096)
!2201 = !DILocation(line: 288, column: 14, scope: !2096)
!2202 = !DILocation(line: 288, column: 24, scope: !2096)
!2203 = !DILocation(line: 288, column: 22, scope: !2096)
!2204 = !DILocation(line: 289, column: 14, scope: !2096)
!2205 = !DILocation(line: 289, column: 24, scope: !2096)
!2206 = !DILocation(line: 289, column: 22, scope: !2096)
!2207 = !DILocation(line: 290, column: 17, scope: !2096)
!2208 = !DILocation(line: 290, column: 28, scope: !2096)
!2209 = !DILocation(line: 290, column: 32, scope: !2096)
!2210 = !DILocation(line: 290, column: 22, scope: !2096)
!2211 = !DILocation(line: 291, column: 14, scope: !2096)
!2212 = !DILocation(line: 291, column: 24, scope: !2096)
!2213 = !DILocation(line: 291, column: 22, scope: !2096)
!2214 = !DILocation(line: 292, column: 14, scope: !2096)
!2215 = !DILocation(line: 292, column: 24, scope: !2096)
!2216 = !DILocation(line: 292, column: 22, scope: !2096)
!2217 = !DILocation(line: 293, column: 17, scope: !2096)
!2218 = !DILocation(line: 293, column: 28, scope: !2096)
!2219 = !DILocation(line: 293, column: 32, scope: !2096)
!2220 = !DILocation(line: 293, column: 22, scope: !2096)
!2221 = !DILocation(line: 294, column: 14, scope: !2096)
!2222 = !DILocation(line: 294, column: 24, scope: !2096)
!2223 = !DILocation(line: 294, column: 22, scope: !2096)
!2224 = !DILocation(line: 295, column: 14, scope: !2096)
!2225 = !DILocation(line: 295, column: 24, scope: !2096)
!2226 = !DILocation(line: 295, column: 22, scope: !2096)
!2227 = !DILocation(line: 296, column: 17, scope: !2096)
!2228 = !DILocation(line: 296, column: 28, scope: !2096)
!2229 = !DILocation(line: 296, column: 32, scope: !2096)
!2230 = !DILocation(line: 296, column: 22, scope: !2096)
!2231 = !DILocation(line: 297, column: 9, scope: !2095)
!2232 = !DILocation(line: 0, scope: !2095)
!2233 = !DILocation(line: 283, column: 29, scope: !2097)
!2234 = !DILocation(line: 283, column: 38, scope: !2097)
!2235 = !DILocation(line: 283, column: 54, scope: !2097)
!2236 = !DILocation(line: 283, column: 23, scope: !2097)
!2237 = distinct !{!2237, !2119, !2238}
!2238 = !DILocation(line: 298, column: 5, scope: !2093)
