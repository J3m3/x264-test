	.text
	.file	"pixel.c"
	.file	0 "/home/yjs/workspace/x264-test/src" "x264_src/common/pixel.c" md5 0xec44c8243ddf76cb02dcc088b0e26787
	.file	1 "x264_src/common" "pixel.h" md5 0xe9056d80edbb4dc2514d271d596c298e
	.file	2 "/usr/include" "stdint.h" md5 0xa48e64edacc5b19f56c99745232c963c
	.file	3 "/usr/include/x86_64-linux-gnu/bits" "types.h" md5 0xd108b5f93a74c50510d7d9bc0ab36df9
	.file	4 "/usr/include/x86_64-linux-gnu/bits" "stdint-uintn.h" md5 0x2bf2ae53c58c01b1a1b9383b5195125c
	.globl	x264_pixel_ssd_wxh              # -- Begin function x264_pixel_ssd_wxh
	.p2align	4, 0x90
	.type	x264_pixel_ssd_wxh,@function
x264_pixel_ssd_wxh:                     # @x264_pixel_ssd_wxh
.Lfunc_begin0:
	.loc	0 100 0                         # x264_src/common/pixel.c:100:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- $rsi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- $edx
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- $r8d
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- $r9d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$120, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp0:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
                                        # kill: def $r9d killed $r9d def $r9
	movl	%edx, 48(%rsp)                  # 4-byte Spill
.Ltmp1:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	movq	%rdi, %r15
	movl	176(%rsp), %eax
.Ltmp2:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- 0
	#DEBUG_VALUE: x264_pixel_ssd_wxh:align <- undef
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- 0
	.loc	0 107 19 prologue_end           # x264_src/common/pixel.c:107:19
	cmpl	$16, %eax
	movq	%r9, 56(%rsp)                   # 8-byte Spill
.Ltmp3:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	.loc	0 0 19 is_stmt 0                # x264_src/common/pixel.c:0:19
	movq	%rsi, 72(%rsp)                  # 8-byte Spill
.Ltmp4:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	movq	%rcx, 64(%rsp)                  # 8-byte Spill
.Ltmp5:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	movl	%r8d, 8(%rsp)                   # 4-byte Spill
.Ltmp6:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	movl	%edx, %r10d
.Ltmp7:
	.loc	0 107 5                         # x264_src/common/pixel.c:107:5
	jl	.LBB0_1
.Ltmp8:
# %bb.3:                                # %for.body.lr.ph
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- 0
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- 0
	.loc	0 0 5                           # x264_src/common/pixel.c:0:5
	addl	$-15, %eax
.Ltmp9:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:align <- undef
	.loc	0 103 35 is_stmt 1              # x264_src/common/pixel.c:103:35
	movl	%r10d, %edi
	orl	%esi, %edi
	.loc	0 103 52 is_stmt 0              # x264_src/common/pixel.c:103:52
	movl	%ecx, %edx
	orl	%r8d, %edx
	.loc	0 103 61                        # x264_src/common/pixel.c:103:61
	orl	%edi, %edx
	leal	-7(%r9), %ebx
	.loc	0 103 17                        # x264_src/common/pixel.c:103:17
	testb	$15, %dl
	je	.LBB0_4
.Ltmp10:
# %bb.11:                               # %for.body.lr.ph.split
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- 0
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- 0
	.loc	0 0 17                          # x264_src/common/pixel.c:0:17
	cmpl	$7, %r9d
	jle	.LBB0_12
.Ltmp11:
# %bb.13:                               # %for.body.us238.preheader
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- 0
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- 0
	.loc	0 107 5 is_stmt 1               # x264_src/common/pixel.c:107:5
	movl	%eax, %eax
	movq	%rax, 40(%rsp)                  # 8-byte Spill
	movslq	%r10d, %rax
	movslq	%r8d, %rdx
	shlq	$4, %rdx
	movq	%rdx, 16(%rsp)                  # 8-byte Spill
	shlq	$4, %rax
	movq	%rax, 24(%rsp)                  # 8-byte Spill
	xorl	%edx, %edx
	movq	%rsi, %rbp
	movl	%r10d, %esi
	movq	%rcx, %r12
	xorl	%r14d, %r14d
.Ltmp12:
	.p2align	4, 0x90
.LBB0_14:                               # %for.body.us238
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_15 Depth 2
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $rdx
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x <- 0
	.loc	0 0 5 is_stmt 0                 # x264_src/common/pixel.c:0:5
	movq	%rdx, 32(%rsp)                  # 8-byte Spill
.Ltmp13:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	xorl	%r13d, %r13d
.Ltmp14:
	.p2align	4, 0x90
.LBB0_15:                               # %for.body24.us245
                                        #   Parent Loop BB0_14 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x <- $r13
	.loc	0 114 13 is_stmt 1              # x264_src/common/pixel.c:114:13
	movq	%rbp, %rdi
	addq	%r13, %rdi
	leaq	(%r12,%r13), %rdx
	movl	%r8d, %ecx
	callq	*72(%r15)
.Ltmp15:
	.loc	0 0 13 is_stmt 0                # x264_src/common/pixel.c:0:13
	movl	48(%rsp), %esi                  # 4-byte Reload
	movl	8(%rsp), %r8d                   # 4-byte Reload
	.loc	0 114 13                        # x264_src/common/pixel.c:114:13
	cltq
	addq	%rax, %r14
.Ltmp16:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	.loc	0 113 33 is_stmt 1              # x264_src/common/pixel.c:113:33
	addq	$8, %r13
.Ltmp17:
	#DEBUG_VALUE: x <- $r13
	.loc	0 113 18 is_stmt 0              # x264_src/common/pixel.c:113:18
	cmpl	%r13d, %ebx
.Ltmp18:
	.loc	0 113 9                         # x264_src/common/pixel.c:113:9
	jg	.LBB0_15
.Ltmp19:
# %bb.16:                               # %for.cond20.for.end42_crit_edge.us263
                                        #   in Loop: Header=BB0_14 Depth=1
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	movq	32(%rsp), %rdx                  # 8-byte Reload
	.loc	0 107 36 is_stmt 1              # x264_src/common/pixel.c:107:36
	addq	$16, %rdx
.Ltmp20:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $rdx
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- undef
	.loc	0 107 5 is_stmt 0               # x264_src/common/pixel.c:107:5
	addq	16(%rsp), %r12                  # 8-byte Folded Reload
	addq	24(%rsp), %rbp                  # 8-byte Folded Reload
.Ltmp21:
	.loc	0 107 19                        # x264_src/common/pixel.c:107:19
	cmpq	40(%rsp), %rdx                  # 8-byte Folded Reload
.Ltmp22:
	.loc	0 107 5                         # x264_src/common/pixel.c:107:5
	jb	.LBB0_14
.Ltmp23:
# %bb.17:                               # %for.end45.loopexit292
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $rdx
	.loc	0 0 5                           # x264_src/common/pixel.c:0:5
	movq	56(%rsp), %r9                   # 8-byte Reload
.Ltmp24:
.LBB0_18:                               # %for.end45
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $rdx
	movl	176(%rsp), %eax
.Ltmp25:
	.loc	0 116 21 is_stmt 1              # x264_src/common/pixel.c:116:21
	addl	$-7, %eax
	.loc	0 116 11 is_stmt 0              # x264_src/common/pixel.c:116:11
	cmpl	%eax, %edx
.Ltmp26:
	.loc	0 116 9                         # x264_src/common/pixel.c:116:9
	jl	.LBB0_20
	jmp	.LBB0_23
.Ltmp27:
.LBB0_1:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- 0
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- 0
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	xorl	%edx, %edx
	jmp	.LBB0_2
.Ltmp28:
.LBB0_4:                                # %for.body.us.preheader
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- 0
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- 0
	leal	-15(%r9), %edx
	movl	%edx, 40(%rsp)                  # 4-byte Spill
.Ltmp29:
	.loc	0 107 5 is_stmt 1               # x264_src/common/pixel.c:107:5
	movslq	%r10d, %rdx
	movslq	%r8d, %rdi
	movl	%eax, %eax
	movq	%rax, 80(%rsp)                  # 8-byte Spill
	shlq	$4, %rdi
	movq	%rdi, 16(%rsp)                  # 8-byte Spill
	shlq	$4, %rdx
	movq	%rdx, 24(%rsp)                  # 8-byte Spill
	xorl	%edx, %edx
	movq	%rsi, %r12
	movl	%r10d, %esi
	movq	%rcx, %rbp
	xorl	%r14d, %r14d
	jmp	.LBB0_5
.Ltmp30:
	.p2align	4, 0x90
.LBB0_10:                               # %for.end42.us
                                        #   in Loop: Header=BB0_5 Depth=1
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 0 5 is_stmt 0                 # x264_src/common/pixel.c:0:5
	movq	32(%rsp), %rdx                  # 8-byte Reload
.Ltmp31:
	.loc	0 107 36                        # x264_src/common/pixel.c:107:36
	addq	$16, %rdx
.Ltmp32:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $rdx
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	.loc	0 107 5                         # x264_src/common/pixel.c:107:5
	addq	16(%rsp), %rbp                  # 8-byte Folded Reload
	addq	24(%rsp), %r12                  # 8-byte Folded Reload
.Ltmp33:
	.loc	0 107 19                        # x264_src/common/pixel.c:107:19
	cmpq	80(%rsp), %rdx                  # 8-byte Folded Reload
	movq	56(%rsp), %r9                   # 8-byte Reload
.Ltmp34:
	.loc	0 107 5                         # x264_src/common/pixel.c:107:5
	jae	.LBB0_18
.Ltmp35:
.LBB0_5:                                # %for.body.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_6 Depth 2
                                        #     Child Loop BB0_9 Depth 2
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	.loc	0 0 5                           # x264_src/common/pixel.c:0:5
	movq	%rdx, 32(%rsp)                  # 8-byte Spill
	xorl	%r13d, %r13d
	cmpl	$15, %r9d
.Ltmp36:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x <- 0
	.loc	0 111 13 is_stmt 1              # x264_src/common/pixel.c:111:13
	jle	.LBB0_7
.Ltmp37:
	.p2align	4, 0x90
.LBB0_6:                                # %for.body10.us
                                        #   Parent Loop BB0_5 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x <- $r13
	.loc	0 112 17                        # x264_src/common/pixel.c:112:17
	leaq	(%r12,%r13), %rdi
	movq	%rbp, %rdx
	addq	%r13, %rdx
	movl	%r8d, %ecx
	callq	*56(%r15)
.Ltmp38:
	.loc	0 0 17 is_stmt 0                # x264_src/common/pixel.c:0:17
	movl	48(%rsp), %esi                  # 4-byte Reload
	movl	8(%rsp), %r8d                   # 4-byte Reload
	.loc	0 112 17                        # x264_src/common/pixel.c:112:17
	cltq
	addq	%rax, %r14
.Ltmp39:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	.loc	0 111 38 is_stmt 1              # x264_src/common/pixel.c:111:38
	addq	$16, %r13
.Ltmp40:
	#DEBUG_VALUE: x <- $r13
	.loc	0 111 22 is_stmt 0              # x264_src/common/pixel.c:111:22
	cmpl	%r13d, 40(%rsp)                 # 4-byte Folded Reload
.Ltmp41:
	.loc	0 111 13                        # x264_src/common/pixel.c:111:13
	jg	.LBB0_6
.Ltmp42:
.LBB0_7:                                # %if.end.loopexit.us
                                        #   in Loop: Header=BB0_5 Depth=1
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- undef
	#DEBUG_VALUE: x <- undef
	.loc	0 113 18 is_stmt 1              # x264_src/common/pixel.c:113:18
	cmpl	%ebx, %r13d
.Ltmp43:
	.loc	0 113 9 is_stmt 0               # x264_src/common/pixel.c:113:9
	jge	.LBB0_10
.Ltmp44:
# %bb.8:                                # %for.body24.lr.ph.us
                                        #   in Loop: Header=BB0_5 Depth=1
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	movl	%r13d, %r13d
.Ltmp45:
	.p2align	4, 0x90
.LBB0_9:                                # %for.body24.us
                                        #   Parent Loop BB0_5 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x <- $r13
	.loc	0 114 13 is_stmt 1              # x264_src/common/pixel.c:114:13
	leaq	(%r12,%r13), %rdi
	movq	%rbp, %rdx
	addq	%r13, %rdx
	movl	%r8d, %ecx
	callq	*72(%r15)
.Ltmp46:
	.loc	0 0 13 is_stmt 0                # x264_src/common/pixel.c:0:13
	movl	48(%rsp), %esi                  # 4-byte Reload
	movl	8(%rsp), %r8d                   # 4-byte Reload
	.loc	0 114 13                        # x264_src/common/pixel.c:114:13
	cltq
	addq	%rax, %r14
.Ltmp47:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	.loc	0 113 33 is_stmt 1              # x264_src/common/pixel.c:113:33
	addq	$8, %r13
.Ltmp48:
	#DEBUG_VALUE: x <- $r13
	.loc	0 113 18 is_stmt 0              # x264_src/common/pixel.c:113:18
	cmpl	%r13d, %ebx
.Ltmp49:
	.loc	0 113 9                         # x264_src/common/pixel.c:113:9
	jg	.LBB0_9
	jmp	.LBB0_10
.Ltmp50:
.LBB0_12:                               # %for.body.preheader
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- 0
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- 0
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	movl	176(%rsp), %eax
	.loc	0 107 5 is_stmt 1               # x264_src/common/pixel.c:107:5
	movl	%eax, %edx
	andl	$2147483632, %edx               # imm = 0x7FFFFFF0
.Ltmp51:
.LBB0_2:                                # %for.end45
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- 0
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- 0
	.loc	0 0 5 is_stmt 0                 # x264_src/common/pixel.c:0:5
	xorl	%r14d, %r14d
	movl	%r10d, %esi
.Ltmp52:
	.loc	0 116 21 is_stmt 1              # x264_src/common/pixel.c:116:21
	addl	$-7, %eax
	.loc	0 116 11 is_stmt 0              # x264_src/common/pixel.c:116:11
	cmpl	%eax, %edx
.Ltmp53:
	.loc	0 116 9                         # x264_src/common/pixel.c:116:9
	jge	.LBB0_23
.Ltmp54:
.LBB0_20:                               # %for.cond51.preheader
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x <- 0
	.loc	0 117 27 is_stmt 1              # x264_src/common/pixel.c:117:27
	cmpl	$8, %r9d
.Ltmp55:
	.loc	0 117 9 is_stmt 0               # x264_src/common/pixel.c:117:9
	jl	.LBB0_23
.Ltmp56:
# %bb.21:                               # %for.body55.lr.ph
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x <- 0
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	leal	-7(%r9), %ebx
	movl	%edx, %eax
	imull	%esi, %eax
	movslq	%eax, %r12
	addq	72(%rsp), %r12                  # 8-byte Folded Reload
	imull	%r8d, %edx
	movslq	%edx, %r13
	addq	64(%rsp), %r13                  # 8-byte Folded Reload
	xorl	%ebp, %ebp
.Ltmp57:
	.p2align	4, 0x90
.LBB0_22:                               # %for.body55
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x <- $rbp
	.loc	0 118 13 is_stmt 1              # x264_src/common/pixel.c:118:13
	leaq	(%r12,%rbp), %rdi
	movq	%r13, %rdx
	addq	%rbp, %rdx
	movl	%r8d, %ecx
	callq	*80(%r15)
.Ltmp58:
	.loc	0 0 13 is_stmt 0                # x264_src/common/pixel.c:0:13
	movl	48(%rsp), %esi                  # 4-byte Reload
	movl	8(%rsp), %r8d                   # 4-byte Reload
	.loc	0 118 13                        # x264_src/common/pixel.c:118:13
	cltq
	addq	%rax, %r14
.Ltmp59:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	.loc	0 117 42 is_stmt 1              # x264_src/common/pixel.c:117:42
	addq	$8, %rbp
.Ltmp60:
	#DEBUG_VALUE: x <- $rbp
	.loc	0 117 27 is_stmt 0              # x264_src/common/pixel.c:117:27
	cmpl	%ebp, %ebx
.Ltmp61:
	.loc	0 117 9                         # x264_src/common/pixel.c:117:9
	jg	.LBB0_22
.Ltmp62:
.LBB0_23:                               # %if.end74
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	movq	56(%rsp), %rdx                  # 8-byte Reload
.Ltmp63:
	.loc	0 122 17 is_stmt 1              # x264_src/common/pixel.c:122:17
	testb	$7, %dl
.Ltmp64:
	.loc	0 122 9 is_stmt 0               # x264_src/common/pixel.c:122:9
	je	.LBB0_34
.Ltmp65:
# %bb.24:                               # %for.cond78.preheader
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	movl	176(%rsp), %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-8, %eax
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
.Ltmp66:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- 0
	.loc	0 124 9 is_stmt 1               # x264_src/common/pixel.c:124:9
	jle	.LBB0_34
.Ltmp67:
# %bb.25:                               # %for.body82.lr.ph
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- 0
	.loc	0 0 9 is_stmt 0                 # x264_src/common/pixel.c:0:9
	movl	%edx, %ecx
	andl	$-8, %ecx
	cmpl	%edx, %ecx
	jne	.LBB0_26
.Ltmp68:
.LBB0_34:                               # %if.end108
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	movl	176(%rsp), %esi
.Ltmp69:
	.loc	0 128 18 is_stmt 1              # x264_src/common/pixel.c:128:18
	testb	$7, %sil
.Ltmp70:
	.loc	0 128 9 is_stmt 0               # x264_src/common/pixel.c:128:9
	je	.LBB0_47
.Ltmp71:
# %bb.35:                               # %if.then111
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	.loc	0 130 27 is_stmt 1              # x264_src/common/pixel.c:130:27
	movl	%esi, %eax
	andl	$-8, %eax
.Ltmp72:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $eax
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	.loc	0 130 35 is_stmt 0              # x264_src/common/pixel.c:130:35
	cmpl	%esi, %eax
	sete	%cl
	movq	56(%rsp), %rdi                  # 8-byte Reload
	testl	%edi, %edi
	setle	%dl
.Ltmp73:
	.loc	0 130 9                         # x264_src/common/pixel.c:130:9
	orb	%cl, %dl
	jne	.LBB0_47
.Ltmp74:
# %bb.36:                               # %for.cond118.preheader.us.preheader
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $eax
	movslq	%eax, %r13
	movslq	%esi, %rbp
	movslq	48(%rsp), %r15                  # 4-byte Folded Reload
	movslq	8(%rsp), %r10                   # 4-byte Folded Reload
	movl	%edi, %eax
.Ltmp75:
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	movq	%rax, 8(%rsp)                   # 8-byte Spill
.Ltmp76:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- undef
	movl	%eax, %r8d
	andl	$2147483644, %r8d               # imm = 0x7FFFFFFC
                                        # kill: def $eax killed $eax killed $rax def $rax
	andl	$3, %eax
	movq	%rax, 24(%rsp)                  # 8-byte Spill
	movq	%r10, 40(%rsp)                  # 8-byte Spill
	.loc	0 130 9                         # x264_src/common/pixel.c:130:9
	imulq	%r13, %r10
	movq	64(%rsp), %rcx                  # 8-byte Reload
	leaq	(%rcx,%r10), %r11
	addq	$3, %r11
	movq	%r15, 48(%rsp)                  # 8-byte Spill
.Ltmp77:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- undef
	imulq	%r13, %r15
	movq	72(%rsp), %rax                  # 8-byte Reload
	leaq	(%rax,%r15), %r12
	addq	$3, %r12
	addq	%rcx, %r10
	addq	%rax, %r15
	movq	%rbp, 16(%rsp)                  # 8-byte Spill
	jmp	.LBB0_37
.Ltmp78:
	.p2align	4, 0x90
.LBB0_46:                               # %for.cond118.for.cond.cleanup121_crit_edge.us
                                        #   in Loop: Header=BB0_37 Depth=1
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $r13
	.loc	0 130 48                        # x264_src/common/pixel.c:130:48
	incq	%r13
.Ltmp79:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $r13
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- undef
	.loc	0 0 48                          # x264_src/common/pixel.c:0:48
	movq	40(%rsp), %rcx                  # 8-byte Reload
.Ltmp80:
	.loc	0 130 9                         # x264_src/common/pixel.c:130:9
	addq	%rcx, %r11
	movq	48(%rsp), %rax                  # 8-byte Reload
	addq	%rax, %r12
	addq	%rcx, %r10
	addq	%rax, %r15
.Ltmp81:
	.loc	0 130 35                        # x264_src/common/pixel.c:130:35
	cmpq	%rbp, %r13
.Ltmp82:
	.loc	0 130 9                         # x264_src/common/pixel.c:130:9
	jge	.LBB0_47
.Ltmp83:
.LBB0_37:                               # %for.cond118.preheader.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_40 Depth 2
                                        #     Child Loop BB0_43 Depth 2
                                        #     Child Loop BB0_45 Depth 2
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	cmpl	$4, %edi
.Ltmp84:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $r13
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x <- 0
	.loc	0 131 13 is_stmt 1              # x264_src/common/pixel.c:131:13
	jae	.LBB0_39
.Ltmp85:
# %bb.38:                               #   in Loop: Header=BB0_37 Depth=1
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $r13
	#DEBUG_VALUE: x <- 0
	.loc	0 0 13 is_stmt 0                # x264_src/common/pixel.c:0:13
	xorl	%ecx, %ecx
	.loc	0 131 13                        # x264_src/common/pixel.c:131:13
	jmp	.LBB0_42
.Ltmp86:
	.p2align	4, 0x90
.LBB0_39:                               # %vector.body356.preheader
                                        #   in Loop: Header=BB0_37 Depth=1
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $r13
	#DEBUG_VALUE: x <- 0
	.loc	0 0 13                          # x264_src/common/pixel.c:0:13
	movq	%r13, 32(%rsp)                  # 8-byte Spill
.Ltmp87:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	xorl	%ecx, %ecx
	xorl	%ebp, %ebp
	xorl	%r13d, %r13d
	xorl	%ebx, %ebx
.Ltmp88:
	.p2align	4, 0x90
.LBB0_40:                               # %vector.body356
                                        #   Parent Loop BB0_37 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x <- 0
	.loc	0 132 17 is_stmt 1              # x264_src/common/pixel.c:132:17
	movzbl	-3(%r12,%rcx), %edx
	movzbl	-2(%r12,%rcx), %esi
	movzbl	-1(%r12,%rcx), %eax
	movzbl	(%r12,%rcx), %r9d
	movzbl	-3(%r11,%rcx), %edi
	subl	%edi, %edx
	movzbl	-2(%r11,%rcx), %edi
	subl	%edi, %esi
	movzbl	-1(%r11,%rcx), %edi
	subl	%edi, %eax
	movzbl	(%r11,%rcx), %edi
	subl	%edi, %r9d
	imull	%edx, %edx
	imull	%esi, %esi
	imull	%eax, %eax
	imull	%r9d, %r9d
	addq	%rdx, %r14
	addq	%rsi, %rbp
	addq	%rax, %r13
	addq	%r9, %rbx
.Ltmp89:
	.loc	0 131 43                        # x264_src/common/pixel.c:131:43
	addq	$4, %rcx
	cmpq	%rcx, %r8
	jne	.LBB0_40
.Ltmp90:
# %bb.41:                               # %middle.block349
                                        #   in Loop: Header=BB0_37 Depth=1
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x <- 0
	.loc	0 131 13 is_stmt 0              # x264_src/common/pixel.c:131:13
	addq	%r14, %rbp
	addq	%rbp, %r13
	addq	%r13, %rbx
	movq	%r8, %rcx
	movq	%rbx, %r14
	cmpl	8(%rsp), %r8d                   # 4-byte Folded Reload
	movq	56(%rsp), %rdi                  # 8-byte Reload
	movq	32(%rsp), %r13                  # 8-byte Reload
	movq	16(%rsp), %rbp                  # 8-byte Reload
	je	.LBB0_46
.Ltmp91:
.LBB0_42:                               # %for.body122.us.preheader
                                        #   in Loop: Header=BB0_37 Depth=1
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $r13
	#DEBUG_VALUE: x <- 0
	.loc	0 0 13                          # x264_src/common/pixel.c:0:13
	movq	24(%rsp), %r9                   # 8-byte Reload
	movq	%rcx, %rbx
	testq	%r9, %r9
	.loc	0 131 13                        # x264_src/common/pixel.c:131:13
	je	.LBB0_44
.Ltmp92:
	.p2align	4, 0x90
.LBB0_43:                               # %for.body122.us.prol
                                        #   Parent Loop BB0_37 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $r13
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x <- $rbx
	.loc	0 132 17 is_stmt 1              # x264_src/common/pixel.c:132:17
	movzbl	(%r15,%rbx), %eax
	movzbl	(%r10,%rbx), %edx
	subl	%edx, %eax
.Ltmp93:
	#DEBUG_VALUE: d <- $eax
	imull	%eax, %eax
.Ltmp94:
	addq	%rax, %r14
.Ltmp95:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	.loc	0 131 43                        # x264_src/common/pixel.c:131:43
	incq	%rbx
.Ltmp96:
	#DEBUG_VALUE: x <- $rbx
	.loc	0 131 13 is_stmt 0              # x264_src/common/pixel.c:131:13
	decq	%r9
	jne	.LBB0_43
.Ltmp97:
.LBB0_44:                               # %for.body122.us.prol.loopexit
                                        #   in Loop: Header=BB0_37 Depth=1
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $r13
	.loc	0 0 13                          # x264_src/common/pixel.c:0:13
	movq	8(%rsp), %r9                    # 8-byte Reload
	.loc	0 131 13                        # x264_src/common/pixel.c:131:13
	subq	%r9, %rcx
	cmpq	$-4, %rcx
	ja	.LBB0_46
.Ltmp98:
	.p2align	4, 0x90
.LBB0_45:                               # %for.body122.us
                                        #   Parent Loop BB0_37 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $r13
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x <- $rbx
	.loc	0 132 17 is_stmt 1              # x264_src/common/pixel.c:132:17
	movzbl	-3(%r12,%rbx), %eax
	movzbl	-3(%r11,%rbx), %ecx
	subl	%ecx, %eax
.Ltmp99:
	#DEBUG_VALUE: d <- $eax
	imull	%eax, %eax
.Ltmp100:
	addq	%r14, %rax
.Ltmp101:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $rax
	#DEBUG_VALUE: x <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rbx
	movzbl	-2(%r12,%rbx), %ecx
	movzbl	-2(%r11,%rbx), %edx
	subl	%edx, %ecx
.Ltmp102:
	#DEBUG_VALUE: d <- $ecx
	imull	%ecx, %ecx
.Ltmp103:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- undef
	#DEBUG_VALUE: x <- [DW_OP_plus_uconst 2, DW_OP_stack_value] $rbx
	movzbl	-1(%r12,%rbx), %edx
	movzbl	-1(%r11,%rbx), %esi
	subl	%esi, %edx
.Ltmp104:
	#DEBUG_VALUE: d <- $edx
	imull	%edx, %edx
.Ltmp105:
	addq	%rcx, %rdx
	addq	%rax, %rdx
.Ltmp106:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $rdx
	#DEBUG_VALUE: x <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $rbx
	movzbl	(%r12,%rbx), %r14d
	movzbl	(%r11,%rbx), %eax
	subl	%eax, %r14d
.Ltmp107:
	#DEBUG_VALUE: d <- $r14d
	imull	%r14d, %r14d
.Ltmp108:
	addq	%rdx, %r14
.Ltmp109:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	.loc	0 131 43                        # x264_src/common/pixel.c:131:43
	addq	$4, %rbx
.Ltmp110:
	#DEBUG_VALUE: x <- $rbx
	.loc	0 131 31 is_stmt 0              # x264_src/common/pixel.c:131:31
	cmpq	%rbx, %r9
.Ltmp111:
	.loc	0 131 13                        # x264_src/common/pixel.c:131:13
	jne	.LBB0_45
	jmp	.LBB0_46
.Ltmp112:
.LBB0_47:                               # %if.end144
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	.loc	0 136 5 is_stmt 1               # x264_src/common/pixel.c:136:5
	movq	%r14, %rax
	.loc	0 136 5 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:136:5
	addq	$120, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp113:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $rax
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp114:
.LBB0_26:                               # %for.body82.us.preheader
	.cfi_def_cfa_offset 176
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- $r15
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- 0
	.loc	0 124 9 is_stmt 1               # x264_src/common/pixel.c:124:9
	movslq	%ecx, %rdi
	movslq	%edx, %rcx
	movslq	%esi, %r9
	movslq	%r8d, %r8
.Ltmp115:
	.loc	0 124 23 is_stmt 0              # x264_src/common/pixel.c:124:23
	movl	%eax, %r11d
.Ltmp116:
	.loc	0 124 9                         # x264_src/common/pixel.c:124:9
	movq	%rdi, %r12
	orq	$1, %r12
	cmpq	%rcx, %r12
	cmovleq	%rcx, %r12
	movq	%r12, %r13
	subq	%rdi, %r13
	movl	%r12d, %eax
	andl	$3, %eax
	movq	%r13, %rdx
	movq	%rax, 96(%rsp)                  # 8-byte Spill
	subq	%rax, %rdx
	addq	%rdi, %rdx
	movq	%rdx, 88(%rsp)                  # 8-byte Spill
	andq	$-4, %r12
	subq	%rdi, %r12
	movq	64(%rsp), %rax                  # 8-byte Reload
	leaq	(%rax,%rdi), %rbx
	addq	$3, %rbx
	movq	72(%rsp), %r10                  # 8-byte Reload
	movq	%rdi, 32(%rsp)                  # 8-byte Spill
	leaq	(%r10,%rdi), %r15
.Ltmp117:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	addq	$3, %r15
	xorl	%ebp, %ebp
	movq	%r9, 24(%rsp)                   # 8-byte Spill
	movq	%r8, 16(%rsp)                   # 8-byte Spill
	movq	%r11, 80(%rsp)                  # 8-byte Spill
	movq	%rcx, 112(%rsp)                 # 8-byte Spill
	movq	%r13, 104(%rsp)                 # 8-byte Spill
	jmp	.LBB0_27
.Ltmp118:
	.p2align	4, 0x90
.LBB0_33:                               # %for.cond85.for.cond.cleanup88_crit_edge.us
                                        #   in Loop: Header=BB0_27 Depth=1
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $rbp
	.loc	0 124 43                        # x264_src/common/pixel.c:124:43
	incq	%rbp
.Ltmp119:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $rbp
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- undef
	.loc	0 124 9                         # x264_src/common/pixel.c:124:9
	addq	%r8, %rbx
	addq	%r9, %r15
	addq	%r8, %rax
	addq	%r9, %r10
.Ltmp120:
	.loc	0 124 23                        # x264_src/common/pixel.c:124:23
	cmpq	%r11, %rbp
.Ltmp121:
	.loc	0 124 9                         # x264_src/common/pixel.c:124:9
	je	.LBB0_34
.Ltmp122:
.LBB0_27:                               # %for.body82.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_30 Depth 2
                                        #     Child Loop BB0_32 Depth 2
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	cmpq	$4, %r13
.Ltmp123:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $rbp
	#DEBUG_VALUE: x <- undef
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	.loc	0 125 13 is_stmt 1              # x264_src/common/pixel.c:125:13
	jae	.LBB0_29
.Ltmp124:
# %bb.28:                               #   in Loop: Header=BB0_27 Depth=1
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $rbp
	.loc	0 0 13 is_stmt 0                # x264_src/common/pixel.c:0:13
	movq	32(%rsp), %rdi                  # 8-byte Reload
	.loc	0 125 13                        # x264_src/common/pixel.c:125:13
	jmp	.LBB0_32
.Ltmp125:
	.p2align	4, 0x90
.LBB0_29:                               # %vector.body.preheader
                                        #   in Loop: Header=BB0_27 Depth=1
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $rbp
	.loc	0 0 13                          # x264_src/common/pixel.c:0:13
	movq	%rbp, 40(%rsp)                  # 8-byte Spill
.Ltmp126:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- [DW_OP_plus_uconst 40, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	xorl	%r9d, %r9d
	xorl	%edi, %edi
	xorl	%r11d, %r11d
	xorl	%ebp, %ebp
.Ltmp127:
	.p2align	4, 0x90
.LBB0_30:                               # %vector.body
                                        #   Parent Loop BB0_27 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- [DW_OP_plus_uconst 40, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 126 17 is_stmt 1              # x264_src/common/pixel.c:126:17
	movzbl	-3(%r15,%r9), %edx
	movzbl	-2(%r15,%r9), %esi
	movq	%r12, %rcx
	movzbl	-1(%r15,%r9), %r12d
	movzbl	(%r15,%r9), %r13d
	movzbl	-3(%rbx,%r9), %r8d
	subl	%r8d, %edx
	movzbl	-2(%rbx,%r9), %r8d
	subl	%r8d, %esi
	movzbl	-1(%rbx,%r9), %r8d
	subl	%r8d, %r12d
	movzbl	(%rbx,%r9), %r8d
	subl	%r8d, %r13d
	imull	%edx, %edx
	imull	%esi, %esi
	imull	%r12d, %r12d
	imull	%r13d, %r13d
	addq	%rdx, %r14
	addq	%rsi, %rdi
	addq	%r12, %r11
	movq	%rcx, %r12
	addq	%r13, %rbp
	addq	$4, %r9
	cmpq	%r9, %rcx
	jne	.LBB0_30
.Ltmp128:
# %bb.31:                               # %middle.block
                                        #   in Loop: Header=BB0_27 Depth=1
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- [DW_OP_plus_uconst 40, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 125 13                        # x264_src/common/pixel.c:125:13
	addq	%r14, %rdi
	addq	%rdi, %r11
	addq	%r11, %rbp
	movq	88(%rsp), %rdi                  # 8-byte Reload
	movq	%rbp, %r14
	cmpq	$0, 96(%rsp)                    # 8-byte Folded Reload
	movq	24(%rsp), %r9                   # 8-byte Reload
	movq	16(%rsp), %r8                   # 8-byte Reload
	movq	80(%rsp), %r11                  # 8-byte Reload
	movq	112(%rsp), %rcx                 # 8-byte Reload
	movq	104(%rsp), %r13                 # 8-byte Reload
	movq	40(%rsp), %rbp                  # 8-byte Reload
	je	.LBB0_33
.Ltmp129:
	.p2align	4, 0x90
.LBB0_32:                               # %for.body89.us
                                        #   Parent Loop BB0_27 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix1 <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_width <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_height <- [DW_OP_plus_uconst 176] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssd_wxh:y <- $rbp
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	#DEBUG_VALUE: x <- $rdi
	.loc	0 126 17                        # x264_src/common/pixel.c:126:17
	movzbl	(%r10,%rdi), %edx
	movzbl	(%rax,%rdi), %esi
	subl	%esi, %edx
.Ltmp130:
	#DEBUG_VALUE: d <- $edx
	imull	%edx, %edx
.Ltmp131:
	addq	%rdx, %r14
.Ltmp132:
	#DEBUG_VALUE: x264_pixel_ssd_wxh:i_ssd <- $r14
	.loc	0 125 54                        # x264_src/common/pixel.c:125:54
	incq	%rdi
.Ltmp133:
	#DEBUG_VALUE: x <- $rdi
	.loc	0 125 42 is_stmt 0              # x264_src/common/pixel.c:125:42
	cmpq	%rcx, %rdi
.Ltmp134:
	.loc	0 125 13                        # x264_src/common/pixel.c:125:13
	jl	.LBB0_32
	jmp	.LBB0_33
.Ltmp135:
.Lfunc_end0:
	.size	x264_pixel_ssd_wxh, .Lfunc_end0-x264_pixel_ssd_wxh
	.cfi_endproc
                                        # -- End function
	.globl	x264_pixel_ssim_wxh             # -- Begin function x264_pixel_ssim_wxh
	.p2align	4, 0x90
	.type	x264_pixel_ssim_wxh,@function
x264_pixel_ssim_wxh:                    # @x264_pixel_ssim_wxh
.Lfunc_begin1:
	.loc	0 513 0 is_stmt 1               # x264_src/common/pixel.c:513:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- $rdi
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- $rsi
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- $edx
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- $r8d
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- $r9d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$136, %rsp
	.cfi_def_cfa_offset 192
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp136:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 192] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- [DW_OP_plus_uconst 200] [$rsp+0]
                                        # kill: def $r9d killed $r9d def $r9
	movq	%rcx, 96(%rsp)                  # 8-byte Spill
.Ltmp137:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	movq	%rsi, 88(%rsp)                  # 8-byte Spill
.Ltmp138:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	.loc	0 517 34 prologue_end           # x264_src/common/pixel.c:517:34
	leal	3(%r9), %ecx
	testl	%r9d, %r9d
	cmovnsl	%r9d, %ecx
.Ltmp139:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- undef
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- undef
	.loc	0 0 34 is_stmt 0                # x264_src/common/pixel.c:0:34
	movl	192(%rsp), %eax
.Ltmp140:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- 0
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- 0.000000e+00
	.loc	0 519 12 is_stmt 1              # x264_src/common/pixel.c:519:12
	sarl	$2, %eax
.Ltmp141:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- $eax
	.loc	0 0 12 is_stmt 0                # x264_src/common/pixel.c:0:12
	xorps	%xmm0, %xmm0
.Ltmp142:
	#DEBUG_VALUE: y <- 1
	.loc	0 520 23 is_stmt 1              # x264_src/common/pixel.c:520:23
	cmpl	$2, %eax
.Ltmp143:
	.loc	0 520 5 is_stmt 0               # x264_src/common/pixel.c:520:5
	jl	.LBB1_18
.Ltmp144:
# %bb.1:                                # %for.cond3.preheader.lr.ph
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- $rdi
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- $edx
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- $r8d
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- $eax
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- 0
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- 0.000000e+00
	#DEBUG_VALUE: y <- 1
	.loc	0 0 5                           # x264_src/common/pixel.c:0:5
	sarl	$2, %r9d
.Ltmp145:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- $r9d
	testl	%r9d, %r9d
	jle	.LBB1_18
.Ltmp146:
# %bb.2:                                # %for.cond3.preheader.lr.ph.split.us
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- $rdi
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- $edx
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- $r8d
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- $r9d
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- $eax
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- 0
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- 0.000000e+00
	#DEBUG_VALUE: y <- 1
	movq	%rdi, %rbx
	movq	200(%rsp), %r12
	sarl	$2, %ecx
	movslq	%ecx, %rcx
	shlq	$4, %rcx
	leaq	(%r12,%rcx), %r13
	addq	$48, %r13
.Ltmp147:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- $r13
	.loc	0 520 5                         # x264_src/common/pixel.c:520:5
	movl	%r9d, %ecx
	movq	%rcx, 112(%rsp)                 # 8-byte Spill
	movl	%edx, 24(%rsp)                  # 4-byte Spill
.Ltmp148:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	movslq	%edx, %rcx
	movl	%r8d, 28(%rsp)                  # 4-byte Spill
.Ltmp149:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	movslq	%r8d, %rdx
	cmpl	$1, %r9d
	movq	%rdi, 80(%rsp)                  # 8-byte Spill
.Ltmp150:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	.loc	0 0 5                           # x264_src/common/pixel.c:0:5
	jne	.LBB1_11
.Ltmp151:
# %bb.3:                                # %for.cond3.preheader.us.preheader
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- $eax
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- $r13
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- 0
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- 0.000000e+00
	#DEBUG_VALUE: y <- 1
	.loc	0 520 23                        # x264_src/common/pixel.c:520:23
	movl	%eax, %esi
.Ltmp152:
	.loc	0 522 9 is_stmt 1               # x264_src/common/pixel.c:522:9
	shlq	$2, %rdx
	shlq	$2, %rcx
	xorl	%eax, %eax
.Ltmp153:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- $esi
	.loc	0 0 9 is_stmt 0                 # x264_src/common/pixel.c:0:9
	movl	$1, %edi
	movq	%rcx, 40(%rsp)                  # 8-byte Spill
	movq	%rdx, 32(%rsp)                  # 8-byte Spill
	movq	%rsi, 48(%rsp)                  # 8-byte Spill
.Ltmp154:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	movq	112(%rsp), %rbx                 # 8-byte Reload
	jmp	.LBB1_4
.Ltmp155:
	.p2align	4, 0x90
.LBB1_10:                               # %for.cond22.preheader.us
                                        #   in Loop: Header=BB1_4 Depth=1
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- $r12
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- $r13
	#DEBUG_VALUE: y <- $rdi
	#DEBUG_VALUE: x <- 0
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- undef
	.loc	0 520 34 is_stmt 1              # x264_src/common/pixel.c:520:34
	incq	%rdi
.Ltmp156:
	#DEBUG_VALUE: y <- $rdi
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- undef
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- $r12
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- $eax
	.loc	0 520 23 is_stmt 0              # x264_src/common/pixel.c:520:23
	cmpq	%rsi, %rdi
	je	.LBB1_18
.Ltmp157:
.LBB1_4:                                # %for.cond3.preheader.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB1_6 Depth 2
                                        #       Child Loop BB1_7 Depth 3
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: y <- $rdi
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- undef
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- $r13
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- $r12
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- $eax
	.loc	0 522 18 is_stmt 1              # x264_src/common/pixel.c:522:18
	movslq	%eax, %r8
	cmpq	%r8, %rdi
	jl	.LBB1_10
.Ltmp158:
# %bb.5:                                # %for.cond6.preheader.us.us.preheader
                                        #   in Loop: Header=BB1_4 Depth=1
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- $r12
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- $r13
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- $eax
	#DEBUG_VALUE: y <- $rdi
	.loc	0 522 9 is_stmt 0               # x264_src/common/pixel.c:522:9
	movq	%rdx, %r15
	imulq	%r8, %r15
	addq	96(%rsp), %r15                  # 8-byte Folded Reload
	movq	%rcx, %r14
	imulq	%r8, %r14
	addq	88(%rsp), %r14                  # 8-byte Folded Reload
	movq	%rdi, 56(%rsp)                  # 8-byte Spill
.Ltmp159:
	#DEBUG_VALUE: y <- [DW_OP_plus_uconst 56, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.p2align	4, 0x90
.LBB1_6:                                # %for.cond6.preheader.us.us
                                        #   Parent Loop BB1_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB1_7 Depth 3
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- $r12
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- $r13
	#DEBUG_VALUE: y <- [DW_OP_plus_uconst 56, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	movq	%r8, (%rsp)                     # 8-byte Spill
	movq	%r12, 64(%rsp)                  # 8-byte Spill
.Ltmp160:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- $r13
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- [DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x <- 0
	movq	%r14, 8(%rsp)                   # 8-byte Spill
	movq	%r15, 72(%rsp)                  # 8-byte Spill
	movq	%r13, 16(%rsp)                  # 8-byte Spill
.Ltmp161:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	xorl	%ebp, %ebp
	movq	80(%rsp), %r12                  # 8-byte Reload
.Ltmp162:
	.p2align	4, 0x90
.LBB1_7:                                # %for.body9.us.us
                                        #   Parent Loop BB1_4 Depth=1
                                        #     Parent Loop BB1_6 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- [DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: y <- [DW_OP_plus_uconst 56, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x <- $rbp
	.loc	0 526 17 is_stmt 1              # x264_src/common/pixel.c:526:17
	movq	%r14, %rdi
	movl	24(%rsp), %esi                  # 4-byte Reload
	movq	%r15, %rdx
	movl	28(%rsp), %ecx                  # 4-byte Reload
	movq	%r13, %r8
	callq	*664(%r12)
.Ltmp163:
	.loc	0 525 41                        # x264_src/common/pixel.c:525:41
	addq	$2, %rbp
.Ltmp164:
	#DEBUG_VALUE: x <- $rbp
	.loc	0 525 31 is_stmt 0              # x264_src/common/pixel.c:525:31
	addq	$32, %r13
	addq	$8, %r15
	addq	$8, %r14
	cmpq	%rbx, %rbp
.Ltmp165:
	.loc	0 525 13                        # x264_src/common/pixel.c:525:13
	jb	.LBB1_7
.Ltmp166:
# %bb.8:                                # %for.cond6.for.cond.cleanup8_crit_edge.us.us
                                        #   in Loop: Header=BB1_6 Depth=2
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- [DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: y <- [DW_OP_plus_uconst 56, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 0 13                          # x264_src/common/pixel.c:0:13
	movq	(%rsp), %rsi                    # 8-byte Reload
	.loc	0 522 25 is_stmt 1              # x264_src/common/pixel.c:522:25
	leaq	1(%rsi), %rax
.Ltmp167:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- $rax
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 0 25 is_stmt 0                # x264_src/common/pixel.c:0:25
	movq	32(%rsp), %rdx                  # 8-byte Reload
	movq	72(%rsp), %r15                  # 8-byte Reload
.Ltmp168:
	.loc	0 522 9                         # x264_src/common/pixel.c:522:9
	addq	%rdx, %r15
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	8(%rsp), %r14                   # 8-byte Reload
	addq	%rcx, %r14
	movq	64(%rsp), %r9                   # 8-byte Reload
	movq	%r9, %r13
	movq	56(%rsp), %rdi                  # 8-byte Reload
.Ltmp169:
	.loc	0 522 18                        # x264_src/common/pixel.c:522:18
	cmpq	%rdi, %rsi
	movq	%rax, %r8
	movq	16(%rsp), %r12                  # 8-byte Reload
.Ltmp170:
	.loc	0 522 9                         # x264_src/common/pixel.c:522:9
	jl	.LBB1_6
.Ltmp171:
# %bb.9:                                # %for.cond22.preheader.us.loopexit
                                        #   in Loop: Header=BB1_4 Depth=1
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- $rax
	#DEBUG_VALUE: y <- [DW_OP_plus_uconst 56, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	movq	%r9, %r13
	xorps	%xmm0, %xmm0
	movq	48(%rsp), %rsi                  # 8-byte Reload
	jmp	.LBB1_10
.Ltmp172:
.LBB1_11:                               # %for.cond3.preheader.us.us.preheader
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- $eax
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- $r13
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- 0
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- 0.000000e+00
	#DEBUG_VALUE: y <- 1
	decl	%r9d
	movq	%r9, 128(%rsp)                  # 8-byte Spill
	.loc	0 520 5 is_stmt 1               # x264_src/common/pixel.c:520:5
	movl	%r9d, %esi
	movq	%rsi, 72(%rsp)                  # 8-byte Spill
.Ltmp173:
	.loc	0 520 23 is_stmt 0              # x264_src/common/pixel.c:520:23
	movl	%eax, %eax
.Ltmp174:
	.loc	0 0 23                          # x264_src/common/pixel.c:0:23
	movq	%rax, 120(%rsp)                 # 8-byte Spill
.Ltmp175:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	0 522 9 is_stmt 1               # x264_src/common/pixel.c:522:9
	shlq	$2, %rdx
	movq	%rdx, 32(%rsp)                  # 8-byte Spill
	shlq	$2, %rcx
	movq	%rcx, 40(%rsp)                  # 8-byte Spill
	xorl	%ecx, %ecx
	movl	$1, %eax
.Ltmp176:
	.p2align	4, 0x90
.LBB1_12:                               # %for.cond3.preheader.us.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB1_20 Depth 2
                                        #       Child Loop BB1_21 Depth 3
                                        #     Child Loop BB1_16 Depth 2
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- $r13
	#DEBUG_VALUE: y <- $rax
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- $xmm0
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- $r13
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- $r12
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- $ecx
	.loc	0 0 9 is_stmt 0                 # x264_src/common/pixel.c:0:9
	movq	%rax, 104(%rsp)                 # 8-byte Spill
.Ltmp177:
	#DEBUG_VALUE: y <- [DW_OP_plus_uconst 104, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 522 18                        # x264_src/common/pixel.c:522:18
	movslq	%ecx, %rdx
	cmpq	%rdx, %rax
.Ltmp178:
	.loc	0 522 9                         # x264_src/common/pixel.c:522:9
	jge	.LBB1_19
.Ltmp179:
# %bb.13:                               #   in Loop: Header=BB1_12 Depth=1
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- $r12
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- $r13
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- $ecx
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- $xmm0
	#DEBUG_VALUE: y <- [DW_OP_plus_uconst 104, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	movq	%rcx, 8(%rsp)                   # 8-byte Spill
.Ltmp180:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	.loc	0 522 9                         # x264_src/common/pixel.c:522:9
	jmp	.LBB1_15
.Ltmp181:
	.p2align	4, 0x90
.LBB1_19:                               # %for.cond6.preheader.us.us.us.preheader
                                        #   in Loop: Header=BB1_12 Depth=1
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- $r12
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- $r13
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- $ecx
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- $xmm0
	#DEBUG_VALUE: y <- [DW_OP_plus_uconst 104, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	movss	%xmm0, (%rsp)                   # 4-byte Spill
.Ltmp182:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- [DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	movq	32(%rsp), %r15                  # 8-byte Reload
	.loc	0 522 9                         # x264_src/common/pixel.c:522:9
	imulq	%rdx, %r15
	addq	96(%rsp), %r15                  # 8-byte Folded Reload
	movq	40(%rsp), %r14                  # 8-byte Reload
	imulq	%rdx, %r14
	addq	88(%rsp), %r14                  # 8-byte Folded Reload
.Ltmp183:
	.p2align	4, 0x90
.LBB1_20:                               # %for.cond6.preheader.us.us.us
                                        #   Parent Loop BB1_12 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB1_21 Depth 3
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- $r12
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- $r13
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- [DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: y <- [DW_OP_plus_uconst 104, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	movq	%rdx, 8(%rsp)                   # 8-byte Spill
	movq	%r12, 48(%rsp)                  # 8-byte Spill
.Ltmp184:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- $r13
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- [DW_OP_plus_uconst 8, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x <- 0
	movq	%r14, 56(%rsp)                  # 8-byte Spill
	movq	%r15, 64(%rsp)                  # 8-byte Spill
	movq	%r13, 16(%rsp)                  # 8-byte Spill
.Ltmp185:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	xorl	%ebp, %ebp
	movq	80(%rsp), %r12                  # 8-byte Reload
	movq	112(%rsp), %rbx                 # 8-byte Reload
.Ltmp186:
	.p2align	4, 0x90
.LBB1_21:                               # %for.body9.us.us.us
                                        #   Parent Loop BB1_12 Depth=1
                                        #     Parent Loop BB1_20 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- [DW_OP_plus_uconst 8, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- [DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: y <- [DW_OP_plus_uconst 104, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x <- $rbp
	.loc	0 526 17 is_stmt 1              # x264_src/common/pixel.c:526:17
	movq	%r14, %rdi
	movl	24(%rsp), %esi                  # 4-byte Reload
	movq	%r15, %rdx
	movl	28(%rsp), %ecx                  # 4-byte Reload
	movq	%r13, %r8
	callq	*664(%r12)
.Ltmp187:
	.loc	0 525 41                        # x264_src/common/pixel.c:525:41
	addq	$2, %rbp
.Ltmp188:
	#DEBUG_VALUE: x <- $rbp
	.loc	0 525 31 is_stmt 0              # x264_src/common/pixel.c:525:31
	addq	$32, %r13
	addq	$8, %r15
	addq	$8, %r14
	cmpq	%rbx, %rbp
.Ltmp189:
	.loc	0 525 13                        # x264_src/common/pixel.c:525:13
	jb	.LBB1_21
.Ltmp190:
# %bb.22:                               # %for.cond6.for.cond.cleanup8_crit_edge.us.us.us
                                        #   in Loop: Header=BB1_20 Depth=2
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- [DW_OP_plus_uconst 8, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- [DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: y <- [DW_OP_plus_uconst 104, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 0 13                          # x264_src/common/pixel.c:0:13
	movq	8(%rsp), %rcx                   # 8-byte Reload
	.loc	0 522 25 is_stmt 1              # x264_src/common/pixel.c:522:25
	leaq	1(%rcx), %rax
.Ltmp191:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- $rax
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 0 25 is_stmt 0                # x264_src/common/pixel.c:0:25
	movq	64(%rsp), %r15                  # 8-byte Reload
.Ltmp192:
	.loc	0 522 9                         # x264_src/common/pixel.c:522:9
	addq	32(%rsp), %r15                  # 8-byte Folded Reload
	movq	56(%rsp), %r14                  # 8-byte Reload
	addq	40(%rsp), %r14                  # 8-byte Folded Reload
	movq	48(%rsp), %rsi                  # 8-byte Reload
	movq	%rsi, %r13
.Ltmp193:
	.loc	0 522 18                        # x264_src/common/pixel.c:522:18
	cmpq	104(%rsp), %rcx                 # 8-byte Folded Reload
	movq	%rax, %rdx
	movq	16(%rsp), %r12                  # 8-byte Reload
.Ltmp194:
	.loc	0 522 9                         # x264_src/common/pixel.c:522:9
	jl	.LBB1_20
.Ltmp195:
# %bb.14:                               # %for.cond22.preheader.us.us.loopexit
                                        #   in Loop: Header=BB1_12 Depth=1
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- $rax
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- [DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: y <- [DW_OP_plus_uconst 104, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	movq	%rax, 8(%rsp)                   # 8-byte Spill
.Ltmp196:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- [DW_OP_plus_uconst 8, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	movq	%rsi, %r13
	movq	80(%rsp), %rbx                  # 8-byte Reload
	movss	(%rsp), %xmm0                   # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
.Ltmp197:
.LBB1_15:                               # %for.cond22.preheader.us.us
                                        #   in Loop: Header=BB1_12 Depth=1
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- $r12
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- $r13
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- $xmm0
	#DEBUG_VALUE: y <- [DW_OP_plus_uconst 104, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x <- 0
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- $xmm0
	movq	%r12, %r14
	movq	%r13, 16(%rsp)                  # 8-byte Spill
.Ltmp198:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	movq	%r13, %r15
	movq	128(%rsp), %rax                 # 8-byte Reload
	movl	%eax, %r13d
	xorl	%ebp, %ebp
.Ltmp199:
	.p2align	4, 0x90
.LBB1_16:                               # %for.body25.us.us
                                        #   Parent Loop BB1_12 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- $r12
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- $xmm0
	#DEBUG_VALUE: y <- [DW_OP_plus_uconst 104, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x <- $rbp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- $xmm0
	movss	%xmm0, (%rsp)                   # 4-byte Spill
.Ltmp200:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- [DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	.loc	0 529 52 is_stmt 1              # x264_src/common/pixel.c:529:52
	cmpl	$4, %r13d
	movl	$4, %edx
	cmovll	%r13d, %edx
	.loc	0 529 21 is_stmt 0              # x264_src/common/pixel.c:529:21
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	*672(%rbx)
.Ltmp201:
	.loc	0 0 21                          # x264_src/common/pixel.c:0:21
	movss	(%rsp), %xmm1                   # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	.loc	0 529 18                        # x264_src/common/pixel.c:529:18
	addss	%xmm0, %xmm1
.Ltmp202:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- $xmm1
	.loc	0 0 18                          # x264_src/common/pixel.c:0:18
	movss	%xmm1, (%rsp)                   # 4-byte Spill
.Ltmp203:
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- [DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	movss	(%rsp), %xmm0                   # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	.loc	0 528 40 is_stmt 1              # x264_src/common/pixel.c:528:40
	addq	$4, %rbp
.Ltmp204:
	#DEBUG_VALUE: x <- $rbp
	.loc	0 528 27 is_stmt 0              # x264_src/common/pixel.c:528:27
	addl	$-4, %r13d
	addq	$64, %r15
	addq	$64, %r14
	cmpq	72(%rsp), %rbp                  # 8-byte Folded Reload
.Ltmp205:
	.loc	0 528 9                         # x264_src/common/pixel.c:528:9
	jb	.LBB1_16
.Ltmp206:
# %bb.17:                               # %for.cond22.for.cond.cleanup24_crit_edge.us.us
                                        #   in Loop: Header=BB1_12 Depth=1
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:width <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:height <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- $r12
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- [DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: y <- [DW_OP_plus_uconst 104, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	movq	104(%rsp), %rax                 # 8-byte Reload
	.loc	0 520 34 is_stmt 1              # x264_src/common/pixel.c:520:34
	incq	%rax
.Ltmp207:
	#DEBUG_VALUE: y <- $rax
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum1 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_ssim_wxh:sum0 <- $r12
	#DEBUG_VALUE: x264_pixel_ssim_wxh:ssim <- undef
	#DEBUG_VALUE: x264_pixel_ssim_wxh:z <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	.loc	0 520 23 is_stmt 0              # x264_src/common/pixel.c:520:23
	cmpq	120(%rsp), %rax                 # 8-byte Folded Reload
	movq	16(%rsp), %r13                  # 8-byte Reload
	movq	8(%rsp), %rcx                   # 8-byte Reload
.Ltmp208:
	.loc	0 520 5                         # x264_src/common/pixel.c:520:5
	jne	.LBB1_12
.Ltmp209:
.LBB1_18:                               # %for.cond.cleanup
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pf <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix1 <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride1 <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ssim_wxh:pix2 <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ssim_wxh:stride2 <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_pixel_ssim_wxh:buf <- [DW_OP_plus_uconst 200] [$rsp+0]
	.loc	0 531 5 epilogue_begin is_stmt 1 # x264_src/common/pixel.c:531:5
	addq	$136, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp210:
.Lfunc_end1:
	.size	x264_pixel_ssim_wxh, .Lfunc_end1-x264_pixel_ssim_wxh
	.cfi_endproc
                                        # -- End function
	.globl	x264_pixel_init                 # -- Begin function x264_pixel_init
	.p2align	4, 0x90
	.type	x264_pixel_init,@function
x264_pixel_init:                        # @x264_pixel_init
.Lfunc_begin2:
	.loc	0 589 0                         # x264_src/common/pixel.c:589:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_init:cpu <- $edi
	#DEBUG_VALUE: x264_pixel_init:pixf <- $rsi
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rsi, %rbx
.Ltmp211:
	.loc	0 590 5 prologue_end            # x264_src/common/pixel.c:590:5
	leaq	168(%rsi), %rdi
.Ltmp212:
	#DEBUG_VALUE: x264_pixel_init:cpu <- [DW_OP_LLVM_entry_value 1] $edi
	movl	$888, %edx                      # imm = 0x378
	xorl	%esi, %esi
.Ltmp213:
	#DEBUG_VALUE: x264_pixel_init:pixf <- $rbx
	callq	memset@PLT
.Ltmp214:
	.loc	0 619 5                         # x264_src/common/pixel.c:619:5
	movq	$x264_pixel_sad_16x16, (%rbx)
	movq	$x264_pixel_sad_16x8, 8(%rbx)
	movq	$x264_pixel_sad_8x16, 16(%rbx)
	movq	$x264_pixel_sad_8x8, 24(%rbx)
	movq	$x264_pixel_sad_8x4, 32(%rbx)
	movq	$x264_pixel_sad_4x8, 40(%rbx)
	movq	$x264_pixel_sad_4x4, 48(%rbx)
	.loc	0 620 5                         # x264_src/common/pixel.c:620:5
	movq	$x264_pixel_sad_16x16, 536(%rbx)
	movq	$x264_pixel_sad_16x8, 544(%rbx)
	movq	$x264_pixel_sad_8x16, 552(%rbx)
	movq	$x264_pixel_sad_8x8, 560(%rbx)
	movq	$x264_pixel_sad_8x4, 568(%rbx)
	movq	$x264_pixel_sad_4x8, 576(%rbx)
	movq	$x264_pixel_sad_4x4, 584(%rbx)
	.loc	0 621 5                         # x264_src/common/pixel.c:621:5
	movq	$x264_pixel_sad_x3_16x16, 680(%rbx)
	movq	$x264_pixel_sad_x3_16x8, 688(%rbx)
	movq	$x264_pixel_sad_x3_8x16, 696(%rbx)
	movq	$x264_pixel_sad_x3_8x8, 704(%rbx)
	movq	$x264_pixel_sad_x3_8x4, 712(%rbx)
	movq	$x264_pixel_sad_x3_4x8, 720(%rbx)
	movq	$x264_pixel_sad_x3_4x4, 728(%rbx)
	.loc	0 622 5                         # x264_src/common/pixel.c:622:5
	movq	$x264_pixel_sad_x4_16x16, 736(%rbx)
	movq	$x264_pixel_sad_x4_16x8, 744(%rbx)
	movq	$x264_pixel_sad_x4_8x16, 752(%rbx)
	movq	$x264_pixel_sad_x4_8x8, 760(%rbx)
	movq	$x264_pixel_sad_x4_8x4, 768(%rbx)
	movq	$x264_pixel_sad_x4_4x8, 776(%rbx)
	movq	$x264_pixel_sad_x4_4x4, 784(%rbx)
	.loc	0 623 5                         # x264_src/common/pixel.c:623:5
	movq	$x264_pixel_ssd_16x16, 56(%rbx)
	movq	$x264_pixel_ssd_16x8, 64(%rbx)
	movq	$x264_pixel_ssd_8x16, 72(%rbx)
	movq	$x264_pixel_ssd_8x8, 80(%rbx)
	movq	$x264_pixel_ssd_8x4, 88(%rbx)
	movq	$x264_pixel_ssd_4x8, 96(%rbx)
	movq	$x264_pixel_ssd_4x4, 104(%rbx)
	.loc	0 624 5                         # x264_src/common/pixel.c:624:5
	movq	$x264_pixel_satd_16x16, 112(%rbx)
	movq	$x264_pixel_satd_16x8, 120(%rbx)
	movq	$x264_pixel_satd_8x16, 128(%rbx)
	movq	$x264_pixel_satd_8x8, 136(%rbx)
	movq	$x264_pixel_satd_8x4, 144(%rbx)
	movq	$x264_pixel_satd_4x8, 152(%rbx)
	movq	$x264_pixel_satd_4x4, 160(%rbx)
	.loc	0 625 5                         # x264_src/common/pixel.c:625:5
	movq	$x264_pixel_satd_x3_16x16, 792(%rbx)
	movq	$x264_pixel_satd_x3_16x8, 800(%rbx)
	movq	$x264_pixel_satd_x3_8x16, 808(%rbx)
	movq	$x264_pixel_satd_x3_8x8, 816(%rbx)
	movq	$x264_pixel_satd_x3_8x4, 824(%rbx)
	movq	$x264_pixel_satd_x3_4x8, 832(%rbx)
	movq	$x264_pixel_satd_x3_4x4, 840(%rbx)
	.loc	0 626 5                         # x264_src/common/pixel.c:626:5
	movq	$x264_pixel_satd_x4_16x16, 848(%rbx)
	movq	$x264_pixel_satd_x4_16x8, 856(%rbx)
	movq	$x264_pixel_satd_x4_8x16, 864(%rbx)
	movq	$x264_pixel_satd_x4_8x8, 872(%rbx)
	movq	$x264_pixel_satd_x4_8x4, 880(%rbx)
	movq	$x264_pixel_satd_x4_4x8, 888(%rbx)
	movq	$x264_pixel_satd_x4_4x4, 896(%rbx)
	.loc	0 627 5                         # x264_src/common/pixel.c:627:5
	movq	$x264_pixel_hadamard_ac_16x16, 632(%rbx)
	movq	$x264_pixel_hadamard_ac_16x8, 640(%rbx)
	movq	$x264_pixel_hadamard_ac_8x16, 648(%rbx)
	movq	$x264_pixel_hadamard_ac_8x8, 656(%rbx)
	.loc	0 628 5                         # x264_src/common/pixel.c:628:5
	movq	$x264_pixel_ads4, 904(%rbx)
	movq	$x264_pixel_ads2, 912(%rbx)
	movq	$x264_pixel_ads1, 928(%rbx)
	.loc	0 630 29                        # x264_src/common/pixel.c:630:29
	movq	$x264_pixel_sa8d_16x16, 224(%rbx)
	.loc	0 631 29                        # x264_src/common/pixel.c:631:29
	movq	$x264_pixel_sa8d_8x8, 248(%rbx)
	.loc	0 632 28                        # x264_src/common/pixel.c:632:28
	movq	$x264_pixel_var_16x16, 600(%rbx)
	.loc	0 633 28                        # x264_src/common/pixel.c:633:28
	movq	$x264_pixel_var_8x8, 624(%rbx)
	.loc	0 635 27                        # x264_src/common/pixel.c:635:27
	movq	$ssim_4x4x2_core, 664(%rbx)
	.loc	0 636 21                        # x264_src/common/pixel.c:636:21
	movq	$ssim_end4, 672(%rbx)
	.loc	0 637 20                        # x264_src/common/pixel.c:637:20
	movq	$pixel_var2_8x8, 592(%rbx)
	.loc	0 875 26                        # x264_src/common/pixel.c:875:26
	movq	$x264_pixel_ads2, 944(%rbx)
	.loc	0 874 26                        # x264_src/common/pixel.c:874:26
	movq	$x264_pixel_ads2, 936(%rbx)
	.loc	0 873 27                        # x264_src/common/pixel.c:873:27
	movq	$x264_pixel_ads2, 920(%rbx)
	.loc	0 876 26                        # x264_src/common/pixel.c:876:26
	movq	$x264_pixel_ads1, 952(%rbx)
	.loc	0 877 1 epilogue_begin          # x264_src/common/pixel.c:877:1
	popq	%rbx
.Ltmp215:
	#DEBUG_VALUE: x264_pixel_init:pixf <- [DW_OP_LLVM_entry_value 1] $rsi
	.cfi_def_cfa_offset 8
	retq
.Ltmp216:
.Lfunc_end2:
	.size	x264_pixel_init, .Lfunc_end2-x264_pixel_init
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_16x16
	.type	x264_pixel_sad_16x16,@function
x264_pixel_sad_16x16:                   # @x264_pixel_sad_16x16
.Lfunc_begin3:
	.loc	0 61 0                          # x264_src/common/pixel.c:61:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_16x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_16x16:i_stride_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_sad_16x16:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_16x16:i_stride_pix2 <- $ecx
	#DEBUG_VALUE: x264_pixel_sad_16x16:i_sum <- 0
	#DEBUG_VALUE: y <- 0
	movslq	%esi, %rsi
.Ltmp217:
	#DEBUG_VALUE: x264_pixel_sad_16x16:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	movslq	%ecx, %rcx
.Ltmp218:
	#DEBUG_VALUE: x264_pixel_sad_16x16:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	xorl	%eax, %eax
	movl	$16, %r8d
.Ltmp219:
	.p2align	4, 0x90
.LBB3_1:                                # %for.cond1.preheader
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_pixel_sad_16x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_16x16:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: x264_pixel_sad_16x16:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_16x16:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: y <- [DW_OP_consts 16, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_pixel_sad_16x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_16x16:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_16x16:i_sum <- undef
	#DEBUG_VALUE: x <- 15
	.loc	0 61 1 prologue_end             # x264_src/common/pixel.c:61:1
	movdqu	(%rdi), %xmm0
	movdqu	(%rdx), %xmm1
	psadbw	%xmm0, %xmm1
	pshufd	$238, %xmm1, %xmm0              # xmm0 = xmm1[2,3,2,3]
	paddq	%xmm1, %xmm0
	movd	%xmm0, %r9d
	addl	%r9d, %eax
.Ltmp220:
	#DEBUG_VALUE: x264_pixel_sad_16x16:i_sum <- $eax
	#DEBUG_VALUE: x <- 16
	.loc	0 61 1 is_stmt 0                # x264_src/common/pixel.c:61:1
	addq	%rsi, %rdi
.Ltmp221:
	#DEBUG_VALUE: x264_pixel_sad_16x16:pix1 <- $rdi
	addq	%rcx, %rdx
.Ltmp222:
	#DEBUG_VALUE: x264_pixel_sad_16x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- [DW_OP_consts 16, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $r8d
	.loc	0 61 1                          # x264_src/common/pixel.c:61:1
	decl	%r8d
.Ltmp223:
	.loc	0 61 1                          # x264_src/common/pixel.c:61:1
	jne	.LBB3_1
.Ltmp224:
# %bb.2:                                # %for.cond.cleanup
	#DEBUG_VALUE: x264_pixel_sad_16x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_16x16:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: x264_pixel_sad_16x16:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_16x16:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_pixel_sad_16x16:i_sum <- $eax
	.loc	0 61 1                          # x264_src/common/pixel.c:61:1
	retq
.Ltmp225:
.Lfunc_end3:
	.size	x264_pixel_sad_16x16, .Lfunc_end3-x264_pixel_sad_16x16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_16x8
	.type	x264_pixel_sad_16x8,@function
x264_pixel_sad_16x8:                    # @x264_pixel_sad_16x8
.Lfunc_begin4:
	.loc	0 62 0 is_stmt 1                # x264_src/common/pixel.c:62:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_16x8:i_stride_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_sad_16x8:i_stride_pix2 <- $ecx
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x264_pixel_sad_16x8:i_sum <- 0
	movslq	%ecx, %rax
	movslq	%esi, %rcx
.Ltmp226:
	#DEBUG_VALUE: x264_pixel_sad_16x8:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_pixel_sad_16x8:i_sum <- undef
	#DEBUG_VALUE: x <- 15
	.loc	0 62 1 prologue_end             # x264_src/common/pixel.c:62:1
	movdqu	(%rdi), %xmm0
	movdqu	(%rdx), %xmm1
	psadbw	%xmm0, %xmm1
	pshufd	$238, %xmm1, %xmm0              # xmm0 = xmm1[2,3,2,3]
	paddq	%xmm1, %xmm0
	movd	%xmm0, %esi
.Ltmp227:
	#DEBUG_VALUE: x264_pixel_sad_16x8:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	movdqu	(%rdi,%rcx), %xmm0
.Ltmp228:
	#DEBUG_VALUE: x264_pixel_sad_16x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 16
	.loc	0 62 1 is_stmt 0                # x264_src/common/pixel.c:62:1
	addq	%rcx, %rdi
.Ltmp229:
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix1 <- $rdi
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	movdqu	(%rdx,%rax), %xmm1
.Ltmp230:
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	addq	%rax, %rdx
.Ltmp231:
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix2 <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 15
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	psadbw	%xmm0, %xmm1
	pshufd	$238, %xmm1, %xmm0              # xmm0 = xmm1[2,3,2,3]
	paddq	%xmm1, %xmm0
	movd	%xmm0, %r8d
	addl	%esi, %r8d
	movdqu	(%rcx,%rdi), %xmm0
.Ltmp232:
	#DEBUG_VALUE: x264_pixel_sad_16x8:i_sum <- $r8d
	#DEBUG_VALUE: x <- 16
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	addq	%rcx, %rdi
.Ltmp233:
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix1 <- $rdi
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	movdqu	(%rax,%rdx), %xmm1
.Ltmp234:
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	addq	%rax, %rdx
.Ltmp235:
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 15
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	psadbw	%xmm0, %xmm1
	pshufd	$238, %xmm1, %xmm0              # xmm0 = xmm1[2,3,2,3]
	paddq	%xmm1, %xmm0
	movd	%xmm0, %esi
	addl	%r8d, %esi
	movdqu	(%rcx,%rdi), %xmm0
.Ltmp236:
	#DEBUG_VALUE: x264_pixel_sad_16x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 16
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	addq	%rcx, %rdi
.Ltmp237:
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix1 <- $rdi
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	movdqu	(%rax,%rdx), %xmm1
.Ltmp238:
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	addq	%rax, %rdx
.Ltmp239:
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 15
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	psadbw	%xmm0, %xmm1
	pshufd	$238, %xmm1, %xmm0              # xmm0 = xmm1[2,3,2,3]
	paddq	%xmm1, %xmm0
	movd	%xmm0, %r8d
	addl	%esi, %r8d
	movdqu	(%rcx,%rdi), %xmm0
.Ltmp240:
	#DEBUG_VALUE: x264_pixel_sad_16x8:i_sum <- $r8d
	#DEBUG_VALUE: x <- 16
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	addq	%rcx, %rdi
.Ltmp241:
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix1 <- $rdi
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	movdqu	(%rax,%rdx), %xmm1
.Ltmp242:
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	addq	%rax, %rdx
.Ltmp243:
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 15
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	psadbw	%xmm0, %xmm1
	pshufd	$238, %xmm1, %xmm0              # xmm0 = xmm1[2,3,2,3]
	paddq	%xmm1, %xmm0
	movd	%xmm0, %esi
	addl	%r8d, %esi
	movdqu	(%rcx,%rdi), %xmm0
.Ltmp244:
	#DEBUG_VALUE: x264_pixel_sad_16x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 16
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	addq	%rcx, %rdi
.Ltmp245:
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix1 <- $rdi
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	movdqu	(%rax,%rdx), %xmm1
.Ltmp246:
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	addq	%rax, %rdx
.Ltmp247:
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 15
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	psadbw	%xmm0, %xmm1
	pshufd	$238, %xmm1, %xmm0              # xmm0 = xmm1[2,3,2,3]
	paddq	%xmm1, %xmm0
	movd	%xmm0, %r8d
	addl	%esi, %r8d
	movdqu	(%rcx,%rdi), %xmm0
.Ltmp248:
	#DEBUG_VALUE: x264_pixel_sad_16x8:i_sum <- $r8d
	#DEBUG_VALUE: x <- 16
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	addq	%rcx, %rdi
.Ltmp249:
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix1 <- $rdi
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	movdqu	(%rax,%rdx), %xmm1
.Ltmp250:
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	addq	%rax, %rdx
.Ltmp251:
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 15
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	psadbw	%xmm0, %xmm1
	pshufd	$238, %xmm1, %xmm0              # xmm0 = xmm1[2,3,2,3]
	paddq	%xmm1, %xmm0
	movd	%xmm0, %esi
	addl	%r8d, %esi
.Ltmp252:
	#DEBUG_VALUE: x264_pixel_sad_16x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 16
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 15
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdx, $rax
	movdqu	(%rcx,%rdi), %xmm0
	movdqu	(%rax,%rdx), %xmm1
	psadbw	%xmm0, %xmm1
	pshufd	$238, %xmm1, %xmm0              # xmm0 = xmm1[2,3,2,3]
	paddq	%xmm1, %xmm0
	movd	%xmm0, %eax
.Ltmp253:
	addl	%esi, %eax
.Ltmp254:
	#DEBUG_VALUE: x264_pixel_sad_16x8:i_sum <- $eax
	#DEBUG_VALUE: x <- 16
	#DEBUG_VALUE: y <- 8
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: x264_pixel_sad_16x8:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx, $rcx
	.loc	0 62 1                          # x264_src/common/pixel.c:62:1
	retq
.Ltmp255:
.Lfunc_end4:
	.size	x264_pixel_sad_16x8, .Lfunc_end4-x264_pixel_sad_16x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_8x16
	.type	x264_pixel_sad_8x16,@function
x264_pixel_sad_8x16:                    # @x264_pixel_sad_8x16
.Lfunc_begin5:
	.loc	0 63 0 is_stmt 1                # x264_src/common/pixel.c:63:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_stride_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_stride_pix2 <- $ecx
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- 0
	movslq	%ecx, %rax
	movslq	%esi, %rcx
.Ltmp256:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1 prologue_end             # x264_src/common/pixel.c:63:1
	movq	(%rdi), %xmm0                   # xmm0 = mem[0],zero
	movq	(%rdx), %xmm1                   # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
.Ltmp257:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	movq	(%rdi,%rcx), %xmm0              # xmm0 = mem[0],zero
.Ltmp258:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1 is_stmt 0                # x264_src/common/pixel.c:63:1
	addq	%rcx, %rdi
.Ltmp259:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	movq	(%rdx,%rax), %xmm1              # xmm1 = mem[0],zero
.Ltmp260:
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp261:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
.Ltmp262:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rcx, %rdi
.Ltmp263:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp264:
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp265:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
.Ltmp266:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rcx, %rdi
.Ltmp267:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp268:
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp269:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
.Ltmp270:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rcx, %rdi
.Ltmp271:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp272:
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp273:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
.Ltmp274:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rcx, %rdi
.Ltmp275:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp276:
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp277:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
.Ltmp278:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rcx, %rdi
.Ltmp279:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp280:
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp281:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
.Ltmp282:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rcx, %rdi
.Ltmp283:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp284:
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp285:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
.Ltmp286:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rcx, %rdi
.Ltmp287:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp288:
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp289:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 8
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
.Ltmp290:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rcx, %rdi
.Ltmp291:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp292:
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp293:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 9
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
.Ltmp294:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rcx, %rdi
.Ltmp295:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp296:
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp297:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 10
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
.Ltmp298:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rcx, %rdi
.Ltmp299:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp300:
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp301:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 11
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
.Ltmp302:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rcx, %rdi
.Ltmp303:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp304:
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp305:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 12
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
.Ltmp306:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rcx, %rdi
.Ltmp307:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp308:
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp309:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 13
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
.Ltmp310:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rcx, %rdi
.Ltmp311:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp312:
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp313:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 14
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
.Ltmp314:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: y <- 15
	#DEBUG_VALUE: x <- 7
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdx, $rax
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %eax
.Ltmp315:
	addl	%esi, %eax
.Ltmp316:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $eax
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 16
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx, $rcx
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	retq
.Ltmp317:
.Lfunc_end5:
	.size	x264_pixel_sad_8x16, .Lfunc_end5-x264_pixel_sad_8x16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_8x8
	.type	x264_pixel_sad_8x8,@function
x264_pixel_sad_8x8:                     # @x264_pixel_sad_8x8
.Lfunc_begin6:
	.loc	0 64 0 is_stmt 1                # x264_src/common/pixel.c:64:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_stride_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_stride_pix2 <- $ecx
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- 0
	movslq	%ecx, %rax
	movslq	%esi, %rcx
.Ltmp318:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1 prologue_end             # x264_src/common/pixel.c:64:1
	movq	(%rdi), %xmm0                   # xmm0 = mem[0],zero
	movq	(%rdx), %xmm1                   # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
.Ltmp319:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	movq	(%rdi,%rcx), %xmm0              # xmm0 = mem[0],zero
.Ltmp320:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1 is_stmt 0                # x264_src/common/pixel.c:64:1
	addq	%rcx, %rdi
.Ltmp321:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- $rdi
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	movq	(%rdx,%rax), %xmm1              # xmm1 = mem[0],zero
.Ltmp322:
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rdx
.Ltmp323:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
.Ltmp324:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rcx, %rdi
.Ltmp325:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- $rdi
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp326:
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rdx
.Ltmp327:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
.Ltmp328:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rcx, %rdi
.Ltmp329:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- $rdi
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp330:
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rdx
.Ltmp331:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
.Ltmp332:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rcx, %rdi
.Ltmp333:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- $rdi
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp334:
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rdx
.Ltmp335:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
.Ltmp336:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rcx, %rdi
.Ltmp337:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- $rdi
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp338:
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rdx
.Ltmp339:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
.Ltmp340:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rcx, %rdi
.Ltmp341:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- $rdi
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp342:
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rdx
.Ltmp343:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
.Ltmp344:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 7
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdx, $rax
	movq	(%rcx,%rdi), %xmm0              # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %eax
.Ltmp345:
	addl	%esi, %eax
.Ltmp346:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $eax
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx, $rcx
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	retq
.Ltmp347:
.Lfunc_end6:
	.size	x264_pixel_sad_8x8, .Lfunc_end6-x264_pixel_sad_8x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_8x4
	.type	x264_pixel_sad_8x4,@function
x264_pixel_sad_8x4:                     # @x264_pixel_sad_8x4
.Lfunc_begin7:
	.loc	0 65 0 is_stmt 1                # x264_src/common/pixel.c:65:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_8x4:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_8x4:i_stride_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_sad_8x4:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_8x4:i_stride_pix2 <- $ecx
	#DEBUG_VALUE: x264_pixel_sad_8x4:i_sum <- 0
	#DEBUG_VALUE: y <- 0
	movslq	%esi, %rax
	movslq	%ecx, %rcx
.Ltmp348:
	#DEBUG_VALUE: x264_pixel_sad_8x4:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_pixel_sad_8x4:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	#DEBUG_VALUE: x <- 8
	.loc	0 65 1 prologue_end             # x264_src/common/pixel.c:65:1
	leaq	(%rdi,%rax), %rsi
.Ltmp349:
	#DEBUG_VALUE: x264_pixel_sad_8x4:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: x264_pixel_sad_8x4:pix1 <- $rsi
	leaq	(%rdx,%rcx), %r8
.Ltmp350:
	#DEBUG_VALUE: x264_pixel_sad_8x4:pix2 <- $r8
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 7
	.loc	0 65 1 is_stmt 0                # x264_src/common/pixel.c:65:1
	movq	(%rdi,%rax), %xmm0              # xmm0 = mem[0],zero
	movq	(%rdi), %xmm1                   # xmm1 = mem[0],zero
	punpcklqdq	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0]
	movq	(%rdx,%rcx), %xmm0              # xmm0 = mem[0],zero
	movq	(%rdx), %xmm2                   # xmm2 = mem[0],zero
	punpcklqdq	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0]
.Ltmp351:
	#DEBUG_VALUE: x <- 8
	psadbw	%xmm1, %xmm2
	movq	(%rax,%rsi), %xmm0              # xmm0 = mem[0],zero
.Ltmp352:
	.loc	0 65 1                          # x264_src/common/pixel.c:65:1
	addq	%rax, %rsi
.Ltmp353:
	#DEBUG_VALUE: x264_pixel_sad_8x4:pix1 <- $rsi
	.loc	0 65 1                          # x264_src/common/pixel.c:65:1
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
	punpcklqdq	%xmm1, %xmm0            # xmm0 = xmm0[0],xmm1[0]
	movq	(%rcx,%r8), %xmm1               # xmm1 = mem[0],zero
.Ltmp354:
	.loc	0 65 1                          # x264_src/common/pixel.c:65:1
	addq	%rcx, %r8
.Ltmp355:
	#DEBUG_VALUE: x264_pixel_sad_8x4:pix2 <- $r8
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 7
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rsi, $rax
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 7
	#DEBUG_VALUE: x264_pixel_sad_8x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r8, $rcx
	.loc	0 65 1                          # x264_src/common/pixel.c:65:1
	movq	(%rcx,%r8), %xmm3               # xmm3 = mem[0],zero
	punpcklqdq	%xmm3, %xmm1            # xmm1 = xmm1[0],xmm3[0]
	psadbw	%xmm0, %xmm1
	pshufd	$238, %xmm2, %xmm0              # xmm0 = xmm2[2,3,2,3]
	paddq	%xmm2, %xmm0
	movd	%xmm0, %ecx
.Ltmp356:
	pshufd	$238, %xmm1, %xmm0              # xmm0 = xmm1[2,3,2,3]
	paddq	%xmm1, %xmm0
	movd	%xmm0, %eax
.Ltmp357:
	addl	%ecx, %eax
.Ltmp358:
	#DEBUG_VALUE: x264_pixel_sad_8x4:i_sum <- $eax
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x264_pixel_sad_8x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: x264_pixel_sad_8x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	.loc	0 65 1                          # x264_src/common/pixel.c:65:1
	retq
.Ltmp359:
.Lfunc_end7:
	.size	x264_pixel_sad_8x4, .Lfunc_end7-x264_pixel_sad_8x4
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_4x8
	.type	x264_pixel_sad_4x8,@function
x264_pixel_sad_4x8:                     # @x264_pixel_sad_4x8
.Lfunc_begin8:
	.loc	0 66 0 is_stmt 1                # x264_src/common/pixel.c:66:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x8:i_stride_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_4x8:i_stride_pix2 <- $ecx
	#DEBUG_VALUE: x264_pixel_sad_4x8:i_sum <- 0
	#DEBUG_VALUE: y <- 0
	movslq	%ecx, %rax
.Ltmp360:
	#DEBUG_VALUE: x264_pixel_sad_4x8:i_sum <- undef
	#DEBUG_VALUE: x <- 3
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix1 <- undef
	.loc	0 66 1 prologue_end             # x264_src/common/pixel.c:66:1
	leaq	(%rdx,%rax), %rcx
.Ltmp361:
	#DEBUG_VALUE: x264_pixel_sad_4x8:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix2 <- $rcx
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 3
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix1 <- undef
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix2 <- undef
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 3
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix1 <- undef
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix2 <- undef
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 3
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix1 <- undef
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix2 <- undef
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 3
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix1 <- undef
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix2 <- undef
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 3
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix1 <- undef
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix2 <- undef
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 3
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 3
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef
	.loc	0 66 1 is_stmt 0                # x264_src/common/pixel.c:66:1
	movd	(%rax,%rcx), %xmm0              # xmm0 = mem[0],zero,zero,zero
.Ltmp362:
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	addq	%rax, %rcx
.Ltmp363:
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix2 <- $rcx
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	movd	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero,zero,zero
.Ltmp364:
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	leaq	(%rcx,%rax), %rcx
.Ltmp365:
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix2 <- $rcx
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	movd	(%rax,%rcx), %xmm2              # xmm2 = mem[0],zero,zero,zero
.Ltmp366:
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	leaq	(%rcx,%rax), %rcx
.Ltmp367:
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix2 <- $rcx
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	movd	(%rax,%rcx), %xmm3              # xmm3 = mem[0],zero,zero,zero
.Ltmp368:
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	leaq	(%rcx,%rax), %rcx
.Ltmp369:
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix2 <- $rcx
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	movd	(%rax,%rcx), %xmm4              # xmm4 = mem[0],zero,zero,zero
.Ltmp370:
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	leaq	(%rcx,%rax), %rcx
.Ltmp371:
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rcx, $rax
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix2 <- $rcx
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	movd	(%rax,%rcx), %xmm5              # xmm5 = mem[0],zero,zero,zero
	movd	(%rdx,%rax), %xmm6              # xmm6 = mem[0],zero,zero,zero
	movd	(%rdx), %xmm7                   # xmm7 = mem[0],zero,zero,zero
	movslq	%esi, %rax
	movd	(%rdi), %xmm8                   # xmm8 = mem[0],zero,zero,zero
	movd	(%rdi,%rax), %xmm9              # xmm9 = mem[0],zero,zero,zero
.Ltmp372:
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	leaq	(%rdi,%rax), %rcx
.Ltmp373:
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix1 <- $rcx
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	movd	(%rax,%rcx), %xmm10             # xmm10 = mem[0],zero,zero,zero
.Ltmp374:
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	leaq	(%rcx,%rax), %rcx
.Ltmp375:
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix1 <- $rcx
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	movd	(%rax,%rcx), %xmm11             # xmm11 = mem[0],zero,zero,zero
.Ltmp376:
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	leaq	(%rcx,%rax), %rcx
.Ltmp377:
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix1 <- $rcx
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	movd	(%rax,%rcx), %xmm12             # xmm12 = mem[0],zero,zero,zero
.Ltmp378:
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	leaq	(%rcx,%rax), %rcx
.Ltmp379:
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix1 <- $rcx
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	movd	(%rax,%rcx), %xmm13             # xmm13 = mem[0],zero,zero,zero
.Ltmp380:
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	addq	%rax, %rcx
.Ltmp381:
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix1 <- $rcx
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	movd	(%rax,%rcx), %xmm14             # xmm14 = mem[0],zero,zero,zero
.Ltmp382:
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	addq	%rax, %rcx
.Ltmp383:
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rcx, $rax
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix1 <- $rcx
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	psadbw	%xmm7, %xmm8
	movd	(%rax,%rcx), %xmm7              # xmm7 = mem[0],zero,zero,zero
	movd	%xmm8, %eax
	psadbw	%xmm6, %xmm9
	movd	%xmm9, %ecx
.Ltmp384:
	psadbw	%xmm0, %xmm10
	addl	%eax, %ecx
	movd	%xmm10, %eax
	psadbw	%xmm1, %xmm11
	addl	%ecx, %eax
	movd	%xmm11, %ecx
	psadbw	%xmm2, %xmm12
	addl	%eax, %ecx
	movd	%xmm12, %eax
	psadbw	%xmm3, %xmm13
	addl	%ecx, %eax
	movd	%xmm13, %ecx
	psadbw	%xmm4, %xmm14
	addl	%eax, %ecx
	movd	%xmm14, %edx
	addl	%ecx, %edx
	psadbw	%xmm5, %xmm7
	movd	%xmm7, %eax
	addl	%edx, %eax
.Ltmp385:
	#DEBUG_VALUE: x264_pixel_sad_4x8:i_sum <- $eax
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: y <- 8
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: x264_pixel_sad_4x8:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	.loc	0 66 1                          # x264_src/common/pixel.c:66:1
	retq
.Ltmp386:
.Lfunc_end8:
	.size	x264_pixel_sad_4x8, .Lfunc_end8-x264_pixel_sad_4x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_4x4
	.type	x264_pixel_sad_4x4,@function
x264_pixel_sad_4x4:                     # @x264_pixel_sad_4x4
.Lfunc_begin9:
	.loc	0 67 0 is_stmt 1                # x264_src/common/pixel.c:67:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_stride_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_stride_pix2 <- $ecx
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- 0
	#DEBUG_VALUE: y <- 0
	movslq	%esi, %rax
	movslq	%ecx, %rcx
.Ltmp387:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 3
	#DEBUG_VALUE: x <- 4
	.loc	0 67 1 prologue_end             # x264_src/common/pixel.c:67:1
	leaq	(%rdi,%rax), %rsi
.Ltmp388:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- $rsi
	leaq	(%rdx,%rcx), %r8
.Ltmp389:
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $r8
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 3
	#DEBUG_VALUE: x <- 4
	leaq	(%rsi,%rax), %r9
.Ltmp390:
	.loc	0 67 1 is_stmt 0                # x264_src/common/pixel.c:67:1
	movd	(%rdx), %xmm0                   # xmm0 = mem[0],zero,zero,zero
	movd	(%rdi), %xmm1                   # xmm1 = mem[0],zero,zero,zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	movd	(%rdx,%rcx), %xmm0              # xmm0 = mem[0],zero,zero,zero
	movd	(%rdi,%rax), %xmm1              # xmm1 = mem[0],zero,zero,zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%r10d, %edx
	movd	(%rcx,%r8), %xmm0               # xmm0 = mem[0],zero,zero,zero
.Ltmp391:
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- $r9
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	addq	%rcx, %r8
.Ltmp392:
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $r8
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 3
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9, $rax
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 3
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r8, $rcx
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movd	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero,zero,zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movd	(%rcx,%r8), %xmm0               # xmm0 = mem[0],zero,zero,zero
	movd	(%rax,%r9), %xmm1               # xmm1 = mem[0],zero,zero,zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %eax
.Ltmp393:
	addl	%esi, %eax
.Ltmp394:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $eax
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r8, $rcx, $rcx
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	retq
.Ltmp395:
.Lfunc_end9:
	.size	x264_pixel_sad_4x4, .Lfunc_end9-x264_pixel_sad_4x4
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_x3_16x16
	.type	x264_pixel_sad_x3_16x16,@function
x264_pixel_sad_x3_16x16:                # @x264_pixel_sad_x3_16x16
.Lfunc_begin10:
	.loc	0 401 0 is_stmt 1               # x264_src/common/pixel.c:401:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_x3_16x16:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_x3_16x16:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_x3_16x16:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_x3_16x16:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_sad_x3_16x16:i_stride <- $r8d
	#DEBUG_VALUE: x264_pixel_sad_x3_16x16:scores <- $r9
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, %rbx
	movl	%r8d, %ebp
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %rdx
.Ltmp396:
	#DEBUG_VALUE: x264_pixel_sad_x3_16x16:pix1 <- $r15
	movq	%rdi, %r12
.Ltmp397:
	.loc	0 401 1 prologue_end            # x264_src/common/pixel.c:401:1
	movl	$16, %esi
.Ltmp398:
	#DEBUG_VALUE: x264_pixel_sad_x3_16x16:pix0 <- $rdx
	movl	%r8d, %ecx
.Ltmp399:
	#DEBUG_VALUE: x264_pixel_sad_x3_16x16:pix2 <- $r14
	callq	x264_pixel_sad_16x16
.Ltmp400:
	#DEBUG_VALUE: x264_pixel_sad_x3_16x16:scores <- $rbx
	#DEBUG_VALUE: x264_pixel_sad_x3_16x16:i_stride <- $ebp
	#DEBUG_VALUE: x264_pixel_sad_x3_16x16:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_pixel_sad_x3_16x16:fenc <- $r12
	movl	%eax, (%rbx)
	movq	%r12, %rdi
	movl	$16, %esi
	movq	%r15, %rdx
	movl	%ebp, %ecx
	callq	x264_pixel_sad_16x16
.Ltmp401:
	movl	%eax, 4(%rbx)
	movq	%r12, %rdi
	movl	$16, %esi
	movq	%r14, %rdx
	movl	%ebp, %ecx
	callq	x264_pixel_sad_16x16
.Ltmp402:
	movl	%eax, 8(%rbx)
	.loc	0 401 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:401:1
	popq	%rbx
.Ltmp403:
	#DEBUG_VALUE: x264_pixel_sad_x3_16x16:scores <- [DW_OP_LLVM_entry_value 1] $r9
	.cfi_def_cfa_offset 40
	popq	%r12
.Ltmp404:
	#DEBUG_VALUE: x264_pixel_sad_x3_16x16:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp405:
	#DEBUG_VALUE: x264_pixel_sad_x3_16x16:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp406:
	#DEBUG_VALUE: x264_pixel_sad_x3_16x16:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp407:
	#DEBUG_VALUE: x264_pixel_sad_x3_16x16:i_stride <- [DW_OP_LLVM_entry_value 1] $r8d
	.cfi_def_cfa_offset 8
	retq
.Ltmp408:
.Lfunc_end10:
	.size	x264_pixel_sad_x3_16x16, .Lfunc_end10-x264_pixel_sad_x3_16x16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_x3_16x8
	.type	x264_pixel_sad_x3_16x8,@function
x264_pixel_sad_x3_16x8:                 # @x264_pixel_sad_x3_16x8
.Lfunc_begin11:
	.loc	0 402 0 is_stmt 1               # x264_src/common/pixel.c:402:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_x3_16x8:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_x3_16x8:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_x3_16x8:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_x3_16x8:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_sad_x3_16x8:i_stride <- $r8d
	#DEBUG_VALUE: x264_pixel_sad_x3_16x8:scores <- $r9
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, %rbx
	movl	%r8d, %ebp
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %rdx
.Ltmp409:
	#DEBUG_VALUE: x264_pixel_sad_x3_16x8:pix1 <- $r15
	movq	%rdi, %r12
.Ltmp410:
	.loc	0 402 1 prologue_end            # x264_src/common/pixel.c:402:1
	movl	$16, %esi
.Ltmp411:
	#DEBUG_VALUE: x264_pixel_sad_x3_16x8:pix0 <- $rdx
	movl	%r8d, %ecx
.Ltmp412:
	#DEBUG_VALUE: x264_pixel_sad_x3_16x8:pix2 <- $r14
	callq	x264_pixel_sad_16x8
.Ltmp413:
	#DEBUG_VALUE: x264_pixel_sad_x3_16x8:scores <- $rbx
	#DEBUG_VALUE: x264_pixel_sad_x3_16x8:i_stride <- $ebp
	#DEBUG_VALUE: x264_pixel_sad_x3_16x8:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_pixel_sad_x3_16x8:fenc <- $r12
	movl	%eax, (%rbx)
	movq	%r12, %rdi
	movl	$16, %esi
	movq	%r15, %rdx
	movl	%ebp, %ecx
	callq	x264_pixel_sad_16x8
.Ltmp414:
	movl	%eax, 4(%rbx)
	movq	%r12, %rdi
	movl	$16, %esi
	movq	%r14, %rdx
	movl	%ebp, %ecx
	callq	x264_pixel_sad_16x8
.Ltmp415:
	movl	%eax, 8(%rbx)
	.loc	0 402 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:402:1
	popq	%rbx
.Ltmp416:
	#DEBUG_VALUE: x264_pixel_sad_x3_16x8:scores <- [DW_OP_LLVM_entry_value 1] $r9
	.cfi_def_cfa_offset 40
	popq	%r12
.Ltmp417:
	#DEBUG_VALUE: x264_pixel_sad_x3_16x8:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp418:
	#DEBUG_VALUE: x264_pixel_sad_x3_16x8:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp419:
	#DEBUG_VALUE: x264_pixel_sad_x3_16x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp420:
	#DEBUG_VALUE: x264_pixel_sad_x3_16x8:i_stride <- [DW_OP_LLVM_entry_value 1] $r8d
	.cfi_def_cfa_offset 8
	retq
.Ltmp421:
.Lfunc_end11:
	.size	x264_pixel_sad_x3_16x8, .Lfunc_end11-x264_pixel_sad_x3_16x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_x3_8x16
	.type	x264_pixel_sad_x3_8x16,@function
x264_pixel_sad_x3_8x16:                 # @x264_pixel_sad_x3_8x16
.Lfunc_begin12:
	.loc	0 403 0 is_stmt 1               # x264_src/common/pixel.c:403:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_x3_8x16:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_x3_8x16:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_x3_8x16:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_x3_8x16:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_sad_x3_8x16:i_stride <- $r8d
	#DEBUG_VALUE: x264_pixel_sad_x3_8x16:scores <- $r9
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_stride_pix2 <- $r8d
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_stride_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- 0
	#DEBUG_VALUE: y <- 0
	movslq	%r8d, %rax
.Ltmp422:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1 prologue_end             # x264_src/common/pixel.c:63:1
	movq	(%rdi), %xmm0                   # xmm0 = mem[0],zero
	movq	(%rsi), %xmm1                   # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
.Ltmp423:
	#DEBUG_VALUE: x264_pixel_sad_x3_8x16:i_stride <- [DW_OP_LLVM_entry_value 1] $r8d
	movq	16(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rsi,%rax), %xmm1              # xmm1 = mem[0],zero
.Ltmp424:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- undef
	.loc	0 63 1 is_stmt 0                # x264_src/common/pixel.c:63:1
	addq	%rax, %rsi
.Ltmp425:
	#DEBUG_VALUE: x264_pixel_sad_x3_8x16:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r8d, %r10d
	movq	32(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
.Ltmp426:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rsi
.Ltmp427:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%r10d, %r8d
	movq	48(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
.Ltmp428:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rsi
.Ltmp429:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r8d, %r10d
	movq	64(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
.Ltmp430:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rsi
.Ltmp431:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%r10d, %r8d
	movq	80(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
.Ltmp432:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rsi
.Ltmp433:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r8d, %r10d
	movq	96(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
.Ltmp434:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rsi
.Ltmp435:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%r10d, %r8d
	movq	112(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
.Ltmp436:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rsi
.Ltmp437:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r8d, %r10d
	movq	128(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
.Ltmp438:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rsi
.Ltmp439:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 8
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%r10d, %r8d
	movq	144(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
.Ltmp440:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rsi
.Ltmp441:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 9
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r8d, %r10d
	movq	160(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
.Ltmp442:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rsi
.Ltmp443:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 10
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%r10d, %r8d
	movq	176(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
.Ltmp444:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rsi
.Ltmp445:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 11
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r8d, %r10d
	movq	192(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
.Ltmp446:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rsi
.Ltmp447:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 12
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%r10d, %r8d
	movq	208(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
.Ltmp448:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rsi
.Ltmp449:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 13
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r8d, %r10d
	movq	224(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
.Ltmp450:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rsi
.Ltmp451:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 14
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%r10d, %r8d
.Ltmp452:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- undef
	#DEBUG_VALUE: y <- 15
	#DEBUG_VALUE: x <- 7
	movq	240(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
.Ltmp453:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 16
	.loc	0 403 1 is_stmt 1               # x264_src/common/pixel.c:403:1
	movl	%esi, (%r9)
.Ltmp454:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_stride_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_stride_pix2 <- undef
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	movq	(%rdi), %xmm0                   # xmm0 = mem[0],zero
	movq	(%rdx), %xmm1                   # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
.Ltmp455:
	movq	16(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rdx,%rax), %xmm1              # xmm1 = mem[0],zero
.Ltmp456:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- undef
	.loc	0 63 1 is_stmt 0                # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp457:
	#DEBUG_VALUE: x264_pixel_sad_x3_8x16:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	32(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp458:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp459:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
	movq	48(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp460:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp461:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	64(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp462:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp463:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
	movq	80(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp464:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp465:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	96(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp466:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp467:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
	movq	112(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp468:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp469:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	128(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp470:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp471:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 8
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
	movq	144(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp472:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp473:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 9
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	160(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp474:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp475:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 10
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
	movq	176(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp476:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp477:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 11
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	192(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp478:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp479:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 12
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
	movq	208(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp480:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp481:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 13
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	224(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp482:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rdx
.Ltmp483:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 14
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
.Ltmp484:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- undef
	#DEBUG_VALUE: y <- 15
	#DEBUG_VALUE: x <- 7
	movq	240(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
.Ltmp485:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 16
	.loc	0 403 1 is_stmt 1               # x264_src/common/pixel.c:403:1
	movl	%edx, 4(%r9)
.Ltmp486:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_stride_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_stride_pix2 <- undef
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	movq	(%rdi), %xmm0                   # xmm0 = mem[0],zero
	movq	(%rcx), %xmm1                   # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
.Ltmp487:
	movq	16(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rcx,%rax), %xmm1              # xmm1 = mem[0],zero
.Ltmp488:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- undef
	.loc	0 63 1 is_stmt 0                # x264_src/common/pixel.c:63:1
	addq	%rax, %rcx
.Ltmp489:
	#DEBUG_VALUE: x264_pixel_sad_x3_8x16:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	32(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
.Ltmp490:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rcx
.Ltmp491:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
	movq	48(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
.Ltmp492:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rcx
.Ltmp493:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	64(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
.Ltmp494:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rcx
.Ltmp495:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
	movq	80(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
.Ltmp496:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rcx
.Ltmp497:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	96(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
.Ltmp498:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rcx
.Ltmp499:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
	movq	112(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
.Ltmp500:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rcx
.Ltmp501:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	128(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
.Ltmp502:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rcx
.Ltmp503:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 8
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
	movq	144(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
.Ltmp504:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rcx
.Ltmp505:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 9
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	160(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
.Ltmp506:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rcx
.Ltmp507:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 10
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
	movq	176(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
.Ltmp508:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rcx
.Ltmp509:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 11
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	192(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
.Ltmp510:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rcx
.Ltmp511:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 12
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
	movq	208(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
.Ltmp512:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rcx
.Ltmp513:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 13
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	224(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
.Ltmp514:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%rax, %rcx
.Ltmp515:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 14
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
.Ltmp516:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- undef
	#DEBUG_VALUE: y <- 15
	#DEBUG_VALUE: x <- 7
	movq	240(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %eax
	addl	%edx, %eax
.Ltmp517:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $eax
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 16
	.loc	0 403 1 is_stmt 1               # x264_src/common/pixel.c:403:1
	movl	%eax, 8(%r9)
	retq
.Ltmp518:
.Lfunc_end12:
	.size	x264_pixel_sad_x3_8x16, .Lfunc_end12-x264_pixel_sad_x3_8x16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_x3_8x8
	.type	x264_pixel_sad_x3_8x8,@function
x264_pixel_sad_x3_8x8:                  # @x264_pixel_sad_x3_8x8
.Lfunc_begin13:
	.loc	0 404 0                         # x264_src/common/pixel.c:404:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_x3_8x8:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_x3_8x8:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_x3_8x8:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_x3_8x8:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_sad_x3_8x8:i_stride <- $r8d
	#DEBUG_VALUE: x264_pixel_sad_x3_8x8:scores <- $r9
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_stride_pix2 <- $r8d
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_stride_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- 0
	#DEBUG_VALUE: y <- 0
	movslq	%r8d, %rax
.Ltmp519:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1 prologue_end             # x264_src/common/pixel.c:64:1
	movq	(%rdi), %xmm0                   # xmm0 = mem[0],zero
	movq	(%rsi), %xmm1                   # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
.Ltmp520:
	#DEBUG_VALUE: x264_pixel_sad_x3_8x8:i_stride <- [DW_OP_LLVM_entry_value 1] $r8d
	movq	16(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rsi,%rax), %xmm1              # xmm1 = mem[0],zero
.Ltmp521:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- undef
	.loc	0 64 1 is_stmt 0                # x264_src/common/pixel.c:64:1
	addq	%rax, %rsi
.Ltmp522:
	#DEBUG_VALUE: x264_pixel_sad_x3_8x8:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rsi
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r8d, %r10d
	movq	32(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
.Ltmp523:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rsi
.Ltmp524:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rsi
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%r10d, %r8d
	movq	48(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
.Ltmp525:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rsi
.Ltmp526:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rsi
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r8d, %r10d
	movq	64(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
.Ltmp527:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rsi
.Ltmp528:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rsi
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%r10d, %r8d
	movq	80(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
.Ltmp529:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rsi
.Ltmp530:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rsi
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r8d, %r10d
	movq	96(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
.Ltmp531:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rsi
.Ltmp532:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rsi
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%r10d, %r8d
.Ltmp533:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- undef
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 7
	movq	112(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rsi), %xmm1              # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
.Ltmp534:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 8
	.loc	0 404 1 is_stmt 1               # x264_src/common/pixel.c:404:1
	movl	%esi, (%r9)
.Ltmp535:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_stride_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_stride_pix2 <- undef
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	movq	(%rdi), %xmm0                   # xmm0 = mem[0],zero
	movq	(%rdx), %xmm1                   # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
.Ltmp536:
	movq	16(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rdx,%rax), %xmm1              # xmm1 = mem[0],zero
.Ltmp537:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- undef
	.loc	0 64 1 is_stmt 0                # x264_src/common/pixel.c:64:1
	addq	%rax, %rdx
.Ltmp538:
	#DEBUG_VALUE: x264_pixel_sad_x3_8x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	32(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp539:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rdx
.Ltmp540:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
	movq	48(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp541:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rdx
.Ltmp542:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	64(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp543:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rdx
.Ltmp544:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
	movq	80(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp545:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rdx
.Ltmp546:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	96(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
.Ltmp547:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rdx
.Ltmp548:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
.Ltmp549:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- undef
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 7
	movq	112(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rdx), %xmm1              # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
.Ltmp550:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 8
	.loc	0 404 1 is_stmt 1               # x264_src/common/pixel.c:404:1
	movl	%edx, 4(%r9)
.Ltmp551:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_stride_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_stride_pix2 <- undef
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rcx
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	movq	(%rdi), %xmm0                   # xmm0 = mem[0],zero
	movq	(%rcx), %xmm1                   # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
.Ltmp552:
	movq	16(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rcx,%rax), %xmm1              # xmm1 = mem[0],zero
.Ltmp553:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- undef
	.loc	0 64 1 is_stmt 0                # x264_src/common/pixel.c:64:1
	addq	%rax, %rcx
.Ltmp554:
	#DEBUG_VALUE: x264_pixel_sad_x3_8x8:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rcx
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	32(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
.Ltmp555:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rcx
.Ltmp556:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rcx
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
	movq	48(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
.Ltmp557:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rcx
.Ltmp558:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rcx
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	64(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
.Ltmp559:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rcx
.Ltmp560:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rcx
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
	movq	80(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
.Ltmp561:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rcx
.Ltmp562:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rcx
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	96(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
.Ltmp563:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%rax, %rcx
.Ltmp564:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rcx
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
.Ltmp565:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- undef
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 7
	movq	112(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%rax,%rcx), %xmm1              # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %eax
	addl	%edx, %eax
.Ltmp566:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $eax
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 8
	.loc	0 404 1 is_stmt 1               # x264_src/common/pixel.c:404:1
	movl	%eax, 8(%r9)
	retq
.Ltmp567:
.Lfunc_end13:
	.size	x264_pixel_sad_x3_8x8, .Lfunc_end13-x264_pixel_sad_x3_8x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_x3_8x4
	.type	x264_pixel_sad_x3_8x4,@function
x264_pixel_sad_x3_8x4:                  # @x264_pixel_sad_x3_8x4
.Lfunc_begin14:
	.loc	0 405 0                         # x264_src/common/pixel.c:405:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_x3_8x4:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_x3_8x4:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_x3_8x4:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_x3_8x4:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_sad_x3_8x4:i_stride <- $r8d
	#DEBUG_VALUE: x264_pixel_sad_x3_8x4:scores <- $r9
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, %rbx
	movl	%r8d, %ebp
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %rdx
.Ltmp568:
	#DEBUG_VALUE: x264_pixel_sad_x3_8x4:pix1 <- $r15
	movq	%rdi, %r12
.Ltmp569:
	.loc	0 405 1 prologue_end            # x264_src/common/pixel.c:405:1
	movl	$16, %esi
.Ltmp570:
	#DEBUG_VALUE: x264_pixel_sad_x3_8x4:pix0 <- $rdx
	movl	%r8d, %ecx
.Ltmp571:
	#DEBUG_VALUE: x264_pixel_sad_x3_8x4:pix2 <- $r14
	callq	x264_pixel_sad_8x4
.Ltmp572:
	#DEBUG_VALUE: x264_pixel_sad_x3_8x4:scores <- $rbx
	#DEBUG_VALUE: x264_pixel_sad_x3_8x4:i_stride <- $ebp
	#DEBUG_VALUE: x264_pixel_sad_x3_8x4:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_pixel_sad_x3_8x4:fenc <- $r12
	movl	%eax, (%rbx)
	movq	%r12, %rdi
	movl	$16, %esi
	movq	%r15, %rdx
	movl	%ebp, %ecx
	callq	x264_pixel_sad_8x4
.Ltmp573:
	movl	%eax, 4(%rbx)
	movq	%r12, %rdi
	movl	$16, %esi
	movq	%r14, %rdx
	movl	%ebp, %ecx
	callq	x264_pixel_sad_8x4
.Ltmp574:
	movl	%eax, 8(%rbx)
	.loc	0 405 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:405:1
	popq	%rbx
.Ltmp575:
	#DEBUG_VALUE: x264_pixel_sad_x3_8x4:scores <- [DW_OP_LLVM_entry_value 1] $r9
	.cfi_def_cfa_offset 40
	popq	%r12
.Ltmp576:
	#DEBUG_VALUE: x264_pixel_sad_x3_8x4:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp577:
	#DEBUG_VALUE: x264_pixel_sad_x3_8x4:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp578:
	#DEBUG_VALUE: x264_pixel_sad_x3_8x4:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp579:
	#DEBUG_VALUE: x264_pixel_sad_x3_8x4:i_stride <- [DW_OP_LLVM_entry_value 1] $r8d
	.cfi_def_cfa_offset 8
	retq
.Ltmp580:
.Lfunc_end14:
	.size	x264_pixel_sad_x3_8x4, .Lfunc_end14-x264_pixel_sad_x3_8x4
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_x3_4x8
	.type	x264_pixel_sad_x3_4x8,@function
x264_pixel_sad_x3_4x8:                  # @x264_pixel_sad_x3_4x8
.Lfunc_begin15:
	.loc	0 406 0 is_stmt 1               # x264_src/common/pixel.c:406:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_x3_4x8:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_x3_4x8:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_x3_4x8:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_x3_4x8:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_sad_x3_4x8:i_stride <- $r8d
	#DEBUG_VALUE: x264_pixel_sad_x3_4x8:scores <- $r9
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, %rbx
	movl	%r8d, %ebp
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %rdx
.Ltmp581:
	#DEBUG_VALUE: x264_pixel_sad_x3_4x8:pix1 <- $r15
	movq	%rdi, %r12
.Ltmp582:
	.loc	0 406 1 prologue_end            # x264_src/common/pixel.c:406:1
	movl	$16, %esi
.Ltmp583:
	#DEBUG_VALUE: x264_pixel_sad_x3_4x8:pix0 <- $rdx
	movl	%r8d, %ecx
.Ltmp584:
	#DEBUG_VALUE: x264_pixel_sad_x3_4x8:pix2 <- $r14
	callq	x264_pixel_sad_4x8
.Ltmp585:
	#DEBUG_VALUE: x264_pixel_sad_x3_4x8:scores <- $rbx
	#DEBUG_VALUE: x264_pixel_sad_x3_4x8:i_stride <- $ebp
	#DEBUG_VALUE: x264_pixel_sad_x3_4x8:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_pixel_sad_x3_4x8:fenc <- $r12
	movl	%eax, (%rbx)
	movq	%r12, %rdi
	movl	$16, %esi
	movq	%r15, %rdx
	movl	%ebp, %ecx
	callq	x264_pixel_sad_4x8
.Ltmp586:
	movl	%eax, 4(%rbx)
	movq	%r12, %rdi
	movl	$16, %esi
	movq	%r14, %rdx
	movl	%ebp, %ecx
	callq	x264_pixel_sad_4x8
.Ltmp587:
	movl	%eax, 8(%rbx)
	.loc	0 406 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:406:1
	popq	%rbx
.Ltmp588:
	#DEBUG_VALUE: x264_pixel_sad_x3_4x8:scores <- [DW_OP_LLVM_entry_value 1] $r9
	.cfi_def_cfa_offset 40
	popq	%r12
.Ltmp589:
	#DEBUG_VALUE: x264_pixel_sad_x3_4x8:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp590:
	#DEBUG_VALUE: x264_pixel_sad_x3_4x8:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp591:
	#DEBUG_VALUE: x264_pixel_sad_x3_4x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp592:
	#DEBUG_VALUE: x264_pixel_sad_x3_4x8:i_stride <- [DW_OP_LLVM_entry_value 1] $r8d
	.cfi_def_cfa_offset 8
	retq
.Ltmp593:
.Lfunc_end15:
	.size	x264_pixel_sad_x3_4x8, .Lfunc_end15-x264_pixel_sad_x3_4x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_x3_4x4
	.type	x264_pixel_sad_x3_4x4,@function
x264_pixel_sad_x3_4x4:                  # @x264_pixel_sad_x3_4x4
.Lfunc_begin16:
	.loc	0 407 0 is_stmt 1               # x264_src/common/pixel.c:407:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_x3_4x4:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_x3_4x4:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_x3_4x4:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_x3_4x4:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_sad_x3_4x4:i_stride <- $r8d
	#DEBUG_VALUE: x264_pixel_sad_x3_4x4:scores <- $r9
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_stride_pix2 <- $r8d
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_stride_pix1 <- 16
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset %rbx, -24
	.cfi_offset %rbp, -16
.Ltmp594:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- 0
	#DEBUG_VALUE: y <- 0
	movslq	%r8d, %rax
.Ltmp595:
	#DEBUG_VALUE: x <- 0
	.loc	0 67 1 prologue_end             # x264_src/common/pixel.c:67:1
	movzbl	(%rdi), %r8d
.Ltmp596:
	#DEBUG_VALUE: x264_pixel_sad_x3_4x4:i_stride <- [DW_OP_LLVM_entry_value 1] $r8d
	movzbl	(%rsi), %r10d
	subl	%r10d, %r8d
	movl	%r8d, %r10d
	negl	%r10d
	cmovsl	%r8d, %r10d
	movzbl	%r10b, %r8d
.Ltmp597:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r8d
	#DEBUG_VALUE: x <- 1
	movzbl	1(%rdi), %r10d
	movzbl	1(%rsi), %r11d
	subl	%r11d, %r10d
	movl	%r10d, %r11d
	negl	%r11d
	cmovsl	%r10d, %r11d
	movzbl	%r11b, %r10d
	addl	%r8d, %r10d
.Ltmp598:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r10d
	#DEBUG_VALUE: x <- 2
	movzbl	2(%rdi), %r8d
	movzbl	2(%rsi), %r11d
	subl	%r11d, %r8d
	movl	%r8d, %r11d
	negl	%r11d
	cmovsl	%r8d, %r11d
	movzbl	%r11b, %r8d
.Ltmp599:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 3
	movzbl	3(%rdi), %r11d
	movzbl	3(%rsi), %ebx
	subl	%ebx, %r11d
	movl	%r11d, %ebx
	negl	%ebx
	cmovsl	%r11d, %ebx
	movzbl	%bl, %r11d
	addl	%r8d, %r11d
	addl	%r10d, %r11d
.Ltmp600:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r11d
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 16, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- undef
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 0
	movzbl	16(%rdi), %r8d
	movzbl	(%rsi,%rax), %r10d
	subl	%r10d, %r8d
	movl	%r8d, %r10d
	negl	%r10d
	cmovsl	%r8d, %r10d
	movzbl	%r10b, %r8d
.Ltmp601:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 1
	movzbl	17(%rdi), %r10d
	movzbl	1(%rsi,%rax), %ebx
	subl	%ebx, %r10d
	movl	%r10d, %ebx
	negl	%ebx
	cmovsl	%r10d, %ebx
	movzbl	%bl, %r10d
	addl	%r8d, %r10d
	addl	%r11d, %r10d
.Ltmp602:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r10d
	#DEBUG_VALUE: x <- 2
	movzbl	18(%rdi), %r8d
	movzbl	2(%rsi,%rax), %r11d
	subl	%r11d, %r8d
	movl	%r8d, %r11d
	negl	%r11d
	cmovsl	%r8d, %r11d
.Ltmp603:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 3
	.loc	0 67 1 is_stmt 0                # x264_src/common/pixel.c:67:1
	leaq	(%rsi,%rax), %r8
.Ltmp604:
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $r8
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movzbl	19(%rdi), %ebx
	movzbl	3(%rsi,%rax), %esi
.Ltmp605:
	#DEBUG_VALUE: x264_pixel_sad_x3_4x4:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	subl	%esi, %ebx
	movl	%ebx, %esi
	negl	%esi
	cmovsl	%ebx, %esi
	movzbl	%r11b, %r11d
	movzbl	%sil, %esi
	addl	%r11d, %esi
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp606:
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 32, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- undef
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 0
	movzbl	32(%rdi), %r11d
	movzbl	(%rax,%r8), %ebx
	subl	%ebx, %r11d
	movl	%r11d, %ebx
	negl	%ebx
	cmovsl	%r11d, %ebx
	movzbl	%bl, %r11d
	addl	%esi, %r11d
	addl	%r10d, %r11d
.Ltmp607:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r11d
	#DEBUG_VALUE: x <- 1
	movzbl	33(%rdi), %esi
	movzbl	1(%rax,%r8), %r10d
	subl	%r10d, %esi
	movl	%esi, %r10d
	negl	%r10d
	cmovsl	%esi, %r10d
.Ltmp608:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 2
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	leaq	(%r8,%rax), %rsi
.Ltmp609:
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $rsi
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movzbl	34(%rdi), %ebx
	movzbl	2(%rax,%r8), %ebp
	subl	%ebp, %ebx
	movl	%ebx, %ebp
	negl	%ebp
	cmovsl	%ebx, %ebp
	movzbl	%r10b, %r10d
	movzbl	%bpl, %ebx
	addl	%r10d, %ebx
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp610:
	#DEBUG_VALUE: x <- 3
	movzbl	35(%rdi), %r10d
	movzbl	3(%rax,%r8), %r8d
	subl	%r8d, %r10d
	movl	%r10d, %r8d
	negl	%r8d
	cmovsl	%r10d, %r8d
	movzbl	%r8b, %r8d
	addl	%ebx, %r8d
	addl	%r11d, %r8d
.Ltmp611:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r8d
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 48, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 0
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rsi, $rax
	movzbl	48(%rdi), %r10d
	movzbl	(%rax,%rsi), %r11d
	subl	%r11d, %r10d
	movl	%r10d, %r11d
	negl	%r11d
	cmovsl	%r10d, %r11d
.Ltmp612:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 1
	movzbl	49(%rdi), %r10d
	movzbl	1(%rax,%rsi), %ebx
	subl	%ebx, %r10d
	movl	%r10d, %ebx
	negl	%ebx
	cmovsl	%r10d, %ebx
	movzbl	%r11b, %r10d
	movzbl	%bl, %r11d
	addl	%r10d, %r11d
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp613:
	#DEBUG_VALUE: x <- 2
	movzbl	50(%rdi), %r10d
	movzbl	2(%rax,%rsi), %ebx
	subl	%ebx, %r10d
	movl	%r10d, %ebx
	negl	%ebx
	cmovsl	%r10d, %ebx
	movzbl	%bl, %r10d
	addl	%r11d, %r10d
	addl	%r8d, %r10d
.Ltmp614:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r10d
	#DEBUG_VALUE: x <- 3
	movzbl	51(%rdi), %r8d
	movzbl	3(%rax,%rsi), %esi
.Ltmp615:
	subl	%esi, %r8d
	movl	%r8d, %esi
	negl	%esi
	cmovsl	%r8d, %esi
	movzbl	%sil, %esi
	addl	%r10d, %esi
.Ltmp616:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $esi
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 48, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, 16
	.loc	0 407 1 is_stmt 1               # x264_src/common/pixel.c:407:1
	movl	%esi, (%r9)
.Ltmp617:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_stride_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_stride_pix2 <- undef
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $rdx
	#DEBUG_VALUE: x <- 0
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- 0
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movzbl	(%rdi), %esi
.Ltmp618:
	movzbl	(%rdx), %r8d
	subl	%r8d, %esi
	movl	%esi, %r8d
	negl	%r8d
	cmovsl	%esi, %r8d
	movzbl	%r8b, %esi
.Ltmp619:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $esi
	#DEBUG_VALUE: x <- 1
	movzbl	1(%rdi), %r8d
	movzbl	1(%rdx), %r10d
	subl	%r10d, %r8d
	movl	%r8d, %r10d
	negl	%r10d
	cmovsl	%r8d, %r10d
	movzbl	%r10b, %r8d
	addl	%esi, %r8d
.Ltmp620:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r8d
	#DEBUG_VALUE: x <- 2
	movzbl	2(%rdi), %esi
	movzbl	2(%rdx), %r10d
	subl	%r10d, %esi
	movl	%esi, %r10d
	negl	%r10d
	cmovsl	%esi, %r10d
	movzbl	%r10b, %esi
.Ltmp621:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 3
	movzbl	3(%rdi), %r10d
	movzbl	3(%rdx), %r11d
	subl	%r11d, %r10d
	movl	%r10d, %r11d
	negl	%r11d
	cmovsl	%r10d, %r11d
	movzbl	%r11b, %r10d
	addl	%esi, %r10d
	addl	%r8d, %r10d
.Ltmp622:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r10d
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 16, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- undef
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 0
	movzbl	16(%rdi), %esi
	movzbl	(%rdx,%rax), %r8d
	subl	%r8d, %esi
	movl	%esi, %r8d
	negl	%r8d
	cmovsl	%esi, %r8d
	movzbl	%r8b, %esi
.Ltmp623:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 1
	movzbl	17(%rdi), %r8d
	movzbl	1(%rdx,%rax), %r11d
	subl	%r11d, %r8d
	movl	%r8d, %r11d
	negl	%r11d
	cmovsl	%r8d, %r11d
	movzbl	%r11b, %r8d
	addl	%esi, %r8d
	addl	%r10d, %r8d
.Ltmp624:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r8d
	#DEBUG_VALUE: x <- 2
	movzbl	18(%rdi), %esi
	movzbl	2(%rdx,%rax), %r10d
	subl	%r10d, %esi
	movl	%esi, %r10d
	negl	%r10d
	cmovsl	%esi, %r10d
.Ltmp625:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 3
	.loc	0 67 1 is_stmt 0                # x264_src/common/pixel.c:67:1
	leaq	(%rdx,%rax), %rsi
.Ltmp626:
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $rsi
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movzbl	19(%rdi), %r11d
	movzbl	3(%rdx,%rax), %edx
.Ltmp627:
	#DEBUG_VALUE: x264_pixel_sad_x3_4x4:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	subl	%edx, %r11d
	movl	%r11d, %edx
	negl	%edx
	cmovsl	%r11d, %edx
	movzbl	%r10b, %r10d
	movzbl	%dl, %edx
	addl	%r10d, %edx
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp628:
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 32, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- undef
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 0
	movzbl	32(%rdi), %r10d
	movzbl	(%rax,%rsi), %r11d
	subl	%r11d, %r10d
	movl	%r10d, %r11d
	negl	%r11d
	cmovsl	%r10d, %r11d
	movzbl	%r11b, %r10d
	addl	%edx, %r10d
	addl	%r8d, %r10d
.Ltmp629:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r10d
	#DEBUG_VALUE: x <- 1
	movzbl	33(%rdi), %edx
	movzbl	1(%rax,%rsi), %r8d
	subl	%r8d, %edx
	movl	%edx, %r8d
	negl	%r8d
	cmovsl	%edx, %r8d
.Ltmp630:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 2
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	leaq	(%rsi,%rax), %rdx
.Ltmp631:
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $rdx
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movzbl	34(%rdi), %r11d
	movzbl	2(%rax,%rsi), %ebx
	subl	%ebx, %r11d
	movl	%r11d, %ebx
	negl	%ebx
	cmovsl	%r11d, %ebx
	movzbl	%r8b, %r8d
	movzbl	%bl, %r11d
	addl	%r8d, %r11d
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp632:
	#DEBUG_VALUE: x <- 3
	movzbl	35(%rdi), %r8d
	movzbl	3(%rax,%rsi), %esi
	subl	%esi, %r8d
	movl	%r8d, %esi
	negl	%esi
	cmovsl	%r8d, %esi
	movzbl	%sil, %esi
	addl	%r11d, %esi
	addl	%r10d, %esi
.Ltmp633:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $esi
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 48, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 0
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdx, $rax
	movzbl	48(%rdi), %r8d
	movzbl	(%rax,%rdx), %r10d
	subl	%r10d, %r8d
	movl	%r8d, %r10d
	negl	%r10d
	cmovsl	%r8d, %r10d
.Ltmp634:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 1
	movzbl	49(%rdi), %r8d
	movzbl	1(%rax,%rdx), %r11d
	subl	%r11d, %r8d
	movl	%r8d, %r11d
	negl	%r11d
	cmovsl	%r8d, %r11d
	movzbl	%r10b, %r8d
	movzbl	%r11b, %r10d
	addl	%r8d, %r10d
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp635:
	#DEBUG_VALUE: x <- 2
	movzbl	50(%rdi), %r8d
	movzbl	2(%rax,%rdx), %r11d
	subl	%r11d, %r8d
	movl	%r8d, %r11d
	negl	%r11d
	cmovsl	%r8d, %r11d
	movzbl	%r11b, %r8d
	addl	%r10d, %r8d
	addl	%esi, %r8d
.Ltmp636:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r8d
	#DEBUG_VALUE: x <- 3
	movzbl	51(%rdi), %esi
	movzbl	3(%rax,%rdx), %edx
.Ltmp637:
	subl	%edx, %esi
	movl	%esi, %edx
	negl	%edx
	cmovsl	%esi, %edx
	movzbl	%dl, %edx
	addl	%r8d, %edx
.Ltmp638:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $edx
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 48, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, 16
	.loc	0 407 1 is_stmt 1               # x264_src/common/pixel.c:407:1
	movl	%edx, 4(%r9)
.Ltmp639:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_stride_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_stride_pix2 <- undef
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $rcx
	#DEBUG_VALUE: x <- 0
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- 0
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movzbl	(%rdi), %edx
.Ltmp640:
	movzbl	(%rcx), %esi
	subl	%esi, %edx
	movl	%edx, %esi
	negl	%esi
	cmovsl	%edx, %esi
	movzbl	%sil, %edx
.Ltmp641:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $edx
	#DEBUG_VALUE: x <- 1
	movzbl	1(%rdi), %esi
	movzbl	1(%rcx), %r8d
	subl	%r8d, %esi
	movl	%esi, %r8d
	negl	%r8d
	cmovsl	%esi, %r8d
	movzbl	%r8b, %esi
	addl	%edx, %esi
.Ltmp642:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $esi
	#DEBUG_VALUE: x <- 2
	movzbl	2(%rdi), %edx
	movzbl	2(%rcx), %r8d
	subl	%r8d, %edx
	movl	%edx, %r8d
	negl	%r8d
	cmovsl	%edx, %r8d
	movzbl	%r8b, %edx
.Ltmp643:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 3
	movzbl	3(%rdi), %r8d
	movzbl	3(%rcx), %r10d
	subl	%r10d, %r8d
	movl	%r8d, %r10d
	negl	%r10d
	cmovsl	%r8d, %r10d
	movzbl	%r10b, %r8d
	addl	%edx, %r8d
	addl	%esi, %r8d
.Ltmp644:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r8d
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 16, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- undef
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 0
	movzbl	16(%rdi), %edx
	movzbl	(%rcx,%rax), %esi
	subl	%esi, %edx
	movl	%edx, %esi
	negl	%esi
	cmovsl	%edx, %esi
	movzbl	%sil, %edx
.Ltmp645:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 1
	movzbl	17(%rdi), %esi
	movzbl	1(%rcx,%rax), %r10d
	subl	%r10d, %esi
	movl	%esi, %r10d
	negl	%r10d
	cmovsl	%esi, %r10d
	movzbl	%r10b, %esi
	addl	%edx, %esi
	addl	%r8d, %esi
.Ltmp646:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $esi
	#DEBUG_VALUE: x <- 2
	movzbl	18(%rdi), %edx
	movzbl	2(%rcx,%rax), %r8d
	subl	%r8d, %edx
	movl	%edx, %r8d
	negl	%r8d
	cmovsl	%edx, %r8d
.Ltmp647:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 3
	.loc	0 67 1 is_stmt 0                # x264_src/common/pixel.c:67:1
	leaq	(%rcx,%rax), %rdx
.Ltmp648:
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $rdx
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movzbl	19(%rdi), %r10d
	movzbl	3(%rcx,%rax), %ecx
.Ltmp649:
	#DEBUG_VALUE: x264_pixel_sad_x3_4x4:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	subl	%ecx, %r10d
	movl	%r10d, %ecx
	negl	%ecx
	cmovsl	%r10d, %ecx
	movzbl	%r8b, %r8d
	movzbl	%cl, %ecx
	addl	%r8d, %ecx
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp650:
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 32, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- undef
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 0
	movzbl	32(%rdi), %r8d
	movzbl	(%rax,%rdx), %r10d
	subl	%r10d, %r8d
	movl	%r8d, %r10d
	negl	%r10d
	cmovsl	%r8d, %r10d
	movzbl	%r10b, %r8d
	addl	%ecx, %r8d
	addl	%esi, %r8d
.Ltmp651:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r8d
	#DEBUG_VALUE: x <- 1
	movzbl	33(%rdi), %ecx
	movzbl	1(%rax,%rdx), %esi
	subl	%esi, %ecx
	movl	%ecx, %esi
	negl	%esi
	cmovsl	%ecx, %esi
.Ltmp652:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 2
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	leaq	(%rdx,%rax), %rcx
.Ltmp653:
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $rcx
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movzbl	34(%rdi), %r10d
	movzbl	2(%rax,%rdx), %r11d
	subl	%r11d, %r10d
	movl	%r10d, %r11d
	negl	%r11d
	cmovsl	%r10d, %r11d
	movzbl	%sil, %esi
	movzbl	%r11b, %r10d
	addl	%esi, %r10d
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp654:
	#DEBUG_VALUE: x <- 3
	movzbl	35(%rdi), %esi
	movzbl	3(%rax,%rdx), %edx
	subl	%edx, %esi
	movl	%esi, %edx
	negl	%edx
	cmovsl	%esi, %edx
	movzbl	%dl, %edx
	addl	%r10d, %edx
	addl	%r8d, %edx
.Ltmp655:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $edx
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 48, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 0
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rcx, $rax
	movzbl	48(%rdi), %esi
	movzbl	(%rax,%rcx), %r8d
	subl	%r8d, %esi
	movl	%esi, %r8d
	negl	%r8d
	cmovsl	%esi, %r8d
.Ltmp656:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 1
	movzbl	49(%rdi), %esi
	movzbl	1(%rax,%rcx), %r10d
	subl	%r10d, %esi
	movl	%esi, %r10d
	negl	%r10d
	cmovsl	%esi, %r10d
	movzbl	%r8b, %esi
	movzbl	%r10b, %r8d
	addl	%esi, %r8d
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp657:
	#DEBUG_VALUE: x <- 2
	movzbl	50(%rdi), %esi
	movzbl	2(%rax,%rcx), %r10d
	subl	%r10d, %esi
	movl	%esi, %r10d
	negl	%r10d
	cmovsl	%esi, %r10d
	movzbl	%r10b, %esi
	addl	%r8d, %esi
	addl	%edx, %esi
.Ltmp658:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $esi
	#DEBUG_VALUE: x <- 3
	movzbl	51(%rdi), %edx
	movzbl	3(%rax,%rcx), %eax
.Ltmp659:
	subl	%eax, %edx
	movl	%edx, %eax
	negl	%eax
	cmovsl	%edx, %eax
	movzbl	%al, %eax
	addl	%esi, %eax
.Ltmp660:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $eax
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 48, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, 16
	.loc	0 407 1 is_stmt 1               # x264_src/common/pixel.c:407:1
	movl	%eax, 8(%r9)
	.loc	0 407 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:407:1
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp661:
.Lfunc_end16:
	.size	x264_pixel_sad_x3_4x4, .Lfunc_end16-x264_pixel_sad_x3_4x4
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_x4_16x16
	.type	x264_pixel_sad_x4_16x16,@function
x264_pixel_sad_x4_16x16:                # @x264_pixel_sad_x4_16x16
.Lfunc_begin17:
	.loc	0 401 0 is_stmt 1               # x264_src/common/pixel.c:401:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_x4_16x16:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_x4_16x16:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_x4_16x16:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_x4_16x16:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_sad_x4_16x16:pix3 <- $r8
	#DEBUG_VALUE: x264_pixel_sad_x4_16x16:i_stride <- $r9d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp662:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x16:scores <- [DW_OP_plus_uconst 64] [$rsp+0]
	movl	%r9d, %ebx
	movq	%r8, %r14
	movq	%rcx, %r15
	movq	%rdx, %r12
	movq	%rsi, %rdx
.Ltmp663:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x16:pix1 <- $r12
	movq	%rdi, %r13
	movq	64(%rsp), %rbp
.Ltmp664:
	.loc	0 401 1 prologue_end            # x264_src/common/pixel.c:401:1
	movl	$16, %esi
.Ltmp665:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x16:pix0 <- $rdx
	movl	%r9d, %ecx
.Ltmp666:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x16:pix2 <- $r15
	callq	x264_pixel_sad_16x16
.Ltmp667:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x16:i_stride <- $ebx
	#DEBUG_VALUE: x264_pixel_sad_x4_16x16:pix3 <- $r14
	#DEBUG_VALUE: x264_pixel_sad_x4_16x16:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_pixel_sad_x4_16x16:fenc <- $r13
	movl	%eax, (%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r12, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_sad_16x16
.Ltmp668:
	movl	%eax, 4(%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r15, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_sad_16x16
.Ltmp669:
	movl	%eax, 8(%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r14, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_sad_16x16
.Ltmp670:
	movl	%eax, 12(%rbp)
	.loc	0 401 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:401:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp671:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x16:i_stride <- [DW_OP_LLVM_entry_value 1] $r9d
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp672:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x16:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp673:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x16:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp674:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x16:pix3 <- [DW_OP_LLVM_entry_value 1] $r8
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp675:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x16:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp676:
.Lfunc_end17:
	.size	x264_pixel_sad_x4_16x16, .Lfunc_end17-x264_pixel_sad_x4_16x16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_x4_16x8
	.type	x264_pixel_sad_x4_16x8,@function
x264_pixel_sad_x4_16x8:                 # @x264_pixel_sad_x4_16x8
.Lfunc_begin18:
	.loc	0 402 0 is_stmt 1               # x264_src/common/pixel.c:402:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_x4_16x8:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_x4_16x8:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_x4_16x8:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_x4_16x8:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_sad_x4_16x8:pix3 <- $r8
	#DEBUG_VALUE: x264_pixel_sad_x4_16x8:i_stride <- $r9d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp677:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x8:scores <- [DW_OP_plus_uconst 64] [$rsp+0]
	movl	%r9d, %ebx
	movq	%r8, %r14
	movq	%rcx, %r15
	movq	%rdx, %r12
	movq	%rsi, %rdx
.Ltmp678:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x8:pix1 <- $r12
	movq	%rdi, %r13
	movq	64(%rsp), %rbp
.Ltmp679:
	.loc	0 402 1 prologue_end            # x264_src/common/pixel.c:402:1
	movl	$16, %esi
.Ltmp680:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x8:pix0 <- $rdx
	movl	%r9d, %ecx
.Ltmp681:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x8:pix2 <- $r15
	callq	x264_pixel_sad_16x8
.Ltmp682:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x8:i_stride <- $ebx
	#DEBUG_VALUE: x264_pixel_sad_x4_16x8:pix3 <- $r14
	#DEBUG_VALUE: x264_pixel_sad_x4_16x8:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_pixel_sad_x4_16x8:fenc <- $r13
	movl	%eax, (%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r12, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_sad_16x8
.Ltmp683:
	movl	%eax, 4(%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r15, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_sad_16x8
.Ltmp684:
	movl	%eax, 8(%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r14, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_sad_16x8
.Ltmp685:
	movl	%eax, 12(%rbp)
	.loc	0 402 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:402:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp686:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x8:i_stride <- [DW_OP_LLVM_entry_value 1] $r9d
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp687:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp688:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x8:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp689:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x8:pix3 <- [DW_OP_LLVM_entry_value 1] $r8
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp690:
	#DEBUG_VALUE: x264_pixel_sad_x4_16x8:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp691:
.Lfunc_end18:
	.size	x264_pixel_sad_x4_16x8, .Lfunc_end18-x264_pixel_sad_x4_16x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_x4_8x16
	.type	x264_pixel_sad_x4_8x16,@function
x264_pixel_sad_x4_8x16:                 # @x264_pixel_sad_x4_8x16
.Lfunc_begin19:
	.loc	0 403 0 is_stmt 1               # x264_src/common/pixel.c:403:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_x4_8x16:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_x4_8x16:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_x4_8x16:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_x4_8x16:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_sad_x4_8x16:pix3 <- $r8
	#DEBUG_VALUE: x264_pixel_sad_x4_8x16:i_stride <- $r9d
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_stride_pix2 <- $r9d
	#DEBUG_VALUE: x264_pixel_sad_x4_8x16:scores <- [DW_OP_plus_uconst 8] [$rsp+0]
	movq	8(%rsp), %rax
	#DEBUG_VALUE: x <- 8
.Ltmp692:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- undef
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- undef
	#DEBUG_VALUE: y <- 16
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- undef
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- undef
	#DEBUG_VALUE: y <- 16
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- undef
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- undef
	#DEBUG_VALUE: y <- 16
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_stride_pix2 <- $r9d
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_stride_pix2 <- $r9d
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_stride_pix2 <- $r9d
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_stride_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- 0
	#DEBUG_VALUE: y <- 0
	movslq	%r9d, %r9
.Ltmp693:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x16:i_stride <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1 prologue_end             # x264_src/common/pixel.c:63:1
	movq	(%rdi), %xmm0                   # xmm0 = mem[0],zero
	movq	(%rsi), %xmm1                   # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	movq	16(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rsi,%r9), %xmm1               # xmm1 = mem[0],zero
.Ltmp694:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1 is_stmt 0                # x264_src/common/pixel.c:63:1
	addq	%r9, %rsi
.Ltmp695:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x16:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r11d
	addl	%r10d, %r11d
	movq	32(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
.Ltmp696:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r11d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rsi
.Ltmp697:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r11d, %r10d
	movq	48(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
.Ltmp698:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rsi
.Ltmp699:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r11d
	addl	%r10d, %r11d
	movq	64(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
.Ltmp700:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r11d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rsi
.Ltmp701:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r11d, %r10d
	movq	80(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
.Ltmp702:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rsi
.Ltmp703:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r11d
	addl	%r10d, %r11d
	movq	96(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
.Ltmp704:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r11d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rsi
.Ltmp705:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r11d, %r10d
	movq	112(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
.Ltmp706:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rsi
.Ltmp707:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r11d
	addl	%r10d, %r11d
	movq	128(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
.Ltmp708:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r11d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rsi
.Ltmp709:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 8
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r11d, %r10d
	movq	144(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
.Ltmp710:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rsi
.Ltmp711:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 9
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r11d
	addl	%r10d, %r11d
	movq	160(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
.Ltmp712:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r11d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rsi
.Ltmp713:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 10
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r11d, %r10d
	movq	176(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
.Ltmp714:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rsi
.Ltmp715:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 11
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r11d
	addl	%r10d, %r11d
	movq	192(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
.Ltmp716:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r11d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rsi
.Ltmp717:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 12
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r11d, %r10d
	movq	208(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
.Ltmp718:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rsi
.Ltmp719:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 13
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r11d
	addl	%r10d, %r11d
	movq	224(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
.Ltmp720:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r11d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rsi
.Ltmp721:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rsi
	#DEBUG_VALUE: y <- 14
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r11d, %r10d
.Ltmp722:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 15
	#DEBUG_VALUE: x <- 7
	movq	240(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
.Ltmp723:
	addl	%r10d, %esi
.Ltmp724:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	.loc	0 403 1 is_stmt 1               # x264_src/common/pixel.c:403:1
	movl	%esi, (%rax)
.Ltmp725:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_stride_pix1 <- 16
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	movq	(%rdi), %xmm0                   # xmm0 = mem[0],zero
	movq	(%rdx), %xmm1                   # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
.Ltmp726:
	movq	16(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rdx,%r9), %xmm1               # xmm1 = mem[0],zero
.Ltmp727:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1 is_stmt 0                # x264_src/common/pixel.c:63:1
	addq	%r9, %rdx
.Ltmp728:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x16:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%esi, %r10d
	movq	32(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
.Ltmp729:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rdx
.Ltmp730:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r10d, %esi
	movq	48(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
.Ltmp731:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rdx
.Ltmp732:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%esi, %r10d
	movq	64(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
.Ltmp733:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rdx
.Ltmp734:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r10d, %esi
	movq	80(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
.Ltmp735:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rdx
.Ltmp736:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%esi, %r10d
	movq	96(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
.Ltmp737:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rdx
.Ltmp738:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r10d, %esi
	movq	112(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
.Ltmp739:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rdx
.Ltmp740:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%esi, %r10d
	movq	128(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
.Ltmp741:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rdx
.Ltmp742:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 8
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r10d, %esi
	movq	144(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
.Ltmp743:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rdx
.Ltmp744:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 9
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%esi, %r10d
	movq	160(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
.Ltmp745:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rdx
.Ltmp746:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 10
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r10d, %esi
	movq	176(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
.Ltmp747:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rdx
.Ltmp748:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 11
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%esi, %r10d
	movq	192(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
.Ltmp749:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rdx
.Ltmp750:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 12
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r10d, %esi
	movq	208(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
.Ltmp751:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rdx
.Ltmp752:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 13
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%esi, %r10d
	movq	224(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
.Ltmp753:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rdx
.Ltmp754:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- 14
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r10d, %esi
.Ltmp755:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 15
	#DEBUG_VALUE: x <- 7
	movq	240(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
.Ltmp756:
	addl	%esi, %edx
.Ltmp757:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	.loc	0 403 1 is_stmt 1               # x264_src/common/pixel.c:403:1
	movl	%edx, 4(%rax)
.Ltmp758:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_stride_pix1 <- 16
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	movq	(%rdi), %xmm0                   # xmm0 = mem[0],zero
	movq	(%rcx), %xmm1                   # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
.Ltmp759:
	movq	16(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rcx,%r9), %xmm1               # xmm1 = mem[0],zero
.Ltmp760:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1 is_stmt 0                # x264_src/common/pixel.c:63:1
	addq	%r9, %rcx
.Ltmp761:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x16:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	32(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
.Ltmp762:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rcx
.Ltmp763:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
	movq	48(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
.Ltmp764:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rcx
.Ltmp765:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	64(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
.Ltmp766:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rcx
.Ltmp767:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
	movq	80(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
.Ltmp768:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rcx
.Ltmp769:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	96(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
.Ltmp770:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rcx
.Ltmp771:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
	movq	112(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
.Ltmp772:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rcx
.Ltmp773:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	128(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
.Ltmp774:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rcx
.Ltmp775:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 8
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
	movq	144(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
.Ltmp776:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rcx
.Ltmp777:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 9
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	160(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
.Ltmp778:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rcx
.Ltmp779:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 10
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
	movq	176(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
.Ltmp780:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rcx
.Ltmp781:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 11
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	192(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
.Ltmp782:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rcx
.Ltmp783:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 12
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
	movq	208(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
.Ltmp784:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rcx
.Ltmp785:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 13
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	224(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
.Ltmp786:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %rcx
.Ltmp787:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $rcx
	#DEBUG_VALUE: y <- 14
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
.Ltmp788:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 15
	#DEBUG_VALUE: x <- 7
	movq	240(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %ecx
.Ltmp789:
	addl	%edx, %ecx
.Ltmp790:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $ecx
	.loc	0 403 1 is_stmt 1               # x264_src/common/pixel.c:403:1
	movl	%ecx, 8(%rax)
.Ltmp791:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_stride_pix1 <- 16
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $r8
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	movq	(%rdi), %xmm0                   # xmm0 = mem[0],zero
	movq	(%r8), %xmm1                    # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %ecx
.Ltmp792:
	movq	16(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r8,%r9), %xmm1                # xmm1 = mem[0],zero
.Ltmp793:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $ecx
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix1 <- undef
	.loc	0 63 1 is_stmt 0                # x264_src/common/pixel.c:63:1
	addq	%r9, %r8
.Ltmp794:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x16:pix3 <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $r8
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%ecx, %edx
	movq	32(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
.Ltmp795:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %r8
.Ltmp796:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $r8
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %ecx
	addl	%edx, %ecx
	movq	48(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
.Ltmp797:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $ecx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %r8
.Ltmp798:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $r8
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%ecx, %edx
	movq	64(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
.Ltmp799:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %r8
.Ltmp800:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $r8
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %ecx
	addl	%edx, %ecx
	movq	80(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
.Ltmp801:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $ecx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %r8
.Ltmp802:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $r8
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%ecx, %edx
	movq	96(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
.Ltmp803:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %r8
.Ltmp804:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $r8
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %ecx
	addl	%edx, %ecx
	movq	112(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
.Ltmp805:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $ecx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %r8
.Ltmp806:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $r8
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%ecx, %edx
	movq	128(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
.Ltmp807:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %r8
.Ltmp808:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $r8
	#DEBUG_VALUE: y <- 8
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %ecx
	addl	%edx, %ecx
	movq	144(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
.Ltmp809:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $ecx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %r8
.Ltmp810:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $r8
	#DEBUG_VALUE: y <- 9
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%ecx, %edx
	movq	160(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
.Ltmp811:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %r8
.Ltmp812:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $r8
	#DEBUG_VALUE: y <- 10
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %ecx
	addl	%edx, %ecx
	movq	176(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
.Ltmp813:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $ecx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %r8
.Ltmp814:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $r8
	#DEBUG_VALUE: y <- 11
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%ecx, %edx
	movq	192(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
.Ltmp815:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %r8
.Ltmp816:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $r8
	#DEBUG_VALUE: y <- 12
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %ecx
	addl	%edx, %ecx
	movq	208(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
.Ltmp817:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $ecx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %r8
.Ltmp818:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $r8
	#DEBUG_VALUE: y <- 13
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%ecx, %edx
	movq	224(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
.Ltmp819:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	addq	%r9, %r8
.Ltmp820:
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- $r8
	#DEBUG_VALUE: y <- 14
	#DEBUG_VALUE: x <- 7
	.loc	0 63 1                          # x264_src/common/pixel.c:63:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %ecx
	addl	%edx, %ecx
.Ltmp821:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $ecx
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x16:pix2 <- undef
	#DEBUG_VALUE: y <- 15
	#DEBUG_VALUE: x <- 7
	movq	240(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%ecx, %edx
.Ltmp822:
	#DEBUG_VALUE: x264_pixel_sad_8x16:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 16
	.loc	0 403 1 is_stmt 1               # x264_src/common/pixel.c:403:1
	movl	%edx, 12(%rax)
	retq
.Ltmp823:
.Lfunc_end19:
	.size	x264_pixel_sad_x4_8x16, .Lfunc_end19-x264_pixel_sad_x4_8x16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_x4_8x8
	.type	x264_pixel_sad_x4_8x8,@function
x264_pixel_sad_x4_8x8:                  # @x264_pixel_sad_x4_8x8
.Lfunc_begin20:
	.loc	0 404 0                         # x264_src/common/pixel.c:404:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_x4_8x8:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_x4_8x8:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_x4_8x8:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_x4_8x8:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_sad_x4_8x8:pix3 <- $r8
	#DEBUG_VALUE: x264_pixel_sad_x4_8x8:i_stride <- $r9d
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_stride_pix2 <- $r9d
	#DEBUG_VALUE: x264_pixel_sad_x4_8x8:scores <- [DW_OP_plus_uconst 8] [$rsp+0]
	movq	8(%rsp), %rax
	#DEBUG_VALUE: x <- 8
.Ltmp824:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- undef
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- undef
	#DEBUG_VALUE: y <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- $rdi
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- undef
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- undef
	#DEBUG_VALUE: y <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- $rdi
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- undef
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- undef
	#DEBUG_VALUE: y <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_stride_pix2 <- $r9d
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_stride_pix2 <- $r9d
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_stride_pix2 <- $r9d
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_stride_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- 0
	#DEBUG_VALUE: y <- 0
	movslq	%r9d, %r9
.Ltmp825:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x8:i_stride <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1 prologue_end             # x264_src/common/pixel.c:64:1
	movq	(%rdi), %xmm0                   # xmm0 = mem[0],zero
	movq	(%rsi), %xmm1                   # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	movq	16(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rsi,%r9), %xmm1               # xmm1 = mem[0],zero
.Ltmp826:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1 is_stmt 0                # x264_src/common/pixel.c:64:1
	addq	%r9, %rsi
.Ltmp827:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x8:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rsi
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r11d
	addl	%r10d, %r11d
	movq	32(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
.Ltmp828:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r11d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %rsi
.Ltmp829:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rsi
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r11d, %r10d
	movq	48(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
.Ltmp830:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %rsi
.Ltmp831:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rsi
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r11d
	addl	%r10d, %r11d
	movq	64(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
.Ltmp832:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r11d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %rsi
.Ltmp833:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rsi
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r11d, %r10d
	movq	80(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
.Ltmp834:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %rsi
.Ltmp835:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rsi
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r11d
	addl	%r10d, %r11d
	movq	96(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
.Ltmp836:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r11d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %rsi
.Ltmp837:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rsi
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%r11d, %r10d
.Ltmp838:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 7
	movq	112(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rsi), %xmm1               # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
.Ltmp839:
	addl	%r10d, %esi
.Ltmp840:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	.loc	0 404 1 is_stmt 1               # x264_src/common/pixel.c:404:1
	movl	%esi, (%rax)
.Ltmp841:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_stride_pix1 <- 16
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	movq	(%rdi), %xmm0                   # xmm0 = mem[0],zero
	movq	(%rdx), %xmm1                   # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
.Ltmp842:
	movq	16(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rdx,%r9), %xmm1               # xmm1 = mem[0],zero
.Ltmp843:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1 is_stmt 0                # x264_src/common/pixel.c:64:1
	addq	%r9, %rdx
.Ltmp844:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%esi, %r10d
	movq	32(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
.Ltmp845:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %rdx
.Ltmp846:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r10d, %esi
	movq	48(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
.Ltmp847:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %rdx
.Ltmp848:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%esi, %r10d
	movq	64(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
.Ltmp849:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %rdx
.Ltmp850:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r10d, %esi
	movq	80(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
.Ltmp851:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %rdx
.Ltmp852:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %r10d
	addl	%esi, %r10d
	movq	96(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
.Ltmp853:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $r10d
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %rdx
.Ltmp854:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%r10d, %esi
.Ltmp855:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 7
	movq	112(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rdx), %xmm1               # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
.Ltmp856:
	addl	%esi, %edx
.Ltmp857:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $edx
	.loc	0 404 1 is_stmt 1               # x264_src/common/pixel.c:404:1
	movl	%edx, 4(%rax)
.Ltmp858:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_stride_pix1 <- 16
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rcx
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	movq	(%rdi), %xmm0                   # xmm0 = mem[0],zero
	movq	(%rcx), %xmm1                   # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
.Ltmp859:
	movq	16(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%rcx,%r9), %xmm1               # xmm1 = mem[0],zero
.Ltmp860:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1 is_stmt 0                # x264_src/common/pixel.c:64:1
	addq	%r9, %rcx
.Ltmp861:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x8:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rcx
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	32(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
.Ltmp862:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %rcx
.Ltmp863:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rcx
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
	movq	48(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
.Ltmp864:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %rcx
.Ltmp865:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rcx
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	64(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
.Ltmp866:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %rcx
.Ltmp867:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rcx
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
	movq	80(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
.Ltmp868:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %rcx
.Ltmp869:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rcx
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %esi
	addl	%edx, %esi
	movq	96(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
.Ltmp870:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %rcx
.Ltmp871:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $rcx
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%esi, %edx
.Ltmp872:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 7
	movq	112(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%rcx), %xmm1               # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %ecx
.Ltmp873:
	addl	%edx, %ecx
.Ltmp874:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $ecx
	.loc	0 404 1 is_stmt 1               # x264_src/common/pixel.c:404:1
	movl	%ecx, 8(%rax)
.Ltmp875:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_stride_pix1 <- 16
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $r8
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	movq	(%rdi), %xmm0                   # xmm0 = mem[0],zero
	movq	(%r8), %xmm1                    # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %ecx
.Ltmp876:
	movq	16(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r8,%r9), %xmm1                # xmm1 = mem[0],zero
.Ltmp877:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $ecx
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix1 <- undef
	.loc	0 64 1 is_stmt 0                # x264_src/common/pixel.c:64:1
	addq	%r9, %r8
.Ltmp878:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x8:pix3 <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $r8
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%ecx, %edx
	movq	32(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
.Ltmp879:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %r8
.Ltmp880:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $r8
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %ecx
	addl	%edx, %ecx
	movq	48(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
.Ltmp881:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $ecx
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %r8
.Ltmp882:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $r8
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%ecx, %edx
	movq	64(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
.Ltmp883:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %r8
.Ltmp884:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $r8
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %ecx
	addl	%edx, %ecx
	movq	80(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
.Ltmp885:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $ecx
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %r8
.Ltmp886:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $r8
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%ecx, %edx
	movq	96(%rdi), %xmm0                 # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
.Ltmp887:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	addq	%r9, %r8
.Ltmp888:
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- $r8
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 7
	.loc	0 64 1                          # x264_src/common/pixel.c:64:1
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %ecx
	addl	%edx, %ecx
.Ltmp889:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $ecx
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_sad_8x8:pix2 <- undef
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 7
	movq	112(%rdi), %xmm0                # xmm0 = mem[0],zero
	movq	(%r9,%r8), %xmm1                # xmm1 = mem[0],zero
	psadbw	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%ecx, %edx
.Ltmp890:
	#DEBUG_VALUE: x264_pixel_sad_8x8:i_sum <- $edx
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 8
	.loc	0 404 1 is_stmt 1               # x264_src/common/pixel.c:404:1
	movl	%edx, 12(%rax)
	retq
.Ltmp891:
.Lfunc_end20:
	.size	x264_pixel_sad_x4_8x8, .Lfunc_end20-x264_pixel_sad_x4_8x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_x4_8x4
	.type	x264_pixel_sad_x4_8x4,@function
x264_pixel_sad_x4_8x4:                  # @x264_pixel_sad_x4_8x4
.Lfunc_begin21:
	.loc	0 405 0                         # x264_src/common/pixel.c:405:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_x4_8x4:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_x4_8x4:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_x4_8x4:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_x4_8x4:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_sad_x4_8x4:pix3 <- $r8
	#DEBUG_VALUE: x264_pixel_sad_x4_8x4:i_stride <- $r9d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp892:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x4:scores <- [DW_OP_plus_uconst 64] [$rsp+0]
	movl	%r9d, %ebx
	movq	%r8, %r14
	movq	%rcx, %r15
	movq	%rdx, %r12
	movq	%rsi, %rdx
.Ltmp893:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x4:pix1 <- $r12
	movq	%rdi, %r13
	movq	64(%rsp), %rbp
.Ltmp894:
	.loc	0 405 1 prologue_end            # x264_src/common/pixel.c:405:1
	movl	$16, %esi
.Ltmp895:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x4:pix0 <- $rdx
	movl	%r9d, %ecx
.Ltmp896:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x4:pix2 <- $r15
	callq	x264_pixel_sad_8x4
.Ltmp897:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x4:i_stride <- $ebx
	#DEBUG_VALUE: x264_pixel_sad_x4_8x4:pix3 <- $r14
	#DEBUG_VALUE: x264_pixel_sad_x4_8x4:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_pixel_sad_x4_8x4:fenc <- $r13
	movl	%eax, (%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r12, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_sad_8x4
.Ltmp898:
	movl	%eax, 4(%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r15, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_sad_8x4
.Ltmp899:
	movl	%eax, 8(%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r14, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_sad_8x4
.Ltmp900:
	movl	%eax, 12(%rbp)
	.loc	0 405 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:405:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp901:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x4:i_stride <- [DW_OP_LLVM_entry_value 1] $r9d
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp902:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x4:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp903:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x4:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp904:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x4:pix3 <- [DW_OP_LLVM_entry_value 1] $r8
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp905:
	#DEBUG_VALUE: x264_pixel_sad_x4_8x4:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp906:
.Lfunc_end21:
	.size	x264_pixel_sad_x4_8x4, .Lfunc_end21-x264_pixel_sad_x4_8x4
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_x4_4x8
	.type	x264_pixel_sad_x4_4x8,@function
x264_pixel_sad_x4_4x8:                  # @x264_pixel_sad_x4_4x8
.Lfunc_begin22:
	.loc	0 406 0 is_stmt 1               # x264_src/common/pixel.c:406:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_x4_4x8:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_x4_4x8:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_x4_4x8:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_x4_4x8:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_sad_x4_4x8:pix3 <- $r8
	#DEBUG_VALUE: x264_pixel_sad_x4_4x8:i_stride <- $r9d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp907:
	#DEBUG_VALUE: x264_pixel_sad_x4_4x8:scores <- [DW_OP_plus_uconst 64] [$rsp+0]
	movl	%r9d, %ebx
	movq	%r8, %r14
	movq	%rcx, %r15
	movq	%rdx, %r12
	movq	%rsi, %rdx
.Ltmp908:
	#DEBUG_VALUE: x264_pixel_sad_x4_4x8:pix1 <- $r12
	movq	%rdi, %r13
	movq	64(%rsp), %rbp
.Ltmp909:
	.loc	0 406 1 prologue_end            # x264_src/common/pixel.c:406:1
	movl	$16, %esi
.Ltmp910:
	#DEBUG_VALUE: x264_pixel_sad_x4_4x8:pix0 <- $rdx
	movl	%r9d, %ecx
.Ltmp911:
	#DEBUG_VALUE: x264_pixel_sad_x4_4x8:pix2 <- $r15
	callq	x264_pixel_sad_4x8
.Ltmp912:
	#DEBUG_VALUE: x264_pixel_sad_x4_4x8:i_stride <- $ebx
	#DEBUG_VALUE: x264_pixel_sad_x4_4x8:pix3 <- $r14
	#DEBUG_VALUE: x264_pixel_sad_x4_4x8:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_pixel_sad_x4_4x8:fenc <- $r13
	movl	%eax, (%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r12, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_sad_4x8
.Ltmp913:
	movl	%eax, 4(%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r15, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_sad_4x8
.Ltmp914:
	movl	%eax, 8(%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r14, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_sad_4x8
.Ltmp915:
	movl	%eax, 12(%rbp)
	.loc	0 406 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:406:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp916:
	#DEBUG_VALUE: x264_pixel_sad_x4_4x8:i_stride <- [DW_OP_LLVM_entry_value 1] $r9d
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp917:
	#DEBUG_VALUE: x264_pixel_sad_x4_4x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp918:
	#DEBUG_VALUE: x264_pixel_sad_x4_4x8:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp919:
	#DEBUG_VALUE: x264_pixel_sad_x4_4x8:pix3 <- [DW_OP_LLVM_entry_value 1] $r8
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp920:
	#DEBUG_VALUE: x264_pixel_sad_x4_4x8:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp921:
.Lfunc_end22:
	.size	x264_pixel_sad_x4_4x8, .Lfunc_end22-x264_pixel_sad_x4_4x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sad_x4_4x4
	.type	x264_pixel_sad_x4_4x4,@function
x264_pixel_sad_x4_4x4:                  # @x264_pixel_sad_x4_4x4
.Lfunc_begin23:
	.loc	0 407 0 is_stmt 1               # x264_src/common/pixel.c:407:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sad_x4_4x4:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_x4_4x4:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_x4_4x4:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_x4_4x4:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_sad_x4_4x4:pix3 <- $r8
	#DEBUG_VALUE: x264_pixel_sad_x4_4x4:i_stride <- $r9d
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_stride_pix2 <- $r9d
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_stride_pix1 <- 16
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset %rbx, -24
	.cfi_offset %rbp, -16
.Ltmp922:
	#DEBUG_VALUE: x264_pixel_sad_x4_4x4:scores <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- $rdi
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- $rdi
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- $rdi
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 16, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 16, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 16, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 16, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 32, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 32, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 32, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 32, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 48, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 48, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, 16
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 48, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 48, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, 16
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 48, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 48, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, 16
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_plus_uconst 48, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 48, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, 16
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_stride_pix2 <- $r9d
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_stride_pix2 <- $r9d
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_stride_pix2 <- $r9d
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- 0
	#DEBUG_VALUE: y <- 0
	movslq	%r9d, %rax
.Ltmp923:
	#DEBUG_VALUE: x <- 0
	.loc	0 67 1 prologue_end             # x264_src/common/pixel.c:67:1
	movzbl	(%rdi), %r9d
.Ltmp924:
	#DEBUG_VALUE: x264_pixel_sad_x4_4x4:i_stride <- [DW_OP_LLVM_entry_value 1] $r9d
	movzbl	(%rsi), %r10d
	subl	%r10d, %r9d
	movl	%r9d, %r10d
	negl	%r10d
	cmovsl	%r9d, %r10d
	movzbl	%r10b, %r9d
.Ltmp925:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r9d
	#DEBUG_VALUE: x <- 1
	movzbl	1(%rdi), %r10d
	movzbl	1(%rsi), %r11d
	subl	%r11d, %r10d
	movl	%r10d, %r11d
	negl	%r11d
	cmovsl	%r10d, %r11d
	movzbl	%r11b, %r10d
	addl	%r9d, %r10d
.Ltmp926:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r10d
	#DEBUG_VALUE: x <- 2
	movzbl	2(%rdi), %r9d
	movzbl	2(%rsi), %r11d
	subl	%r11d, %r9d
	movl	%r9d, %r11d
	negl	%r11d
	cmovsl	%r9d, %r11d
	movzbl	%r11b, %r9d
.Ltmp927:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 3
	movzbl	3(%rdi), %r11d
	movzbl	3(%rsi), %ebx
	subl	%ebx, %r11d
	movl	%r11d, %ebx
	negl	%ebx
	cmovsl	%r11d, %ebx
	movzbl	%bl, %r11d
	addl	%r9d, %r11d
	addl	%r10d, %r11d
.Ltmp928:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r11d
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- undef
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 0
	movzbl	16(%rdi), %r9d
	movzbl	(%rsi,%rax), %r10d
	subl	%r10d, %r9d
	movl	%r9d, %r10d
	negl	%r10d
	cmovsl	%r9d, %r10d
	movzbl	%r10b, %r9d
.Ltmp929:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 1
	movzbl	17(%rdi), %r10d
	movzbl	1(%rsi,%rax), %ebx
	subl	%ebx, %r10d
	movl	%r10d, %ebx
	negl	%ebx
	cmovsl	%r10d, %ebx
	movzbl	%bl, %r10d
	addl	%r9d, %r10d
	addl	%r11d, %r10d
.Ltmp930:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r10d
	#DEBUG_VALUE: x <- 2
	movzbl	18(%rdi), %r9d
	movzbl	2(%rsi,%rax), %r11d
	subl	%r11d, %r9d
	movl	%r9d, %r11d
	negl	%r11d
	cmovsl	%r9d, %r11d
.Ltmp931:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 3
	.loc	0 67 1 is_stmt 0                # x264_src/common/pixel.c:67:1
	leaq	(%rsi,%rax), %r9
.Ltmp932:
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $r9
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movzbl	19(%rdi), %ebx
	movzbl	3(%rsi,%rax), %esi
.Ltmp933:
	#DEBUG_VALUE: x264_pixel_sad_x4_4x4:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	subl	%esi, %ebx
	movl	%ebx, %esi
	negl	%esi
	cmovsl	%ebx, %esi
	movzbl	%r11b, %r11d
	movzbl	%sil, %esi
	addl	%r11d, %esi
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp934:
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- undef
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 0
	movzbl	32(%rdi), %r11d
	movzbl	(%rax,%r9), %ebx
	subl	%ebx, %r11d
	movl	%r11d, %ebx
	negl	%ebx
	cmovsl	%r11d, %ebx
	movzbl	%bl, %r11d
	addl	%esi, %r11d
	addl	%r10d, %r11d
.Ltmp935:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r11d
	#DEBUG_VALUE: x <- 1
	movzbl	33(%rdi), %esi
	movzbl	1(%rax,%r9), %r10d
	subl	%r10d, %esi
	movl	%esi, %r10d
	negl	%r10d
	cmovsl	%esi, %r10d
.Ltmp936:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 2
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	leaq	(%r9,%rax), %rsi
.Ltmp937:
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $rsi
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rsi, $rax, $rax
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movzbl	34(%rdi), %ebx
	movzbl	2(%rax,%r9), %ebp
	subl	%ebp, %ebx
	movl	%ebx, %ebp
	negl	%ebp
	cmovsl	%ebx, %ebp
	movzbl	%r10b, %r10d
	movzbl	%bpl, %ebx
	addl	%r10d, %ebx
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp938:
	#DEBUG_VALUE: x <- 3
	movzbl	35(%rdi), %r10d
	movzbl	3(%rax,%r9), %r9d
	subl	%r9d, %r10d
	movl	%r10d, %r9d
	negl	%r9d
	cmovsl	%r10d, %r9d
	movzbl	%r9b, %r9d
	addl	%ebx, %r9d
	addl	%r11d, %r9d
.Ltmp939:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r9d
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 0
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rsi, $rax
	movzbl	48(%rdi), %r10d
	movzbl	(%rax,%rsi), %r11d
	subl	%r11d, %r10d
	movl	%r10d, %r11d
	negl	%r11d
	cmovsl	%r10d, %r11d
.Ltmp940:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 1
	movzbl	49(%rdi), %r10d
	movzbl	1(%rax,%rsi), %ebx
	subl	%ebx, %r10d
	movl	%r10d, %ebx
	negl	%ebx
	cmovsl	%r10d, %ebx
	movzbl	%r11b, %r10d
	movzbl	%bl, %r11d
	addl	%r10d, %r11d
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp941:
	#DEBUG_VALUE: x <- 2
	movzbl	50(%rdi), %r10d
	movzbl	2(%rax,%rsi), %ebx
	subl	%ebx, %r10d
	movl	%r10d, %ebx
	negl	%ebx
	cmovsl	%r10d, %ebx
	movzbl	%bl, %r10d
	addl	%r11d, %r10d
	addl	%r9d, %r10d
.Ltmp942:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r10d
	#DEBUG_VALUE: x <- 3
	movzbl	51(%rdi), %r9d
	movzbl	3(%rax,%rsi), %esi
.Ltmp943:
	subl	%esi, %r9d
	movl	%r9d, %r11d
	negl	%r11d
	cmovsl	%r9d, %r11d
	movq	24(%rsp), %rsi
.Ltmp944:
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: y <- 4
	movzbl	%r11b, %r9d
	addl	%r10d, %r9d
.Ltmp945:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r9d
	.loc	0 407 1 is_stmt 1               # x264_src/common/pixel.c:407:1
	movl	%r9d, (%rsi)
.Ltmp946:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_stride_pix1 <- 16
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $rdx
	#DEBUG_VALUE: x <- 0
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- 0
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movzbl	(%rdi), %r9d
.Ltmp947:
	movzbl	(%rdx), %r10d
	subl	%r10d, %r9d
	movl	%r9d, %r10d
	negl	%r10d
	cmovsl	%r9d, %r10d
	movzbl	%r10b, %r9d
.Ltmp948:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r9d
	#DEBUG_VALUE: x <- 1
	movzbl	1(%rdi), %r10d
	movzbl	1(%rdx), %r11d
	subl	%r11d, %r10d
	movl	%r10d, %r11d
	negl	%r11d
	cmovsl	%r10d, %r11d
	movzbl	%r11b, %r10d
	addl	%r9d, %r10d
.Ltmp949:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r10d
	#DEBUG_VALUE: x <- 2
	movzbl	2(%rdi), %r9d
	movzbl	2(%rdx), %r11d
	subl	%r11d, %r9d
	movl	%r9d, %r11d
	negl	%r11d
	cmovsl	%r9d, %r11d
	movzbl	%r11b, %r9d
.Ltmp950:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 3
	movzbl	3(%rdi), %r11d
	movzbl	3(%rdx), %ebx
	subl	%ebx, %r11d
	movl	%r11d, %ebx
	negl	%ebx
	cmovsl	%r11d, %ebx
	movzbl	%bl, %r11d
	addl	%r9d, %r11d
	addl	%r10d, %r11d
.Ltmp951:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r11d
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- undef
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 0
	movzbl	16(%rdi), %r9d
	movzbl	(%rdx,%rax), %r10d
	subl	%r10d, %r9d
	movl	%r9d, %r10d
	negl	%r10d
	cmovsl	%r9d, %r10d
	movzbl	%r10b, %r9d
.Ltmp952:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 1
	movzbl	17(%rdi), %r10d
	movzbl	1(%rdx,%rax), %ebx
	subl	%ebx, %r10d
	movl	%r10d, %ebx
	negl	%ebx
	cmovsl	%r10d, %ebx
	movzbl	%bl, %r10d
	addl	%r9d, %r10d
	addl	%r11d, %r10d
.Ltmp953:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r10d
	#DEBUG_VALUE: x <- 2
	movzbl	18(%rdi), %r9d
	movzbl	2(%rdx,%rax), %r11d
	subl	%r11d, %r9d
	movl	%r9d, %r11d
	negl	%r11d
	cmovsl	%r9d, %r11d
.Ltmp954:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 3
	.loc	0 67 1 is_stmt 0                # x264_src/common/pixel.c:67:1
	leaq	(%rdx,%rax), %r9
.Ltmp955:
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $r9
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movzbl	19(%rdi), %ebx
	movzbl	3(%rdx,%rax), %edx
.Ltmp956:
	#DEBUG_VALUE: x264_pixel_sad_x4_4x4:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	subl	%edx, %ebx
	movl	%ebx, %edx
	negl	%edx
	cmovsl	%ebx, %edx
	movzbl	%r11b, %r11d
	movzbl	%dl, %edx
	addl	%r11d, %edx
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp957:
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- undef
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 0
	movzbl	32(%rdi), %r11d
	movzbl	(%rax,%r9), %ebx
	subl	%ebx, %r11d
	movl	%r11d, %ebx
	negl	%ebx
	cmovsl	%r11d, %ebx
	movzbl	%bl, %r11d
	addl	%edx, %r11d
	addl	%r10d, %r11d
.Ltmp958:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r11d
	#DEBUG_VALUE: x <- 1
	movzbl	33(%rdi), %edx
	movzbl	1(%rax,%r9), %r10d
	subl	%r10d, %edx
	movl	%edx, %r10d
	negl	%r10d
	cmovsl	%edx, %r10d
.Ltmp959:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 2
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	leaq	(%r9,%rax), %rdx
.Ltmp960:
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdx, $rax, $rax
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movzbl	34(%rdi), %ebx
	movzbl	2(%rax,%r9), %ebp
	subl	%ebp, %ebx
	movl	%ebx, %ebp
	negl	%ebp
	cmovsl	%ebx, %ebp
	movzbl	%r10b, %r10d
	movzbl	%bpl, %ebx
	addl	%r10d, %ebx
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp961:
	#DEBUG_VALUE: x <- 3
	movzbl	35(%rdi), %r10d
	movzbl	3(%rax,%r9), %r9d
	subl	%r9d, %r10d
	movl	%r10d, %r9d
	negl	%r9d
	cmovsl	%r10d, %r9d
	movzbl	%r9b, %r9d
	addl	%ebx, %r9d
	addl	%r11d, %r9d
.Ltmp962:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r9d
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 0
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdx, $rax
	movzbl	48(%rdi), %r10d
	movzbl	(%rax,%rdx), %r11d
	subl	%r11d, %r10d
	movl	%r10d, %r11d
	negl	%r11d
	cmovsl	%r10d, %r11d
.Ltmp963:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 1
	movzbl	49(%rdi), %r10d
	movzbl	1(%rax,%rdx), %ebx
	subl	%ebx, %r10d
	movl	%r10d, %ebx
	negl	%ebx
	cmovsl	%r10d, %ebx
	movzbl	%r11b, %r10d
	movzbl	%bl, %r11d
	addl	%r10d, %r11d
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp964:
	#DEBUG_VALUE: x <- 2
	movzbl	50(%rdi), %r10d
	movzbl	2(%rax,%rdx), %ebx
	subl	%ebx, %r10d
	movl	%r10d, %ebx
	negl	%ebx
	cmovsl	%r10d, %ebx
	movzbl	%bl, %r10d
	addl	%r11d, %r10d
	addl	%r9d, %r10d
.Ltmp965:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r10d
	#DEBUG_VALUE: x <- 3
	movzbl	51(%rdi), %r9d
	movzbl	3(%rax,%rdx), %edx
.Ltmp966:
	subl	%edx, %r9d
	movl	%r9d, %edx
	negl	%edx
	cmovsl	%r9d, %edx
	movzbl	%dl, %edx
	addl	%r10d, %edx
.Ltmp967:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $edx
	.loc	0 407 1 is_stmt 1               # x264_src/common/pixel.c:407:1
	movl	%edx, 4(%rsi)
.Ltmp968:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_stride_pix1 <- 16
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $rcx
	#DEBUG_VALUE: x <- 0
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- 0
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movzbl	(%rdi), %edx
.Ltmp969:
	movzbl	(%rcx), %r9d
	subl	%r9d, %edx
	movl	%edx, %r9d
	negl	%r9d
	cmovsl	%edx, %r9d
	movzbl	%r9b, %edx
.Ltmp970:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $edx
	#DEBUG_VALUE: x <- 1
	movzbl	1(%rdi), %r9d
	movzbl	1(%rcx), %r10d
	subl	%r10d, %r9d
	movl	%r9d, %r10d
	negl	%r10d
	cmovsl	%r9d, %r10d
	movzbl	%r10b, %r9d
	addl	%edx, %r9d
.Ltmp971:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r9d
	#DEBUG_VALUE: x <- 2
	movzbl	2(%rdi), %edx
	movzbl	2(%rcx), %r10d
	subl	%r10d, %edx
	movl	%edx, %r10d
	negl	%r10d
	cmovsl	%edx, %r10d
	movzbl	%r10b, %edx
.Ltmp972:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 3
	movzbl	3(%rdi), %r10d
	movzbl	3(%rcx), %r11d
	subl	%r11d, %r10d
	movl	%r10d, %r11d
	negl	%r11d
	cmovsl	%r10d, %r11d
	movzbl	%r11b, %r10d
	addl	%edx, %r10d
	addl	%r9d, %r10d
.Ltmp973:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r10d
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- undef
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 0
	movzbl	16(%rdi), %edx
	movzbl	(%rcx,%rax), %r9d
	subl	%r9d, %edx
	movl	%edx, %r9d
	negl	%r9d
	cmovsl	%edx, %r9d
	movzbl	%r9b, %edx
.Ltmp974:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 1
	movzbl	17(%rdi), %r9d
	movzbl	1(%rcx,%rax), %r11d
	subl	%r11d, %r9d
	movl	%r9d, %r11d
	negl	%r11d
	cmovsl	%r9d, %r11d
	movzbl	%r11b, %r9d
	addl	%edx, %r9d
	addl	%r10d, %r9d
.Ltmp975:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r9d
	#DEBUG_VALUE: x <- 2
	movzbl	18(%rdi), %edx
	movzbl	2(%rcx,%rax), %r10d
	subl	%r10d, %edx
	movl	%edx, %r10d
	negl	%r10d
	cmovsl	%edx, %r10d
.Ltmp976:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 3
	.loc	0 67 1 is_stmt 0                # x264_src/common/pixel.c:67:1
	leaq	(%rcx,%rax), %rdx
.Ltmp977:
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $rdx
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movzbl	19(%rdi), %r11d
	movzbl	3(%rcx,%rax), %ecx
.Ltmp978:
	#DEBUG_VALUE: x264_pixel_sad_x4_4x4:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	subl	%ecx, %r11d
	movl	%r11d, %ecx
	negl	%ecx
	cmovsl	%r11d, %ecx
	movzbl	%r10b, %r10d
	movzbl	%cl, %ecx
	addl	%r10d, %ecx
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp979:
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- undef
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 0
	movzbl	32(%rdi), %r10d
	movzbl	(%rax,%rdx), %r11d
	subl	%r11d, %r10d
	movl	%r10d, %r11d
	negl	%r11d
	cmovsl	%r10d, %r11d
	movzbl	%r11b, %r10d
	addl	%ecx, %r10d
	addl	%r9d, %r10d
.Ltmp980:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r10d
	#DEBUG_VALUE: x <- 1
	movzbl	33(%rdi), %ecx
	movzbl	1(%rax,%rdx), %r9d
	subl	%r9d, %ecx
	movl	%ecx, %r9d
	negl	%r9d
	cmovsl	%ecx, %r9d
.Ltmp981:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 2
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	leaq	(%rdx,%rax), %rcx
.Ltmp982:
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rcx, $rax, $rax
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movzbl	34(%rdi), %r11d
	movzbl	2(%rax,%rdx), %ebx
	subl	%ebx, %r11d
	movl	%r11d, %ebx
	negl	%ebx
	cmovsl	%r11d, %ebx
	movzbl	%r9b, %r9d
	movzbl	%bl, %r11d
	addl	%r9d, %r11d
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp983:
	#DEBUG_VALUE: x <- 3
	movzbl	35(%rdi), %r9d
	movzbl	3(%rax,%rdx), %edx
	subl	%edx, %r9d
	movl	%r9d, %edx
	negl	%edx
	cmovsl	%r9d, %edx
	movzbl	%dl, %edx
	addl	%r11d, %edx
	addl	%r10d, %edx
.Ltmp984:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $edx
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 0
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rcx, $rax
	movzbl	48(%rdi), %r9d
	movzbl	(%rax,%rcx), %r10d
	subl	%r10d, %r9d
	movl	%r9d, %r10d
	negl	%r10d
	cmovsl	%r9d, %r10d
.Ltmp985:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 1
	movzbl	49(%rdi), %r9d
	movzbl	1(%rax,%rcx), %r11d
	subl	%r11d, %r9d
	movl	%r9d, %r11d
	negl	%r11d
	cmovsl	%r9d, %r11d
	movzbl	%r10b, %r9d
	movzbl	%r11b, %r10d
	addl	%r9d, %r10d
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp986:
	#DEBUG_VALUE: x <- 2
	movzbl	50(%rdi), %r9d
	movzbl	2(%rax,%rcx), %r11d
	subl	%r11d, %r9d
	movl	%r9d, %r11d
	negl	%r11d
	cmovsl	%r9d, %r11d
	movzbl	%r11b, %r9d
	addl	%r10d, %r9d
	addl	%edx, %r9d
.Ltmp987:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r9d
	#DEBUG_VALUE: x <- 3
	movzbl	51(%rdi), %edx
	movzbl	3(%rax,%rcx), %ecx
.Ltmp988:
	subl	%ecx, %edx
	movl	%edx, %ecx
	negl	%ecx
	cmovsl	%edx, %ecx
	movzbl	%cl, %ecx
	addl	%r9d, %ecx
.Ltmp989:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $ecx
	.loc	0 407 1 is_stmt 1               # x264_src/common/pixel.c:407:1
	movl	%ecx, 8(%rsi)
.Ltmp990:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_stride_pix1 <- 16
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $r8
	#DEBUG_VALUE: x <- 0
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- 0
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movzbl	(%rdi), %ecx
.Ltmp991:
	movzbl	(%r8), %edx
	subl	%edx, %ecx
	movl	%ecx, %edx
	negl	%edx
	cmovsl	%ecx, %edx
	movzbl	%dl, %ecx
.Ltmp992:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $ecx
	#DEBUG_VALUE: x <- 1
	movzbl	1(%rdi), %edx
	movzbl	1(%r8), %r9d
	subl	%r9d, %edx
	movl	%edx, %r9d
	negl	%r9d
	cmovsl	%edx, %r9d
	movzbl	%r9b, %edx
	addl	%ecx, %edx
.Ltmp993:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $edx
	#DEBUG_VALUE: x <- 2
	movzbl	2(%rdi), %ecx
	movzbl	2(%r8), %r9d
	subl	%r9d, %ecx
	movl	%ecx, %r9d
	negl	%r9d
	cmovsl	%ecx, %r9d
	movzbl	%r9b, %ecx
.Ltmp994:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 3
	movzbl	3(%rdi), %r9d
	movzbl	3(%r8), %r10d
	subl	%r10d, %r9d
	movl	%r9d, %r10d
	negl	%r10d
	cmovsl	%r9d, %r10d
	movzbl	%r10b, %r9d
	addl	%ecx, %r9d
	addl	%edx, %r9d
.Ltmp995:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r9d
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- undef
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 0
	movzbl	16(%rdi), %ecx
	movzbl	(%r8,%rax), %edx
	subl	%edx, %ecx
	movl	%ecx, %edx
	negl	%edx
	cmovsl	%ecx, %edx
	movzbl	%dl, %edx
.Ltmp996:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 1
	movzbl	17(%rdi), %ecx
	movzbl	1(%r8,%rax), %r10d
	subl	%r10d, %ecx
	movl	%ecx, %r10d
	negl	%r10d
	cmovsl	%ecx, %r10d
	movzbl	%r10b, %ecx
	addl	%edx, %ecx
	addl	%r9d, %ecx
.Ltmp997:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $ecx
	#DEBUG_VALUE: x <- 2
	movzbl	18(%rdi), %edx
	movzbl	2(%r8,%rax), %r9d
	subl	%r9d, %edx
	movl	%edx, %r9d
	negl	%r9d
	cmovsl	%edx, %r9d
.Ltmp998:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 3
	.loc	0 67 1 is_stmt 0                # x264_src/common/pixel.c:67:1
	leaq	(%r8,%rax), %rdx
.Ltmp999:
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $rdx
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movzbl	19(%rdi), %r10d
	movzbl	3(%r8,%rax), %r8d
.Ltmp1000:
	#DEBUG_VALUE: x264_pixel_sad_x4_4x4:pix3 <- [DW_OP_LLVM_entry_value 1] $r8
	subl	%r8d, %r10d
	movl	%r10d, %r8d
	negl	%r8d
	cmovsl	%r10d, %r8d
	movzbl	%r9b, %r9d
	movzbl	%r8b, %r10d
	addl	%r9d, %r10d
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp1001:
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- undef
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 0
	movzbl	32(%rdi), %r8d
	movzbl	(%rax,%rdx), %r9d
	subl	%r9d, %r8d
	movl	%r8d, %r9d
	negl	%r9d
	cmovsl	%r8d, %r9d
	movzbl	%r9b, %r8d
	addl	%r10d, %r8d
	addl	%ecx, %r8d
.Ltmp1002:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r8d
	#DEBUG_VALUE: x <- 1
	movzbl	33(%rdi), %ecx
	movzbl	1(%rax,%rdx), %r9d
	subl	%r9d, %ecx
	movl	%ecx, %r9d
	negl	%r9d
	cmovsl	%ecx, %r9d
.Ltmp1003:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 2
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	leaq	(%rdx,%rax), %rcx
.Ltmp1004:
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- $rcx
	.loc	0 67 1                          # x264_src/common/pixel.c:67:1
	movzbl	34(%rdi), %r10d
	movzbl	2(%rax,%rdx), %r11d
	subl	%r11d, %r10d
	movl	%r10d, %r11d
	negl	%r11d
	cmovsl	%r10d, %r11d
	movzbl	%r9b, %r9d
	movzbl	%r11b, %r10d
	addl	%r9d, %r10d
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp1005:
	#DEBUG_VALUE: x <- 3
	movzbl	35(%rdi), %r9d
	movzbl	3(%rax,%rdx), %edx
	subl	%edx, %r9d
	movl	%r9d, %edx
	negl	%edx
	cmovsl	%r9d, %edx
	movzbl	%dl, %edx
	addl	%r10d, %edx
	addl	%r8d, %edx
.Ltmp1006:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $edx
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 0
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rcx, $rax
	movzbl	48(%rdi), %r8d
	movzbl	(%rax,%rcx), %r9d
	subl	%r9d, %r8d
	movl	%r8d, %r9d
	negl	%r9d
	cmovsl	%r8d, %r9d
.Ltmp1007:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 1
	movzbl	49(%rdi), %r8d
	movzbl	1(%rax,%rcx), %r10d
	subl	%r10d, %r8d
	movl	%r8d, %r10d
	negl	%r10d
	cmovsl	%r8d, %r10d
	movzbl	%r9b, %r8d
	movzbl	%r10b, %r9d
	addl	%r8d, %r9d
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- undef
.Ltmp1008:
	#DEBUG_VALUE: x <- 2
	movzbl	50(%rdi), %r8d
	movzbl	2(%rax,%rcx), %r10d
	subl	%r10d, %r8d
	movl	%r8d, %r10d
	negl	%r10d
	cmovsl	%r8d, %r10d
	movzbl	%r10b, %r8d
	addl	%r9d, %r8d
	addl	%edx, %r8d
.Ltmp1009:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $r8d
	#DEBUG_VALUE: x <- 3
	movzbl	51(%rdi), %edx
	movzbl	3(%rax,%rcx), %eax
.Ltmp1010:
	subl	%eax, %edx
	movl	%edx, %eax
	negl	%eax
	cmovsl	%edx, %eax
	movzbl	%al, %eax
	addl	%r8d, %eax
.Ltmp1011:
	#DEBUG_VALUE: x264_pixel_sad_4x4:i_sum <- $eax
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x264_pixel_sad_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	.loc	0 407 1 is_stmt 1               # x264_src/common/pixel.c:407:1
	movl	%eax, 12(%rsi)
	.loc	0 407 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:407:1
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1012:
.Lfunc_end23:
	.size	x264_pixel_sad_x4_4x4, .Lfunc_end23-x264_pixel_sad_x4_4x4
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_ssd_16x16
	.type	x264_pixel_ssd_16x16,@function
x264_pixel_ssd_16x16:                   # @x264_pixel_ssd_16x16
.Lfunc_begin24:
	.loc	0 91 0 is_stmt 1                # x264_src/common/pixel.c:91:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_ssd_16x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_ssd_16x16:i_stride_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_ssd_16x16:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_ssd_16x16:i_stride_pix2 <- $ecx
	#DEBUG_VALUE: x264_pixel_ssd_16x16:i_sum <- 0
	#DEBUG_VALUE: y <- 0
	movslq	%esi, %rsi
.Ltmp1013:
	#DEBUG_VALUE: x264_pixel_ssd_16x16:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	movslq	%ecx, %rcx
.Ltmp1014:
	#DEBUG_VALUE: x264_pixel_ssd_16x16:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	xorl	%eax, %eax
	movl	$16, %r8d
	pxor	%xmm0, %xmm0
.Ltmp1015:
	.p2align	4, 0x90
.LBB24_1:                               # %for.cond1.preheader
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_pixel_ssd_16x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_ssd_16x16:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: x264_pixel_ssd_16x16:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_ssd_16x16:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_pixel_ssd_16x16:pix1 <- $rdi
	#DEBUG_VALUE: y <- [DW_OP_consts 16, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_pixel_ssd_16x16:pix2 <- $rdx
	#DEBUG_VALUE: d <- undef
	#DEBUG_VALUE: x264_pixel_ssd_16x16:i_sum <- undef
	#DEBUG_VALUE: x <- 15
	.loc	0 91 1 prologue_end             # x264_src/common/pixel.c:91:1
	movdqu	(%rdi), %xmm2
	movdqa	%xmm2, %xmm4
	punpckhbw	%xmm0, %xmm4            # xmm4 = xmm4[8],xmm0[8],xmm4[9],xmm0[9],xmm4[10],xmm0[10],xmm4[11],xmm0[11],xmm4[12],xmm0[12],xmm4[13],xmm0[13],xmm4[14],xmm0[14],xmm4[15],xmm0[15]
	movdqa	%xmm4, %xmm1
	punpcklwd	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1],xmm1[2],xmm0[2],xmm1[3],xmm0[3]
	punpckhwd	%xmm0, %xmm4            # xmm4 = xmm4[4],xmm0[4],xmm4[5],xmm0[5],xmm4[6],xmm0[6],xmm4[7],xmm0[7]
	punpcklbw	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1],xmm2[2],xmm0[2],xmm2[3],xmm0[3],xmm2[4],xmm0[4],xmm2[5],xmm0[5],xmm2[6],xmm0[6],xmm2[7],xmm0[7]
	movdqa	%xmm2, %xmm3
	punpcklwd	%xmm0, %xmm3            # xmm3 = xmm3[0],xmm0[0],xmm3[1],xmm0[1],xmm3[2],xmm0[2],xmm3[3],xmm0[3]
	punpckhwd	%xmm0, %xmm2            # xmm2 = xmm2[4],xmm0[4],xmm2[5],xmm0[5],xmm2[6],xmm0[6],xmm2[7],xmm0[7]
	movdqu	(%rdx), %xmm5
	movdqa	%xmm5, %xmm6
	punpckhbw	%xmm0, %xmm6            # xmm6 = xmm6[8],xmm0[8],xmm6[9],xmm0[9],xmm6[10],xmm0[10],xmm6[11],xmm0[11],xmm6[12],xmm0[12],xmm6[13],xmm0[13],xmm6[14],xmm0[14],xmm6[15],xmm0[15]
	movdqa	%xmm6, %xmm7
	punpcklwd	%xmm0, %xmm7            # xmm7 = xmm7[0],xmm0[0],xmm7[1],xmm0[1],xmm7[2],xmm0[2],xmm7[3],xmm0[3]
	psubd	%xmm7, %xmm1
	punpckhwd	%xmm0, %xmm6            # xmm6 = xmm6[4],xmm0[4],xmm6[5],xmm0[5],xmm6[6],xmm0[6],xmm6[7],xmm0[7]
	psubd	%xmm6, %xmm4
	packssdw	%xmm4, %xmm1
	punpcklbw	%xmm0, %xmm5            # xmm5 = xmm5[0],xmm0[0],xmm5[1],xmm0[1],xmm5[2],xmm0[2],xmm5[3],xmm0[3],xmm5[4],xmm0[4],xmm5[5],xmm0[5],xmm5[6],xmm0[6],xmm5[7],xmm0[7]
	movdqa	%xmm5, %xmm4
	punpcklwd	%xmm0, %xmm4            # xmm4 = xmm4[0],xmm0[0],xmm4[1],xmm0[1],xmm4[2],xmm0[2],xmm4[3],xmm0[3]
	psubd	%xmm4, %xmm3
	punpckhwd	%xmm0, %xmm5            # xmm5 = xmm5[4],xmm0[4],xmm5[5],xmm0[5],xmm5[6],xmm0[6],xmm5[7],xmm0[7]
	psubd	%xmm5, %xmm2
	packssdw	%xmm2, %xmm3
	pmaddwd	%xmm1, %xmm1
	pmaddwd	%xmm3, %xmm3
	paddd	%xmm1, %xmm3
	pshufd	$238, %xmm3, %xmm1              # xmm1 = xmm3[2,3,2,3]
	paddd	%xmm3, %xmm1
	pshufd	$85, %xmm1, %xmm2               # xmm2 = xmm1[1,1,1,1]
	paddd	%xmm1, %xmm2
	movd	%xmm2, %r9d
	addl	%r9d, %eax
.Ltmp1016:
	#DEBUG_VALUE: x264_pixel_ssd_16x16:i_sum <- $eax
	#DEBUG_VALUE: x <- 16
	.loc	0 91 1 is_stmt 0                # x264_src/common/pixel.c:91:1
	addq	%rsi, %rdi
.Ltmp1017:
	#DEBUG_VALUE: x264_pixel_ssd_16x16:pix1 <- $rdi
	addq	%rcx, %rdx
.Ltmp1018:
	#DEBUG_VALUE: x264_pixel_ssd_16x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- [DW_OP_consts 16, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $r8d
	.loc	0 91 1                          # x264_src/common/pixel.c:91:1
	decl	%r8d
.Ltmp1019:
	.loc	0 91 1                          # x264_src/common/pixel.c:91:1
	jne	.LBB24_1
.Ltmp1020:
# %bb.2:                                # %for.cond.cleanup
	#DEBUG_VALUE: x264_pixel_ssd_16x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_ssd_16x16:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: x264_pixel_ssd_16x16:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_ssd_16x16:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_pixel_ssd_16x16:i_sum <- $eax
	.loc	0 91 1                          # x264_src/common/pixel.c:91:1
	retq
.Ltmp1021:
.Lfunc_end24:
	.size	x264_pixel_ssd_16x16, .Lfunc_end24-x264_pixel_ssd_16x16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_ssd_16x8
	.type	x264_pixel_ssd_16x8,@function
x264_pixel_ssd_16x8:                    # @x264_pixel_ssd_16x8
.Lfunc_begin25:
	.loc	0 92 0 is_stmt 1                # x264_src/common/pixel.c:92:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_ssd_16x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_ssd_16x8:i_stride_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_ssd_16x8:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_ssd_16x8:i_stride_pix2 <- $ecx
	#DEBUG_VALUE: x264_pixel_ssd_16x8:i_sum <- 0
	#DEBUG_VALUE: y <- 0
	movslq	%esi, %rsi
.Ltmp1022:
	#DEBUG_VALUE: x264_pixel_ssd_16x8:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	movslq	%ecx, %rcx
.Ltmp1023:
	#DEBUG_VALUE: x264_pixel_ssd_16x8:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	xorl	%eax, %eax
	movl	$8, %r8d
	pxor	%xmm0, %xmm0
.Ltmp1024:
	.p2align	4, 0x90
.LBB25_1:                               # %for.cond1.preheader
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_pixel_ssd_16x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_ssd_16x8:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: x264_pixel_ssd_16x8:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_ssd_16x8:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_pixel_ssd_16x8:pix1 <- $rdi
	#DEBUG_VALUE: y <- [DW_OP_consts 8, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_pixel_ssd_16x8:pix2 <- $rdx
	#DEBUG_VALUE: d <- undef
	#DEBUG_VALUE: x264_pixel_ssd_16x8:i_sum <- undef
	#DEBUG_VALUE: x <- 15
	.loc	0 92 1 prologue_end             # x264_src/common/pixel.c:92:1
	movdqu	(%rdi), %xmm2
	movdqa	%xmm2, %xmm4
	punpckhbw	%xmm0, %xmm4            # xmm4 = xmm4[8],xmm0[8],xmm4[9],xmm0[9],xmm4[10],xmm0[10],xmm4[11],xmm0[11],xmm4[12],xmm0[12],xmm4[13],xmm0[13],xmm4[14],xmm0[14],xmm4[15],xmm0[15]
	movdqa	%xmm4, %xmm1
	punpcklwd	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1],xmm1[2],xmm0[2],xmm1[3],xmm0[3]
	punpckhwd	%xmm0, %xmm4            # xmm4 = xmm4[4],xmm0[4],xmm4[5],xmm0[5],xmm4[6],xmm0[6],xmm4[7],xmm0[7]
	punpcklbw	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1],xmm2[2],xmm0[2],xmm2[3],xmm0[3],xmm2[4],xmm0[4],xmm2[5],xmm0[5],xmm2[6],xmm0[6],xmm2[7],xmm0[7]
	movdqa	%xmm2, %xmm3
	punpcklwd	%xmm0, %xmm3            # xmm3 = xmm3[0],xmm0[0],xmm3[1],xmm0[1],xmm3[2],xmm0[2],xmm3[3],xmm0[3]
	punpckhwd	%xmm0, %xmm2            # xmm2 = xmm2[4],xmm0[4],xmm2[5],xmm0[5],xmm2[6],xmm0[6],xmm2[7],xmm0[7]
	movdqu	(%rdx), %xmm5
	movdqa	%xmm5, %xmm6
	punpckhbw	%xmm0, %xmm6            # xmm6 = xmm6[8],xmm0[8],xmm6[9],xmm0[9],xmm6[10],xmm0[10],xmm6[11],xmm0[11],xmm6[12],xmm0[12],xmm6[13],xmm0[13],xmm6[14],xmm0[14],xmm6[15],xmm0[15]
	movdqa	%xmm6, %xmm7
	punpcklwd	%xmm0, %xmm7            # xmm7 = xmm7[0],xmm0[0],xmm7[1],xmm0[1],xmm7[2],xmm0[2],xmm7[3],xmm0[3]
	psubd	%xmm7, %xmm1
	punpckhwd	%xmm0, %xmm6            # xmm6 = xmm6[4],xmm0[4],xmm6[5],xmm0[5],xmm6[6],xmm0[6],xmm6[7],xmm0[7]
	psubd	%xmm6, %xmm4
	packssdw	%xmm4, %xmm1
	punpcklbw	%xmm0, %xmm5            # xmm5 = xmm5[0],xmm0[0],xmm5[1],xmm0[1],xmm5[2],xmm0[2],xmm5[3],xmm0[3],xmm5[4],xmm0[4],xmm5[5],xmm0[5],xmm5[6],xmm0[6],xmm5[7],xmm0[7]
	movdqa	%xmm5, %xmm4
	punpcklwd	%xmm0, %xmm4            # xmm4 = xmm4[0],xmm0[0],xmm4[1],xmm0[1],xmm4[2],xmm0[2],xmm4[3],xmm0[3]
	psubd	%xmm4, %xmm3
	punpckhwd	%xmm0, %xmm5            # xmm5 = xmm5[4],xmm0[4],xmm5[5],xmm0[5],xmm5[6],xmm0[6],xmm5[7],xmm0[7]
	psubd	%xmm5, %xmm2
	packssdw	%xmm2, %xmm3
	pmaddwd	%xmm1, %xmm1
	pmaddwd	%xmm3, %xmm3
	paddd	%xmm1, %xmm3
	pshufd	$238, %xmm3, %xmm1              # xmm1 = xmm3[2,3,2,3]
	paddd	%xmm3, %xmm1
	pshufd	$85, %xmm1, %xmm2               # xmm2 = xmm1[1,1,1,1]
	paddd	%xmm1, %xmm2
	movd	%xmm2, %r9d
	addl	%r9d, %eax
.Ltmp1025:
	#DEBUG_VALUE: x264_pixel_ssd_16x8:i_sum <- $eax
	#DEBUG_VALUE: x <- 16
	.loc	0 92 1 is_stmt 0                # x264_src/common/pixel.c:92:1
	addq	%rsi, %rdi
.Ltmp1026:
	#DEBUG_VALUE: x264_pixel_ssd_16x8:pix1 <- $rdi
	addq	%rcx, %rdx
.Ltmp1027:
	#DEBUG_VALUE: x264_pixel_ssd_16x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- [DW_OP_consts 8, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $r8d
	.loc	0 92 1                          # x264_src/common/pixel.c:92:1
	decl	%r8d
.Ltmp1028:
	.loc	0 92 1                          # x264_src/common/pixel.c:92:1
	jne	.LBB25_1
.Ltmp1029:
# %bb.2:                                # %for.cond.cleanup
	#DEBUG_VALUE: x264_pixel_ssd_16x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_ssd_16x8:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: x264_pixel_ssd_16x8:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_ssd_16x8:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_pixel_ssd_16x8:i_sum <- $eax
	.loc	0 92 1                          # x264_src/common/pixel.c:92:1
	retq
.Ltmp1030:
.Lfunc_end25:
	.size	x264_pixel_ssd_16x8, .Lfunc_end25-x264_pixel_ssd_16x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_ssd_8x16
	.type	x264_pixel_ssd_8x16,@function
x264_pixel_ssd_8x16:                    # @x264_pixel_ssd_8x16
.Lfunc_begin26:
	.loc	0 93 0 is_stmt 1                # x264_src/common/pixel.c:93:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_ssd_8x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_ssd_8x16:i_stride_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_ssd_8x16:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_ssd_8x16:i_stride_pix2 <- $ecx
	#DEBUG_VALUE: x264_pixel_ssd_8x16:i_sum <- 0
	#DEBUG_VALUE: y <- 0
	movslq	%esi, %rsi
.Ltmp1031:
	#DEBUG_VALUE: x264_pixel_ssd_8x16:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	movslq	%ecx, %rcx
.Ltmp1032:
	#DEBUG_VALUE: x264_pixel_ssd_8x16:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	xorl	%eax, %eax
	movl	$16, %r8d
	pxor	%xmm0, %xmm0
.Ltmp1033:
	.p2align	4, 0x90
.LBB26_1:                               # %for.cond1.preheader
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_pixel_ssd_8x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_ssd_8x16:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: x264_pixel_ssd_8x16:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_ssd_8x16:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_pixel_ssd_8x16:pix1 <- $rdi
	#DEBUG_VALUE: y <- [DW_OP_consts 16, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: x264_pixel_ssd_8x16:pix2 <- $rdx
	#DEBUG_VALUE: d <- undef
	#DEBUG_VALUE: x264_pixel_ssd_8x16:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 93 1 prologue_end             # x264_src/common/pixel.c:93:1
	movq	(%rdi), %xmm1                   # xmm1 = mem[0],zero
	movq	(%rdx), %xmm2                   # xmm2 = mem[0],zero
	punpcklbw	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1],xmm2[2],xmm0[2],xmm2[3],xmm0[3],xmm2[4],xmm0[4],xmm2[5],xmm0[5],xmm2[6],xmm0[6],xmm2[7],xmm0[7]
	punpcklbw	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1],xmm1[2],xmm0[2],xmm1[3],xmm0[3],xmm1[4],xmm0[4],xmm1[5],xmm0[5],xmm1[6],xmm0[6],xmm1[7],xmm0[7]
	psubw	%xmm2, %xmm1
	pmaddwd	%xmm1, %xmm1
	pshufd	$238, %xmm1, %xmm2              # xmm2 = xmm1[2,3,2,3]
	paddd	%xmm1, %xmm2
	pshufd	$85, %xmm2, %xmm1               # xmm1 = xmm2[1,1,1,1]
	paddd	%xmm2, %xmm1
	movd	%xmm1, %r9d
	addl	%r9d, %eax
.Ltmp1034:
	#DEBUG_VALUE: x264_pixel_ssd_8x16:i_sum <- $eax
	#DEBUG_VALUE: x <- 8
	.loc	0 93 1 is_stmt 0                # x264_src/common/pixel.c:93:1
	addq	%rsi, %rdi
.Ltmp1035:
	#DEBUG_VALUE: x264_pixel_ssd_8x16:pix1 <- $rdi
	addq	%rcx, %rdx
.Ltmp1036:
	#DEBUG_VALUE: x264_pixel_ssd_8x16:pix2 <- $rdx
	#DEBUG_VALUE: y <- [DW_OP_consts 16, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $r8d
	.loc	0 93 1                          # x264_src/common/pixel.c:93:1
	decl	%r8d
.Ltmp1037:
	.loc	0 93 1                          # x264_src/common/pixel.c:93:1
	jne	.LBB26_1
.Ltmp1038:
# %bb.2:                                # %for.cond.cleanup
	#DEBUG_VALUE: x264_pixel_ssd_8x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_ssd_8x16:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: x264_pixel_ssd_8x16:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_ssd_8x16:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_pixel_ssd_8x16:i_sum <- $eax
	.loc	0 93 1                          # x264_src/common/pixel.c:93:1
	retq
.Ltmp1039:
.Lfunc_end26:
	.size	x264_pixel_ssd_8x16, .Lfunc_end26-x264_pixel_ssd_8x16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_ssd_8x8
	.type	x264_pixel_ssd_8x8,@function
x264_pixel_ssd_8x8:                     # @x264_pixel_ssd_8x8
.Lfunc_begin27:
	.loc	0 94 0 is_stmt 1                # x264_src/common/pixel.c:94:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_ssd_8x8:i_stride_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_ssd_8x8:i_stride_pix2 <- $ecx
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x264_pixel_ssd_8x8:i_sum <- 0
	movslq	%ecx, %rax
	movslq	%esi, %rcx
.Ltmp1040:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_pixel_ssd_8x8:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 94 1 prologue_end             # x264_src/common/pixel.c:94:1
	movq	(%rdi), %xmm1                   # xmm1 = mem[0],zero
	movq	(%rdx), %xmm2                   # xmm2 = mem[0],zero
	pxor	%xmm0, %xmm0
	punpcklbw	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1],xmm2[2],xmm0[2],xmm2[3],xmm0[3],xmm2[4],xmm0[4],xmm2[5],xmm0[5],xmm2[6],xmm0[6],xmm2[7],xmm0[7]
	punpcklbw	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1],xmm1[2],xmm0[2],xmm1[3],xmm0[3],xmm1[4],xmm0[4],xmm1[5],xmm0[5],xmm1[6],xmm0[6],xmm1[7],xmm0[7]
	psubw	%xmm2, %xmm1
	pmaddwd	%xmm1, %xmm1
	pshufd	$238, %xmm1, %xmm2              # xmm2 = xmm1[2,3,2,3]
	paddd	%xmm1, %xmm2
	pshufd	$85, %xmm2, %xmm1               # xmm1 = xmm2[1,1,1,1]
	paddd	%xmm2, %xmm1
	movd	%xmm1, %esi
.Ltmp1041:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	movq	(%rdi,%rcx), %xmm1              # xmm1 = mem[0],zero
.Ltmp1042:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 94 1 is_stmt 0                # x264_src/common/pixel.c:94:1
	addq	%rcx, %rdi
.Ltmp1043:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix1 <- $rdi
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	movq	(%rdx,%rax), %xmm2              # xmm2 = mem[0],zero
.Ltmp1044:
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	addq	%rax, %rdx
.Ltmp1045:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix2 <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 7
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	punpcklbw	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1],xmm2[2],xmm0[2],xmm2[3],xmm0[3],xmm2[4],xmm0[4],xmm2[5],xmm0[5],xmm2[6],xmm0[6],xmm2[7],xmm0[7]
	punpcklbw	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1],xmm1[2],xmm0[2],xmm1[3],xmm0[3],xmm1[4],xmm0[4],xmm1[5],xmm0[5],xmm1[6],xmm0[6],xmm1[7],xmm0[7]
	psubw	%xmm2, %xmm1
	pmaddwd	%xmm1, %xmm1
	pshufd	$238, %xmm1, %xmm2              # xmm2 = xmm1[2,3,2,3]
	paddd	%xmm1, %xmm2
	pshufd	$85, %xmm2, %xmm1               # xmm1 = xmm2[1,1,1,1]
	paddd	%xmm2, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	(%rcx,%rdi), %xmm1              # xmm1 = mem[0],zero
.Ltmp1046:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	addq	%rcx, %rdi
.Ltmp1047:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix1 <- $rdi
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	movq	(%rax,%rdx), %xmm2              # xmm2 = mem[0],zero
.Ltmp1048:
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	addq	%rax, %rdx
.Ltmp1049:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 7
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	punpcklbw	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1],xmm2[2],xmm0[2],xmm2[3],xmm0[3],xmm2[4],xmm0[4],xmm2[5],xmm0[5],xmm2[6],xmm0[6],xmm2[7],xmm0[7]
	punpcklbw	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1],xmm1[2],xmm0[2],xmm1[3],xmm0[3],xmm1[4],xmm0[4],xmm1[5],xmm0[5],xmm1[6],xmm0[6],xmm1[7],xmm0[7]
	psubw	%xmm2, %xmm1
	pmaddwd	%xmm1, %xmm1
	pshufd	$238, %xmm1, %xmm2              # xmm2 = xmm1[2,3,2,3]
	paddd	%xmm1, %xmm2
	pshufd	$85, %xmm2, %xmm1               # xmm1 = xmm2[1,1,1,1]
	paddd	%xmm2, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
	movq	(%rcx,%rdi), %xmm1              # xmm1 = mem[0],zero
.Ltmp1050:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	addq	%rcx, %rdi
.Ltmp1051:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix1 <- $rdi
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	movq	(%rax,%rdx), %xmm2              # xmm2 = mem[0],zero
.Ltmp1052:
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	addq	%rax, %rdx
.Ltmp1053:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 7
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	punpcklbw	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1],xmm2[2],xmm0[2],xmm2[3],xmm0[3],xmm2[4],xmm0[4],xmm2[5],xmm0[5],xmm2[6],xmm0[6],xmm2[7],xmm0[7]
	punpcklbw	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1],xmm1[2],xmm0[2],xmm1[3],xmm0[3],xmm1[4],xmm0[4],xmm1[5],xmm0[5],xmm1[6],xmm0[6],xmm1[7],xmm0[7]
	psubw	%xmm2, %xmm1
	pmaddwd	%xmm1, %xmm1
	pshufd	$238, %xmm1, %xmm2              # xmm2 = xmm1[2,3,2,3]
	paddd	%xmm1, %xmm2
	pshufd	$85, %xmm2, %xmm1               # xmm1 = xmm2[1,1,1,1]
	paddd	%xmm2, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	(%rcx,%rdi), %xmm1              # xmm1 = mem[0],zero
.Ltmp1054:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	addq	%rcx, %rdi
.Ltmp1055:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix1 <- $rdi
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	movq	(%rax,%rdx), %xmm2              # xmm2 = mem[0],zero
.Ltmp1056:
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	addq	%rax, %rdx
.Ltmp1057:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 7
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	punpcklbw	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1],xmm2[2],xmm0[2],xmm2[3],xmm0[3],xmm2[4],xmm0[4],xmm2[5],xmm0[5],xmm2[6],xmm0[6],xmm2[7],xmm0[7]
	punpcklbw	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1],xmm1[2],xmm0[2],xmm1[3],xmm0[3],xmm1[4],xmm0[4],xmm1[5],xmm0[5],xmm1[6],xmm0[6],xmm1[7],xmm0[7]
	psubw	%xmm2, %xmm1
	pmaddwd	%xmm1, %xmm1
	pshufd	$238, %xmm1, %xmm2              # xmm2 = xmm1[2,3,2,3]
	paddd	%xmm1, %xmm2
	pshufd	$85, %xmm2, %xmm1               # xmm1 = xmm2[1,1,1,1]
	paddd	%xmm2, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
	movq	(%rcx,%rdi), %xmm1              # xmm1 = mem[0],zero
.Ltmp1058:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	addq	%rcx, %rdi
.Ltmp1059:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix1 <- $rdi
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	movq	(%rax,%rdx), %xmm2              # xmm2 = mem[0],zero
.Ltmp1060:
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	addq	%rax, %rdx
.Ltmp1061:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 7
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	punpcklbw	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1],xmm2[2],xmm0[2],xmm2[3],xmm0[3],xmm2[4],xmm0[4],xmm2[5],xmm0[5],xmm2[6],xmm0[6],xmm2[7],xmm0[7]
	punpcklbw	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1],xmm1[2],xmm0[2],xmm1[3],xmm0[3],xmm1[4],xmm0[4],xmm1[5],xmm0[5],xmm1[6],xmm0[6],xmm1[7],xmm0[7]
	psubw	%xmm2, %xmm1
	pmaddwd	%xmm1, %xmm1
	pshufd	$238, %xmm1, %xmm2              # xmm2 = xmm1[2,3,2,3]
	paddd	%xmm1, %xmm2
	pshufd	$85, %xmm2, %xmm1               # xmm1 = xmm2[1,1,1,1]
	paddd	%xmm2, %xmm1
	movd	%xmm1, %r8d
	addl	%esi, %r8d
	movq	(%rcx,%rdi), %xmm1              # xmm1 = mem[0],zero
.Ltmp1062:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:i_sum <- $r8d
	#DEBUG_VALUE: x <- 8
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	addq	%rcx, %rdi
.Ltmp1063:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix1 <- $rdi
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	movq	(%rax,%rdx), %xmm2              # xmm2 = mem[0],zero
.Ltmp1064:
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	addq	%rax, %rdx
.Ltmp1065:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 7
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	punpcklbw	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1],xmm2[2],xmm0[2],xmm2[3],xmm0[3],xmm2[4],xmm0[4],xmm2[5],xmm0[5],xmm2[6],xmm0[6],xmm2[7],xmm0[7]
	punpcklbw	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1],xmm1[2],xmm0[2],xmm1[3],xmm0[3],xmm1[4],xmm0[4],xmm1[5],xmm0[5],xmm1[6],xmm0[6],xmm1[7],xmm0[7]
	psubw	%xmm2, %xmm1
	pmaddwd	%xmm1, %xmm1
	pshufd	$238, %xmm1, %xmm2              # xmm2 = xmm1[2,3,2,3]
	paddd	%xmm1, %xmm2
	pshufd	$85, %xmm2, %xmm1               # xmm1 = xmm2[1,1,1,1]
	paddd	%xmm2, %xmm1
	movd	%xmm1, %esi
	addl	%r8d, %esi
.Ltmp1066:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:i_sum <- $esi
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 7
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdx, $rax
	movq	(%rcx,%rdi), %xmm1              # xmm1 = mem[0],zero
	movq	(%rax,%rdx), %xmm2              # xmm2 = mem[0],zero
	punpcklbw	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1],xmm2[2],xmm0[2],xmm2[3],xmm0[3],xmm2[4],xmm0[4],xmm2[5],xmm0[5],xmm2[6],xmm0[6],xmm2[7],xmm0[7]
	punpcklbw	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1],xmm1[2],xmm0[2],xmm1[3],xmm0[3],xmm1[4],xmm0[4],xmm1[5],xmm0[5],xmm1[6],xmm0[6],xmm1[7],xmm0[7]
	psubw	%xmm2, %xmm1
	pmaddwd	%xmm1, %xmm1
	pshufd	$238, %xmm1, %xmm0              # xmm0 = xmm1[2,3,2,3]
	paddd	%xmm1, %xmm0
	pshufd	$85, %xmm0, %xmm1               # xmm1 = xmm0[1,1,1,1]
	paddd	%xmm0, %xmm1
	movd	%xmm1, %eax
.Ltmp1067:
	addl	%esi, %eax
.Ltmp1068:
	#DEBUG_VALUE: x264_pixel_ssd_8x8:i_sum <- $eax
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 8
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: x264_pixel_ssd_8x8:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx, $rcx
	.loc	0 94 1                          # x264_src/common/pixel.c:94:1
	retq
.Ltmp1069:
.Lfunc_end27:
	.size	x264_pixel_ssd_8x8, .Lfunc_end27-x264_pixel_ssd_8x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_ssd_8x4
	.type	x264_pixel_ssd_8x4,@function
x264_pixel_ssd_8x4:                     # @x264_pixel_ssd_8x4
.Lfunc_begin28:
	.loc	0 95 0 is_stmt 1                # x264_src/common/pixel.c:95:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_ssd_8x4:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_ssd_8x4:i_stride_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_ssd_8x4:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_ssd_8x4:i_stride_pix2 <- $ecx
	#DEBUG_VALUE: x264_pixel_ssd_8x4:i_sum <- 0
	#DEBUG_VALUE: y <- 0
	movslq	%esi, %rax
	movslq	%ecx, %rcx
.Ltmp1070:
	#DEBUG_VALUE: x264_pixel_ssd_8x4:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_pixel_ssd_8x4:i_sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 95 1 prologue_end             # x264_src/common/pixel.c:95:1
	movq	(%rdi), %xmm0                   # xmm0 = mem[0],zero
	movq	(%rdx), %xmm1                   # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	punpcklbw	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1],xmm1[2],xmm2[2],xmm1[3],xmm2[3],xmm1[4],xmm2[4],xmm1[5],xmm2[5],xmm1[6],xmm2[6],xmm1[7],xmm2[7]
	punpcklbw	%xmm2, %xmm0            # xmm0 = xmm0[0],xmm2[0],xmm0[1],xmm2[1],xmm0[2],xmm2[2],xmm0[3],xmm2[3],xmm0[4],xmm2[4],xmm0[5],xmm2[5],xmm0[6],xmm2[6],xmm0[7],xmm2[7]
	psubw	%xmm1, %xmm0
	pmaddwd	%xmm0, %xmm0
	movq	(%rdi,%rax), %xmm1              # xmm1 = mem[0],zero
.Ltmp1071:
	#DEBUG_VALUE: x <- 8
	.loc	0 95 1 is_stmt 0                # x264_src/common/pixel.c:95:1
	addq	%rax, %rdi
.Ltmp1072:
	#DEBUG_VALUE: x264_pixel_ssd_8x4:pix1 <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_8x4:pix1 <- $rdi
	.loc	0 95 1                          # x264_src/common/pixel.c:95:1
	movq	(%rdx,%rcx), %xmm3              # xmm3 = mem[0],zero
.Ltmp1073:
	.loc	0 95 1                          # x264_src/common/pixel.c:95:1
	addq	%rcx, %rdx
.Ltmp1074:
	#DEBUG_VALUE: x264_pixel_ssd_8x4:pix2 <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_pixel_ssd_8x4:pix2 <- $rdx
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 7
	.loc	0 95 1                          # x264_src/common/pixel.c:95:1
	punpcklbw	%xmm2, %xmm3            # xmm3 = xmm3[0],xmm2[0],xmm3[1],xmm2[1],xmm3[2],xmm2[2],xmm3[3],xmm2[3],xmm3[4],xmm2[4],xmm3[5],xmm2[5],xmm3[6],xmm2[6],xmm3[7],xmm2[7]
	punpcklbw	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1],xmm1[2],xmm2[2],xmm1[3],xmm2[3],xmm1[4],xmm2[4],xmm1[5],xmm2[5],xmm1[6],xmm2[6],xmm1[7],xmm2[7]
	psubw	%xmm3, %xmm1
	pmaddwd	%xmm1, %xmm1
	movq	(%rax,%rdi), %xmm3              # xmm3 = mem[0],zero
.Ltmp1075:
	#DEBUG_VALUE: x <- 8
	.loc	0 95 1                          # x264_src/common/pixel.c:95:1
	addq	%rax, %rdi
.Ltmp1076:
	#DEBUG_VALUE: x264_pixel_ssd_8x4:pix1 <- $rdi
	.loc	0 95 1                          # x264_src/common/pixel.c:95:1
	movq	(%rcx,%rdx), %xmm4              # xmm4 = mem[0],zero
.Ltmp1077:
	.loc	0 95 1                          # x264_src/common/pixel.c:95:1
	addq	%rcx, %rdx
.Ltmp1078:
	#DEBUG_VALUE: x264_pixel_ssd_8x4:pix2 <- $rdx
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 7
	.loc	0 95 1                          # x264_src/common/pixel.c:95:1
	punpcklbw	%xmm2, %xmm4            # xmm4 = xmm4[0],xmm2[0],xmm4[1],xmm2[1],xmm4[2],xmm2[2],xmm4[3],xmm2[3],xmm4[4],xmm2[4],xmm4[5],xmm2[5],xmm4[6],xmm2[6],xmm4[7],xmm2[7]
	punpcklbw	%xmm2, %xmm3            # xmm3 = xmm3[0],xmm2[0],xmm3[1],xmm2[1],xmm3[2],xmm2[2],xmm3[3],xmm2[3],xmm3[4],xmm2[4],xmm3[5],xmm2[5],xmm3[6],xmm2[6],xmm3[7],xmm2[7]
	psubw	%xmm4, %xmm3
	pmaddwd	%xmm3, %xmm3
.Ltmp1079:
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: x264_pixel_ssd_8x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rax
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 7
	#DEBUG_VALUE: x264_pixel_ssd_8x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdx, $rcx
	movq	(%rax,%rdi), %xmm4              # xmm4 = mem[0],zero
	movq	(%rcx,%rdx), %xmm5              # xmm5 = mem[0],zero
	punpcklbw	%xmm2, %xmm5            # xmm5 = xmm5[0],xmm2[0],xmm5[1],xmm2[1],xmm5[2],xmm2[2],xmm5[3],xmm2[3],xmm5[4],xmm2[4],xmm5[5],xmm2[5],xmm5[6],xmm2[6],xmm5[7],xmm2[7]
	punpcklbw	%xmm2, %xmm4            # xmm4 = xmm4[0],xmm2[0],xmm4[1],xmm2[1],xmm4[2],xmm2[2],xmm4[3],xmm2[3],xmm4[4],xmm2[4],xmm4[5],xmm2[5],xmm4[6],xmm2[6],xmm4[7],xmm2[7]
	psubw	%xmm5, %xmm4
	pmaddwd	%xmm4, %xmm4
	pshufd	$238, %xmm0, %xmm2              # xmm2 = xmm0[2,3,2,3]
	paddd	%xmm0, %xmm2
	pshufd	$85, %xmm2, %xmm0               # xmm0 = xmm2[1,1,1,1]
	paddd	%xmm2, %xmm0
	movd	%xmm0, %eax
.Ltmp1080:
	pshufd	$238, %xmm1, %xmm0              # xmm0 = xmm1[2,3,2,3]
	paddd	%xmm1, %xmm0
	pshufd	$85, %xmm0, %xmm1               # xmm1 = xmm0[1,1,1,1]
	paddd	%xmm0, %xmm1
	movd	%xmm1, %ecx
.Ltmp1081:
	addl	%eax, %ecx
	pshufd	$238, %xmm3, %xmm0              # xmm0 = xmm3[2,3,2,3]
	paddd	%xmm3, %xmm0
	pshufd	$85, %xmm0, %xmm1               # xmm1 = xmm0[1,1,1,1]
	paddd	%xmm0, %xmm1
	movd	%xmm1, %edx
	addl	%ecx, %edx
	pshufd	$238, %xmm4, %xmm0              # xmm0 = xmm4[2,3,2,3]
	paddd	%xmm4, %xmm0
	pshufd	$85, %xmm0, %xmm1               # xmm1 = xmm0[1,1,1,1]
	paddd	%xmm0, %xmm1
	movd	%xmm1, %eax
	addl	%edx, %eax
.Ltmp1082:
	#DEBUG_VALUE: x264_pixel_ssd_8x4:i_sum <- $eax
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x264_pixel_ssd_8x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: x264_pixel_ssd_8x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	.loc	0 95 1                          # x264_src/common/pixel.c:95:1
	retq
.Ltmp1083:
.Lfunc_end28:
	.size	x264_pixel_ssd_8x4, .Lfunc_end28-x264_pixel_ssd_8x4
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_ssd_4x8
	.type	x264_pixel_ssd_4x8,@function
x264_pixel_ssd_4x8:                     # @x264_pixel_ssd_4x8
.Lfunc_begin29:
	.loc	0 96 0 is_stmt 1                # x264_src/common/pixel.c:96:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_ssd_4x8:i_stride_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_ssd_4x8:i_stride_pix2 <- $ecx
	#DEBUG_VALUE: x264_pixel_ssd_4x8:i_sum <- 0
	#DEBUG_VALUE: y <- 0
	movslq	%esi, %rsi
.Ltmp1084:
	#DEBUG_VALUE: x264_pixel_ssd_4x8:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	movslq	%ecx, %rax
.Ltmp1085:
	#DEBUG_VALUE: x264_pixel_ssd_4x8:i_sum <- undef
	#DEBUG_VALUE: x <- 3
	.loc	0 96 1 prologue_end             # x264_src/common/pixel.c:96:1
	movd	(%rdi), %xmm0                   # xmm0 = mem[0],zero,zero,zero
	pxor	%xmm2, %xmm2
	punpcklbw	%xmm2, %xmm0            # xmm0 = xmm0[0],xmm2[0],xmm0[1],xmm2[1],xmm0[2],xmm2[2],xmm0[3],xmm2[3],xmm0[4],xmm2[4],xmm0[5],xmm2[5],xmm0[6],xmm2[6],xmm0[7],xmm2[7]
	punpcklwd	%xmm2, %xmm0            # xmm0 = xmm0[0],xmm2[0],xmm0[1],xmm2[1],xmm0[2],xmm2[2],xmm0[3],xmm2[3]
	movd	(%rdx), %xmm1                   # xmm1 = mem[0],zero,zero,zero
	punpcklbw	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1],xmm1[2],xmm2[2],xmm1[3],xmm2[3],xmm1[4],xmm2[4],xmm1[5],xmm2[5],xmm1[6],xmm2[6],xmm1[7],xmm2[7]
	punpcklwd	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1],xmm1[2],xmm2[2],xmm1[3],xmm2[3]
	psubd	%xmm1, %xmm0
	packssdw	%xmm0, %xmm0
	movdqa	%xmm0, %xmm1
	pmulhw	%xmm0, %xmm1
	pmullw	%xmm0, %xmm0
	punpcklwd	%xmm1, %xmm0            # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1],xmm0[2],xmm1[2],xmm0[3],xmm1[3]
	movd	(%rdi,%rsi), %xmm1              # xmm1 = mem[0],zero,zero,zero
.Ltmp1086:
	#DEBUG_VALUE: x <- 4
	.loc	0 96 1 is_stmt 0                # x264_src/common/pixel.c:96:1
	addq	%rsi, %rdi
.Ltmp1087:
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix1 <- $rdi
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	punpcklbw	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1],xmm1[2],xmm2[2],xmm1[3],xmm2[3],xmm1[4],xmm2[4],xmm1[5],xmm2[5],xmm1[6],xmm2[6],xmm1[7],xmm2[7]
	punpcklwd	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1],xmm1[2],xmm2[2],xmm1[3],xmm2[3]
	movd	(%rdx,%rax), %xmm3              # xmm3 = mem[0],zero,zero,zero
.Ltmp1088:
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	addq	%rax, %rdx
.Ltmp1089:
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix2 <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 3
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	punpcklbw	%xmm2, %xmm3            # xmm3 = xmm3[0],xmm2[0],xmm3[1],xmm2[1],xmm3[2],xmm2[2],xmm3[3],xmm2[3],xmm3[4],xmm2[4],xmm3[5],xmm2[5],xmm3[6],xmm2[6],xmm3[7],xmm2[7]
	punpcklwd	%xmm2, %xmm3            # xmm3 = xmm3[0],xmm2[0],xmm3[1],xmm2[1],xmm3[2],xmm2[2],xmm3[3],xmm2[3]
	psubd	%xmm3, %xmm1
	packssdw	%xmm1, %xmm1
	movdqa	%xmm1, %xmm3
	pmulhw	%xmm1, %xmm3
	pmullw	%xmm1, %xmm1
	punpcklwd	%xmm3, %xmm1            # xmm1 = xmm1[0],xmm3[0],xmm1[1],xmm3[1],xmm1[2],xmm3[2],xmm1[3],xmm3[3]
	movd	(%rsi,%rdi), %xmm3              # xmm3 = mem[0],zero,zero,zero
.Ltmp1090:
	#DEBUG_VALUE: x <- 4
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	addq	%rsi, %rdi
.Ltmp1091:
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix1 <- $rdi
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	punpcklbw	%xmm2, %xmm3            # xmm3 = xmm3[0],xmm2[0],xmm3[1],xmm2[1],xmm3[2],xmm2[2],xmm3[3],xmm2[3],xmm3[4],xmm2[4],xmm3[5],xmm2[5],xmm3[6],xmm2[6],xmm3[7],xmm2[7]
	punpcklwd	%xmm2, %xmm3            # xmm3 = xmm3[0],xmm2[0],xmm3[1],xmm2[1],xmm3[2],xmm2[2],xmm3[3],xmm2[3]
	movd	(%rax,%rdx), %xmm4              # xmm4 = mem[0],zero,zero,zero
.Ltmp1092:
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	addq	%rax, %rdx
.Ltmp1093:
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 3
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	punpcklbw	%xmm2, %xmm4            # xmm4 = xmm4[0],xmm2[0],xmm4[1],xmm2[1],xmm4[2],xmm2[2],xmm4[3],xmm2[3],xmm4[4],xmm2[4],xmm4[5],xmm2[5],xmm4[6],xmm2[6],xmm4[7],xmm2[7]
	punpcklwd	%xmm2, %xmm4            # xmm4 = xmm4[0],xmm2[0],xmm4[1],xmm2[1],xmm4[2],xmm2[2],xmm4[3],xmm2[3]
	psubd	%xmm4, %xmm3
	packssdw	%xmm3, %xmm3
	movdqa	%xmm3, %xmm4
	pmulhw	%xmm3, %xmm4
	pmullw	%xmm3, %xmm3
	punpcklwd	%xmm4, %xmm3            # xmm3 = xmm3[0],xmm4[0],xmm3[1],xmm4[1],xmm3[2],xmm4[2],xmm3[3],xmm4[3]
	movd	(%rsi,%rdi), %xmm4              # xmm4 = mem[0],zero,zero,zero
.Ltmp1094:
	#DEBUG_VALUE: x <- 4
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	addq	%rsi, %rdi
.Ltmp1095:
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix1 <- $rdi
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	punpcklbw	%xmm2, %xmm4            # xmm4 = xmm4[0],xmm2[0],xmm4[1],xmm2[1],xmm4[2],xmm2[2],xmm4[3],xmm2[3],xmm4[4],xmm2[4],xmm4[5],xmm2[5],xmm4[6],xmm2[6],xmm4[7],xmm2[7]
	punpcklwd	%xmm2, %xmm4            # xmm4 = xmm4[0],xmm2[0],xmm4[1],xmm2[1],xmm4[2],xmm2[2],xmm4[3],xmm2[3]
	movd	(%rax,%rdx), %xmm5              # xmm5 = mem[0],zero,zero,zero
.Ltmp1096:
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	addq	%rax, %rdx
.Ltmp1097:
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 3
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	punpcklbw	%xmm2, %xmm5            # xmm5 = xmm5[0],xmm2[0],xmm5[1],xmm2[1],xmm5[2],xmm2[2],xmm5[3],xmm2[3],xmm5[4],xmm2[4],xmm5[5],xmm2[5],xmm5[6],xmm2[6],xmm5[7],xmm2[7]
	punpcklwd	%xmm2, %xmm5            # xmm5 = xmm5[0],xmm2[0],xmm5[1],xmm2[1],xmm5[2],xmm2[2],xmm5[3],xmm2[3]
	psubd	%xmm5, %xmm4
	packssdw	%xmm4, %xmm4
	movdqa	%xmm4, %xmm5
	pmulhw	%xmm4, %xmm5
	pmullw	%xmm4, %xmm4
	punpcklwd	%xmm5, %xmm4            # xmm4 = xmm4[0],xmm5[0],xmm4[1],xmm5[1],xmm4[2],xmm5[2],xmm4[3],xmm5[3]
	movd	(%rsi,%rdi), %xmm5              # xmm5 = mem[0],zero,zero,zero
.Ltmp1098:
	#DEBUG_VALUE: x <- 4
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	addq	%rsi, %rdi
.Ltmp1099:
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix1 <- $rdi
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	punpcklbw	%xmm2, %xmm5            # xmm5 = xmm5[0],xmm2[0],xmm5[1],xmm2[1],xmm5[2],xmm2[2],xmm5[3],xmm2[3],xmm5[4],xmm2[4],xmm5[5],xmm2[5],xmm5[6],xmm2[6],xmm5[7],xmm2[7]
	punpcklwd	%xmm2, %xmm5            # xmm5 = xmm5[0],xmm2[0],xmm5[1],xmm2[1],xmm5[2],xmm2[2],xmm5[3],xmm2[3]
	movd	(%rax,%rdx), %xmm6              # xmm6 = mem[0],zero,zero,zero
.Ltmp1100:
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	addq	%rax, %rdx
.Ltmp1101:
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 3
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	punpcklbw	%xmm2, %xmm6            # xmm6 = xmm6[0],xmm2[0],xmm6[1],xmm2[1],xmm6[2],xmm2[2],xmm6[3],xmm2[3],xmm6[4],xmm2[4],xmm6[5],xmm2[5],xmm6[6],xmm2[6],xmm6[7],xmm2[7]
	punpcklwd	%xmm2, %xmm6            # xmm6 = xmm6[0],xmm2[0],xmm6[1],xmm2[1],xmm6[2],xmm2[2],xmm6[3],xmm2[3]
	psubd	%xmm6, %xmm5
	packssdw	%xmm5, %xmm5
	movdqa	%xmm5, %xmm6
	pmulhw	%xmm5, %xmm6
	pmullw	%xmm5, %xmm5
	punpcklwd	%xmm6, %xmm5            # xmm5 = xmm5[0],xmm6[0],xmm5[1],xmm6[1],xmm5[2],xmm6[2],xmm5[3],xmm6[3]
	movd	(%rsi,%rdi), %xmm6              # xmm6 = mem[0],zero,zero,zero
.Ltmp1102:
	#DEBUG_VALUE: x <- 4
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	addq	%rsi, %rdi
.Ltmp1103:
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix1 <- $rdi
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	punpcklbw	%xmm2, %xmm6            # xmm6 = xmm6[0],xmm2[0],xmm6[1],xmm2[1],xmm6[2],xmm2[2],xmm6[3],xmm2[3],xmm6[4],xmm2[4],xmm6[5],xmm2[5],xmm6[6],xmm2[6],xmm6[7],xmm2[7]
	punpcklwd	%xmm2, %xmm6            # xmm6 = xmm6[0],xmm2[0],xmm6[1],xmm2[1],xmm6[2],xmm2[2],xmm6[3],xmm2[3]
	movd	(%rax,%rdx), %xmm7              # xmm7 = mem[0],zero,zero,zero
.Ltmp1104:
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	addq	%rax, %rdx
.Ltmp1105:
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 3
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	punpcklbw	%xmm2, %xmm7            # xmm7 = xmm7[0],xmm2[0],xmm7[1],xmm2[1],xmm7[2],xmm2[2],xmm7[3],xmm2[3],xmm7[4],xmm2[4],xmm7[5],xmm2[5],xmm7[6],xmm2[6],xmm7[7],xmm2[7]
	punpcklwd	%xmm2, %xmm7            # xmm7 = xmm7[0],xmm2[0],xmm7[1],xmm2[1],xmm7[2],xmm2[2],xmm7[3],xmm2[3]
	psubd	%xmm7, %xmm6
	packssdw	%xmm6, %xmm6
	movdqa	%xmm6, %xmm7
	pmulhw	%xmm6, %xmm7
	pmullw	%xmm6, %xmm6
	punpcklwd	%xmm7, %xmm6            # xmm6 = xmm6[0],xmm7[0],xmm6[1],xmm7[1],xmm6[2],xmm7[2],xmm6[3],xmm7[3]
	movd	(%rsi,%rdi), %xmm7              # xmm7 = mem[0],zero,zero,zero
.Ltmp1106:
	#DEBUG_VALUE: x <- 4
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	addq	%rsi, %rdi
.Ltmp1107:
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix1 <- $rdi
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	punpcklbw	%xmm2, %xmm7            # xmm7 = xmm7[0],xmm2[0],xmm7[1],xmm2[1],xmm7[2],xmm2[2],xmm7[3],xmm2[3],xmm7[4],xmm2[4],xmm7[5],xmm2[5],xmm7[6],xmm2[6],xmm7[7],xmm2[7]
	punpcklwd	%xmm2, %xmm7            # xmm7 = xmm7[0],xmm2[0],xmm7[1],xmm2[1],xmm7[2],xmm2[2],xmm7[3],xmm2[3]
	movd	(%rax,%rdx), %xmm8              # xmm8 = mem[0],zero,zero,zero
.Ltmp1108:
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	addq	%rax, %rdx
.Ltmp1109:
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 3
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	punpcklbw	%xmm2, %xmm8            # xmm8 = xmm8[0],xmm2[0],xmm8[1],xmm2[1],xmm8[2],xmm2[2],xmm8[3],xmm2[3],xmm8[4],xmm2[4],xmm8[5],xmm2[5],xmm8[6],xmm2[6],xmm8[7],xmm2[7]
	punpcklwd	%xmm2, %xmm8            # xmm8 = xmm8[0],xmm2[0],xmm8[1],xmm2[1],xmm8[2],xmm2[2],xmm8[3],xmm2[3]
	psubd	%xmm8, %xmm7
	packssdw	%xmm7, %xmm7
	movdqa	%xmm7, %xmm8
	pmulhw	%xmm7, %xmm8
	pmullw	%xmm7, %xmm7
	punpcklwd	%xmm8, %xmm7            # xmm7 = xmm7[0],xmm8[0],xmm7[1],xmm8[1],xmm7[2],xmm8[2],xmm7[3],xmm8[3]
.Ltmp1110:
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 3
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdx, $rax
	movd	(%rsi,%rdi), %xmm8              # xmm8 = mem[0],zero,zero,zero
	punpcklbw	%xmm2, %xmm8            # xmm8 = xmm8[0],xmm2[0],xmm8[1],xmm2[1],xmm8[2],xmm2[2],xmm8[3],xmm2[3],xmm8[4],xmm2[4],xmm8[5],xmm2[5],xmm8[6],xmm2[6],xmm8[7],xmm2[7]
	punpcklwd	%xmm2, %xmm8            # xmm8 = xmm8[0],xmm2[0],xmm8[1],xmm2[1],xmm8[2],xmm2[2],xmm8[3],xmm2[3]
	movd	(%rax,%rdx), %xmm9              # xmm9 = mem[0],zero,zero,zero
	punpcklbw	%xmm2, %xmm9            # xmm9 = xmm9[0],xmm2[0],xmm9[1],xmm2[1],xmm9[2],xmm2[2],xmm9[3],xmm2[3],xmm9[4],xmm2[4],xmm9[5],xmm2[5],xmm9[6],xmm2[6],xmm9[7],xmm2[7]
	punpcklwd	%xmm2, %xmm9            # xmm9 = xmm9[0],xmm2[0],xmm9[1],xmm2[1],xmm9[2],xmm2[2],xmm9[3],xmm2[3]
	psubd	%xmm9, %xmm8
	packssdw	%xmm8, %xmm8
	movdqa	%xmm8, %xmm2
	pmulhw	%xmm8, %xmm2
	pmullw	%xmm8, %xmm8
	punpcklwd	%xmm2, %xmm8            # xmm8 = xmm8[0],xmm2[0],xmm8[1],xmm2[1],xmm8[2],xmm2[2],xmm8[3],xmm2[3]
	pshufd	$238, %xmm0, %xmm2              # xmm2 = xmm0[2,3,2,3]
	punpcklqdq	%xmm2, %xmm0            # xmm0 = xmm0[0],xmm2[0]
	paddd	%xmm2, %xmm0
	pshufd	$85, %xmm0, %xmm2               # xmm2 = xmm0[1,1,1,1]
	paddd	%xmm0, %xmm2
	movd	%xmm2, %ecx
.Ltmp1111:
	#DEBUG_VALUE: x264_pixel_ssd_4x8:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	pshufd	$238, %xmm1, %xmm0              # xmm0 = xmm1[2,3,2,3]
	punpcklqdq	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0]
	paddd	%xmm0, %xmm1
	pshufd	$85, %xmm1, %xmm0               # xmm0 = xmm1[1,1,1,1]
	paddd	%xmm1, %xmm0
	movd	%xmm0, %edx
.Ltmp1112:
	pshufd	$238, %xmm3, %xmm0              # xmm0 = xmm3[2,3,2,3]
	punpcklqdq	%xmm0, %xmm3            # xmm3 = xmm3[0],xmm0[0]
	paddd	%xmm0, %xmm3
	pshufd	$85, %xmm3, %xmm0               # xmm0 = xmm3[1,1,1,1]
	paddd	%xmm3, %xmm0
	movd	%xmm0, %esi
.Ltmp1113:
	pshufd	$238, %xmm4, %xmm0              # xmm0 = xmm4[2,3,2,3]
	punpcklqdq	%xmm0, %xmm4            # xmm4 = xmm4[0],xmm0[0]
	paddd	%xmm0, %xmm4
	pshufd	$85, %xmm4, %xmm0               # xmm0 = xmm4[1,1,1,1]
	paddd	%xmm4, %xmm0
	movd	%xmm0, %edi
	pshufd	$238, %xmm5, %xmm0              # xmm0 = xmm5[2,3,2,3]
	punpcklqdq	%xmm0, %xmm5            # xmm5 = xmm5[0],xmm0[0]
	paddd	%xmm0, %xmm5
	pshufd	$85, %xmm5, %xmm0               # xmm0 = xmm5[1,1,1,1]
	paddd	%xmm5, %xmm0
	movd	%xmm0, %r8d
	pshufd	$238, %xmm6, %xmm0              # xmm0 = xmm6[2,3,2,3]
	punpcklqdq	%xmm0, %xmm6            # xmm6 = xmm6[0],xmm0[0]
	paddd	%xmm0, %xmm6
	pshufd	$85, %xmm6, %xmm0               # xmm0 = xmm6[1,1,1,1]
	paddd	%xmm6, %xmm0
	movd	%xmm0, %r9d
	pshufd	$238, %xmm7, %xmm0              # xmm0 = xmm7[2,3,2,3]
	punpcklqdq	%xmm0, %xmm7            # xmm7 = xmm7[0],xmm0[0]
.Ltmp1114:
	#DEBUG_VALUE: x <- 4
	paddd	%xmm0, %xmm7
	pshufd	$85, %xmm7, %xmm0               # xmm0 = xmm7[1,1,1,1]
	paddd	%xmm7, %xmm0
	movd	%xmm0, %r10d
	pshufd	$238, %xmm8, %xmm0              # xmm0 = xmm8[2,3,2,3]
	punpcklqdq	%xmm0, %xmm8            # xmm8 = xmm8[0],xmm0[0]
	paddd	%xmm0, %xmm8
	pshufd	$85, %xmm8, %xmm0               # xmm0 = xmm8[1,1,1,1]
	paddd	%xmm8, %xmm0
	movd	%xmm0, %eax
	addl	%ecx, %edx
	addl	%edx, %esi
	addl	%esi, %edi
	addl	%edi, %r8d
	addl	%r8d, %r9d
	addl	%r9d, %r10d
	addl	%r10d, %eax
.Ltmp1115:
	#DEBUG_VALUE: x264_pixel_ssd_4x8:i_sum <- $eax
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: y <- 8
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: x264_pixel_ssd_4x8:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	.loc	0 96 1                          # x264_src/common/pixel.c:96:1
	retq
.Ltmp1116:
.Lfunc_end29:
	.size	x264_pixel_ssd_4x8, .Lfunc_end29-x264_pixel_ssd_4x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_ssd_4x4
	.type	x264_pixel_ssd_4x4,@function
x264_pixel_ssd_4x4:                     # @x264_pixel_ssd_4x4
.Lfunc_begin30:
	.loc	0 97 0 is_stmt 1                # x264_src/common/pixel.c:97:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_ssd_4x4:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_ssd_4x4:i_stride_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_ssd_4x4:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_ssd_4x4:i_stride_pix2 <- $ecx
	#DEBUG_VALUE: x264_pixel_ssd_4x4:i_sum <- 0
	#DEBUG_VALUE: y <- 0
	movslq	%esi, %rsi
.Ltmp1117:
	#DEBUG_VALUE: x264_pixel_ssd_4x4:i_stride_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	movslq	%ecx, %rax
.Ltmp1118:
	#DEBUG_VALUE: x264_pixel_ssd_4x4:i_sum <- undef
	#DEBUG_VALUE: x <- 3
	.loc	0 97 1 prologue_end             # x264_src/common/pixel.c:97:1
	movd	(%rdi), %xmm0                   # xmm0 = mem[0],zero,zero,zero
	pxor	%xmm2, %xmm2
	punpcklbw	%xmm2, %xmm0            # xmm0 = xmm0[0],xmm2[0],xmm0[1],xmm2[1],xmm0[2],xmm2[2],xmm0[3],xmm2[3],xmm0[4],xmm2[4],xmm0[5],xmm2[5],xmm0[6],xmm2[6],xmm0[7],xmm2[7]
	punpcklwd	%xmm2, %xmm0            # xmm0 = xmm0[0],xmm2[0],xmm0[1],xmm2[1],xmm0[2],xmm2[2],xmm0[3],xmm2[3]
	movd	(%rdx), %xmm1                   # xmm1 = mem[0],zero,zero,zero
	punpcklbw	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1],xmm1[2],xmm2[2],xmm1[3],xmm2[3],xmm1[4],xmm2[4],xmm1[5],xmm2[5],xmm1[6],xmm2[6],xmm1[7],xmm2[7]
	punpcklwd	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1],xmm1[2],xmm2[2],xmm1[3],xmm2[3]
	psubd	%xmm1, %xmm0
	packssdw	%xmm0, %xmm0
	movdqa	%xmm0, %xmm1
	pmulhw	%xmm0, %xmm1
	pmullw	%xmm0, %xmm0
	punpcklwd	%xmm1, %xmm0            # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1],xmm0[2],xmm1[2],xmm0[3],xmm1[3]
	pshufd	$238, %xmm0, %xmm3              # xmm3 = xmm0[2,3,2,3]
	punpcklqdq	%xmm3, %xmm0            # xmm0 = xmm0[0],xmm3[0]
	movd	(%rdi,%rsi), %xmm1              # xmm1 = mem[0],zero,zero,zero
.Ltmp1119:
	#DEBUG_VALUE: x <- 4
	.loc	0 97 1 is_stmt 0                # x264_src/common/pixel.c:97:1
	addq	%rsi, %rdi
.Ltmp1120:
	#DEBUG_VALUE: x264_pixel_ssd_4x4:pix1 <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_ssd_4x4:pix1 <- $rdi
	.loc	0 97 1                          # x264_src/common/pixel.c:97:1
	punpcklbw	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1],xmm1[2],xmm2[2],xmm1[3],xmm2[3],xmm1[4],xmm2[4],xmm1[5],xmm2[5],xmm1[6],xmm2[6],xmm1[7],xmm2[7]
	punpcklwd	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1],xmm1[2],xmm2[2],xmm1[3],xmm2[3]
	movd	(%rdx,%rax), %xmm4              # xmm4 = mem[0],zero,zero,zero
.Ltmp1121:
	.loc	0 97 1                          # x264_src/common/pixel.c:97:1
	addq	%rax, %rdx
.Ltmp1122:
	#DEBUG_VALUE: x264_pixel_ssd_4x4:pix2 <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_pixel_ssd_4x4:pix2 <- $rdx
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 3
	.loc	0 97 1                          # x264_src/common/pixel.c:97:1
	punpcklbw	%xmm2, %xmm4            # xmm4 = xmm4[0],xmm2[0],xmm4[1],xmm2[1],xmm4[2],xmm2[2],xmm4[3],xmm2[3],xmm4[4],xmm2[4],xmm4[5],xmm2[5],xmm4[6],xmm2[6],xmm4[7],xmm2[7]
	punpcklwd	%xmm2, %xmm4            # xmm4 = xmm4[0],xmm2[0],xmm4[1],xmm2[1],xmm4[2],xmm2[2],xmm4[3],xmm2[3]
	psubd	%xmm4, %xmm1
	packssdw	%xmm1, %xmm1
	movdqa	%xmm1, %xmm4
	pmulhw	%xmm1, %xmm4
	pmullw	%xmm1, %xmm1
	punpcklwd	%xmm4, %xmm1            # xmm1 = xmm1[0],xmm4[0],xmm1[1],xmm4[1],xmm1[2],xmm4[2],xmm1[3],xmm4[3]
	pshufd	$238, %xmm1, %xmm5              # xmm5 = xmm1[2,3,2,3]
	punpcklqdq	%xmm5, %xmm1            # xmm1 = xmm1[0],xmm5[0]
	movd	(%rsi,%rdi), %xmm4              # xmm4 = mem[0],zero,zero,zero
.Ltmp1123:
	#DEBUG_VALUE: x <- 4
	.loc	0 97 1                          # x264_src/common/pixel.c:97:1
	addq	%rsi, %rdi
.Ltmp1124:
	#DEBUG_VALUE: x264_pixel_ssd_4x4:pix1 <- $rdi
	.loc	0 97 1                          # x264_src/common/pixel.c:97:1
	punpcklbw	%xmm2, %xmm4            # xmm4 = xmm4[0],xmm2[0],xmm4[1],xmm2[1],xmm4[2],xmm2[2],xmm4[3],xmm2[3],xmm4[4],xmm2[4],xmm4[5],xmm2[5],xmm4[6],xmm2[6],xmm4[7],xmm2[7]
	punpcklwd	%xmm2, %xmm4            # xmm4 = xmm4[0],xmm2[0],xmm4[1],xmm2[1],xmm4[2],xmm2[2],xmm4[3],xmm2[3]
	movd	(%rax,%rdx), %xmm6              # xmm6 = mem[0],zero,zero,zero
.Ltmp1125:
	.loc	0 97 1                          # x264_src/common/pixel.c:97:1
	addq	%rax, %rdx
.Ltmp1126:
	#DEBUG_VALUE: x264_pixel_ssd_4x4:pix2 <- $rdx
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 3
	.loc	0 97 1                          # x264_src/common/pixel.c:97:1
	punpcklbw	%xmm2, %xmm6            # xmm6 = xmm6[0],xmm2[0],xmm6[1],xmm2[1],xmm6[2],xmm2[2],xmm6[3],xmm2[3],xmm6[4],xmm2[4],xmm6[5],xmm2[5],xmm6[6],xmm2[6],xmm6[7],xmm2[7]
	punpcklwd	%xmm2, %xmm6            # xmm6 = xmm6[0],xmm2[0],xmm6[1],xmm2[1],xmm6[2],xmm2[2],xmm6[3],xmm2[3]
	psubd	%xmm6, %xmm4
	packssdw	%xmm4, %xmm4
	movdqa	%xmm4, %xmm6
	pmulhw	%xmm4, %xmm6
	pmullw	%xmm4, %xmm4
	punpcklwd	%xmm6, %xmm4            # xmm4 = xmm4[0],xmm6[0],xmm4[1],xmm6[1],xmm4[2],xmm6[2],xmm4[3],xmm6[3]
	pshufd	$238, %xmm4, %xmm7              # xmm7 = xmm4[2,3,2,3]
	punpcklqdq	%xmm7, %xmm4            # xmm4 = xmm4[0],xmm7[0]
.Ltmp1127:
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: x264_pixel_ssd_4x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 3
	#DEBUG_VALUE: x264_pixel_ssd_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdx, $rax
	movd	(%rsi,%rdi), %xmm6              # xmm6 = mem[0],zero,zero,zero
	punpcklbw	%xmm2, %xmm6            # xmm6 = xmm6[0],xmm2[0],xmm6[1],xmm2[1],xmm6[2],xmm2[2],xmm6[3],xmm2[3],xmm6[4],xmm2[4],xmm6[5],xmm2[5],xmm6[6],xmm2[6],xmm6[7],xmm2[7]
	punpcklwd	%xmm2, %xmm6            # xmm6 = xmm6[0],xmm2[0],xmm6[1],xmm2[1],xmm6[2],xmm2[2],xmm6[3],xmm2[3]
	movd	(%rax,%rdx), %xmm8              # xmm8 = mem[0],zero,zero,zero
	punpcklbw	%xmm2, %xmm8            # xmm8 = xmm8[0],xmm2[0],xmm8[1],xmm2[1],xmm8[2],xmm2[2],xmm8[3],xmm2[3],xmm8[4],xmm2[4],xmm8[5],xmm2[5],xmm8[6],xmm2[6],xmm8[7],xmm2[7]
	punpcklwd	%xmm2, %xmm8            # xmm8 = xmm8[0],xmm2[0],xmm8[1],xmm2[1],xmm8[2],xmm2[2],xmm8[3],xmm2[3]
	psubd	%xmm8, %xmm6
	packssdw	%xmm6, %xmm6
	movdqa	%xmm6, %xmm2
	pmulhw	%xmm6, %xmm2
	pmullw	%xmm6, %xmm6
	punpcklwd	%xmm2, %xmm6            # xmm6 = xmm6[0],xmm2[0],xmm6[1],xmm2[1],xmm6[2],xmm2[2],xmm6[3],xmm2[3]
	pshufd	$238, %xmm6, %xmm2              # xmm2 = xmm6[2,3,2,3]
	punpcklqdq	%xmm2, %xmm6            # xmm6 = xmm6[0],xmm2[0]
	paddd	%xmm3, %xmm0
	pshufd	$85, %xmm0, %xmm3               # xmm3 = xmm0[1,1,1,1]
	paddd	%xmm0, %xmm3
	movd	%xmm3, %eax
.Ltmp1128:
	paddd	%xmm5, %xmm1
	pshufd	$85, %xmm1, %xmm0               # xmm0 = xmm1[1,1,1,1]
	paddd	%xmm1, %xmm0
	movd	%xmm0, %ecx
.Ltmp1129:
	#DEBUG_VALUE: x264_pixel_ssd_4x4:i_stride_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	addl	%eax, %ecx
	paddd	%xmm7, %xmm4
	pshufd	$85, %xmm4, %xmm0               # xmm0 = xmm4[1,1,1,1]
	paddd	%xmm4, %xmm0
	movd	%xmm0, %edx
	addl	%ecx, %edx
	paddd	%xmm2, %xmm6
	pshufd	$85, %xmm6, %xmm0               # xmm0 = xmm6[1,1,1,1]
	paddd	%xmm6, %xmm0
	movd	%xmm0, %eax
	addl	%edx, %eax
.Ltmp1130:
	#DEBUG_VALUE: x264_pixel_ssd_4x4:i_sum <- $eax
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x264_pixel_ssd_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: x264_pixel_ssd_4x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi, $rsi
	.loc	0 97 1                          # x264_src/common/pixel.c:97:1
	retq
.Ltmp1131:
.Lfunc_end30:
	.size	x264_pixel_ssd_4x4, .Lfunc_end30-x264_pixel_ssd_4x4
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_16x16
	.type	x264_pixel_satd_16x16,@function
x264_pixel_satd_16x16:                  # @x264_pixel_satd_16x16
.Lfunc_begin31:
	.loc	0 271 0 is_stmt 1               # x264_src/common/pixel.c:271:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_16x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_16x16:i_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_satd_16x16:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_16x16:i_pix2 <- $ecx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%ecx, %ebx
	movq	%rdx, %r15
	movl	%esi, %r14d
	movq	%rdi, %r12
.Ltmp1132:
	.loc	0 271 1 prologue_end            # x264_src/common/pixel.c:271:1
	callq	x264_pixel_satd_8x4
.Ltmp1133:
	#DEBUG_VALUE: x264_pixel_satd_16x16:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_16x16:pix2 <- $r15
	#DEBUG_VALUE: x264_pixel_satd_16x16:i_pix1 <- $r14d
	#DEBUG_VALUE: x264_pixel_satd_16x16:pix1 <- $r12
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 36(%rsp)                  # 4-byte Spill
	.loc	0 271 1                         # x264_src/common/pixel.c:271:1
	leal	(,%r14,4), %eax
	cltq
	leaq	(%r12,%rax), %rdi
	movq	%rax, %rbp
	movq	%rax, 8(%rsp)                   # 8-byte Spill
	leal	(,%rbx,4), %eax
	cltq
	leaq	(%r15,%rax), %rdx
	movq	%rax, %r13
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	movl	%r14d, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1134:
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movl	%eax, 32(%rsp)                  # 4-byte Spill
.Ltmp1135:
	.loc	0 271 1                         # x264_src/common/pixel.c:271:1
	leaq	8(%r12), %rdi
	leaq	8(%r15), %rdx
	movl	%r14d, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1136:
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movl	%eax, 28(%rsp)                  # 4-byte Spill
	.loc	0 271 1                         # x264_src/common/pixel.c:271:1
	leaq	(%r12,%rbp), %rdi
	addq	$8, %rdi
	leaq	(%r15,%r13), %rdx
	addq	$8, %rdx
	movl	%r14d, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1137:
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movl	%eax, 24(%rsp)                  # 4-byte Spill
.Ltmp1138:
	.loc	0 271 1                         # x264_src/common/pixel.c:271:1
	leal	(,%r14,8), %eax
	cltq
	movq	%rax, 48(%rsp)                  # 8-byte Spill
	leaq	(%r12,%rax), %rdi
	leal	(,%rbx,8), %eax
	movslq	%eax, %rbp
	leaq	(%r15,%rbp), %rdx
	movl	%r14d, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1139:
	movl	%eax, %r13d
	movq	8(%rsp), %rax                   # 8-byte Reload
	leal	(%rax,%rax,2), %eax
	cltq
	movq	%rax, 8(%rsp)                   # 8-byte Spill
	leaq	(%r12,%rax), %rdi
	movq	16(%rsp), %rax                  # 8-byte Reload
	leal	(%rax,%rax,2), %eax
	cltq
	movq	%rax, 40(%rsp)                  # 8-byte Spill
	leaq	(%r15,%rax), %rdx
	movl	%r14d, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1140:
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movl	%eax, 16(%rsp)                  # 4-byte Spill
	movq	48(%rsp), %rax                  # 8-byte Reload
.Ltmp1141:
	.loc	0 271 1                         # x264_src/common/pixel.c:271:1
	leaq	(%r12,%rax), %rdi
	addq	$8, %rdi
	leaq	(%r15,%rbp), %rdx
	addq	$8, %rdx
	movl	%r14d, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1142:
	movl	%eax, %ebp
	movq	8(%rsp), %rax                   # 8-byte Reload
	leaq	(%r12,%rax), %rdi
	addq	$8, %rdi
	movq	40(%rsp), %rax                  # 8-byte Reload
	leaq	(%r15,%rax), %rdx
	addq	$8, %rdx
	movl	%r14d, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1143:
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movl	28(%rsp), %ecx                  # 4-byte Reload
	.loc	0 271 1                         # x264_src/common/pixel.c:271:1
	addl	36(%rsp), %ecx                  # 4-byte Folded Reload
.Ltmp1144:
	.loc	0 271 1                         # x264_src/common/pixel.c:271:1
	addl	32(%rsp), %ecx                  # 4-byte Folded Reload
.Ltmp1145:
	.loc	0 271 1                         # x264_src/common/pixel.c:271:1
	addl	24(%rsp), %r13d                 # 4-byte Folded Reload
.Ltmp1146:
	.loc	0 271 1                         # x264_src/common/pixel.c:271:1
	addl	%ecx, %r13d
.Ltmp1147:
	.loc	0 271 1                         # x264_src/common/pixel.c:271:1
	addl	16(%rsp), %ebp                  # 4-byte Folded Reload
.Ltmp1148:
	.loc	0 271 1                         # x264_src/common/pixel.c:271:1
	addl	%r13d, %ebp
.Ltmp1149:
	.loc	0 271 1                         # x264_src/common/pixel.c:271:1
	addl	%ebp, %eax
.Ltmp1150:
	#DEBUG_VALUE: x264_pixel_satd_16x16:sum <- $eax
	.loc	0 271 1 epilogue_begin          # x264_src/common/pixel.c:271:1
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp1151:
	#DEBUG_VALUE: x264_pixel_satd_16x16:i_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp1152:
	#DEBUG_VALUE: x264_pixel_satd_16x16:pix1 <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1153:
	#DEBUG_VALUE: x264_pixel_satd_16x16:i_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1154:
	#DEBUG_VALUE: x264_pixel_satd_16x16:pix2 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1155:
.Lfunc_end31:
	.size	x264_pixel_satd_16x16, .Lfunc_end31-x264_pixel_satd_16x16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_16x8
	.type	x264_pixel_satd_16x8,@function
x264_pixel_satd_16x8:                   # @x264_pixel_satd_16x8
.Lfunc_begin32:
	.loc	0 272 0 is_stmt 1               # x264_src/common/pixel.c:272:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix2 <- $ecx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%ecx, %ebx
	movq	%rdx, %r15
	movl	%esi, %r14d
	movq	%rdi, %r12
.Ltmp1156:
	.loc	0 272 1 prologue_end            # x264_src/common/pixel.c:272:1
	callq	x264_pixel_satd_8x4
.Ltmp1157:
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix2 <- $r15
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix1 <- $r14d
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix1 <- $r12
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 12(%rsp)                  # 4-byte Spill
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	leal	(,%r14,4), %eax
	cltq
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	leaq	(%r12,%rax), %rdi
	leal	(,%rbx,4), %eax
	movslq	%eax, %r13
	leaq	(%r15,%r13), %rdx
	movl	%r14d, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1158:
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movl	%eax, 8(%rsp)                   # 4-byte Spill
.Ltmp1159:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	leaq	8(%r12), %rdi
	leaq	8(%r15), %rdx
	movl	%r14d, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1160:
	movl	%eax, %ebp
	movq	16(%rsp), %rax                  # 8-byte Reload
	leaq	(%r12,%rax), %rdi
	addq	$8, %rdi
	leaq	(%r15,%r13), %rdx
	addq	$8, %rdx
	movl	%r14d, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1161:
	addl	12(%rsp), %ebp                  # 4-byte Folded Reload
.Ltmp1162:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	addl	8(%rsp), %ebp                   # 4-byte Folded Reload
.Ltmp1163:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	addl	%ebp, %eax
.Ltmp1164:
	#DEBUG_VALUE: x264_pixel_satd_16x8:sum <- $eax
	.loc	0 272 1 epilogue_begin          # x264_src/common/pixel.c:272:1
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp1165:
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp1166:
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1167:
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1168:
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix2 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1169:
.Lfunc_end32:
	.size	x264_pixel_satd_16x8, .Lfunc_end32-x264_pixel_satd_16x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_8x16
	.type	x264_pixel_satd_8x16,@function
x264_pixel_satd_8x16:                   # @x264_pixel_satd_8x16
.Lfunc_begin33:
	.loc	0 273 0 is_stmt 1               # x264_src/common/pixel.c:273:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix2 <- $ecx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%ecx, %ebx
	movq	%rdx, %r15
	movl	%esi, %r14d
	movq	%rdi, %r12
.Ltmp1170:
	.loc	0 273 1 prologue_end            # x264_src/common/pixel.c:273:1
	callq	x264_pixel_satd_8x4
.Ltmp1171:
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix2 <- $r15
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix1 <- $r14d
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- $r12
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 12(%rsp)                  # 4-byte Spill
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	leal	(,%r14,4), %eax
	movslq	%eax, %rbp
	leaq	(%r12,%rbp), %rdi
	leal	(,%rbx,4), %eax
	cltq
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	leaq	(%r15,%rax), %rdx
	movl	%r14d, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1172:
	movl	%eax, %r13d
.Ltmp1173:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	leal	(,%r14,8), %eax
	movslq	%eax, %rdi
	addq	%r12, %rdi
	leal	(,%rbx,8), %eax
	movslq	%eax, %rdx
	addq	%r15, %rdx
	movl	%r14d, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1174:
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movl	%eax, 8(%rsp)                   # 4-byte Spill
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	leal	(%rbp,%rbp,2), %eax
	movslq	%eax, %rdi
	addq	%r12, %rdi
	movq	16(%rsp), %rax                  # 8-byte Reload
	leal	(%rax,%rax,2), %eax
	movslq	%eax, %rdx
	addq	%r15, %rdx
	movl	%r14d, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1175:
	addl	12(%rsp), %r13d                 # 4-byte Folded Reload
.Ltmp1176:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	addl	8(%rsp), %r13d                  # 4-byte Folded Reload
.Ltmp1177:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	addl	%r13d, %eax
.Ltmp1178:
	#DEBUG_VALUE: x264_pixel_satd_8x16:sum <- $eax
	.loc	0 273 1 epilogue_begin          # x264_src/common/pixel.c:273:1
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp1179:
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp1180:
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1181:
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1182:
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix2 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1183:
.Lfunc_end33:
	.size	x264_pixel_satd_8x16, .Lfunc_end33-x264_pixel_satd_8x16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_8x8
	.type	x264_pixel_satd_8x8,@function
x264_pixel_satd_8x8:                    # @x264_pixel_satd_8x8
.Lfunc_begin34:
	.loc	0 274 0 is_stmt 1               # x264_src/common/pixel.c:274:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix2 <- $ecx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%ecx, %ebx
	movq	%rdx, %r14
	movl	%esi, %r15d
	movq	%rdi, %r12
.Ltmp1184:
	.loc	0 274 1 prologue_end            # x264_src/common/pixel.c:274:1
	callq	x264_pixel_satd_8x4
.Ltmp1185:
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix2 <- $r14
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix1 <- $r15d
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix1 <- $r12
	movl	%eax, %ebp
	leal	(,%r15,4), %eax
	movslq	%eax, %rdi
	addq	%r12, %rdi
	leal	(,%rbx,4), %eax
	movslq	%eax, %rdx
	addq	%r14, %rdx
	movl	%r15d, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1186:
	addl	%ebp, %eax
.Ltmp1187:
	#DEBUG_VALUE: x264_pixel_satd_8x8:sum <- $eax
	.loc	0 274 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:274:1
	popq	%rbx
.Ltmp1188:
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	.cfi_def_cfa_offset 40
	popq	%r12
.Ltmp1189:
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1190:
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix2 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1191:
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1192:
.Lfunc_end34:
	.size	x264_pixel_satd_8x8, .Lfunc_end34-x264_pixel_satd_8x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_8x4
	.type	x264_pixel_satd_8x4,@function
x264_pixel_satd_8x4:                    # @x264_pixel_satd_8x4
.Lfunc_begin35:
	.loc	0 235 0 is_stmt 1               # x264_src/common/pixel.c:235:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_8x4:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_8x4:i_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_satd_8x4:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_8x4:i_pix2 <- $ecx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp1193:
	#DEBUG_VALUE: x264_pixel_satd_8x4:sum <- 0
	#DEBUG_VALUE: i <- 0
	movslq	%esi, %rbx
	movslq	%ecx, %r14
	#DEBUG_VALUE: i <- 0
.Ltmp1194:
	.loc	0 241 15 prologue_end           # x264_src/common/pixel.c:241:15
	movzbl	(%rdi), %eax
	.loc	0 241 25 is_stmt 0              # x264_src/common/pixel.c:241:25
	movzbl	(%rdx), %ecx
.Ltmp1195:
	#DEBUG_VALUE: x264_pixel_satd_8x4:i_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	.loc	0 241 23                        # x264_src/common/pixel.c:241:23
	subl	%ecx, %eax
	.loc	0 241 38                        # x264_src/common/pixel.c:241:38
	movzbl	4(%rdi), %r8d
	.loc	0 241 48                        # x264_src/common/pixel.c:241:48
	movzbl	4(%rdx), %ecx
	.loc	0 241 46                        # x264_src/common/pixel.c:241:46
	subl	%ecx, %r8d
	.loc	0 241 57                        # x264_src/common/pixel.c:241:57
	shll	$16, %r8d
	.loc	0 241 34                        # x264_src/common/pixel.c:241:34
	addl	%eax, %r8d
.Ltmp1196:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a0 <- $r8d
	.loc	0 242 15 is_stmt 1              # x264_src/common/pixel.c:242:15
	movzbl	1(%rdi), %eax
	.loc	0 242 25 is_stmt 0              # x264_src/common/pixel.c:242:25
	movzbl	1(%rdx), %ecx
	.loc	0 242 23                        # x264_src/common/pixel.c:242:23
	subl	%ecx, %eax
	.loc	0 242 38                        # x264_src/common/pixel.c:242:38
	movzbl	5(%rdi), %ecx
	.loc	0 242 48                        # x264_src/common/pixel.c:242:48
	movzbl	5(%rdx), %esi
.Ltmp1197:
	#DEBUG_VALUE: x264_pixel_satd_8x4:i_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	.loc	0 242 46                        # x264_src/common/pixel.c:242:46
	subl	%esi, %ecx
	.loc	0 242 57                        # x264_src/common/pixel.c:242:57
	shll	$16, %ecx
	.loc	0 242 34                        # x264_src/common/pixel.c:242:34
	addl	%eax, %ecx
.Ltmp1198:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a1 <- $ecx
	.loc	0 243 15 is_stmt 1              # x264_src/common/pixel.c:243:15
	movzbl	2(%rdi), %esi
	.loc	0 243 25 is_stmt 0              # x264_src/common/pixel.c:243:25
	movzbl	2(%rdx), %eax
	.loc	0 243 23                        # x264_src/common/pixel.c:243:23
	subl	%eax, %esi
	.loc	0 243 38                        # x264_src/common/pixel.c:243:38
	movzbl	6(%rdi), %eax
	.loc	0 243 48                        # x264_src/common/pixel.c:243:48
	movzbl	6(%rdx), %r9d
	.loc	0 243 46                        # x264_src/common/pixel.c:243:46
	subl	%r9d, %eax
	.loc	0 243 57                        # x264_src/common/pixel.c:243:57
	shll	$16, %eax
	.loc	0 243 34                        # x264_src/common/pixel.c:243:34
	addl	%esi, %eax
.Ltmp1199:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a2 <- $eax
	.loc	0 244 15 is_stmt 1              # x264_src/common/pixel.c:244:15
	movzbl	3(%rdi), %esi
	.loc	0 244 25 is_stmt 0              # x264_src/common/pixel.c:244:25
	movzbl	3(%rdx), %r9d
	.loc	0 244 23                        # x264_src/common/pixel.c:244:23
	subl	%r9d, %esi
	.loc	0 244 38                        # x264_src/common/pixel.c:244:38
	movzbl	7(%rdi), %r9d
	.loc	0 244 48                        # x264_src/common/pixel.c:244:48
	movzbl	7(%rdx), %r10d
	.loc	0 244 46                        # x264_src/common/pixel.c:244:46
	subl	%r10d, %r9d
	.loc	0 244 57                        # x264_src/common/pixel.c:244:57
	shll	$16, %r9d
	.loc	0 244 34                        # x264_src/common/pixel.c:244:34
	addl	%esi, %r9d
.Ltmp1200:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a3 <- $r9d
	.loc	0 245 9 is_stmt 1               # x264_src/common/pixel.c:245:9
	leal	(%rcx,%r8), %esi
.Ltmp1201:
	#DEBUG_VALUE: t0 <- $esi
	subl	%ecx, %r8d
.Ltmp1202:
	#DEBUG_VALUE: t1 <- $r8d
	leal	(%r9,%rax), %ecx
.Ltmp1203:
	#DEBUG_VALUE: t2 <- $ecx
	subl	%r9d, %eax
.Ltmp1204:
	#DEBUG_VALUE: t3 <- $eax
	leal	(%rcx,%rsi), %r9d
.Ltmp1205:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_LLVM_fragment 0 32] $r9d
	subl	%ecx, %esi
.Ltmp1206:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_LLVM_fragment 64 32] $esi
	.loc	0 0 9 is_stmt 0                 # x264_src/common/pixel.c:0:9
	movq	%rsi, -8(%rsp)                  # 8-byte Spill
.Ltmp1207:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref, DW_OP_LLVM_fragment 64 32] $rsp
	.loc	0 245 9                         # x264_src/common/pixel.c:245:9
	leal	(%rax,%r8), %ecx
.Ltmp1208:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_LLVM_fragment 32 32] $ecx
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	movq	%rcx, -24(%rsp)                 # 8-byte Spill
.Ltmp1209:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_constu 24, DW_OP_minus, DW_OP_deref, DW_OP_LLVM_fragment 32 32] $rsp
	.loc	0 245 9                         # x264_src/common/pixel.c:245:9
	subl	%eax, %r8d
.Ltmp1210:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_LLVM_fragment 96 32] $r8d
	#DEBUG_VALUE: i <- 1
	.loc	0 239 38 is_stmt 1              # x264_src/common/pixel.c:239:38
	leaq	(%rdi,%rbx), %r10
.Ltmp1211:
	#DEBUG_VALUE: x264_pixel_satd_8x4:pix1 <- $r10
	.loc	0 239 54 is_stmt 0              # x264_src/common/pixel.c:239:54
	leaq	(%rdx,%r14), %rbp
.Ltmp1212:
	#DEBUG_VALUE: x264_pixel_satd_8x4:pix2 <- $rbp
	.loc	0 241 15 is_stmt 1              # x264_src/common/pixel.c:241:15
	movzbl	(%rdi,%rbx), %eax
.Ltmp1213:
	.loc	0 241 25 is_stmt 0              # x264_src/common/pixel.c:241:25
	movzbl	(%rdx,%r14), %ecx
	.loc	0 241 23                        # x264_src/common/pixel.c:241:23
	subl	%ecx, %eax
	.loc	0 241 38                        # x264_src/common/pixel.c:241:38
	movzbl	4(%rdi,%rbx), %r11d
	.loc	0 241 48                        # x264_src/common/pixel.c:241:48
	movzbl	4(%rdx,%r14), %ecx
	.loc	0 241 46                        # x264_src/common/pixel.c:241:46
	subl	%ecx, %r11d
	.loc	0 241 57                        # x264_src/common/pixel.c:241:57
	shll	$16, %r11d
	.loc	0 241 34                        # x264_src/common/pixel.c:241:34
	addl	%eax, %r11d
.Ltmp1214:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a0 <- $r11d
	.loc	0 242 15 is_stmt 1              # x264_src/common/pixel.c:242:15
	movzbl	1(%rdi,%rbx), %eax
	.loc	0 242 25 is_stmt 0              # x264_src/common/pixel.c:242:25
	movzbl	1(%rdx,%r14), %ecx
	.loc	0 242 23                        # x264_src/common/pixel.c:242:23
	subl	%ecx, %eax
	.loc	0 242 38                        # x264_src/common/pixel.c:242:38
	movzbl	5(%rdi,%rbx), %ecx
	.loc	0 242 48                        # x264_src/common/pixel.c:242:48
	movzbl	5(%rdx,%r14), %esi
	.loc	0 242 46                        # x264_src/common/pixel.c:242:46
	subl	%esi, %ecx
	.loc	0 242 57                        # x264_src/common/pixel.c:242:57
	shll	$16, %ecx
	.loc	0 242 34                        # x264_src/common/pixel.c:242:34
	addl	%eax, %ecx
.Ltmp1215:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a1 <- $ecx
	.loc	0 243 15 is_stmt 1              # x264_src/common/pixel.c:243:15
	movzbl	2(%rdi,%rbx), %esi
	.loc	0 243 25 is_stmt 0              # x264_src/common/pixel.c:243:25
	movzbl	2(%rdx,%r14), %eax
	.loc	0 243 23                        # x264_src/common/pixel.c:243:23
	subl	%eax, %esi
	.loc	0 243 38                        # x264_src/common/pixel.c:243:38
	movzbl	6(%rdi,%rbx), %eax
	.loc	0 243 48                        # x264_src/common/pixel.c:243:48
	movzbl	6(%rdx,%r14), %r15d
	.loc	0 243 46                        # x264_src/common/pixel.c:243:46
	subl	%r15d, %eax
	.loc	0 243 57                        # x264_src/common/pixel.c:243:57
	shll	$16, %eax
	.loc	0 243 34                        # x264_src/common/pixel.c:243:34
	addl	%esi, %eax
.Ltmp1216:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a2 <- $eax
	.loc	0 244 15 is_stmt 1              # x264_src/common/pixel.c:244:15
	movzbl	3(%rdi,%rbx), %esi
	.loc	0 244 25 is_stmt 0              # x264_src/common/pixel.c:244:25
	movzbl	3(%rdx,%r14), %r15d
	.loc	0 244 23                        # x264_src/common/pixel.c:244:23
	subl	%r15d, %esi
	.loc	0 244 38                        # x264_src/common/pixel.c:244:38
	movzbl	7(%rdi,%rbx), %edi
	.loc	0 244 48                        # x264_src/common/pixel.c:244:48
	movzbl	7(%rdx,%r14), %edx
	.loc	0 244 46                        # x264_src/common/pixel.c:244:46
	subl	%edx, %edi
	.loc	0 244 57                        # x264_src/common/pixel.c:244:57
	shll	$16, %edi
	.loc	0 244 34                        # x264_src/common/pixel.c:244:34
	addl	%esi, %edi
.Ltmp1217:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a3 <- $edi
	.loc	0 245 9 is_stmt 1               # x264_src/common/pixel.c:245:9
	leal	(%rcx,%r11), %edx
.Ltmp1218:
	#DEBUG_VALUE: t0 <- $edx
	subl	%ecx, %r11d
.Ltmp1219:
	#DEBUG_VALUE: t1 <- $r11d
	leal	(%rdi,%rax), %ecx
.Ltmp1220:
	#DEBUG_VALUE: t2 <- $ecx
	subl	%edi, %eax
.Ltmp1221:
	#DEBUG_VALUE: t3 <- $eax
	leal	(%rcx,%rdx), %esi
.Ltmp1222:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_LLVM_fragment 128 32] $esi
	.loc	0 0 9 is_stmt 0                 # x264_src/common/pixel.c:0:9
	movq	%rsi, -48(%rsp)                 # 8-byte Spill
.Ltmp1223:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_constu 48, DW_OP_minus, DW_OP_deref, DW_OP_LLVM_fragment 128 32] $rsp
	.loc	0 245 9                         # x264_src/common/pixel.c:245:9
	subl	%ecx, %edx
.Ltmp1224:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_LLVM_fragment 192 32] $edx
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	movq	%rdx, -16(%rsp)                 # 8-byte Spill
.Ltmp1225:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_constu 16, DW_OP_minus, DW_OP_deref, DW_OP_LLVM_fragment 192 32] $rsp
	.loc	0 245 9                         # x264_src/common/pixel.c:245:9
	leal	(%rax,%r11), %ecx
.Ltmp1226:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_LLVM_fragment 160 32] $ecx
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	movq	%rcx, -32(%rsp)                 # 8-byte Spill
.Ltmp1227:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_constu 32, DW_OP_minus, DW_OP_deref, DW_OP_LLVM_fragment 160 32] $rsp
	.loc	0 245 9                         # x264_src/common/pixel.c:245:9
	subl	%eax, %r11d
.Ltmp1228:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_LLVM_fragment 224 32] $r11d
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: x264_pixel_satd_8x4:pix1 <- undef
	#DEBUG_VALUE: x264_pixel_satd_8x4:pix2 <- undef
	.loc	0 241 15 is_stmt 1              # x264_src/common/pixel.c:241:15
	movzbl	(%rbx,%r10), %eax
.Ltmp1229:
	.loc	0 241 25 is_stmt 0              # x264_src/common/pixel.c:241:25
	movzbl	(%r14,%rbp), %ecx
	.loc	0 241 23                        # x264_src/common/pixel.c:241:23
	subl	%ecx, %eax
	.loc	0 241 38                        # x264_src/common/pixel.c:241:38
	movzbl	4(%rbx,%r10), %edi
.Ltmp1230:
	.loc	0 241 48                        # x264_src/common/pixel.c:241:48
	movzbl	4(%r14,%rbp), %ecx
	.loc	0 241 46                        # x264_src/common/pixel.c:241:46
	subl	%ecx, %edi
	.loc	0 241 57                        # x264_src/common/pixel.c:241:57
	shll	$16, %edi
	.loc	0 241 34                        # x264_src/common/pixel.c:241:34
	addl	%eax, %edi
.Ltmp1231:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a0 <- $edi
	.loc	0 242 15 is_stmt 1              # x264_src/common/pixel.c:242:15
	movzbl	1(%rbx,%r10), %eax
	.loc	0 242 25 is_stmt 0              # x264_src/common/pixel.c:242:25
	movzbl	1(%r14,%rbp), %ecx
	.loc	0 242 23                        # x264_src/common/pixel.c:242:23
	subl	%ecx, %eax
	.loc	0 242 38                        # x264_src/common/pixel.c:242:38
	movzbl	5(%rbx,%r10), %ecx
	.loc	0 242 48                        # x264_src/common/pixel.c:242:48
	movzbl	5(%r14,%rbp), %edx
	.loc	0 242 46                        # x264_src/common/pixel.c:242:46
	subl	%edx, %ecx
	.loc	0 242 57                        # x264_src/common/pixel.c:242:57
	shll	$16, %ecx
	.loc	0 242 34                        # x264_src/common/pixel.c:242:34
	addl	%eax, %ecx
.Ltmp1232:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a1 <- $ecx
	.loc	0 243 15 is_stmt 1              # x264_src/common/pixel.c:243:15
	movzbl	2(%rbx,%r10), %edx
	.loc	0 243 25 is_stmt 0              # x264_src/common/pixel.c:243:25
	movzbl	2(%r14,%rbp), %eax
	.loc	0 243 23                        # x264_src/common/pixel.c:243:23
	subl	%eax, %edx
	.loc	0 243 38                        # x264_src/common/pixel.c:243:38
	movzbl	6(%rbx,%r10), %eax
	.loc	0 243 48                        # x264_src/common/pixel.c:243:48
	movzbl	6(%r14,%rbp), %esi
	.loc	0 243 46                        # x264_src/common/pixel.c:243:46
	subl	%esi, %eax
	.loc	0 243 57                        # x264_src/common/pixel.c:243:57
	shll	$16, %eax
	.loc	0 243 34                        # x264_src/common/pixel.c:243:34
	addl	%edx, %eax
.Ltmp1233:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a2 <- $eax
	.loc	0 244 15 is_stmt 1              # x264_src/common/pixel.c:244:15
	movzbl	3(%rbx,%r10), %edx
	.loc	0 244 25 is_stmt 0              # x264_src/common/pixel.c:244:25
	movzbl	3(%r14,%rbp), %esi
	.loc	0 244 23                        # x264_src/common/pixel.c:244:23
	subl	%esi, %edx
	.loc	0 244 38                        # x264_src/common/pixel.c:244:38
	movzbl	7(%rbx,%r10), %esi
	.loc	0 244 48                        # x264_src/common/pixel.c:244:48
	movzbl	7(%r14,%rbp), %r15d
	.loc	0 244 46                        # x264_src/common/pixel.c:244:46
	subl	%r15d, %esi
	.loc	0 244 57                        # x264_src/common/pixel.c:244:57
	shll	$16, %esi
	.loc	0 244 34                        # x264_src/common/pixel.c:244:34
	addl	%edx, %esi
.Ltmp1234:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a3 <- $esi
	.loc	0 245 9 is_stmt 1               # x264_src/common/pixel.c:245:9
	leal	(%rcx,%rdi), %r15d
.Ltmp1235:
	#DEBUG_VALUE: t0 <- $r15d
	subl	%ecx, %edi
.Ltmp1236:
	#DEBUG_VALUE: t1 <- $edi
	leal	(%rsi,%rax), %ecx
.Ltmp1237:
	#DEBUG_VALUE: t2 <- $ecx
	subl	%esi, %eax
.Ltmp1238:
	#DEBUG_VALUE: t3 <- $eax
	leal	(%rcx,%r15), %esi
.Ltmp1239:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_LLVM_fragment 256 32] $esi
	subl	%ecx, %r15d
.Ltmp1240:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_LLVM_fragment 320 32] $r15d
	leal	(%rax,%rdi), %ecx
.Ltmp1241:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_LLVM_fragment 288 32] $ecx
	.loc	0 0 9 is_stmt 0                 # x264_src/common/pixel.c:0:9
	movq	%rcx, -40(%rsp)                 # 8-byte Spill
.Ltmp1242:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_constu 40, DW_OP_minus, DW_OP_deref, DW_OP_LLVM_fragment 288 32] $rsp
	.loc	0 245 9                         # x264_src/common/pixel.c:245:9
	subl	%eax, %edi
.Ltmp1243:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_LLVM_fragment 352 32] $edi
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: x264_pixel_satd_8x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef
	#DEBUG_VALUE: x264_pixel_satd_8x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef
	.loc	0 239 38 is_stmt 1              # x264_src/common/pixel.c:239:38
	leaq	(%r10,%rbx), %rdx
.Ltmp1244:
	#DEBUG_VALUE: x264_pixel_satd_8x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdx, $rbx
	#DEBUG_VALUE: x264_pixel_satd_8x4:pix1 <- $rdx
	.loc	0 239 54 is_stmt 0              # x264_src/common/pixel.c:239:54
	addq	%r14, %rbp
.Ltmp1245:
	#DEBUG_VALUE: x264_pixel_satd_8x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rbp, $r14
	#DEBUG_VALUE: x264_pixel_satd_8x4:pix2 <- $rbp
	.loc	0 241 15 is_stmt 1              # x264_src/common/pixel.c:241:15
	movzbl	(%rbx,%rdx), %eax
.Ltmp1246:
	.loc	0 241 25 is_stmt 0              # x264_src/common/pixel.c:241:25
	movzbl	(%r14,%rbp), %ecx
	.loc	0 241 23                        # x264_src/common/pixel.c:241:23
	subl	%ecx, %eax
	.loc	0 241 38                        # x264_src/common/pixel.c:241:38
	movzbl	4(%rbx,%rdx), %r10d
	.loc	0 241 48                        # x264_src/common/pixel.c:241:48
	movzbl	4(%r14,%rbp), %ecx
	.loc	0 241 46                        # x264_src/common/pixel.c:241:46
	subl	%ecx, %r10d
	.loc	0 241 57                        # x264_src/common/pixel.c:241:57
	shll	$16, %r10d
	.loc	0 241 34                        # x264_src/common/pixel.c:241:34
	addl	%eax, %r10d
.Ltmp1247:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a0 <- $r10d
	.loc	0 242 15 is_stmt 1              # x264_src/common/pixel.c:242:15
	movzbl	1(%rbx,%rdx), %eax
	.loc	0 242 25 is_stmt 0              # x264_src/common/pixel.c:242:25
	movzbl	1(%r14,%rbp), %ecx
	.loc	0 242 23                        # x264_src/common/pixel.c:242:23
	subl	%ecx, %eax
	.loc	0 242 38                        # x264_src/common/pixel.c:242:38
	movzbl	5(%rbx,%rdx), %ecx
	.loc	0 242 48                        # x264_src/common/pixel.c:242:48
	movzbl	5(%r14,%rbp), %r13d
	.loc	0 242 46                        # x264_src/common/pixel.c:242:46
	subl	%r13d, %ecx
	.loc	0 242 57                        # x264_src/common/pixel.c:242:57
	shll	$16, %ecx
	.loc	0 242 34                        # x264_src/common/pixel.c:242:34
	addl	%eax, %ecx
.Ltmp1248:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a1 <- $ecx
	.loc	0 243 15 is_stmt 1              # x264_src/common/pixel.c:243:15
	movzbl	2(%rbx,%rdx), %r13d
	.loc	0 243 25 is_stmt 0              # x264_src/common/pixel.c:243:25
	movzbl	2(%r14,%rbp), %eax
	.loc	0 243 23                        # x264_src/common/pixel.c:243:23
	subl	%eax, %r13d
	.loc	0 243 38                        # x264_src/common/pixel.c:243:38
	movzbl	6(%rbx,%rdx), %eax
	.loc	0 243 48                        # x264_src/common/pixel.c:243:48
	movzbl	6(%r14,%rbp), %r12d
	.loc	0 243 46                        # x264_src/common/pixel.c:243:46
	subl	%r12d, %eax
	.loc	0 243 57                        # x264_src/common/pixel.c:243:57
	shll	$16, %eax
	.loc	0 243 34                        # x264_src/common/pixel.c:243:34
	addl	%r13d, %eax
.Ltmp1249:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a2 <- $eax
	.loc	0 244 15 is_stmt 1              # x264_src/common/pixel.c:244:15
	movzbl	3(%rbx,%rdx), %r12d
	.loc	0 244 25 is_stmt 0              # x264_src/common/pixel.c:244:25
	movzbl	3(%r14,%rbp), %r13d
	.loc	0 244 23                        # x264_src/common/pixel.c:244:23
	subl	%r13d, %r12d
	.loc	0 244 38                        # x264_src/common/pixel.c:244:38
	movzbl	7(%rbx,%rdx), %edx
.Ltmp1250:
	.loc	0 244 48                        # x264_src/common/pixel.c:244:48
	movzbl	7(%r14,%rbp), %ebx
	.loc	0 244 46                        # x264_src/common/pixel.c:244:46
	subl	%ebx, %edx
	.loc	0 244 57                        # x264_src/common/pixel.c:244:57
	shll	$16, %edx
	.loc	0 244 34                        # x264_src/common/pixel.c:244:34
	addl	%r12d, %edx
.Ltmp1251:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a3 <- $edx
	.loc	0 245 9 is_stmt 1               # x264_src/common/pixel.c:245:9
	leal	(%rcx,%r10), %ebx
.Ltmp1252:
	#DEBUG_VALUE: t0 <- $ebx
	subl	%ecx, %r10d
.Ltmp1253:
	#DEBUG_VALUE: t1 <- $r10d
	leal	(%rdx,%rax), %ecx
.Ltmp1254:
	#DEBUG_VALUE: t2 <- $ecx
	subl	%edx, %eax
.Ltmp1255:
	#DEBUG_VALUE: t3 <- $eax
	leal	(%rcx,%rbx), %edx
.Ltmp1256:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_LLVM_fragment 384 32] $edx
	subl	%ecx, %ebx
.Ltmp1257:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_LLVM_fragment 448 32] $ebx
	leal	(%rax,%r10), %ebp
.Ltmp1258:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_LLVM_fragment 416 32] $ebp
	subl	%eax, %r10d
.Ltmp1259:
	#DEBUG_VALUE: x264_pixel_satd_8x4:tmp <- [DW_OP_LLVM_fragment 480 32] $r10d
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: x264_pixel_satd_8x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: x264_pixel_satd_8x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	.loc	0 0 9 is_stmt 0                 # x264_src/common/pixel.c:0:9
	movq	-48(%rsp), %rax                 # 8-byte Reload
.Ltmp1260:
	.loc	0 249 9 is_stmt 1               # x264_src/common/pixel.c:249:9
	leal	(%rax,%r9), %r14d
.Ltmp1261:
	#DEBUG_VALUE: t0 <- $r14d
	subl	%eax, %r9d
.Ltmp1262:
	#DEBUG_VALUE: t1 <- $r9d
	leal	(%rdx,%rsi), %ecx
.Ltmp1263:
	#DEBUG_VALUE: t2 <- $ecx
	subl	%edx, %esi
.Ltmp1264:
	#DEBUG_VALUE: t3 <- $esi
	leal	(%rcx,%r14), %eax
.Ltmp1265:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a0 <- $eax
	subl	%ecx, %r14d
.Ltmp1266:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a2 <- $r14d
	leal	(%rsi,%r9), %r13d
.Ltmp1267:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a1 <- $r13d
	subl	%esi, %r9d
.Ltmp1268:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a3 <- $r9d
	#DEBUG_VALUE: abs2:a <- $eax
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%eax, %ecx
.Ltmp1269:
	shrl	$15, %ecx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %ecx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%ecx, %edx
.Ltmp1270:
	shll	$16, %edx
	subl	%ecx, %edx
.Ltmp1271:
	#DEBUG_VALUE: abs2:s <- $edx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%edx, %eax
.Ltmp1272:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%edx, %eax
.Ltmp1273:
	#DEBUG_VALUE: abs2:a <- $r13d
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%r13d, %ecx
	shrl	$15, %ecx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %ecx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%ecx, %edx
.Ltmp1274:
	shll	$16, %edx
	subl	%ecx, %edx
.Ltmp1275:
	#DEBUG_VALUE: abs2:s <- $edx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%edx, %r13d
.Ltmp1276:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%edx, %r13d
.Ltmp1277:
	#DEBUG_VALUE: abs2:a <- $r14d
	.loc	0 250 36 is_stmt 1              # x264_src/common/pixel.c:250:36
	addl	%eax, %r13d
.Ltmp1278:
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%r14d, %eax
	shrl	$15, %eax
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %eax                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%eax, %ecx
	shll	$16, %ecx
	subl	%eax, %ecx
.Ltmp1279:
	#DEBUG_VALUE: abs2:s <- $ecx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%ecx, %r14d
.Ltmp1280:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%ecx, %r14d
.Ltmp1281:
	#DEBUG_VALUE: abs2:a <- $r9d
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%r9d, %eax
	shrl	$15, %eax
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %eax                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%eax, %ecx
.Ltmp1282:
	shll	$16, %ecx
	subl	%eax, %ecx
.Ltmp1283:
	#DEBUG_VALUE: abs2:s <- $ecx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%ecx, %r9d
.Ltmp1284:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%ecx, %r9d
.Ltmp1285:
	.loc	0 250 47 is_stmt 1              # x264_src/common/pixel.c:250:47
	addl	%r14d, %r9d
	.loc	0 250 13 is_stmt 0              # x264_src/common/pixel.c:250:13
	addl	%r13d, %r9d
.Ltmp1286:
	#DEBUG_VALUE: x264_pixel_satd_8x4:sum <- $r9d
	#DEBUG_VALUE: i <- 1
	.loc	0 0 13                          # x264_src/common/pixel.c:0:13
	movq	-24(%rsp), %r12                 # 8-byte Reload
	movq	-32(%rsp), %rax                 # 8-byte Reload
.Ltmp1287:
	.loc	0 249 9 is_stmt 1               # x264_src/common/pixel.c:249:9
	leal	(%rax,%r12), %r14d
.Ltmp1288:
	#DEBUG_VALUE: t0 <- $r14d
	subl	%eax, %r12d
.Ltmp1289:
	#DEBUG_VALUE: t1 <- $r12d
	.loc	0 0 9 is_stmt 0                 # x264_src/common/pixel.c:0:9
	movq	-40(%rsp), %rcx                 # 8-byte Reload
.Ltmp1290:
	.loc	0 249 9                         # x264_src/common/pixel.c:249:9
	leal	(%rcx,%rbp), %eax
.Ltmp1291:
	#DEBUG_VALUE: t2 <- $eax
	subl	%ebp, %ecx
.Ltmp1292:
	#DEBUG_VALUE: t3 <- $ecx
	.loc	0 0 9                           # x264_src/common/pixel.c:0:9
	movq	%rcx, %rdx
.Ltmp1293:
	.loc	0 249 9                         # x264_src/common/pixel.c:249:9
	leal	(%rax,%r14), %ecx
.Ltmp1294:
	#DEBUG_VALUE: t3 <- $edx
	#DEBUG_VALUE: x264_pixel_satd_8x4:a0 <- $ecx
	subl	%eax, %r14d
.Ltmp1295:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a2 <- $r14d
	leal	(%rdx,%r12), %eax
.Ltmp1296:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a1 <- $eax
	subl	%edx, %r12d
.Ltmp1297:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a3 <- $r12d
	#DEBUG_VALUE: abs2:a <- $ecx
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%ecx, %edx
.Ltmp1298:
	shrl	$15, %edx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %edx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%edx, %esi
	shll	$16, %esi
	subl	%edx, %esi
.Ltmp1299:
	#DEBUG_VALUE: abs2:s <- $esi
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%esi, %ecx
.Ltmp1300:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%esi, %ecx
.Ltmp1301:
	#DEBUG_VALUE: abs2:a <- $eax
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%eax, %edx
	shrl	$15, %edx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %edx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%edx, %esi
.Ltmp1302:
	shll	$16, %esi
	subl	%edx, %esi
.Ltmp1303:
	#DEBUG_VALUE: abs2:s <- $esi
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%esi, %eax
.Ltmp1304:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%esi, %eax
.Ltmp1305:
	#DEBUG_VALUE: abs2:a <- $r14d
	.loc	0 250 25 is_stmt 1              # x264_src/common/pixel.c:250:25
	addl	%ecx, %eax
.Ltmp1306:
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%r14d, %ecx
	shrl	$15, %ecx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %ecx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%ecx, %edx
	shll	$16, %edx
	subl	%ecx, %edx
.Ltmp1307:
	#DEBUG_VALUE: abs2:s <- $edx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%edx, %r14d
.Ltmp1308:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%edx, %r14d
.Ltmp1309:
	#DEBUG_VALUE: abs2:a <- $r12d
	.loc	0 250 36 is_stmt 1              # x264_src/common/pixel.c:250:36
	addl	%eax, %r14d
	.loc	0 250 47 is_stmt 0              # x264_src/common/pixel.c:250:47
	addl	%r9d, %r14d
.Ltmp1310:
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%r12d, %eax
	shrl	$15, %eax
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %eax                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%eax, %ecx
	shll	$16, %ecx
	subl	%eax, %ecx
.Ltmp1311:
	#DEBUG_VALUE: abs2:s <- $ecx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%ecx, %r12d
.Ltmp1312:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%ecx, %r12d
.Ltmp1313:
	#DEBUG_VALUE: x264_pixel_satd_8x4:sum <- undef
	#DEBUG_VALUE: i <- 2
	.loc	0 0 17                          # x264_src/common/pixel.c:0:17
	movq	-8(%rsp), %rdx                  # 8-byte Reload
.Ltmp1314:
	movq	-16(%rsp), %rax                 # 8-byte Reload
.Ltmp1315:
	.loc	0 249 9 is_stmt 1               # x264_src/common/pixel.c:249:9
	leal	(%rax,%rdx), %r9d
.Ltmp1316:
	#DEBUG_VALUE: t0 <- $r9d
	subl	%eax, %edx
.Ltmp1317:
	#DEBUG_VALUE: t1 <- $edx
	leal	(%rbx,%r15), %eax
.Ltmp1318:
	#DEBUG_VALUE: t2 <- $eax
	subl	%ebx, %r15d
.Ltmp1319:
	#DEBUG_VALUE: t3 <- $r15d
	leal	(%rax,%r9), %ecx
.Ltmp1320:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a0 <- $ecx
	subl	%eax, %r9d
.Ltmp1321:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a2 <- $r9d
	leal	(%r15,%rdx), %eax
.Ltmp1322:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a1 <- $eax
	subl	%r15d, %edx
.Ltmp1323:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a3 <- $edx
	#DEBUG_VALUE: abs2:a <- $ecx
	.loc	0 0 9 is_stmt 0                 # x264_src/common/pixel.c:0:9
	movq	%rdx, %rbx
.Ltmp1324:
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%ecx, %edx
.Ltmp1325:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a3 <- $ebx
	shrl	$15, %edx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %edx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%edx, %esi
.Ltmp1326:
	shll	$16, %esi
	subl	%edx, %esi
.Ltmp1327:
	#DEBUG_VALUE: abs2:s <- $esi
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%esi, %ecx
.Ltmp1328:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%esi, %ecx
.Ltmp1329:
	#DEBUG_VALUE: abs2:a <- $eax
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%eax, %edx
	shrl	$15, %edx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %edx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%edx, %esi
.Ltmp1330:
	shll	$16, %esi
	subl	%edx, %esi
.Ltmp1331:
	#DEBUG_VALUE: abs2:s <- $esi
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%esi, %eax
.Ltmp1332:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%esi, %eax
.Ltmp1333:
	#DEBUG_VALUE: abs2:a <- $r9d
	.loc	0 250 13 is_stmt 1              # x264_src/common/pixel.c:250:13
	addl	%r12d, %eax
	.loc	0 250 25 is_stmt 0              # x264_src/common/pixel.c:250:25
	addl	%ecx, %eax
.Ltmp1334:
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%r9d, %ecx
	shrl	$15, %ecx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %ecx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%ecx, %edx
	shll	$16, %edx
	subl	%ecx, %edx
.Ltmp1335:
	#DEBUG_VALUE: abs2:s <- $edx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%edx, %r9d
.Ltmp1336:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%edx, %r9d
.Ltmp1337:
	#DEBUG_VALUE: abs2:a <- $ebx
	.loc	0 250 36 is_stmt 1              # x264_src/common/pixel.c:250:36
	addl	%eax, %r9d
	.loc	0 250 47 is_stmt 0              # x264_src/common/pixel.c:250:47
	addl	%r14d, %r9d
.Ltmp1338:
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%ebx, %eax
	shrl	$15, %eax
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %eax                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%eax, %ecx
	shll	$16, %ecx
	subl	%eax, %ecx
.Ltmp1339:
	#DEBUG_VALUE: abs2:s <- $ecx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%ecx, %ebx
.Ltmp1340:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%ecx, %ebx
.Ltmp1341:
	#DEBUG_VALUE: x264_pixel_satd_8x4:sum <- undef
	#DEBUG_VALUE: i <- 3
	.loc	0 249 9 is_stmt 1               # x264_src/common/pixel.c:249:9
	leal	(%r11,%r8), %eax
.Ltmp1342:
	#DEBUG_VALUE: t0 <- $eax
	subl	%r11d, %r8d
.Ltmp1343:
	#DEBUG_VALUE: t1 <- $r8d
	leal	(%r10,%rdi), %edx
.Ltmp1344:
	#DEBUG_VALUE: t2 <- $edx
	subl	%r10d, %edi
.Ltmp1345:
	#DEBUG_VALUE: t3 <- $edi
	leal	(%rdx,%rax), %ecx
.Ltmp1346:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a0 <- $ecx
	subl	%edx, %eax
.Ltmp1347:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a2 <- $eax
	leal	(%rdi,%r8), %esi
.Ltmp1348:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a1 <- $esi
	subl	%edi, %r8d
.Ltmp1349:
	#DEBUG_VALUE: x264_pixel_satd_8x4:a3 <- $r8d
	#DEBUG_VALUE: abs2:a <- $ecx
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%ecx, %edx
.Ltmp1350:
	shrl	$15, %edx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %edx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%edx, %edi
.Ltmp1351:
	shll	$16, %edi
	subl	%edx, %edi
.Ltmp1352:
	#DEBUG_VALUE: abs2:s <- $edi
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%edi, %ecx
.Ltmp1353:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%edi, %ecx
.Ltmp1354:
	#DEBUG_VALUE: abs2:a <- $esi
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%esi, %edx
	shrl	$15, %edx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %edx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%edx, %edi
.Ltmp1355:
	shll	$16, %edi
	subl	%edx, %edi
.Ltmp1356:
	#DEBUG_VALUE: abs2:s <- $edi
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%edi, %esi
.Ltmp1357:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%edi, %esi
.Ltmp1358:
	#DEBUG_VALUE: abs2:a <- $eax
	.loc	0 250 13 is_stmt 1              # x264_src/common/pixel.c:250:13
	addl	%ebx, %esi
	.loc	0 250 25 is_stmt 0              # x264_src/common/pixel.c:250:25
	addl	%ecx, %esi
.Ltmp1359:
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%eax, %ecx
	shrl	$15, %ecx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %ecx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%ecx, %edx
	shll	$16, %edx
	subl	%ecx, %edx
.Ltmp1360:
	#DEBUG_VALUE: abs2:s <- $edx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%edx, %eax
.Ltmp1361:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%edx, %eax
.Ltmp1362:
	#DEBUG_VALUE: abs2:a <- $r8d
	.loc	0 250 36 is_stmt 1              # x264_src/common/pixel.c:250:36
	addl	%esi, %eax
.Ltmp1363:
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%r8d, %ecx
	shrl	$15, %ecx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %ecx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%ecx, %edx
.Ltmp1364:
	shll	$16, %edx
	subl	%ecx, %edx
.Ltmp1365:
	#DEBUG_VALUE: abs2:s <- $edx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%edx, %r8d
.Ltmp1366:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%edx, %r8d
.Ltmp1367:
	.loc	0 250 47 is_stmt 1              # x264_src/common/pixel.c:250:47
	addl	%eax, %r8d
	.loc	0 250 13 is_stmt 0              # x264_src/common/pixel.c:250:13
	addl	%r9d, %r8d
.Ltmp1368:
	#DEBUG_VALUE: x264_pixel_satd_8x4:sum <- $r8d
	#DEBUG_VALUE: i <- 4
	.loc	0 252 52 is_stmt 1              # x264_src/common/pixel.c:252:52
	movzwl	%r8w, %eax
	.loc	0 252 45 is_stmt 0              # x264_src/common/pixel.c:252:45
	movl	%r8d, %ecx
	shrl	$16, %ecx
	.loc	0 252 52                        # x264_src/common/pixel.c:252:52
	addl	%ecx, %eax
	shrl	%eax
	.loc	0 252 5 epilogue_begin          # x264_src/common/pixel.c:252:5
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp1369:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1370:
.Lfunc_end35:
	.size	x264_pixel_satd_8x4, .Lfunc_end35-x264_pixel_satd_8x4
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_4x8
	.type	x264_pixel_satd_4x8,@function
x264_pixel_satd_4x8:                    # @x264_pixel_satd_4x8
.Lfunc_begin36:
	.loc	0 275 0 is_stmt 1               # x264_src/common/pixel.c:275:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix2 <- $ecx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%ecx, %ebx
	movq	%rdx, %r14
	movl	%esi, %r15d
	movq	%rdi, %r12
.Ltmp1371:
	.loc	0 275 1 prologue_end            # x264_src/common/pixel.c:275:1
	callq	x264_pixel_satd_4x4
.Ltmp1372:
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix2 <- $r14
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix1 <- $r15d
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix1 <- $r12
	movl	%eax, %ebp
	leal	(,%r15,4), %eax
	movslq	%eax, %rdi
	addq	%r12, %rdi
	leal	(,%rbx,4), %eax
	movslq	%eax, %rdx
	addq	%r14, %rdx
	movl	%r15d, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_4x4
.Ltmp1373:
	addl	%ebp, %eax
.Ltmp1374:
	#DEBUG_VALUE: x264_pixel_satd_4x8:sum <- $eax
	.loc	0 275 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:275:1
	popq	%rbx
.Ltmp1375:
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	.cfi_def_cfa_offset 40
	popq	%r12
.Ltmp1376:
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1377:
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix2 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1378:
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1379:
.Lfunc_end36:
	.size	x264_pixel_satd_4x8, .Lfunc_end36-x264_pixel_satd_4x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_4x4
	.type	x264_pixel_satd_4x4,@function
x264_pixel_satd_4x4:                    # @x264_pixel_satd_4x4
.Lfunc_begin37:
	.loc	0 210 0 is_stmt 1               # x264_src/common/pixel.c:210:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_4x4:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_4x4:i_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_satd_4x4:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_4x4:i_pix2 <- $ecx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp1380:
	#DEBUG_VALUE: x264_pixel_satd_4x4:sum <- 0
	#DEBUG_VALUE: i <- 0
	movslq	%esi, %r8
	movslq	%ecx, %r9
	#DEBUG_VALUE: i <- 0
.Ltmp1381:
	.loc	0 216 14 prologue_end           # x264_src/common/pixel.c:216:14
	movzbl	(%rdi), %eax
	.loc	0 216 24 is_stmt 0              # x264_src/common/pixel.c:216:24
	movzbl	(%rdx), %ecx
.Ltmp1382:
	#DEBUG_VALUE: x264_pixel_satd_4x4:i_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	.loc	0 216 22                        # x264_src/common/pixel.c:216:22
	subl	%ecx, %eax
.Ltmp1383:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a0 <- $eax
	.loc	0 217 14 is_stmt 1              # x264_src/common/pixel.c:217:14
	movzbl	1(%rdi), %ecx
	.loc	0 217 24 is_stmt 0              # x264_src/common/pixel.c:217:24
	movzbl	1(%rdx), %esi
.Ltmp1384:
	#DEBUG_VALUE: x264_pixel_satd_4x4:i_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	.loc	0 217 22                        # x264_src/common/pixel.c:217:22
	subl	%esi, %ecx
.Ltmp1385:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a1 <- $ecx
	.loc	0 218 17 is_stmt 1              # x264_src/common/pixel.c:218:17
	leal	(%rcx,%rax), %esi
	.loc	0 218 28 is_stmt 0              # x264_src/common/pixel.c:218:28
	subl	%ecx, %eax
.Ltmp1386:
	.loc	0 218 32                        # x264_src/common/pixel.c:218:32
	shll	$16, %eax
	.loc	0 218 22                        # x264_src/common/pixel.c:218:22
	addl	%esi, %eax
.Ltmp1387:
	#DEBUG_VALUE: x264_pixel_satd_4x4:b0 <- $eax
	.loc	0 219 14 is_stmt 1              # x264_src/common/pixel.c:219:14
	movzbl	2(%rdi), %esi
	.loc	0 219 24 is_stmt 0              # x264_src/common/pixel.c:219:24
	movzbl	2(%rdx), %ecx
.Ltmp1388:
	.loc	0 219 22                        # x264_src/common/pixel.c:219:22
	subl	%ecx, %esi
.Ltmp1389:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a2 <- $esi
	.loc	0 220 14 is_stmt 1              # x264_src/common/pixel.c:220:14
	movzbl	3(%rdi), %ecx
	.loc	0 220 24 is_stmt 0              # x264_src/common/pixel.c:220:24
	movzbl	3(%rdx), %r10d
	.loc	0 220 22                        # x264_src/common/pixel.c:220:22
	subl	%r10d, %ecx
.Ltmp1390:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a3 <- $ecx
	.loc	0 221 17 is_stmt 1              # x264_src/common/pixel.c:221:17
	leal	(%rcx,%rsi), %r10d
	.loc	0 221 28 is_stmt 0              # x264_src/common/pixel.c:221:28
	subl	%ecx, %esi
.Ltmp1391:
	.loc	0 221 32                        # x264_src/common/pixel.c:221:32
	shll	$16, %esi
	.loc	0 221 22                        # x264_src/common/pixel.c:221:22
	addl	%r10d, %esi
.Ltmp1392:
	#DEBUG_VALUE: x264_pixel_satd_4x4:b1 <- $esi
	.loc	0 222 24 is_stmt 1              # x264_src/common/pixel.c:222:24
	leal	(%rsi,%rax), %ecx
.Ltmp1393:
	#DEBUG_VALUE: x264_pixel_satd_4x4:tmp <- [DW_OP_LLVM_fragment 0 32] $ecx
	.loc	0 223 24                        # x264_src/common/pixel.c:223:24
	subl	%esi, %eax
.Ltmp1394:
	#DEBUG_VALUE: x264_pixel_satd_4x4:tmp <- [DW_OP_LLVM_fragment 32 32] $eax
	#DEBUG_VALUE: i <- 1
	.loc	0 214 38                        # x264_src/common/pixel.c:214:38
	leaq	(%rdi,%r8), %r11
.Ltmp1395:
	#DEBUG_VALUE: x264_pixel_satd_4x4:pix1 <- $r11
	.loc	0 214 54 is_stmt 0              # x264_src/common/pixel.c:214:54
	leaq	(%rdx,%r9), %rbx
.Ltmp1396:
	#DEBUG_VALUE: x264_pixel_satd_4x4:pix2 <- $rbx
	.loc	0 216 14 is_stmt 1              # x264_src/common/pixel.c:216:14
	movzbl	(%rdi,%r8), %esi
.Ltmp1397:
	.loc	0 216 24 is_stmt 0              # x264_src/common/pixel.c:216:24
	movzbl	(%rdx,%r9), %r10d
	.loc	0 216 22                        # x264_src/common/pixel.c:216:22
	subl	%r10d, %esi
.Ltmp1398:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a0 <- $esi
	.loc	0 217 14 is_stmt 1              # x264_src/common/pixel.c:217:14
	movzbl	1(%rdi,%r8), %r10d
	.loc	0 217 24 is_stmt 0              # x264_src/common/pixel.c:217:24
	movzbl	1(%rdx,%r9), %ebp
	.loc	0 217 22                        # x264_src/common/pixel.c:217:22
	subl	%ebp, %r10d
.Ltmp1399:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a1 <- $r10d
	.loc	0 218 17 is_stmt 1              # x264_src/common/pixel.c:218:17
	leal	(%r10,%rsi), %ebp
	.loc	0 218 28 is_stmt 0              # x264_src/common/pixel.c:218:28
	subl	%r10d, %esi
.Ltmp1400:
	.loc	0 218 32                        # x264_src/common/pixel.c:218:32
	shll	$16, %esi
	.loc	0 218 22                        # x264_src/common/pixel.c:218:22
	addl	%ebp, %esi
.Ltmp1401:
	#DEBUG_VALUE: x264_pixel_satd_4x4:b0 <- $esi
	.loc	0 219 14 is_stmt 1              # x264_src/common/pixel.c:219:14
	movzbl	2(%rdi,%r8), %r14d
	.loc	0 219 24 is_stmt 0              # x264_src/common/pixel.c:219:24
	movzbl	2(%rdx,%r9), %r10d
.Ltmp1402:
	.loc	0 219 22                        # x264_src/common/pixel.c:219:22
	subl	%r10d, %r14d
.Ltmp1403:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a2 <- $r14d
	.loc	0 220 14 is_stmt 1              # x264_src/common/pixel.c:220:14
	movzbl	3(%rdi,%r8), %edi
	.loc	0 220 24 is_stmt 0              # x264_src/common/pixel.c:220:24
	movzbl	3(%rdx,%r9), %edx
	.loc	0 220 22                        # x264_src/common/pixel.c:220:22
	subl	%edx, %edi
.Ltmp1404:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a3 <- $edi
	.loc	0 221 17 is_stmt 1              # x264_src/common/pixel.c:221:17
	leal	(%rdi,%r14), %edx
	.loc	0 221 28 is_stmt 0              # x264_src/common/pixel.c:221:28
	subl	%edi, %r14d
.Ltmp1405:
	.loc	0 221 32                        # x264_src/common/pixel.c:221:32
	shll	$16, %r14d
	.loc	0 221 22                        # x264_src/common/pixel.c:221:22
	addl	%edx, %r14d
.Ltmp1406:
	#DEBUG_VALUE: x264_pixel_satd_4x4:b1 <- $r14d
	.loc	0 222 24 is_stmt 1              # x264_src/common/pixel.c:222:24
	leal	(%r14,%rsi), %r10d
.Ltmp1407:
	#DEBUG_VALUE: x264_pixel_satd_4x4:tmp <- [DW_OP_LLVM_fragment 64 32] $r10d
	.loc	0 223 24                        # x264_src/common/pixel.c:223:24
	subl	%r14d, %esi
.Ltmp1408:
	#DEBUG_VALUE: x264_pixel_satd_4x4:tmp <- [DW_OP_LLVM_fragment 96 32] $esi
	#DEBUG_VALUE: i <- 2
	.loc	0 214 38                        # x264_src/common/pixel.c:214:38
	leaq	(%r11,%r8), %r14
.Ltmp1409:
	#DEBUG_VALUE: x264_pixel_satd_4x4:pix1 <- $r14
	.loc	0 214 54 is_stmt 0              # x264_src/common/pixel.c:214:54
	leaq	(%rbx,%r9), %r15
.Ltmp1410:
	#DEBUG_VALUE: x264_pixel_satd_4x4:pix2 <- $r15
	.loc	0 216 14 is_stmt 1              # x264_src/common/pixel.c:216:14
	movzbl	(%r8,%r11), %edx
	.loc	0 216 24 is_stmt 0              # x264_src/common/pixel.c:216:24
	movzbl	(%r9,%rbx), %edi
.Ltmp1411:
	.loc	0 216 22                        # x264_src/common/pixel.c:216:22
	subl	%edi, %edx
.Ltmp1412:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a0 <- $edx
	.loc	0 217 14 is_stmt 1              # x264_src/common/pixel.c:217:14
	movzbl	1(%r8,%r11), %edi
	.loc	0 217 24 is_stmt 0              # x264_src/common/pixel.c:217:24
	movzbl	1(%r9,%rbx), %ebp
	.loc	0 217 22                        # x264_src/common/pixel.c:217:22
	subl	%ebp, %edi
.Ltmp1413:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a1 <- $edi
	.loc	0 218 17 is_stmt 1              # x264_src/common/pixel.c:218:17
	leal	(%rdi,%rdx), %ebp
	.loc	0 218 28 is_stmt 0              # x264_src/common/pixel.c:218:28
	subl	%edi, %edx
.Ltmp1414:
	.loc	0 218 32                        # x264_src/common/pixel.c:218:32
	shll	$16, %edx
	.loc	0 218 22                        # x264_src/common/pixel.c:218:22
	addl	%ebp, %edx
.Ltmp1415:
	#DEBUG_VALUE: x264_pixel_satd_4x4:b0 <- $edx
	.loc	0 219 14 is_stmt 1              # x264_src/common/pixel.c:219:14
	movzbl	2(%r8,%r11), %edi
.Ltmp1416:
	.loc	0 219 24 is_stmt 0              # x264_src/common/pixel.c:219:24
	movzbl	2(%r9,%rbx), %ebp
	.loc	0 219 22                        # x264_src/common/pixel.c:219:22
	subl	%ebp, %edi
.Ltmp1417:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a2 <- $edi
	.loc	0 220 14 is_stmt 1              # x264_src/common/pixel.c:220:14
	movzbl	3(%r8,%r11), %r11d
	.loc	0 220 24 is_stmt 0              # x264_src/common/pixel.c:220:24
	movzbl	3(%r9,%rbx), %ebx
	.loc	0 220 22                        # x264_src/common/pixel.c:220:22
	subl	%ebx, %r11d
.Ltmp1418:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a3 <- $r11d
	.loc	0 221 17 is_stmt 1              # x264_src/common/pixel.c:221:17
	leal	(%r11,%rdi), %ebx
	.loc	0 221 28 is_stmt 0              # x264_src/common/pixel.c:221:28
	subl	%r11d, %edi
.Ltmp1419:
	.loc	0 221 32                        # x264_src/common/pixel.c:221:32
	shll	$16, %edi
	.loc	0 221 22                        # x264_src/common/pixel.c:221:22
	addl	%ebx, %edi
.Ltmp1420:
	#DEBUG_VALUE: x264_pixel_satd_4x4:b1 <- $edi
	.loc	0 222 24 is_stmt 1              # x264_src/common/pixel.c:222:24
	leal	(%rdi,%rdx), %r11d
.Ltmp1421:
	#DEBUG_VALUE: x264_pixel_satd_4x4:tmp <- [DW_OP_LLVM_fragment 128 32] $r11d
	.loc	0 223 24                        # x264_src/common/pixel.c:223:24
	subl	%edi, %edx
.Ltmp1422:
	#DEBUG_VALUE: x264_pixel_satd_4x4:tmp <- [DW_OP_LLVM_fragment 160 32] $edx
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: x264_pixel_satd_4x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r14, $r8
	#DEBUG_VALUE: x264_pixel_satd_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r15, $r9
	.loc	0 216 14                        # x264_src/common/pixel.c:216:14
	movzbl	(%r8,%r14), %edi
.Ltmp1423:
	.loc	0 216 24 is_stmt 0              # x264_src/common/pixel.c:216:24
	movzbl	(%r9,%r15), %ebx
	.loc	0 216 22                        # x264_src/common/pixel.c:216:22
	subl	%ebx, %edi
.Ltmp1424:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a0 <- $edi
	.loc	0 217 14 is_stmt 1              # x264_src/common/pixel.c:217:14
	movzbl	1(%r8,%r14), %ebx
	.loc	0 217 24 is_stmt 0              # x264_src/common/pixel.c:217:24
	movzbl	1(%r9,%r15), %ebp
	.loc	0 217 22                        # x264_src/common/pixel.c:217:22
	subl	%ebp, %ebx
.Ltmp1425:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a1 <- $ebx
	.loc	0 218 17 is_stmt 1              # x264_src/common/pixel.c:218:17
	leal	(%rbx,%rdi), %ebp
	.loc	0 218 28 is_stmt 0              # x264_src/common/pixel.c:218:28
	subl	%ebx, %edi
.Ltmp1426:
	.loc	0 218 32                        # x264_src/common/pixel.c:218:32
	shll	$16, %edi
	.loc	0 218 22                        # x264_src/common/pixel.c:218:22
	addl	%ebp, %edi
.Ltmp1427:
	#DEBUG_VALUE: x264_pixel_satd_4x4:b0 <- $edi
	.loc	0 219 14 is_stmt 1              # x264_src/common/pixel.c:219:14
	movzbl	2(%r8,%r14), %ebx
.Ltmp1428:
	.loc	0 219 24 is_stmt 0              # x264_src/common/pixel.c:219:24
	movzbl	2(%r9,%r15), %ebp
	.loc	0 219 22                        # x264_src/common/pixel.c:219:22
	subl	%ebp, %ebx
.Ltmp1429:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a2 <- $ebx
	.loc	0 220 14 is_stmt 1              # x264_src/common/pixel.c:220:14
	movzbl	3(%r8,%r14), %r8d
.Ltmp1430:
	.loc	0 220 24 is_stmt 0              # x264_src/common/pixel.c:220:24
	movzbl	3(%r9,%r15), %r9d
.Ltmp1431:
	.loc	0 220 22                        # x264_src/common/pixel.c:220:22
	subl	%r9d, %r8d
.Ltmp1432:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a3 <- $r8d
	.loc	0 221 17 is_stmt 1              # x264_src/common/pixel.c:221:17
	leal	(%r8,%rbx), %r9d
	.loc	0 221 28 is_stmt 0              # x264_src/common/pixel.c:221:28
	subl	%r8d, %ebx
.Ltmp1433:
	.loc	0 221 32                        # x264_src/common/pixel.c:221:32
	shll	$16, %ebx
	.loc	0 221 22                        # x264_src/common/pixel.c:221:22
	addl	%r9d, %ebx
.Ltmp1434:
	#DEBUG_VALUE: x264_pixel_satd_4x4:b1 <- $ebx
	.loc	0 222 24 is_stmt 1              # x264_src/common/pixel.c:222:24
	leal	(%rbx,%rdi), %r9d
.Ltmp1435:
	#DEBUG_VALUE: x264_pixel_satd_4x4:tmp <- [DW_OP_LLVM_fragment 192 32] $r9d
	.loc	0 223 24                        # x264_src/common/pixel.c:223:24
	subl	%ebx, %edi
.Ltmp1436:
	#DEBUG_VALUE: x264_pixel_satd_4x4:tmp <- [DW_OP_LLVM_fragment 224 32] $edi
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: x264_pixel_satd_4x4:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: x264_pixel_satd_4x4:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	.loc	0 227 9                         # x264_src/common/pixel.c:227:9
	leal	(%r10,%rcx), %r8d
.Ltmp1437:
	#DEBUG_VALUE: t0 <- $r8d
	subl	%r10d, %ecx
.Ltmp1438:
	#DEBUG_VALUE: t1 <- $ecx
	leal	(%r9,%r11), %ebx
.Ltmp1439:
	#DEBUG_VALUE: t2 <- $ebx
	subl	%r9d, %r11d
.Ltmp1440:
	#DEBUG_VALUE: t3 <- $r11d
	leal	(%rbx,%r8), %r10d
.Ltmp1441:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a0 <- $r10d
	subl	%ebx, %r8d
.Ltmp1442:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a2 <- $r8d
	leal	(%r11,%rcx), %r9d
.Ltmp1443:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a1 <- $r9d
	subl	%r11d, %ecx
.Ltmp1444:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a3 <- $ecx
	#DEBUG_VALUE: abs2:a <- $r10d
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%r10d, %r11d
.Ltmp1445:
	shrl	$15, %r11d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r11d                   # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r11d, %ebx
.Ltmp1446:
	shll	$16, %ebx
	subl	%r11d, %ebx
.Ltmp1447:
	#DEBUG_VALUE: abs2:s <- $ebx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%ebx, %r10d
.Ltmp1448:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%ebx, %r10d
.Ltmp1449:
	#DEBUG_VALUE: abs2:a <- $r9d
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%r9d, %r11d
	shrl	$15, %r11d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r11d                   # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r11d, %ebx
.Ltmp1450:
	shll	$16, %ebx
	subl	%r11d, %ebx
.Ltmp1451:
	#DEBUG_VALUE: abs2:s <- $ebx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%ebx, %r9d
.Ltmp1452:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%ebx, %r9d
.Ltmp1453:
	.loc	0 228 23 is_stmt 1              # x264_src/common/pixel.c:228:23
	addl	%r10d, %r9d
.Ltmp1454:
	#DEBUG_VALUE: abs2:a <- $r8d
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%r8d, %r10d
	shrl	$15, %r10d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r10d                   # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r10d, %r11d
	shll	$16, %r11d
	subl	%r10d, %r11d
.Ltmp1455:
	#DEBUG_VALUE: abs2:s <- $r11d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r11d, %r8d
.Ltmp1456:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r11d, %r8d
.Ltmp1457:
	#DEBUG_VALUE: abs2:a <- $ecx
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%ecx, %r10d
	shrl	$15, %r10d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r10d                   # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r10d, %r11d
.Ltmp1458:
	shll	$16, %r11d
	subl	%r10d, %r11d
.Ltmp1459:
	#DEBUG_VALUE: abs2:s <- $r11d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r11d, %ecx
.Ltmp1460:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r11d, %ecx
.Ltmp1461:
	.loc	0 228 34 is_stmt 1              # x264_src/common/pixel.c:228:34
	addl	%r8d, %ecx
	.loc	0 228 45 is_stmt 0              # x264_src/common/pixel.c:228:45
	addl	%r9d, %ecx
.Ltmp1462:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a0 <- $ecx
	.loc	0 229 16 is_stmt 1              # x264_src/common/pixel.c:229:16
	movzwl	%cx, %r8d
	.loc	0 229 36 is_stmt 0              # x264_src/common/pixel.c:229:36
	shrl	$16, %ecx
.Ltmp1463:
	.loc	0 229 13                        # x264_src/common/pixel.c:229:13
	addl	%r8d, %ecx
.Ltmp1464:
	#DEBUG_VALUE: x264_pixel_satd_4x4:sum <- $ecx
	#DEBUG_VALUE: i <- 1
	.loc	0 227 9 is_stmt 1               # x264_src/common/pixel.c:227:9
	leal	(%rsi,%rax), %r8d
.Ltmp1465:
	#DEBUG_VALUE: t0 <- $r8d
	subl	%esi, %eax
.Ltmp1466:
	#DEBUG_VALUE: t1 <- $eax
	leal	(%rdi,%rdx), %esi
.Ltmp1467:
	#DEBUG_VALUE: t2 <- $esi
	subl	%edi, %edx
.Ltmp1468:
	#DEBUG_VALUE: t3 <- $edx
	leal	(%rsi,%r8), %edi
.Ltmp1469:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a0 <- $edi
	subl	%esi, %r8d
.Ltmp1470:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a2 <- $r8d
	leal	(%rdx,%rax), %esi
.Ltmp1471:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a1 <- $esi
	subl	%edx, %eax
.Ltmp1472:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a3 <- $eax
	#DEBUG_VALUE: abs2:a <- $edi
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%edi, %edx
.Ltmp1473:
	shrl	$15, %edx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %edx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%edx, %r9d
	shll	$16, %r9d
	subl	%edx, %r9d
.Ltmp1474:
	#DEBUG_VALUE: abs2:s <- $r9d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r9d, %edi
.Ltmp1475:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r9d, %edi
.Ltmp1476:
	#DEBUG_VALUE: abs2:a <- $esi
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%esi, %edx
	shrl	$15, %edx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %edx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%edx, %r9d
.Ltmp1477:
	shll	$16, %r9d
	subl	%edx, %r9d
.Ltmp1478:
	#DEBUG_VALUE: abs2:s <- $r9d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r9d, %esi
.Ltmp1479:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r9d, %esi
.Ltmp1480:
	.loc	0 228 23 is_stmt 1              # x264_src/common/pixel.c:228:23
	addl	%edi, %esi
.Ltmp1481:
	#DEBUG_VALUE: abs2:a <- $r8d
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%r8d, %edx
	shrl	$15, %edx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %edx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%edx, %edi
	shll	$16, %edi
	subl	%edx, %edi
.Ltmp1482:
	#DEBUG_VALUE: abs2:s <- $edi
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%edi, %r8d
.Ltmp1483:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%edi, %r8d
.Ltmp1484:
	#DEBUG_VALUE: abs2:a <- $eax
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%eax, %edx
	shrl	$15, %edx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %edx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%edx, %edi
.Ltmp1485:
	shll	$16, %edi
	subl	%edx, %edi
.Ltmp1486:
	#DEBUG_VALUE: abs2:s <- $edi
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%edi, %eax
.Ltmp1487:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%edi, %eax
.Ltmp1488:
	.loc	0 228 34 is_stmt 1              # x264_src/common/pixel.c:228:34
	addl	%r8d, %eax
	.loc	0 228 45 is_stmt 0              # x264_src/common/pixel.c:228:45
	addl	%esi, %eax
.Ltmp1489:
	#DEBUG_VALUE: x264_pixel_satd_4x4:a0 <- $eax
	.loc	0 229 16 is_stmt 1              # x264_src/common/pixel.c:229:16
	movzwl	%ax, %edx
	.loc	0 229 36 is_stmt 0              # x264_src/common/pixel.c:229:36
	shrl	$16, %eax
.Ltmp1490:
	#DEBUG_VALUE: x264_pixel_satd_4x4:sum <- undef
	#DEBUG_VALUE: i <- 2
	.loc	0 229 31                        # x264_src/common/pixel.c:229:31
	addl	%edx, %eax
.Ltmp1491:
	.loc	0 231 16 is_stmt 1              # x264_src/common/pixel.c:231:16
	addl	%ecx, %eax
	shrl	%eax
                                        # kill: def $eax killed $eax killed $rax
	.loc	0 231 5 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:231:5
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1492:
.Lfunc_end37:
	.size	x264_pixel_satd_4x4, .Lfunc_end37-x264_pixel_satd_4x4
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_x3_16x16
	.type	x264_pixel_satd_x3_16x16,@function
x264_pixel_satd_x3_16x16:               # @x264_pixel_satd_x3_16x16
.Lfunc_begin38:
	.loc	0 446 0 is_stmt 1               # x264_src/common/pixel.c:446:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_x3_16x16:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_x3_16x16:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_x3_16x16:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_x3_16x16:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_satd_x3_16x16:i_stride <- $r8d
	#DEBUG_VALUE: x264_pixel_satd_x3_16x16:scores <- $r9
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, %rbx
	movl	%r8d, %ebp
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %rdx
.Ltmp1493:
	#DEBUG_VALUE: x264_pixel_satd_x3_16x16:pix1 <- $r15
	movq	%rdi, %r12
.Ltmp1494:
	.loc	0 446 1 prologue_end            # x264_src/common/pixel.c:446:1
	movl	$16, %esi
.Ltmp1495:
	#DEBUG_VALUE: x264_pixel_satd_x3_16x16:pix0 <- $rdx
	movl	%r8d, %ecx
.Ltmp1496:
	#DEBUG_VALUE: x264_pixel_satd_x3_16x16:pix2 <- $r14
	callq	x264_pixel_satd_16x16
.Ltmp1497:
	#DEBUG_VALUE: x264_pixel_satd_x3_16x16:scores <- $rbx
	#DEBUG_VALUE: x264_pixel_satd_x3_16x16:i_stride <- $ebp
	#DEBUG_VALUE: x264_pixel_satd_x3_16x16:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_pixel_satd_x3_16x16:fenc <- $r12
	movl	%eax, (%rbx)
	movq	%r12, %rdi
	movl	$16, %esi
	movq	%r15, %rdx
	movl	%ebp, %ecx
	callq	x264_pixel_satd_16x16
.Ltmp1498:
	movl	%eax, 4(%rbx)
	movq	%r12, %rdi
	movl	$16, %esi
	movq	%r14, %rdx
	movl	%ebp, %ecx
	callq	x264_pixel_satd_16x16
.Ltmp1499:
	movl	%eax, 8(%rbx)
	.loc	0 446 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:446:1
	popq	%rbx
.Ltmp1500:
	#DEBUG_VALUE: x264_pixel_satd_x3_16x16:scores <- [DW_OP_LLVM_entry_value 1] $r9
	.cfi_def_cfa_offset 40
	popq	%r12
.Ltmp1501:
	#DEBUG_VALUE: x264_pixel_satd_x3_16x16:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1502:
	#DEBUG_VALUE: x264_pixel_satd_x3_16x16:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1503:
	#DEBUG_VALUE: x264_pixel_satd_x3_16x16:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp1504:
	#DEBUG_VALUE: x264_pixel_satd_x3_16x16:i_stride <- [DW_OP_LLVM_entry_value 1] $r8d
	.cfi_def_cfa_offset 8
	retq
.Ltmp1505:
.Lfunc_end38:
	.size	x264_pixel_satd_x3_16x16, .Lfunc_end38-x264_pixel_satd_x3_16x16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_x3_16x8
	.type	x264_pixel_satd_x3_16x8,@function
x264_pixel_satd_x3_16x8:                # @x264_pixel_satd_x3_16x8
.Lfunc_begin39:
	.loc	0 446 0 is_stmt 1               # x264_src/common/pixel.c:446:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_x3_16x8:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_x3_16x8:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_x3_16x8:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_x3_16x8:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_satd_x3_16x8:i_stride <- $r8d
	#DEBUG_VALUE: x264_pixel_satd_x3_16x8:scores <- $r9
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix2 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix2 <- $r8d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, 40(%rsp)                   # 8-byte Spill
.Ltmp1506:
	#DEBUG_VALUE: x264_pixel_satd_x3_16x8:scores <- [DW_OP_plus_uconst 40] [$rsp+0]
	movl	%r8d, %r14d
	movq	%rcx, 48(%rsp)                  # 8-byte Spill
.Ltmp1507:
	#DEBUG_VALUE: x264_pixel_satd_x3_16x8:pix2 <- [DW_OP_plus_uconst 48] [$rsp+0]
	movq	%rdx, %r13
	movq	%rsi, %r15
	movq	%rdi, %r12
.Ltmp1508:
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix1 <- 16
	.loc	0 272 1 prologue_end            # x264_src/common/pixel.c:272:1
	movl	$16, %esi
.Ltmp1509:
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix2 <- $r15
	#DEBUG_VALUE: x264_pixel_satd_x3_16x8:pix0 <- $r15
	movq	%r15, %rdx
.Ltmp1510:
	#DEBUG_VALUE: x264_pixel_satd_x3_16x8:pix1 <- $r13
	movl	%r8d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1511:
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix2 <- $r14d
	#DEBUG_VALUE: x264_pixel_satd_x3_16x8:i_stride <- $r14d
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix1 <- $r12
	#DEBUG_VALUE: x264_pixel_satd_x3_16x8:fenc <- $r12
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 8(%rsp)                   # 4-byte Spill
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	leaq	64(%r12), %rdi
	movq	%rdi, 32(%rsp)                  # 8-byte Spill
	leal	(,%r14,4), %eax
	movslq	%eax, %rbp
	leaq	(%r15,%rbp), %rdx
	movl	$16, %esi
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1512:
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movl	%eax, 12(%rsp)                  # 4-byte Spill
.Ltmp1513:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	leaq	8(%r12), %rdi
	movq	%rdi, 24(%rsp)                  # 8-byte Spill
	leaq	8(%r15), %rdx
	movl	$16, %esi
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1514:
	movl	%eax, %ebx
	leaq	72(%r12), %rdi
	movq	%rdi, 16(%rsp)                  # 8-byte Spill
	leaq	(%r15,%rbp), %rdx
	addq	$8, %rdx
	movl	$16, %esi
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1515:
	addl	8(%rsp), %ebx                   # 4-byte Folded Reload
.Ltmp1516:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	addl	12(%rsp), %ebx                  # 4-byte Folded Reload
.Ltmp1517:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	addl	%eax, %ebx
.Ltmp1518:
	#DEBUG_VALUE: x264_pixel_satd_16x8:sum <- $ebx
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movq	40(%rsp), %rax                  # 8-byte Reload
.Ltmp1519:
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movl	%ebx, (%rax)
.Ltmp1520:
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix1 <- $r12
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix2 <- $r13
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix2 <- $r14d
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	movq	%r12, %rdi
	movl	$16, %esi
	movq	%r13, %rdx
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1521:
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 8(%rsp)                   # 4-byte Spill
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	movq	%r13, %rdx
	addq	%rbp, %rdx
	movq	32(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1522:
	movl	%eax, %ebx
.Ltmp1523:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	leaq	8(%r13), %rdx
	movq	24(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1524:
	movl	%eax, %r15d
.Ltmp1525:
	#DEBUG_VALUE: x264_pixel_satd_x3_16x8:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	leaq	8(,%rbp), %rdx
	addq	%r13, %rdx
	movq	16(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1526:
	addl	8(%rsp), %r15d                  # 4-byte Folded Reload
.Ltmp1527:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	addl	%ebx, %r15d
.Ltmp1528:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	addl	%eax, %r15d
.Ltmp1529:
	#DEBUG_VALUE: x264_pixel_satd_16x8:sum <- $r15d
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movq	40(%rsp), %r13                  # 8-byte Reload
.Ltmp1530:
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movl	%r15d, 4(%r13)
.Ltmp1531:
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix1 <- $r12
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix2 <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix2 <- $r14d
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	movq	%r12, %rdi
	movl	$16, %esi
	movq	48(%rsp), %rbx                  # 8-byte Reload
	movq	%rbx, %rdx
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1532:
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 8(%rsp)                   # 4-byte Spill
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	leaq	(%rbx,%rbp), %rdx
	movq	32(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1533:
	movl	%eax, %r12d
.Ltmp1534:
	#DEBUG_VALUE: x264_pixel_satd_x3_16x8:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	leaq	8(%rbx), %rdx
	movq	24(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1535:
	movl	%eax, %r15d
.Ltmp1536:
	leaq	(%rbx,%rbp), %rdx
	addq	$8, %rdx
	movq	16(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1537:
	addl	8(%rsp), %r15d                  # 4-byte Folded Reload
.Ltmp1538:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	addl	%r12d, %r15d
.Ltmp1539:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	addl	%eax, %r15d
.Ltmp1540:
	#DEBUG_VALUE: x264_pixel_satd_16x8:sum <- $r15d
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movl	%r15d, 8(%r13)
	.loc	0 446 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:446:1
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp1541:
	#DEBUG_VALUE: x264_pixel_satd_x3_16x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1542:
	#DEBUG_VALUE: x264_pixel_satd_x3_16x8:i_stride <- [DW_OP_LLVM_entry_value 1] $r8d
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1543:
.Lfunc_end39:
	.size	x264_pixel_satd_x3_16x8, .Lfunc_end39-x264_pixel_satd_x3_16x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_x3_8x16
	.type	x264_pixel_satd_x3_8x16,@function
x264_pixel_satd_x3_8x16:                # @x264_pixel_satd_x3_8x16
.Lfunc_begin40:
	.loc	0 446 0 is_stmt 1               # x264_src/common/pixel.c:446:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_x3_8x16:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_x3_8x16:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_x3_8x16:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_x3_8x16:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_satd_x3_8x16:i_stride <- $r8d
	#DEBUG_VALUE: x264_pixel_satd_x3_8x16:scores <- $r9
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix2 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix2 <- $r8d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, 56(%rsp)                   # 8-byte Spill
.Ltmp1544:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x16:scores <- [DW_OP_plus_uconst 56] [$rsp+0]
	movl	%r8d, %r14d
	movq	%rcx, 64(%rsp)                  # 8-byte Spill
.Ltmp1545:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x16:pix2 <- [DW_OP_plus_uconst 64] [$rsp+0]
	movq	%rdx, %rbx
	movq	%rsi, %r15
	movq	%rdi, %r13
.Ltmp1546:
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix1 <- 16
	.loc	0 273 1 prologue_end            # x264_src/common/pixel.c:273:1
	movl	$16, %esi
.Ltmp1547:
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix2 <- $r15
	#DEBUG_VALUE: x264_pixel_satd_x3_8x16:pix0 <- $r15
	movq	%r15, %rdx
.Ltmp1548:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x16:pix1 <- $rbx
	movl	%r8d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1549:
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix2 <- $r14d
	#DEBUG_VALUE: x264_pixel_satd_x3_8x16:i_stride <- $r14d
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- $r13
	#DEBUG_VALUE: x264_pixel_satd_x3_8x16:fenc <- $r13
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 8(%rsp)                   # 4-byte Spill
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	leaq	64(%r13), %rdi
	movq	%rdi, 48(%rsp)                  # 8-byte Spill
	leal	(,%r14,4), %eax
	movslq	%eax, %rbp
	leaq	(%r15,%rbp), %rdx
	movl	$16, %esi
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1550:
	movl	%eax, %r12d
.Ltmp1551:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	leaq	128(%r13), %rdi
	movq	%rdi, 40(%rsp)                  # 8-byte Spill
	leal	(,%r14,8), %eax
	cltq
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	leaq	(%r15,%rax), %rdx
	movl	$16, %esi
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1552:
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movl	%eax, 12(%rsp)                  # 4-byte Spill
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	leaq	192(%r13), %rdi
	movq	%rdi, 24(%rsp)                  # 8-byte Spill
	leal	(%rbp,%rbp,2), %eax
	cltq
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	addq	%rax, %r15
.Ltmp1553:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x16:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	movl	$16, %esi
	movq	%r15, %rdx
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1554:
	addl	8(%rsp), %r12d                  # 4-byte Folded Reload
.Ltmp1555:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	addl	12(%rsp), %r12d                 # 4-byte Folded Reload
.Ltmp1556:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	addl	%eax, %r12d
.Ltmp1557:
	#DEBUG_VALUE: x264_pixel_satd_8x16:sum <- $r12d
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movq	56(%rsp), %rax                  # 8-byte Reload
.Ltmp1558:
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movl	%r12d, (%rax)
.Ltmp1559:
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- $r13
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix2 <- $rbx
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix2 <- $r14d
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%rbx, %rdx
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1560:
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 8(%rsp)                   # 4-byte Spill
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	leaq	(%rbx,%rbp), %rdx
	movq	48(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1561:
	movl	%eax, %r12d
.Ltmp1562:
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movq	32(%rsp), %rax                  # 8-byte Reload
.Ltmp1563:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	leaq	(%rbx,%rax), %rdx
	movq	40(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1564:
	movl	%eax, %r15d
	addq	16(%rsp), %rbx                  # 8-byte Folded Reload
.Ltmp1565:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x16:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movq	24(%rsp), %rdi                  # 8-byte Reload
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	movl	$16, %esi
	movq	%rbx, %rdx
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1566:
	addl	8(%rsp), %r12d                  # 4-byte Folded Reload
.Ltmp1567:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	addl	%r15d, %r12d
.Ltmp1568:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	addl	%eax, %r12d
.Ltmp1569:
	#DEBUG_VALUE: x264_pixel_satd_8x16:sum <- $r12d
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movq	56(%rsp), %rbx                  # 8-byte Reload
.Ltmp1570:
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movl	%r12d, 4(%rbx)
.Ltmp1571:
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- $r13
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix2 <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix2 <- $r14d
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	movq	%r13, %rdi
	movl	$16, %esi
	movq	64(%rsp), %r13                  # 8-byte Reload
.Ltmp1572:
	movq	%r13, %rdx
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1573:
	movl	%eax, %r12d
.Ltmp1574:
	addq	%r13, %rbp
	movq	48(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movq	%rbp, %rdx
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1575:
	movl	%eax, %ebp
	movq	32(%rsp), %rdx                  # 8-byte Reload
.Ltmp1576:
	.loc	0 273 1 is_stmt 0               # x264_src/common/pixel.c:273:1
	addq	%r13, %rdx
	movq	40(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1577:
	movl	%eax, %r15d
	addq	16(%rsp), %r13                  # 8-byte Folded Reload
.Ltmp1578:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x16:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movq	24(%rsp), %rdi                  # 8-byte Reload
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	movl	$16, %esi
	movq	%r13, %rdx
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1579:
	addl	%r12d, %ebp
.Ltmp1580:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	addl	%r15d, %ebp
.Ltmp1581:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	addl	%eax, %ebp
.Ltmp1582:
	#DEBUG_VALUE: x264_pixel_satd_8x16:sum <- $ebp
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movl	%ebp, 8(%rbx)
	.loc	0 446 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:446:1
	addq	$72, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1583:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x16:i_stride <- [DW_OP_LLVM_entry_value 1] $r8d
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1584:
.Lfunc_end40:
	.size	x264_pixel_satd_x3_8x16, .Lfunc_end40-x264_pixel_satd_x3_8x16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_x3_8x8
	.type	x264_pixel_satd_x3_8x8,@function
x264_pixel_satd_x3_8x8:                 # @x264_pixel_satd_x3_8x8
.Lfunc_begin41:
	.loc	0 446 0 is_stmt 1               # x264_src/common/pixel.c:446:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_x3_8x8:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_x3_8x8:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_x3_8x8:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_x3_8x8:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_satd_x3_8x8:i_stride <- $r8d
	#DEBUG_VALUE: x264_pixel_satd_x3_8x8:scores <- $r9
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix2 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix2 <- $r8d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, 8(%rsp)                    # 8-byte Spill
.Ltmp1585:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x8:scores <- [DW_OP_plus_uconst 8] [$rsp+0]
	movl	%r8d, %r14d
	movq	%rcx, 16(%rsp)                  # 8-byte Spill
.Ltmp1586:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x8:pix2 <- [DW_OP_plus_uconst 16] [$rsp+0]
	movq	%rdx, %rbp
	movq	%rsi, %rbx
	movq	%rdi, %r13
.Ltmp1587:
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix1 <- 16
	.loc	0 274 1 prologue_end            # x264_src/common/pixel.c:274:1
	movl	$16, %esi
.Ltmp1588:
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix2 <- $rbx
	#DEBUG_VALUE: x264_pixel_satd_x3_8x8:pix0 <- $rbx
	movq	%rbx, %rdx
.Ltmp1589:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x8:pix1 <- $rbp
	movl	%r8d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1590:
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix2 <- $r14d
	#DEBUG_VALUE: x264_pixel_satd_x3_8x8:i_stride <- $r14d
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix1 <- $r13
	#DEBUG_VALUE: x264_pixel_satd_x3_8x8:fenc <- $r13
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 4(%rsp)                   # 4-byte Spill
	.loc	0 274 1                         # x264_src/common/pixel.c:274:1
	leaq	64(%r13), %r15
	leal	(,%r14,4), %eax
	movslq	%eax, %r12
	addq	%r12, %rbx
.Ltmp1591:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x8:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	movq	%r15, %rdi
	movl	$16, %esi
	movq	%rbx, %rdx
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1592:
	addl	4(%rsp), %eax                   # 4-byte Folded Reload
.Ltmp1593:
	#DEBUG_VALUE: x264_pixel_satd_8x8:sum <- $eax
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movq	8(%rsp), %rbx                   # 8-byte Reload
.Ltmp1594:
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movl	%eax, (%rbx)
.Ltmp1595:
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix1 <- $r13
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix2 <- $rbp
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix2 <- $r14d
	.loc	0 274 1                         # x264_src/common/pixel.c:274:1
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%rbp, %rdx
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1596:
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 4(%rsp)                   # 4-byte Spill
	.loc	0 274 1                         # x264_src/common/pixel.c:274:1
	addq	%r12, %rbp
.Ltmp1597:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	movq	%r15, %rdi
	movl	$16, %esi
	movq	%rbp, %rdx
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1598:
	addl	4(%rsp), %eax                   # 4-byte Folded Reload
.Ltmp1599:
	#DEBUG_VALUE: x264_pixel_satd_8x8:sum <- $eax
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movq	%rbx, %rbp
.Ltmp1600:
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movl	%eax, 4(%rbx)
.Ltmp1601:
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix1 <- $r13
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix2 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix2 <- $r14d
	.loc	0 274 1                         # x264_src/common/pixel.c:274:1
	movq	%r13, %rdi
	movl	$16, %esi
	movq	16(%rsp), %r13                  # 8-byte Reload
.Ltmp1602:
	movq	%r13, %rdx
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1603:
	movl	%eax, %ebx
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix2 <- $rbp
.Ltmp1604:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x8:pix0 <- $rbp
	addq	%r12, %r13
.Ltmp1605:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x8:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	movq	%r15, %rdi
	movl	$16, %esi
	movq	%r13, %rdx
	movl	%r14d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1606:
	addl	%ebx, %eax
.Ltmp1607:
	#DEBUG_VALUE: x264_pixel_satd_8x8:sum <- $eax
	.loc	0 446 1                         # x264_src/common/pixel.c:446:1
	movl	%eax, 8(%rbp)
	.loc	0 446 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:446:1
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1608:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x8:i_stride <- [DW_OP_LLVM_entry_value 1] $r8d
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp1609:
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix2 <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_satd_x3_8x8:pix1 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_satd_x3_8x8:pix0 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.cfi_def_cfa_offset 8
	retq
.Ltmp1610:
.Lfunc_end41:
	.size	x264_pixel_satd_x3_8x8, .Lfunc_end41-x264_pixel_satd_x3_8x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_x3_8x4
	.type	x264_pixel_satd_x3_8x4,@function
x264_pixel_satd_x3_8x4:                 # @x264_pixel_satd_x3_8x4
.Lfunc_begin42:
	.loc	0 446 0 is_stmt 1               # x264_src/common/pixel.c:446:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_x3_8x4:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_x3_8x4:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_x3_8x4:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_x3_8x4:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_satd_x3_8x4:i_stride <- $r8d
	#DEBUG_VALUE: x264_pixel_satd_x3_8x4:scores <- $r9
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, %rbx
	movl	%r8d, %ebp
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %rdx
.Ltmp1611:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x4:pix1 <- $r15
	movq	%rdi, %r12
.Ltmp1612:
	.loc	0 446 1 prologue_end            # x264_src/common/pixel.c:446:1
	movl	$16, %esi
.Ltmp1613:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x4:pix0 <- $rdx
	movl	%r8d, %ecx
.Ltmp1614:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x4:pix2 <- $r14
	callq	x264_pixel_satd_8x4
.Ltmp1615:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x4:scores <- $rbx
	#DEBUG_VALUE: x264_pixel_satd_x3_8x4:i_stride <- $ebp
	#DEBUG_VALUE: x264_pixel_satd_x3_8x4:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_pixel_satd_x3_8x4:fenc <- $r12
	movl	%eax, (%rbx)
	movq	%r12, %rdi
	movl	$16, %esi
	movq	%r15, %rdx
	movl	%ebp, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1616:
	movl	%eax, 4(%rbx)
	movq	%r12, %rdi
	movl	$16, %esi
	movq	%r14, %rdx
	movl	%ebp, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1617:
	movl	%eax, 8(%rbx)
	.loc	0 446 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:446:1
	popq	%rbx
.Ltmp1618:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x4:scores <- [DW_OP_LLVM_entry_value 1] $r9
	.cfi_def_cfa_offset 40
	popq	%r12
.Ltmp1619:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x4:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1620:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x4:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1621:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x4:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp1622:
	#DEBUG_VALUE: x264_pixel_satd_x3_8x4:i_stride <- [DW_OP_LLVM_entry_value 1] $r8d
	.cfi_def_cfa_offset 8
	retq
.Ltmp1623:
.Lfunc_end42:
	.size	x264_pixel_satd_x3_8x4, .Lfunc_end42-x264_pixel_satd_x3_8x4
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_x3_4x8
	.type	x264_pixel_satd_x3_4x8,@function
x264_pixel_satd_x3_4x8:                 # @x264_pixel_satd_x3_4x8
.Lfunc_begin43:
	.loc	0 446 0 is_stmt 1               # x264_src/common/pixel.c:446:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_x3_4x8:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_x3_4x8:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_x3_4x8:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_x3_4x8:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_satd_x3_4x8:i_stride <- $r8d
	#DEBUG_VALUE: x264_pixel_satd_x3_4x8:scores <- $r9
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix2 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix2 <- $r8d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, 8(%rsp)                    # 8-byte Spill
.Ltmp1624:
	#DEBUG_VALUE: x264_pixel_satd_x3_4x8:scores <- [DW_OP_plus_uconst 8] [$rsp+0]
	movl	%r8d, %r14d
	movq	%rcx, 16(%rsp)                  # 8-byte Spill
.Ltmp1625:
	#DEBUG_VALUE: x264_pixel_satd_x3_4x8:pix2 <- [DW_OP_plus_uconst 16] [$rsp+0]
	movq	%rdx, %rbp
	movq	%rsi, %rbx
	movq	%rdi, %r13
.Ltmp1626:
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix1 <- 16
	.loc	0 275 1 prologue_end            # x264_src/common/pixel.c:275:1
	movl	$16, %esi
.Ltmp1627:
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix2 <- $rbx
	#DEBUG_VALUE: x264_pixel_satd_x3_4x8:pix0 <- $rbx
	movq	%rbx, %rdx
.Ltmp1628:
	#DEBUG_VALUE: x264_pixel_satd_x3_4x8:pix1 <- $rbp
	movl	%r8d, %ecx
	callq	x264_pixel_satd_4x4
.Ltmp1629:
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix2 <- $r14d
	#DEBUG_VALUE: x264_pixel_satd_x3_4x8:i_stride <- $r14d
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix1 <- $r13
	#DEBUG_VALUE: x264_pixel_satd_x3_4x8:fenc <- $r13
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 4(%rsp)                   # 4-byte Spill
	.loc	0 275 1                         # x264_src/common/pixel.c:275:1
	leaq	64(%r13), %r15
	leal	(,%r14,4), %eax
	movslq	%eax, %r12
	addq	%r12, %rbx
.Ltmp1630:
	#DEBUG_VALUE: x264_pixel_satd_x3_4x8:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	movq	%r15, %rdi
	movl	$16, %esi
	movq	%rbx, %rdx
	movl	%r14d, %ecx
	callq	x264_pixel_satd_4x4
.Ltmp1631:
	addl	4(%rsp), %eax                   # 4-byte Folded Reload
.Ltmp1632:
	#DEBUG_VALUE: x264_pixel_satd_4x8:sum <- $eax
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movq	8(%rsp), %rbx                   # 8-byte Reload
.Ltmp1633:
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movl	%eax, (%rbx)
.Ltmp1634:
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix1 <- $r13
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix2 <- $rbp
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix2 <- $r14d
	.loc	0 275 1                         # x264_src/common/pixel.c:275:1
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%rbp, %rdx
	movl	%r14d, %ecx
	callq	x264_pixel_satd_4x4
.Ltmp1635:
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 4(%rsp)                   # 4-byte Spill
	.loc	0 275 1                         # x264_src/common/pixel.c:275:1
	addq	%r12, %rbp
.Ltmp1636:
	#DEBUG_VALUE: x264_pixel_satd_x3_4x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	movq	%r15, %rdi
	movl	$16, %esi
	movq	%rbp, %rdx
	movl	%r14d, %ecx
	callq	x264_pixel_satd_4x4
.Ltmp1637:
	addl	4(%rsp), %eax                   # 4-byte Folded Reload
.Ltmp1638:
	#DEBUG_VALUE: x264_pixel_satd_4x8:sum <- $eax
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movq	%rbx, %rbp
.Ltmp1639:
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movl	%eax, 4(%rbx)
.Ltmp1640:
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix1 <- $r13
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix2 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix2 <- $r14d
	.loc	0 275 1                         # x264_src/common/pixel.c:275:1
	movq	%r13, %rdi
	movl	$16, %esi
	movq	16(%rsp), %r13                  # 8-byte Reload
.Ltmp1641:
	movq	%r13, %rdx
	movl	%r14d, %ecx
	callq	x264_pixel_satd_4x4
.Ltmp1642:
	movl	%eax, %ebx
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix2 <- $rbp
.Ltmp1643:
	#DEBUG_VALUE: x264_pixel_satd_x3_4x8:pix0 <- $rbp
	addq	%r12, %r13
.Ltmp1644:
	#DEBUG_VALUE: x264_pixel_satd_x3_4x8:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	movq	%r15, %rdi
	movl	$16, %esi
	movq	%r13, %rdx
	movl	%r14d, %ecx
	callq	x264_pixel_satd_4x4
.Ltmp1645:
	addl	%ebx, %eax
.Ltmp1646:
	#DEBUG_VALUE: x264_pixel_satd_4x8:sum <- $eax
	.loc	0 446 1                         # x264_src/common/pixel.c:446:1
	movl	%eax, 8(%rbp)
	.loc	0 446 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:446:1
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1647:
	#DEBUG_VALUE: x264_pixel_satd_x3_4x8:i_stride <- [DW_OP_LLVM_entry_value 1] $r8d
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp1648:
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix2 <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix2 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_satd_x3_4x8:pix1 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_satd_x3_4x8:pix0 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.cfi_def_cfa_offset 8
	retq
.Ltmp1649:
.Lfunc_end43:
	.size	x264_pixel_satd_x3_4x8, .Lfunc_end43-x264_pixel_satd_x3_4x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_x3_4x4
	.type	x264_pixel_satd_x3_4x4,@function
x264_pixel_satd_x3_4x4:                 # @x264_pixel_satd_x3_4x4
.Lfunc_begin44:
	.loc	0 446 0 is_stmt 1               # x264_src/common/pixel.c:446:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_x3_4x4:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_x3_4x4:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_x3_4x4:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_x3_4x4:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_satd_x3_4x4:i_stride <- $r8d
	#DEBUG_VALUE: x264_pixel_satd_x3_4x4:scores <- $r9
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, %rbx
	movl	%r8d, %ebp
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %rdx
.Ltmp1650:
	#DEBUG_VALUE: x264_pixel_satd_x3_4x4:pix1 <- $r15
	movq	%rdi, %r12
.Ltmp1651:
	.loc	0 446 1 prologue_end            # x264_src/common/pixel.c:446:1
	movl	$16, %esi
.Ltmp1652:
	#DEBUG_VALUE: x264_pixel_satd_x3_4x4:pix0 <- $rdx
	movl	%r8d, %ecx
.Ltmp1653:
	#DEBUG_VALUE: x264_pixel_satd_x3_4x4:pix2 <- $r14
	callq	x264_pixel_satd_4x4
.Ltmp1654:
	#DEBUG_VALUE: x264_pixel_satd_x3_4x4:scores <- $rbx
	#DEBUG_VALUE: x264_pixel_satd_x3_4x4:i_stride <- $ebp
	#DEBUG_VALUE: x264_pixel_satd_x3_4x4:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_pixel_satd_x3_4x4:fenc <- $r12
	movl	%eax, (%rbx)
	movq	%r12, %rdi
	movl	$16, %esi
	movq	%r15, %rdx
	movl	%ebp, %ecx
	callq	x264_pixel_satd_4x4
.Ltmp1655:
	movl	%eax, 4(%rbx)
	movq	%r12, %rdi
	movl	$16, %esi
	movq	%r14, %rdx
	movl	%ebp, %ecx
	callq	x264_pixel_satd_4x4
.Ltmp1656:
	movl	%eax, 8(%rbx)
	.loc	0 446 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:446:1
	popq	%rbx
.Ltmp1657:
	#DEBUG_VALUE: x264_pixel_satd_x3_4x4:scores <- [DW_OP_LLVM_entry_value 1] $r9
	.cfi_def_cfa_offset 40
	popq	%r12
.Ltmp1658:
	#DEBUG_VALUE: x264_pixel_satd_x3_4x4:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1659:
	#DEBUG_VALUE: x264_pixel_satd_x3_4x4:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1660:
	#DEBUG_VALUE: x264_pixel_satd_x3_4x4:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp1661:
	#DEBUG_VALUE: x264_pixel_satd_x3_4x4:i_stride <- [DW_OP_LLVM_entry_value 1] $r8d
	.cfi_def_cfa_offset 8
	retq
.Ltmp1662:
.Lfunc_end44:
	.size	x264_pixel_satd_x3_4x4, .Lfunc_end44-x264_pixel_satd_x3_4x4
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_x4_16x16
	.type	x264_pixel_satd_x4_16x16,@function
x264_pixel_satd_x4_16x16:               # @x264_pixel_satd_x4_16x16
.Lfunc_begin45:
	.loc	0 446 0 is_stmt 1               # x264_src/common/pixel.c:446:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_x4_16x16:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_x4_16x16:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_x4_16x16:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_x4_16x16:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_satd_x4_16x16:pix3 <- $r8
	#DEBUG_VALUE: x264_pixel_satd_x4_16x16:i_stride <- $r9d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp1663:
	#DEBUG_VALUE: x264_pixel_satd_x4_16x16:scores <- [DW_OP_plus_uconst 64] [$rsp+0]
	movl	%r9d, %ebx
	movq	%r8, %r14
	movq	%rcx, %r15
	movq	%rdx, %r12
	movq	%rsi, %rdx
.Ltmp1664:
	#DEBUG_VALUE: x264_pixel_satd_x4_16x16:pix1 <- $r12
	movq	%rdi, %r13
	movq	64(%rsp), %rbp
.Ltmp1665:
	.loc	0 446 1 prologue_end            # x264_src/common/pixel.c:446:1
	movl	$16, %esi
.Ltmp1666:
	#DEBUG_VALUE: x264_pixel_satd_x4_16x16:pix0 <- $rdx
	movl	%r9d, %ecx
.Ltmp1667:
	#DEBUG_VALUE: x264_pixel_satd_x4_16x16:pix2 <- $r15
	callq	x264_pixel_satd_16x16
.Ltmp1668:
	#DEBUG_VALUE: x264_pixel_satd_x4_16x16:i_stride <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_x4_16x16:pix3 <- $r14
	#DEBUG_VALUE: x264_pixel_satd_x4_16x16:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_pixel_satd_x4_16x16:fenc <- $r13
	movl	%eax, (%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r12, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_16x16
.Ltmp1669:
	movl	%eax, 4(%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r15, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_16x16
.Ltmp1670:
	movl	%eax, 8(%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r14, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_16x16
.Ltmp1671:
	movl	%eax, 12(%rbp)
	.loc	0 446 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:446:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp1672:
	#DEBUG_VALUE: x264_pixel_satd_x4_16x16:i_stride <- [DW_OP_LLVM_entry_value 1] $r9d
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp1673:
	#DEBUG_VALUE: x264_pixel_satd_x4_16x16:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp1674:
	#DEBUG_VALUE: x264_pixel_satd_x4_16x16:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1675:
	#DEBUG_VALUE: x264_pixel_satd_x4_16x16:pix3 <- [DW_OP_LLVM_entry_value 1] $r8
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1676:
	#DEBUG_VALUE: x264_pixel_satd_x4_16x16:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1677:
.Lfunc_end45:
	.size	x264_pixel_satd_x4_16x16, .Lfunc_end45-x264_pixel_satd_x4_16x16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_x4_16x8
	.type	x264_pixel_satd_x4_16x8,@function
x264_pixel_satd_x4_16x8:                # @x264_pixel_satd_x4_16x8
.Lfunc_begin46:
	.loc	0 446 0 is_stmt 1               # x264_src/common/pixel.c:446:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_x4_16x8:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_x4_16x8:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_x4_16x8:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_x4_16x8:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_satd_x4_16x8:pix3 <- $r8
	#DEBUG_VALUE: x264_pixel_satd_x4_16x8:i_stride <- $r9d
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix2 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix2 <- $r9d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp1678:
	#DEBUG_VALUE: x264_pixel_satd_x4_16x8:scores <- [DW_OP_plus_uconst 128] [$rsp+0]
	movl	%r9d, %ebx
	movq	%r8, 64(%rsp)                   # 8-byte Spill
.Ltmp1679:
	#DEBUG_VALUE: x264_pixel_satd_x4_16x8:pix3 <- [DW_OP_plus_uconst 64] [$rsp+0]
	movq	%rcx, 56(%rsp)                  # 8-byte Spill
.Ltmp1680:
	#DEBUG_VALUE: x264_pixel_satd_x4_16x8:pix2 <- [DW_OP_plus_uconst 56] [$rsp+0]
	movq	%rdx, 16(%rsp)                  # 8-byte Spill
.Ltmp1681:
	#DEBUG_VALUE: x264_pixel_satd_x4_16x8:pix1 <- [DW_OP_plus_uconst 16] [$rsp+0]
	movq	%rsi, %r13
	movq	%rdi, %r15
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix1 <- $r15
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix1 <- $r15
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix1 <- $r15
.Ltmp1682:
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix1 <- 16
	.loc	0 272 1 prologue_end            # x264_src/common/pixel.c:272:1
	movl	$16, %esi
.Ltmp1683:
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix2 <- $r13
	#DEBUG_VALUE: x264_pixel_satd_x4_16x8:pix0 <- $r13
	movq	%r13, %rdx
	movl	%r9d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1684:
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_x4_16x8:i_stride <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix1 <- $r15
	#DEBUG_VALUE: x264_pixel_satd_x4_16x8:fenc <- $r15
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 12(%rsp)                  # 4-byte Spill
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	leaq	64(%r15), %rdi
	movq	%rdi, 32(%rsp)                  # 8-byte Spill
	leal	(,%rbx,4), %eax
	movslq	%eax, %rbp
	movq	%r13, %rdx
	addq	%rbp, %rdx
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1685:
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movl	%eax, 8(%rsp)                   # 4-byte Spill
.Ltmp1686:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	leaq	8(%r15), %r12
	leaq	8(%r13), %rdx
	movq	%r12, %rdi
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1687:
	movl	%eax, %r14d
	leaq	72(%r15), %rdi
	movq	%rdi, 24(%rsp)                  # 8-byte Spill
	movq	%r15, 40(%rsp)                  # 8-byte Spill
.Ltmp1688:
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix1 <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix1 <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix1 <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix1 <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_satd_x4_16x8:fenc <- [DW_OP_plus_uconst 40] [$rsp+0]
	leaq	8(,%rbp), %rdx
	addq	%r13, %rdx
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1689:
	addl	12(%rsp), %r14d                 # 4-byte Folded Reload
.Ltmp1690:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	addl	8(%rsp), %r14d                  # 4-byte Folded Reload
.Ltmp1691:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	addl	%eax, %r14d
.Ltmp1692:
	#DEBUG_VALUE: x264_pixel_satd_16x8:sum <- $r14d
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movq	128(%rsp), %rax
.Ltmp1693:
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movl	%r14d, (%rax)
.Ltmp1694:
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix2 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	movq	%r15, %rdi
	movl	$16, %esi
	movq	16(%rsp), %r14                  # 8-byte Reload
.Ltmp1695:
	movq	%r14, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1696:
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 12(%rsp)                  # 4-byte Spill
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	leaq	(%r14,%rbp), %rdx
	movq	%r14, %r15
	movq	32(%rsp), %r14                  # 8-byte Reload
	movq	%r14, %rdi
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1697:
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movl	%eax, 8(%rsp)                   # 4-byte Spill
.Ltmp1698:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	leaq	8(%r15), %rdx
	movq	%r12, 48(%rsp)                  # 8-byte Spill
	movq	%r12, %rdi
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1699:
	movl	%eax, %r13d
.Ltmp1700:
	#DEBUG_VALUE: x264_pixel_satd_x4_16x8:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	leaq	(%r15,%rbp), %rdx
	addq	$8, %rdx
	movq	24(%rsp), %r15                  # 8-byte Reload
	movq	%r15, %rdi
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1701:
	addl	12(%rsp), %r13d                 # 4-byte Folded Reload
.Ltmp1702:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	addl	8(%rsp), %r13d                  # 4-byte Folded Reload
.Ltmp1703:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	addl	%eax, %r13d
.Ltmp1704:
	#DEBUG_VALUE: x264_pixel_satd_16x8:sum <- $r13d
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movq	128(%rsp), %rax
	movl	%r13d, 4(%rax)
.Ltmp1705:
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix2 <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movq	40(%rsp), %rdi                  # 8-byte Reload
.Ltmp1706:
	.loc	0 272 1 is_stmt 1               # x264_src/common/pixel.c:272:1
	movl	$16, %esi
	movq	56(%rsp), %r13                  # 8-byte Reload
	movq	%r13, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1707:
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 16(%rsp)                  # 4-byte Spill
.Ltmp1708:
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix2 <- undef
	#DEBUG_VALUE: x264_pixel_satd_x4_16x8:pix1 <- undef
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	movq	%r13, %rdx
	addq	%rbp, %rdx
	movq	%r14, %rdi
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1709:
	movl	%eax, %r14d
	#DEBUG_VALUE: x264_pixel_satd_16x8:sum <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
.Ltmp1710:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	leaq	8(%r13), %rdx
	movq	%r12, %rdi
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1711:
	movl	%eax, %r12d
	leaq	8(,%rbp), %rdx
	addq	%r13, %rdx
	movq	%r15, %rdi
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1712:
	addl	16(%rsp), %r12d                 # 4-byte Folded Reload
.Ltmp1713:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	addl	%r14d, %r12d
.Ltmp1714:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	addl	%eax, %r12d
.Ltmp1715:
	#DEBUG_VALUE: x264_pixel_satd_16x8:sum <- $r12d
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movq	128(%rsp), %rax
	movl	%r12d, 8(%rax)
.Ltmp1716:
	#DEBUG_VALUE: x264_pixel_satd_16x8:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix2 <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movq	40(%rsp), %rdi                  # 8-byte Reload
.Ltmp1717:
	.loc	0 272 1 is_stmt 1               # x264_src/common/pixel.c:272:1
	movl	$16, %esi
	movq	64(%rsp), %r14                  # 8-byte Reload
	movq	%r14, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1718:
	movl	%eax, %r12d
	leaq	(%r14,%rbp), %rdx
	movq	32(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1719:
	movl	%eax, %r13d
	#DEBUG_VALUE: x264_pixel_satd_16x8:pix2 <- [DW_OP_plus_uconst 56] [$rsp+0]
.Ltmp1720:
	#DEBUG_VALUE: x264_pixel_satd_x4_16x8:pix0 <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_satd_16x8:sum <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	.loc	0 272 1 is_stmt 0               # x264_src/common/pixel.c:272:1
	leaq	8(%r14), %rdx
	movq	48(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1721:
	movl	%eax, %r15d
	leaq	(%r14,%rbp), %rdx
	addq	$8, %rdx
	movq	24(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1722:
	addl	%r12d, %r15d
.Ltmp1723:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	addl	%r13d, %r15d
.Ltmp1724:
	.loc	0 272 1                         # x264_src/common/pixel.c:272:1
	addl	%eax, %r15d
.Ltmp1725:
	#DEBUG_VALUE: x264_pixel_satd_16x8:sum <- $r15d
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movq	128(%rsp), %rax
	movl	%r15d, 12(%rax)
	.loc	0 446 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:446:1
	addq	$72, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp1726:
	#DEBUG_VALUE: x264_pixel_satd_x4_16x8:i_stride <- [DW_OP_LLVM_entry_value 1] $r9d
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1727:
.Lfunc_end46:
	.size	x264_pixel_satd_x4_16x8, .Lfunc_end46-x264_pixel_satd_x4_16x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_x4_8x16
	.type	x264_pixel_satd_x4_8x16,@function
x264_pixel_satd_x4_8x16:                # @x264_pixel_satd_x4_8x16
.Lfunc_begin47:
	.loc	0 446 0 is_stmt 1               # x264_src/common/pixel.c:446:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_x4_8x16:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_x4_8x16:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_x4_8x16:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_x4_8x16:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_satd_x4_8x16:pix3 <- $r8
	#DEBUG_VALUE: x264_pixel_satd_x4_8x16:i_stride <- $r9d
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix2 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix2 <- $r9d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp1728:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x16:scores <- [DW_OP_plus_uconst 144] [$rsp+0]
	movl	%r9d, %ebx
	movq	%r8, 80(%rsp)                   # 8-byte Spill
.Ltmp1729:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x16:pix3 <- [DW_OP_plus_uconst 80] [$rsp+0]
	movq	%rcx, 72(%rsp)                  # 8-byte Spill
.Ltmp1730:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x16:pix2 <- [DW_OP_plus_uconst 72] [$rsp+0]
	movq	%rdx, %r14
	movq	%rsi, %r12
	movq	%rdi, %r15
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- $r15
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- $r15
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- $r15
.Ltmp1731:
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix1 <- 16
	.loc	0 273 1 prologue_end            # x264_src/common/pixel.c:273:1
	movl	$16, %esi
.Ltmp1732:
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix2 <- $r12
	#DEBUG_VALUE: x264_pixel_satd_x4_8x16:pix0 <- $r12
	movq	%r12, %rdx
.Ltmp1733:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x16:pix1 <- $r14
	movl	%r9d, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1734:
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_x4_8x16:i_stride <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- $r15
	#DEBUG_VALUE: x264_pixel_satd_x4_8x16:fenc <- $r15
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 4(%rsp)                   # 4-byte Spill
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	leaq	64(%r15), %rdi
	movq	%rdi, 32(%rsp)                  # 8-byte Spill
	movq	%r15, %r13
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- $r13
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- $r13
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- $r13
.Ltmp1735:
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- $r13
	#DEBUG_VALUE: x264_pixel_satd_x4_8x16:fenc <- $r13
	leal	(,%rbx,4), %eax
	cltq
	leaq	(%r12,%rax), %rdx
	movq	%rax, %r15
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1736:
	movl	%eax, %ebp
.Ltmp1737:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	leaq	128(%r13), %rdi
	movq	%rdi, 64(%rsp)                  # 8-byte Spill
	leal	(,%rbx,8), %eax
	cltq
	movq	%rax, 24(%rsp)                  # 8-byte Spill
	leaq	(%r12,%rax), %rdx
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1738:
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movl	%eax, 20(%rsp)                  # 4-byte Spill
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	leaq	192(%r13), %rdi
	movq	%rdi, 40(%rsp)                  # 8-byte Spill
	movq	%r13, 48(%rsp)                  # 8-byte Spill
.Ltmp1739:
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix1 <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_satd_x4_8x16:fenc <- [DW_OP_plus_uconst 48] [$rsp+0]
	leal	(%r15,%r15,2), %eax
	movq	%r15, 56(%rsp)                  # 8-byte Spill
	cltq
	movq	%rax, 8(%rsp)                   # 8-byte Spill
	addq	%rax, %r12
.Ltmp1740:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x16:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	movl	$16, %esi
	movq	%r12, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1741:
	addl	4(%rsp), %ebp                   # 4-byte Folded Reload
.Ltmp1742:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	addl	20(%rsp), %ebp                  # 4-byte Folded Reload
.Ltmp1743:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	addl	%eax, %ebp
.Ltmp1744:
	#DEBUG_VALUE: x264_pixel_satd_8x16:sum <- $ebp
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movq	144(%rsp), %rax
.Ltmp1745:
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movl	%ebp, (%rax)
.Ltmp1746:
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix2 <- $r14
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r14, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1747:
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 4(%rsp)                   # 4-byte Spill
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	leaq	(%r14,%r15), %rdx
	movq	32(%rsp), %r15                  # 8-byte Reload
	movq	%r15, %rdi
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1748:
	movl	%eax, %r12d
	movq	24(%rsp), %r13                  # 8-byte Reload
.Ltmp1749:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	leaq	(%r14,%r13), %rdx
	movq	64(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1750:
	movl	%eax, %ebp
.Ltmp1751:
	addq	8(%rsp), %r14                   # 8-byte Folded Reload
.Ltmp1752:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x16:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movq	40(%rsp), %rdi                  # 8-byte Reload
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	movl	$16, %esi
	movq	%r14, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1753:
	addl	4(%rsp), %r12d                  # 4-byte Folded Reload
.Ltmp1754:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	addl	%ebp, %r12d
.Ltmp1755:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	addl	%eax, %r12d
.Ltmp1756:
	#DEBUG_VALUE: x264_pixel_satd_8x16:sum <- $r12d
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movq	144(%rsp), %rax
	movl	%r12d, 4(%rax)
.Ltmp1757:
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix2 <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movq	48(%rsp), %rdi                  # 8-byte Reload
.Ltmp1758:
	.loc	0 273 1 is_stmt 1               # x264_src/common/pixel.c:273:1
	movl	$16, %esi
	movq	72(%rsp), %rbp                  # 8-byte Reload
	movq	%rbp, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1759:
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 4(%rsp)                   # 4-byte Spill
	movq	56(%rsp), %rax                  # 8-byte Reload
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	leaq	(%rax,%rbp), %rdx
	movq	%r15, %rdi
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1760:
	movl	%eax, %r14d
.Ltmp1761:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	movq	%rbp, %rdx
	addq	%r13, %rdx
	movq	64(%rsp), %r15                  # 8-byte Reload
	movq	%r15, %rdi
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1762:
	movl	%eax, %r12d
	addq	8(%rsp), %rbp                   # 8-byte Folded Reload
	movq	40(%rsp), %r13                  # 8-byte Reload
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%rbp, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1763:
	addl	4(%rsp), %r14d                  # 4-byte Folded Reload
.Ltmp1764:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	addl	%r12d, %r14d
.Ltmp1765:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	addl	%eax, %r14d
.Ltmp1766:
	#DEBUG_VALUE: x264_pixel_satd_8x16:sum <- $r14d
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movq	144(%rsp), %rax
	movl	%r14d, 8(%rax)
.Ltmp1767:
	#DEBUG_VALUE: x264_pixel_satd_8x16:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_8x16:pix2 <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movq	48(%rsp), %rdi                  # 8-byte Reload
.Ltmp1768:
	.loc	0 273 1 is_stmt 1               # x264_src/common/pixel.c:273:1
	movl	$16, %esi
	movq	80(%rsp), %r12                  # 8-byte Reload
	movq	%r12, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1769:
	movl	%eax, %ebp
	movq	56(%rsp), %rdx                  # 8-byte Reload
	addq	%r12, %rdx
	movq	32(%rsp), %rdi                  # 8-byte Reload
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1770:
	movl	%eax, %r14d
	movq	24(%rsp), %rdx                  # 8-byte Reload
.Ltmp1771:
	.loc	0 273 1 is_stmt 0               # x264_src/common/pixel.c:273:1
	addq	%r12, %rdx
	movq	%r15, %rdi
	movl	$16, %esi
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1772:
	movl	%eax, %r15d
	addq	8(%rsp), %r12                   # 8-byte Folded Reload
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r12, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1773:
	addl	%ebp, %r14d
.Ltmp1774:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	addl	%r15d, %r14d
.Ltmp1775:
	.loc	0 273 1                         # x264_src/common/pixel.c:273:1
	addl	%eax, %r14d
.Ltmp1776:
	#DEBUG_VALUE: x264_pixel_satd_8x16:sum <- $r14d
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movq	144(%rsp), %rax
	movl	%r14d, 12(%rax)
	.loc	0 446 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:446:1
	addq	$88, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp1777:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x16:i_stride <- [DW_OP_LLVM_entry_value 1] $r9d
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1778:
.Lfunc_end47:
	.size	x264_pixel_satd_x4_8x16, .Lfunc_end47-x264_pixel_satd_x4_8x16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_x4_8x8
	.type	x264_pixel_satd_x4_8x8,@function
x264_pixel_satd_x4_8x8:                 # @x264_pixel_satd_x4_8x8
.Lfunc_begin48:
	.loc	0 446 0 is_stmt 1               # x264_src/common/pixel.c:446:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_x4_8x8:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_x4_8x8:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_x4_8x8:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_x4_8x8:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_satd_x4_8x8:pix3 <- $r8
	#DEBUG_VALUE: x264_pixel_satd_x4_8x8:i_stride <- $r9d
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix2 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix2 <- $r9d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp1779:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x8:scores <- [DW_OP_plus_uconst 80] [$rsp+0]
	movl	%r9d, %ebx
	movq	%r8, 16(%rsp)                   # 8-byte Spill
.Ltmp1780:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x8:pix3 <- [DW_OP_plus_uconst 16] [$rsp+0]
	movq	%rcx, %r13
	movq	%rdx, %rbp
	movq	%rsi, %r14
	movq	%rdi, %r15
.Ltmp1781:
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix1 <- $r15
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix1 <- $r15
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix1 <- $r15
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix1 <- 16
	.loc	0 274 1 prologue_end            # x264_src/common/pixel.c:274:1
	movl	$16, %esi
.Ltmp1782:
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix2 <- $r14
	#DEBUG_VALUE: x264_pixel_satd_x4_8x8:pix0 <- $r14
	movq	%r14, %rdx
.Ltmp1783:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x8:pix1 <- $rbp
	movl	%r9d, %ecx
.Ltmp1784:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x8:pix2 <- $r13
	callq	x264_pixel_satd_8x4
.Ltmp1785:
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_x4_8x8:i_stride <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix1 <- $r15
	#DEBUG_VALUE: x264_pixel_satd_x4_8x8:fenc <- $r15
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 4(%rsp)                   # 4-byte Spill
	.loc	0 274 1                         # x264_src/common/pixel.c:274:1
	leaq	64(%r15), %rdi
	movq	%rdi, 8(%rsp)                   # 8-byte Spill
	leal	(,%rbx,4), %eax
	movslq	%eax, %r12
	addq	%r12, %r14
.Ltmp1786:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x8:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	movl	$16, %esi
	movq	%r14, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1787:
	addl	4(%rsp), %eax                   # 4-byte Folded Reload
.Ltmp1788:
	#DEBUG_VALUE: x264_pixel_satd_8x8:sum <- $eax
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movq	80(%rsp), %rcx
	movl	%eax, (%rcx)
.Ltmp1789:
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix2 <- $rbp
	.loc	0 274 1                         # x264_src/common/pixel.c:274:1
	movq	%r15, %rdi
	movl	$16, %esi
	movq	%rbp, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1790:
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 4(%rsp)                   # 4-byte Spill
	.loc	0 274 1                         # x264_src/common/pixel.c:274:1
	addq	%r12, %rbp
.Ltmp1791:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movq	8(%rsp), %r14                   # 8-byte Reload
	.loc	0 274 1                         # x264_src/common/pixel.c:274:1
	movq	%r14, %rdi
	movl	$16, %esi
	movq	%rbp, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1792:
	addl	4(%rsp), %eax                   # 4-byte Folded Reload
.Ltmp1793:
	#DEBUG_VALUE: x264_pixel_satd_8x8:sum <- $eax
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movq	80(%rsp), %rcx
.Ltmp1794:
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movl	%eax, 4(%rcx)
.Ltmp1795:
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix2 <- $r13
	.loc	0 274 1                         # x264_src/common/pixel.c:274:1
	movq	%r15, %rdi
	movl	$16, %esi
	movq	%r13, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1796:
	movl	%eax, %ebp
	addq	%r12, %r13
.Ltmp1797:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x8:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	movq	%r14, %rdi
	movl	$16, %esi
	movq	%r13, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1798:
	addl	%ebp, %eax
.Ltmp1799:
	#DEBUG_VALUE: x264_pixel_satd_8x8:sum <- $eax
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movq	80(%rsp), %r13
.Ltmp1800:
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movl	%eax, 8(%r13)
.Ltmp1801:
	#DEBUG_VALUE: x264_pixel_satd_8x8:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_8x8:pix2 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 274 1                         # x264_src/common/pixel.c:274:1
	movq	%r15, %rdi
	movl	$16, %esi
	movq	16(%rsp), %r15                  # 8-byte Reload
.Ltmp1802:
	movq	%r15, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1803:
	movl	%eax, %ebp
	addq	%r12, %r15
.Ltmp1804:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x8:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	movq	%r14, %rdi
	movl	$16, %esi
	movq	%r15, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1805:
	addl	%ebp, %eax
.Ltmp1806:
	#DEBUG_VALUE: x264_pixel_satd_8x8:sum <- $eax
	.loc	0 446 1                         # x264_src/common/pixel.c:446:1
	movl	%eax, 12(%r13)
	.loc	0 446 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:446:1
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp1807:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x8:i_stride <- [DW_OP_LLVM_entry_value 1] $r9d
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1808:
.Lfunc_end48:
	.size	x264_pixel_satd_x4_8x8, .Lfunc_end48-x264_pixel_satd_x4_8x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_x4_8x4
	.type	x264_pixel_satd_x4_8x4,@function
x264_pixel_satd_x4_8x4:                 # @x264_pixel_satd_x4_8x4
.Lfunc_begin49:
	.loc	0 446 0 is_stmt 1               # x264_src/common/pixel.c:446:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_x4_8x4:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_x4_8x4:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_x4_8x4:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_x4_8x4:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_satd_x4_8x4:pix3 <- $r8
	#DEBUG_VALUE: x264_pixel_satd_x4_8x4:i_stride <- $r9d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp1809:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x4:scores <- [DW_OP_plus_uconst 64] [$rsp+0]
	movl	%r9d, %ebx
	movq	%r8, %r14
	movq	%rcx, %r15
	movq	%rdx, %r12
	movq	%rsi, %rdx
.Ltmp1810:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x4:pix1 <- $r12
	movq	%rdi, %r13
	movq	64(%rsp), %rbp
.Ltmp1811:
	.loc	0 446 1 prologue_end            # x264_src/common/pixel.c:446:1
	movl	$16, %esi
.Ltmp1812:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x4:pix0 <- $rdx
	movl	%r9d, %ecx
.Ltmp1813:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x4:pix2 <- $r15
	callq	x264_pixel_satd_8x4
.Ltmp1814:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x4:i_stride <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_x4_8x4:pix3 <- $r14
	#DEBUG_VALUE: x264_pixel_satd_x4_8x4:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_pixel_satd_x4_8x4:fenc <- $r13
	movl	%eax, (%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r12, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1815:
	movl	%eax, 4(%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r15, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1816:
	movl	%eax, 8(%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r14, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_8x4
.Ltmp1817:
	movl	%eax, 12(%rbp)
	.loc	0 446 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:446:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp1818:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x4:i_stride <- [DW_OP_LLVM_entry_value 1] $r9d
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp1819:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x4:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp1820:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x4:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1821:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x4:pix3 <- [DW_OP_LLVM_entry_value 1] $r8
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1822:
	#DEBUG_VALUE: x264_pixel_satd_x4_8x4:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1823:
.Lfunc_end49:
	.size	x264_pixel_satd_x4_8x4, .Lfunc_end49-x264_pixel_satd_x4_8x4
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_x4_4x8
	.type	x264_pixel_satd_x4_4x8,@function
x264_pixel_satd_x4_4x8:                 # @x264_pixel_satd_x4_4x8
.Lfunc_begin50:
	.loc	0 446 0 is_stmt 1               # x264_src/common/pixel.c:446:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_x4_4x8:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_x4_4x8:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_x4_4x8:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_x4_4x8:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_satd_x4_4x8:pix3 <- $r8
	#DEBUG_VALUE: x264_pixel_satd_x4_4x8:i_stride <- $r9d
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix2 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix2 <- $r9d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp1824:
	#DEBUG_VALUE: x264_pixel_satd_x4_4x8:scores <- [DW_OP_plus_uconst 80] [$rsp+0]
	movl	%r9d, %ebx
	movq	%r8, 16(%rsp)                   # 8-byte Spill
.Ltmp1825:
	#DEBUG_VALUE: x264_pixel_satd_x4_4x8:pix3 <- [DW_OP_plus_uconst 16] [$rsp+0]
	movq	%rcx, %r13
	movq	%rdx, %rbp
	movq	%rsi, %r14
	movq	%rdi, %r15
.Ltmp1826:
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix1 <- $r15
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix1 <- $r15
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix1 <- $r15
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix1 <- 16
	.loc	0 275 1 prologue_end            # x264_src/common/pixel.c:275:1
	movl	$16, %esi
.Ltmp1827:
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix2 <- $r14
	#DEBUG_VALUE: x264_pixel_satd_x4_4x8:pix0 <- $r14
	movq	%r14, %rdx
.Ltmp1828:
	#DEBUG_VALUE: x264_pixel_satd_x4_4x8:pix1 <- $rbp
	movl	%r9d, %ecx
.Ltmp1829:
	#DEBUG_VALUE: x264_pixel_satd_x4_4x8:pix2 <- $r13
	callq	x264_pixel_satd_4x4
.Ltmp1830:
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_x4_4x8:i_stride <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix1 <- $r15
	#DEBUG_VALUE: x264_pixel_satd_x4_4x8:fenc <- $r15
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 4(%rsp)                   # 4-byte Spill
	.loc	0 275 1                         # x264_src/common/pixel.c:275:1
	leaq	64(%r15), %rdi
	movq	%rdi, 8(%rsp)                   # 8-byte Spill
	leal	(,%rbx,4), %eax
	movslq	%eax, %r12
	addq	%r12, %r14
.Ltmp1831:
	#DEBUG_VALUE: x264_pixel_satd_x4_4x8:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	movl	$16, %esi
	movq	%r14, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_4x4
.Ltmp1832:
	addl	4(%rsp), %eax                   # 4-byte Folded Reload
.Ltmp1833:
	#DEBUG_VALUE: x264_pixel_satd_4x8:sum <- $eax
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movq	80(%rsp), %rcx
	movl	%eax, (%rcx)
.Ltmp1834:
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix2 <- $rbp
	.loc	0 275 1                         # x264_src/common/pixel.c:275:1
	movq	%r15, %rdi
	movl	$16, %esi
	movq	%rbp, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_4x4
.Ltmp1835:
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movl	%eax, 4(%rsp)                   # 4-byte Spill
	.loc	0 275 1                         # x264_src/common/pixel.c:275:1
	addq	%r12, %rbp
.Ltmp1836:
	#DEBUG_VALUE: x264_pixel_satd_x4_4x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movq	8(%rsp), %r14                   # 8-byte Reload
	.loc	0 275 1                         # x264_src/common/pixel.c:275:1
	movq	%r14, %rdi
	movl	$16, %esi
	movq	%rbp, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_4x4
.Ltmp1837:
	addl	4(%rsp), %eax                   # 4-byte Folded Reload
.Ltmp1838:
	#DEBUG_VALUE: x264_pixel_satd_4x8:sum <- $eax
	.loc	0 0 1                           # x264_src/common/pixel.c:0:1
	movq	80(%rsp), %rcx
.Ltmp1839:
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movl	%eax, 4(%rcx)
.Ltmp1840:
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix2 <- $r13
	.loc	0 275 1                         # x264_src/common/pixel.c:275:1
	movq	%r15, %rdi
	movl	$16, %esi
	movq	%r13, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_4x4
.Ltmp1841:
	movl	%eax, %ebp
	addq	%r12, %r13
.Ltmp1842:
	#DEBUG_VALUE: x264_pixel_satd_x4_4x8:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	movq	%r14, %rdi
	movl	$16, %esi
	movq	%r13, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_4x4
.Ltmp1843:
	addl	%ebp, %eax
.Ltmp1844:
	#DEBUG_VALUE: x264_pixel_satd_4x8:sum <- $eax
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	movq	80(%rsp), %r13
.Ltmp1845:
	.loc	0 446 1 is_stmt 1               # x264_src/common/pixel.c:446:1
	movl	%eax, 8(%r13)
.Ltmp1846:
	#DEBUG_VALUE: x264_pixel_satd_4x8:i_pix1 <- 16
	#DEBUG_VALUE: x264_pixel_satd_4x8:pix2 <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 275 1                         # x264_src/common/pixel.c:275:1
	movq	%r15, %rdi
	movl	$16, %esi
	movq	16(%rsp), %r15                  # 8-byte Reload
.Ltmp1847:
	movq	%r15, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_4x4
.Ltmp1848:
	movl	%eax, %ebp
	addq	%r12, %r15
.Ltmp1849:
	#DEBUG_VALUE: x264_pixel_satd_x4_4x8:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	movq	%r14, %rdi
	movl	$16, %esi
	movq	%r15, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_4x4
.Ltmp1850:
	addl	%ebp, %eax
.Ltmp1851:
	#DEBUG_VALUE: x264_pixel_satd_4x8:sum <- $eax
	.loc	0 446 1                         # x264_src/common/pixel.c:446:1
	movl	%eax, 12(%r13)
	.loc	0 446 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:446:1
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp1852:
	#DEBUG_VALUE: x264_pixel_satd_x4_4x8:i_stride <- [DW_OP_LLVM_entry_value 1] $r9d
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1853:
.Lfunc_end50:
	.size	x264_pixel_satd_x4_4x8, .Lfunc_end50-x264_pixel_satd_x4_4x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_satd_x4_4x4
	.type	x264_pixel_satd_x4_4x4,@function
x264_pixel_satd_x4_4x4:                 # @x264_pixel_satd_x4_4x4
.Lfunc_begin51:
	.loc	0 446 0 is_stmt 1               # x264_src/common/pixel.c:446:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_satd_x4_4x4:fenc <- $rdi
	#DEBUG_VALUE: x264_pixel_satd_x4_4x4:pix0 <- $rsi
	#DEBUG_VALUE: x264_pixel_satd_x4_4x4:pix1 <- $rdx
	#DEBUG_VALUE: x264_pixel_satd_x4_4x4:pix2 <- $rcx
	#DEBUG_VALUE: x264_pixel_satd_x4_4x4:pix3 <- $r8
	#DEBUG_VALUE: x264_pixel_satd_x4_4x4:i_stride <- $r9d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp1854:
	#DEBUG_VALUE: x264_pixel_satd_x4_4x4:scores <- [DW_OP_plus_uconst 64] [$rsp+0]
	movl	%r9d, %ebx
	movq	%r8, %r14
	movq	%rcx, %r15
	movq	%rdx, %r12
	movq	%rsi, %rdx
.Ltmp1855:
	#DEBUG_VALUE: x264_pixel_satd_x4_4x4:pix1 <- $r12
	movq	%rdi, %r13
	movq	64(%rsp), %rbp
.Ltmp1856:
	.loc	0 446 1 prologue_end            # x264_src/common/pixel.c:446:1
	movl	$16, %esi
.Ltmp1857:
	#DEBUG_VALUE: x264_pixel_satd_x4_4x4:pix0 <- $rdx
	movl	%r9d, %ecx
.Ltmp1858:
	#DEBUG_VALUE: x264_pixel_satd_x4_4x4:pix2 <- $r15
	callq	x264_pixel_satd_4x4
.Ltmp1859:
	#DEBUG_VALUE: x264_pixel_satd_x4_4x4:i_stride <- $ebx
	#DEBUG_VALUE: x264_pixel_satd_x4_4x4:pix3 <- $r14
	#DEBUG_VALUE: x264_pixel_satd_x4_4x4:pix0 <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_pixel_satd_x4_4x4:fenc <- $r13
	movl	%eax, (%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r12, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_4x4
.Ltmp1860:
	movl	%eax, 4(%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r15, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_4x4
.Ltmp1861:
	movl	%eax, 8(%rbp)
	movq	%r13, %rdi
	movl	$16, %esi
	movq	%r14, %rdx
	movl	%ebx, %ecx
	callq	x264_pixel_satd_4x4
.Ltmp1862:
	movl	%eax, 12(%rbp)
	.loc	0 446 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:446:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp1863:
	#DEBUG_VALUE: x264_pixel_satd_x4_4x4:i_stride <- [DW_OP_LLVM_entry_value 1] $r9d
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp1864:
	#DEBUG_VALUE: x264_pixel_satd_x4_4x4:pix1 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp1865:
	#DEBUG_VALUE: x264_pixel_satd_x4_4x4:fenc <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1866:
	#DEBUG_VALUE: x264_pixel_satd_x4_4x4:pix3 <- [DW_OP_LLVM_entry_value 1] $r8
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1867:
	#DEBUG_VALUE: x264_pixel_satd_x4_4x4:pix2 <- [DW_OP_LLVM_entry_value 1] $rcx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1868:
.Lfunc_end51:
	.size	x264_pixel_satd_x4_4x4, .Lfunc_end51-x264_pixel_satd_x4_4x4
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_hadamard_ac_16x16
	.type	x264_pixel_hadamard_ac_16x16,@function
x264_pixel_hadamard_ac_16x16:           # @x264_pixel_hadamard_ac_16x16
.Lfunc_begin52:
	.loc	0 377 0 is_stmt 1               # x264_src/common/pixel.c:377:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_hadamard_ac_16x16:pix <- $rdi
	#DEBUG_VALUE: x264_pixel_hadamard_ac_16x16:stride <- $esi
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movl	%esi, %ebx
	movq	%rdi, %r14
.Ltmp1869:
	.loc	0 377 1 prologue_end            # x264_src/common/pixel.c:377:1
	callq	pixel_hadamard_ac
.Ltmp1870:
	#DEBUG_VALUE: x264_pixel_hadamard_ac_16x16:stride <- $ebx
	#DEBUG_VALUE: x264_pixel_hadamard_ac_16x16:pix <- $r14
	movq	%rax, %r15
.Ltmp1871:
	#DEBUG_VALUE: x264_pixel_hadamard_ac_16x16:sum <- $r15
	.loc	0 377 1 is_stmt 0               # x264_src/common/pixel.c:377:1
	leaq	8(%r14), %rdi
	movl	%ebx, %esi
	callq	pixel_hadamard_ac
.Ltmp1872:
	movq	%rax, %r12
	addq	%r15, %r12
.Ltmp1873:
	#DEBUG_VALUE: x264_pixel_hadamard_ac_16x16:sum <- $r12
	.loc	0 377 1                         # x264_src/common/pixel.c:377:1
	leal	(,%rbx,8), %eax
	movslq	%eax, %r13
	leaq	(%r14,%r13), %rdi
	movl	%ebx, %esi
	callq	pixel_hadamard_ac
.Ltmp1874:
	movq	%rax, %r15
	addq	%r12, %r15
.Ltmp1875:
	#DEBUG_VALUE: x264_pixel_hadamard_ac_16x16:sum <- $r15
	.loc	0 377 1                         # x264_src/common/pixel.c:377:1
	leaq	(%r14,%r13), %rdi
	addq	$8, %rdi
	movl	%ebx, %esi
	callq	pixel_hadamard_ac
.Ltmp1876:
	addq	%r15, %rax
.Ltmp1877:
	#DEBUG_VALUE: x264_pixel_hadamard_ac_16x16:sum <- $rax
	.loc	0 377 1                         # x264_src/common/pixel.c:377:1
	movq	%rax, %rcx
	shrq	$2, %rcx
	movabsq	$4611686014132420608, %rdx      # imm = 0x3FFFFFFF00000000
	andq	%rcx, %rdx
	shrl	%eax
.Ltmp1878:
	orq	%rdx, %rax
	.loc	0 377 1 epilogue_begin          # x264_src/common/pixel.c:377:1
	popq	%rbx
.Ltmp1879:
	#DEBUG_VALUE: x264_pixel_hadamard_ac_16x16:stride <- [DW_OP_LLVM_entry_value 1] $esi
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp1880:
	#DEBUG_VALUE: x264_pixel_hadamard_ac_16x16:pix <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1881:
.Lfunc_end52:
	.size	x264_pixel_hadamard_ac_16x16, .Lfunc_end52-x264_pixel_hadamard_ac_16x16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_hadamard_ac_16x8
	.type	x264_pixel_hadamard_ac_16x8,@function
x264_pixel_hadamard_ac_16x8:            # @x264_pixel_hadamard_ac_16x8
.Lfunc_begin53:
	.loc	0 378 0 is_stmt 1               # x264_src/common/pixel.c:378:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_hadamard_ac_16x8:pix <- $rdi
	#DEBUG_VALUE: x264_pixel_hadamard_ac_16x8:stride <- $esi
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movl	%esi, %ebx
	movq	%rdi, %r14
.Ltmp1882:
	.loc	0 378 1 prologue_end            # x264_src/common/pixel.c:378:1
	callq	pixel_hadamard_ac
.Ltmp1883:
	#DEBUG_VALUE: x264_pixel_hadamard_ac_16x8:stride <- $ebx
	#DEBUG_VALUE: x264_pixel_hadamard_ac_16x8:pix <- $r14
	movq	%rax, %r15
.Ltmp1884:
	#DEBUG_VALUE: x264_pixel_hadamard_ac_16x8:sum <- $r15
	.loc	0 378 1 is_stmt 0               # x264_src/common/pixel.c:378:1
	addq	$8, %r14
.Ltmp1885:
	#DEBUG_VALUE: x264_pixel_hadamard_ac_16x8:pix <- [DW_OP_LLVM_entry_value 1] $rdi
	movq	%r14, %rdi
	movl	%ebx, %esi
	callq	pixel_hadamard_ac
.Ltmp1886:
	addq	%r15, %rax
.Ltmp1887:
	#DEBUG_VALUE: x264_pixel_hadamard_ac_16x8:sum <- $rax
	.loc	0 378 1                         # x264_src/common/pixel.c:378:1
	movq	%rax, %rcx
	shrq	$2, %rcx
	movabsq	$4611686014132420608, %rdx      # imm = 0x3FFFFFFF00000000
	andq	%rcx, %rdx
	shrl	%eax
.Ltmp1888:
	orq	%rdx, %rax
	.loc	0 378 1 epilogue_begin          # x264_src/common/pixel.c:378:1
	popq	%rbx
.Ltmp1889:
	#DEBUG_VALUE: x264_pixel_hadamard_ac_16x8:stride <- [DW_OP_LLVM_entry_value 1] $esi
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1890:
.Lfunc_end53:
	.size	x264_pixel_hadamard_ac_16x8, .Lfunc_end53-x264_pixel_hadamard_ac_16x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_hadamard_ac_8x16
	.type	x264_pixel_hadamard_ac_8x16,@function
x264_pixel_hadamard_ac_8x16:            # @x264_pixel_hadamard_ac_8x16
.Lfunc_begin54:
	.loc	0 379 0 is_stmt 1               # x264_src/common/pixel.c:379:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_hadamard_ac_8x16:pix <- $rdi
	#DEBUG_VALUE: x264_pixel_hadamard_ac_8x16:stride <- $esi
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movl	%esi, %ebx
	movq	%rdi, %r14
.Ltmp1891:
	.loc	0 379 1 prologue_end            # x264_src/common/pixel.c:379:1
	callq	pixel_hadamard_ac
.Ltmp1892:
	#DEBUG_VALUE: x264_pixel_hadamard_ac_8x16:stride <- $ebx
	#DEBUG_VALUE: x264_pixel_hadamard_ac_8x16:pix <- $r14
	movq	%rax, %r15
.Ltmp1893:
	#DEBUG_VALUE: x264_pixel_hadamard_ac_8x16:sum <- $r15
	.loc	0 379 1 is_stmt 0               # x264_src/common/pixel.c:379:1
	leal	(,%rbx,8), %eax
	movslq	%eax, %rdi
	addq	%r14, %rdi
	movl	%ebx, %esi
	callq	pixel_hadamard_ac
.Ltmp1894:
	addq	%r15, %rax
.Ltmp1895:
	#DEBUG_VALUE: x264_pixel_hadamard_ac_8x16:sum <- $rax
	.loc	0 379 1                         # x264_src/common/pixel.c:379:1
	movq	%rax, %rcx
	shrq	$2, %rcx
	movabsq	$4611686014132420608, %rdx      # imm = 0x3FFFFFFF00000000
	andq	%rcx, %rdx
	shrl	%eax
.Ltmp1896:
	orq	%rdx, %rax
	.loc	0 379 1 epilogue_begin          # x264_src/common/pixel.c:379:1
	popq	%rbx
.Ltmp1897:
	#DEBUG_VALUE: x264_pixel_hadamard_ac_8x16:stride <- [DW_OP_LLVM_entry_value 1] $esi
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp1898:
	#DEBUG_VALUE: x264_pixel_hadamard_ac_8x16:pix <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1899:
.Lfunc_end54:
	.size	x264_pixel_hadamard_ac_8x16, .Lfunc_end54-x264_pixel_hadamard_ac_8x16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_hadamard_ac_8x8
	.type	x264_pixel_hadamard_ac_8x8,@function
x264_pixel_hadamard_ac_8x8:             # @x264_pixel_hadamard_ac_8x8
.Lfunc_begin55:
	.loc	0 380 0 is_stmt 1               # x264_src/common/pixel.c:380:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_hadamard_ac_8x8:pix <- $rdi
	#DEBUG_VALUE: x264_pixel_hadamard_ac_8x8:stride <- $esi
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1900:
	.loc	0 380 1 prologue_end            # x264_src/common/pixel.c:380:1
	callq	pixel_hadamard_ac
.Ltmp1901:
	#DEBUG_VALUE: x264_pixel_hadamard_ac_8x8:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: x264_pixel_hadamard_ac_8x8:pix <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_hadamard_ac_8x8:sum <- $rax
	movq	%rax, %rcx
	shrq	$2, %rcx
	movabsq	$4611686014132420608, %rdx      # imm = 0x3FFFFFFF00000000
	andq	%rcx, %rdx
	shrl	%eax
.Ltmp1902:
	orq	%rdx, %rax
	.loc	0 380 1 epilogue_begin is_stmt 0 # x264_src/common/pixel.c:380:1
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1903:
.Lfunc_end55:
	.size	x264_pixel_hadamard_ac_8x8, .Lfunc_end55-x264_pixel_hadamard_ac_8x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_ads4
	.type	x264_pixel_ads4,@function
x264_pixel_ads4:                        # @x264_pixel_ads4
.Lfunc_begin56:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_ads4:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads4:sums <- $rsi
	#DEBUG_VALUE: x264_pixel_ads4:delta <- $edx
	#DEBUG_VALUE: x264_pixel_ads4:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads4:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads4:width <- $r9d
	#DEBUG_VALUE: x264_pixel_ads4:thresh <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ads4:nmv <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 542 23 prologue_end is_stmt 1 # x264_src/common/pixel.c:542:23
	testl	%r9d, %r9d
.Ltmp1904:
	.loc	0 542 5 is_stmt 0               # x264_src/common/pixel.c:542:5
	jle	.LBB56_1
.Ltmp1905:
# %bb.3:                                # %for.body.lr.ph
	#DEBUG_VALUE: x264_pixel_ads4:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads4:sums <- $rsi
	#DEBUG_VALUE: x264_pixel_ads4:delta <- $edx
	#DEBUG_VALUE: x264_pixel_ads4:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads4:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads4:width <- $r9d
	#DEBUG_VALUE: x264_pixel_ads4:thresh <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ads4:nmv <- 0
	#DEBUG_VALUE: i <- 0
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset %rbx, -24
	.cfi_offset %rbp, -16
	movl	24(%rsp), %r10d
	movslq	%edx, %rax
.Ltmp1906:
	.loc	0 542 23                        # x264_src/common/pixel.c:542:23
	movl	%r9d, %edx
.Ltmp1907:
	#DEBUG_VALUE: x264_pixel_ads4:delta <- [DW_OP_LLVM_entry_value 1] $edx
	.loc	0 542 5                         # x264_src/common/pixel.c:542:5
	leaq	(%rsi,%rax,2), %r9
.Ltmp1908:
	#DEBUG_VALUE: x264_pixel_ads4:width <- $edx
	addq	$16, %r9
	xorl	%r11d, %r11d
	xorl	%eax, %eax
	jmp	.LBB56_4
.Ltmp1909:
	.p2align	4, 0x90
.LBB56_6:                               # %if.end
                                        #   in Loop: Header=BB56_4 Depth=1
	#DEBUG_VALUE: x264_pixel_ads4:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads4:delta <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ads4:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads4:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads4:width <- $edx
	#DEBUG_VALUE: x264_pixel_ads4:nmv <- $eax
	#DEBUG_VALUE: i <- $r11
	#DEBUG_VALUE: x264_pixel_ads4:nmv <- $eax
	.loc	0 542 33                        # x264_src/common/pixel.c:542:33
	incq	%r11
.Ltmp1910:
	#DEBUG_VALUE: x264_pixel_ads4:sums <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_mul, DW_OP_consts 2, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef
	#DEBUG_VALUE: i <- $r11
	.loc	0 542 23                        # x264_src/common/pixel.c:542:23
	cmpq	%r11, %rdx
.Ltmp1911:
	.loc	0 542 5                         # x264_src/common/pixel.c:542:5
	je	.LBB56_7
.Ltmp1912:
.LBB56_4:                               # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_pixel_ads4:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads4:delta <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ads4:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads4:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads4:width <- $edx
	#DEBUG_VALUE: x264_pixel_ads4:sums <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_mul, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_stack_value] undef
	#DEBUG_VALUE: i <- $r11
	#DEBUG_VALUE: x264_pixel_ads4:nmv <- $eax
	.loc	0 544 36 is_stmt 1              # x264_src/common/pixel.c:544:36
	movzwl	(%rsi,%r11,2), %ebx
	.loc	0 545 36                        # x264_src/common/pixel.c:545:36
	movd	%ebx, %xmm0
	pinsrw	$2, 16(%rsi,%r11,2), %xmm0
	pinsrw	$4, -16(%r9,%r11,2), %xmm0
	.loc	0 544 24                        # x264_src/common/pixel.c:544:24
	movdqu	(%rdi), %xmm1
	.loc	0 545 36                        # x264_src/common/pixel.c:545:36
	pinsrw	$6, (%r9,%r11,2), %xmm0
	.loc	0 545 34 is_stmt 0              # x264_src/common/pixel.c:545:34
	psubd	%xmm0, %xmm1
	.loc	0 545 19                        # x264_src/common/pixel.c:545:19
	movdqa	%xmm1, %xmm0
	psrad	$31, %xmm0
	pxor	%xmm0, %xmm1
	psubd	%xmm0, %xmm1
	.loc	0 548 19 is_stmt 1              # x264_src/common/pixel.c:548:19
	movzwl	(%rcx,%r11,2), %ebx
	.loc	0 548 17 is_stmt 0              # x264_src/common/pixel.c:548:17
	pshufd	$238, %xmm1, %xmm0              # xmm0 = xmm1[2,3,2,3]
	paddd	%xmm1, %xmm0
	pshufd	$85, %xmm0, %xmm1               # xmm1 = xmm0[1,1,1,1]
	paddd	%xmm0, %xmm1
	movd	%xmm1, %ebp
	.loc	0 547 17 is_stmt 1              # x264_src/common/pixel.c:547:17
	addl	%ebx, %ebp
.Ltmp1913:
	#DEBUG_VALUE: ads <- $ebp
	.loc	0 549 17                        # x264_src/common/pixel.c:549:17
	cmpl	%r10d, %ebp
.Ltmp1914:
	.loc	0 549 13 is_stmt 0              # x264_src/common/pixel.c:549:13
	jge	.LBB56_6
.Ltmp1915:
# %bb.5:                                # %if.then
                                        #   in Loop: Header=BB56_4 Depth=1
	#DEBUG_VALUE: x264_pixel_ads4:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads4:delta <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ads4:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads4:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads4:width <- $edx
	#DEBUG_VALUE: x264_pixel_ads4:nmv <- $eax
	#DEBUG_VALUE: i <- $r11
	#DEBUG_VALUE: ads <- $ebp
	.loc	0 550 13 is_stmt 1              # x264_src/common/pixel.c:550:13
	movslq	%eax, %rbx
	.loc	0 550 20 is_stmt 0              # x264_src/common/pixel.c:550:20
	incl	%eax
.Ltmp1916:
	#DEBUG_VALUE: x264_pixel_ads4:nmv <- $eax
	.loc	0 550 24                        # x264_src/common/pixel.c:550:24
	movw	%r11w, (%r8,%rbx,2)
	jmp	.LBB56_6
.Ltmp1917:
.LBB56_7:
	#DEBUG_VALUE: x264_pixel_ads4:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads4:delta <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ads4:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads4:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads4:width <- $edx
	#DEBUG_VALUE: x264_pixel_ads4:nmv <- $eax
	.loc	0 0 24                          # x264_src/common/pixel.c:0:24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	.cfi_restore %rbx
	.cfi_restore %rbp
	.loc	0 552 5 is_stmt 1               # x264_src/common/pixel.c:552:5
	retq
.Ltmp1918:
.LBB56_1:
	#DEBUG_VALUE: x264_pixel_ads4:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads4:sums <- $rsi
	#DEBUG_VALUE: x264_pixel_ads4:delta <- $edx
	#DEBUG_VALUE: x264_pixel_ads4:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads4:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads4:width <- $r9d
	#DEBUG_VALUE: x264_pixel_ads4:thresh <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ads4:nmv <- 0
	.loc	0 0 5 is_stmt 0                 # x264_src/common/pixel.c:0:5
	xorl	%eax, %eax
	.loc	0 552 5                         # x264_src/common/pixel.c:552:5
	retq
.Ltmp1919:
.Lfunc_end56:
	.size	x264_pixel_ads4, .Lfunc_end56-x264_pixel_ads4
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_ads2
	.type	x264_pixel_ads2,@function
x264_pixel_ads2:                        # @x264_pixel_ads2
.Lfunc_begin57:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_ads2:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads2:sums <- $rsi
	#DEBUG_VALUE: x264_pixel_ads2:delta <- $edx
	#DEBUG_VALUE: x264_pixel_ads2:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads2:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads2:width <- $r9d
	#DEBUG_VALUE: x264_pixel_ads2:thresh <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ads2:nmv <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 559 23 prologue_end is_stmt 1 # x264_src/common/pixel.c:559:23
	testl	%r9d, %r9d
.Ltmp1920:
	.loc	0 559 5 is_stmt 0               # x264_src/common/pixel.c:559:5
	jle	.LBB57_1
.Ltmp1921:
# %bb.3:                                # %for.body.lr.ph
	#DEBUG_VALUE: x264_pixel_ads2:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads2:sums <- $rsi
	#DEBUG_VALUE: x264_pixel_ads2:delta <- $edx
	#DEBUG_VALUE: x264_pixel_ads2:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads2:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads2:width <- $r9d
	#DEBUG_VALUE: x264_pixel_ads2:thresh <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ads2:nmv <- 0
	#DEBUG_VALUE: i <- 0
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movl	32(%rsp), %r10d
	movslq	%edx, %rax
.Ltmp1922:
	.loc	0 559 23                        # x264_src/common/pixel.c:559:23
	movl	%r9d, %edx
.Ltmp1923:
	#DEBUG_VALUE: x264_pixel_ads2:delta <- [DW_OP_LLVM_entry_value 1] $edx
	.loc	0 559 5                         # x264_src/common/pixel.c:559:5
	leaq	(%rsi,%rax,2), %r9
.Ltmp1924:
	#DEBUG_VALUE: x264_pixel_ads2:width <- $edx
	.loc	0 0 5                           # x264_src/common/pixel.c:0:5
	xorl	%r11d, %r11d
	xorl	%eax, %eax
	jmp	.LBB57_4
.Ltmp1925:
	.p2align	4, 0x90
.LBB57_6:                               # %if.end
                                        #   in Loop: Header=BB57_4 Depth=1
	#DEBUG_VALUE: x264_pixel_ads2:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads2:delta <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ads2:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads2:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads2:width <- $edx
	#DEBUG_VALUE: x264_pixel_ads2:nmv <- $eax
	#DEBUG_VALUE: i <- $r11
	#DEBUG_VALUE: x264_pixel_ads2:nmv <- $eax
	.loc	0 559 33                        # x264_src/common/pixel.c:559:33
	incq	%r11
.Ltmp1926:
	#DEBUG_VALUE: x264_pixel_ads2:sums <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_mul, DW_OP_consts 2, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef
	#DEBUG_VALUE: i <- $r11
	.loc	0 559 23                        # x264_src/common/pixel.c:559:23
	cmpq	%r11, %rdx
.Ltmp1927:
	.loc	0 559 5                         # x264_src/common/pixel.c:559:5
	je	.LBB57_7
.Ltmp1928:
.LBB57_4:                               # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_pixel_ads2:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads2:delta <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ads2:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads2:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads2:width <- $edx
	#DEBUG_VALUE: x264_pixel_ads2:sums <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_mul, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_stack_value] undef
	#DEBUG_VALUE: i <- $r11
	#DEBUG_VALUE: x264_pixel_ads2:nmv <- $eax
	.loc	0 561 36 is_stmt 1              # x264_src/common/pixel.c:561:36
	movzwl	(%rsi,%r11,2), %ebx
	.loc	0 561 24 is_stmt 0              # x264_src/common/pixel.c:561:24
	movl	(%rdi), %ebp
	.loc	0 561 34                        # x264_src/common/pixel.c:561:34
	subl	%ebx, %ebp
	.loc	0 562 24 is_stmt 1              # x264_src/common/pixel.c:562:24
	movl	4(%rdi), %ebx
	.loc	0 561 19                        # x264_src/common/pixel.c:561:19
	movl	%ebp, %r14d
	negl	%r14d
	cmovsl	%ebp, %r14d
	.loc	0 562 36                        # x264_src/common/pixel.c:562:36
	movzwl	(%r9,%r11,2), %ebp
	.loc	0 562 34 is_stmt 0              # x264_src/common/pixel.c:562:34
	subl	%ebp, %ebx
	.loc	0 562 19                        # x264_src/common/pixel.c:562:19
	movl	%ebx, %ebp
	negl	%ebp
	cmovsl	%ebx, %ebp
	.loc	0 563 19 is_stmt 1              # x264_src/common/pixel.c:563:19
	movzwl	(%rcx,%r11,2), %ebx
	.loc	0 562 17                        # x264_src/common/pixel.c:562:17
	addl	%r14d, %ebx
	.loc	0 563 17                        # x264_src/common/pixel.c:563:17
	addl	%ebp, %ebx
.Ltmp1929:
	#DEBUG_VALUE: ads <- $ebx
	.loc	0 564 17                        # x264_src/common/pixel.c:564:17
	cmpl	%r10d, %ebx
.Ltmp1930:
	.loc	0 564 13 is_stmt 0              # x264_src/common/pixel.c:564:13
	jge	.LBB57_6
.Ltmp1931:
# %bb.5:                                # %if.then
                                        #   in Loop: Header=BB57_4 Depth=1
	#DEBUG_VALUE: x264_pixel_ads2:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads2:delta <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ads2:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads2:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads2:width <- $edx
	#DEBUG_VALUE: x264_pixel_ads2:nmv <- $eax
	#DEBUG_VALUE: i <- $r11
	#DEBUG_VALUE: ads <- $ebx
	.loc	0 565 13 is_stmt 1              # x264_src/common/pixel.c:565:13
	movslq	%eax, %rbx
.Ltmp1932:
	.loc	0 565 20 is_stmt 0              # x264_src/common/pixel.c:565:20
	incl	%eax
.Ltmp1933:
	#DEBUG_VALUE: x264_pixel_ads2:nmv <- $eax
	.loc	0 565 24                        # x264_src/common/pixel.c:565:24
	movw	%r11w, (%r8,%rbx,2)
	jmp	.LBB57_6
.Ltmp1934:
.LBB57_7:
	#DEBUG_VALUE: x264_pixel_ads2:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads2:delta <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_pixel_ads2:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads2:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads2:width <- $edx
	#DEBUG_VALUE: x264_pixel_ads2:nmv <- $eax
	.loc	0 0 24                          # x264_src/common/pixel.c:0:24
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	.cfi_restore %rbx
	.cfi_restore %r14
	.cfi_restore %rbp
	.loc	0 567 5 is_stmt 1               # x264_src/common/pixel.c:567:5
	retq
.Ltmp1935:
.LBB57_1:
	#DEBUG_VALUE: x264_pixel_ads2:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads2:sums <- $rsi
	#DEBUG_VALUE: x264_pixel_ads2:delta <- $edx
	#DEBUG_VALUE: x264_pixel_ads2:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads2:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads2:width <- $r9d
	#DEBUG_VALUE: x264_pixel_ads2:thresh <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ads2:nmv <- 0
	.loc	0 0 5 is_stmt 0                 # x264_src/common/pixel.c:0:5
	xorl	%eax, %eax
	.loc	0 567 5                         # x264_src/common/pixel.c:567:5
	retq
.Ltmp1936:
.Lfunc_end57:
	.size	x264_pixel_ads2, .Lfunc_end57-x264_pixel_ads2
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_ads1
	.type	x264_pixel_ads1,@function
x264_pixel_ads1:                        # @x264_pixel_ads1
.Lfunc_begin58:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_ads1:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads1:sums <- $rsi
	#DEBUG_VALUE: x264_pixel_ads1:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads1:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads1:width <- $r9d
	#DEBUG_VALUE: x264_pixel_ads1:thresh <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ads1:nmv <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 574 22 prologue_end is_stmt 1 # x264_src/common/pixel.c:574:22
	testl	%r9d, %r9d
.Ltmp1937:
	.loc	0 574 5 is_stmt 0               # x264_src/common/pixel.c:574:5
	jle	.LBB58_1
.Ltmp1938:
# %bb.3:                                # %for.body.preheader
	#DEBUG_VALUE: x264_pixel_ads1:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads1:sums <- $rsi
	#DEBUG_VALUE: x264_pixel_ads1:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads1:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads1:width <- $r9d
	#DEBUG_VALUE: x264_pixel_ads1:thresh <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ads1:nmv <- 0
	#DEBUG_VALUE: i <- 0
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movl	16(%rsp), %edx
.Ltmp1939:
	.loc	0 574 22                        # x264_src/common/pixel.c:574:22
	movl	%r9d, %r9d
.Ltmp1940:
	.loc	0 0 22                          # x264_src/common/pixel.c:0:22
	xorl	%r10d, %r10d
	xorl	%eax, %eax
	jmp	.LBB58_4
.Ltmp1941:
	.p2align	4, 0x90
.LBB58_6:                               # %if.end
                                        #   in Loop: Header=BB58_4 Depth=1
	#DEBUG_VALUE: x264_pixel_ads1:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads1:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads1:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads1:width <- $r9d
	#DEBUG_VALUE: x264_pixel_ads1:nmv <- $eax
	#DEBUG_VALUE: i <- $r10
	#DEBUG_VALUE: x264_pixel_ads1:nmv <- $eax
	.loc	0 574 31                        # x264_src/common/pixel.c:574:31
	incq	%r10
.Ltmp1942:
	#DEBUG_VALUE: x264_pixel_ads1:sums <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_mul, DW_OP_consts 2, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef
	#DEBUG_VALUE: i <- $r10
	.loc	0 574 22                        # x264_src/common/pixel.c:574:22
	cmpq	%r10, %r9
.Ltmp1943:
	.loc	0 574 5                         # x264_src/common/pixel.c:574:5
	je	.LBB58_7
.Ltmp1944:
.LBB58_4:                               # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_pixel_ads1:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads1:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads1:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads1:width <- $r9d
	#DEBUG_VALUE: x264_pixel_ads1:sums <- [DW_OP_LLVM_arg 0, DW_OP_consts 2, DW_OP_mul, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_stack_value] undef
	#DEBUG_VALUE: i <- $r10
	#DEBUG_VALUE: x264_pixel_ads1:nmv <- $eax
	.loc	0 576 24 is_stmt 1              # x264_src/common/pixel.c:576:24
	movl	(%rdi), %r11d
	.loc	0 576 36 is_stmt 0              # x264_src/common/pixel.c:576:36
	movzwl	(%rsi,%r10,2), %ebx
	.loc	0 576 34                        # x264_src/common/pixel.c:576:34
	subl	%ebx, %r11d
	.loc	0 576 19                        # x264_src/common/pixel.c:576:19
	movl	%r11d, %ebx
	negl	%ebx
	cmovsl	%r11d, %ebx
	.loc	0 577 19 is_stmt 1              # x264_src/common/pixel.c:577:19
	movzwl	(%rcx,%r10,2), %r11d
	.loc	0 577 17 is_stmt 0              # x264_src/common/pixel.c:577:17
	addl	%ebx, %r11d
.Ltmp1945:
	#DEBUG_VALUE: ads <- $r11d
	.loc	0 578 17 is_stmt 1              # x264_src/common/pixel.c:578:17
	cmpl	%edx, %r11d
.Ltmp1946:
	.loc	0 578 13 is_stmt 0              # x264_src/common/pixel.c:578:13
	jge	.LBB58_6
.Ltmp1947:
# %bb.5:                                # %if.then
                                        #   in Loop: Header=BB58_4 Depth=1
	#DEBUG_VALUE: x264_pixel_ads1:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads1:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads1:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads1:width <- $r9d
	#DEBUG_VALUE: x264_pixel_ads1:nmv <- $eax
	#DEBUG_VALUE: i <- $r10
	#DEBUG_VALUE: ads <- $r11d
	.loc	0 579 13 is_stmt 1              # x264_src/common/pixel.c:579:13
	movslq	%eax, %r11
.Ltmp1948:
	.loc	0 579 20 is_stmt 0              # x264_src/common/pixel.c:579:20
	incl	%eax
.Ltmp1949:
	#DEBUG_VALUE: x264_pixel_ads1:nmv <- $eax
	.loc	0 579 24                        # x264_src/common/pixel.c:579:24
	movw	%r10w, (%r8,%r11,2)
	jmp	.LBB58_6
.Ltmp1950:
.LBB58_7:
	#DEBUG_VALUE: x264_pixel_ads1:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads1:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads1:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads1:width <- $r9d
	#DEBUG_VALUE: x264_pixel_ads1:nmv <- $eax
	.loc	0 0 24                          # x264_src/common/pixel.c:0:24
	popq	%rbx
	.cfi_def_cfa_offset 8
	.cfi_restore %rbx
	.loc	0 581 5 is_stmt 1               # x264_src/common/pixel.c:581:5
	retq
.Ltmp1951:
.LBB58_1:
	#DEBUG_VALUE: x264_pixel_ads1:enc_dc <- $rdi
	#DEBUG_VALUE: x264_pixel_ads1:sums <- $rsi
	#DEBUG_VALUE: x264_pixel_ads1:cost_mvx <- $rcx
	#DEBUG_VALUE: x264_pixel_ads1:mvs <- $r8
	#DEBUG_VALUE: x264_pixel_ads1:width <- $r9d
	#DEBUG_VALUE: x264_pixel_ads1:thresh <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_pixel_ads1:nmv <- 0
	.loc	0 0 5 is_stmt 0                 # x264_src/common/pixel.c:0:5
	xorl	%eax, %eax
	.loc	0 581 5                         # x264_src/common/pixel.c:581:5
	retq
.Ltmp1952:
.Lfunc_end58:
	.size	x264_pixel_ads1, .Lfunc_end58-x264_pixel_ads1
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sa8d_16x16
	.type	x264_pixel_sa8d_16x16,@function
x264_pixel_sa8d_16x16:                  # @x264_pixel_sa8d_16x16
.Lfunc_begin59:
	.loc	0 319 0 is_stmt 1               # x264_src/common/pixel.c:319:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sa8d_16x16:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sa8d_16x16:i_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_sa8d_16x16:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_sa8d_16x16:i_pix2 <- $ecx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%ecx, %ebx
	movq	%rdx, %r15
	movl	%esi, %r14d
	movq	%rdi, %r12
.Ltmp1953:
	.loc	0 320 15 prologue_end           # x264_src/common/pixel.c:320:15
	callq	sa8d_8x8
.Ltmp1954:
	#DEBUG_VALUE: x264_pixel_sa8d_16x16:i_pix2 <- $ebx
	#DEBUG_VALUE: x264_pixel_sa8d_16x16:pix2 <- $r15
	#DEBUG_VALUE: x264_pixel_sa8d_16x16:i_pix1 <- $r14d
	#DEBUG_VALUE: x264_pixel_sa8d_16x16:pix1 <- $r12
	.loc	0 0 15 is_stmt 0                # x264_src/common/pixel.c:0:15
	movl	%eax, 12(%rsp)                  # 4-byte Spill
	.loc	0 321 29 is_stmt 1              # x264_src/common/pixel.c:321:29
	leaq	8(%r12), %rdi
	.loc	0 321 45 is_stmt 0              # x264_src/common/pixel.c:321:45
	leaq	8(%r15), %rdx
	.loc	0 321 15                        # x264_src/common/pixel.c:321:15
	movl	%r14d, %esi
	movl	%ebx, %ecx
	callq	sa8d_8x8
.Ltmp1955:
	movl	%eax, %r13d
	.loc	0 322 31 is_stmt 1              # x264_src/common/pixel.c:322:31
	leal	(,%r14,8), %eax
	.loc	0 322 29 is_stmt 0              # x264_src/common/pixel.c:322:29
	cltq
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	leaq	(%r12,%rax), %rdi
	.loc	0 322 54                        # x264_src/common/pixel.c:322:54
	leal	(,%rbx,8), %eax
	.loc	0 322 52                        # x264_src/common/pixel.c:322:52
	movslq	%eax, %rbp
	leaq	(%r15,%rbp), %rdx
	.loc	0 322 15                        # x264_src/common/pixel.c:322:15
	movl	%r14d, %esi
	movl	%ebx, %ecx
	callq	sa8d_8x8
.Ltmp1956:
	.loc	0 0 15                          # x264_src/common/pixel.c:0:15
	movl	%eax, 8(%rsp)                   # 4-byte Spill
	movq	16(%rsp), %rax                  # 8-byte Reload
	.loc	0 323 31 is_stmt 1              # x264_src/common/pixel.c:323:31
	leaq	(%r12,%rax), %rdi
	addq	$8, %rdi
	.loc	0 323 56 is_stmt 0              # x264_src/common/pixel.c:323:56
	leaq	(%r15,%rbp), %rdx
	addq	$8, %rdx
	.loc	0 323 15                        # x264_src/common/pixel.c:323:15
	movl	%r14d, %esi
	movl	%ebx, %ecx
	callq	sa8d_8x8
.Ltmp1957:
                                        # kill: def $eax killed $eax def $rax
	.loc	0 321 13 is_stmt 1              # x264_src/common/pixel.c:321:13
	addl	12(%rsp), %r13d                 # 4-byte Folded Reload
	.loc	0 322 13                        # x264_src/common/pixel.c:322:13
	addl	8(%rsp), %r13d                  # 4-byte Folded Reload
	.loc	0 324 16                        # x264_src/common/pixel.c:324:16
	addl	%r13d, %eax
	addl	$2, %eax
	.loc	0 324 19 is_stmt 0              # x264_src/common/pixel.c:324:19
	sarl	$2, %eax
	.loc	0 324 5 epilogue_begin          # x264_src/common/pixel.c:324:5
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp1958:
	#DEBUG_VALUE: x264_pixel_sa8d_16x16:i_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp1959:
	#DEBUG_VALUE: x264_pixel_sa8d_16x16:pix1 <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1960:
	#DEBUG_VALUE: x264_pixel_sa8d_16x16:i_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1961:
	#DEBUG_VALUE: x264_pixel_sa8d_16x16:pix2 <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1962:
.Lfunc_end59:
	.size	x264_pixel_sa8d_16x16, .Lfunc_end59-x264_pixel_sa8d_16x16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_sa8d_8x8
	.type	x264_pixel_sa8d_8x8,@function
x264_pixel_sa8d_8x8:                    # @x264_pixel_sa8d_8x8
.Lfunc_begin60:
	.loc	0 313 0 is_stmt 1               # x264_src/common/pixel.c:313:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_sa8d_8x8:pix1 <- $rdi
	#DEBUG_VALUE: x264_pixel_sa8d_8x8:i_pix1 <- $esi
	#DEBUG_VALUE: x264_pixel_sa8d_8x8:pix2 <- $rdx
	#DEBUG_VALUE: x264_pixel_sa8d_8x8:i_pix2 <- $ecx
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1963:
	.loc	0 314 15 prologue_end           # x264_src/common/pixel.c:314:15
	callq	sa8d_8x8
.Ltmp1964:
	#DEBUG_VALUE: x264_pixel_sa8d_8x8:i_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: x264_pixel_sa8d_8x8:pix2 <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_pixel_sa8d_8x8:i_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: x264_pixel_sa8d_8x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_pixel_sa8d_8x8:sum <- $eax
	.loc	0 315 16                        # x264_src/common/pixel.c:315:16
	addl	$2, %eax
.Ltmp1965:
	.loc	0 315 19 is_stmt 0              # x264_src/common/pixel.c:315:19
	sarl	$2, %eax
	.loc	0 315 5 epilogue_begin          # x264_src/common/pixel.c:315:5
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1966:
.Lfunc_end60:
	.size	x264_pixel_sa8d_8x8, .Lfunc_end60-x264_pixel_sa8d_8x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_var_16x16
	.type	x264_pixel_var_16x16,@function
x264_pixel_var_16x16:                   # @x264_pixel_var_16x16
.Lfunc_begin61:
	.loc	0 159 0 is_stmt 1               # x264_src/common/pixel.c:159:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_var_16x16:pix <- $rdi
	#DEBUG_VALUE: x264_pixel_var_16x16:i_stride <- $esi
	#DEBUG_VALUE: x264_pixel_var_16x16:sum <- 0
	#DEBUG_VALUE: x264_pixel_var_16x16:sqr <- 0
	#DEBUG_VALUE: y <- 0
	movslq	%esi, %rcx
.Ltmp1967:
	.loc	0 159 1 prologue_end            # x264_src/common/pixel.c:159:1
	addq	$15, %rdi
.Ltmp1968:
	#DEBUG_VALUE: x264_pixel_var_16x16:pix <- [DW_OP_LLVM_entry_value 1] $rdi
	.loc	0 0 1 is_stmt 0                 # x264_src/common/pixel.c:0:1
	xorl	%eax, %eax
	movl	$16, %edx
	xorl	%esi, %esi
.Ltmp1969:
	#DEBUG_VALUE: x264_pixel_var_16x16:i_stride <- [DW_OP_LLVM_entry_value 1] $esi
	.p2align	4, 0x90
.LBB61_1:                               # %for.cond1.preheader
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_pixel_var_16x16:i_stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: x264_pixel_var_16x16:pix <- [DW_OP_LLVM_arg 0, DW_OP_consts 16, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_LLVM_arg 0, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_stack_value] undef
	#DEBUG_VALUE: y <- [DW_OP_consts 16, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_stack_value] $edx
	#DEBUG_VALUE: x <- 0
	#DEBUG_VALUE: x264_pixel_var_16x16:sqr <- $eax
	#DEBUG_VALUE: x264_pixel_var_16x16:sum <- $esi
	.loc	0 159 1                         # x264_src/common/pixel.c:159:1
	movzbl	-15(%rdi), %r8d
	addl	%r8d, %esi
.Ltmp1970:
	#DEBUG_VALUE: x264_pixel_var_16x16:sum <- $esi
	imull	%r8d, %r8d
	addl	%eax, %r8d
.Ltmp1971:
	#DEBUG_VALUE: x264_pixel_var_16x16:sqr <- $r8d
	#DEBUG_VALUE: x <- 1
	movzbl	-14(%rdi), %r10d
.Ltmp1972:
	#DEBUG_VALUE: x264_pixel_var_16x16:sum <- undef
	movl	%r10d, %r9d
	imull	%r10d, %r9d
.Ltmp1973:
	#DEBUG_VALUE: x264_pixel_var_16x16:sqr <- undef
	#DEBUG_VALUE: x <- 2
	movzbl	-13(%rdi), %eax
	addl	%eax, %r10d
	addl	%esi, %r10d
.Ltmp1974:
	#DEBUG_VALUE: x264_pixel_var_16x16:sum <- $r10d
	imull	%eax, %eax
	addl	%r9d, %eax
	addl	%r8d, %eax
.Ltmp1975:
	#DEBUG_VALUE: x264_pixel_var_16x16:sqr <- $eax
	#DEBUG_VALUE: x <- 3
	movzbl	-12(%rdi), %esi
.Ltmp1976:
	#DEBUG_VALUE: x264_pixel_var_16x16:sum <- undef
	movl	%esi, %r8d
	imull	%esi, %r8d
.Ltmp1977:
	#DEBUG_VALUE: x264_pixel_var_16x16:sqr <- undef
	#DEBUG_VALUE: x <- 4
	movzbl	-11(%rdi), %r11d
	addl	%r11d, %esi
	#DEBUG_VALUE: x264_pixel_var_16x16:sum <- undef
	imull	%r11d, %r11d
	addl	%r8d, %r11d
	#DEBUG_VALUE: x264_pixel_var_16x16:sqr <- undef
.Ltmp1978:
	#DEBUG_VALUE: x <- 5
	movzbl	-10(%rdi), %r9d
	addl	%r9d, %esi
	addl	%r10d, %esi
.Ltmp1979:
	#DEBUG_VALUE: x264_pixel_var_16x16:sum <- $esi
	imull	%r9d, %r9d
	addl	%r11d, %r9d
	addl	%eax, %r9d
.Ltmp1980:
	#DEBUG_VALUE: x264_pixel_var_16x16:sqr <- $r9d
	#DEBUG_VALUE: x <- 6
	movzbl	-9(%rdi), %eax
.Ltmp1981:
	#DEBUG_VALUE: x264_pixel_var_16x16:sum <- undef
	movl	%eax, %r8d
	imull	%eax, %r8d
.Ltmp1982:
	#DEBUG_VALUE: x264_pixel_var_16x16:sqr <- undef
	#DEBUG_VALUE: x <- 7
	movzbl	-8(%rdi), %r10d
	addl	%r10d, %eax
	#DEBUG_VALUE: x264_pixel_var_16x16:sum <- undef
	imull	%r10d, %r10d
	addl	%r8d, %r10d
	#DEBUG_VALUE: x264_pixel_var_16x16:sqr <- undef
.Ltmp1983:
	#DEBUG_VALUE: x <- 8
	movzbl	-7(%rdi), %r11d
	addl	%r11d, %eax
	#DEBUG_VALUE: x264_pixel_var_16x16:sum <- undef
	imull	%r11d, %r11d
	addl	%r10d, %r11d
	#DEBUG_VALUE: x264_pixel_var_16x16:sqr <- undef
.Ltmp1984:
	#DEBUG_VALUE: x <- 9
	movzbl	-6(%rdi), %r8d
	addl	%r8d, %eax
	addl	%esi, %eax
.Ltmp1985:
	#DEBUG_VALUE: x264_pixel_var_16x16:sum <- $eax
	imull	%r8d, %r8d
	addl	%r11d, %r8d
	addl	%r9d, %r8d
.Ltmp1986:
	#DEBUG_VALUE: x264_pixel_var_16x16:sqr <- $r8d
	#DEBUG_VALUE: x <- 10
	movzbl	-5(%rdi), %esi
.Ltmp1987:
	#DEBUG_VALUE: x264_pixel_var_16x16:sum <- undef
	movl	%esi, %r9d
	imull	%esi, %r9d
.Ltmp1988:
	#DEBUG_VALUE: x264_pixel_var_16x16:sqr <- undef
	#DEBUG_VALUE: x <- 11
	movzbl	-4(%rdi), %r10d
	addl	%r10d, %esi
	#DEBUG_VALUE: x264_pixel_var_16x16:sum <- undef
	imull	%r10d, %r10d
	addl	%r9d, %r10d
	#DEBUG_VALUE: x264_pixel_var_16x16:sqr <- undef
.Ltmp1989:
	#DEBUG_VALUE: x <- 12
	movzbl	-3(%rdi), %r9d
	addl	%r9d, %esi
	#DEBUG_VALUE: x264_pixel_var_16x16:sum <- undef
	imull	%r9d, %r9d
	addl	%r10d, %r9d
	#DEBUG_VALUE: x264_pixel_var_16x16:sqr <- undef
.Ltmp1990:
	#DEBUG_VALUE: x <- 13
	movzbl	-2(%rdi), %r10d
	addl	%r10d, %esi
	#DEBUG_VALUE: x264_pixel_var_16x16:sum <- undef
	imull	%r10d, %r10d
	addl	%r9d, %r10d
	#DEBUG_VALUE: x264_pixel_var_16x16:sqr <- undef
.Ltmp1991:
	#DEBUG_VALUE: x <- 14
	movzbl	-1(%rdi), %r9d
	addl	%r9d, %esi
	addl	%eax, %esi
.Ltmp1992:
	#DEBUG_VALUE: x264_pixel_var_16x16:sum <- $esi
	imull	%r9d, %r9d
	addl	%r10d, %r9d
	addl	%r8d, %r9d
.Ltmp1993:
	#DEBUG_VALUE: x264_pixel_var_16x16:sqr <- $r9d
	#DEBUG_VALUE: x <- 15
	movzbl	(%rdi), %eax
	addl	%eax, %esi
.Ltmp1994:
	#DEBUG_VALUE: x264_pixel_var_16x16:sum <- $esi
	imull	%eax, %eax
	addl	%r9d, %eax
.Ltmp1995:
	#DEBUG_VALUE: x264_pixel_var_16x16:pix <- [DW_OP_LLVM_arg 0, DW_OP_consts 16, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_LLVM_arg 0, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 0, DW_OP_LLVM_convert 64 5, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef
	#DEBUG_VALUE: x264_pixel_var_16x16:sqr <- $eax
	#DEBUG_VALUE: x <- 16
	#DEBUG_VALUE: y <- [DW_OP_consts 16, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $edx
	.loc	0 159 1                         # x264_src/common/pixel.c:159:1
	addq	%rcx, %rdi
	decl	%edx
.Ltmp1996:
	.loc	0 159 1                         # x264_src/common/pixel.c:159:1
	jne	.LBB61_1
.Ltmp1997:
# %bb.2:                                # %for.cond.cleanup
	#DEBUG_VALUE: x264_pixel_var_16x16:i_stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: x264_pixel_var_16x16:sum <- $esi
	#DEBUG_VALUE: x264_pixel_var_16x16:sqr <- $eax
	.loc	0 159 1                         # x264_src/common/pixel.c:159:1
	movl	%esi, %ecx
	shlq	$32, %rax
.Ltmp1998:
	orq	%rcx, %rax
	retq
.Ltmp1999:
.Lfunc_end61:
	.size	x264_pixel_var_16x16, .Lfunc_end61-x264_pixel_var_16x16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_pixel_var_8x8
	.type	x264_pixel_var_8x8,@function
x264_pixel_var_8x8:                     # @x264_pixel_var_8x8
.Lfunc_begin62:
	.loc	0 160 0 is_stmt 1               # x264_src/common/pixel.c:160:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_pixel_var_8x8:pix <- $rdi
	#DEBUG_VALUE: x264_pixel_var_8x8:i_stride <- $esi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- 0
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- 0
	#DEBUG_VALUE: y <- 0
	movslq	%esi, %rax
.Ltmp2000:
	#DEBUG_VALUE: x <- 0
	.loc	0 160 1 prologue_end            # x264_src/common/pixel.c:160:1
	movzbl	(%rdi), %edx
.Ltmp2001:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- $edx
	movl	%edx, %ecx
	imull	%edx, %ecx
.Ltmp2002:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- $ecx
	#DEBUG_VALUE: x <- 1
	movzbl	1(%rdi), %esi
.Ltmp2003:
	#DEBUG_VALUE: x264_pixel_var_8x8:i_stride <- [DW_OP_LLVM_entry_value 1] $esi
	addl	%esi, %edx
.Ltmp2004:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- $edx
	imull	%esi, %esi
	addl	%ecx, %esi
.Ltmp2005:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- $esi
	#DEBUG_VALUE: x <- 2
	movzbl	2(%rdi), %r10d
.Ltmp2006:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	movl	%r10d, %r8d
	imull	%r10d, %r8d
.Ltmp2007:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
	#DEBUG_VALUE: x <- 3
	movzbl	3(%rdi), %ecx
	addl	%ecx, %r10d
	addl	%edx, %r10d
.Ltmp2008:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- $r10d
	imull	%ecx, %ecx
	addl	%r8d, %ecx
	addl	%esi, %ecx
.Ltmp2009:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- $ecx
	#DEBUG_VALUE: x <- 4
	movzbl	4(%rdi), %r8d
.Ltmp2010:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	movl	%r8d, %edx
	imull	%r8d, %edx
.Ltmp2011:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
	#DEBUG_VALUE: x <- 5
	movzbl	5(%rdi), %esi
	addl	%esi, %r8d
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%esi, %esi
	addl	%edx, %esi
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2012:
	#DEBUG_VALUE: x <- 6
	movzbl	6(%rdi), %r9d
	addl	%r9d, %r8d
	addl	%r10d, %r8d
.Ltmp2013:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- $r8d
	imull	%r9d, %r9d
	addl	%esi, %r9d
	addl	%ecx, %r9d
.Ltmp2014:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- $r9d
	#DEBUG_VALUE: x <- 7
	movzbl	7(%rdi), %edx
.Ltmp2015:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	movl	%edx, %esi
	imull	%edx, %esi
.Ltmp2016:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
	#DEBUG_VALUE: x <- 8
	.loc	0 160 1 is_stmt 0               # x264_src/common/pixel.c:160:1
	leaq	(%rdi,%rax), %rcx
.Ltmp2017:
	#DEBUG_VALUE: x264_pixel_var_8x8:pix <- $rcx
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 0
	.loc	0 160 1                         # x264_src/common/pixel.c:160:1
	movzbl	(%rdi,%rax), %r10d
	addl	%r10d, %edx
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r10d, %r10d
	addl	%esi, %r10d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2018:
	#DEBUG_VALUE: x <- 1
	movzbl	1(%rdi,%rax), %esi
	addl	%esi, %edx
	addl	%r8d, %edx
.Ltmp2019:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- $edx
	imull	%esi, %esi
	addl	%r10d, %esi
	addl	%r9d, %esi
.Ltmp2020:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- $esi
	#DEBUG_VALUE: x <- 2
	movzbl	2(%rdi,%rax), %r8d
.Ltmp2021:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	movl	%r8d, %r9d
	imull	%r8d, %r9d
.Ltmp2022:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
	#DEBUG_VALUE: x <- 3
	movzbl	3(%rdi,%rax), %r10d
	addl	%r10d, %r8d
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r10d, %r10d
	addl	%r9d, %r10d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2023:
	#DEBUG_VALUE: x <- 4
	movzbl	4(%rdi,%rax), %r11d
	addl	%r11d, %r8d
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r11d, %r11d
	addl	%r10d, %r11d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2024:
	#DEBUG_VALUE: x <- 5
	movzbl	5(%rdi,%rax), %r9d
	addl	%r9d, %r8d
	addl	%edx, %r8d
.Ltmp2025:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- $r8d
	imull	%r9d, %r9d
	addl	%r11d, %r9d
	addl	%esi, %r9d
.Ltmp2026:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- $r9d
	#DEBUG_VALUE: x <- 6
	movzbl	6(%rdi,%rax), %esi
.Ltmp2027:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	movl	%esi, %edx
	imull	%esi, %edx
.Ltmp2028:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
	#DEBUG_VALUE: x <- 7
	movzbl	7(%rdi,%rax), %edi
	addl	%edi, %esi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%edi, %edi
	addl	%edx, %edi
.Ltmp2029:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
	#DEBUG_VALUE: x <- 8
	.loc	0 160 1                         # x264_src/common/pixel.c:160:1
	leaq	(%rcx,%rax), %rdx
.Ltmp2030:
	#DEBUG_VALUE: x264_pixel_var_8x8:pix <- $rdx
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 0
	.loc	0 160 1                         # x264_src/common/pixel.c:160:1
	movzbl	(%rax,%rcx), %r10d
	addl	%r10d, %esi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r10d, %r10d
	addl	%edi, %r10d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2031:
	#DEBUG_VALUE: x <- 1
	movzbl	1(%rax,%rcx), %edi
	addl	%edi, %esi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%edi, %edi
	addl	%r10d, %edi
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2032:
	#DEBUG_VALUE: x <- 2
	movzbl	2(%rax,%rcx), %r10d
	addl	%r10d, %esi
	addl	%r8d, %esi
.Ltmp2033:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- $esi
	imull	%r10d, %r10d
	addl	%edi, %r10d
	addl	%r9d, %r10d
.Ltmp2034:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- $r10d
	#DEBUG_VALUE: x <- 3
	movzbl	3(%rax,%rcx), %edi
.Ltmp2035:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	movl	%edi, %r8d
	imull	%edi, %r8d
.Ltmp2036:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
	#DEBUG_VALUE: x <- 4
	movzbl	4(%rax,%rcx), %r9d
	addl	%r9d, %edi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r9d, %r9d
	addl	%r8d, %r9d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2037:
	#DEBUG_VALUE: x <- 5
	movzbl	5(%rax,%rcx), %r8d
	addl	%r8d, %edi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r8d, %r8d
	addl	%r9d, %r8d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2038:
	#DEBUG_VALUE: x <- 6
	movzbl	6(%rax,%rcx), %r9d
	addl	%r9d, %edi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r9d, %r9d
	addl	%r8d, %r9d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2039:
	#DEBUG_VALUE: x <- 7
	movzbl	7(%rax,%rcx), %ecx
	addl	%ecx, %edi
	addl	%esi, %edi
.Ltmp2040:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- $edi
	imull	%ecx, %ecx
	addl	%r9d, %ecx
	addl	%r10d, %ecx
.Ltmp2041:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- $ecx
	#DEBUG_VALUE: x <- 8
	.loc	0 160 1                         # x264_src/common/pixel.c:160:1
	leaq	(%rdx,%rax), %rsi
.Ltmp2042:
	#DEBUG_VALUE: x264_pixel_var_8x8:pix <- $rsi
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 0
	.loc	0 160 1                         # x264_src/common/pixel.c:160:1
	movzbl	(%rax,%rdx), %r8d
.Ltmp2043:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	movl	%r8d, %r9d
	imull	%r8d, %r9d
.Ltmp2044:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
	#DEBUG_VALUE: x <- 1
	movzbl	1(%rax,%rdx), %r10d
	addl	%r10d, %r8d
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r10d, %r10d
	addl	%r9d, %r10d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2045:
	#DEBUG_VALUE: x <- 2
	movzbl	2(%rax,%rdx), %r9d
	addl	%r9d, %r8d
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r9d, %r9d
	addl	%r10d, %r9d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2046:
	#DEBUG_VALUE: x <- 3
	movzbl	3(%rax,%rdx), %r10d
	addl	%r10d, %r8d
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r10d, %r10d
	addl	%r9d, %r10d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2047:
	#DEBUG_VALUE: x <- 4
	movzbl	4(%rax,%rdx), %r9d
	addl	%r9d, %r8d
	addl	%edi, %r8d
.Ltmp2048:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- $r8d
	imull	%r9d, %r9d
	addl	%r10d, %r9d
	addl	%ecx, %r9d
.Ltmp2049:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- $r9d
	#DEBUG_VALUE: x <- 5
	movzbl	5(%rax,%rdx), %edi
.Ltmp2050:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	movl	%edi, %ecx
	imull	%edi, %ecx
.Ltmp2051:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
	#DEBUG_VALUE: x <- 6
	movzbl	6(%rax,%rdx), %r10d
	addl	%r10d, %edi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r10d, %r10d
	addl	%ecx, %r10d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2052:
	#DEBUG_VALUE: x <- 7
	movzbl	7(%rax,%rdx), %edx
	addl	%edx, %edi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%edx, %edx
	addl	%r10d, %edx
.Ltmp2053:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
	#DEBUG_VALUE: x <- 8
	.loc	0 160 1                         # x264_src/common/pixel.c:160:1
	leaq	(%rsi,%rax), %rcx
.Ltmp2054:
	#DEBUG_VALUE: x264_pixel_var_8x8:pix <- $rcx
	#DEBUG_VALUE: y <- 4
	#DEBUG_VALUE: x <- 0
	.loc	0 160 1                         # x264_src/common/pixel.c:160:1
	movzbl	(%rax,%rsi), %r10d
	addl	%r10d, %edi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r10d, %r10d
	addl	%edx, %r10d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2055:
	#DEBUG_VALUE: x <- 1
	movzbl	1(%rax,%rsi), %edx
	addl	%edx, %edi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%edx, %edx
	addl	%r10d, %edx
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2056:
	#DEBUG_VALUE: x <- 2
	movzbl	2(%rax,%rsi), %r10d
	addl	%r10d, %edi
	addl	%r8d, %edi
.Ltmp2057:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- $edi
	imull	%r10d, %r10d
	addl	%edx, %r10d
	addl	%r9d, %r10d
.Ltmp2058:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- $r10d
	#DEBUG_VALUE: x <- 3
	movzbl	3(%rax,%rsi), %r8d
.Ltmp2059:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	movl	%r8d, %edx
	imull	%r8d, %edx
.Ltmp2060:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
	#DEBUG_VALUE: x <- 4
	movzbl	4(%rax,%rsi), %r9d
	addl	%r9d, %r8d
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r9d, %r9d
	addl	%edx, %r9d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2061:
	#DEBUG_VALUE: x <- 5
	movzbl	5(%rax,%rsi), %edx
	addl	%edx, %r8d
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%edx, %edx
	addl	%r9d, %edx
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2062:
	#DEBUG_VALUE: x <- 6
	movzbl	6(%rax,%rsi), %r9d
	addl	%r9d, %r8d
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r9d, %r9d
	addl	%edx, %r9d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2063:
	#DEBUG_VALUE: x <- 7
	movzbl	7(%rax,%rsi), %r11d
	addl	%r11d, %r8d
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r11d, %r11d
	addl	%r9d, %r11d
.Ltmp2064:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
	#DEBUG_VALUE: x <- 8
	.loc	0 160 1                         # x264_src/common/pixel.c:160:1
	leaq	(%rcx,%rax), %rdx
.Ltmp2065:
	#DEBUG_VALUE: x264_pixel_var_8x8:pix <- $rdx
	#DEBUG_VALUE: y <- 5
	#DEBUG_VALUE: x <- 0
	.loc	0 160 1                         # x264_src/common/pixel.c:160:1
	movzbl	(%rax,%rcx), %esi
	addl	%esi, %r8d
	addl	%edi, %r8d
.Ltmp2066:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- $r8d
	imull	%esi, %esi
	addl	%r11d, %esi
	addl	%r10d, %esi
.Ltmp2067:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- $esi
	#DEBUG_VALUE: x <- 1
	movzbl	1(%rax,%rcx), %edi
.Ltmp2068:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	movl	%edi, %r9d
	imull	%edi, %r9d
.Ltmp2069:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
	#DEBUG_VALUE: x <- 2
	movzbl	2(%rax,%rcx), %r10d
	addl	%r10d, %edi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r10d, %r10d
	addl	%r9d, %r10d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2070:
	#DEBUG_VALUE: x <- 3
	movzbl	3(%rax,%rcx), %r9d
	addl	%r9d, %edi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r9d, %r9d
	addl	%r10d, %r9d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2071:
	#DEBUG_VALUE: x <- 4
	movzbl	4(%rax,%rcx), %r10d
	addl	%r10d, %edi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r10d, %r10d
	addl	%r9d, %r10d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2072:
	#DEBUG_VALUE: x <- 5
	movzbl	5(%rax,%rcx), %r11d
	addl	%r11d, %edi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r11d, %r11d
	addl	%r10d, %r11d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2073:
	#DEBUG_VALUE: x <- 6
	movzbl	6(%rax,%rcx), %r9d
	addl	%r9d, %edi
	addl	%r8d, %edi
.Ltmp2074:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- $edi
	imull	%r9d, %r9d
	addl	%r11d, %r9d
	addl	%esi, %r9d
.Ltmp2075:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- $r9d
	#DEBUG_VALUE: x <- 7
	movzbl	7(%rax,%rcx), %esi
.Ltmp2076:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	movl	%esi, %r8d
	imull	%esi, %r8d
.Ltmp2077:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
	#DEBUG_VALUE: x <- 8
	.loc	0 160 1                         # x264_src/common/pixel.c:160:1
	leaq	(%rdx,%rax), %rcx
.Ltmp2078:
	#DEBUG_VALUE: x264_pixel_var_8x8:pix <- $rcx
	#DEBUG_VALUE: y <- 6
	#DEBUG_VALUE: x <- 0
	.loc	0 160 1                         # x264_src/common/pixel.c:160:1
	movzbl	(%rax,%rdx), %r10d
	addl	%r10d, %esi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r10d, %r10d
	addl	%r8d, %r10d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2079:
	#DEBUG_VALUE: x <- 1
	movzbl	1(%rax,%rdx), %r8d
	addl	%r8d, %esi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r8d, %r8d
	addl	%r10d, %r8d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2080:
	#DEBUG_VALUE: x <- 2
	movzbl	2(%rax,%rdx), %r10d
	addl	%r10d, %esi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r10d, %r10d
	addl	%r8d, %r10d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2081:
	#DEBUG_VALUE: x <- 3
	movzbl	3(%rax,%rdx), %r11d
	addl	%r11d, %esi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r11d, %r11d
	addl	%r10d, %r11d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2082:
	#DEBUG_VALUE: x <- 4
	movzbl	4(%rax,%rdx), %r8d
	addl	%r8d, %esi
	addl	%edi, %esi
.Ltmp2083:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- $esi
	imull	%r8d, %r8d
	addl	%r11d, %r8d
	addl	%r9d, %r8d
.Ltmp2084:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- $r8d
	#DEBUG_VALUE: x <- 5
	movzbl	5(%rax,%rdx), %edi
.Ltmp2085:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	movl	%edi, %r9d
	imull	%edi, %r9d
.Ltmp2086:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
	#DEBUG_VALUE: x <- 6
	movzbl	6(%rax,%rdx), %r10d
	addl	%r10d, %edi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r10d, %r10d
	addl	%r9d, %r10d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2087:
	#DEBUG_VALUE: x <- 7
	movzbl	7(%rax,%rdx), %edx
	addl	%edx, %edi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%edx, %edx
	addl	%r10d, %edx
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2088:
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 7
	#DEBUG_VALUE: x <- 0
	#DEBUG_VALUE: x264_pixel_var_8x8:pix <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rcx, $rax
	movzbl	(%rax,%rcx), %r9d
	addl	%r9d, %edi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r9d, %r9d
	addl	%edx, %r9d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2089:
	#DEBUG_VALUE: x <- 1
	movzbl	1(%rax,%rcx), %edx
	addl	%edx, %edi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%edx, %edx
	addl	%r9d, %edx
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2090:
	#DEBUG_VALUE: x <- 2
	movzbl	2(%rax,%rcx), %r9d
	addl	%r9d, %edi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r9d, %r9d
	addl	%edx, %r9d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2091:
	#DEBUG_VALUE: x <- 3
	movzbl	3(%rax,%rcx), %edx
	addl	%edx, %edi
	addl	%esi, %edi
.Ltmp2092:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- $edi
	imull	%edx, %edx
	addl	%r9d, %edx
	addl	%r8d, %edx
.Ltmp2093:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- $edx
	#DEBUG_VALUE: x <- 4
	movzbl	4(%rax,%rcx), %esi
.Ltmp2094:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	movl	%esi, %r8d
	imull	%esi, %r8d
.Ltmp2095:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
	#DEBUG_VALUE: x <- 5
	movzbl	5(%rax,%rcx), %r9d
	addl	%r9d, %esi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r9d, %r9d
	addl	%r8d, %r9d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2096:
	#DEBUG_VALUE: x <- 6
	movzbl	6(%rax,%rcx), %r8d
	addl	%r8d, %esi
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- undef
	imull	%r8d, %r8d
	addl	%r9d, %r8d
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- undef
.Ltmp2097:
	#DEBUG_VALUE: x <- 7
	movzbl	7(%rax,%rcx), %eax
.Ltmp2098:
	addl	%eax, %esi
	addl	%edi, %esi
.Ltmp2099:
	#DEBUG_VALUE: x264_pixel_var_8x8:sum <- $esi
	imull	%eax, %eax
	addl	%r8d, %eax
	addl	%edx, %eax
.Ltmp2100:
	#DEBUG_VALUE: x264_pixel_var_8x8:sqr <- $eax
	#DEBUG_VALUE: x <- 8
	#DEBUG_VALUE: y <- 8
	#DEBUG_VALUE: x264_pixel_var_8x8:pix <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	.loc	0 160 1                         # x264_src/common/pixel.c:160:1
	shlq	$32, %rax
.Ltmp2101:
	orq	%rsi, %rax
	retq
.Ltmp2102:
.Lfunc_end62:
	.size	x264_pixel_var_8x8, .Lfunc_end62-x264_pixel_var_8x8
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function ssim_4x4x2_core
	.type	ssim_4x4x2_core,@function
ssim_4x4x2_core:                        # @ssim_4x4x2_core
.Lfunc_begin63:
	.loc	0 464 0 is_stmt 1               # x264_src/common/pixel.c:464:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: ssim_4x4x2_core:pix1 <- $rdi
	#DEBUG_VALUE: ssim_4x4x2_core:stride1 <- $esi
	#DEBUG_VALUE: ssim_4x4x2_core:pix2 <- $rdx
	#DEBUG_VALUE: ssim_4x4x2_core:stride2 <- $ecx
	#DEBUG_VALUE: ssim_4x4x2_core:sums <- $r8
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, -24(%rsp)                  # 8-byte Spill
.Ltmp2103:
	#DEBUG_VALUE: ssim_4x4x2_core:sums <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	movq	%rdx, -32(%rsp)                 # 8-byte Spill
.Ltmp2104:
	#DEBUG_VALUE: ssim_4x4x2_core:pix2 <- [DW_OP_constu 32, DW_OP_minus] [$rsp+0]
	movq	%rdi, -40(%rsp)                 # 8-byte Spill
.Ltmp2105:
	#DEBUG_VALUE: ssim_4x4x2_core:pix1 <- [DW_OP_constu 40, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: z <- 0
	.loc	0 465 5 prologue_end            # x264_src/common/pixel.c:465:5
	movslq	%esi, %rax
	movq	%rax, -48(%rsp)                 # 8-byte Spill
	movslq	%ecx, %rax
	movq	%rax, -56(%rsp)                 # 8-byte Spill
	movb	$1, %cl
.Ltmp2106:
	#DEBUG_VALUE: ssim_4x4x2_core:stride2 <- [DW_OP_LLVM_entry_value 1] $ecx
	.loc	0 0 5 is_stmt 0                 # x264_src/common/pixel.c:0:5
	xorl	%eax, %eax
	xorl	%edx, %edx
.Ltmp2107:
	.p2align	4, 0x90
.LBB63_1:                               # %for.cond1.preheader
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ssim_4x4x2_core:stride1 <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: ssim_4x4x2_core:stride2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: ssim_4x4x2_core:sums <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: ssim_4x4x2_core:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_consts 4, DW_OP_div, DW_OP_consts 4, DW_OP_mul, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_stack_value] undef
	#DEBUG_VALUE: ssim_4x4x2_core:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_consts 4, DW_OP_div, DW_OP_consts 4, DW_OP_mul, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_stack_value] undef
	#DEBUG_VALUE: z <- $rdx
	#DEBUG_VALUE: y <- 0
	#DEBUG_VALUE: x <- 0
	#DEBUG_VALUE: s12 <- 0
	#DEBUG_VALUE: ss <- 0
	#DEBUG_VALUE: s2 <- 0
	#DEBUG_VALUE: s1 <- 0
	movq	%rdx, -8(%rsp)                  # 8-byte Spill
.Ltmp2108:
	#DEBUG_VALUE: z <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	movl	%ecx, -60(%rsp)                 # 4-byte Spill
	movq	%rax, -72(%rsp)                 # 8-byte Spill
	movq	-40(%rsp), %r13                 # 8-byte Reload
.Ltmp2109:
	.loc	0 471 25 is_stmt 1              # x264_src/common/pixel.c:471:25
	leaq	(%rax,%r13), %r14
	movq	-32(%rsp), %rcx                 # 8-byte Reload
	leaq	(%rcx,%rax), %r15
	movzbl	(%r13,%rax), %r10d
.Ltmp2110:
	#DEBUG_VALUE: a <- $r10d
	.loc	0 472 25                        # x264_src/common/pixel.c:472:25
	movzbl	(%rcx,%rax), %r9d
.Ltmp2111:
	#DEBUG_VALUE: b <- $r9d
	#DEBUG_VALUE: s2 <- $r9d
	#DEBUG_VALUE: s1 <- $r10d
	.loc	0 475 25                        # x264_src/common/pixel.c:475:25
	movl	%r10d, %eax
	imull	%r10d, %eax
.Ltmp2112:
	#DEBUG_VALUE: ss <- $eax
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	movl	%r9d, %edx
	imull	%r9d, %edx
	.loc	0 476 21 is_stmt 0              # x264_src/common/pixel.c:476:21
	addl	%eax, %edx
.Ltmp2113:
	#DEBUG_VALUE: ss <- $edx
	.loc	0 477 25 is_stmt 1              # x264_src/common/pixel.c:477:25
	movl	%r9d, %eax
	imull	%r10d, %eax
.Ltmp2114:
	#DEBUG_VALUE: s12 <- $eax
	#DEBUG_VALUE: x <- 1
	.loc	0 0 25 is_stmt 0                # x264_src/common/pixel.c:0:25
	movq	-72(%rsp), %rsi                 # 8-byte Reload
	.loc	0 471 25 is_stmt 1              # x264_src/common/pixel.c:471:25
	movzbl	1(%r13,%rsi), %r8d
.Ltmp2115:
	#DEBUG_VALUE: a <- $r8d
	.loc	0 0 25 is_stmt 0                # x264_src/common/pixel.c:0:25
	movq	-72(%rsp), %rsi                 # 8-byte Reload
	.loc	0 472 25 is_stmt 1              # x264_src/common/pixel.c:472:25
	movzbl	1(%rcx,%rsi), %edi
.Ltmp2116:
	#DEBUG_VALUE: b <- $edi
	.loc	0 473 21                        # x264_src/common/pixel.c:473:21
	addl	%r8d, %r10d
.Ltmp2117:
	#DEBUG_VALUE: s1 <- $r10d
	.loc	0 474 21                        # x264_src/common/pixel.c:474:21
	addl	%edi, %r9d
.Ltmp2118:
	#DEBUG_VALUE: s2 <- $r9d
	#DEBUG_VALUE: ss <- undef
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	movl	%edi, %r11d
	#DEBUG_VALUE: ss <- undef
	.loc	0 477 25                        # x264_src/common/pixel.c:477:25
	imull	%r8d, %edi
.Ltmp2119:
	#DEBUG_VALUE: b <- $r11d
	.loc	0 475 25                        # x264_src/common/pixel.c:475:25
	imull	%r8d, %r8d
.Ltmp2120:
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	imull	%r11d, %r11d
.Ltmp2121:
	.loc	0 475 21                        # x264_src/common/pixel.c:475:21
	addl	%r8d, %r11d
	.loc	0 476 21                        # x264_src/common/pixel.c:476:21
	addl	%edx, %r11d
.Ltmp2122:
	#DEBUG_VALUE: ss <- $r11d
	.loc	0 477 21                        # x264_src/common/pixel.c:477:21
	addl	%eax, %edi
.Ltmp2123:
	#DEBUG_VALUE: s12 <- $edi
	#DEBUG_VALUE: x <- 2
	.loc	0 0 21 is_stmt 0                # x264_src/common/pixel.c:0:21
	movq	-72(%rsp), %rax                 # 8-byte Reload
	.loc	0 471 25 is_stmt 1              # x264_src/common/pixel.c:471:25
	movzbl	2(%r13,%rax), %r12d
.Ltmp2124:
	#DEBUG_VALUE: a <- $r12d
	.loc	0 0 25 is_stmt 0                # x264_src/common/pixel.c:0:25
	movq	-72(%rsp), %rax                 # 8-byte Reload
	.loc	0 472 25 is_stmt 1              # x264_src/common/pixel.c:472:25
	movzbl	2(%rcx,%rax), %edx
.Ltmp2125:
	#DEBUG_VALUE: b <- $edx
	#DEBUG_VALUE: s1 <- undef
	#DEBUG_VALUE: s2 <- undef
	.loc	0 475 25                        # x264_src/common/pixel.c:475:25
	movl	%r12d, %eax
	imull	%r12d, %eax
.Ltmp2126:
	#DEBUG_VALUE: ss <- undef
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	movl	%edx, %ebx
	imull	%edx, %ebx
	.loc	0 475 21                        # x264_src/common/pixel.c:475:21
	addl	%eax, %ebx
	#DEBUG_VALUE: ss <- undef
	.loc	0 477 25                        # x264_src/common/pixel.c:477:25
	movl	%edx, %eax
	imull	%r12d, %eax
.Ltmp2127:
	#DEBUG_VALUE: s12 <- undef
	#DEBUG_VALUE: x <- 3
	.loc	0 0 25 is_stmt 0                # x264_src/common/pixel.c:0:25
	movq	-72(%rsp), %rsi                 # 8-byte Reload
	.loc	0 471 25 is_stmt 1              # x264_src/common/pixel.c:471:25
	movzbl	3(%r13,%rsi), %ebp
.Ltmp2128:
	#DEBUG_VALUE: a <- $ebp
	.loc	0 0 25 is_stmt 0                # x264_src/common/pixel.c:0:25
	movq	-72(%rsp), %rsi                 # 8-byte Reload
	.loc	0 472 25 is_stmt 1              # x264_src/common/pixel.c:472:25
	movzbl	3(%rcx,%rsi), %r8d
.Ltmp2129:
	#DEBUG_VALUE: b <- $r8d
	.loc	0 473 21                        # x264_src/common/pixel.c:473:21
	addl	%ebp, %r12d
	addl	%r10d, %r12d
.Ltmp2130:
	#DEBUG_VALUE: s1 <- $r12d
	.loc	0 474 21                        # x264_src/common/pixel.c:474:21
	addl	%r8d, %edx
	addl	%r9d, %edx
.Ltmp2131:
	#DEBUG_VALUE: s2 <- $edx
	#DEBUG_VALUE: ss <- undef
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	movl	%r8d, %r9d
	#DEBUG_VALUE: ss <- undef
	.loc	0 477 25                        # x264_src/common/pixel.c:477:25
	imull	%ebp, %r8d
.Ltmp2132:
	#DEBUG_VALUE: b <- $r9d
	.loc	0 475 25                        # x264_src/common/pixel.c:475:25
	movl	%ebp, %r13d
	imull	%ebp, %r13d
	.loc	0 476 21                        # x264_src/common/pixel.c:476:21
	addl	%ebx, %r13d
	.loc	0 475 21                        # x264_src/common/pixel.c:475:21
	addl	%r11d, %r13d
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	imull	%r9d, %r9d
.Ltmp2133:
	.loc	0 477 21                        # x264_src/common/pixel.c:477:21
	addl	%eax, %r8d
	addl	%edi, %r8d
.Ltmp2134:
	#DEBUG_VALUE: s12 <- $r8d
	#DEBUG_VALUE: y <- 1
	#DEBUG_VALUE: x <- 0
	.loc	0 0 21 is_stmt 0                # x264_src/common/pixel.c:0:21
	movq	-48(%rsp), %rcx                 # 8-byte Reload
	.loc	0 471 25 is_stmt 1              # x264_src/common/pixel.c:471:25
	leaq	(%r14,%rcx), %r11
	movzbl	(%rcx,%r14), %r10d
.Ltmp2135:
	#DEBUG_VALUE: a <- $r10d
	.loc	0 0 25 is_stmt 0                # x264_src/common/pixel.c:0:25
	movq	-56(%rsp), %rsi                 # 8-byte Reload
	.loc	0 472 25 is_stmt 1              # x264_src/common/pixel.c:472:25
	leaq	(%r15,%rsi), %rbx
	movzbl	(%rsi,%r15), %ebp
.Ltmp2136:
	#DEBUG_VALUE: b <- $ebp
	#DEBUG_VALUE: s1 <- undef
	#DEBUG_VALUE: s2 <- undef
	.loc	0 475 25                        # x264_src/common/pixel.c:475:25
	movl	%r10d, %eax
	imull	%r10d, %eax
	.loc	0 476 21                        # x264_src/common/pixel.c:476:21
	addl	%r9d, %eax
	#DEBUG_VALUE: ss <- undef
	.loc	0 476 25 is_stmt 0              # x264_src/common/pixel.c:476:25
	movl	%ebp, %edi
	imull	%ebp, %edi
	.loc	0 475 21 is_stmt 1              # x264_src/common/pixel.c:475:21
	addl	%eax, %edi
	.loc	0 476 21                        # x264_src/common/pixel.c:476:21
	addl	%r13d, %edi
.Ltmp2137:
	#DEBUG_VALUE: ss <- $edi
	.loc	0 477 25                        # x264_src/common/pixel.c:477:25
	movl	%ebp, %eax
	imull	%r10d, %eax
.Ltmp2138:
	#DEBUG_VALUE: s12 <- undef
	#DEBUG_VALUE: x <- 1
	.loc	0 471 25                        # x264_src/common/pixel.c:471:25
	movzbl	1(%rcx,%r14), %r13d
.Ltmp2139:
	#DEBUG_VALUE: a <- $r13d
	.loc	0 472 25                        # x264_src/common/pixel.c:472:25
	movzbl	1(%rsi,%r15), %r9d
.Ltmp2140:
	#DEBUG_VALUE: b <- $r9d
	.loc	0 473 21                        # x264_src/common/pixel.c:473:21
	addl	%r13d, %r10d
	addl	%r12d, %r10d
.Ltmp2141:
	#DEBUG_VALUE: s1 <- $r10d
	.loc	0 474 21                        # x264_src/common/pixel.c:474:21
	addl	%r9d, %ebp
	addl	%edx, %ebp
.Ltmp2142:
	#DEBUG_VALUE: s2 <- $ebp
	#DEBUG_VALUE: ss <- undef
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	movl	%r9d, %r12d
	#DEBUG_VALUE: ss <- undef
	.loc	0 477 25                        # x264_src/common/pixel.c:477:25
	imull	%r13d, %r9d
.Ltmp2143:
	#DEBUG_VALUE: b <- $r12d
	.loc	0 475 25                        # x264_src/common/pixel.c:475:25
	imull	%r13d, %r13d
.Ltmp2144:
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	imull	%r12d, %r12d
.Ltmp2145:
	.loc	0 475 21                        # x264_src/common/pixel.c:475:21
	addl	%r13d, %r12d
	.loc	0 477 21                        # x264_src/common/pixel.c:477:21
	addl	%eax, %r9d
	addl	%r8d, %r9d
.Ltmp2146:
	#DEBUG_VALUE: s12 <- $r9d
	#DEBUG_VALUE: x <- 2
	.loc	0 471 25                        # x264_src/common/pixel.c:471:25
	movzbl	2(%rcx,%r14), %r13d
.Ltmp2147:
	#DEBUG_VALUE: a <- $r13d
	.loc	0 472 25                        # x264_src/common/pixel.c:472:25
	movzbl	2(%rsi,%r15), %edx
.Ltmp2148:
	#DEBUG_VALUE: b <- $edx
	#DEBUG_VALUE: s1 <- undef
	#DEBUG_VALUE: s2 <- undef
	.loc	0 475 25                        # x264_src/common/pixel.c:475:25
	movl	%r13d, %eax
	imull	%r13d, %eax
	.loc	0 476 21                        # x264_src/common/pixel.c:476:21
	addl	%r12d, %eax
	#DEBUG_VALUE: ss <- undef
	.loc	0 476 25 is_stmt 0              # x264_src/common/pixel.c:476:25
	movl	%edx, %r12d
	imull	%edx, %r12d
	.loc	0 475 21 is_stmt 1              # x264_src/common/pixel.c:475:21
	addl	%eax, %r12d
	.loc	0 476 21                        # x264_src/common/pixel.c:476:21
	addl	%edi, %r12d
.Ltmp2149:
	#DEBUG_VALUE: ss <- $r12d
	.loc	0 477 25                        # x264_src/common/pixel.c:477:25
	movl	%edx, %r8d
	imull	%r13d, %r8d
.Ltmp2150:
	#DEBUG_VALUE: s12 <- undef
	#DEBUG_VALUE: x <- 3
	.loc	0 471 25                        # x264_src/common/pixel.c:471:25
	movzbl	3(%rcx,%r14), %r14d
.Ltmp2151:
	#DEBUG_VALUE: a <- $r14d
	.loc	0 472 25                        # x264_src/common/pixel.c:472:25
	movzbl	3(%rsi,%r15), %edi
.Ltmp2152:
	#DEBUG_VALUE: b <- $edi
	.loc	0 473 21                        # x264_src/common/pixel.c:473:21
	addl	%r14d, %r13d
	#DEBUG_VALUE: s1 <- undef
	.loc	0 474 21                        # x264_src/common/pixel.c:474:21
	addl	%edi, %edx
	#DEBUG_VALUE: s2 <- undef
.Ltmp2153:
	#DEBUG_VALUE: ss <- undef
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	movl	%edi, %eax
	#DEBUG_VALUE: ss <- undef
	.loc	0 477 25                        # x264_src/common/pixel.c:477:25
	imull	%r14d, %edi
.Ltmp2154:
	#DEBUG_VALUE: b <- $eax
	.loc	0 475 25                        # x264_src/common/pixel.c:475:25
	imull	%r14d, %r14d
.Ltmp2155:
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	imull	%eax, %eax
.Ltmp2156:
	.loc	0 475 21                        # x264_src/common/pixel.c:475:21
	addl	%r14d, %eax
	.loc	0 477 21                        # x264_src/common/pixel.c:477:21
	addl	%r8d, %edi
	#DEBUG_VALUE: s12 <- undef
.Ltmp2157:
	#DEBUG_VALUE: y <- 2
	#DEBUG_VALUE: x <- 0
	.loc	0 471 25                        # x264_src/common/pixel.c:471:25
	movzbl	(%rcx,%r11), %r14d
.Ltmp2158:
	#DEBUG_VALUE: a <- $r14d
	.loc	0 472 25                        # x264_src/common/pixel.c:472:25
	movzbl	(%rsi,%rbx), %r8d
.Ltmp2159:
	#DEBUG_VALUE: b <- $r8d
	.loc	0 473 21                        # x264_src/common/pixel.c:473:21
	addl	%r14d, %r13d
	addl	%r10d, %r13d
.Ltmp2160:
	#DEBUG_VALUE: s1 <- $r13d
	.loc	0 474 21                        # x264_src/common/pixel.c:474:21
	addl	%r8d, %edx
	addl	%ebp, %edx
.Ltmp2161:
	#DEBUG_VALUE: s2 <- $edx
	#DEBUG_VALUE: ss <- undef
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	movl	%r8d, %r10d
	#DEBUG_VALUE: ss <- undef
	.loc	0 477 25                        # x264_src/common/pixel.c:477:25
	imull	%r14d, %r8d
.Ltmp2162:
	#DEBUG_VALUE: b <- $r10d
	.loc	0 475 25                        # x264_src/common/pixel.c:475:25
	imull	%r14d, %r14d
.Ltmp2163:
	.loc	0 476 21                        # x264_src/common/pixel.c:476:21
	addl	%eax, %r14d
	.loc	0 476 25 is_stmt 0              # x264_src/common/pixel.c:476:25
	imull	%r10d, %r10d
.Ltmp2164:
	.loc	0 475 21 is_stmt 1              # x264_src/common/pixel.c:475:21
	addl	%r14d, %r10d
	.loc	0 477 21                        # x264_src/common/pixel.c:477:21
	addl	%edi, %r8d
	addl	%r9d, %r8d
.Ltmp2165:
	#DEBUG_VALUE: s12 <- $r8d
	#DEBUG_VALUE: x <- 1
	.loc	0 471 25                        # x264_src/common/pixel.c:471:25
	movzbl	1(%rcx,%r11), %edi
.Ltmp2166:
	#DEBUG_VALUE: a <- $edi
	.loc	0 472 25                        # x264_src/common/pixel.c:472:25
	movzbl	1(%rsi,%rbx), %ebp
.Ltmp2167:
	#DEBUG_VALUE: b <- $ebp
	#DEBUG_VALUE: s1 <- undef
	#DEBUG_VALUE: s2 <- undef
	.loc	0 475 25                        # x264_src/common/pixel.c:475:25
	movl	%edi, %r14d
	imull	%edi, %r14d
	.loc	0 476 21                        # x264_src/common/pixel.c:476:21
	addl	%r10d, %r14d
	.loc	0 475 21                        # x264_src/common/pixel.c:475:21
	addl	%r12d, %r14d
.Ltmp2168:
	#DEBUG_VALUE: ss <- $r14d
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	movl	%ebp, %r9d
	imull	%ebp, %r9d
.Ltmp2169:
	#DEBUG_VALUE: ss <- undef
	.loc	0 477 25                        # x264_src/common/pixel.c:477:25
	movl	%ebp, %r10d
	imull	%edi, %r10d
.Ltmp2170:
	#DEBUG_VALUE: s12 <- undef
	#DEBUG_VALUE: x <- 2
	.loc	0 471 25                        # x264_src/common/pixel.c:471:25
	movzbl	2(%rcx,%r11), %r15d
.Ltmp2171:
	#DEBUG_VALUE: a <- $r15d
	.loc	0 472 25                        # x264_src/common/pixel.c:472:25
	movzbl	2(%rsi,%rbx), %r12d
.Ltmp2172:
	#DEBUG_VALUE: b <- $r12d
	.loc	0 473 21                        # x264_src/common/pixel.c:473:21
	addl	%r15d, %edi
	#DEBUG_VALUE: s1 <- undef
	.loc	0 474 21                        # x264_src/common/pixel.c:474:21
	addl	%r12d, %ebp
	#DEBUG_VALUE: s2 <- undef
	#DEBUG_VALUE: ss <- undef
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	movl	%r12d, %eax
	#DEBUG_VALUE: ss <- undef
	.loc	0 477 25                        # x264_src/common/pixel.c:477:25
	imull	%r15d, %r12d
.Ltmp2173:
	#DEBUG_VALUE: b <- $eax
	.loc	0 475 25                        # x264_src/common/pixel.c:475:25
	imull	%r15d, %r15d
.Ltmp2174:
	.loc	0 476 21                        # x264_src/common/pixel.c:476:21
	addl	%r9d, %r15d
	.loc	0 471 25                        # x264_src/common/pixel.c:471:25
	leaq	(%r11,%rcx), %r9
	movq	%r9, -16(%rsp)                  # 8-byte Spill
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	imull	%eax, %eax
.Ltmp2175:
	.loc	0 475 21                        # x264_src/common/pixel.c:475:21
	addl	%r15d, %eax
	.loc	0 472 25                        # x264_src/common/pixel.c:472:25
	leaq	(%rbx,%rsi), %r9
	.loc	0 477 21                        # x264_src/common/pixel.c:477:21
	addl	%r10d, %r12d
	#DEBUG_VALUE: s12 <- undef
.Ltmp2176:
	#DEBUG_VALUE: x <- 3
	.loc	0 471 25                        # x264_src/common/pixel.c:471:25
	movzbl	3(%rcx,%r11), %r15d
.Ltmp2177:
	#DEBUG_VALUE: a <- $r15d
	.loc	0 472 25                        # x264_src/common/pixel.c:472:25
	movzbl	3(%rsi,%rbx), %r11d
.Ltmp2178:
	#DEBUG_VALUE: b <- $r11d
	.loc	0 473 21                        # x264_src/common/pixel.c:473:21
	addl	%r15d, %edi
	addl	%r13d, %edi
.Ltmp2179:
	#DEBUG_VALUE: s1 <- $edi
	.loc	0 474 21                        # x264_src/common/pixel.c:474:21
	addl	%r11d, %ebp
	addl	%edx, %ebp
.Ltmp2180:
	#DEBUG_VALUE: s2 <- $ebp
	#DEBUG_VALUE: ss <- undef
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	movl	%r11d, %r10d
	#DEBUG_VALUE: ss <- undef
	.loc	0 477 25                        # x264_src/common/pixel.c:477:25
	imull	%r15d, %r11d
.Ltmp2181:
	#DEBUG_VALUE: b <- $r10d
	.loc	0 475 25                        # x264_src/common/pixel.c:475:25
	imull	%r15d, %r15d
.Ltmp2182:
	.loc	0 476 21                        # x264_src/common/pixel.c:476:21
	addl	%eax, %r15d
	.loc	0 476 25 is_stmt 0              # x264_src/common/pixel.c:476:25
	imull	%r10d, %r10d
.Ltmp2183:
	.loc	0 475 21 is_stmt 1              # x264_src/common/pixel.c:475:21
	addl	%r15d, %r10d
	.loc	0 476 21                        # x264_src/common/pixel.c:476:21
	addl	%r14d, %r10d
.Ltmp2184:
	#DEBUG_VALUE: ss <- $r10d
	.loc	0 477 21                        # x264_src/common/pixel.c:477:21
	addl	%r12d, %r11d
	addl	%r8d, %r11d
.Ltmp2185:
	#DEBUG_VALUE: s12 <- $r11d
	#DEBUG_VALUE: y <- 3
	#DEBUG_VALUE: x <- 0
	.loc	0 0 21 is_stmt 0                # x264_src/common/pixel.c:0:21
	movq	-16(%rsp), %r13                 # 8-byte Reload
	.loc	0 471 25 is_stmt 1              # x264_src/common/pixel.c:471:25
	movzbl	(%rcx,%r13), %r8d
.Ltmp2186:
	#DEBUG_VALUE: a <- $r8d
	.loc	0 472 25                        # x264_src/common/pixel.c:472:25
	movzbl	(%rsi,%r9), %ebx
.Ltmp2187:
	#DEBUG_VALUE: b <- $ebx
	#DEBUG_VALUE: s1 <- undef
	#DEBUG_VALUE: s2 <- undef
	.loc	0 475 25                        # x264_src/common/pixel.c:475:25
	movl	%r8d, %eax
	imull	%r8d, %eax
.Ltmp2188:
	#DEBUG_VALUE: ss <- undef
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	movl	%ebx, %edx
	imull	%ebx, %edx
	.loc	0 475 21                        # x264_src/common/pixel.c:475:21
	addl	%eax, %edx
	#DEBUG_VALUE: ss <- undef
	.loc	0 477 25                        # x264_src/common/pixel.c:477:25
	movl	%ebx, %r15d
	imull	%r8d, %r15d
.Ltmp2189:
	#DEBUG_VALUE: s12 <- undef
	#DEBUG_VALUE: x <- 1
	.loc	0 471 25                        # x264_src/common/pixel.c:471:25
	movzbl	1(%rcx,%r13), %r12d
.Ltmp2190:
	#DEBUG_VALUE: a <- $r12d
	.loc	0 472 25                        # x264_src/common/pixel.c:472:25
	movzbl	1(%rsi,%r9), %r14d
.Ltmp2191:
	#DEBUG_VALUE: b <- $r14d
	.loc	0 473 21                        # x264_src/common/pixel.c:473:21
	addl	%r12d, %r8d
	#DEBUG_VALUE: s1 <- undef
	.loc	0 474 21                        # x264_src/common/pixel.c:474:21
	addl	%r14d, %ebx
	#DEBUG_VALUE: s2 <- undef
	#DEBUG_VALUE: ss <- undef
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	movl	%r14d, %eax
	#DEBUG_VALUE: ss <- undef
	.loc	0 477 25                        # x264_src/common/pixel.c:477:25
	imull	%r12d, %r14d
.Ltmp2192:
	#DEBUG_VALUE: b <- $eax
	.loc	0 475 25                        # x264_src/common/pixel.c:475:25
	imull	%r12d, %r12d
.Ltmp2193:
	.loc	0 476 21                        # x264_src/common/pixel.c:476:21
	addl	%edx, %r12d
	.loc	0 476 25 is_stmt 0              # x264_src/common/pixel.c:476:25
	imull	%eax, %eax
.Ltmp2194:
	.loc	0 475 21 is_stmt 1              # x264_src/common/pixel.c:475:21
	addl	%r12d, %eax
	.loc	0 477 21                        # x264_src/common/pixel.c:477:21
	addl	%r15d, %r14d
	#DEBUG_VALUE: s12 <- undef
.Ltmp2195:
	#DEBUG_VALUE: x <- 2
	.loc	0 471 25                        # x264_src/common/pixel.c:471:25
	movzbl	2(%rcx,%r13), %r15d
.Ltmp2196:
	#DEBUG_VALUE: a <- $r15d
	#DEBUG_VALUE: b <- undef
	.loc	0 473 21                        # x264_src/common/pixel.c:473:21
	addl	%r15d, %r8d
	addl	%edi, %r8d
.Ltmp2197:
	#DEBUG_VALUE: s1 <- $r8d
	.loc	0 472 25                        # x264_src/common/pixel.c:472:25
	movzbl	2(%rsi,%r9), %edx
.Ltmp2198:
	#DEBUG_VALUE: b <- $edx
	.loc	0 474 21                        # x264_src/common/pixel.c:474:21
	addl	%edx, %ebx
	addl	%ebp, %ebx
.Ltmp2199:
	#DEBUG_VALUE: s2 <- $ebx
	#DEBUG_VALUE: ss <- undef
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	movl	%edx, %edi
	#DEBUG_VALUE: ss <- undef
	.loc	0 477 25                        # x264_src/common/pixel.c:477:25
	imull	%r15d, %edx
.Ltmp2200:
	.loc	0 475 25                        # x264_src/common/pixel.c:475:25
	movl	%r15d, %ebp
	imull	%r15d, %ebp
	.loc	0 476 21                        # x264_src/common/pixel.c:476:21
	addl	%eax, %ebp
	.loc	0 475 21                        # x264_src/common/pixel.c:475:21
	addl	%r10d, %ebp
	.loc	0 477 21                        # x264_src/common/pixel.c:477:21
	addl	%r14d, %edx
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	imull	%edi, %edi
	.loc	0 477 21                        # x264_src/common/pixel.c:477:21
	addl	%r11d, %edx
.Ltmp2201:
	#DEBUG_VALUE: s12 <- $edx
	#DEBUG_VALUE: x <- 3
	.loc	0 471 25                        # x264_src/common/pixel.c:471:25
	movzbl	3(%rcx,%r13), %eax
.Ltmp2202:
	#DEBUG_VALUE: a <- $eax
	.loc	0 472 25                        # x264_src/common/pixel.c:472:25
	movzbl	3(%rsi,%r9), %ecx
.Ltmp2203:
	#DEBUG_VALUE: b <- $ecx
	.loc	0 473 21                        # x264_src/common/pixel.c:473:21
	addl	%eax, %r8d
.Ltmp2204:
	#DEBUG_VALUE: s1 <- $r8d
	.loc	0 474 21                        # x264_src/common/pixel.c:474:21
	addl	%ecx, %ebx
.Ltmp2205:
	#DEBUG_VALUE: s2 <- $ebx
	#DEBUG_VALUE: ss <- undef
	.loc	0 476 25                        # x264_src/common/pixel.c:476:25
	movl	%ecx, %r9d
	#DEBUG_VALUE: ss <- undef
	.loc	0 477 25                        # x264_src/common/pixel.c:477:25
	imull	%eax, %ecx
.Ltmp2206:
	#DEBUG_VALUE: b <- $r9d
	.loc	0 475 25                        # x264_src/common/pixel.c:475:25
	imull	%eax, %eax
.Ltmp2207:
	.loc	0 476 21                        # x264_src/common/pixel.c:476:21
	addl	%edi, %eax
	.loc	0 476 25 is_stmt 0              # x264_src/common/pixel.c:476:25
	imull	%r9d, %r9d
.Ltmp2208:
	.loc	0 475 21 is_stmt 1              # x264_src/common/pixel.c:475:21
	addl	%eax, %r9d
	.loc	0 476 21                        # x264_src/common/pixel.c:476:21
	addl	%ebp, %r9d
.Ltmp2209:
	#DEBUG_VALUE: ss <- $r9d
	.loc	0 477 21                        # x264_src/common/pixel.c:477:21
	addl	%edx, %ecx
.Ltmp2210:
	#DEBUG_VALUE: s12 <- $ecx
	#DEBUG_VALUE: x <- 4
	#DEBUG_VALUE: y <- 4
	.loc	0 0 21 is_stmt 0                # x264_src/common/pixel.c:0:21
	movq	-8(%rsp), %rdx                  # 8-byte Reload
.Ltmp2211:
	.loc	0 479 9 is_stmt 1               # x264_src/common/pixel.c:479:9
	shlq	$4, %rdx
	movq	-24(%rsp), %rax                 # 8-byte Reload
	.loc	0 479 20 is_stmt 0              # x264_src/common/pixel.c:479:20
	movl	%r8d, (%rax,%rdx)
	.loc	0 480 20 is_stmt 1              # x264_src/common/pixel.c:480:20
	movl	%ebx, 4(%rax,%rdx)
	.loc	0 481 20                        # x264_src/common/pixel.c:481:20
	movl	%r9d, 8(%rax,%rdx)
	.loc	0 482 20                        # x264_src/common/pixel.c:482:20
	movl	%ecx, 12(%rax,%rdx)
.Ltmp2212:
	#DEBUG_VALUE: ssim_4x4x2_core:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_consts 4, DW_OP_div, DW_OP_consts 4, DW_OP_mul, DW_OP_consts 4, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef
	#DEBUG_VALUE: ssim_4x4x2_core:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_consts 4, DW_OP_div, DW_OP_consts 4, DW_OP_mul, DW_OP_consts 4, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef
	#DEBUG_VALUE: z <- [DW_OP_constu 8, DW_OP_minus, DW_OP_deref_size 8, DW_OP_plus_uconst 1, DW_OP_stack_value] $rsp
	.loc	0 0 20 is_stmt 0                # x264_src/common/pixel.c:0:20
	movq	-72(%rsp), %rax                 # 8-byte Reload
.Ltmp2213:
	.loc	0 465 5 is_stmt 1               # x264_src/common/pixel.c:465:5
	addq	$4, %rax
	movl	$1, %edx
	testb	$1, -60(%rsp)                   # 1-byte Folded Reload
	movl	$0, %ecx
.Ltmp2214:
	jne	.LBB63_1
.Ltmp2215:
# %bb.2:                                # %for.cond.cleanup
	#DEBUG_VALUE: ssim_4x4x2_core:stride1 <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: ssim_4x4x2_core:stride2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: ssim_4x4x2_core:sums <- [DW_OP_constu 24, DW_OP_minus] [$rsp+0]
	.loc	0 486 1 epilogue_begin          # x264_src/common/pixel.c:486:1
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2216:
.Lfunc_end63:
	.size	ssim_4x4x2_core, .Lfunc_end63-ssim_4x4x2_core
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function ssim_end4
	.type	ssim_end4,@function
ssim_end4:                              # @ssim_end4
.Lfunc_begin64:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: ssim_end4:sum0 <- $rdi
	#DEBUG_VALUE: ssim_end4:sum1 <- $rsi
	#DEBUG_VALUE: ssim_end4:width <- $edx
	#DEBUG_VALUE: ssim_end4:ssim <- 0.000000e+00
	#DEBUG_VALUE: i <- 0
	.loc	0 501 23 prologue_end           # x264_src/common/pixel.c:501:23
	testl	%edx, %edx
.Ltmp2217:
	.loc	0 501 5 is_stmt 0               # x264_src/common/pixel.c:501:5
	jle	.LBB64_1
.Ltmp2218:
# %bb.3:                                # %for.body.preheader
	#DEBUG_VALUE: ssim_end4:sum0 <- $rdi
	#DEBUG_VALUE: ssim_end4:sum1 <- $rsi
	#DEBUG_VALUE: ssim_end4:width <- $edx
	#DEBUG_VALUE: ssim_end4:ssim <- 0.000000e+00
	#DEBUG_VALUE: i <- 0
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	0 501 23                        # x264_src/common/pixel.c:501:23
	movl	%edx, %eax
	.loc	0 502 28 is_stmt 1              # x264_src/common/pixel.c:502:28
	movq	(%rdi), %xmm3                   # xmm3 = mem[0],zero
	.loc	0 502 56 is_stmt 0              # x264_src/common/pixel.c:502:56
	movq	(%rsi), %xmm1                   # xmm1 = mem[0],zero
	.loc	0 504 28 is_stmt 1              # x264_src/common/pixel.c:504:28
	movl	8(%rdi), %edx
.Ltmp2219:
	#DEBUG_VALUE: ssim_end4:width <- $eax
	.loc	0 505 28                        # x264_src/common/pixel.c:505:28
	movl	12(%rdi), %r8d
	.loc	0 504 56                        # x264_src/common/pixel.c:504:56
	movl	8(%rsi), %r9d
	.loc	0 505 56                        # x264_src/common/pixel.c:505:56
	movl	12(%rsi), %r10d
.Ltmp2220:
	.loc	0 501 5                         # x264_src/common/pixel.c:501:5
	shlq	$4, %rax
.Ltmp2221:
	#DEBUG_VALUE: ssim_end4:width <- [DW_OP_LLVM_entry_value 1] $edx
	.loc	0 0 5 is_stmt 0                 # x264_src/common/pixel.c:0:5
	xorps	%xmm0, %xmm0
	xorl	%ecx, %ecx
.Ltmp2222:
	.p2align	4, 0x90
.LBB64_4:                               # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ssim_end4:sum0 <- $rdi
	#DEBUG_VALUE: ssim_end4:sum1 <- $rsi
	#DEBUG_VALUE: ssim_end4:width <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: i <- [DW_OP_consts 16, DW_OP_div, DW_OP_stack_value] $rcx
	#DEBUG_VALUE: ssim_end4:ssim <- $xmm0
	.loc	0 505 39 is_stmt 1              # x264_src/common/pixel.c:505:39
	addl	%r8d, %r10d
	.loc	0 504 39                        # x264_src/common/pixel.c:504:39
	addl	%edx, %r9d
	.loc	0 502 39                        # x264_src/common/pixel.c:502:39
	paddd	%xmm1, %xmm3
	.loc	0 502 41 is_stmt 0              # x264_src/common/pixel.c:502:41
	movq	16(%rdi,%rcx), %xmm2            # xmm2 = mem[0],zero
	.loc	0 502 54                        # x264_src/common/pixel.c:502:54
	paddd	%xmm2, %xmm3
	.loc	0 502 69                        # x264_src/common/pixel.c:502:69
	movq	16(%rsi,%rcx), %xmm1            # xmm1 = mem[0],zero
	.loc	0 502 67                        # x264_src/common/pixel.c:502:67
	paddd	%xmm1, %xmm3
	.loc	0 504 41 is_stmt 1              # x264_src/common/pixel.c:504:41
	movl	24(%rdi,%rcx), %edx
	.loc	0 505 41                        # x264_src/common/pixel.c:505:41
	movl	28(%rdi,%rcx), %r8d
	.loc	0 504 54                        # x264_src/common/pixel.c:504:54
	addl	%edx, %r9d
	.loc	0 504 69 is_stmt 0              # x264_src/common/pixel.c:504:69
	movl	24(%rsi,%rcx), %r11d
	.loc	0 505 69 is_stmt 1              # x264_src/common/pixel.c:505:69
	movl	28(%rsi,%rcx), %ebx
	.loc	0 504 67                        # x264_src/common/pixel.c:504:67
	addl	%r11d, %r9d
	.loc	0 505 54                        # x264_src/common/pixel.c:505:54
	addl	%r8d, %r10d
	.loc	0 505 67 is_stmt 0              # x264_src/common/pixel.c:505:67
	addl	%ebx, %r10d
.Ltmp2223:
	#DEBUG_VALUE: ssim_end1:s12 <- $r10d
	#DEBUG_VALUE: ssim_end1:s1 <- undef
	#DEBUG_VALUE: ssim_end1:s2 <- undef
	#DEBUG_VALUE: ssim_end1:ss <- $r9d
	.loc	0 492 18 is_stmt 1              # x264_src/common/pixel.c:492:18
	shll	$6, %r9d
.Ltmp2224:
	.loc	0 494 21                        # x264_src/common/pixel.c:494:21
	movd	%xmm3, %r14d
	.loc	0 492 26                        # x264_src/common/pixel.c:492:26
	movl	%r14d, %r15d
	imull	%r15d, %r15d
	pshufd	$85, %xmm3, %xmm3               # xmm3 = xmm3[1,1,1,1]
	movd	%xmm3, %r12d
	.loc	0 494 24                        # x264_src/common/pixel.c:494:24
	imull	%r12d, %r14d
	.loc	0 492 34                        # x264_src/common/pixel.c:492:34
	imull	%r12d, %r12d
	.loc	0 495 61                        # x264_src/common/pixel.c:495:61
	subl	%r12d, %r9d
	subl	%r15d, %r9d
.Ltmp2225:
	#DEBUG_VALUE: ssim_end1:vars <- undef
	#DEBUG_VALUE: ssim_end1:covar <- undef
	.loc	0 494 28                        # x264_src/common/pixel.c:494:28
	leal	416(,%r14,2), %ebp
	.loc	0 494 12 is_stmt 0              # x264_src/common/pixel.c:494:12
	xorps	%xmm3, %xmm3
	cvtsi2ss	%ebp, %xmm3
	.loc	0 494 50                        # x264_src/common/pixel.c:494:50
	shll	$7, %r10d
.Ltmp2226:
	.loc	0 494 24                        # x264_src/common/pixel.c:494:24
	addl	%r14d, %r14d
	.loc	0 494 50                        # x264_src/common/pixel.c:494:50
	subl	%r14d, %r10d
	.loc	0 494 57                        # x264_src/common/pixel.c:494:57
	addl	$235963, %r10d                  # imm = 0x399BB
	.loc	0 494 41                        # x264_src/common/pixel.c:494:41
	xorps	%xmm4, %xmm4
	cvtsi2ss	%r10d, %xmm4
	.loc	0 494 39                        # x264_src/common/pixel.c:494:39
	mulss	%xmm3, %xmm4
	.loc	0 495 35 is_stmt 1              # x264_src/common/pixel.c:495:35
	leal	(%r12,%r15), %r10d
	addl	$416, %r10d                     # imm = 0x1A0
	.loc	0 495 13 is_stmt 0              # x264_src/common/pixel.c:495:13
	xorps	%xmm3, %xmm3
	cvtsi2ss	%r10d, %xmm3
	.loc	0 495 61                        # x264_src/common/pixel.c:495:61
	addl	$235963, %r9d                   # imm = 0x399BB
	.loc	0 495 48                        # x264_src/common/pixel.c:495:48
	xorps	%xmm5, %xmm5
	cvtsi2ss	%r9d, %xmm5
	.loc	0 495 46                        # x264_src/common/pixel.c:495:46
	mulss	%xmm3, %xmm5
	.loc	0 495 10                        # x264_src/common/pixel.c:495:10
	divss	%xmm5, %xmm4
.Ltmp2227:
	.loc	0 502 14 is_stmt 1              # x264_src/common/pixel.c:502:14
	addss	%xmm4, %xmm0
.Ltmp2228:
	#DEBUG_VALUE: ssim_end4:ssim <- $xmm0
	#DEBUG_VALUE: i <- [DW_OP_consts 16, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rcx
	.loc	0 501 23                        # x264_src/common/pixel.c:501:23
	addq	$16, %rcx
.Ltmp2229:
	.loc	0 0 23 is_stmt 0                # x264_src/common/pixel.c:0:23
	movl	%ebx, %r10d
	movl	%r11d, %r9d
	movdqa	%xmm2, %xmm3
	.loc	0 501 23                        # x264_src/common/pixel.c:501:23
	cmpq	%rcx, %rax
.Ltmp2230:
	.loc	0 501 5                         # x264_src/common/pixel.c:501:5
	jne	.LBB64_4
.Ltmp2231:
# %bb.5:
	#DEBUG_VALUE: ssim_end4:sum0 <- $rdi
	#DEBUG_VALUE: ssim_end4:sum1 <- $rsi
	#DEBUG_VALUE: ssim_end4:width <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ssim_end4:ssim <- $xmm0
	.loc	0 0 5                           # x264_src/common/pixel.c:0:5
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	.cfi_restore %rbx
	.cfi_restore %r12
	.cfi_restore %r14
	.cfi_restore %r15
	.cfi_restore %rbp
	.loc	0 506 5 is_stmt 1               # x264_src/common/pixel.c:506:5
	retq
.Ltmp2232:
.LBB64_1:
	#DEBUG_VALUE: ssim_end4:sum0 <- $rdi
	#DEBUG_VALUE: ssim_end4:sum1 <- $rsi
	#DEBUG_VALUE: ssim_end4:width <- $edx
	#DEBUG_VALUE: ssim_end4:ssim <- 0.000000e+00
	.loc	0 0 5 is_stmt 0                 # x264_src/common/pixel.c:0:5
	xorps	%xmm0, %xmm0
	.loc	0 506 5                         # x264_src/common/pixel.c:506:5
	retq
.Ltmp2233:
.Lfunc_end64:
	.size	ssim_end4, .Lfunc_end64-ssim_end4
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function pixel_var2_8x8
	.type	pixel_var2_8x8,@function
pixel_var2_8x8:                         # @pixel_var2_8x8
.Lfunc_begin65:
	.loc	0 166 0 is_stmt 1               # x264_src/common/pixel.c:166:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: pixel_var2_8x8:pix1 <- $rdi
	#DEBUG_VALUE: pixel_var2_8x8:i_stride1 <- $esi
	#DEBUG_VALUE: pixel_var2_8x8:pix2 <- $rdx
	#DEBUG_VALUE: pixel_var2_8x8:i_stride2 <- $ecx
	#DEBUG_VALUE: pixel_var2_8x8:ssd <- $r8
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset %rbx, -24
	.cfi_offset %rbp, -16
.Ltmp2234:
	#DEBUG_VALUE: pixel_var2_8x8:var <- 0
	#DEBUG_VALUE: pixel_var2_8x8:sum <- 0
	#DEBUG_VALUE: pixel_var2_8x8:sqr <- 0
	#DEBUG_VALUE: y <- 0
	movslq	%esi, %rsi
.Ltmp2235:
	#DEBUG_VALUE: pixel_var2_8x8:i_stride1 <- [DW_OP_LLVM_entry_value 1] $esi
	movslq	%ecx, %r9
	xorl	%eax, %eax
	movl	$8, %r10d
	pxor	%xmm0, %xmm0
	xorl	%ecx, %ecx
.Ltmp2236:
	#DEBUG_VALUE: pixel_var2_8x8:i_stride2 <- [DW_OP_LLVM_entry_value 1] $ecx
	.p2align	4, 0x90
.LBB65_1:                               # %for.cond1.preheader
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: pixel_var2_8x8:pix1 <- $rdi
	#DEBUG_VALUE: pixel_var2_8x8:i_stride1 <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_var2_8x8:pix2 <- $rdx
	#DEBUG_VALUE: pixel_var2_8x8:i_stride2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: pixel_var2_8x8:ssd <- $r8
	#DEBUG_VALUE: pixel_var2_8x8:var <- 0
	#DEBUG_VALUE: pixel_var2_8x8:pix1 <- $rdi
	#DEBUG_VALUE: y <- [DW_OP_consts 8, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: pixel_var2_8x8:pix2 <- $rdx
	#DEBUG_VALUE: pixel_var2_8x8:sqr <- $eax
	#DEBUG_VALUE: diff <- undef
	#DEBUG_VALUE: pixel_var2_8x8:sum <- undef
	#DEBUG_VALUE: x <- 7
	.loc	0 172 24 prologue_end           # x264_src/common/pixel.c:172:24
	movq	(%rdi), %xmm1                   # xmm1 = mem[0],zero
	punpcklbw	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1],xmm1[2],xmm0[2],xmm1[3],xmm0[3],xmm1[4],xmm0[4],xmm1[5],xmm0[5],xmm1[6],xmm0[6],xmm1[7],xmm0[7]
	movdqa	%xmm1, %xmm2
	punpcklwd	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1],xmm2[2],xmm0[2],xmm2[3],xmm0[3]
	punpckhwd	%xmm0, %xmm1            # xmm1 = xmm1[4],xmm0[4],xmm1[5],xmm0[5],xmm1[6],xmm0[6],xmm1[7],xmm0[7]
	.loc	0 172 34 is_stmt 0              # x264_src/common/pixel.c:172:34
	movq	(%rdx), %xmm3                   # xmm3 = mem[0],zero
	punpcklbw	%xmm0, %xmm3            # xmm3 = xmm3[0],xmm0[0],xmm3[1],xmm0[1],xmm3[2],xmm0[2],xmm3[3],xmm0[3],xmm3[4],xmm0[4],xmm3[5],xmm0[5],xmm3[6],xmm0[6],xmm3[7],xmm0[7]
	movdqa	%xmm3, %xmm4
	punpcklwd	%xmm0, %xmm4            # xmm4 = xmm4[0],xmm0[0],xmm4[1],xmm0[1],xmm4[2],xmm0[2],xmm4[3],xmm0[3]
	.loc	0 172 32                        # x264_src/common/pixel.c:172:32
	psubd	%xmm4, %xmm2
	.loc	0 172 34                        # x264_src/common/pixel.c:172:34
	punpckhwd	%xmm0, %xmm3            # xmm3 = xmm3[4],xmm0[4],xmm3[5],xmm0[5],xmm3[6],xmm0[6],xmm3[7],xmm0[7]
	.loc	0 172 32                        # x264_src/common/pixel.c:172:32
	psubd	%xmm3, %xmm1
	.loc	0 174 25 is_stmt 1              # x264_src/common/pixel.c:174:25
	movd	%xmm2, %r11d
	imull	%r11d, %r11d
	.loc	0 174 17 is_stmt 0              # x264_src/common/pixel.c:174:17
	addl	%eax, %r11d
.Ltmp2237:
	#DEBUG_VALUE: pixel_var2_8x8:sqr <- $r11d
	.loc	0 174 25                        # x264_src/common/pixel.c:174:25
	pshufd	$85, %xmm2, %xmm3               # xmm3 = xmm2[1,1,1,1]
	movd	%xmm3, %eax
	imull	%eax, %eax
	.loc	0 174 17                        # x264_src/common/pixel.c:174:17
	addl	%r11d, %eax
.Ltmp2238:
	#DEBUG_VALUE: pixel_var2_8x8:sqr <- $eax
	.loc	0 174 25                        # x264_src/common/pixel.c:174:25
	pshufd	$238, %xmm2, %xmm3              # xmm3 = xmm2[2,3,2,3]
	movd	%xmm3, %r11d
	imull	%r11d, %r11d
.Ltmp2239:
	#DEBUG_VALUE: pixel_var2_8x8:sqr <- undef
	pshufd	$255, %xmm2, %xmm3              # xmm3 = xmm2[3,3,3,3]
	movd	%xmm3, %ebx
	imull	%ebx, %ebx
	.loc	0 174 17                        # x264_src/common/pixel.c:174:17
	addl	%r11d, %ebx
	addl	%eax, %ebx
.Ltmp2240:
	#DEBUG_VALUE: pixel_var2_8x8:sqr <- $ebx
	.loc	0 174 25                        # x264_src/common/pixel.c:174:25
	movd	%xmm1, %eax
	imull	%eax, %eax
.Ltmp2241:
	#DEBUG_VALUE: pixel_var2_8x8:sqr <- undef
	pshufd	$85, %xmm1, %xmm3               # xmm3 = xmm1[1,1,1,1]
	movd	%xmm3, %r11d
	imull	%r11d, %r11d
	.loc	0 174 17                        # x264_src/common/pixel.c:174:17
	addl	%eax, %r11d
	#DEBUG_VALUE: pixel_var2_8x8:sqr <- undef
	.loc	0 174 25                        # x264_src/common/pixel.c:174:25
	pshufd	$238, %xmm1, %xmm3              # xmm3 = xmm1[2,3,2,3]
	movd	%xmm3, %ebp
	imull	%ebp, %ebp
	.loc	0 174 17                        # x264_src/common/pixel.c:174:17
	addl	%r11d, %ebp
	addl	%ebx, %ebp
.Ltmp2242:
	#DEBUG_VALUE: pixel_var2_8x8:sqr <- $ebp
	.loc	0 173 17 is_stmt 1              # x264_src/common/pixel.c:173:17
	paddd	%xmm1, %xmm2
	pshufd	$238, %xmm2, %xmm3              # xmm3 = xmm2[2,3,2,3]
	paddd	%xmm2, %xmm3
	pshufd	$85, %xmm3, %xmm2               # xmm2 = xmm3[1,1,1,1]
	paddd	%xmm3, %xmm2
	movd	%xmm2, %eax
	addl	%eax, %ecx
.Ltmp2243:
	#DEBUG_VALUE: pixel_var2_8x8:sum <- $ecx
	.loc	0 174 25                        # x264_src/common/pixel.c:174:25
	pshufd	$255, %xmm1, %xmm1              # xmm1 = xmm1[3,3,3,3]
	movd	%xmm1, %eax
	imull	%eax, %eax
	.loc	0 174 17 is_stmt 0              # x264_src/common/pixel.c:174:17
	addl	%ebp, %eax
.Ltmp2244:
	#DEBUG_VALUE: pixel_var2_8x8:sqr <- $eax
	#DEBUG_VALUE: x <- 8
	.loc	0 176 14 is_stmt 1              # x264_src/common/pixel.c:176:14
	addq	%rsi, %rdi
.Ltmp2245:
	#DEBUG_VALUE: pixel_var2_8x8:pix1 <- $rdi
	.loc	0 177 14                        # x264_src/common/pixel.c:177:14
	addq	%r9, %rdx
.Ltmp2246:
	#DEBUG_VALUE: pixel_var2_8x8:pix2 <- $rdx
	#DEBUG_VALUE: y <- [DW_OP_consts 8, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $r10d
	.loc	0 168 23                        # x264_src/common/pixel.c:168:23
	decl	%r10d
.Ltmp2247:
	.loc	0 168 5 is_stmt 0               # x264_src/common/pixel.c:168:5
	jne	.LBB65_1
.Ltmp2248:
# %bb.2:                                # %for.cond.cleanup
	#DEBUG_VALUE: pixel_var2_8x8:pix1 <- $rdi
	#DEBUG_VALUE: pixel_var2_8x8:i_stride1 <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_var2_8x8:pix2 <- $rdx
	#DEBUG_VALUE: pixel_var2_8x8:i_stride2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: pixel_var2_8x8:ssd <- $r8
	#DEBUG_VALUE: pixel_var2_8x8:var <- 0
	#DEBUG_VALUE: pixel_var2_8x8:sum <- $ecx
	#DEBUG_VALUE: pixel_var2_8x8:sqr <- $eax
	#DEBUG_VALUE: pixel_var2_8x8:sum <- undef
	.loc	0 180 22 is_stmt 1              # x264_src/common/pixel.c:180:22
	imull	%ecx, %ecx
	.loc	0 180 28 is_stmt 0              # x264_src/common/pixel.c:180:28
	shrl	$6, %ecx
	.loc	0 181 10 is_stmt 1              # x264_src/common/pixel.c:181:10
	movl	%eax, (%r8)
	.loc	0 180 15                        # x264_src/common/pixel.c:180:15
	subl	%ecx, %eax
.Ltmp2249:
	#DEBUG_VALUE: pixel_var2_8x8:var <- $eax
	.loc	0 182 5 epilogue_begin          # x264_src/common/pixel.c:182:5
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2250:
.Lfunc_end65:
	.size	pixel_var2_8x8, .Lfunc_end65-pixel_var2_8x8
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function pixel_hadamard_ac
.LCPI66_0:
	.quad	-9223372034707292160            # 0x8000000080000000
	.quad	-9223372034707292160            # 0x8000000080000000
.LCPI66_1:
	.quad	-9223372034707292152            # 0x8000000080000008
	.quad	-9223372034707292152            # 0x8000000080000008
.LCPI66_2:
	.long	65537                           # 0x10001
	.long	65537                           # 0x10001
	.long	65537                           # 0x10001
	.long	65537                           # 0x10001
.LCPI66_3:
	.long	2147483655                      # 0x80000007
	.long	2147483655                      # 0x80000007
	.long	2147483655                      # 0x80000007
	.long	2147483655                      # 0x80000007
	.text
	.p2align	4, 0x90
	.type	pixel_hadamard_ac,@function
pixel_hadamard_ac:                      # @pixel_hadamard_ac
.Lfunc_begin66:
	.loc	0 329 0                         # x264_src/common/pixel.c:329:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: pixel_hadamard_ac:pix <- $rdi
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- $esi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp2251:
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	#DEBUG_VALUE: i <- 0
	movslq	%esi, %rcx
.Ltmp2252:
	#DEBUG_VALUE: t <- [DW_OP_constu 128, DW_OP_minus, DW_OP_stack_value] $rsp
	.loc	0 336 15 prologue_end           # x264_src/common/pixel.c:336:15
	movzbl	(%rdi), %eax
	.loc	0 336 22 is_stmt 0              # x264_src/common/pixel.c:336:22
	movzbl	1(%rdi), %edx
	.loc	0 336 21                        # x264_src/common/pixel.c:336:21
	leal	(%rdx,%rax), %esi
.Ltmp2253:
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	.loc	0 336 40                        # x264_src/common/pixel.c:336:40
	subl	%edx, %eax
	.loc	0 336 48                        # x264_src/common/pixel.c:336:48
	shll	$16, %eax
	.loc	0 336 30                        # x264_src/common/pixel.c:336:30
	orl	%esi, %eax
.Ltmp2254:
	#DEBUG_VALUE: pixel_hadamard_ac:a0 <- $eax
	.loc	0 337 15 is_stmt 1              # x264_src/common/pixel.c:337:15
	movzbl	2(%rdi), %edx
	.loc	0 337 22 is_stmt 0              # x264_src/common/pixel.c:337:22
	movzbl	3(%rdi), %esi
	.loc	0 337 21                        # x264_src/common/pixel.c:337:21
	leal	(%rsi,%rdx), %r8d
	.loc	0 337 40                        # x264_src/common/pixel.c:337:40
	subl	%esi, %edx
	.loc	0 337 48                        # x264_src/common/pixel.c:337:48
	shll	$16, %edx
	.loc	0 337 30                        # x264_src/common/pixel.c:337:30
	orl	%r8d, %edx
.Ltmp2255:
	#DEBUG_VALUE: pixel_hadamard_ac:a1 <- $edx
	.loc	0 338 19 is_stmt 1              # x264_src/common/pixel.c:338:19
	leal	(%rdx,%rax), %esi
	.loc	0 338 14 is_stmt 0              # x264_src/common/pixel.c:338:14
	movl	%esi, -128(%rsp)
	.loc	0 339 19 is_stmt 1              # x264_src/common/pixel.c:339:19
	subl	%edx, %eax
.Ltmp2256:
	.loc	0 339 14 is_stmt 0              # x264_src/common/pixel.c:339:14
	movl	%eax, -112(%rsp)
	.loc	0 340 15 is_stmt 1              # x264_src/common/pixel.c:340:15
	movzbl	4(%rdi), %eax
	.loc	0 340 22 is_stmt 0              # x264_src/common/pixel.c:340:22
	movzbl	5(%rdi), %edx
.Ltmp2257:
	.loc	0 340 21                        # x264_src/common/pixel.c:340:21
	leal	(%rdx,%rax), %esi
	.loc	0 340 40                        # x264_src/common/pixel.c:340:40
	subl	%edx, %eax
	.loc	0 340 48                        # x264_src/common/pixel.c:340:48
	shll	$16, %eax
	.loc	0 340 30                        # x264_src/common/pixel.c:340:30
	orl	%esi, %eax
.Ltmp2258:
	#DEBUG_VALUE: pixel_hadamard_ac:a2 <- $eax
	.loc	0 341 15 is_stmt 1              # x264_src/common/pixel.c:341:15
	movzbl	6(%rdi), %edx
	.loc	0 341 22 is_stmt 0              # x264_src/common/pixel.c:341:22
	movzbl	7(%rdi), %esi
	.loc	0 341 21                        # x264_src/common/pixel.c:341:21
	leal	(%rsi,%rdx), %r8d
	.loc	0 341 40                        # x264_src/common/pixel.c:341:40
	subl	%esi, %edx
	.loc	0 341 48                        # x264_src/common/pixel.c:341:48
	shll	$16, %edx
	.loc	0 341 30                        # x264_src/common/pixel.c:341:30
	orl	%r8d, %edx
.Ltmp2259:
	#DEBUG_VALUE: pixel_hadamard_ac:a3 <- $edx
	.loc	0 342 19 is_stmt 1              # x264_src/common/pixel.c:342:19
	leal	(%rdx,%rax), %esi
	.loc	0 342 14 is_stmt 0              # x264_src/common/pixel.c:342:14
	movl	%esi, -96(%rsp)
	.loc	0 343 20 is_stmt 1              # x264_src/common/pixel.c:343:20
	subl	%edx, %eax
.Ltmp2260:
	.loc	0 343 15 is_stmt 0              # x264_src/common/pixel.c:343:15
	movl	%eax, -80(%rsp)
.Ltmp2261:
	#DEBUG_VALUE: i <- 1
	.loc	0 333 36 is_stmt 1              # x264_src/common/pixel.c:333:36
	leaq	(%rdi,%rcx), %rax
.Ltmp2262:
	#DEBUG_VALUE: pixel_hadamard_ac:pix <- $rax
	#DEBUG_VALUE: t <- undef
	.loc	0 336 15                        # x264_src/common/pixel.c:336:15
	movzbl	(%rdi,%rcx), %edx
.Ltmp2263:
	.loc	0 336 22 is_stmt 0              # x264_src/common/pixel.c:336:22
	movzbl	1(%rdi,%rcx), %esi
	.loc	0 336 21                        # x264_src/common/pixel.c:336:21
	leal	(%rsi,%rdx), %r8d
	.loc	0 336 40                        # x264_src/common/pixel.c:336:40
	subl	%esi, %edx
	.loc	0 336 48                        # x264_src/common/pixel.c:336:48
	shll	$16, %edx
	.loc	0 336 30                        # x264_src/common/pixel.c:336:30
	orl	%r8d, %edx
.Ltmp2264:
	#DEBUG_VALUE: pixel_hadamard_ac:a0 <- $edx
	.loc	0 337 15 is_stmt 1              # x264_src/common/pixel.c:337:15
	movzbl	2(%rdi,%rcx), %esi
	.loc	0 337 22 is_stmt 0              # x264_src/common/pixel.c:337:22
	movzbl	3(%rdi,%rcx), %r8d
	.loc	0 337 21                        # x264_src/common/pixel.c:337:21
	leal	(%r8,%rsi), %r9d
	.loc	0 337 40                        # x264_src/common/pixel.c:337:40
	subl	%r8d, %esi
	.loc	0 337 48                        # x264_src/common/pixel.c:337:48
	shll	$16, %esi
	.loc	0 337 30                        # x264_src/common/pixel.c:337:30
	orl	%r9d, %esi
.Ltmp2265:
	#DEBUG_VALUE: pixel_hadamard_ac:a1 <- $esi
	.loc	0 338 19 is_stmt 1              # x264_src/common/pixel.c:338:19
	leal	(%rsi,%rdx), %r8d
	.loc	0 338 14 is_stmt 0              # x264_src/common/pixel.c:338:14
	movl	%r8d, -124(%rsp)
	.loc	0 339 19 is_stmt 1              # x264_src/common/pixel.c:339:19
	subl	%esi, %edx
.Ltmp2266:
	.loc	0 339 14 is_stmt 0              # x264_src/common/pixel.c:339:14
	movl	%edx, -108(%rsp)
	.loc	0 340 15 is_stmt 1              # x264_src/common/pixel.c:340:15
	movzbl	4(%rdi,%rcx), %edx
	.loc	0 340 22 is_stmt 0              # x264_src/common/pixel.c:340:22
	movzbl	5(%rdi,%rcx), %esi
.Ltmp2267:
	.loc	0 340 21                        # x264_src/common/pixel.c:340:21
	leal	(%rsi,%rdx), %r8d
	.loc	0 340 40                        # x264_src/common/pixel.c:340:40
	subl	%esi, %edx
	.loc	0 340 48                        # x264_src/common/pixel.c:340:48
	shll	$16, %edx
	.loc	0 340 30                        # x264_src/common/pixel.c:340:30
	orl	%r8d, %edx
.Ltmp2268:
	#DEBUG_VALUE: pixel_hadamard_ac:a2 <- $edx
	.loc	0 341 15 is_stmt 1              # x264_src/common/pixel.c:341:15
	movzbl	6(%rdi,%rcx), %esi
	.loc	0 341 22 is_stmt 0              # x264_src/common/pixel.c:341:22
	movzbl	7(%rdi,%rcx), %edi
	.loc	0 341 21                        # x264_src/common/pixel.c:341:21
	leal	(%rdi,%rsi), %r8d
	.loc	0 341 40                        # x264_src/common/pixel.c:341:40
	subl	%edi, %esi
	.loc	0 341 48                        # x264_src/common/pixel.c:341:48
	shll	$16, %esi
	.loc	0 341 30                        # x264_src/common/pixel.c:341:30
	orl	%r8d, %esi
.Ltmp2269:
	#DEBUG_VALUE: pixel_hadamard_ac:a3 <- $esi
	.loc	0 342 19 is_stmt 1              # x264_src/common/pixel.c:342:19
	leal	(%rsi,%rdx), %edi
	.loc	0 342 14 is_stmt 0              # x264_src/common/pixel.c:342:14
	movl	%edi, -92(%rsp)
	.loc	0 343 20 is_stmt 1              # x264_src/common/pixel.c:343:20
	subl	%esi, %edx
.Ltmp2270:
	.loc	0 343 15 is_stmt 0              # x264_src/common/pixel.c:343:15
	movl	%edx, -76(%rsp)
.Ltmp2271:
	#DEBUG_VALUE: i <- 2
	.loc	0 333 36 is_stmt 1              # x264_src/common/pixel.c:333:36
	leaq	(%rax,%rcx), %rsi
.Ltmp2272:
	#DEBUG_VALUE: pixel_hadamard_ac:pix <- $rsi
	.loc	0 336 15                        # x264_src/common/pixel.c:336:15
	movzbl	(%rcx,%rax), %edx
	.loc	0 336 22 is_stmt 0              # x264_src/common/pixel.c:336:22
	movzbl	1(%rcx,%rax), %edi
	.loc	0 336 21                        # x264_src/common/pixel.c:336:21
	leal	(%rdi,%rdx), %r8d
	.loc	0 336 40                        # x264_src/common/pixel.c:336:40
	subl	%edi, %edx
	.loc	0 336 48                        # x264_src/common/pixel.c:336:48
	shll	$16, %edx
	.loc	0 336 30                        # x264_src/common/pixel.c:336:30
	orl	%r8d, %edx
.Ltmp2273:
	#DEBUG_VALUE: pixel_hadamard_ac:a0 <- $edx
	.loc	0 337 15 is_stmt 1              # x264_src/common/pixel.c:337:15
	movzbl	2(%rcx,%rax), %edi
	.loc	0 337 22 is_stmt 0              # x264_src/common/pixel.c:337:22
	movzbl	3(%rcx,%rax), %r8d
	.loc	0 337 21                        # x264_src/common/pixel.c:337:21
	leal	(%r8,%rdi), %r9d
	.loc	0 337 40                        # x264_src/common/pixel.c:337:40
	subl	%r8d, %edi
	.loc	0 337 48                        # x264_src/common/pixel.c:337:48
	shll	$16, %edi
	.loc	0 337 30                        # x264_src/common/pixel.c:337:30
	orl	%r9d, %edi
.Ltmp2274:
	#DEBUG_VALUE: pixel_hadamard_ac:a1 <- $edi
	.loc	0 338 19 is_stmt 1              # x264_src/common/pixel.c:338:19
	leal	(%rdi,%rdx), %r8d
	.loc	0 338 14 is_stmt 0              # x264_src/common/pixel.c:338:14
	movl	%r8d, -120(%rsp)
	.loc	0 339 19 is_stmt 1              # x264_src/common/pixel.c:339:19
	subl	%edi, %edx
.Ltmp2275:
	.loc	0 339 14 is_stmt 0              # x264_src/common/pixel.c:339:14
	movl	%edx, -104(%rsp)
	.loc	0 340 15 is_stmt 1              # x264_src/common/pixel.c:340:15
	movzbl	4(%rcx,%rax), %edx
	.loc	0 340 22 is_stmt 0              # x264_src/common/pixel.c:340:22
	movzbl	5(%rcx,%rax), %edi
.Ltmp2276:
	.loc	0 340 21                        # x264_src/common/pixel.c:340:21
	leal	(%rdi,%rdx), %r8d
	.loc	0 340 40                        # x264_src/common/pixel.c:340:40
	subl	%edi, %edx
	.loc	0 340 48                        # x264_src/common/pixel.c:340:48
	shll	$16, %edx
	.loc	0 340 30                        # x264_src/common/pixel.c:340:30
	orl	%r8d, %edx
.Ltmp2277:
	#DEBUG_VALUE: pixel_hadamard_ac:a2 <- $edx
	.loc	0 341 15 is_stmt 1              # x264_src/common/pixel.c:341:15
	movzbl	6(%rcx,%rax), %edi
	.loc	0 341 22 is_stmt 0              # x264_src/common/pixel.c:341:22
	movzbl	7(%rcx,%rax), %eax
	.loc	0 341 21                        # x264_src/common/pixel.c:341:21
	leal	(%rax,%rdi), %r8d
	.loc	0 341 40                        # x264_src/common/pixel.c:341:40
	subl	%eax, %edi
	.loc	0 341 48                        # x264_src/common/pixel.c:341:48
	shll	$16, %edi
	.loc	0 341 30                        # x264_src/common/pixel.c:341:30
	orl	%r8d, %edi
.Ltmp2278:
	#DEBUG_VALUE: pixel_hadamard_ac:a3 <- $edi
	.loc	0 342 19 is_stmt 1              # x264_src/common/pixel.c:342:19
	leal	(%rdi,%rdx), %eax
	.loc	0 342 14 is_stmt 0              # x264_src/common/pixel.c:342:14
	movl	%eax, -88(%rsp)
	.loc	0 343 20 is_stmt 1              # x264_src/common/pixel.c:343:20
	subl	%edi, %edx
.Ltmp2279:
	.loc	0 343 15 is_stmt 0              # x264_src/common/pixel.c:343:15
	movl	%edx, -72(%rsp)
.Ltmp2280:
	#DEBUG_VALUE: i <- 3
	.loc	0 333 36 is_stmt 1              # x264_src/common/pixel.c:333:36
	leaq	(%rsi,%rcx), %rdx
.Ltmp2281:
	#DEBUG_VALUE: pixel_hadamard_ac:pix <- $rdx
	.loc	0 336 15                        # x264_src/common/pixel.c:336:15
	movzbl	(%rcx,%rsi), %eax
	.loc	0 336 22 is_stmt 0              # x264_src/common/pixel.c:336:22
	movzbl	1(%rcx,%rsi), %edi
.Ltmp2282:
	.loc	0 336 21                        # x264_src/common/pixel.c:336:21
	leal	(%rdi,%rax), %r8d
	.loc	0 336 40                        # x264_src/common/pixel.c:336:40
	subl	%edi, %eax
	.loc	0 336 48                        # x264_src/common/pixel.c:336:48
	shll	$16, %eax
	.loc	0 336 30                        # x264_src/common/pixel.c:336:30
	orl	%r8d, %eax
.Ltmp2283:
	#DEBUG_VALUE: pixel_hadamard_ac:a0 <- $eax
	.loc	0 337 15 is_stmt 1              # x264_src/common/pixel.c:337:15
	movzbl	2(%rcx,%rsi), %edi
	.loc	0 337 22 is_stmt 0              # x264_src/common/pixel.c:337:22
	movzbl	3(%rcx,%rsi), %r8d
	.loc	0 337 21                        # x264_src/common/pixel.c:337:21
	leal	(%r8,%rdi), %r9d
	.loc	0 337 40                        # x264_src/common/pixel.c:337:40
	subl	%r8d, %edi
	.loc	0 337 48                        # x264_src/common/pixel.c:337:48
	shll	$16, %edi
	.loc	0 337 30                        # x264_src/common/pixel.c:337:30
	orl	%r9d, %edi
.Ltmp2284:
	#DEBUG_VALUE: pixel_hadamard_ac:a1 <- $edi
	.loc	0 338 19 is_stmt 1              # x264_src/common/pixel.c:338:19
	leal	(%rdi,%rax), %r8d
	.loc	0 338 14 is_stmt 0              # x264_src/common/pixel.c:338:14
	movl	%r8d, -116(%rsp)
	.loc	0 339 19 is_stmt 1              # x264_src/common/pixel.c:339:19
	subl	%edi, %eax
.Ltmp2285:
	.loc	0 339 14 is_stmt 0              # x264_src/common/pixel.c:339:14
	movl	%eax, -100(%rsp)
	.loc	0 340 15 is_stmt 1              # x264_src/common/pixel.c:340:15
	movzbl	4(%rcx,%rsi), %edi
.Ltmp2286:
	.loc	0 340 22 is_stmt 0              # x264_src/common/pixel.c:340:22
	movzbl	5(%rcx,%rsi), %eax
	.loc	0 340 21                        # x264_src/common/pixel.c:340:21
	leal	(%rax,%rdi), %r8d
	.loc	0 340 40                        # x264_src/common/pixel.c:340:40
	subl	%eax, %edi
	.loc	0 340 48                        # x264_src/common/pixel.c:340:48
	shll	$16, %edi
	.loc	0 340 30                        # x264_src/common/pixel.c:340:30
	orl	%r8d, %edi
.Ltmp2287:
	#DEBUG_VALUE: pixel_hadamard_ac:a2 <- $edi
	.loc	0 341 15 is_stmt 1              # x264_src/common/pixel.c:341:15
	movzbl	6(%rcx,%rsi), %eax
	.loc	0 341 22 is_stmt 0              # x264_src/common/pixel.c:341:22
	movzbl	7(%rcx,%rsi), %esi
	.loc	0 341 21                        # x264_src/common/pixel.c:341:21
	leal	(%rsi,%rax), %r8d
	.loc	0 341 40                        # x264_src/common/pixel.c:341:40
	subl	%esi, %eax
	.loc	0 341 48                        # x264_src/common/pixel.c:341:48
	shll	$16, %eax
	.loc	0 341 30                        # x264_src/common/pixel.c:341:30
	orl	%r8d, %eax
.Ltmp2288:
	#DEBUG_VALUE: pixel_hadamard_ac:a3 <- $eax
	.loc	0 342 19 is_stmt 1              # x264_src/common/pixel.c:342:19
	leal	(%rax,%rdi), %esi
	.loc	0 342 14 is_stmt 0              # x264_src/common/pixel.c:342:14
	movl	%esi, -84(%rsp)
	.loc	0 343 20 is_stmt 1              # x264_src/common/pixel.c:343:20
	subl	%eax, %edi
.Ltmp2289:
	.loc	0 343 9 is_stmt 0               # x264_src/common/pixel.c:343:9
	leaq	-68(%rsp), %rax
.Ltmp2290:
	.loc	0 343 15                        # x264_src/common/pixel.c:343:15
	movl	%edi, -68(%rsp)
.Ltmp2291:
	#DEBUG_VALUE: i <- 4
	.loc	0 333 36 is_stmt 1              # x264_src/common/pixel.c:333:36
	leaq	(%rdx,%rcx), %rsi
.Ltmp2292:
	#DEBUG_VALUE: pixel_hadamard_ac:pix <- $rsi
	.loc	0 336 15                        # x264_src/common/pixel.c:336:15
	movzbl	(%rcx,%rdx), %edi
	.loc	0 336 22 is_stmt 0              # x264_src/common/pixel.c:336:22
	movzbl	1(%rcx,%rdx), %r8d
	.loc	0 336 21                        # x264_src/common/pixel.c:336:21
	leal	(%r8,%rdi), %r9d
	.loc	0 336 40                        # x264_src/common/pixel.c:336:40
	subl	%r8d, %edi
	.loc	0 336 48                        # x264_src/common/pixel.c:336:48
	shll	$16, %edi
	.loc	0 336 30                        # x264_src/common/pixel.c:336:30
	orl	%r9d, %edi
.Ltmp2293:
	#DEBUG_VALUE: pixel_hadamard_ac:a0 <- $edi
	.loc	0 337 15 is_stmt 1              # x264_src/common/pixel.c:337:15
	movzbl	2(%rcx,%rdx), %r8d
	.loc	0 337 22 is_stmt 0              # x264_src/common/pixel.c:337:22
	movzbl	3(%rcx,%rdx), %r9d
	.loc	0 337 21                        # x264_src/common/pixel.c:337:21
	leal	(%r9,%r8), %r10d
	.loc	0 337 40                        # x264_src/common/pixel.c:337:40
	subl	%r9d, %r8d
	.loc	0 337 48                        # x264_src/common/pixel.c:337:48
	shll	$16, %r8d
	.loc	0 337 30                        # x264_src/common/pixel.c:337:30
	orl	%r10d, %r8d
.Ltmp2294:
	#DEBUG_VALUE: pixel_hadamard_ac:a1 <- $r8d
	.loc	0 338 19 is_stmt 1              # x264_src/common/pixel.c:338:19
	leal	(%r8,%rdi), %r9d
	.loc	0 338 14 is_stmt 0              # x264_src/common/pixel.c:338:14
	movl	%r9d, -64(%rsp)
	.loc	0 339 19 is_stmt 1              # x264_src/common/pixel.c:339:19
	subl	%r8d, %edi
.Ltmp2295:
	.loc	0 339 14 is_stmt 0              # x264_src/common/pixel.c:339:14
	movl	%edi, -48(%rsp)
	.loc	0 340 15 is_stmt 1              # x264_src/common/pixel.c:340:15
	movzbl	4(%rcx,%rdx), %edi
	.loc	0 340 22 is_stmt 0              # x264_src/common/pixel.c:340:22
	movzbl	5(%rcx,%rdx), %r8d
.Ltmp2296:
	.loc	0 340 21                        # x264_src/common/pixel.c:340:21
	leal	(%r8,%rdi), %r9d
	.loc	0 340 40                        # x264_src/common/pixel.c:340:40
	subl	%r8d, %edi
	.loc	0 340 48                        # x264_src/common/pixel.c:340:48
	shll	$16, %edi
	.loc	0 340 30                        # x264_src/common/pixel.c:340:30
	orl	%r9d, %edi
.Ltmp2297:
	#DEBUG_VALUE: pixel_hadamard_ac:a2 <- $edi
	.loc	0 341 15 is_stmt 1              # x264_src/common/pixel.c:341:15
	movzbl	6(%rcx,%rdx), %r8d
	.loc	0 341 22 is_stmt 0              # x264_src/common/pixel.c:341:22
	movzbl	7(%rcx,%rdx), %edx
	.loc	0 341 21                        # x264_src/common/pixel.c:341:21
	leal	(%rdx,%r8), %r9d
	.loc	0 341 40                        # x264_src/common/pixel.c:341:40
	subl	%edx, %r8d
	.loc	0 341 48                        # x264_src/common/pixel.c:341:48
	shll	$16, %r8d
	.loc	0 341 30                        # x264_src/common/pixel.c:341:30
	orl	%r9d, %r8d
.Ltmp2298:
	#DEBUG_VALUE: pixel_hadamard_ac:a3 <- $r8d
	.loc	0 342 19 is_stmt 1              # x264_src/common/pixel.c:342:19
	leal	(%r8,%rdi), %edx
	.loc	0 342 14 is_stmt 0              # x264_src/common/pixel.c:342:14
	movl	%edx, -32(%rsp)
	.loc	0 343 20 is_stmt 1              # x264_src/common/pixel.c:343:20
	subl	%r8d, %edi
.Ltmp2299:
	.loc	0 343 15 is_stmt 0              # x264_src/common/pixel.c:343:15
	movl	%edi, -16(%rsp)
.Ltmp2300:
	#DEBUG_VALUE: i <- 5
	.loc	0 333 36 is_stmt 1              # x264_src/common/pixel.c:333:36
	leaq	(%rsi,%rcx), %rdx
.Ltmp2301:
	#DEBUG_VALUE: pixel_hadamard_ac:pix <- $rdx
	.loc	0 336 15                        # x264_src/common/pixel.c:336:15
	movzbl	(%rcx,%rsi), %edi
	.loc	0 336 22 is_stmt 0              # x264_src/common/pixel.c:336:22
	movzbl	1(%rcx,%rsi), %r8d
.Ltmp2302:
	.loc	0 336 21                        # x264_src/common/pixel.c:336:21
	leal	(%r8,%rdi), %r9d
	.loc	0 336 40                        # x264_src/common/pixel.c:336:40
	subl	%r8d, %edi
	.loc	0 336 48                        # x264_src/common/pixel.c:336:48
	shll	$16, %edi
	.loc	0 336 30                        # x264_src/common/pixel.c:336:30
	orl	%r9d, %edi
.Ltmp2303:
	#DEBUG_VALUE: pixel_hadamard_ac:a0 <- $edi
	.loc	0 337 15 is_stmt 1              # x264_src/common/pixel.c:337:15
	movzbl	2(%rcx,%rsi), %r8d
	.loc	0 337 22 is_stmt 0              # x264_src/common/pixel.c:337:22
	movzbl	3(%rcx,%rsi), %r9d
	.loc	0 337 21                        # x264_src/common/pixel.c:337:21
	leal	(%r9,%r8), %r10d
	.loc	0 337 40                        # x264_src/common/pixel.c:337:40
	subl	%r9d, %r8d
	.loc	0 337 48                        # x264_src/common/pixel.c:337:48
	shll	$16, %r8d
	.loc	0 337 30                        # x264_src/common/pixel.c:337:30
	orl	%r10d, %r8d
.Ltmp2304:
	#DEBUG_VALUE: pixel_hadamard_ac:a1 <- $r8d
	.loc	0 338 19 is_stmt 1              # x264_src/common/pixel.c:338:19
	leal	(%r8,%rdi), %r9d
	.loc	0 338 14 is_stmt 0              # x264_src/common/pixel.c:338:14
	movl	%r9d, -60(%rsp)
	.loc	0 339 19 is_stmt 1              # x264_src/common/pixel.c:339:19
	subl	%r8d, %edi
.Ltmp2305:
	.loc	0 339 14 is_stmt 0              # x264_src/common/pixel.c:339:14
	movl	%edi, -44(%rsp)
	.loc	0 340 15 is_stmt 1              # x264_src/common/pixel.c:340:15
	movzbl	4(%rcx,%rsi), %edi
	.loc	0 340 22 is_stmt 0              # x264_src/common/pixel.c:340:22
	movzbl	5(%rcx,%rsi), %r8d
.Ltmp2306:
	.loc	0 340 21                        # x264_src/common/pixel.c:340:21
	leal	(%r8,%rdi), %r9d
	.loc	0 340 40                        # x264_src/common/pixel.c:340:40
	subl	%r8d, %edi
	.loc	0 340 48                        # x264_src/common/pixel.c:340:48
	shll	$16, %edi
	.loc	0 340 30                        # x264_src/common/pixel.c:340:30
	orl	%r9d, %edi
.Ltmp2307:
	#DEBUG_VALUE: pixel_hadamard_ac:a2 <- $edi
	.loc	0 341 15 is_stmt 1              # x264_src/common/pixel.c:341:15
	movzbl	6(%rcx,%rsi), %r8d
	.loc	0 341 22 is_stmt 0              # x264_src/common/pixel.c:341:22
	movzbl	7(%rcx,%rsi), %esi
	.loc	0 341 21                        # x264_src/common/pixel.c:341:21
	leal	(%rsi,%r8), %r9d
	.loc	0 341 40                        # x264_src/common/pixel.c:341:40
	subl	%esi, %r8d
	.loc	0 341 48                        # x264_src/common/pixel.c:341:48
	shll	$16, %r8d
	.loc	0 341 30                        # x264_src/common/pixel.c:341:30
	orl	%r9d, %r8d
.Ltmp2308:
	#DEBUG_VALUE: pixel_hadamard_ac:a3 <- $r8d
	.loc	0 342 19 is_stmt 1              # x264_src/common/pixel.c:342:19
	leal	(%r8,%rdi), %esi
	.loc	0 342 14 is_stmt 0              # x264_src/common/pixel.c:342:14
	movl	%esi, -28(%rsp)
	.loc	0 343 20 is_stmt 1              # x264_src/common/pixel.c:343:20
	subl	%r8d, %edi
.Ltmp2309:
	.loc	0 343 15 is_stmt 0              # x264_src/common/pixel.c:343:15
	movl	%edi, -12(%rsp)
.Ltmp2310:
	#DEBUG_VALUE: i <- 6
	.loc	0 333 36 is_stmt 1              # x264_src/common/pixel.c:333:36
	leaq	(%rdx,%rcx), %rsi
.Ltmp2311:
	#DEBUG_VALUE: pixel_hadamard_ac:pix <- $rsi
	.loc	0 336 15                        # x264_src/common/pixel.c:336:15
	movzbl	(%rcx,%rdx), %edi
	.loc	0 336 22 is_stmt 0              # x264_src/common/pixel.c:336:22
	movzbl	1(%rcx,%rdx), %r8d
.Ltmp2312:
	.loc	0 336 21                        # x264_src/common/pixel.c:336:21
	leal	(%r8,%rdi), %r9d
	.loc	0 336 40                        # x264_src/common/pixel.c:336:40
	subl	%r8d, %edi
	.loc	0 336 48                        # x264_src/common/pixel.c:336:48
	shll	$16, %edi
	.loc	0 336 30                        # x264_src/common/pixel.c:336:30
	orl	%r9d, %edi
.Ltmp2313:
	#DEBUG_VALUE: pixel_hadamard_ac:a0 <- $edi
	.loc	0 337 15 is_stmt 1              # x264_src/common/pixel.c:337:15
	movzbl	2(%rcx,%rdx), %r8d
	.loc	0 337 22 is_stmt 0              # x264_src/common/pixel.c:337:22
	movzbl	3(%rcx,%rdx), %r9d
	.loc	0 337 21                        # x264_src/common/pixel.c:337:21
	leal	(%r9,%r8), %r10d
	.loc	0 337 40                        # x264_src/common/pixel.c:337:40
	subl	%r9d, %r8d
	.loc	0 337 48                        # x264_src/common/pixel.c:337:48
	shll	$16, %r8d
	.loc	0 337 30                        # x264_src/common/pixel.c:337:30
	orl	%r10d, %r8d
.Ltmp2314:
	#DEBUG_VALUE: pixel_hadamard_ac:a1 <- $r8d
	.loc	0 338 19 is_stmt 1              # x264_src/common/pixel.c:338:19
	leal	(%r8,%rdi), %r9d
	.loc	0 338 14 is_stmt 0              # x264_src/common/pixel.c:338:14
	movl	%r9d, -56(%rsp)
	.loc	0 339 19 is_stmt 1              # x264_src/common/pixel.c:339:19
	subl	%r8d, %edi
.Ltmp2315:
	.loc	0 339 14 is_stmt 0              # x264_src/common/pixel.c:339:14
	movl	%edi, -40(%rsp)
	.loc	0 340 15 is_stmt 1              # x264_src/common/pixel.c:340:15
	movzbl	4(%rcx,%rdx), %edi
	.loc	0 340 22 is_stmt 0              # x264_src/common/pixel.c:340:22
	movzbl	5(%rcx,%rdx), %r8d
.Ltmp2316:
	.loc	0 340 21                        # x264_src/common/pixel.c:340:21
	leal	(%r8,%rdi), %r9d
	.loc	0 340 40                        # x264_src/common/pixel.c:340:40
	subl	%r8d, %edi
	.loc	0 340 48                        # x264_src/common/pixel.c:340:48
	shll	$16, %edi
	.loc	0 340 30                        # x264_src/common/pixel.c:340:30
	orl	%r9d, %edi
.Ltmp2317:
	#DEBUG_VALUE: pixel_hadamard_ac:a2 <- $edi
	.loc	0 341 15 is_stmt 1              # x264_src/common/pixel.c:341:15
	movzbl	6(%rcx,%rdx), %r8d
	.loc	0 341 22 is_stmt 0              # x264_src/common/pixel.c:341:22
	movzbl	7(%rcx,%rdx), %edx
	.loc	0 341 21                        # x264_src/common/pixel.c:341:21
	leal	(%rdx,%r8), %r9d
	.loc	0 341 40                        # x264_src/common/pixel.c:341:40
	subl	%edx, %r8d
	.loc	0 341 48                        # x264_src/common/pixel.c:341:48
	shll	$16, %r8d
	.loc	0 341 30                        # x264_src/common/pixel.c:341:30
	orl	%r9d, %r8d
.Ltmp2318:
	#DEBUG_VALUE: pixel_hadamard_ac:a3 <- $r8d
	.loc	0 342 19 is_stmt 1              # x264_src/common/pixel.c:342:19
	leal	(%r8,%rdi), %edx
	.loc	0 342 14 is_stmt 0              # x264_src/common/pixel.c:342:14
	movl	%edx, -24(%rsp)
	.loc	0 343 20 is_stmt 1              # x264_src/common/pixel.c:343:20
	subl	%r8d, %edi
.Ltmp2319:
	.loc	0 343 15 is_stmt 0              # x264_src/common/pixel.c:343:15
	movl	%edi, -8(%rsp)
.Ltmp2320:
	#DEBUG_VALUE: i <- 7
	#DEBUG_VALUE: pixel_hadamard_ac:pix <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rsi, $rcx
	.loc	0 336 15 is_stmt 1              # x264_src/common/pixel.c:336:15
	movzbl	(%rcx,%rsi), %edx
	.loc	0 336 22 is_stmt 0              # x264_src/common/pixel.c:336:22
	movzbl	1(%rcx,%rsi), %edi
	.loc	0 336 21                        # x264_src/common/pixel.c:336:21
	leal	(%rdi,%rdx), %r8d
.Ltmp2321:
	.loc	0 336 40                        # x264_src/common/pixel.c:336:40
	subl	%edi, %edx
	.loc	0 336 48                        # x264_src/common/pixel.c:336:48
	shll	$16, %edx
	.loc	0 336 30                        # x264_src/common/pixel.c:336:30
	orl	%r8d, %edx
.Ltmp2322:
	#DEBUG_VALUE: pixel_hadamard_ac:a0 <- $edx
	.loc	0 337 15 is_stmt 1              # x264_src/common/pixel.c:337:15
	movzbl	2(%rcx,%rsi), %edi
	.loc	0 337 22 is_stmt 0              # x264_src/common/pixel.c:337:22
	movzbl	3(%rcx,%rsi), %r8d
	.loc	0 337 21                        # x264_src/common/pixel.c:337:21
	leal	(%r8,%rdi), %r9d
	.loc	0 337 40                        # x264_src/common/pixel.c:337:40
	subl	%r8d, %edi
	.loc	0 337 48                        # x264_src/common/pixel.c:337:48
	shll	$16, %edi
	.loc	0 337 30                        # x264_src/common/pixel.c:337:30
	orl	%r9d, %edi
.Ltmp2323:
	#DEBUG_VALUE: pixel_hadamard_ac:a1 <- $edi
	.loc	0 338 19 is_stmt 1              # x264_src/common/pixel.c:338:19
	leal	(%rdi,%rdx), %r8d
	.loc	0 338 14 is_stmt 0              # x264_src/common/pixel.c:338:14
	movl	%r8d, -52(%rsp)
	.loc	0 339 19 is_stmt 1              # x264_src/common/pixel.c:339:19
	subl	%edi, %edx
.Ltmp2324:
	.loc	0 339 14 is_stmt 0              # x264_src/common/pixel.c:339:14
	movl	%edx, -36(%rsp)
	.loc	0 340 15 is_stmt 1              # x264_src/common/pixel.c:340:15
	movzbl	4(%rcx,%rsi), %edx
	.loc	0 340 22 is_stmt 0              # x264_src/common/pixel.c:340:22
	movzbl	5(%rcx,%rsi), %edi
.Ltmp2325:
	.loc	0 340 21                        # x264_src/common/pixel.c:340:21
	leal	(%rdi,%rdx), %r8d
	.loc	0 340 40                        # x264_src/common/pixel.c:340:40
	subl	%edi, %edx
	.loc	0 340 48                        # x264_src/common/pixel.c:340:48
	shll	$16, %edx
	.loc	0 340 30                        # x264_src/common/pixel.c:340:30
	orl	%r8d, %edx
.Ltmp2326:
	#DEBUG_VALUE: pixel_hadamard_ac:a2 <- $edx
	.loc	0 341 15 is_stmt 1              # x264_src/common/pixel.c:341:15
	movzbl	6(%rcx,%rsi), %edi
	.loc	0 341 22 is_stmt 0              # x264_src/common/pixel.c:341:22
	movzbl	7(%rcx,%rsi), %ecx
.Ltmp2327:
	.loc	0 341 21                        # x264_src/common/pixel.c:341:21
	leal	(%rcx,%rdi), %esi
	.loc	0 341 40                        # x264_src/common/pixel.c:341:40
	subl	%ecx, %edi
	.loc	0 341 48                        # x264_src/common/pixel.c:341:48
	shll	$16, %edi
	.loc	0 341 30                        # x264_src/common/pixel.c:341:30
	orl	%esi, %edi
.Ltmp2328:
	#DEBUG_VALUE: pixel_hadamard_ac:a3 <- $edi
	.loc	0 342 19 is_stmt 1              # x264_src/common/pixel.c:342:19
	leal	(%rdi,%rdx), %ecx
	.loc	0 342 14 is_stmt 0              # x264_src/common/pixel.c:342:14
	movl	%ecx, -20(%rsp)
	.loc	0 343 20 is_stmt 1              # x264_src/common/pixel.c:343:20
	subl	%edi, %edx
.Ltmp2329:
	.loc	0 343 15 is_stmt 0              # x264_src/common/pixel.c:343:15
	movl	%edx, -4(%rsp)
.Ltmp2330:
	#DEBUG_VALUE: i <- 8
	#DEBUG_VALUE: pixel_hadamard_ac:pix <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	.loc	0 0 15                          # x264_src/common/pixel.c:0:15
	pxor	%xmm6, %xmm6
	xorl	%ecx, %ecx
	jmp	.LBB66_1
.Ltmp2331:
	.p2align	4, 0x90
.LBB66_41:                              # %pred.store.continue370
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movdqa	%xmm8, %xmm0
	psrld	$15, %xmm0
.Ltmp2332:
	.loc	0 201 21 is_stmt 0              # x264_src/common/pixel.c:201:21
	movdqa	%xmm6, %xmm1
	psrld	$15, %xmm1
.Ltmp2333:
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movdqa	%xmm7, %xmm2
	psrld	$15, %xmm2
.Ltmp2334:
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movdqa	%xmm5, %xmm9
	psrld	$15, %xmm9
	movdqa	.LCPI66_2(%rip), %xmm4          # xmm4 = [65537,65537,65537,65537]
.Ltmp2335:
	.loc	0 201 26                        # x264_src/common/pixel.c:201:26
	pand	%xmm4, %xmm0
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movdqa	%xmm0, %xmm3
	pslld	$16, %xmm3
	psubd	%xmm0, %xmm3
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	paddd	%xmm3, %xmm8
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	pxor	%xmm3, %xmm8
.Ltmp2336:
	.loc	0 201 26 is_stmt 1              # x264_src/common/pixel.c:201:26
	pand	%xmm4, %xmm1
	.loc	0 201 35 is_stmt 0              # x264_src/common/pixel.c:201:35
	movdqa	%xmm1, %xmm0
	pslld	$16, %xmm0
	psubd	%xmm1, %xmm0
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	paddd	%xmm0, %xmm6
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	pxor	%xmm0, %xmm6
.Ltmp2337:
	.loc	0 201 26 is_stmt 1              # x264_src/common/pixel.c:201:26
	pand	%xmm4, %xmm2
	.loc	0 201 35 is_stmt 0              # x264_src/common/pixel.c:201:35
	movdqa	%xmm2, %xmm0
	pslld	$16, %xmm0
	psubd	%xmm2, %xmm0
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	paddd	%xmm0, %xmm7
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	pxor	%xmm0, %xmm7
.Ltmp2338:
	.loc	0 352 37 is_stmt 1              # x264_src/common/pixel.c:352:37
	paddd	%xmm8, %xmm7
.Ltmp2339:
	.loc	0 201 26                        # x264_src/common/pixel.c:201:26
	pand	%xmm4, %xmm9
	.loc	0 201 35 is_stmt 0              # x264_src/common/pixel.c:201:35
	movdqa	%xmm9, %xmm0
	pslld	$16, %xmm0
	psubd	%xmm9, %xmm0
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	paddd	%xmm0, %xmm5
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	pxor	%xmm0, %xmm5
	movdqa	32(%rsp), %xmm2                 # 16-byte Reload
.Ltmp2340:
	.loc	0 352 26 is_stmt 1              # x264_src/common/pixel.c:352:26
	paddd	%xmm2, %xmm6
	.loc	0 352 48 is_stmt 0              # x264_src/common/pixel.c:352:48
	paddd	%xmm7, %xmm6
	.loc	0 352 14                        # x264_src/common/pixel.c:352:14
	paddd	%xmm5, %xmm6
.Ltmp2341:
	.loc	0 345 29 is_stmt 1              # x264_src/common/pixel.c:345:29
	addq	$4, %rcx
	addq	$64, %rax
	cmpq	$8, %rcx
	je	.LBB66_42
.Ltmp2342:
.LBB66_1:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	.loc	0 0 29 is_stmt 0                # x264_src/common/pixel.c:0:29
	movdqa	%xmm6, %xmm0
	movq	%rcx, %xmm5
	movdqa	%xmm5, 16(%rsp)                 # 16-byte Spill
	movdqa	.LCPI66_0(%rip), %xmm1          # xmm1 = [9223372039002259456,9223372039002259456]
	pxor	%xmm1, %xmm5
	movdqa	.LCPI66_1(%rip), %xmm6          # xmm6 = [9223372039002259464,9223372039002259464]
	pcmpgtd	%xmm5, %xmm6
	pshufd	$245, %xmm5, %xmm5              # xmm5 = xmm5[1,1,3,3]
	pcmpeqd	%xmm1, %xmm5
	pand	%xmm6, %xmm5
	.loc	0 345 5                         # x264_src/common/pixel.c:345:5
	movd	%xmm5, %edx
                                        # implicit-def: $esi
                                        # kill: killed $esi
	testb	$1, %dl
	jne	.LBB66_2
.Ltmp2343:
# %bb.3:                                # %pred.load.continue
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
                                        # implicit-def: $esi
                                        # kill: killed $esi
	.loc	0 347 9 is_stmt 1               # x264_src/common/pixel.c:347:9
	testb	$1, %dl
	jne	.LBB66_4
.Ltmp2344:
.LBB66_5:                               # %pred.load.continue336
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
                                        # implicit-def: $esi
                                        # kill: killed $esi
	testb	$1, %dl
	jne	.LBB66_6
.Ltmp2345:
.LBB66_7:                               # %pred.load.continue338
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
                                        # implicit-def: $esi
                                        # kill: killed $esi
	testb	$1, %dl
	jne	.LBB66_8
.Ltmp2346:
.LBB66_9:                               # %pred.load.continue340
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
                                        # implicit-def: $r10d
	testb	$1, %dl
	jne	.LBB66_10
.Ltmp2347:
.LBB66_11:                              # %pred.load.continue342
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
                                        # implicit-def: $ebx
	testb	$1, %dl
	jne	.LBB66_12
.Ltmp2348:
.LBB66_13:                              # %pred.load.continue344
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
                                        # implicit-def: $r14d
	testb	$1, %dl
	jne	.LBB66_14
.Ltmp2349:
.LBB66_15:                              # %pred.load.continue346
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
                                        # implicit-def: $r12d
	testb	$1, %dl
	jne	.LBB66_16
.Ltmp2350:
.LBB66_17:                              # %pred.load.continue348
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
                                        # implicit-def: $r11d
	testb	$1, %dl
	jne	.LBB66_18
.Ltmp2351:
.LBB66_19:                              # %pred.load.continue350
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
                                        # implicit-def: $ebp
	testb	$1, %dl
	jne	.LBB66_20
.Ltmp2352:
.LBB66_21:                              # %pred.load.continue352
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
                                        # implicit-def: $r15d
	testb	$1, %dl
	jne	.LBB66_22
.Ltmp2353:
.LBB66_23:                              # %pred.load.continue354
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
                                        # implicit-def: $r13d
	testb	$1, %dl
	jne	.LBB66_24
.Ltmp2354:
.LBB66_25:                              # %pred.load.continue356
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
                                        # implicit-def: $esi
	testb	$1, %dl
	jne	.LBB66_26
.Ltmp2355:
.LBB66_27:                              # %pred.load.continue358
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
                                        # implicit-def: $edi
	testb	$1, %dl
	jne	.LBB66_28
.Ltmp2356:
.LBB66_29:                              # %pred.load.continue360
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
                                        # implicit-def: $r8d
	testb	$1, %dl
	jne	.LBB66_30
.Ltmp2357:
.LBB66_31:                              # %pred.load.continue362
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	.loc	0 0 9 is_stmt 0                 # x264_src/common/pixel.c:0:9
	movdqa	%xmm0, 32(%rsp)                 # 16-byte Spill
                                        # implicit-def: $r9d
	.loc	0 347 9                         # x264_src/common/pixel.c:347:9
	testb	$1, %dl
	je	.LBB66_33
.Ltmp2358:
.LBB66_32:                              # %pred.load.if363
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	movl	(%rax), %r9d
.Ltmp2359:
.LBB66_33:                              # %pred.load.continue364
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	movd	%r12d, %xmm8
	movd	%r14d, %xmm7
	movd	%r10d, %xmm9
	movd	%ebx, %xmm6
	movd	(%rsp), %xmm11                  # 4-byte Folded Reload
                                        # xmm11 = mem[0],zero,zero,zero
	movd	4(%rsp), %xmm10                 # 4-byte Folded Reload
                                        # xmm10 = mem[0],zero,zero,zero
	movd	12(%rsp), %xmm12                # 4-byte Folded Reload
                                        # xmm12 = mem[0],zero,zero,zero
	movd	8(%rsp), %xmm5                  # 4-byte Folded Reload
                                        # xmm5 = mem[0],zero,zero,zero
	movd	%r9d, %xmm13
	movd	%r8d, %xmm14
	movd	%esi, %xmm15
	movd	%edi, %xmm2
	movd	%r13d, %xmm1
	movd	%r15d, %xmm0
	movd	%r11d, %xmm3
	movd	%ebp, %xmm4
	punpckldq	%xmm8, %xmm7            # xmm7 = xmm7[0],xmm8[0],xmm7[1],xmm8[1]
	punpckldq	%xmm9, %xmm6            # xmm6 = xmm6[0],xmm9[0],xmm6[1],xmm9[1]
	punpcklqdq	%xmm7, %xmm6            # xmm6 = xmm6[0],xmm7[0]
	punpckldq	%xmm11, %xmm10          # xmm10 = xmm10[0],xmm11[0],xmm10[1],xmm11[1]
	punpckldq	%xmm12, %xmm5           # xmm5 = xmm5[0],xmm12[0],xmm5[1],xmm12[1]
	punpcklqdq	%xmm10, %xmm5           # xmm5 = xmm5[0],xmm10[0]
	movdqa	%xmm6, %xmm7
	paddd	%xmm5, %xmm7
	psubd	%xmm6, %xmm5
	punpckldq	%xmm13, %xmm14          # xmm14 = xmm14[0],xmm13[0],xmm14[1],xmm13[1]
	punpckldq	%xmm15, %xmm2           # xmm2 = xmm2[0],xmm15[0],xmm2[1],xmm15[1]
	punpcklqdq	%xmm14, %xmm2           # xmm2 = xmm2[0],xmm14[0]
	punpckldq	%xmm1, %xmm0            # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1]
	punpckldq	%xmm3, %xmm4            # xmm4 = xmm4[0],xmm3[0],xmm4[1],xmm3[1]
	punpcklqdq	%xmm0, %xmm4            # xmm4 = xmm4[0],xmm0[0]
	movdqa	%xmm2, %xmm0
	paddd	%xmm4, %xmm0
	psubd	%xmm2, %xmm4
	movdqa	%xmm0, %xmm8
	paddd	%xmm7, %xmm8
	psubd	%xmm0, %xmm7
	movdqa	%xmm4, %xmm6
	paddd	%xmm5, %xmm6
	psubd	%xmm4, %xmm5
	movdqa	%xmm8, %xmm9
	punpckldq	%xmm6, %xmm9            # xmm9 = xmm9[0],xmm6[0],xmm9[1],xmm6[1]
	movdqa	%xmm7, %xmm10
	punpckldq	%xmm5, %xmm10           # xmm10 = xmm10[0],xmm5[0],xmm10[1],xmm5[1]
	testb	$1, %dl
	je	.LBB66_35
.Ltmp2360:
# %bb.34:                               # %pred.store.if
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	.loc	0 348 20 is_stmt 1              # x264_src/common/pixel.c:348:20
	movdqa	%xmm9, %xmm0
	punpckhqdq	%xmm10, %xmm0           # xmm0 = xmm0[1],xmm10[1]
	movdqa	%xmm0, -60(%rax)
.Ltmp2361:
.LBB66_35:                              # %pred.store.continue
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	.loc	0 351 20                        # x264_src/common/pixel.c:351:20
	testb	$1, %dl
	je	.LBB66_37
.Ltmp2362:
# %bb.36:                               # %pred.store.if365
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	.loc	0 348 20                        # x264_src/common/pixel.c:348:20
	punpcklqdq	%xmm10, %xmm9           # xmm9 = xmm9[0],xmm10[0]
	movdqa	%xmm9, -44(%rax)
.Ltmp2363:
.LBB66_37:                              # %pred.store.continue366
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	.loc	0 0 20 is_stmt 0                # x264_src/common/pixel.c:0:20
	movdqa	%xmm8, %xmm9
	punpckhdq	%xmm6, %xmm9            # xmm9 = xmm9[2],xmm6[2],xmm9[3],xmm6[3]
	movdqa	%xmm7, %xmm10
	punpckhdq	%xmm5, %xmm10           # xmm10 = xmm10[2],xmm5[2],xmm10[3],xmm5[3]
	.loc	0 351 20 is_stmt 1              # x264_src/common/pixel.c:351:20
	testb	$1, %dl
	je	.LBB66_39
.Ltmp2364:
# %bb.38:                               # %pred.store.if367
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	.loc	0 348 20                        # x264_src/common/pixel.c:348:20
	movdqa	%xmm9, %xmm0
	punpcklqdq	%xmm10, %xmm0           # xmm0 = xmm0[0],xmm10[0]
	movdqa	%xmm0, -28(%rax)
.Ltmp2365:
.LBB66_39:                              # %pred.store.continue368
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	.loc	0 351 20                        # x264_src/common/pixel.c:351:20
	testb	$1, %dl
	je	.LBB66_41
.Ltmp2366:
# %bb.40:                               # %pred.store.if369
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	.loc	0 348 20                        # x264_src/common/pixel.c:348:20
	punpckhqdq	%xmm10, %xmm9           # xmm9 = xmm9[1],xmm10[1]
	movdqa	%xmm9, -12(%rax)
	jmp	.LBB66_41
.Ltmp2367:
	.p2align	4, 0x90
.LBB66_2:                               # %pred.load.if
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	.loc	0 347 9                         # x264_src/common/pixel.c:347:9
	movl	-60(%rax), %esi
	movl	%esi, 12(%rsp)                  # 4-byte Spill
                                        # implicit-def: $esi
                                        # kill: killed $esi
	testb	$1, %dl
	je	.LBB66_5
.Ltmp2368:
.LBB66_4:                               # %pred.load.if335
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	movl	-44(%rax), %esi
	movl	%esi, 8(%rsp)                   # 4-byte Spill
                                        # implicit-def: $esi
                                        # kill: killed $esi
	testb	$1, %dl
	je	.LBB66_7
.Ltmp2369:
.LBB66_6:                               # %pred.load.if337
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	movl	-28(%rax), %esi
	movl	%esi, 4(%rsp)                   # 4-byte Spill
                                        # implicit-def: $esi
                                        # kill: killed $esi
	testb	$1, %dl
	je	.LBB66_9
.Ltmp2370:
.LBB66_8:                               # %pred.load.if339
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	movl	-12(%rax), %esi
	movl	%esi, (%rsp)                    # 4-byte Spill
                                        # implicit-def: $r10d
	testb	$1, %dl
	je	.LBB66_11
.Ltmp2371:
.LBB66_10:                              # %pred.load.if341
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	movl	-56(%rax), %r10d
                                        # implicit-def: $ebx
	testb	$1, %dl
	je	.LBB66_13
.Ltmp2372:
.LBB66_12:                              # %pred.load.if343
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	movl	-40(%rax), %ebx
                                        # implicit-def: $r14d
	testb	$1, %dl
	je	.LBB66_15
.Ltmp2373:
.LBB66_14:                              # %pred.load.if345
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	movl	-24(%rax), %r14d
                                        # implicit-def: $r12d
	testb	$1, %dl
	je	.LBB66_17
.Ltmp2374:
.LBB66_16:                              # %pred.load.if347
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	movl	-8(%rax), %r12d
                                        # implicit-def: $r11d
	testb	$1, %dl
	je	.LBB66_19
.Ltmp2375:
.LBB66_18:                              # %pred.load.if349
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	movl	-52(%rax), %r11d
                                        # implicit-def: $ebp
	testb	$1, %dl
	je	.LBB66_21
.Ltmp2376:
.LBB66_20:                              # %pred.load.if351
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	movl	-36(%rax), %ebp
                                        # implicit-def: $r15d
	testb	$1, %dl
	je	.LBB66_23
.Ltmp2377:
.LBB66_22:                              # %pred.load.if353
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	movl	-20(%rax), %r15d
                                        # implicit-def: $r13d
	testb	$1, %dl
	je	.LBB66_25
.Ltmp2378:
.LBB66_24:                              # %pred.load.if355
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	movl	-4(%rax), %r13d
                                        # implicit-def: $esi
	testb	$1, %dl
	je	.LBB66_27
.Ltmp2379:
.LBB66_26:                              # %pred.load.if357
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	movl	-48(%rax), %esi
                                        # implicit-def: $edi
	testb	$1, %dl
	je	.LBB66_29
.Ltmp2380:
.LBB66_28:                              # %pred.load.if359
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	movl	-32(%rax), %edi
                                        # implicit-def: $r8d
	testb	$1, %dl
	je	.LBB66_31
.Ltmp2381:
.LBB66_30:                              # %pred.load.if361
                                        #   in Loop: Header=BB66_1 Depth=1
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	movl	-16(%rax), %r8d
	movdqa	%xmm0, 32(%rsp)                 # 16-byte Spill
                                        # implicit-def: $r9d
	testb	$1, %dl
	jne	.LBB66_32
	jmp	.LBB66_33
.Ltmp2382:
.LBB66_42:                              # %middle.block
	#DEBUG_VALUE: pixel_hadamard_ac:stride <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	.loc	0 0 9 is_stmt 0                 # x264_src/common/pixel.c:0:9
	movdqa	16(%rsp), %xmm1                 # 16-byte Reload
	pxor	.LCPI66_0(%rip), %xmm1
	pshufd	$85, %xmm1, %xmm0               # xmm0 = xmm1[1,1,1,1]
	pcmpeqd	.LCPI66_0(%rip), %xmm0
	pshufd	$0, %xmm1, %xmm1                # xmm1 = xmm1[0,0,0,0]
	pcmpgtd	.LCPI66_3(%rip), %xmm1
	pandn	%xmm0, %xmm1
	pand	%xmm1, %xmm6
	pandn	%xmm2, %xmm1
	por	%xmm6, %xmm1
	.loc	0 345 5 is_stmt 1               # x264_src/common/pixel.c:345:5
	pshufd	$238, %xmm1, %xmm0              # xmm0 = xmm1[2,3,2,3]
	paddd	%xmm1, %xmm0
	pshufd	$85, %xmm0, %xmm1               # xmm1 = xmm0[1,1,1,1]
	paddd	%xmm0, %xmm1
	movd	%xmm1, %eax
.Ltmp2383:
	.loc	0 356 9                         # x264_src/common/pixel.c:356:9
	movl	-96(%rsp), %ecx
.Ltmp2384:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- 0
	movl	-128(%rsp), %esi
.Ltmp2385:
	#DEBUG_VALUE: i <- 1
	movl	-124(%rsp), %edx
	leal	(%rcx,%rsi), %edi
.Ltmp2386:
	#DEBUG_VALUE: t0 <- $edi
	subl	%ecx, %esi
.Ltmp2387:
	#DEBUG_VALUE: t1 <- $esi
	movl	-64(%rsp), %r9d
	movl	-32(%rsp), %ecx
	leal	(%rcx,%r9), %r8d
.Ltmp2388:
	#DEBUG_VALUE: t2 <- $r8d
	subl	%ecx, %r9d
.Ltmp2389:
	#DEBUG_VALUE: t3 <- $r9d
	leal	(%r8,%rdi), %ecx
.Ltmp2390:
	#DEBUG_VALUE: pixel_hadamard_ac:a0 <- $ecx
	subl	%r8d, %edi
.Ltmp2391:
	#DEBUG_VALUE: pixel_hadamard_ac:a2 <- $edi
	leal	(%r9,%rsi), %r8d
.Ltmp2392:
	#DEBUG_VALUE: pixel_hadamard_ac:a1 <- $r8d
	subl	%r9d, %esi
.Ltmp2393:
	#DEBUG_VALUE: pixel_hadamard_ac:a3 <- $esi
	#DEBUG_VALUE: abs2:a <- $ecx
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%ecx, %r9d
.Ltmp2394:
	shrl	$15, %r9d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r9d                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r9d, %r10d
	shll	$16, %r10d
	subl	%r9d, %r10d
.Ltmp2395:
	#DEBUG_VALUE: abs2:s <- $r10d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	leal	(%r10,%rcx), %r9d
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r10d, %r9d
.Ltmp2396:
	#DEBUG_VALUE: abs2:a <- $r8d
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%r8d, %r10d
.Ltmp2397:
	shrl	$15, %r10d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r10d                   # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r10d, %r11d
	shll	$16, %r11d
	subl	%r10d, %r11d
.Ltmp2398:
	#DEBUG_VALUE: abs2:s <- $r11d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r11d, %r8d
.Ltmp2399:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r11d, %r8d
.Ltmp2400:
	#DEBUG_VALUE: abs2:a <- $edi
	.loc	0 357 37 is_stmt 1              # x264_src/common/pixel.c:357:37
	addl	%r9d, %r8d
.Ltmp2401:
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%edi, %r9d
	shrl	$15, %r9d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r9d                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r9d, %r10d
	shll	$16, %r10d
	subl	%r9d, %r10d
.Ltmp2402:
	#DEBUG_VALUE: abs2:s <- $r10d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r10d, %edi
.Ltmp2403:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r10d, %edi
.Ltmp2404:
	#DEBUG_VALUE: abs2:a <- $esi
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%esi, %r9d
	shrl	$15, %r9d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r9d                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r9d, %r10d
.Ltmp2405:
	shll	$16, %r10d
	subl	%r9d, %r10d
.Ltmp2406:
	#DEBUG_VALUE: abs2:s <- $r10d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r10d, %esi
.Ltmp2407:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r10d, %esi
.Ltmp2408:
	.loc	0 357 48 is_stmt 1              # x264_src/common/pixel.c:357:48
	addl	%edi, %esi
	.loc	0 357 14 is_stmt 0              # x264_src/common/pixel.c:357:14
	addl	%r8d, %esi
.Ltmp2409:
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- $esi
	.loc	0 356 9 is_stmt 1               # x264_src/common/pixel.c:356:9
	movl	-92(%rsp), %r8d
	leal	(%r8,%rdx), %edi
.Ltmp2410:
	#DEBUG_VALUE: t0 <- $edi
	subl	%r8d, %edx
.Ltmp2411:
	#DEBUG_VALUE: t1 <- $edx
	movl	-60(%rsp), %r10d
.Ltmp2412:
	movl	-28(%rsp), %r8d
	leal	(%r8,%r10), %r11d
.Ltmp2413:
	#DEBUG_VALUE: t2 <- $r11d
	subl	%r8d, %r10d
.Ltmp2414:
	#DEBUG_VALUE: t3 <- $r10d
	leal	(%r11,%rdi), %r9d
.Ltmp2415:
	#DEBUG_VALUE: pixel_hadamard_ac:a0 <- $r9d
	subl	%r11d, %edi
.Ltmp2416:
	#DEBUG_VALUE: pixel_hadamard_ac:a2 <- $edi
	leal	(%r10,%rdx), %r8d
.Ltmp2417:
	#DEBUG_VALUE: pixel_hadamard_ac:a1 <- $r8d
	subl	%r10d, %edx
.Ltmp2418:
	#DEBUG_VALUE: pixel_hadamard_ac:a3 <- $edx
	#DEBUG_VALUE: abs2:a <- $r9d
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%r9d, %r10d
.Ltmp2419:
	shrl	$15, %r10d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r10d                   # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r10d, %r11d
.Ltmp2420:
	shll	$16, %r11d
	subl	%r10d, %r11d
.Ltmp2421:
	#DEBUG_VALUE: abs2:s <- $r11d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r11d, %r9d
.Ltmp2422:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r11d, %r9d
.Ltmp2423:
	#DEBUG_VALUE: abs2:a <- $r8d
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%r8d, %r10d
	shrl	$15, %r10d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r10d                   # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r10d, %r11d
.Ltmp2424:
	shll	$16, %r11d
	subl	%r10d, %r11d
.Ltmp2425:
	#DEBUG_VALUE: abs2:s <- $r11d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r11d, %r8d
.Ltmp2426:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r11d, %r8d
.Ltmp2427:
	#DEBUG_VALUE: abs2:a <- $edi
	.loc	0 357 26 is_stmt 1              # x264_src/common/pixel.c:357:26
	addl	%r9d, %r8d
.Ltmp2428:
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%edi, %r9d
	shrl	$15, %r9d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r9d                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r9d, %r10d
	shll	$16, %r10d
	subl	%r9d, %r10d
.Ltmp2429:
	#DEBUG_VALUE: abs2:s <- $r10d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r10d, %edi
.Ltmp2430:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r10d, %edi
.Ltmp2431:
	#DEBUG_VALUE: abs2:a <- $edx
	.loc	0 357 37 is_stmt 1              # x264_src/common/pixel.c:357:37
	addl	%r8d, %edi
	.loc	0 357 48 is_stmt 0              # x264_src/common/pixel.c:357:48
	addl	%esi, %edi
.Ltmp2432:
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%edx, %esi
.Ltmp2433:
	shrl	$15, %esi
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %esi                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%esi, %r8d
	shll	$16, %r8d
	subl	%esi, %r8d
.Ltmp2434:
	#DEBUG_VALUE: abs2:s <- $r8d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r8d, %edx
.Ltmp2435:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r8d, %edx
.Ltmp2436:
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- undef
	#DEBUG_VALUE: i <- 2
	.loc	0 356 9 is_stmt 1               # x264_src/common/pixel.c:356:9
	movl	-120(%rsp), %r8d
.Ltmp2437:
	movl	-88(%rsp), %r9d
	leal	(%r9,%r8), %esi
.Ltmp2438:
	#DEBUG_VALUE: t0 <- $esi
	subl	%r9d, %r8d
.Ltmp2439:
	#DEBUG_VALUE: t1 <- $r8d
	movl	-56(%rsp), %r11d
.Ltmp2440:
	movl	-24(%rsp), %r9d
	leal	(%r9,%r11), %ebx
.Ltmp2441:
	#DEBUG_VALUE: t2 <- $ebx
	subl	%r9d, %r11d
.Ltmp2442:
	#DEBUG_VALUE: t3 <- $r11d
	leal	(%rbx,%rsi), %r10d
.Ltmp2443:
	#DEBUG_VALUE: pixel_hadamard_ac:a0 <- $r10d
	subl	%ebx, %esi
.Ltmp2444:
	#DEBUG_VALUE: pixel_hadamard_ac:a2 <- $esi
	leal	(%r11,%r8), %r9d
.Ltmp2445:
	#DEBUG_VALUE: pixel_hadamard_ac:a1 <- $r9d
	subl	%r11d, %r8d
.Ltmp2446:
	#DEBUG_VALUE: pixel_hadamard_ac:a3 <- $r8d
	#DEBUG_VALUE: abs2:a <- $r10d
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%r10d, %r11d
.Ltmp2447:
	shrl	$15, %r11d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r11d                   # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r11d, %ebx
.Ltmp2448:
	shll	$16, %ebx
	subl	%r11d, %ebx
.Ltmp2449:
	#DEBUG_VALUE: abs2:s <- $ebx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%ebx, %r10d
.Ltmp2450:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%ebx, %r10d
.Ltmp2451:
	#DEBUG_VALUE: abs2:a <- $r9d
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%r9d, %r11d
	shrl	$15, %r11d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r11d                   # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r11d, %ebx
.Ltmp2452:
	shll	$16, %ebx
	subl	%r11d, %ebx
.Ltmp2453:
	#DEBUG_VALUE: abs2:s <- $ebx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%ebx, %r9d
.Ltmp2454:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%ebx, %r9d
.Ltmp2455:
	#DEBUG_VALUE: abs2:a <- $esi
	.loc	0 357 14 is_stmt 1              # x264_src/common/pixel.c:357:14
	addl	%edx, %r9d
	.loc	0 357 26 is_stmt 0              # x264_src/common/pixel.c:357:26
	addl	%r10d, %r9d
.Ltmp2456:
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%esi, %edx
	shrl	$15, %edx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %edx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%edx, %r10d
	shll	$16, %r10d
	subl	%edx, %r10d
.Ltmp2457:
	#DEBUG_VALUE: abs2:s <- $r10d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r10d, %esi
.Ltmp2458:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r10d, %esi
.Ltmp2459:
	#DEBUG_VALUE: abs2:a <- $r8d
	.loc	0 357 37 is_stmt 1              # x264_src/common/pixel.c:357:37
	addl	%r9d, %esi
	.loc	0 357 48 is_stmt 0              # x264_src/common/pixel.c:357:48
	addl	%edi, %esi
.Ltmp2460:
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%r8d, %edx
	shrl	$15, %edx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %edx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%edx, %edi
	shll	$16, %edi
	subl	%edx, %edi
.Ltmp2461:
	#DEBUG_VALUE: abs2:s <- $edi
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%edi, %r8d
.Ltmp2462:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%edi, %r8d
.Ltmp2463:
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- undef
	#DEBUG_VALUE: i <- 3
	.loc	0 356 9 is_stmt 1               # x264_src/common/pixel.c:356:9
	movl	-116(%rsp), %edx
	movl	-84(%rsp), %r9d
	leal	(%r9,%rdx), %edi
.Ltmp2464:
	#DEBUG_VALUE: t0 <- $edi
	subl	%r9d, %edx
.Ltmp2465:
	#DEBUG_VALUE: t1 <- $edx
	movl	-52(%rsp), %r11d
	movl	-20(%rsp), %r9d
	leal	(%r9,%r11), %ebx
.Ltmp2466:
	#DEBUG_VALUE: t2 <- $ebx
	subl	%r9d, %r11d
.Ltmp2467:
	#DEBUG_VALUE: t3 <- $r11d
	leal	(%rbx,%rdi), %r10d
.Ltmp2468:
	#DEBUG_VALUE: pixel_hadamard_ac:a0 <- $r10d
	subl	%ebx, %edi
.Ltmp2469:
	#DEBUG_VALUE: pixel_hadamard_ac:a2 <- $edi
	leal	(%r11,%rdx), %r9d
.Ltmp2470:
	#DEBUG_VALUE: pixel_hadamard_ac:a1 <- $r9d
	subl	%r11d, %edx
.Ltmp2471:
	#DEBUG_VALUE: pixel_hadamard_ac:a3 <- $edx
	#DEBUG_VALUE: abs2:a <- $r10d
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%r10d, %r11d
.Ltmp2472:
	shrl	$15, %r11d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r11d                   # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r11d, %ebx
.Ltmp2473:
	shll	$16, %ebx
	subl	%r11d, %ebx
.Ltmp2474:
	#DEBUG_VALUE: abs2:s <- $ebx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%ebx, %r10d
.Ltmp2475:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%ebx, %r10d
.Ltmp2476:
	#DEBUG_VALUE: abs2:a <- $r9d
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%r9d, %r11d
	shrl	$15, %r11d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r11d                   # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r11d, %ebx
.Ltmp2477:
	shll	$16, %ebx
	subl	%r11d, %ebx
.Ltmp2478:
	#DEBUG_VALUE: abs2:s <- $ebx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%ebx, %r9d
.Ltmp2479:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%ebx, %r9d
.Ltmp2480:
	#DEBUG_VALUE: abs2:a <- $edi
	.loc	0 357 14 is_stmt 1              # x264_src/common/pixel.c:357:14
	addl	%r8d, %r9d
	.loc	0 357 26 is_stmt 0              # x264_src/common/pixel.c:357:26
	addl	%r10d, %r9d
.Ltmp2481:
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%edi, %r8d
	shrl	$15, %r8d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r8d                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r8d, %r10d
	shll	$16, %r10d
	subl	%r8d, %r10d
.Ltmp2482:
	#DEBUG_VALUE: abs2:s <- $r10d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r10d, %edi
.Ltmp2483:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r10d, %edi
.Ltmp2484:
	#DEBUG_VALUE: abs2:a <- $edx
	.loc	0 357 37 is_stmt 1              # x264_src/common/pixel.c:357:37
	addl	%r9d, %edi
.Ltmp2485:
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%edx, %r8d
	shrl	$15, %r8d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r8d                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r8d, %r9d
	shll	$16, %r9d
	subl	%r8d, %r9d
.Ltmp2486:
	#DEBUG_VALUE: abs2:s <- $r9d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r9d, %edx
.Ltmp2487:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r9d, %edx
.Ltmp2488:
	.loc	0 357 48 is_stmt 1              # x264_src/common/pixel.c:357:48
	addl	%edi, %edx
	.loc	0 357 14 is_stmt 0              # x264_src/common/pixel.c:357:14
	addl	%esi, %edx
.Ltmp2489:
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- $edx
	#DEBUG_VALUE: i <- 4
	.loc	0 356 9 is_stmt 1               # x264_src/common/pixel.c:356:9
	movl	-112(%rsp), %r8d
	movl	-80(%rsp), %edi
	leal	(%rdi,%r8), %esi
.Ltmp2490:
	#DEBUG_VALUE: t0 <- $esi
	subl	%edi, %r8d
.Ltmp2491:
	#DEBUG_VALUE: t1 <- $r8d
	movl	-48(%rsp), %r10d
.Ltmp2492:
	movl	-16(%rsp), %edi
	leal	(%rdi,%r10), %r11d
.Ltmp2493:
	#DEBUG_VALUE: t2 <- $r11d
	subl	%edi, %r10d
.Ltmp2494:
	#DEBUG_VALUE: t3 <- $r10d
	leal	(%r11,%rsi), %r9d
.Ltmp2495:
	#DEBUG_VALUE: pixel_hadamard_ac:a0 <- $r9d
	subl	%r11d, %esi
.Ltmp2496:
	#DEBUG_VALUE: pixel_hadamard_ac:a2 <- $esi
	leal	(%r10,%r8), %edi
.Ltmp2497:
	#DEBUG_VALUE: pixel_hadamard_ac:a1 <- $edi
	subl	%r10d, %r8d
.Ltmp2498:
	#DEBUG_VALUE: pixel_hadamard_ac:a3 <- $r8d
	#DEBUG_VALUE: abs2:a <- $r9d
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%r9d, %r10d
.Ltmp2499:
	shrl	$15, %r10d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r10d                   # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r10d, %r11d
.Ltmp2500:
	shll	$16, %r11d
	subl	%r10d, %r11d
.Ltmp2501:
	#DEBUG_VALUE: abs2:s <- $r11d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r11d, %r9d
.Ltmp2502:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r11d, %r9d
.Ltmp2503:
	#DEBUG_VALUE: abs2:a <- $edi
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%edi, %r10d
	shrl	$15, %r10d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r10d                   # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r10d, %r11d
.Ltmp2504:
	shll	$16, %r11d
	subl	%r10d, %r11d
.Ltmp2505:
	#DEBUG_VALUE: abs2:s <- $r11d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r11d, %edi
.Ltmp2506:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r11d, %edi
.Ltmp2507:
	#DEBUG_VALUE: abs2:a <- $esi
	.loc	0 357 26 is_stmt 1              # x264_src/common/pixel.c:357:26
	addl	%r9d, %edi
.Ltmp2508:
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%esi, %r9d
	shrl	$15, %r9d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r9d                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r9d, %r10d
	shll	$16, %r10d
	subl	%r9d, %r10d
.Ltmp2509:
	#DEBUG_VALUE: abs2:s <- $r10d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r10d, %esi
.Ltmp2510:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r10d, %esi
.Ltmp2511:
	#DEBUG_VALUE: abs2:a <- $r8d
	.loc	0 357 37 is_stmt 1              # x264_src/common/pixel.c:357:37
	addl	%edi, %esi
.Ltmp2512:
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%r8d, %edi
	shrl	$15, %edi
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %edi                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%edi, %r9d
	shll	$16, %r9d
	subl	%edi, %r9d
.Ltmp2513:
	#DEBUG_VALUE: abs2:s <- $r9d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r9d, %r8d
.Ltmp2514:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r9d, %r8d
.Ltmp2515:
	.loc	0 357 48 is_stmt 1              # x264_src/common/pixel.c:357:48
	addl	%esi, %r8d
.Ltmp2516:
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- undef
	#DEBUG_VALUE: i <- 5
	.loc	0 356 9                         # x264_src/common/pixel.c:356:9
	movl	-108(%rsp), %edi
	movl	-76(%rsp), %esi
	leal	(%rsi,%rdi), %r9d
.Ltmp2517:
	#DEBUG_VALUE: t0 <- $r9d
	subl	%esi, %edi
.Ltmp2518:
	#DEBUG_VALUE: t1 <- $edi
	movl	-44(%rsp), %r11d
.Ltmp2519:
	movl	-12(%rsp), %esi
	leal	(%rsi,%r11), %ebx
.Ltmp2520:
	#DEBUG_VALUE: t2 <- $ebx
	subl	%esi, %r11d
.Ltmp2521:
	#DEBUG_VALUE: t3 <- $r11d
	leal	(%rbx,%r9), %r10d
.Ltmp2522:
	#DEBUG_VALUE: pixel_hadamard_ac:a0 <- $r10d
	subl	%ebx, %r9d
.Ltmp2523:
	#DEBUG_VALUE: pixel_hadamard_ac:a2 <- $r9d
	leal	(%r11,%rdi), %esi
.Ltmp2524:
	#DEBUG_VALUE: pixel_hadamard_ac:a1 <- $esi
	subl	%r11d, %edi
.Ltmp2525:
	#DEBUG_VALUE: pixel_hadamard_ac:a3 <- $edi
	#DEBUG_VALUE: abs2:a <- $r10d
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%r10d, %r11d
.Ltmp2526:
	shrl	$15, %r11d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r11d                   # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r11d, %ebx
.Ltmp2527:
	shll	$16, %ebx
	subl	%r11d, %ebx
.Ltmp2528:
	#DEBUG_VALUE: abs2:s <- $ebx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%ebx, %r10d
.Ltmp2529:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%ebx, %r10d
.Ltmp2530:
	#DEBUG_VALUE: abs2:a <- $esi
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%esi, %r11d
	shrl	$15, %r11d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r11d                   # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r11d, %ebx
.Ltmp2531:
	shll	$16, %ebx
	subl	%r11d, %ebx
.Ltmp2532:
	#DEBUG_VALUE: abs2:s <- $ebx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%ebx, %esi
.Ltmp2533:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%ebx, %esi
.Ltmp2534:
	#DEBUG_VALUE: abs2:a <- $r9d
	.loc	0 357 14 is_stmt 1              # x264_src/common/pixel.c:357:14
	addl	%r8d, %esi
	.loc	0 357 26 is_stmt 0              # x264_src/common/pixel.c:357:26
	addl	%r10d, %esi
	.loc	0 357 37                        # x264_src/common/pixel.c:357:37
	addl	%edx, %esi
.Ltmp2535:
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%r9d, %edx
	shrl	$15, %edx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %edx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%edx, %r8d
	shll	$16, %r8d
	subl	%edx, %r8d
.Ltmp2536:
	#DEBUG_VALUE: abs2:s <- $r8d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r8d, %r9d
.Ltmp2537:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r8d, %r9d
.Ltmp2538:
	#DEBUG_VALUE: abs2:a <- $edi
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%edi, %edx
	shrl	$15, %edx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %edx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%edx, %r8d
.Ltmp2539:
	shll	$16, %r8d
	subl	%edx, %r8d
.Ltmp2540:
	#DEBUG_VALUE: abs2:s <- $r8d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r8d, %edi
.Ltmp2541:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r8d, %edi
.Ltmp2542:
	.loc	0 357 48 is_stmt 1              # x264_src/common/pixel.c:357:48
	addl	%r9d, %edi
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- undef
.Ltmp2543:
	#DEBUG_VALUE: i <- 6
	.loc	0 356 9                         # x264_src/common/pixel.c:356:9
	movl	-104(%rsp), %edx
	movl	-72(%rsp), %r9d
	leal	(%r9,%rdx), %r8d
.Ltmp2544:
	#DEBUG_VALUE: t0 <- $r8d
	subl	%r9d, %edx
.Ltmp2545:
	#DEBUG_VALUE: t1 <- $edx
	movl	-40(%rsp), %r11d
	movl	-8(%rsp), %r9d
	leal	(%r9,%r11), %ebx
.Ltmp2546:
	#DEBUG_VALUE: t2 <- $ebx
	subl	%r9d, %r11d
.Ltmp2547:
	#DEBUG_VALUE: t3 <- $r11d
	leal	(%rbx,%r8), %r10d
.Ltmp2548:
	#DEBUG_VALUE: pixel_hadamard_ac:a0 <- $r10d
	subl	%ebx, %r8d
.Ltmp2549:
	#DEBUG_VALUE: pixel_hadamard_ac:a2 <- $r8d
	leal	(%r11,%rdx), %r9d
.Ltmp2550:
	#DEBUG_VALUE: pixel_hadamard_ac:a1 <- $r9d
	subl	%r11d, %edx
.Ltmp2551:
	#DEBUG_VALUE: pixel_hadamard_ac:a3 <- $edx
	#DEBUG_VALUE: abs2:a <- $r10d
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%r10d, %r11d
.Ltmp2552:
	shrl	$15, %r11d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r11d                   # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r11d, %ebx
.Ltmp2553:
	shll	$16, %ebx
	subl	%r11d, %ebx
.Ltmp2554:
	#DEBUG_VALUE: abs2:s <- $ebx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%ebx, %r10d
.Ltmp2555:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%ebx, %r10d
.Ltmp2556:
	#DEBUG_VALUE: abs2:a <- $r9d
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%r9d, %r11d
	shrl	$15, %r11d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r11d                   # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r11d, %ebx
.Ltmp2557:
	shll	$16, %ebx
	subl	%r11d, %ebx
.Ltmp2558:
	#DEBUG_VALUE: abs2:s <- $ebx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%ebx, %r9d
.Ltmp2559:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%ebx, %r9d
.Ltmp2560:
	#DEBUG_VALUE: abs2:a <- $r8d
	.loc	0 357 14 is_stmt 1              # x264_src/common/pixel.c:357:14
	addl	%edi, %r9d
	.loc	0 357 26 is_stmt 0              # x264_src/common/pixel.c:357:26
	addl	%r10d, %r9d
.Ltmp2561:
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%r8d, %edi
	shrl	$15, %edi
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %edi                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%edi, %r10d
	shll	$16, %r10d
	subl	%edi, %r10d
.Ltmp2562:
	#DEBUG_VALUE: abs2:s <- $r10d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r10d, %r8d
.Ltmp2563:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r10d, %r8d
.Ltmp2564:
	#DEBUG_VALUE: abs2:a <- $edx
	.loc	0 357 37 is_stmt 1              # x264_src/common/pixel.c:357:37
	addl	%r9d, %r8d
.Ltmp2565:
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%edx, %edi
	shrl	$15, %edi
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %edi                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%edi, %r9d
	shll	$16, %r9d
	subl	%edi, %r9d
.Ltmp2566:
	#DEBUG_VALUE: abs2:s <- $r9d
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%r9d, %edx
.Ltmp2567:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%r9d, %edx
.Ltmp2568:
	.loc	0 357 48 is_stmt 1              # x264_src/common/pixel.c:357:48
	addl	%r8d, %edx
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- undef
.Ltmp2569:
	#DEBUG_VALUE: i <- 7
	.loc	0 356 9                         # x264_src/common/pixel.c:356:9
	movl	-100(%rsp), %edi
	movl	-68(%rsp), %r9d
.Ltmp2570:
	leal	(%r9,%rdi), %r8d
.Ltmp2571:
	#DEBUG_VALUE: t0 <- $r8d
	subl	%r9d, %edi
.Ltmp2572:
	#DEBUG_VALUE: t1 <- $edi
	movl	-36(%rsp), %r11d
	movl	-4(%rsp), %r9d
	leal	(%r9,%r11), %ebx
.Ltmp2573:
	#DEBUG_VALUE: t2 <- $ebx
	subl	%r9d, %r11d
.Ltmp2574:
	#DEBUG_VALUE: t3 <- $r11d
	leal	(%rbx,%r8), %r10d
.Ltmp2575:
	#DEBUG_VALUE: pixel_hadamard_ac:a0 <- $r10d
	subl	%ebx, %r8d
.Ltmp2576:
	#DEBUG_VALUE: pixel_hadamard_ac:a2 <- $r8d
	leal	(%r11,%rdi), %r9d
.Ltmp2577:
	#DEBUG_VALUE: pixel_hadamard_ac:a1 <- $r9d
	subl	%r11d, %edi
.Ltmp2578:
	#DEBUG_VALUE: pixel_hadamard_ac:a3 <- $edi
	#DEBUG_VALUE: abs2:a <- $r10d
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%r10d, %r11d
.Ltmp2579:
	shrl	$15, %r11d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r11d                   # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r11d, %ebx
.Ltmp2580:
	shll	$16, %ebx
	subl	%r11d, %ebx
.Ltmp2581:
	#DEBUG_VALUE: abs2:s <- $ebx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%ebx, %r10d
.Ltmp2582:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%ebx, %r10d
.Ltmp2583:
	#DEBUG_VALUE: abs2:a <- $r9d
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%r9d, %r11d
	shrl	$15, %r11d
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %r11d                   # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%r11d, %ebx
.Ltmp2584:
	shll	$16, %ebx
	subl	%r11d, %ebx
.Ltmp2585:
	#DEBUG_VALUE: abs2:s <- $ebx
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%ebx, %r9d
.Ltmp2586:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%ebx, %r9d
.Ltmp2587:
	#DEBUG_VALUE: abs2:a <- $r8d
	.loc	0 357 14 is_stmt 1              # x264_src/common/pixel.c:357:14
	addl	%edx, %r9d
	.loc	0 357 26 is_stmt 0              # x264_src/common/pixel.c:357:26
	addl	%esi, %r9d
.Ltmp2588:
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movl	%r8d, %edx
	shrl	$15, %edx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %edx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%edx, %esi
	shll	$16, %esi
	subl	%edx, %esi
.Ltmp2589:
	#DEBUG_VALUE: abs2:s <- $esi
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%esi, %r8d
.Ltmp2590:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%esi, %r8d
.Ltmp2591:
	#DEBUG_VALUE: abs2:a <- $edi
	.loc	0 357 37 is_stmt 1              # x264_src/common/pixel.c:357:37
	addl	%r10d, %r8d
.Ltmp2592:
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movl	%edi, %edx
	shrl	$15, %edx
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	andl	$65537, %edx                    # imm = 0x10001
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movl	%edx, %esi
.Ltmp2593:
	shll	$16, %esi
	subl	%edx, %esi
.Ltmp2594:
	#DEBUG_VALUE: abs2:s <- $esi
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	addl	%esi, %edi
.Ltmp2595:
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	xorl	%esi, %edi
.Ltmp2596:
	.loc	0 357 48 is_stmt 1              # x264_src/common/pixel.c:357:48
	addl	%r8d, %edi
	.loc	0 357 14 is_stmt 0              # x264_src/common/pixel.c:357:14
	addl	%r9d, %edi
.Ltmp2597:
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- $edi
	#DEBUG_VALUE: i <- 8
	.loc	0 359 10 is_stmt 1              # x264_src/common/pixel.c:359:10
	movzwl	%cx, %ecx
.Ltmp2598:
	#DEBUG_VALUE: pixel_hadamard_ac:dc <- $ecx
	.loc	0 360 12                        # x264_src/common/pixel.c:360:12
	movzwl	%ax, %edx
	.loc	0 360 44 is_stmt 0              # x264_src/common/pixel.c:360:44
	shrl	$16, %eax
	.loc	0 360 27                        # x264_src/common/pixel.c:360:27
	addl	%edx, %eax
	.loc	0 360 50                        # x264_src/common/pixel.c:360:50
	subl	%ecx, %eax
.Ltmp2599:
	#DEBUG_VALUE: pixel_hadamard_ac:sum4 <- $eax
	.loc	0 361 12 is_stmt 1              # x264_src/common/pixel.c:361:12
	movzwl	%di, %edx
	.loc	0 361 44 is_stmt 0              # x264_src/common/pixel.c:361:44
	shrl	$16, %edi
.Ltmp2600:
	.loc	0 361 27                        # x264_src/common/pixel.c:361:27
	addl	%edx, %edi
	.loc	0 361 50                        # x264_src/common/pixel.c:361:50
	subl	%ecx, %edi
.Ltmp2601:
	#DEBUG_VALUE: pixel_hadamard_ac:sum8 <- $edi
	.loc	0 362 27 is_stmt 1              # x264_src/common/pixel.c:362:27
	shlq	$32, %rdi
.Ltmp2602:
	.loc	0 362 35 is_stmt 0              # x264_src/common/pixel.c:362:35
	cltq
.Ltmp2603:
	.loc	0 362 33                        # x264_src/common/pixel.c:362:33
	addq	%rdi, %rax
	.loc	0 362 5 epilogue_begin          # x264_src/common/pixel.c:362:5
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp2604:
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2605:
.Lfunc_end66:
	.size	pixel_hadamard_ac, .Lfunc_end66-pixel_hadamard_ac
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function sa8d_8x8
.LCPI67_0:
	.long	65537                           # 0x10001
	.long	65537                           # 0x10001
	.long	65537                           # 0x10001
	.long	65537                           # 0x10001
.LCPI67_1:
	.short	65535                           # 0xffff
	.short	0                               # 0x0
	.short	65535                           # 0xffff
	.short	0                               # 0x0
	.short	65535                           # 0xffff
	.short	0                               # 0x0
	.short	65535                           # 0xffff
	.short	0                               # 0x0
	.text
	.p2align	4, 0x90
	.type	sa8d_8x8,@function
sa8d_8x8:                               # @sa8d_8x8
.Lfunc_begin67:
	.loc	0 279 0 is_stmt 1               # x264_src/common/pixel.c:279:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: sa8d_8x8:pix1 <- $rdi
	#DEBUG_VALUE: sa8d_8x8:i_pix1 <- $esi
	#DEBUG_VALUE: sa8d_8x8:pix2 <- $rdx
	#DEBUG_VALUE: sa8d_8x8:i_pix2 <- $ecx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %rbp, -16
.Ltmp2606:
	#DEBUG_VALUE: sa8d_8x8:sum <- 0
	#DEBUG_VALUE: i <- 0
	movslq	%esi, %rax
	movslq	%ecx, %rcx
.Ltmp2607:
	#DEBUG_VALUE: sa8d_8x8:i_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	.loc	0 283 5 prologue_end            # x264_src/common/pixel.c:283:5
	addq	$7, %rdi
.Ltmp2608:
	#DEBUG_VALUE: sa8d_8x8:pix1 <- [DW_OP_LLVM_entry_value 1] $rdi
	addq	$7, %rdx
.Ltmp2609:
	#DEBUG_VALUE: sa8d_8x8:pix2 <- [DW_OP_LLVM_entry_value 1] $rdx
	.loc	0 0 5 is_stmt 0                 # x264_src/common/pixel.c:0:5
	movl	$12, %esi
.Ltmp2610:
	#DEBUG_VALUE: sa8d_8x8:i_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	.p2align	4, 0x90
.LBB67_1:                               # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: sa8d_8x8:i_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: sa8d_8x8:i_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: sa8d_8x8:sum <- 0
	#DEBUG_VALUE: sa8d_8x8:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_consts 12, DW_OP_minus, DW_OP_consts 16, DW_OP_div, DW_OP_LLVM_arg 0, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_stack_value] undef
	#DEBUG_VALUE: sa8d_8x8:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_consts 12, DW_OP_minus, DW_OP_consts 16, DW_OP_div, DW_OP_LLVM_arg 0, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_stack_value] undef
	#DEBUG_VALUE: i <- [DW_OP_consts 12, DW_OP_minus, DW_OP_consts 16, DW_OP_div, DW_OP_stack_value] $rsi
	.loc	0 285 14 is_stmt 1              # x264_src/common/pixel.c:285:14
	movzbl	-7(%rdi), %r8d
	.loc	0 285 24 is_stmt 0              # x264_src/common/pixel.c:285:24
	movzbl	-7(%rdx), %r9d
	.loc	0 285 22                        # x264_src/common/pixel.c:285:22
	subl	%r9d, %r8d
.Ltmp2611:
	#DEBUG_VALUE: sa8d_8x8:a0 <- $r8d
	.loc	0 286 14 is_stmt 1              # x264_src/common/pixel.c:286:14
	movzbl	-6(%rdi), %r9d
	.loc	0 286 24 is_stmt 0              # x264_src/common/pixel.c:286:24
	movzbl	-6(%rdx), %r10d
	.loc	0 286 22                        # x264_src/common/pixel.c:286:22
	subl	%r10d, %r9d
.Ltmp2612:
	#DEBUG_VALUE: sa8d_8x8:a1 <- $r9d
	.loc	0 287 17 is_stmt 1              # x264_src/common/pixel.c:287:17
	leal	(%r9,%r8), %r10d
	.loc	0 287 28 is_stmt 0              # x264_src/common/pixel.c:287:28
	subl	%r9d, %r8d
.Ltmp2613:
	.loc	0 287 32                        # x264_src/common/pixel.c:287:32
	shll	$16, %r8d
	.loc	0 287 22                        # x264_src/common/pixel.c:287:22
	addl	%r10d, %r8d
.Ltmp2614:
	#DEBUG_VALUE: sa8d_8x8:b0 <- $r8d
	.loc	0 288 14 is_stmt 1              # x264_src/common/pixel.c:288:14
	movzbl	-5(%rdi), %r10d
	.loc	0 288 24 is_stmt 0              # x264_src/common/pixel.c:288:24
	movzbl	-5(%rdx), %r9d
.Ltmp2615:
	.loc	0 288 22                        # x264_src/common/pixel.c:288:22
	subl	%r9d, %r10d
.Ltmp2616:
	#DEBUG_VALUE: sa8d_8x8:a2 <- $r10d
	.loc	0 289 14 is_stmt 1              # x264_src/common/pixel.c:289:14
	movzbl	-4(%rdi), %r9d
	.loc	0 289 24 is_stmt 0              # x264_src/common/pixel.c:289:24
	movzbl	-4(%rdx), %r11d
	.loc	0 289 22                        # x264_src/common/pixel.c:289:22
	subl	%r11d, %r9d
.Ltmp2617:
	#DEBUG_VALUE: sa8d_8x8:a3 <- $r9d
	.loc	0 290 17 is_stmt 1              # x264_src/common/pixel.c:290:17
	leal	(%r9,%r10), %r11d
	.loc	0 290 28 is_stmt 0              # x264_src/common/pixel.c:290:28
	subl	%r9d, %r10d
.Ltmp2618:
	.loc	0 290 32                        # x264_src/common/pixel.c:290:32
	shll	$16, %r10d
	.loc	0 290 22                        # x264_src/common/pixel.c:290:22
	addl	%r11d, %r10d
.Ltmp2619:
	#DEBUG_VALUE: sa8d_8x8:b1 <- $r10d
	.loc	0 291 14 is_stmt 1              # x264_src/common/pixel.c:291:14
	movzbl	-3(%rdi), %r9d
.Ltmp2620:
	.loc	0 291 24 is_stmt 0              # x264_src/common/pixel.c:291:24
	movzbl	-3(%rdx), %r11d
	.loc	0 291 22                        # x264_src/common/pixel.c:291:22
	subl	%r11d, %r9d
.Ltmp2621:
	#DEBUG_VALUE: sa8d_8x8:a4 <- $r9d
	.loc	0 292 14 is_stmt 1              # x264_src/common/pixel.c:292:14
	movzbl	-2(%rdi), %r11d
	.loc	0 292 24 is_stmt 0              # x264_src/common/pixel.c:292:24
	movzbl	-2(%rdx), %ebx
	.loc	0 292 22                        # x264_src/common/pixel.c:292:22
	subl	%ebx, %r11d
.Ltmp2622:
	#DEBUG_VALUE: sa8d_8x8:a5 <- $r11d
	.loc	0 293 17 is_stmt 1              # x264_src/common/pixel.c:293:17
	leal	(%r11,%r9), %ebx
	.loc	0 293 28 is_stmt 0              # x264_src/common/pixel.c:293:28
	subl	%r11d, %r9d
.Ltmp2623:
	.loc	0 293 32                        # x264_src/common/pixel.c:293:32
	shll	$16, %r9d
	.loc	0 293 22                        # x264_src/common/pixel.c:293:22
	addl	%ebx, %r9d
.Ltmp2624:
	#DEBUG_VALUE: sa8d_8x8:b2 <- $r9d
	.loc	0 294 14 is_stmt 1              # x264_src/common/pixel.c:294:14
	movzbl	-1(%rdi), %r11d
.Ltmp2625:
	.loc	0 294 24 is_stmt 0              # x264_src/common/pixel.c:294:24
	movzbl	-1(%rdx), %ebx
	.loc	0 294 22                        # x264_src/common/pixel.c:294:22
	subl	%ebx, %r11d
.Ltmp2626:
	#DEBUG_VALUE: sa8d_8x8:a6 <- $r11d
	.loc	0 295 14 is_stmt 1              # x264_src/common/pixel.c:295:14
	movzbl	(%rdi), %ebx
	.loc	0 295 24 is_stmt 0              # x264_src/common/pixel.c:295:24
	movzbl	(%rdx), %ebp
	.loc	0 295 22                        # x264_src/common/pixel.c:295:22
	subl	%ebp, %ebx
.Ltmp2627:
	#DEBUG_VALUE: sa8d_8x8:a7 <- $ebx
	.loc	0 296 17 is_stmt 1              # x264_src/common/pixel.c:296:17
	leal	(%rbx,%r11), %ebp
	.loc	0 296 28 is_stmt 0              # x264_src/common/pixel.c:296:28
	subl	%ebx, %r11d
.Ltmp2628:
	.loc	0 296 32                        # x264_src/common/pixel.c:296:32
	shll	$16, %r11d
	.loc	0 296 22                        # x264_src/common/pixel.c:296:22
	addl	%ebp, %r11d
.Ltmp2629:
	#DEBUG_VALUE: sa8d_8x8:b3 <- $r11d
	.loc	0 297 9 is_stmt 1               # x264_src/common/pixel.c:297:9
	leal	(%r10,%r8), %ebx
.Ltmp2630:
	#DEBUG_VALUE: t0 <- $ebx
	subl	%r10d, %r8d
.Ltmp2631:
	#DEBUG_VALUE: t1 <- $r8d
	leal	(%r11,%r9), %r10d
.Ltmp2632:
	#DEBUG_VALUE: t2 <- $r10d
	subl	%r11d, %r9d
.Ltmp2633:
	#DEBUG_VALUE: t3 <- $r9d
	leal	(%r10,%rbx), %r11d
.Ltmp2634:
	movl	%r11d, -140(%rsp,%rsi)
	subl	%r10d, %ebx
.Ltmp2635:
	movl	%ebx, -132(%rsp,%rsi)
	leal	(%r9,%r8), %r10d
.Ltmp2636:
	movl	%r10d, -136(%rsp,%rsi)
	subl	%r9d, %r8d
.Ltmp2637:
	movl	%r8d, -128(%rsp,%rsi)
.Ltmp2638:
	#DEBUG_VALUE: sa8d_8x8:pix2 <- [DW_OP_LLVM_arg 0, DW_OP_consts 12, DW_OP_minus, DW_OP_consts 16, DW_OP_div, DW_OP_LLVM_arg 0, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 0, DW_OP_LLVM_convert 64 5, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef
	#DEBUG_VALUE: sa8d_8x8:pix1 <- [DW_OP_LLVM_arg 0, DW_OP_consts 12, DW_OP_minus, DW_OP_consts 16, DW_OP_div, DW_OP_LLVM_arg 0, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 0, DW_OP_LLVM_convert 64 5, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef
	#DEBUG_VALUE: i <- [DW_OP_consts 12, DW_OP_minus, DW_OP_consts 16, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rsi
	.loc	0 283 23                        # x264_src/common/pixel.c:283:23
	addq	$16, %rsi
.Ltmp2639:
	addq	%rax, %rdi
	addq	%rcx, %rdx
	cmpq	$140, %rsi
.Ltmp2640:
	.loc	0 283 5 is_stmt 0               # x264_src/common/pixel.c:283:5
	jne	.LBB67_1
.Ltmp2641:
# %bb.2:                                # %for.cond74.preheader
	#DEBUG_VALUE: sa8d_8x8:i_pix1 <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: sa8d_8x8:i_pix2 <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: sa8d_8x8:sum <- 0
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: sa8d_8x8:sum <- 0
	.loc	0 301 9 is_stmt 1               # x264_src/common/pixel.c:301:9
	pshufd	$27, -128(%rsp), %xmm6          # xmm6 = mem[3,2,1,0]
	pshufd	$27, -112(%rsp), %xmm0          # xmm0 = mem[3,2,1,0]
	movdqa	%xmm0, %xmm8
	paddd	%xmm6, %xmm8
	psubd	%xmm0, %xmm6
	pshufd	$27, -96(%rsp), %xmm0           # xmm0 = mem[3,2,1,0]
	pshufd	$27, -80(%rsp), %xmm1           # xmm1 = mem[3,2,1,0]
	movdqa	%xmm1, %xmm2
	paddd	%xmm0, %xmm2
	psubd	%xmm1, %xmm0
	movdqa	%xmm2, %xmm5
	paddd	%xmm8, %xmm5
	psubd	%xmm2, %xmm8
	movdqa	%xmm0, %xmm1
	paddd	%xmm6, %xmm1
.Ltmp2642:
	.loc	0 302 9                         # x264_src/common/pixel.c:302:9
	pshufd	$27, -64(%rsp), %xmm4           # xmm4 = mem[3,2,1,0]
	pshufd	$27, -48(%rsp), %xmm2           # xmm2 = mem[3,2,1,0]
.Ltmp2643:
	.loc	0 301 9                         # x264_src/common/pixel.c:301:9
	psubd	%xmm0, %xmm6
.Ltmp2644:
	.loc	0 302 9                         # x264_src/common/pixel.c:302:9
	movdqa	%xmm2, %xmm9
	paddd	%xmm4, %xmm9
	psubd	%xmm2, %xmm4
	pshufd	$27, -32(%rsp), %xmm7           # xmm7 = mem[3,2,1,0]
	pshufd	$27, -16(%rsp), %xmm2           # xmm2 = mem[3,2,1,0]
	movdqa	%xmm7, %xmm0
	psubd	%xmm2, %xmm0
	movdqa	%xmm4, %xmm3
	psubd	%xmm0, %xmm3
.Ltmp2645:
	.loc	0 306 22                        # x264_src/common/pixel.c:306:22
	movdqa	%xmm3, %xmm10
	paddd	%xmm6, %xmm10
	.loc	0 306 36 is_stmt 0              # x264_src/common/pixel.c:306:36
	psubd	%xmm3, %xmm6
.Ltmp2646:
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movdqa	%xmm10, %xmm11
	psrld	$15, %xmm11
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	movdqa	.LCPI67_0(%rip), %xmm3          # xmm3 = [65537,65537,65537,65537]
	pand	%xmm3, %xmm11
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movdqa	%xmm11, %xmm12
	pslld	$16, %xmm12
	psubd	%xmm11, %xmm12
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	paddd	%xmm12, %xmm10
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	pxor	%xmm12, %xmm10
.Ltmp2647:
	.loc	0 201 21 is_stmt 1              # x264_src/common/pixel.c:201:21
	movdqa	%xmm6, %xmm11
	psrld	$15, %xmm11
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	pand	%xmm3, %xmm11
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movdqa	%xmm11, %xmm12
	pslld	$16, %xmm12
	psubd	%xmm11, %xmm12
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	paddd	%xmm12, %xmm6
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	pxor	%xmm12, %xmm6
.Ltmp2648:
	.loc	0 304 27 is_stmt 1              # x264_src/common/pixel.c:304:27
	paddd	%xmm10, %xmm6
.Ltmp2649:
	.loc	0 302 9                         # x264_src/common/pixel.c:302:9
	paddd	%xmm7, %xmm2
	movdqa	%xmm9, %xmm7
	psubd	%xmm2, %xmm7
.Ltmp2650:
	.loc	0 305 36                        # x264_src/common/pixel.c:305:36
	movdqa	%xmm8, %xmm10
	psubd	%xmm7, %xmm10
.Ltmp2651:
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movdqa	%xmm10, %xmm11
	psrld	$15, %xmm11
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	pand	%xmm3, %xmm11
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movdqa	%xmm11, %xmm12
	pslld	$16, %xmm12
	psubd	%xmm11, %xmm12
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	paddd	%xmm12, %xmm10
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	pxor	%xmm12, %xmm10
.Ltmp2652:
	.loc	0 305 22 is_stmt 1              # x264_src/common/pixel.c:305:22
	paddd	%xmm8, %xmm7
.Ltmp2653:
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movdqa	%xmm7, %xmm8
	psrld	$15, %xmm8
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	pand	%xmm3, %xmm8
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movdqa	%xmm8, %xmm11
	pslld	$16, %xmm11
	psubd	%xmm8, %xmm11
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	paddd	%xmm11, %xmm7
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	pxor	%xmm11, %xmm7
.Ltmp2654:
	.loc	0 303 27 is_stmt 1              # x264_src/common/pixel.c:303:27
	paddd	%xmm10, %xmm7
	.loc	0 304 12                        # x264_src/common/pixel.c:304:12
	paddd	%xmm6, %xmm7
.Ltmp2655:
	.loc	0 302 9                         # x264_src/common/pixel.c:302:9
	paddd	%xmm9, %xmm2
.Ltmp2656:
	.loc	0 303 36                        # x264_src/common/pixel.c:303:36
	movdqa	%xmm5, %xmm6
	psubd	%xmm2, %xmm6
.Ltmp2657:
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movdqa	%xmm6, %xmm8
	psrld	$15, %xmm8
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	pand	%xmm3, %xmm8
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movdqa	%xmm8, %xmm9
	pslld	$16, %xmm9
	psubd	%xmm8, %xmm9
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	paddd	%xmm9, %xmm6
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	pxor	%xmm9, %xmm6
.Ltmp2658:
	.loc	0 303 22 is_stmt 1              # x264_src/common/pixel.c:303:22
	paddd	%xmm5, %xmm2
.Ltmp2659:
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movdqa	%xmm2, %xmm5
	psrld	$15, %xmm5
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	pand	%xmm3, %xmm5
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movdqa	%xmm5, %xmm8
	pslld	$16, %xmm8
	psubd	%xmm5, %xmm8
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	paddd	%xmm8, %xmm2
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	pxor	%xmm8, %xmm2
.Ltmp2660:
	.loc	0 305 27 is_stmt 1              # x264_src/common/pixel.c:305:27
	paddd	%xmm6, %xmm2
.Ltmp2661:
	.loc	0 302 9                         # x264_src/common/pixel.c:302:9
	paddd	%xmm4, %xmm0
.Ltmp2662:
	.loc	0 304 36                        # x264_src/common/pixel.c:304:36
	movdqa	%xmm1, %xmm4
	psubd	%xmm0, %xmm4
.Ltmp2663:
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movdqa	%xmm4, %xmm5
	psrld	$15, %xmm5
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	pand	%xmm3, %xmm5
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movdqa	%xmm5, %xmm6
	pslld	$16, %xmm6
	psubd	%xmm5, %xmm6
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	paddd	%xmm6, %xmm4
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	pxor	%xmm6, %xmm4
.Ltmp2664:
	.loc	0 305 12 is_stmt 1              # x264_src/common/pixel.c:305:12
	paddd	%xmm2, %xmm4
	.loc	0 306 27                        # x264_src/common/pixel.c:306:27
	paddd	%xmm7, %xmm4
	.loc	0 304 22                        # x264_src/common/pixel.c:304:22
	paddd	%xmm1, %xmm0
.Ltmp2665:
	.loc	0 201 21                        # x264_src/common/pixel.c:201:21
	movdqa	%xmm0, %xmm1
	psrld	$15, %xmm1
	.loc	0 201 26 is_stmt 0              # x264_src/common/pixel.c:201:26
	pand	%xmm3, %xmm1
	.loc	0 201 35                        # x264_src/common/pixel.c:201:35
	movdqa	%xmm1, %xmm2
	pslld	$16, %xmm2
	psubd	%xmm1, %xmm2
	.loc	0 202 14 is_stmt 1              # x264_src/common/pixel.c:202:14
	paddd	%xmm2, %xmm0
	.loc	0 202 17 is_stmt 0              # x264_src/common/pixel.c:202:17
	pxor	%xmm2, %xmm0
.Ltmp2666:
	.loc	0 306 12 is_stmt 1              # x264_src/common/pixel.c:306:12
	paddd	%xmm4, %xmm0
	movdqa	.LCPI67_1(%rip), %xmm1          # xmm1 = [65535,0,65535,0,65535,0,65535,0]
	.loc	0 307 16                        # x264_src/common/pixel.c:307:16
	pand	%xmm0, %xmm1
	.loc	0 307 34 is_stmt 0              # x264_src/common/pixel.c:307:34
	psrld	$16, %xmm0
.Ltmp2667:
	.loc	0 299 5 is_stmt 1               # x264_src/common/pixel.c:299:5
	pshufd	$238, %xmm1, %xmm2              # xmm2 = xmm1[2,3,2,3]
	paddd	%xmm1, %xmm2
	pshufd	$85, %xmm2, %xmm1               # xmm1 = xmm2[1,1,1,1]
	paddd	%xmm2, %xmm1
	movd	%xmm1, %ecx
	pshufd	$238, %xmm0, %xmm1              # xmm1 = xmm0[2,3,2,3]
	paddd	%xmm0, %xmm1
	pshufd	$85, %xmm1, %xmm0               # xmm0 = xmm1[1,1,1,1]
	paddd	%xmm1, %xmm0
	movd	%xmm0, %eax
	addl	%ecx, %eax
.Ltmp2668:
	.loc	0 309 5 epilogue_begin          # x264_src/common/pixel.c:309:5
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2669:
.Lfunc_end67:
	.size	sa8d_8x8, .Lfunc_end67-sa8d_8x8
	.cfi_endproc
                                        # -- End function
	.file	5 "/usr/include/x86_64-linux-gnu/bits" "stdint-intn.h" md5 0x55bcbdc3159515ebd91d351a70d505f4
	.section	.debug_loclists,"",@progbits
	.long	.Ldebug_list_header_end0-.Ldebug_list_header_start0 # Length
.Ldebug_list_header_start0:
	.short	5                               # Version
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
	.long	631                             # Offset entry count
.Lloclists_table_base0:
	.long	.Ldebug_loc0-.Lloclists_table_base0
	.long	.Ldebug_loc1-.Lloclists_table_base0
	.long	.Ldebug_loc2-.Lloclists_table_base0
	.long	.Ldebug_loc3-.Lloclists_table_base0
	.long	.Ldebug_loc4-.Lloclists_table_base0
	.long	.Ldebug_loc5-.Lloclists_table_base0
	.long	.Ldebug_loc6-.Lloclists_table_base0
	.long	.Ldebug_loc7-.Lloclists_table_base0
	.long	.Ldebug_loc8-.Lloclists_table_base0
	.long	.Ldebug_loc9-.Lloclists_table_base0
	.long	.Ldebug_loc10-.Lloclists_table_base0
	.long	.Ldebug_loc11-.Lloclists_table_base0
	.long	.Ldebug_loc12-.Lloclists_table_base0
	.long	.Ldebug_loc13-.Lloclists_table_base0
	.long	.Ldebug_loc14-.Lloclists_table_base0
	.long	.Ldebug_loc15-.Lloclists_table_base0
	.long	.Ldebug_loc16-.Lloclists_table_base0
	.long	.Ldebug_loc17-.Lloclists_table_base0
	.long	.Ldebug_loc18-.Lloclists_table_base0
	.long	.Ldebug_loc19-.Lloclists_table_base0
	.long	.Ldebug_loc20-.Lloclists_table_base0
	.long	.Ldebug_loc21-.Lloclists_table_base0
	.long	.Ldebug_loc22-.Lloclists_table_base0
	.long	.Ldebug_loc23-.Lloclists_table_base0
	.long	.Ldebug_loc24-.Lloclists_table_base0
	.long	.Ldebug_loc25-.Lloclists_table_base0
	.long	.Ldebug_loc26-.Lloclists_table_base0
	.long	.Ldebug_loc27-.Lloclists_table_base0
	.long	.Ldebug_loc28-.Lloclists_table_base0
	.long	.Ldebug_loc29-.Lloclists_table_base0
	.long	.Ldebug_loc30-.Lloclists_table_base0
	.long	.Ldebug_loc31-.Lloclists_table_base0
	.long	.Ldebug_loc32-.Lloclists_table_base0
	.long	.Ldebug_loc33-.Lloclists_table_base0
	.long	.Ldebug_loc34-.Lloclists_table_base0
	.long	.Ldebug_loc35-.Lloclists_table_base0
	.long	.Ldebug_loc36-.Lloclists_table_base0
	.long	.Ldebug_loc37-.Lloclists_table_base0
	.long	.Ldebug_loc38-.Lloclists_table_base0
	.long	.Ldebug_loc39-.Lloclists_table_base0
	.long	.Ldebug_loc40-.Lloclists_table_base0
	.long	.Ldebug_loc41-.Lloclists_table_base0
	.long	.Ldebug_loc42-.Lloclists_table_base0
	.long	.Ldebug_loc43-.Lloclists_table_base0
	.long	.Ldebug_loc44-.Lloclists_table_base0
	.long	.Ldebug_loc45-.Lloclists_table_base0
	.long	.Ldebug_loc46-.Lloclists_table_base0
	.long	.Ldebug_loc47-.Lloclists_table_base0
	.long	.Ldebug_loc48-.Lloclists_table_base0
	.long	.Ldebug_loc49-.Lloclists_table_base0
	.long	.Ldebug_loc50-.Lloclists_table_base0
	.long	.Ldebug_loc51-.Lloclists_table_base0
	.long	.Ldebug_loc52-.Lloclists_table_base0
	.long	.Ldebug_loc53-.Lloclists_table_base0
	.long	.Ldebug_loc54-.Lloclists_table_base0
	.long	.Ldebug_loc55-.Lloclists_table_base0
	.long	.Ldebug_loc56-.Lloclists_table_base0
	.long	.Ldebug_loc57-.Lloclists_table_base0
	.long	.Ldebug_loc58-.Lloclists_table_base0
	.long	.Ldebug_loc59-.Lloclists_table_base0
	.long	.Ldebug_loc60-.Lloclists_table_base0
	.long	.Ldebug_loc61-.Lloclists_table_base0
	.long	.Ldebug_loc62-.Lloclists_table_base0
	.long	.Ldebug_loc63-.Lloclists_table_base0
	.long	.Ldebug_loc64-.Lloclists_table_base0
	.long	.Ldebug_loc65-.Lloclists_table_base0
	.long	.Ldebug_loc66-.Lloclists_table_base0
	.long	.Ldebug_loc67-.Lloclists_table_base0
	.long	.Ldebug_loc68-.Lloclists_table_base0
	.long	.Ldebug_loc69-.Lloclists_table_base0
	.long	.Ldebug_loc70-.Lloclists_table_base0
	.long	.Ldebug_loc71-.Lloclists_table_base0
	.long	.Ldebug_loc72-.Lloclists_table_base0
	.long	.Ldebug_loc73-.Lloclists_table_base0
	.long	.Ldebug_loc74-.Lloclists_table_base0
	.long	.Ldebug_loc75-.Lloclists_table_base0
	.long	.Ldebug_loc76-.Lloclists_table_base0
	.long	.Ldebug_loc77-.Lloclists_table_base0
	.long	.Ldebug_loc78-.Lloclists_table_base0
	.long	.Ldebug_loc79-.Lloclists_table_base0
	.long	.Ldebug_loc80-.Lloclists_table_base0
	.long	.Ldebug_loc81-.Lloclists_table_base0
	.long	.Ldebug_loc82-.Lloclists_table_base0
	.long	.Ldebug_loc83-.Lloclists_table_base0
	.long	.Ldebug_loc84-.Lloclists_table_base0
	.long	.Ldebug_loc85-.Lloclists_table_base0
	.long	.Ldebug_loc86-.Lloclists_table_base0
	.long	.Ldebug_loc87-.Lloclists_table_base0
	.long	.Ldebug_loc88-.Lloclists_table_base0
	.long	.Ldebug_loc89-.Lloclists_table_base0
	.long	.Ldebug_loc90-.Lloclists_table_base0
	.long	.Ldebug_loc91-.Lloclists_table_base0
	.long	.Ldebug_loc92-.Lloclists_table_base0
	.long	.Ldebug_loc93-.Lloclists_table_base0
	.long	.Ldebug_loc94-.Lloclists_table_base0
	.long	.Ldebug_loc95-.Lloclists_table_base0
	.long	.Ldebug_loc96-.Lloclists_table_base0
	.long	.Ldebug_loc97-.Lloclists_table_base0
	.long	.Ldebug_loc98-.Lloclists_table_base0
	.long	.Ldebug_loc99-.Lloclists_table_base0
	.long	.Ldebug_loc100-.Lloclists_table_base0
	.long	.Ldebug_loc101-.Lloclists_table_base0
	.long	.Ldebug_loc102-.Lloclists_table_base0
	.long	.Ldebug_loc103-.Lloclists_table_base0
	.long	.Ldebug_loc104-.Lloclists_table_base0
	.long	.Ldebug_loc105-.Lloclists_table_base0
	.long	.Ldebug_loc106-.Lloclists_table_base0
	.long	.Ldebug_loc107-.Lloclists_table_base0
	.long	.Ldebug_loc108-.Lloclists_table_base0
	.long	.Ldebug_loc109-.Lloclists_table_base0
	.long	.Ldebug_loc110-.Lloclists_table_base0
	.long	.Ldebug_loc111-.Lloclists_table_base0
	.long	.Ldebug_loc112-.Lloclists_table_base0
	.long	.Ldebug_loc113-.Lloclists_table_base0
	.long	.Ldebug_loc114-.Lloclists_table_base0
	.long	.Ldebug_loc115-.Lloclists_table_base0
	.long	.Ldebug_loc116-.Lloclists_table_base0
	.long	.Ldebug_loc117-.Lloclists_table_base0
	.long	.Ldebug_loc118-.Lloclists_table_base0
	.long	.Ldebug_loc119-.Lloclists_table_base0
	.long	.Ldebug_loc120-.Lloclists_table_base0
	.long	.Ldebug_loc121-.Lloclists_table_base0
	.long	.Ldebug_loc122-.Lloclists_table_base0
	.long	.Ldebug_loc123-.Lloclists_table_base0
	.long	.Ldebug_loc124-.Lloclists_table_base0
	.long	.Ldebug_loc125-.Lloclists_table_base0
	.long	.Ldebug_loc126-.Lloclists_table_base0
	.long	.Ldebug_loc127-.Lloclists_table_base0
	.long	.Ldebug_loc128-.Lloclists_table_base0
	.long	.Ldebug_loc129-.Lloclists_table_base0
	.long	.Ldebug_loc130-.Lloclists_table_base0
	.long	.Ldebug_loc131-.Lloclists_table_base0
	.long	.Ldebug_loc132-.Lloclists_table_base0
	.long	.Ldebug_loc133-.Lloclists_table_base0
	.long	.Ldebug_loc134-.Lloclists_table_base0
	.long	.Ldebug_loc135-.Lloclists_table_base0
	.long	.Ldebug_loc136-.Lloclists_table_base0
	.long	.Ldebug_loc137-.Lloclists_table_base0
	.long	.Ldebug_loc138-.Lloclists_table_base0
	.long	.Ldebug_loc139-.Lloclists_table_base0
	.long	.Ldebug_loc140-.Lloclists_table_base0
	.long	.Ldebug_loc141-.Lloclists_table_base0
	.long	.Ldebug_loc142-.Lloclists_table_base0
	.long	.Ldebug_loc143-.Lloclists_table_base0
	.long	.Ldebug_loc144-.Lloclists_table_base0
	.long	.Ldebug_loc145-.Lloclists_table_base0
	.long	.Ldebug_loc146-.Lloclists_table_base0
	.long	.Ldebug_loc147-.Lloclists_table_base0
	.long	.Ldebug_loc148-.Lloclists_table_base0
	.long	.Ldebug_loc149-.Lloclists_table_base0
	.long	.Ldebug_loc150-.Lloclists_table_base0
	.long	.Ldebug_loc151-.Lloclists_table_base0
	.long	.Ldebug_loc152-.Lloclists_table_base0
	.long	.Ldebug_loc153-.Lloclists_table_base0
	.long	.Ldebug_loc154-.Lloclists_table_base0
	.long	.Ldebug_loc155-.Lloclists_table_base0
	.long	.Ldebug_loc156-.Lloclists_table_base0
	.long	.Ldebug_loc157-.Lloclists_table_base0
	.long	.Ldebug_loc158-.Lloclists_table_base0
	.long	.Ldebug_loc159-.Lloclists_table_base0
	.long	.Ldebug_loc160-.Lloclists_table_base0
	.long	.Ldebug_loc161-.Lloclists_table_base0
	.long	.Ldebug_loc162-.Lloclists_table_base0
	.long	.Ldebug_loc163-.Lloclists_table_base0
	.long	.Ldebug_loc164-.Lloclists_table_base0
	.long	.Ldebug_loc165-.Lloclists_table_base0
	.long	.Ldebug_loc166-.Lloclists_table_base0
	.long	.Ldebug_loc167-.Lloclists_table_base0
	.long	.Ldebug_loc168-.Lloclists_table_base0
	.long	.Ldebug_loc169-.Lloclists_table_base0
	.long	.Ldebug_loc170-.Lloclists_table_base0
	.long	.Ldebug_loc171-.Lloclists_table_base0
	.long	.Ldebug_loc172-.Lloclists_table_base0
	.long	.Ldebug_loc173-.Lloclists_table_base0
	.long	.Ldebug_loc174-.Lloclists_table_base0
	.long	.Ldebug_loc175-.Lloclists_table_base0
	.long	.Ldebug_loc176-.Lloclists_table_base0
	.long	.Ldebug_loc177-.Lloclists_table_base0
	.long	.Ldebug_loc178-.Lloclists_table_base0
	.long	.Ldebug_loc179-.Lloclists_table_base0
	.long	.Ldebug_loc180-.Lloclists_table_base0
	.long	.Ldebug_loc181-.Lloclists_table_base0
	.long	.Ldebug_loc182-.Lloclists_table_base0
	.long	.Ldebug_loc183-.Lloclists_table_base0
	.long	.Ldebug_loc184-.Lloclists_table_base0
	.long	.Ldebug_loc185-.Lloclists_table_base0
	.long	.Ldebug_loc186-.Lloclists_table_base0
	.long	.Ldebug_loc187-.Lloclists_table_base0
	.long	.Ldebug_loc188-.Lloclists_table_base0
	.long	.Ldebug_loc189-.Lloclists_table_base0
	.long	.Ldebug_loc190-.Lloclists_table_base0
	.long	.Ldebug_loc191-.Lloclists_table_base0
	.long	.Ldebug_loc192-.Lloclists_table_base0
	.long	.Ldebug_loc193-.Lloclists_table_base0
	.long	.Ldebug_loc194-.Lloclists_table_base0
	.long	.Ldebug_loc195-.Lloclists_table_base0
	.long	.Ldebug_loc196-.Lloclists_table_base0
	.long	.Ldebug_loc197-.Lloclists_table_base0
	.long	.Ldebug_loc198-.Lloclists_table_base0
	.long	.Ldebug_loc199-.Lloclists_table_base0
	.long	.Ldebug_loc200-.Lloclists_table_base0
	.long	.Ldebug_loc201-.Lloclists_table_base0
	.long	.Ldebug_loc202-.Lloclists_table_base0
	.long	.Ldebug_loc203-.Lloclists_table_base0
	.long	.Ldebug_loc204-.Lloclists_table_base0
	.long	.Ldebug_loc205-.Lloclists_table_base0
	.long	.Ldebug_loc206-.Lloclists_table_base0
	.long	.Ldebug_loc207-.Lloclists_table_base0
	.long	.Ldebug_loc208-.Lloclists_table_base0
	.long	.Ldebug_loc209-.Lloclists_table_base0
	.long	.Ldebug_loc210-.Lloclists_table_base0
	.long	.Ldebug_loc211-.Lloclists_table_base0
	.long	.Ldebug_loc212-.Lloclists_table_base0
	.long	.Ldebug_loc213-.Lloclists_table_base0
	.long	.Ldebug_loc214-.Lloclists_table_base0
	.long	.Ldebug_loc215-.Lloclists_table_base0
	.long	.Ldebug_loc216-.Lloclists_table_base0
	.long	.Ldebug_loc217-.Lloclists_table_base0
	.long	.Ldebug_loc218-.Lloclists_table_base0
	.long	.Ldebug_loc219-.Lloclists_table_base0
	.long	.Ldebug_loc220-.Lloclists_table_base0
	.long	.Ldebug_loc221-.Lloclists_table_base0
	.long	.Ldebug_loc222-.Lloclists_table_base0
	.long	.Ldebug_loc223-.Lloclists_table_base0
	.long	.Ldebug_loc224-.Lloclists_table_base0
	.long	.Ldebug_loc225-.Lloclists_table_base0
	.long	.Ldebug_loc226-.Lloclists_table_base0
	.long	.Ldebug_loc227-.Lloclists_table_base0
	.long	.Ldebug_loc228-.Lloclists_table_base0
	.long	.Ldebug_loc229-.Lloclists_table_base0
	.long	.Ldebug_loc230-.Lloclists_table_base0
	.long	.Ldebug_loc231-.Lloclists_table_base0
	.long	.Ldebug_loc232-.Lloclists_table_base0
	.long	.Ldebug_loc233-.Lloclists_table_base0
	.long	.Ldebug_loc234-.Lloclists_table_base0
	.long	.Ldebug_loc235-.Lloclists_table_base0
	.long	.Ldebug_loc236-.Lloclists_table_base0
	.long	.Ldebug_loc237-.Lloclists_table_base0
	.long	.Ldebug_loc238-.Lloclists_table_base0
	.long	.Ldebug_loc239-.Lloclists_table_base0
	.long	.Ldebug_loc240-.Lloclists_table_base0
	.long	.Ldebug_loc241-.Lloclists_table_base0
	.long	.Ldebug_loc242-.Lloclists_table_base0
	.long	.Ldebug_loc243-.Lloclists_table_base0
	.long	.Ldebug_loc244-.Lloclists_table_base0
	.long	.Ldebug_loc245-.Lloclists_table_base0
	.long	.Ldebug_loc246-.Lloclists_table_base0
	.long	.Ldebug_loc247-.Lloclists_table_base0
	.long	.Ldebug_loc248-.Lloclists_table_base0
	.long	.Ldebug_loc249-.Lloclists_table_base0
	.long	.Ldebug_loc250-.Lloclists_table_base0
	.long	.Ldebug_loc251-.Lloclists_table_base0
	.long	.Ldebug_loc252-.Lloclists_table_base0
	.long	.Ldebug_loc253-.Lloclists_table_base0
	.long	.Ldebug_loc254-.Lloclists_table_base0
	.long	.Ldebug_loc255-.Lloclists_table_base0
	.long	.Ldebug_loc256-.Lloclists_table_base0
	.long	.Ldebug_loc257-.Lloclists_table_base0
	.long	.Ldebug_loc258-.Lloclists_table_base0
	.long	.Ldebug_loc259-.Lloclists_table_base0
	.long	.Ldebug_loc260-.Lloclists_table_base0
	.long	.Ldebug_loc261-.Lloclists_table_base0
	.long	.Ldebug_loc262-.Lloclists_table_base0
	.long	.Ldebug_loc263-.Lloclists_table_base0
	.long	.Ldebug_loc264-.Lloclists_table_base0
	.long	.Ldebug_loc265-.Lloclists_table_base0
	.long	.Ldebug_loc266-.Lloclists_table_base0
	.long	.Ldebug_loc267-.Lloclists_table_base0
	.long	.Ldebug_loc268-.Lloclists_table_base0
	.long	.Ldebug_loc269-.Lloclists_table_base0
	.long	.Ldebug_loc270-.Lloclists_table_base0
	.long	.Ldebug_loc271-.Lloclists_table_base0
	.long	.Ldebug_loc272-.Lloclists_table_base0
	.long	.Ldebug_loc273-.Lloclists_table_base0
	.long	.Ldebug_loc274-.Lloclists_table_base0
	.long	.Ldebug_loc275-.Lloclists_table_base0
	.long	.Ldebug_loc276-.Lloclists_table_base0
	.long	.Ldebug_loc277-.Lloclists_table_base0
	.long	.Ldebug_loc278-.Lloclists_table_base0
	.long	.Ldebug_loc279-.Lloclists_table_base0
	.long	.Ldebug_loc280-.Lloclists_table_base0
	.long	.Ldebug_loc281-.Lloclists_table_base0
	.long	.Ldebug_loc282-.Lloclists_table_base0
	.long	.Ldebug_loc283-.Lloclists_table_base0
	.long	.Ldebug_loc284-.Lloclists_table_base0
	.long	.Ldebug_loc285-.Lloclists_table_base0
	.long	.Ldebug_loc286-.Lloclists_table_base0
	.long	.Ldebug_loc287-.Lloclists_table_base0
	.long	.Ldebug_loc288-.Lloclists_table_base0
	.long	.Ldebug_loc289-.Lloclists_table_base0
	.long	.Ldebug_loc290-.Lloclists_table_base0
	.long	.Ldebug_loc291-.Lloclists_table_base0
	.long	.Ldebug_loc292-.Lloclists_table_base0
	.long	.Ldebug_loc293-.Lloclists_table_base0
	.long	.Ldebug_loc294-.Lloclists_table_base0
	.long	.Ldebug_loc295-.Lloclists_table_base0
	.long	.Ldebug_loc296-.Lloclists_table_base0
	.long	.Ldebug_loc297-.Lloclists_table_base0
	.long	.Ldebug_loc298-.Lloclists_table_base0
	.long	.Ldebug_loc299-.Lloclists_table_base0
	.long	.Ldebug_loc300-.Lloclists_table_base0
	.long	.Ldebug_loc301-.Lloclists_table_base0
	.long	.Ldebug_loc302-.Lloclists_table_base0
	.long	.Ldebug_loc303-.Lloclists_table_base0
	.long	.Ldebug_loc304-.Lloclists_table_base0
	.long	.Ldebug_loc305-.Lloclists_table_base0
	.long	.Ldebug_loc306-.Lloclists_table_base0
	.long	.Ldebug_loc307-.Lloclists_table_base0
	.long	.Ldebug_loc308-.Lloclists_table_base0
	.long	.Ldebug_loc309-.Lloclists_table_base0
	.long	.Ldebug_loc310-.Lloclists_table_base0
	.long	.Ldebug_loc311-.Lloclists_table_base0
	.long	.Ldebug_loc312-.Lloclists_table_base0
	.long	.Ldebug_loc313-.Lloclists_table_base0
	.long	.Ldebug_loc314-.Lloclists_table_base0
	.long	.Ldebug_loc315-.Lloclists_table_base0
	.long	.Ldebug_loc316-.Lloclists_table_base0
	.long	.Ldebug_loc317-.Lloclists_table_base0
	.long	.Ldebug_loc318-.Lloclists_table_base0
	.long	.Ldebug_loc319-.Lloclists_table_base0
	.long	.Ldebug_loc320-.Lloclists_table_base0
	.long	.Ldebug_loc321-.Lloclists_table_base0
	.long	.Ldebug_loc322-.Lloclists_table_base0
	.long	.Ldebug_loc323-.Lloclists_table_base0
	.long	.Ldebug_loc324-.Lloclists_table_base0
	.long	.Ldebug_loc325-.Lloclists_table_base0
	.long	.Ldebug_loc326-.Lloclists_table_base0
	.long	.Ldebug_loc327-.Lloclists_table_base0
	.long	.Ldebug_loc328-.Lloclists_table_base0
	.long	.Ldebug_loc329-.Lloclists_table_base0
	.long	.Ldebug_loc330-.Lloclists_table_base0
	.long	.Ldebug_loc331-.Lloclists_table_base0
	.long	.Ldebug_loc332-.Lloclists_table_base0
	.long	.Ldebug_loc333-.Lloclists_table_base0
	.long	.Ldebug_loc334-.Lloclists_table_base0
	.long	.Ldebug_loc335-.Lloclists_table_base0
	.long	.Ldebug_loc336-.Lloclists_table_base0
	.long	.Ldebug_loc337-.Lloclists_table_base0
	.long	.Ldebug_loc338-.Lloclists_table_base0
	.long	.Ldebug_loc339-.Lloclists_table_base0
	.long	.Ldebug_loc340-.Lloclists_table_base0
	.long	.Ldebug_loc341-.Lloclists_table_base0
	.long	.Ldebug_loc342-.Lloclists_table_base0
	.long	.Ldebug_loc343-.Lloclists_table_base0
	.long	.Ldebug_loc344-.Lloclists_table_base0
	.long	.Ldebug_loc345-.Lloclists_table_base0
	.long	.Ldebug_loc346-.Lloclists_table_base0
	.long	.Ldebug_loc347-.Lloclists_table_base0
	.long	.Ldebug_loc348-.Lloclists_table_base0
	.long	.Ldebug_loc349-.Lloclists_table_base0
	.long	.Ldebug_loc350-.Lloclists_table_base0
	.long	.Ldebug_loc351-.Lloclists_table_base0
	.long	.Ldebug_loc352-.Lloclists_table_base0
	.long	.Ldebug_loc353-.Lloclists_table_base0
	.long	.Ldebug_loc354-.Lloclists_table_base0
	.long	.Ldebug_loc355-.Lloclists_table_base0
	.long	.Ldebug_loc356-.Lloclists_table_base0
	.long	.Ldebug_loc357-.Lloclists_table_base0
	.long	.Ldebug_loc358-.Lloclists_table_base0
	.long	.Ldebug_loc359-.Lloclists_table_base0
	.long	.Ldebug_loc360-.Lloclists_table_base0
	.long	.Ldebug_loc361-.Lloclists_table_base0
	.long	.Ldebug_loc362-.Lloclists_table_base0
	.long	.Ldebug_loc363-.Lloclists_table_base0
	.long	.Ldebug_loc364-.Lloclists_table_base0
	.long	.Ldebug_loc365-.Lloclists_table_base0
	.long	.Ldebug_loc366-.Lloclists_table_base0
	.long	.Ldebug_loc367-.Lloclists_table_base0
	.long	.Ldebug_loc368-.Lloclists_table_base0
	.long	.Ldebug_loc369-.Lloclists_table_base0
	.long	.Ldebug_loc370-.Lloclists_table_base0
	.long	.Ldebug_loc371-.Lloclists_table_base0
	.long	.Ldebug_loc372-.Lloclists_table_base0
	.long	.Ldebug_loc373-.Lloclists_table_base0
	.long	.Ldebug_loc374-.Lloclists_table_base0
	.long	.Ldebug_loc375-.Lloclists_table_base0
	.long	.Ldebug_loc376-.Lloclists_table_base0
	.long	.Ldebug_loc377-.Lloclists_table_base0
	.long	.Ldebug_loc378-.Lloclists_table_base0
	.long	.Ldebug_loc379-.Lloclists_table_base0
	.long	.Ldebug_loc380-.Lloclists_table_base0
	.long	.Ldebug_loc381-.Lloclists_table_base0
	.long	.Ldebug_loc382-.Lloclists_table_base0
	.long	.Ldebug_loc383-.Lloclists_table_base0
	.long	.Ldebug_loc384-.Lloclists_table_base0
	.long	.Ldebug_loc385-.Lloclists_table_base0
	.long	.Ldebug_loc386-.Lloclists_table_base0
	.long	.Ldebug_loc387-.Lloclists_table_base0
	.long	.Ldebug_loc388-.Lloclists_table_base0
	.long	.Ldebug_loc389-.Lloclists_table_base0
	.long	.Ldebug_loc390-.Lloclists_table_base0
	.long	.Ldebug_loc391-.Lloclists_table_base0
	.long	.Ldebug_loc392-.Lloclists_table_base0
	.long	.Ldebug_loc393-.Lloclists_table_base0
	.long	.Ldebug_loc394-.Lloclists_table_base0
	.long	.Ldebug_loc395-.Lloclists_table_base0
	.long	.Ldebug_loc396-.Lloclists_table_base0
	.long	.Ldebug_loc397-.Lloclists_table_base0
	.long	.Ldebug_loc398-.Lloclists_table_base0
	.long	.Ldebug_loc399-.Lloclists_table_base0
	.long	.Ldebug_loc400-.Lloclists_table_base0
	.long	.Ldebug_loc401-.Lloclists_table_base0
	.long	.Ldebug_loc402-.Lloclists_table_base0
	.long	.Ldebug_loc403-.Lloclists_table_base0
	.long	.Ldebug_loc404-.Lloclists_table_base0
	.long	.Ldebug_loc405-.Lloclists_table_base0
	.long	.Ldebug_loc406-.Lloclists_table_base0
	.long	.Ldebug_loc407-.Lloclists_table_base0
	.long	.Ldebug_loc408-.Lloclists_table_base0
	.long	.Ldebug_loc409-.Lloclists_table_base0
	.long	.Ldebug_loc410-.Lloclists_table_base0
	.long	.Ldebug_loc411-.Lloclists_table_base0
	.long	.Ldebug_loc412-.Lloclists_table_base0
	.long	.Ldebug_loc413-.Lloclists_table_base0
	.long	.Ldebug_loc414-.Lloclists_table_base0
	.long	.Ldebug_loc415-.Lloclists_table_base0
	.long	.Ldebug_loc416-.Lloclists_table_base0
	.long	.Ldebug_loc417-.Lloclists_table_base0
	.long	.Ldebug_loc418-.Lloclists_table_base0
	.long	.Ldebug_loc419-.Lloclists_table_base0
	.long	.Ldebug_loc420-.Lloclists_table_base0
	.long	.Ldebug_loc421-.Lloclists_table_base0
	.long	.Ldebug_loc422-.Lloclists_table_base0
	.long	.Ldebug_loc423-.Lloclists_table_base0
	.long	.Ldebug_loc424-.Lloclists_table_base0
	.long	.Ldebug_loc425-.Lloclists_table_base0
	.long	.Ldebug_loc426-.Lloclists_table_base0
	.long	.Ldebug_loc427-.Lloclists_table_base0
	.long	.Ldebug_loc428-.Lloclists_table_base0
	.long	.Ldebug_loc429-.Lloclists_table_base0
	.long	.Ldebug_loc430-.Lloclists_table_base0
	.long	.Ldebug_loc431-.Lloclists_table_base0
	.long	.Ldebug_loc432-.Lloclists_table_base0
	.long	.Ldebug_loc433-.Lloclists_table_base0
	.long	.Ldebug_loc434-.Lloclists_table_base0
	.long	.Ldebug_loc435-.Lloclists_table_base0
	.long	.Ldebug_loc436-.Lloclists_table_base0
	.long	.Ldebug_loc437-.Lloclists_table_base0
	.long	.Ldebug_loc438-.Lloclists_table_base0
	.long	.Ldebug_loc439-.Lloclists_table_base0
	.long	.Ldebug_loc440-.Lloclists_table_base0
	.long	.Ldebug_loc441-.Lloclists_table_base0
	.long	.Ldebug_loc442-.Lloclists_table_base0
	.long	.Ldebug_loc443-.Lloclists_table_base0
	.long	.Ldebug_loc444-.Lloclists_table_base0
	.long	.Ldebug_loc445-.Lloclists_table_base0
	.long	.Ldebug_loc446-.Lloclists_table_base0
	.long	.Ldebug_loc447-.Lloclists_table_base0
	.long	.Ldebug_loc448-.Lloclists_table_base0
	.long	.Ldebug_loc449-.Lloclists_table_base0
	.long	.Ldebug_loc450-.Lloclists_table_base0
	.long	.Ldebug_loc451-.Lloclists_table_base0
	.long	.Ldebug_loc452-.Lloclists_table_base0
	.long	.Ldebug_loc453-.Lloclists_table_base0
	.long	.Ldebug_loc454-.Lloclists_table_base0
	.long	.Ldebug_loc455-.Lloclists_table_base0
	.long	.Ldebug_loc456-.Lloclists_table_base0
	.long	.Ldebug_loc457-.Lloclists_table_base0
	.long	.Ldebug_loc458-.Lloclists_table_base0
	.long	.Ldebug_loc459-.Lloclists_table_base0
	.long	.Ldebug_loc460-.Lloclists_table_base0
	.long	.Ldebug_loc461-.Lloclists_table_base0
	.long	.Ldebug_loc462-.Lloclists_table_base0
	.long	.Ldebug_loc463-.Lloclists_table_base0
	.long	.Ldebug_loc464-.Lloclists_table_base0
	.long	.Ldebug_loc465-.Lloclists_table_base0
	.long	.Ldebug_loc466-.Lloclists_table_base0
	.long	.Ldebug_loc467-.Lloclists_table_base0
	.long	.Ldebug_loc468-.Lloclists_table_base0
	.long	.Ldebug_loc469-.Lloclists_table_base0
	.long	.Ldebug_loc470-.Lloclists_table_base0
	.long	.Ldebug_loc471-.Lloclists_table_base0
	.long	.Ldebug_loc472-.Lloclists_table_base0
	.long	.Ldebug_loc473-.Lloclists_table_base0
	.long	.Ldebug_loc474-.Lloclists_table_base0
	.long	.Ldebug_loc475-.Lloclists_table_base0
	.long	.Ldebug_loc476-.Lloclists_table_base0
	.long	.Ldebug_loc477-.Lloclists_table_base0
	.long	.Ldebug_loc478-.Lloclists_table_base0
	.long	.Ldebug_loc479-.Lloclists_table_base0
	.long	.Ldebug_loc480-.Lloclists_table_base0
	.long	.Ldebug_loc481-.Lloclists_table_base0
	.long	.Ldebug_loc482-.Lloclists_table_base0
	.long	.Ldebug_loc483-.Lloclists_table_base0
	.long	.Ldebug_loc484-.Lloclists_table_base0
	.long	.Ldebug_loc485-.Lloclists_table_base0
	.long	.Ldebug_loc486-.Lloclists_table_base0
	.long	.Ldebug_loc487-.Lloclists_table_base0
	.long	.Ldebug_loc488-.Lloclists_table_base0
	.long	.Ldebug_loc489-.Lloclists_table_base0
	.long	.Ldebug_loc490-.Lloclists_table_base0
	.long	.Ldebug_loc491-.Lloclists_table_base0
	.long	.Ldebug_loc492-.Lloclists_table_base0
	.long	.Ldebug_loc493-.Lloclists_table_base0
	.long	.Ldebug_loc494-.Lloclists_table_base0
	.long	.Ldebug_loc495-.Lloclists_table_base0
	.long	.Ldebug_loc496-.Lloclists_table_base0
	.long	.Ldebug_loc497-.Lloclists_table_base0
	.long	.Ldebug_loc498-.Lloclists_table_base0
	.long	.Ldebug_loc499-.Lloclists_table_base0
	.long	.Ldebug_loc500-.Lloclists_table_base0
	.long	.Ldebug_loc501-.Lloclists_table_base0
	.long	.Ldebug_loc502-.Lloclists_table_base0
	.long	.Ldebug_loc503-.Lloclists_table_base0
	.long	.Ldebug_loc504-.Lloclists_table_base0
	.long	.Ldebug_loc505-.Lloclists_table_base0
	.long	.Ldebug_loc506-.Lloclists_table_base0
	.long	.Ldebug_loc507-.Lloclists_table_base0
	.long	.Ldebug_loc508-.Lloclists_table_base0
	.long	.Ldebug_loc509-.Lloclists_table_base0
	.long	.Ldebug_loc510-.Lloclists_table_base0
	.long	.Ldebug_loc511-.Lloclists_table_base0
	.long	.Ldebug_loc512-.Lloclists_table_base0
	.long	.Ldebug_loc513-.Lloclists_table_base0
	.long	.Ldebug_loc514-.Lloclists_table_base0
	.long	.Ldebug_loc515-.Lloclists_table_base0
	.long	.Ldebug_loc516-.Lloclists_table_base0
	.long	.Ldebug_loc517-.Lloclists_table_base0
	.long	.Ldebug_loc518-.Lloclists_table_base0
	.long	.Ldebug_loc519-.Lloclists_table_base0
	.long	.Ldebug_loc520-.Lloclists_table_base0
	.long	.Ldebug_loc521-.Lloclists_table_base0
	.long	.Ldebug_loc522-.Lloclists_table_base0
	.long	.Ldebug_loc523-.Lloclists_table_base0
	.long	.Ldebug_loc524-.Lloclists_table_base0
	.long	.Ldebug_loc525-.Lloclists_table_base0
	.long	.Ldebug_loc526-.Lloclists_table_base0
	.long	.Ldebug_loc527-.Lloclists_table_base0
	.long	.Ldebug_loc528-.Lloclists_table_base0
	.long	.Ldebug_loc529-.Lloclists_table_base0
	.long	.Ldebug_loc530-.Lloclists_table_base0
	.long	.Ldebug_loc531-.Lloclists_table_base0
	.long	.Ldebug_loc532-.Lloclists_table_base0
	.long	.Ldebug_loc533-.Lloclists_table_base0
	.long	.Ldebug_loc534-.Lloclists_table_base0
	.long	.Ldebug_loc535-.Lloclists_table_base0
	.long	.Ldebug_loc536-.Lloclists_table_base0
	.long	.Ldebug_loc537-.Lloclists_table_base0
	.long	.Ldebug_loc538-.Lloclists_table_base0
	.long	.Ldebug_loc539-.Lloclists_table_base0
	.long	.Ldebug_loc540-.Lloclists_table_base0
	.long	.Ldebug_loc541-.Lloclists_table_base0
	.long	.Ldebug_loc542-.Lloclists_table_base0
	.long	.Ldebug_loc543-.Lloclists_table_base0
	.long	.Ldebug_loc544-.Lloclists_table_base0
	.long	.Ldebug_loc545-.Lloclists_table_base0
	.long	.Ldebug_loc546-.Lloclists_table_base0
	.long	.Ldebug_loc547-.Lloclists_table_base0
	.long	.Ldebug_loc548-.Lloclists_table_base0
	.long	.Ldebug_loc549-.Lloclists_table_base0
	.long	.Ldebug_loc550-.Lloclists_table_base0
	.long	.Ldebug_loc551-.Lloclists_table_base0
	.long	.Ldebug_loc552-.Lloclists_table_base0
	.long	.Ldebug_loc553-.Lloclists_table_base0
	.long	.Ldebug_loc554-.Lloclists_table_base0
	.long	.Ldebug_loc555-.Lloclists_table_base0
	.long	.Ldebug_loc556-.Lloclists_table_base0
	.long	.Ldebug_loc557-.Lloclists_table_base0
	.long	.Ldebug_loc558-.Lloclists_table_base0
	.long	.Ldebug_loc559-.Lloclists_table_base0
	.long	.Ldebug_loc560-.Lloclists_table_base0
	.long	.Ldebug_loc561-.Lloclists_table_base0
	.long	.Ldebug_loc562-.Lloclists_table_base0
	.long	.Ldebug_loc563-.Lloclists_table_base0
	.long	.Ldebug_loc564-.Lloclists_table_base0
	.long	.Ldebug_loc565-.Lloclists_table_base0
	.long	.Ldebug_loc566-.Lloclists_table_base0
	.long	.Ldebug_loc567-.Lloclists_table_base0
	.long	.Ldebug_loc568-.Lloclists_table_base0
	.long	.Ldebug_loc569-.Lloclists_table_base0
	.long	.Ldebug_loc570-.Lloclists_table_base0
	.long	.Ldebug_loc571-.Lloclists_table_base0
	.long	.Ldebug_loc572-.Lloclists_table_base0
	.long	.Ldebug_loc573-.Lloclists_table_base0
	.long	.Ldebug_loc574-.Lloclists_table_base0
	.long	.Ldebug_loc575-.Lloclists_table_base0
	.long	.Ldebug_loc576-.Lloclists_table_base0
	.long	.Ldebug_loc577-.Lloclists_table_base0
	.long	.Ldebug_loc578-.Lloclists_table_base0
	.long	.Ldebug_loc579-.Lloclists_table_base0
	.long	.Ldebug_loc580-.Lloclists_table_base0
	.long	.Ldebug_loc581-.Lloclists_table_base0
	.long	.Ldebug_loc582-.Lloclists_table_base0
	.long	.Ldebug_loc583-.Lloclists_table_base0
	.long	.Ldebug_loc584-.Lloclists_table_base0
	.long	.Ldebug_loc585-.Lloclists_table_base0
	.long	.Ldebug_loc586-.Lloclists_table_base0
	.long	.Ldebug_loc587-.Lloclists_table_base0
	.long	.Ldebug_loc588-.Lloclists_table_base0
	.long	.Ldebug_loc589-.Lloclists_table_base0
	.long	.Ldebug_loc590-.Lloclists_table_base0
	.long	.Ldebug_loc591-.Lloclists_table_base0
	.long	.Ldebug_loc592-.Lloclists_table_base0
	.long	.Ldebug_loc593-.Lloclists_table_base0
	.long	.Ldebug_loc594-.Lloclists_table_base0
	.long	.Ldebug_loc595-.Lloclists_table_base0
	.long	.Ldebug_loc596-.Lloclists_table_base0
	.long	.Ldebug_loc597-.Lloclists_table_base0
	.long	.Ldebug_loc598-.Lloclists_table_base0
	.long	.Ldebug_loc599-.Lloclists_table_base0
	.long	.Ldebug_loc600-.Lloclists_table_base0
	.long	.Ldebug_loc601-.Lloclists_table_base0
	.long	.Ldebug_loc602-.Lloclists_table_base0
	.long	.Ldebug_loc603-.Lloclists_table_base0
	.long	.Ldebug_loc604-.Lloclists_table_base0
	.long	.Ldebug_loc605-.Lloclists_table_base0
	.long	.Ldebug_loc606-.Lloclists_table_base0
	.long	.Ldebug_loc607-.Lloclists_table_base0
	.long	.Ldebug_loc608-.Lloclists_table_base0
	.long	.Ldebug_loc609-.Lloclists_table_base0
	.long	.Ldebug_loc610-.Lloclists_table_base0
	.long	.Ldebug_loc611-.Lloclists_table_base0
	.long	.Ldebug_loc612-.Lloclists_table_base0
	.long	.Ldebug_loc613-.Lloclists_table_base0
	.long	.Ldebug_loc614-.Lloclists_table_base0
	.long	.Ldebug_loc615-.Lloclists_table_base0
	.long	.Ldebug_loc616-.Lloclists_table_base0
	.long	.Ldebug_loc617-.Lloclists_table_base0
	.long	.Ldebug_loc618-.Lloclists_table_base0
	.long	.Ldebug_loc619-.Lloclists_table_base0
	.long	.Ldebug_loc620-.Lloclists_table_base0
	.long	.Ldebug_loc621-.Lloclists_table_base0
	.long	.Ldebug_loc622-.Lloclists_table_base0
	.long	.Ldebug_loc623-.Lloclists_table_base0
	.long	.Ldebug_loc624-.Lloclists_table_base0
	.long	.Ldebug_loc625-.Lloclists_table_base0
	.long	.Ldebug_loc626-.Lloclists_table_base0
	.long	.Ldebug_loc627-.Lloclists_table_base0
	.long	.Ldebug_loc628-.Lloclists_table_base0
	.long	.Ldebug_loc629-.Lloclists_table_base0
	.long	.Ldebug_loc630-.Lloclists_table_base0
.Ldebug_loc0:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp8-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp8-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp68-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp68-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp114-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp117-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp117-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc1:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp4-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4-.Lfunc_begin0           #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc2:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp77-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp78-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp114-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc3:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp5-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp5-.Lfunc_begin0           #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 64
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc4:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp6-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp6-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp76-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp78-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp114-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc5:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp3-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3-.Lfunc_begin0           #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc6:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp12-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp12-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp20-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp27-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp30-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp32-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp35-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp36-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp42-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp45-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp50-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp50-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp54-.Lfunc_begin0          #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp54-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp78-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp84-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp88-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp92-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp97-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp98-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp101-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp101-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp103-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp106-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp109-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp109-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp113-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp113-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp114-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp118-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp123-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp127-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp129-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc7:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp12-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp12-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp13-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp13-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp20-.Lfunc_begin0          #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp20-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp27-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp27-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp30-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp30-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp32-.Lfunc_begin0          #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp32-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp35-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp36-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp50-.Lfunc_begin0          #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp50-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp54-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp66-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp68-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp72-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp75-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp78-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp83-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp84-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp87-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp87-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp91-.Lfunc_begin0          #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp91-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp112-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp114-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp118-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp118-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp122-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp123-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp126-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp126-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp129-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp129-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc8:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp14-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp19-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp36-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp37-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp37-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp42-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp45-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp50-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc9:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp54-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp57-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp57-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp62-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc10:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp84-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp92-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp92-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp97-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp98-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp101-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp101-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp103-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp103-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp106-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp106-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp110-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp110-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp112-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc11:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp93-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp94-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp99-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp100-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp102-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp103-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp104-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp105-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp107-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp108-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc12:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp129-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc13:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp130-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp131-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc14:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin1-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp150-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp150-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp209-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp209-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc15:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin1-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp138-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp138-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 88
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc16:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin1-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp148-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp148-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp209-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp209-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc17:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin1-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp137-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp137-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc18:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin1-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp149-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp149-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp209-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	28                              # 28
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp209-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc19:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin1-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp139-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp145-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp151-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp151-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp209-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc20:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp136-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp141-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 192
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp141-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp153-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp153-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp154-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp154-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp172-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp172-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp174-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp175-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp209-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc21:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp136-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp155-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp155-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp160-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp160-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp167-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 64
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp167-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp172-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp172-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp176-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 200
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp176-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp184-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp184-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp191-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp191-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp197-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp197-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp209-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc22:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp147-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp156-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp157-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp161-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp161-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp167-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp167-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp172-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 64
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp172-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp185-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp185-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp191-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp191-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp197-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp197-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp198-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp198-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp209-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc23:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp140-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp155-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp156-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp159-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp160-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp167-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp167-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp172-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp172-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp176-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp176-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp180-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp180-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp181-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp181-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp183-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp184-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp191-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp191-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp196-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp196-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp197-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp207-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp209-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc24:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp140-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp155-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	158                             # DW_OP_implicit_value
	.byte	4                               # 4
	.byte	0                               #  
	.byte	0                               #  
	.byte	0                               #  
	.byte	0                               #  
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp172-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp176-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	158                             # DW_OP_implicit_value
	.byte	4                               # 4
	.byte	0                               #  
	.byte	0                               #  
	.byte	0                               #  
	.byte	0                               #  
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp176-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp182-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp182-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp197-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	148                             # DW_OP_deref_size
	.byte	16                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp197-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp200-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp200-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp202-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	148                             # DW_OP_deref_size
	.byte	16                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp202-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp203-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	98                              # DW_OP_reg18
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp203-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp207-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	148                             # DW_OP_deref_size
	.byte	16                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc25:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp142-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp155-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp155-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp159-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp159-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp172-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp172-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp176-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp176-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp177-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp177-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp207-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp207-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp209-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc26:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp162-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp166-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp186-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp190-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc27:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp212-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp212-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end2-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # super-register DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc28:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp213-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp213-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp215-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp215-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end2-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc29:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin3-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp217-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp217-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end3-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc30:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin3-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp218-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp218-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end3-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc31:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin3-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp219-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp220-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end3-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc32:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp219-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp222-.Lfunc_begin0         #   ending offset
	.byte	16                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp222-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp223-.Lfunc_begin0         #   ending offset
	.byte	19                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc33:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp219-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp220-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp220-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp224-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc34:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp227-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp227-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc35:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp226-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp226-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc36:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp252-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp252-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp254-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp254-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	9                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc37:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp252-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp252-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp253-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc38:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp231-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp231-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp235-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp235-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp239-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp239-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp243-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp243-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp247-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp247-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp251-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp251-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp252-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp252-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp254-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp254-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc39:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp226-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp228-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp232-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp232-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp236-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp236-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp240-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp240-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp244-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp244-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp248-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp248-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp252-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp252-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp254-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp254-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc40:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp226-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp228-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp228-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp231-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp231-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp232-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp232-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp235-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp235-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp236-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp236-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp239-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp239-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp240-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp240-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp243-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp243-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp244-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp244-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp247-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp247-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp248-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp248-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp251-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp251-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp254-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp254-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc41:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin5-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp257-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp257-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc42:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin5-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp256-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp256-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc43:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin5-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp314-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp314-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp316-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp316-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	9                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc44:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin5-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp314-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp314-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp315-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc45:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin5-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp261-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp261-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp265-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp265-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp269-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp269-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp273-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp273-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp277-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp277-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp281-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp281-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp285-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp285-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp289-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp289-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp293-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp293-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp297-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp297-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp301-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	10                              # 10
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp301-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp305-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp305-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp309-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp309-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp313-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	13                              # 13
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp313-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp314-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	14                              # 14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp314-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp316-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp316-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc46:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin5-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp256-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp258-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp262-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp262-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp266-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp266-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp270-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp270-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp274-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp274-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp278-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp278-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp282-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp282-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp286-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp286-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp290-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp290-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp294-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp294-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp298-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp298-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp302-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp302-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp306-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp306-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp310-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp310-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp314-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp314-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp316-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp316-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc47:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp256-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp258-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp258-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp261-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp261-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp262-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp262-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp265-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp265-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp266-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp266-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp269-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp269-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp270-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp270-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp273-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp273-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp274-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp274-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp277-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp277-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp278-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp278-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp281-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp281-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp282-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp282-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp285-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp285-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp286-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp286-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp289-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp289-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp290-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp290-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp293-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp293-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp294-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp294-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp297-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp297-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp298-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp298-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp301-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp301-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp302-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp302-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp305-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp305-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp306-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp306-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp309-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp309-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp310-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp310-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp313-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp313-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp316-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp316-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc48:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin6-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp319-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp319-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end6-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc49:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin6-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp318-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp318-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end6-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc50:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin6-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp344-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp344-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp346-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp346-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end6-.Lfunc_begin0      #   ending offset
	.byte	9                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc51:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin6-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp344-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp344-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp345-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc52:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin6-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp323-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp323-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp327-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp327-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp331-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp331-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp335-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp335-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp339-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp339-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp343-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp343-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp344-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp344-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp346-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp346-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end6-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc53:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin6-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp318-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp320-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp324-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp324-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp328-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp328-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp332-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp332-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp336-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp336-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp340-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp340-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp344-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp344-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp346-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp346-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end6-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc54:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp318-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp320-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp320-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp323-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp323-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp324-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp324-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp327-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp327-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp328-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp328-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp331-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp331-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp332-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp332-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp335-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp335-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp336-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp336-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp339-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp339-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp340-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp340-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp343-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp343-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp346-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp346-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end6-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc55:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin7-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp349-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp349-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp355-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp355-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp357-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc56:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin7-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp349-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp349-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc57:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin7-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp350-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp350-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp355-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp355-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp356-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc58:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin7-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp348-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp348-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc59:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin7-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp348-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp358-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc60:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin7-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp350-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp350-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp355-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp355-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp358-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp358-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc61:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp350-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp351-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp351-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp355-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp355-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp358-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp358-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc62:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin8-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp360-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp373-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp384-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc63:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin8-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp361-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp363-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp373-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc64:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin8-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp361-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp361-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end8-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc65:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin8-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp360-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp385-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end8-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc66:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin8-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp361-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp361-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp385-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp385-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end8-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc67:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp361-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp385-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp385-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end8-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc68:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin9-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp388-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp388-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp391-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp391-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp392-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp392-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp393-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc69:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin9-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp388-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp388-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc70:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin9-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp389-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp389-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp392-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp392-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp394-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp394-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	9                               # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc71:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin9-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp387-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp387-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc72:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin9-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp387-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp394-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc73:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin9-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp389-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp389-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp392-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp392-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp394-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp394-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc74:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp389-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp392-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp392-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp394-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp394-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc75:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin10-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp400-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp400-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp404-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp404-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end10-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc76:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin10-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp398-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp398-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp400-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp400-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end10-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc77:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin10-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp396-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp396-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp406-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp406-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end10-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc78:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin10-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp399-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp399-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp405-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp405-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end10-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc79:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin10-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp400-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp400-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp407-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp407-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end10-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc80:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin10-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp400-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp400-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp403-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp403-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end10-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc81:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin11-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp413-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp413-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp417-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp417-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end11-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc82:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin11-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp411-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp411-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp413-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp413-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end11-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc83:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin11-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp409-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp409-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp419-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp419-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end11-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc84:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin11-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp412-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp412-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp418-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp418-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end11-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc85:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin11-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp413-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp413-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp420-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp420-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end11-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc86:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin11-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp413-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp413-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp416-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp416-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end11-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc87:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin12-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp425-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp425-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end12-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc88:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin12-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp457-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp457-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end12-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc89:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin12-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp489-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp489-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end12-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc90:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin12-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp423-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp423-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end12-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc91:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin12-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp424-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc92:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin12-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp452-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc93:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin12-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp423-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc94:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp424-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp426-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp426-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp428-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp428-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp430-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp430-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp432-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp432-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp434-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp434-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp436-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp436-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp438-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp438-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp440-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp440-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp442-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp442-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp444-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp444-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp446-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp446-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp448-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp448-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp450-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp450-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp452-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp452-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp453-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp453-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp455-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc95:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin12-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp425-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp425-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp427-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp427-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp429-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp429-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp431-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp431-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp433-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp433-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp435-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp435-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp437-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp437-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp439-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp439-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp441-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp441-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp443-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp443-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp445-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	10                              # 10
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp445-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp447-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp447-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp449-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp449-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp451-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	13                              # 13
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp451-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp452-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	14                              # 14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp452-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp453-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp453-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end12-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc96:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp422-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp424-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp424-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp425-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp425-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp426-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp426-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp427-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp427-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp428-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp428-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp429-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp429-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp430-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp430-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp431-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp431-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp432-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp432-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp433-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp433-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp434-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp434-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp435-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp435-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp436-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp436-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp437-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp437-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp438-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp438-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp439-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp439-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp440-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp440-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp441-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp441-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp442-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp442-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp443-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp443-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp444-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp444-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp445-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp445-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp446-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp446-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp447-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp447-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp448-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp448-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp449-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp449-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp450-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp450-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp451-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp451-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp453-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp453-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end12-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc97:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp457-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp457-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp459-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp459-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp461-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp461-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp463-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp463-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp465-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp465-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp467-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp467-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp469-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp469-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp471-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp471-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp473-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp473-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp475-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp475-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp477-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	10                              # 10
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp477-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp479-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp479-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp481-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp481-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp483-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	13                              # 13
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp483-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp484-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	14                              # 14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp484-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp485-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp485-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end12-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc98:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp456-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc99:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp484-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc100:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp456-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp456-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp457-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp457-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp458-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp458-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp459-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp459-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp460-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp460-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp461-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp461-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp462-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp462-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp463-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp463-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp464-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp464-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp465-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp465-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp466-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp466-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp467-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp467-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp468-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp468-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp469-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp469-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp470-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp470-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp471-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp471-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp472-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp472-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp473-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp473-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp474-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp474-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp475-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp475-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp476-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp476-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp477-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp477-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp478-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp478-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp479-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp479-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp480-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp480-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp481-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp481-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp482-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp482-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp483-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp483-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp485-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp485-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end12-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc101:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp456-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp457-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp458-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp460-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp460-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp462-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp462-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp464-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp464-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp466-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp466-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp468-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp468-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp470-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp470-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp472-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp472-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp474-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp474-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp476-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp476-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp478-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp478-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp480-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp480-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp482-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp482-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp484-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp484-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp485-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp485-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp487-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc102:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp486-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp489-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp489-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp491-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp491-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp493-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp493-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp495-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp495-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp497-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp497-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp499-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp499-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp501-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp501-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp503-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp503-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp505-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp505-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp507-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp507-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp509-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	10                              # 10
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp509-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp511-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp511-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp513-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp513-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp515-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	13                              # 13
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp515-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp516-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	14                              # 14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp516-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp517-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp517-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end12-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc103:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp486-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp488-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc104:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp486-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp516-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc105:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp486-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp488-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp488-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp489-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp489-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp490-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp490-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp491-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp491-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp492-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp492-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp493-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp493-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp494-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp494-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp495-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp495-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp496-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp496-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp497-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp497-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp498-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp498-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp499-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp499-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp500-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp500-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp501-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp501-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp502-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp502-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp503-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp503-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp504-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp504-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp505-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp505-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp506-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp506-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp507-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp507-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp508-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp508-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp509-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp509-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp510-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp510-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp511-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp511-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp512-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp512-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp513-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp513-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp514-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp514-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp515-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp515-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp517-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp517-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end12-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc106:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp488-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp489-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp490-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp492-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp492-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp494-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp494-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp496-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp496-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp498-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp498-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp500-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp500-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp502-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp502-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp504-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp504-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp506-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp506-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp508-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp508-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp510-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp510-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp512-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp512-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp514-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp514-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp516-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp516-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp517-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp517-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end12-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc107:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin13-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp522-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp522-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end13-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc108:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin13-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp538-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp538-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end13-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc109:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin13-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp554-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp554-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end13-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc110:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin13-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp520-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp520-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end13-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc111:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin13-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp521-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc112:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin13-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp533-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc113:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin13-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp520-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc114:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp521-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp523-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp523-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp525-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp525-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp527-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp527-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp529-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp529-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp531-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp531-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp533-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp533-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp534-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp536-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc115:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin13-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp522-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp522-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp524-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp524-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp526-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp526-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp528-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp528-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp530-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp530-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp532-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp532-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp533-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp533-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp534-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end13-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc116:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp519-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp521-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp521-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp522-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp522-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp523-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp523-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp524-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp524-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp525-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp525-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp526-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp526-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp527-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp527-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp528-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp528-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp529-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp529-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp530-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp530-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp531-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp531-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp532-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp532-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp534-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp534-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end13-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc117:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp535-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp538-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp538-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp540-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp540-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp542-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp542-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp544-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp544-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp546-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp546-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp548-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp548-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp549-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp549-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp550-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp550-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end13-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc118:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp535-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp537-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc119:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp535-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp549-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc120:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp535-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp537-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp537-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp538-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp538-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp539-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp539-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp540-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp540-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp541-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp542-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp542-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp543-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp543-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp544-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp544-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp545-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp545-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp546-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp546-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp547-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp547-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp548-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp548-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp550-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp550-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end13-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc121:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp537-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp538-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp539-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp541-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp543-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp543-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp545-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp545-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp547-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp547-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp549-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp549-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp550-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp550-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp552-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc122:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp551-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp554-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp554-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp556-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp556-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp558-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp558-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp560-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp560-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp562-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp562-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp564-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp564-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp565-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp565-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp566-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp566-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end13-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc123:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp551-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp553-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc124:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp551-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp565-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc125:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp551-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp553-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp553-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp554-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp554-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp555-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp555-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp556-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp556-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp557-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp557-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp558-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp558-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp559-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp559-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp560-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp560-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp561-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp561-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp562-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp562-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp563-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp563-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp564-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp564-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp566-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp566-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end13-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc126:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp553-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp554-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp555-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp557-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp557-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp559-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp559-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp561-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp561-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp563-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp563-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp565-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp565-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp566-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp566-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end13-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc127:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin14-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp572-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp572-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp576-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp576-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end14-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc128:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin14-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp570-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp570-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp572-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp572-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end14-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc129:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin14-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp568-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp568-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp578-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp578-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end14-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc130:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin14-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp571-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp571-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp577-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp577-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end14-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc131:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin14-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp572-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp572-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp579-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp579-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end14-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc132:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin14-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp572-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp572-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp575-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp575-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end14-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc133:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin15-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp585-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp585-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp589-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp589-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end15-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc134:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin15-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp583-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp583-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp585-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp585-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end15-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc135:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin15-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp581-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp581-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp591-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp591-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end15-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc136:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin15-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp584-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp584-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp590-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp590-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end15-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc137:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin15-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp585-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp585-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp592-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp592-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end15-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc138:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin15-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp585-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp585-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp588-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp588-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end15-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc139:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin16-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp605-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp605-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end16-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc140:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin16-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp627-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp627-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end16-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc141:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin16-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp649-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp649-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end16-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc142:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin16-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp596-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp596-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end16-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc143:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin16-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp600-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp600-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp606-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp606-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp611-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	32                              # 32
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp611-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp616-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	48                              # 48
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp616-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end16-.Lfunc_begin0     #   ending offset
	.byte	5                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	48                              # 48
	.byte	64                              # DW_OP_lit16
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc144:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin16-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp600-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp604-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp606-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp609-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp611-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp611-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp615-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc145:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin16-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp596-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc146:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp594-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp597-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp597-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp598-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp598-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp599-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp600-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp601-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp602-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp603-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp607-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp608-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp611-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp612-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp614-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp616-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp616-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp618-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc147:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp594-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp600-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp600-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp606-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp606-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp611-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp611-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp616-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp616-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end16-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc148:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp595-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp597-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp597-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp598-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp598-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp599-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp599-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp600-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp600-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp601-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp601-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp602-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp602-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp603-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp603-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp606-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp606-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp607-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp607-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp608-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp608-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp610-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp610-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp611-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp611-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp612-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp612-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp613-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp613-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp614-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp614-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp616-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp616-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end16-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc149:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp617-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp622-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp622-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp628-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp628-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp633-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp638-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp638-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end16-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc150:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp617-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp622-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp622-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp628-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp628-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	32                              # 32
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp633-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp638-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	48                              # 48
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp638-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end16-.Lfunc_begin0     #   ending offset
	.byte	5                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	48                              # 48
	.byte	64                              # DW_OP_lit16
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc151:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp617-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp622-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp626-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp628-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp631-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp633-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp637-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc152:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp617-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp619-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp619-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp620-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp620-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp621-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp621-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp622-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp622-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp623-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp623-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp624-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp624-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp625-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp625-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp628-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp628-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp629-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp629-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp630-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp630-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp632-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp632-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp633-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp634-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp634-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp635-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp635-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp636-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp636-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp638-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp638-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end16-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc153:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp617-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp619-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp619-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp620-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp620-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp621-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp622-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp623-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp624-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp625-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp629-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp630-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp633-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp634-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp636-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp638-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp638-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp640-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc154:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp639-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp644-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp644-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp650-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp650-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp655-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp655-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp660-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp660-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end16-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc155:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp639-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp644-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp644-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp650-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp650-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp655-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	32                              # 32
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp655-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp660-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	48                              # 48
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp660-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end16-.Lfunc_begin0     #   ending offset
	.byte	5                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	48                              # 48
	.byte	64                              # DW_OP_lit16
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc156:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp639-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp644-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp648-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp650-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp653-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp655-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp655-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp659-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc157:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp639-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp641-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp641-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp642-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp642-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp643-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp643-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp644-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp644-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp645-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp645-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp646-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp646-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp647-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp647-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp650-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp650-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp651-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp651-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp652-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp652-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp654-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp654-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp655-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp655-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp656-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp656-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp657-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp657-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp658-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp658-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp660-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp660-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end16-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc158:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp639-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp641-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp641-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp642-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp642-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp643-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp644-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp645-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp646-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp647-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp651-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp652-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp655-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp656-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp658-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp660-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp660-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end16-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc159:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin17-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp667-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp667-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp673-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp673-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end17-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc160:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin17-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp665-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp665-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp667-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp667-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end17-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc161:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin17-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp663-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp663-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp672-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp672-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end17-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc162:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin17-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp666-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp666-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp675-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp675-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end17-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc163:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin17-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp667-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp667-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp674-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp674-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end17-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc164:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin17-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp667-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp667-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp671-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp671-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end17-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # super-register DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc165:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin18-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp682-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp682-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp688-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp688-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end18-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc166:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin18-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp680-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp680-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp682-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp682-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end18-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc167:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin18-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp678-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp678-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp687-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp687-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end18-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc168:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin18-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp681-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp681-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp690-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp690-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end18-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc169:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin18-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp682-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp682-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp689-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp689-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end18-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc170:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin18-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp682-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp682-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp686-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp686-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end18-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # super-register DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc171:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin19-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp695-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp695-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end19-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc172:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin19-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp728-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp728-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end19-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc173:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin19-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp761-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp761-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end19-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc174:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin19-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp794-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp794-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end19-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc175:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin19-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp693-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp693-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end19-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # super-register DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc176:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp695-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp723-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc177:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp693-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp694-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp694-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp695-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp695-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp696-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp696-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp697-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp697-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp698-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp698-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp699-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp699-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp700-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp700-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp701-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp701-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp702-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp702-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp703-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp703-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp704-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp704-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp705-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp705-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp706-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp706-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp707-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp707-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp708-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp708-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp709-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp709-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp710-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp710-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp711-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp711-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp712-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp712-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp713-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp713-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp714-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp714-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp715-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp715-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp716-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp716-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp717-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp717-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp718-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp718-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp719-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp719-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp720-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp720-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp721-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp721-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end19-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc178:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp692-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp695-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp695-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp697-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp697-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp699-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp699-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp701-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp701-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp703-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp703-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp705-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp705-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp707-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp707-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp709-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp709-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp711-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp711-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp713-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp713-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp715-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	10                              # 10
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp715-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp717-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp717-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp719-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp719-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp721-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	13                              # 13
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp721-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp722-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	14                              # 14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp722-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end19-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc179:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp725-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp727-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp727-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp728-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp728-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp729-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp729-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp730-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp730-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp731-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp731-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp732-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp732-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp733-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp733-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp734-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp734-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp735-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp735-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp736-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp736-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp737-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp737-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp738-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp738-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp739-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp739-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp740-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp740-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp741-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp741-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp742-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp742-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp743-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp743-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp744-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp744-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp745-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp745-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp746-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp746-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp747-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp747-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp748-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp748-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp749-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp749-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp750-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp750-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp751-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp751-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp752-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp752-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp753-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp753-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp754-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp754-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end19-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc180:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp725-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp756-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc181:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp725-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp728-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp728-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp730-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp730-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp732-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp732-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp734-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp734-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp736-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp736-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp738-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp738-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp740-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp740-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp742-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp742-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp744-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp744-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp746-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp746-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp748-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	10                              # 10
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp748-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp750-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp750-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp752-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp752-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp754-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	13                              # 13
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp754-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp755-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	14                              # 14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp755-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end19-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc182:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp758-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp760-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp760-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp761-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp761-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp762-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp762-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp763-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp763-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp764-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp764-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp765-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp765-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp766-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp766-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp767-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp767-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp768-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp768-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp769-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp769-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp770-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp770-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp771-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp771-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp772-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp772-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp773-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp773-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp774-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp774-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp775-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp775-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp776-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp776-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp777-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp777-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp778-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp778-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp779-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp779-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp780-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp780-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp781-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp781-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp782-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp782-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp783-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp783-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp784-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp784-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp785-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp785-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp786-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp786-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp787-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp787-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end19-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc183:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp758-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp789-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc184:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp758-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp761-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp761-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp763-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp763-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp765-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp765-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp767-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp767-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp769-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp769-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp771-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp771-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp773-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp773-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp775-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp775-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp777-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp777-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp779-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp779-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp781-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	10                              # 10
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp781-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp783-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp783-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp785-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp785-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp787-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	13                              # 13
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp787-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp788-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	14                              # 14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp788-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end19-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc185:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp692-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp793-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc186:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp694-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp696-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp696-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp698-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp698-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp700-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp700-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp702-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp702-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp704-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp704-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp706-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp706-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp708-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp708-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp710-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp710-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp712-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp712-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp714-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp714-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp716-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp716-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp718-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp718-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp720-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp720-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp722-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp722-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp724-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp724-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp726-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc187:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp727-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp728-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp729-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp731-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp731-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp733-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp733-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp735-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp735-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp737-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp737-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp739-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp739-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp741-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp741-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp743-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp743-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp745-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp745-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp747-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp747-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp749-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp749-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp751-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp751-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp753-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp753-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp755-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp755-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp757-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp757-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp759-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc188:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp760-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp761-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp762-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp764-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp764-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp766-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp766-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp768-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp768-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp770-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp770-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp772-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp772-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp774-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp774-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp776-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp776-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp778-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp778-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp780-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp780-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp782-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp782-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp784-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp784-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp786-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp786-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp788-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp788-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp790-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp790-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp792-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc189:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp791-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp794-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp794-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp796-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp796-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp798-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp798-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp800-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp800-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp802-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp802-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp804-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp804-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp806-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp806-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp808-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp808-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp810-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp810-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp812-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp812-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp814-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	10                              # 10
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp814-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp816-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp816-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp818-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp818-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp820-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	13                              # 13
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp820-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp821-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	14                              # 14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp821-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp822-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp822-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end19-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc190:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp791-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp821-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc191:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp791-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp793-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp793-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp794-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp794-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp795-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp795-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp796-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp796-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp797-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp797-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp798-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp798-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp799-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp800-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp800-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp801-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp801-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp802-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp802-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp803-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp803-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp804-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp804-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp805-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp805-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp806-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp806-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp807-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp807-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp808-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp808-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp809-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp809-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp810-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp810-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp811-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp811-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp812-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp812-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp813-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp813-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp814-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp814-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp815-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp815-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp816-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp816-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp817-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp817-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp818-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp818-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp819-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp819-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp820-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp820-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp822-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp822-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end19-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc192:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp793-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp794-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp795-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp797-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp797-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp799-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp801-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp801-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp803-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp803-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp805-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp805-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp807-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp807-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp809-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp809-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp811-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp811-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp813-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp813-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp815-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp815-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp817-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp817-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp819-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp819-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp821-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp821-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp822-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp822-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end19-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc193:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin20-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp827-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp827-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end20-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc194:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin20-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp844-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp844-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end20-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc195:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin20-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp861-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp861-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end20-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc196:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin20-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp878-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp878-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end20-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc197:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin20-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp825-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp825-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end20-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # super-register DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc198:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp827-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp839-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc199:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp825-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp826-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp826-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp827-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp827-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp828-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp828-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp829-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp829-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp830-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp830-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp831-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp831-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp832-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp832-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp833-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp833-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp834-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp834-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp835-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp835-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp836-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp836-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp837-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp837-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end20-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc200:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp824-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp827-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp827-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp829-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp829-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp831-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp831-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp833-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp833-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp835-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp835-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp837-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp837-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp838-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp838-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end20-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc201:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp841-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp843-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp843-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp844-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp844-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp845-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp845-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp846-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp846-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp847-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp847-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp848-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp848-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp849-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp849-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp850-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp850-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp851-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp851-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp852-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp852-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp853-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp853-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp854-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp854-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end20-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc202:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp841-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp856-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc203:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp841-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp844-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp844-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp846-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp846-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp848-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp848-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp850-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp850-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp852-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp852-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp854-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp854-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp855-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp855-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end20-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc204:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp858-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp860-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp860-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp861-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp861-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp862-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp862-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp863-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp863-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp864-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp864-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp865-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp865-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp866-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp866-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp867-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp867-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp868-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp868-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp869-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp869-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp870-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp870-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp871-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp871-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end20-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc205:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp858-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp873-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc206:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp858-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp861-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp861-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp863-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp863-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp865-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp865-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp867-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp867-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp869-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp869-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp871-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp871-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp872-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp872-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end20-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc207:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp824-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp877-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc208:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp826-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp828-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp828-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp830-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp830-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp832-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp832-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp834-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp834-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp836-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp836-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp838-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp838-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp840-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp840-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp842-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc209:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp843-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp844-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp845-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp847-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp847-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp849-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp849-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp851-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp851-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp853-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp853-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp855-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp855-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp857-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp857-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp859-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc210:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp860-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp861-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp862-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp864-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp864-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp866-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp866-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp868-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp868-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp870-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp870-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp872-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp872-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp874-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp874-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp876-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc211:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp875-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp878-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp878-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp880-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp880-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp882-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp882-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp884-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp884-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp886-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp886-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp888-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp888-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp889-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp889-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp890-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp890-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end20-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc212:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp875-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp889-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc213:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp875-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp877-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp877-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp878-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp878-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp879-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp879-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp880-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp880-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp881-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp881-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp882-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp882-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp883-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp883-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp884-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp884-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp885-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp885-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp886-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp886-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp887-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp887-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp888-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp888-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp890-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp890-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end20-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc214:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp877-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp878-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp879-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp881-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp881-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp883-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp883-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp885-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp885-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp887-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp887-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp889-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp889-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp890-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp890-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end20-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc215:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin21-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp897-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp897-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp903-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp903-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end21-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc216:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin21-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp895-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp895-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp897-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp897-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end21-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc217:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin21-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp893-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp893-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp902-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp902-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end21-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc218:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin21-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp896-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp896-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp905-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp905-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end21-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc219:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin21-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp897-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp897-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp904-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp904-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end21-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc220:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin21-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp897-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp897-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp901-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp901-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end21-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # super-register DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc221:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin22-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp912-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp912-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp918-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp918-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end22-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc222:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin22-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp910-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp910-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp912-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp912-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end22-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc223:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin22-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp908-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp908-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp917-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp917-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end22-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc224:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin22-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp911-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp911-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp920-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp920-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end22-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc225:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin22-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp912-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp912-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp919-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp919-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end22-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc226:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin22-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp912-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp912-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp916-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp916-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end22-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # super-register DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc227:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin23-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp933-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp933-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end23-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc228:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin23-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp956-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp956-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end23-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc229:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin23-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp978-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp978-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end23-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc230:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin23-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1000-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1000-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end23-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc231:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin23-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp924-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp924-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end23-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # super-register DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc232:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp932-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp934-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp937-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp939-.Lfunc_begin0         #   ending offset
	.byte	9                               # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp939-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp943-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc233:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin23-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp924-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc234:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp946-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp948-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp948-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp949-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp949-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp950-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp950-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp951-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp951-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp952-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp952-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp953-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp953-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp954-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp954-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp957-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp957-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp958-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp958-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp959-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp959-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp961-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp961-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp962-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp962-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp963-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp963-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp964-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp964-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp965-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp965-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end23-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc235:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp946-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp951-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp951-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp957-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp957-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp962-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp962-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end23-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc236:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp946-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp951-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp955-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp957-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp960-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp962-.Lfunc_begin0         #   ending offset
	.byte	9                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp962-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp966-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc237:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp968-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp970-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp970-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp971-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp971-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp972-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp972-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp973-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp973-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp974-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp974-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp975-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp975-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp976-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp976-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp979-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp979-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp980-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp980-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp981-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp981-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp983-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp983-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp984-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp984-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp985-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp985-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp986-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp986-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp987-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp987-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end23-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc238:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp968-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp973-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp973-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp979-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp979-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp984-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp984-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end23-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc239:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp968-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp973-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp977-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp979-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp982-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp984-.Lfunc_begin0         #   ending offset
	.byte	9                               # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp984-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp988-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc240:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp923-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp925-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp925-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp926-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp926-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp927-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp927-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp928-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp928-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp929-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp929-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp930-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp930-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp931-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp931-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp934-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp934-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp935-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp935-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp936-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp936-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp938-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp938-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp939-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp939-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp940-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp940-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp941-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp941-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp942-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp942-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp944-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp944-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end23-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc241:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp922-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp925-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp925-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp926-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp926-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp927-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp928-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp929-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp930-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp931-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp935-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp936-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp939-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp940-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp942-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp945-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp945-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp947-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc242:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp922-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp928-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp928-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp934-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp934-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp939-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp939-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp944-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp944-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end23-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc243:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp946-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp948-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp948-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp949-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp949-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp950-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp951-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp952-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp953-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp954-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp958-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp959-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp962-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp963-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp965-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp967-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp967-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp969-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc244:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp968-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp970-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp970-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp971-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp971-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp972-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp973-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp974-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp975-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp976-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp980-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp981-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp984-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp985-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp987-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp989-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp989-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp991-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc245:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp990-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp995-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp995-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1001-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1001-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1006-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1006-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end23-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc246:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp990-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp995-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp999-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1001-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1004-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1006-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1006-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1010-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc247:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp990-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp992-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp992-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp993-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp993-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp994-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp994-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp995-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp995-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp996-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp996-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp997-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp997-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp998-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp998-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1001-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1001-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1002-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1002-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1003-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1003-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1005-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1005-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1006-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1006-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1007-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1007-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1008-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1008-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1009-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1009-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end23-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc248:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp990-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp992-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp992-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp993-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp993-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp994-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp995-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp996-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp997-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp998-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1002-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1003-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1006-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1007-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1009-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end23-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc249:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin24-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1013-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1013-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end24-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc250:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin24-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end24-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc251:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin24-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1015-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1016-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end24-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc252:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1015-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1018-.Lfunc_begin0        #   ending offset
	.byte	16                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1018-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1019-.Lfunc_begin0        #   ending offset
	.byte	19                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc253:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1015-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1016-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1016-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1020-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc254:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin25-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1022-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1022-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end25-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc255:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin25-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1023-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1023-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end25-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc256:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin25-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1024-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1025-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end25-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc257:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1024-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1027-.Lfunc_begin0        #   ending offset
	.byte	16                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1027-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1028-.Lfunc_begin0        #   ending offset
	.byte	19                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc258:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1024-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1025-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1025-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1029-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc259:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin26-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1031-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1031-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end26-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc260:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin26-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1032-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1032-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end26-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc261:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin26-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1033-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1034-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end26-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc262:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1033-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1036-.Lfunc_begin0        #   ending offset
	.byte	16                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1036-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1037-.Lfunc_begin0        #   ending offset
	.byte	19                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc263:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1033-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1034-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1034-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1038-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc264:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin27-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end27-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc265:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin27-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1040-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1040-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end27-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc266:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin27-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1066-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1066-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1068-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1068-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end27-.Lfunc_begin0     #   ending offset
	.byte	9                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc267:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin27-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1066-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1066-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1067-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc268:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin27-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1045-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1045-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1049-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1049-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1053-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1053-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1057-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1057-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1061-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1061-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1065-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1065-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1066-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1066-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1068-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1068-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end27-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc269:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin27-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1040-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1042-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1046-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1046-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1050-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1050-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1054-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1054-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1058-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1058-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1062-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1062-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1066-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1066-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1068-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1068-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end27-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc270:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1040-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1042-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1042-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1045-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1045-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1046-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1046-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1049-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1049-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1050-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1050-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1053-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1053-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1054-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1054-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1057-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1057-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1058-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1058-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1061-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1061-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1062-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1062-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1065-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1065-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1068-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1068-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end27-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc271:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin28-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1079-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1079-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1080-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc272:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin28-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1079-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1079-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1081-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc273:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin28-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1070-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1070-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end28-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc274:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin28-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1070-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1082-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end28-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc275:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin28-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1074-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1074-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1078-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1078-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1079-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1079-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1082-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1082-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end28-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc276:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1070-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1074-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1074-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1075-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1075-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1078-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1078-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1082-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1082-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end28-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc277:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin29-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1110-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1110-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1113-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc278:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin29-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1084-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1084-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end29-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc279:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin29-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1110-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1110-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1112-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc280:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin29-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1111-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1111-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end29-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc281:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin29-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1085-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1115-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end29-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc282:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin29-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1089-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1089-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1093-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1093-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1097-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1097-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1101-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1101-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1105-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1105-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1109-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1109-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1110-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1110-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1115-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1115-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end29-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc283:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1085-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1086-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1086-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1089-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1089-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1090-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1090-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1093-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1093-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1094-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1094-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1097-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1097-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1098-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1098-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1101-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1101-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1102-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1102-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1105-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1105-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1106-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1106-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1109-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1109-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1114-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1114-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end29-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc284:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin30-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1127-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1127-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1130-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1130-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end30-.Lfunc_begin0     #   ending offset
	.byte	9                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc285:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin30-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1117-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1117-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end30-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc286:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin30-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1127-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1127-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1128-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc287:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin30-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1129-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1129-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end30-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc288:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin30-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1118-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1130-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end30-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc289:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin30-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1122-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1122-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1126-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1126-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1127-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1127-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1130-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1130-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end30-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc290:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1118-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1122-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1122-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1126-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1126-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1130-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1130-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end30-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc291:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin31-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1133-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1133-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1152-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1152-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end31-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc292:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin31-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1133-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1133-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1153-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1153-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end31-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc293:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin31-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1133-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1133-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1154-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1154-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end31-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc294:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin31-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1133-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1133-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1151-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1151-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end31-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc295:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1150-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end31-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc296:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin32-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1157-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1157-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1166-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1166-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end32-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc297:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin32-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1157-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1157-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1167-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1167-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end32-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc298:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin32-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1157-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1157-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end32-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc299:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin32-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1157-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1157-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1165-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1165-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end32-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc300:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1164-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end32-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc301:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin33-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1180-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1180-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end33-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc302:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin33-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1181-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1181-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end33-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc303:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin33-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1182-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1182-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end33-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc304:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin33-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1179-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1179-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end33-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc305:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1178-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end33-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc306:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin34-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1185-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1185-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end34-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc307:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin34-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1185-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1185-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1191-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1191-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end34-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc308:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin34-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1185-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1185-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1190-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1190-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end34-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc309:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin34-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1185-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1185-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1188-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1188-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end34-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc310:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1187-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end34-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc311:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin35-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1211-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1211-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1228-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1244-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1250-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc312:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin35-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1197-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1197-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end35-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc313:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin35-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1212-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1212-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1228-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1245-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1258-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc314:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin35-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1195-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1195-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end35-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc315:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1193-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1286-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1286-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1313-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1368-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end35-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc316:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1193-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1210-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1210-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1228-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1228-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1243-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1243-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1259-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1259-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end35-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc317:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1196-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1202-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1214-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1219-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1231-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1236-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1247-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1253-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1265-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1272-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1294-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1300-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1320-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1328-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1346-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1353-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc318:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1198-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1203-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1215-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1220-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1232-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1237-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1248-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1254-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1267-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1276-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1296-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1304-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1322-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1332-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1348-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1357-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc319:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1199-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1204-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1216-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1221-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1233-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1238-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1249-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1255-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1266-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1280-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1295-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1308-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1321-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1336-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1347-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1361-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc320:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1200-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1205-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1217-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1230-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1234-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1239-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1251-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1256-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1268-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1284-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1297-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1312-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1323-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1325-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1325-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1340-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1349-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1366-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc321:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1201-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1206-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1224-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1235-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1240-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1252-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1257-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc322:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1202-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1210-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1219-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1228-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1236-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1243-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1253-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1259-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc323:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1203-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1208-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1220-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1226-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1237-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1241-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1254-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1263-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc324:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1204-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1213-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1221-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1229-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1238-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1246-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1255-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1260-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc325:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1205-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1206-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1206-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1207-.Lfunc_begin0        #   ending offset
	.byte	8                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1208-.Lfunc_begin0        #   ending offset
	.byte	9                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1208-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1209-.Lfunc_begin0        #   ending offset
	.byte	10                              # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	82                              # super-register DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1209-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1210-.Lfunc_begin0        #   ending offset
	.byte	11                              # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1210-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1222-.Lfunc_begin0        #   ending offset
	.byte	14                              # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1222-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1223-.Lfunc_begin0        #   ending offset
	.byte	17                              # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1223-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1224-.Lfunc_begin0        #   ending offset
	.byte	18                              # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1224-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1225-.Lfunc_begin0        #   ending offset
	.byte	23                              # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1225-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1226-.Lfunc_begin0        #   ending offset
	.byte	24                              # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1226-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1227-.Lfunc_begin0        #   ending offset
	.byte	25                              # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	82                              # super-register DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1227-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1228-.Lfunc_begin0        #   ending offset
	.byte	26                              # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1228-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1239-.Lfunc_begin0        #   ending offset
	.byte	29                              # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1239-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1240-.Lfunc_begin0        #   ending offset
	.byte	32                              # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1240-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1241-.Lfunc_begin0        #   ending offset
	.byte	37                              # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1241-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1242-.Lfunc_begin0        #   ending offset
	.byte	38                              # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	82                              # super-register DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1242-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1243-.Lfunc_begin0        #   ending offset
	.byte	39                              # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1243-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1256-.Lfunc_begin0        #   ending offset
	.byte	42                              # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1256-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1257-.Lfunc_begin0        #   ending offset
	.byte	45                              # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1258-.Lfunc_begin0        #   ending offset
	.byte	50                              # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	83                              # super-register DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1258-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1259-.Lfunc_begin0        #   ending offset
	.byte	51                              # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	83                              # super-register DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1259-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1262-.Lfunc_begin0        #   ending offset
	.byte	54                              # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	83                              # super-register DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	90                              # super-register DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1262-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1264-.Lfunc_begin0        #   ending offset
	.byte	53                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	83                              # super-register DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	90                              # super-register DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1264-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1270-.Lfunc_begin0        #   ending offset
	.byte	52                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	83                              # super-register DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	90                              # super-register DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1270-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1319-.Lfunc_begin0        #   ending offset
	.byte	51                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	83                              # super-register DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	90                              # super-register DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1319-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1324-.Lfunc_begin0        #   ending offset
	.byte	50                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	83                              # super-register DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	90                              # super-register DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1324-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1343-.Lfunc_begin0        #   ending offset
	.byte	49                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	90                              # super-register DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1343-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1345-.Lfunc_begin0        #   ending offset
	.byte	48                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	90                              # super-register DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1345-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1369-.Lfunc_begin0        #   ending offset
	.byte	43                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	12                              # 12
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	90                              # super-register DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1369-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end35-.Lfunc_begin0     #   ending offset
	.byte	38                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	80                              # -48
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	112                             # -16
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	20                              # 20
	.byte	90                              # super-register DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc326:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1259-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1286-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1286-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1313-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1313-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1341-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1341-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1368-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1368-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end35-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc327:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1261-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1266-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1288-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1295-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1321-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1342-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1347-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc328:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1262-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1268-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1289-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1297-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1317-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1323-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1343-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1349-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc329:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1263-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1269-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1291-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1296-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1318-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1322-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1344-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1350-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc330:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1264-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1292-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1292-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1294-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1294-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1298-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1319-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1345-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1345-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1351-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc331:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1268-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1272-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1297-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1300-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1323-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1328-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1349-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1353-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc332:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1271-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1274-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1299-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1302-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1327-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1330-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1352-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1355-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc333:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1273-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1276-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1301-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1304-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1329-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1332-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1354-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1357-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc334:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1275-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1293-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1326-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1331-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1348-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1356-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end35-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc335:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1277-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1280-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1305-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1308-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1333-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1336-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1358-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1361-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc336:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1279-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1282-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1307-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1314-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1335-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1344-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1360-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1364-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc337:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1281-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1284-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1309-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1312-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1337-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1340-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1362-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1366-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc338:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1290-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1311-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1320-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1339-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1346-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1365-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end35-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc339:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin36-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1372-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1372-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1376-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1376-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end36-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc340:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin36-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1372-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1372-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1378-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1378-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end36-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc341:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin36-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1372-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1372-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1377-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1377-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end36-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc342:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin36-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1372-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1372-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1375-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1375-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end36-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc343:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1374-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end36-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc344:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin37-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1395-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1395-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1409-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1409-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1422-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1422-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1430-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	0                               # 0
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc345:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin37-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1384-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1384-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end37-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc346:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin37-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1396-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1396-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1410-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1410-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1422-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1422-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1431-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	127                             # DW_OP_breg15
	.byte	0                               # 0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc347:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin37-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1382-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1382-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end37-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc348:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1380-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1464-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1464-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1490-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc349:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1380-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1394-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1394-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1408-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1408-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1422-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1422-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1436-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1436-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end37-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc350:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1383-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1386-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1398-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1400-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1412-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1414-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1424-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1426-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1441-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1448-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1462-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1463-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1469-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1475-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1489-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1490-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc351:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1385-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1388-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1399-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1402-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1413-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1416-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1425-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1428-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1443-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1452-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1471-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1479-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc352:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1387-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1394-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1408-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1415-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1422-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1427-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1436-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc353:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1389-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1391-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1403-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1405-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1417-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1419-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1429-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1433-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1442-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1456-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1470-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1483-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc354:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1390-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1393-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1404-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1411-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1418-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1421-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1432-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1437-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1444-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1460-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1472-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1487-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc355:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1392-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1397-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1406-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1409-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1420-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1423-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1434-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1439-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc356:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1393-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1394-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1394-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1407-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	80                              # super-register DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1407-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1408-.Lfunc_begin0        #   ending offset
	.byte	9                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	80                              # super-register DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	90                              # super-register DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1408-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1421-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	80                              # super-register DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	90                              # super-register DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1421-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1422-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	80                              # super-register DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	90                              # super-register DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1422-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1435-.Lfunc_begin0        #   ending offset
	.byte	18                              # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	80                              # super-register DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	90                              # super-register DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1435-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1436-.Lfunc_begin0        #   ending offset
	.byte	21                              # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	80                              # super-register DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	90                              # super-register DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1436-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1438-.Lfunc_begin0        #   ending offset
	.byte	24                              # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	80                              # super-register DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	90                              # super-register DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1438-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1440-.Lfunc_begin0        #   ending offset
	.byte	23                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	80                              # super-register DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	90                              # super-register DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1440-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1441-.Lfunc_begin0        #   ending offset
	.byte	22                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	80                              # super-register DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	90                              # super-register DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1441-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1443-.Lfunc_begin0        #   ending offset
	.byte	21                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	80                              # super-register DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	89                              # super-register DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1443-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1466-.Lfunc_begin0        #   ending offset
	.byte	20                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	80                              # super-register DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1466-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1467-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	12                              # 12
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1467-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1468-.Lfunc_begin0        #   ending offset
	.byte	10                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	20                              # 20
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1468-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1469-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	28                              # 28
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc357:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1436-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1464-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1464-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1490-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1490-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end37-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc358:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1437-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1442-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1465-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1470-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc359:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1438-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1444-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1466-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1472-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc360:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1439-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1446-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1467-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1471-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc361:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1440-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1445-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1468-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1473-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc362:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1444-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1448-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1472-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1475-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc363:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1447-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1450-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1474-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1477-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc364:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1449-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1452-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1476-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1479-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc365:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1451-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1478-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1478-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end37-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc366:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1454-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1456-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1481-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1483-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc367:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1455-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1458-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1482-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1485-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc368:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1457-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1460-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1484-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1487-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc369:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1459-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1486-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1486-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end37-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc370:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin38-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1497-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1497-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1501-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1501-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end38-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc371:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin38-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1495-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1495-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1497-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1497-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end38-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc372:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin38-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1493-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1493-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1503-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1503-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end38-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc373:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin38-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1496-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1496-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1502-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1502-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end38-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc374:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin38-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1497-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1497-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1504-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1504-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end38-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc375:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin38-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1497-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1497-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1500-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1500-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end38-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc376:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin39-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1511-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1511-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1534-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1534-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end39-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc377:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin39-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1509-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1509-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end39-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc378:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin39-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1510-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1510-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1530-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1541-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end39-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc379:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin39-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1507-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1507-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end39-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc380:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin39-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1511-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1511-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1542-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1542-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end39-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc381:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin39-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1506-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1506-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end39-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc382:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin39-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1511-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1511-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1534-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc383:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin39-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1509-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1509-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc384:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin39-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1511-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1511-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1542-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc385:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1518-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1523-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc386:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1529-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1536-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc387:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1531-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1534-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc388:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin40-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1549-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1549-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1572-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1578-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end40-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc389:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin40-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1547-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1547-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1553-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1553-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end40-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc390:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin40-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1548-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1548-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1565-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1565-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end40-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc391:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin40-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1545-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1545-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end40-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 64
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc392:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin40-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1549-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1549-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1583-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1583-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end40-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc393:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin40-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1544-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1544-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end40-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc394:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin40-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1549-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1549-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1572-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc395:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin40-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1547-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1547-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1553-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc396:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin40-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1549-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1549-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1583-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc397:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1557-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1562-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc398:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1559-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1565-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc399:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1569-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1574-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc400:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1571-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1572-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc401:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin41-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1590-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1590-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1602-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1605-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end41-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc402:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin41-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1588-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1588-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1591-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1591-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1604-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1604-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1609-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1609-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end41-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc403:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin41-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1589-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1589-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1597-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1597-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1609-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1609-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end41-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc404:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin41-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1586-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1586-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end41-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc405:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin41-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1590-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1590-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1608-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1608-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end41-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc406:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin41-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1585-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1585-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end41-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc407:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin41-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1590-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1590-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1602-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc408:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin41-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1588-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1588-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1591-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc409:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin41-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1590-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1590-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1608-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc410:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1593-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1596-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc411:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1595-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1597-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc412:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1599-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1603-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc413:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1601-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1602-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc414:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin42-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1615-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1615-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1619-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1619-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end42-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc415:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin42-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1613-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1613-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1615-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1615-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end42-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc416:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin42-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1611-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1611-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1621-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1621-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end42-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc417:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin42-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1614-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1614-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1620-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1620-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end42-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc418:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin42-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1615-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1615-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1622-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1622-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end42-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc419:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin42-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1615-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1615-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1618-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1618-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end42-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc420:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin43-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1629-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1629-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1641-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end43-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc421:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin43-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1627-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1627-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1630-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1630-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1643-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1643-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1648-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1648-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end43-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc422:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin43-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1628-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1628-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1636-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1636-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1648-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1648-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end43-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc423:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin43-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1625-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1625-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end43-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc424:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin43-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1629-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1629-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1647-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1647-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end43-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc425:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin43-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1624-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1624-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end43-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc426:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin43-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1629-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1629-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1641-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc427:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin43-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1627-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1627-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1630-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc428:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin43-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1629-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1629-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1647-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc429:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1632-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1635-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc430:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1636-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc431:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1638-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1642-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc432:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1640-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1641-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc433:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin44-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1654-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1654-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1658-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1658-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end44-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc434:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin44-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1652-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1652-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1654-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1654-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end44-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc435:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin44-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1650-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1650-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1660-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1660-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end44-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc436:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin44-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1653-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1653-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1659-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1659-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end44-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc437:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin44-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1654-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1654-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1661-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1661-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end44-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc438:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin44-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1654-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1654-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1657-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1657-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end44-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc439:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin45-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1668-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1668-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1674-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1674-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end45-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc440:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin45-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1666-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1666-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1668-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1668-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end45-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc441:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin45-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1664-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1664-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1673-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1673-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end45-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc442:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin45-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1667-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1667-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1676-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1676-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end45-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc443:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin45-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1668-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1668-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1675-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1675-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end45-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc444:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin45-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1668-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1668-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1672-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1672-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end45-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # super-register DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc445:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin46-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1684-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1684-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1688-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1688-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end46-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc446:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin46-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1683-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1683-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1700-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1700-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1720-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1720-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end46-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc447:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin46-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1681-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1681-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1708-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc448:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin46-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1680-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1680-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end46-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc449:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin46-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1679-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1679-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end46-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 64
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc450:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin46-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1684-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1684-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1726-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1726-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end46-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # super-register DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc451:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin46-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1684-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1684-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1688-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1688-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end46-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc452:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin46-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1683-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1683-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1700-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc453:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin46-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1684-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1684-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1726-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc454:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1692-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1695-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc455:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1694-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1708-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc456:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin47-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1734-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1734-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1735-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1735-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1739-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1739-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end47-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc457:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin47-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1732-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1732-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1740-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1740-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end47-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc458:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin47-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1733-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1733-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1752-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1752-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end47-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc459:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin47-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1730-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1730-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end47-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc460:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin47-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1729-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1729-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end47-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc461:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin47-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1734-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1734-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1777-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1777-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end47-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # super-register DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc462:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin47-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1734-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1734-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1735-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1735-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1739-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1739-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end47-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc463:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin47-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1732-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1732-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1740-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc464:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin47-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1734-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1734-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1777-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc465:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1744-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1751-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc466:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1746-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1752-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc467:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin48-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1785-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1785-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1802-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1804-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end48-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc468:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin48-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1782-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1782-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1786-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1786-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end48-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc469:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin48-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1783-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1783-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1791-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1791-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end48-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc470:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin48-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1784-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1784-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1797-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1797-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end48-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc471:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin48-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1780-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1780-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end48-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc472:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin48-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1785-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1785-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1807-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1807-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end48-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # super-register DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc473:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin48-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1785-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1785-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1802-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc474:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin48-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1782-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1782-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1786-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc475:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin48-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1785-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1785-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1807-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc476:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1781-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1802-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc477:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1789-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1791-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc478:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1793-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1796-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc479:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1795-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1797-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc480:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1799-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc481:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin49-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1814-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1814-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1820-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1820-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end49-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc482:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin49-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1812-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1812-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1814-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1814-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end49-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc483:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin49-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1810-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1810-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1819-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1819-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end49-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc484:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin49-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1813-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1813-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1822-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1822-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end49-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc485:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin49-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1814-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1814-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end49-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc486:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin49-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1814-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1814-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1818-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1818-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end49-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # super-register DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc487:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin50-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1847-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1849-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end50-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc488:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin50-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1831-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1831-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end50-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc489:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin50-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1828-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1828-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1836-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1836-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end50-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc490:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin50-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1829-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1829-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1842-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1842-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end50-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc491:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin50-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end50-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc492:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin50-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1852-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1852-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end50-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # super-register DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc493:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin50-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1847-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc494:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin50-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1831-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc495:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin50-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1852-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc496:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1826-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1847-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc497:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1834-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1836-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc498:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1838-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1841-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc499:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1840-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1842-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc500:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1844-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1848-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc501:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin51-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1859-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1859-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1865-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1865-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end51-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc502:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin51-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1857-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1857-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1859-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1859-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end51-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc503:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin51-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1864-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1864-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end51-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc504:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin51-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1858-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1858-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1867-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1867-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end51-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc505:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin51-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1859-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1859-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1866-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1866-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end51-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc506:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin51-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1859-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1859-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1863-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1863-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end51-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # super-register DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc507:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin52-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1870-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1870-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1880-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1880-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end52-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc508:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin52-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1870-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1870-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1879-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1879-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end52-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc509:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1871-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1875-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1875-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1877-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1877-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1878-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc510:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin53-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1883-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1883-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1885-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1885-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end53-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc511:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin53-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1883-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1883-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1889-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1889-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end53-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc512:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1884-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1887-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1887-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1888-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc513:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin54-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1892-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1892-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1898-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1898-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end54-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc514:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin54-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1892-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1892-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1897-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1897-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end54-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc515:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1893-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1895-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1895-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1896-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc516:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin55-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1901-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1901-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end55-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc517:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin55-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1901-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1901-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end55-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc518:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1901-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1902-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc519:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin56-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1909-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1918-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end56-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc520:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin56-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1907-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1907-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1918-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1918-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end56-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc521:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin56-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1908-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1908-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1918-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1918-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end56-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc522:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin56-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1909-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1918-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end56-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc523:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin56-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1909-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1909-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1918-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1918-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end56-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc524:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin56-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1909-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1909-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1917-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc525:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1913-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1917-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc526:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin57-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1925-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1935-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end57-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc527:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin57-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1923-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1923-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1935-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1935-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end57-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc528:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin57-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1924-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1924-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1935-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1935-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end57-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc529:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin57-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1925-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1935-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end57-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc530:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin57-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1925-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1925-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1935-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1935-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end57-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc531:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin57-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1925-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1925-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1934-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc532:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1929-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1932-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc533:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin58-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1941-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1951-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end58-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc534:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin58-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1940-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1941-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end58-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc535:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin58-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1941-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1951-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end58-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc536:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin58-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1941-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1941-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1951-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1951-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end58-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc537:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin58-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1941-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1941-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1950-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc538:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1945-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1948-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc539:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin59-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1954-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1954-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1959-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1959-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end59-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc540:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin59-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1954-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1954-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1960-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1960-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end59-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc541:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin59-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1954-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1954-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1961-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1961-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end59-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc542:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin59-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1954-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1954-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1958-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1958-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end59-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc543:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin60-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1964-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1964-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end60-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc544:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin60-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1964-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1964-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end60-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc545:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin60-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1964-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1964-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end60-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc546:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin60-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1964-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1964-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end60-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc547:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1964-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1965-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc548:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin61-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1968-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1968-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1969-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc549:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin61-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1969-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1969-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end61-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc550:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin61-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1969-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1969-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1972-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1974-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1976-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1979-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1981-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1985-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1987-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1992-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end61-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc551:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin61-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1969-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1969-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1971-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1971-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1973-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1975-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1977-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1980-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1982-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1986-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1988-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1993-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1995-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1995-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1998-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc552:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin61-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1969-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1969-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1995-.Lfunc_begin0        #   ending offset
	.byte	16                              # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1995-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1996-.Lfunc_begin0        #   ending offset
	.byte	19                              # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc553:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1969-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1971-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1971-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1973-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1973-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1975-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1975-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1977-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1977-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1978-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1978-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1980-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1980-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1982-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1982-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1983-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1983-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1984-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1984-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1986-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1986-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1988-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	10                              # 10
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1988-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1989-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1989-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1990-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1990-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1991-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	13                              # 13
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1991-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1993-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	14                              # 14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1993-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1995-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1995-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1997-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc554:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin62-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2017-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2017-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2030-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2030-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2042-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2042-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2054-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2054-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2065-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2065-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2078-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2078-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2088-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2088-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2098-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc555:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin62-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2003-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2003-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end62-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc556:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin62-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2001-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2001-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2006-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2008-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2010-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2013-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2015-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2019-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2021-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2025-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2027-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2033-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2035-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2040-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2043-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2048-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2050-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2057-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2059-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2066-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2068-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2074-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2076-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2083-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2085-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2092-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2094-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2099-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end62-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc557:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin62-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2002-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2002-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2005-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2005-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2007-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2009-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2011-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2014-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2016-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2020-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2022-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2026-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2028-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2034-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2036-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2041-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2044-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2049-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2051-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2058-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2060-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2067-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2069-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2075-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2077-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2084-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2086-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2093-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2095-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2100-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2101-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc558:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin62-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2017-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2017-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2030-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2030-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2042-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2042-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2054-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2054-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2065-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2065-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2078-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2078-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2088-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2088-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2100-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2100-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end62-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc559:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2000-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2002-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2002-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2005-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2005-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2007-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2007-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2009-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2009-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2011-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2011-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2012-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2012-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2014-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2014-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2016-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2016-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2017-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2017-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2018-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2018-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2020-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2020-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2022-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2022-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2023-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2023-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2024-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2024-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2026-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2026-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2028-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2028-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2029-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2029-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2030-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2030-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2031-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2031-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2032-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2032-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2034-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2034-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2036-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2036-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2037-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2037-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2038-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2038-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2039-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2039-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2041-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2041-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2042-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2042-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2044-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2044-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2045-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2045-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2046-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2046-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2047-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2047-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2049-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2049-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2051-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2051-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2052-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2052-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2053-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2053-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2054-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2054-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2055-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2055-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2056-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2056-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2058-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2058-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2060-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2060-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2061-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2061-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2062-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2062-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2063-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2063-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2064-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2064-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2065-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2065-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2067-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2067-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2069-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2069-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2070-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2070-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2071-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2071-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2072-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2072-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2073-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2073-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2075-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2075-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2077-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2077-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2078-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2078-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2079-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2079-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2080-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2080-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2081-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2081-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2082-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2082-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2084-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2084-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2086-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2086-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2087-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2087-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2088-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2088-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2089-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2089-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2090-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2090-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2091-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2091-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2093-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2093-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2095-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2095-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2096-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2096-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2097-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2097-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2100-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2100-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end62-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc560:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin63-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2105-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2105-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	88                              # -40
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc561:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin63-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end63-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc562:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin63-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2104-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2104-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	96                              # -32
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc563:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin63-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2106-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2106-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end63-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc564:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin63-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end63-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	104                             # -24
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc565:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2105-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2108-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2108-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2212-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2212-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2215-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	120                             # -8
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	35                              # DW_OP_plus_uconst
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc566:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2134-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2134-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2157-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2157-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2185-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2185-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2210-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2210-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2215-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc567:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2114-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2114-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2123-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2123-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2127-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2127-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2134-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2134-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2138-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2138-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2146-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2146-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2150-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2150-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2157-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2157-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2165-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2165-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2170-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2170-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2176-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2176-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2185-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2185-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2189-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2189-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2195-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2195-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2201-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2201-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2210-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2210-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2215-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc568:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2114-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2114-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2123-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2123-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2127-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2134-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2138-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2146-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2150-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2165-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2170-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2185-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2189-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2201-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2210-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2210-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc569:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2112-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2112-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2113-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2113-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2118-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2122-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2126-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2137-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2142-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2149-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2153-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2168-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2169-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2184-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2188-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2209-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2215-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc570:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2111-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2111-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2125-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2131-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2136-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2142-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2148-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2161-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2167-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2180-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2187-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2199-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2215-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc571:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2107-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2111-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2111-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2125-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2130-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2136-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2141-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2148-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2160-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2167-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2179-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2187-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2197-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2215-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc572:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2110-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2115-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2115-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2120-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2124-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2128-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2128-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2135-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2135-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2139-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2139-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2144-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2147-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2151-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2151-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2155-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2158-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2163-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2166-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2171-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2171-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2174-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2177-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2182-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2186-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2190-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2190-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2193-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2196-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2202-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2202-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc573:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2111-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2116-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2116-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2119-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2121-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2125-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2129-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2129-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2132-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2132-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2133-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2136-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2140-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2140-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2143-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2143-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2145-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2148-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2152-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2152-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2154-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2154-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2156-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2159-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2162-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2162-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2164-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2167-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2172-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2172-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2173-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2173-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2175-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2178-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2181-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2181-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2183-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2187-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2191-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2191-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2192-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2192-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2194-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2198-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2200-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2203-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2206-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2206-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2208-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc574:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin64-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2219-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2219-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2221-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2221-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2232-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2232-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end64-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc575:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin64-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2222-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	158                             # DW_OP_implicit_value
	.byte	4                               # 4
	.byte	0                               #  
	.byte	0                               #  
	.byte	0                               #  
	.byte	0                               #  
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2222-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2232-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2232-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end64-.Lfunc_begin0     #   ending offset
	.byte	6                               # Loc expr size
	.byte	158                             # DW_OP_implicit_value
	.byte	4                               # 4
	.byte	0                               #  
	.byte	0                               #  
	.byte	0                               #  
	.byte	0                               #  
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc576:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin64-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2222-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2222-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2228-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2228-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2229-.Lfunc_begin0        #   ending offset
	.byte	9                               # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc577:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2223-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2226-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc578:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2223-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2224-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc579:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin65-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2235-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2235-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end65-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc580:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin65-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2236-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2236-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end65-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc581:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2234-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2249-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2249-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end65-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc582:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2234-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2236-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2243-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2248-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc583:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2234-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2236-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2236-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2237-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2237-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2239-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2240-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2241-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2242-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2244-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2244-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2249-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc584:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2236-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   ending offset
	.byte	16                              # Loc expr size
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2246-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2247-.Lfunc_begin0        #   ending offset
	.byte	19                              # Loc expr size
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc585:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2236-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2244-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2244-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2248-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc586:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin66-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2262-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2262-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2272-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2272-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2281-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2281-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2292-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2292-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2301-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2301-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2311-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2311-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2320-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2320-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2327-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc587:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin66-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end66-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc588:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2251-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2599-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2599-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2603-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc589:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2251-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2409-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2409-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2433-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2489-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2516-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2597-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2600-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2601-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2602-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc590:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2251-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2261-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2261-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2271-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2271-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2280-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2280-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2291-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2291-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2300-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2300-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2310-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2310-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2320-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2320-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2330-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2330-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2331-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc591:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2252-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2262-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # -128
	.byte	127                             # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc592:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2254-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2256-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2264-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2266-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2273-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2275-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2285-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2293-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2295-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2305-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2313-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2315-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2322-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2324-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2390-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2443-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2450-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2468-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2475-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2495-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2502-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2522-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2529-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2548-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2555-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2575-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2582-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc593:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2255-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2265-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2267-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2274-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2276-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2284-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2286-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2294-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2296-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2304-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2306-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2314-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2323-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2325-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2392-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2399-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2417-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2445-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2454-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2470-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2479-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2497-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2506-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2524-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2533-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2550-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2559-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2577-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2586-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc594:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2258-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2260-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2268-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2270-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2277-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2279-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2287-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2289-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2299-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2307-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2309-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2317-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2319-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2326-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2329-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2403-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2416-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2430-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2444-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2458-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2469-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2483-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2496-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2510-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2523-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2537-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2549-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2563-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2576-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2590-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc595:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2259-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2263-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2269-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2272-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2278-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2282-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2288-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2290-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2298-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2302-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2308-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2312-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2318-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2321-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2328-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2331-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2393-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2407-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2418-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2435-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2446-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2462-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2471-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2487-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2498-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2514-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2525-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2541-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2551-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2567-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2578-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2595-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc596:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2384-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2385-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2385-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2436-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2436-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2463-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2463-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2489-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2489-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2516-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2516-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2543-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2543-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2569-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2569-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2597-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2597-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end66-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc597:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2386-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2391-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2410-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2416-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2438-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2444-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2464-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2469-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2490-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2496-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2517-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2523-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2544-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2549-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2571-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2576-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc598:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2387-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2393-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2411-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2418-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2439-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2446-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2465-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2471-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2491-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2498-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2518-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2525-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2545-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2551-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2572-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2578-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc599:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2388-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2392-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2413-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2420-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2448-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2466-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2473-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2493-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2500-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2520-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2527-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2546-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2553-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2573-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2580-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc600:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2389-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2394-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2414-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2419-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2442-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2447-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2467-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2472-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2494-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2499-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2521-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2526-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2547-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2552-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2574-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2579-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc601:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2393-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2418-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2418-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2446-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2450-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2471-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2475-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2498-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2502-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2525-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2529-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2551-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2555-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2578-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2582-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc602:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2395-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2397-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2421-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2424-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2449-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2452-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2474-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2477-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2501-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2504-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2528-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2531-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2554-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2557-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2581-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2584-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc603:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2396-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2399-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2423-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2451-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2454-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2476-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2479-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2503-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2506-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2530-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2533-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2556-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2559-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2583-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2586-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc604:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2398-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2413-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2425-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2440-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2453-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2466-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2478-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2505-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2505-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2519-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2532-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2546-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2558-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2573-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2585-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2604-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc605:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2400-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2403-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2427-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2430-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2455-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2458-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2480-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2483-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2507-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2510-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2534-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2537-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2560-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2563-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2587-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2590-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc606:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2402-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2405-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2429-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2443-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2457-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2468-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2482-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2492-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2509-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2522-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2536-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2539-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2562-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2575-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2589-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2593-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc607:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2404-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2407-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2431-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2435-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2459-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2462-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2484-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2487-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2511-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2514-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2538-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2541-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2564-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2567-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2591-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2595-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc608:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2406-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2412-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2434-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2437-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2461-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2464-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2486-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2495-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2513-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2517-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2540-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2544-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2566-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2570-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2594-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end66-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc609:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2598-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end66-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc610:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin67-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2608-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2608-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2610-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc611:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin67-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2610-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2610-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end67-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc612:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin67-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2609-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2609-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2610-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc613:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin67-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2607-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2607-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end67-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc614:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2606-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2610-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2610-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2638-.Lfunc_begin0        #   ending offset
	.byte	9                               # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	12                              # 12
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2638-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2639-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	12                              # 12
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc615:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2611-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2613-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc616:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2612-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2615-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc617:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2614-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2631-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc618:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2616-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2618-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc619:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2617-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2620-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc620:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2619-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2632-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc621:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2621-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2623-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc622:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2622-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2625-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc623:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2624-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2633-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc624:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2626-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2628-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc625:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2627-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2630-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc626:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2629-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2634-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc627:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2630-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2635-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc628:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2631-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2637-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc629:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2632-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2636-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc630:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2633-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2641-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_list_header_end0:
	.section	.debug_abbrev,"",@progbits
	.byte	1                               # Abbreviation Code
	.byte	17                              # DW_TAG_compile_unit
	.byte	1                               # DW_CHILDREN_yes
	.byte	37                              # DW_AT_producer
	.byte	37                              # DW_FORM_strx1
	.byte	19                              # DW_AT_language
	.byte	5                               # DW_FORM_data2
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	114                             # DW_AT_str_offsets_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	16                              # DW_AT_stmt_list
	.byte	23                              # DW_FORM_sec_offset
	.byte	27                              # DW_AT_comp_dir
	.byte	37                              # DW_FORM_strx1
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	115                             # DW_AT_addr_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	116                             # DW_AT_rnglists_base
	.byte	23                              # DW_FORM_sec_offset
	.ascii	"\214\001"                      # DW_AT_loclists_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	2                               # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	3                               # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	4                               # Abbreviation Code
	.byte	38                              # DW_TAG_const_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	5                               # Abbreviation Code
	.byte	36                              # DW_TAG_base_type
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	62                              # DW_AT_encoding
	.byte	11                              # DW_FORM_data1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	6                               # Abbreviation Code
	.byte	4                               # DW_TAG_enumeration_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	7                               # Abbreviation Code
	.byte	40                              # DW_TAG_enumerator
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	28                              # DW_AT_const_value
	.byte	15                              # DW_FORM_udata
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	8                               # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	9                               # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	10                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	11                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	12                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	13                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	14                              # Abbreviation Code
	.byte	11                              # DW_TAG_lexical_block
	.byte	1                               # DW_CHILDREN_yes
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	15                              # Abbreviation Code
	.byte	11                              # DW_TAG_lexical_block
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	16                              # Abbreviation Code
	.byte	72                              # DW_TAG_call_site
	.byte	0                               # DW_CHILDREN_no
	.ascii	"\203\001"                      # DW_AT_call_target
	.byte	24                              # DW_FORM_exprloc
	.byte	125                             # DW_AT_call_return_pc
	.byte	27                              # DW_FORM_addrx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	17                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	18                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	19                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	20                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	21                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	22                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	23                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	24                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	25                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	26                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	27                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	28                              # Abbreviation Code
	.byte	72                              # DW_TAG_call_site
	.byte	0                               # DW_CHILDREN_no
	.byte	127                             # DW_AT_call_origin
	.byte	19                              # DW_FORM_ref4
	.byte	125                             # DW_AT_call_return_pc
	.byte	27                              # DW_FORM_addrx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	29                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	30                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	31                              # Abbreviation Code
	.byte	11                              # DW_TAG_lexical_block
	.byte	1                               # DW_CHILDREN_yes
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	32                              # Abbreviation Code
	.byte	15                              # DW_TAG_pointer_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	33                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	34                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	28                              # DW_AT_const_value
	.byte	13                              # DW_FORM_sdata
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	35                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	36                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	37                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	38                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	39                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	40                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	41                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	42                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	43                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	28                              # DW_AT_const_value
	.byte	13                              # DW_FORM_sdata
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	44                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	45                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	11                              # DW_AT_byte_size
	.byte	5                               # DW_FORM_data2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	46                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	47                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	56                              # DW_AT_data_member_location
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	48                              # Abbreviation Code
	.byte	1                               # DW_TAG_array_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	49                              # Abbreviation Code
	.byte	33                              # DW_TAG_subrange_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	55                              # DW_AT_count
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	50                              # Abbreviation Code
	.byte	21                              # DW_TAG_subroutine_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	51                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	52                              # Abbreviation Code
	.byte	36                              # DW_TAG_base_type
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	62                              # DW_AT_encoding
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	53                              # Abbreviation Code
	.byte	21                              # DW_TAG_subroutine_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	54                              # Abbreviation Code
	.byte	15                              # DW_TAG_pointer_type
	.byte	0                               # DW_CHILDREN_no
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	0                               # EOM(3)
	.section	.debug_info,"",@progbits
.Lcu_begin0:
	.long	.Ldebug_info_end0-.Ldebug_info_start0 # Length of Unit
.Ldebug_info_start0:
	.short	5                               # DWARF version number
	.byte	1                               # DWARF Unit Type
	.byte	8                               # Address Size (in bytes)
	.long	.debug_abbrev                   # Offset Into Abbrev. Section
	.byte	1                               # Abbrev [1] 0xc:0x321d DW_TAG_compile_unit
	.byte	0                               # DW_AT_producer
	.short	12                              # DW_AT_language
	.byte	1                               # DW_AT_name
	.long	.Lstr_offsets_base0             # DW_AT_str_offsets_base
	.long	.Lline_table_start0             # DW_AT_stmt_list
	.byte	2                               # DW_AT_comp_dir
	.byte	0                               # DW_AT_low_pc
	.long	.Lfunc_end67-.Lfunc_begin0      # DW_AT_high_pc
	.long	.Laddr_table_base0              # DW_AT_addr_base
	.long	.Lrnglists_table_base0          # DW_AT_rnglists_base
	.long	.Lloclists_table_base0          # DW_AT_loclists_base
	.byte	2                               # Abbrev [2] 0x2b:0x14 DW_TAG_subprogram
	.byte	3                               # Abbrev [3] 0x2c:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_name
	.long	63                              # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	490                             # DW_AT_decl_line
	.byte	3                               # Abbrev [3] 0x35:0x9 DW_TAG_variable
	.byte	5                               # DW_AT_name
	.long	63                              # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	491                             # DW_AT_decl_line
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3f:0x5 DW_TAG_const_type
	.long	68                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x44:0x4 DW_TAG_base_type
	.byte	4                               # DW_AT_name
	.byte	5                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	6                               # Abbrev [6] 0x48:0x27 DW_TAG_enumeration_type
	.long	111                             # DW_AT_type
	.byte	4                               # DW_AT_byte_size
	.byte	1                               # DW_AT_decl_file
	.byte	30                              # DW_AT_decl_line
	.byte	7                               # Abbrev [7] 0x50:0x3 DW_TAG_enumerator
	.byte	7                               # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	7                               # Abbrev [7] 0x53:0x3 DW_TAG_enumerator
	.byte	8                               # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	7                               # Abbrev [7] 0x56:0x3 DW_TAG_enumerator
	.byte	9                               # DW_AT_name
	.byte	2                               # DW_AT_const_value
	.byte	7                               # Abbrev [7] 0x59:0x3 DW_TAG_enumerator
	.byte	10                              # DW_AT_name
	.byte	3                               # DW_AT_const_value
	.byte	7                               # Abbrev [7] 0x5c:0x3 DW_TAG_enumerator
	.byte	11                              # DW_AT_name
	.byte	4                               # DW_AT_const_value
	.byte	7                               # Abbrev [7] 0x5f:0x3 DW_TAG_enumerator
	.byte	12                              # DW_AT_name
	.byte	5                               # DW_AT_const_value
	.byte	7                               # Abbrev [7] 0x62:0x3 DW_TAG_enumerator
	.byte	13                              # DW_AT_name
	.byte	6                               # DW_AT_const_value
	.byte	7                               # Abbrev [7] 0x65:0x3 DW_TAG_enumerator
	.byte	14                              # DW_AT_name
	.byte	7                               # DW_AT_const_value
	.byte	7                               # Abbrev [7] 0x68:0x3 DW_TAG_enumerator
	.byte	15                              # DW_AT_name
	.byte	8                               # DW_AT_const_value
	.byte	7                               # Abbrev [7] 0x6b:0x3 DW_TAG_enumerator
	.byte	16                              # DW_AT_name
	.byte	9                               # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	5                               # Abbrev [5] 0x6f:0x4 DW_TAG_base_type
	.byte	6                               # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	8                               # Abbrev [8] 0x73:0x8 DW_TAG_typedef
	.long	123                             # DW_AT_type
	.byte	18                              # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	87                              # DW_AT_decl_line
	.byte	5                               # Abbrev [5] 0x7b:0x4 DW_TAG_base_type
	.byte	17                              # DW_AT_name
	.byte	5                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	8                               # Abbrev [8] 0x7f:0x8 DW_TAG_typedef
	.long	135                             # DW_AT_type
	.byte	21                              # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	25                              # DW_AT_decl_line
	.byte	8                               # Abbrev [8] 0x87:0x8 DW_TAG_typedef
	.long	143                             # DW_AT_type
	.byte	20                              # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.byte	40                              # DW_AT_decl_line
	.byte	5                               # Abbrev [5] 0x8f:0x4 DW_TAG_base_type
	.byte	19                              # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	2                               # DW_AT_byte_size
	.byte	8                               # Abbrev [8] 0x93:0x8 DW_TAG_typedef
	.long	155                             # DW_AT_type
	.byte	23                              # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	26                              # DW_AT_decl_line
	.byte	8                               # Abbrev [8] 0x9b:0x8 DW_TAG_typedef
	.long	111                             # DW_AT_type
	.byte	22                              # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.byte	42                              # DW_AT_decl_line
	.byte	8                               # Abbrev [8] 0xa3:0x8 DW_TAG_typedef
	.long	171                             # DW_AT_type
	.byte	26                              # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
	.byte	8                               # Abbrev [8] 0xab:0x8 DW_TAG_typedef
	.long	179                             # DW_AT_type
	.byte	25                              # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.byte	45                              # DW_AT_decl_line
	.byte	5                               # Abbrev [5] 0xb3:0x4 DW_TAG_base_type
	.byte	24                              # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	5                               # Abbrev [5] 0xb7:0x4 DW_TAG_base_type
	.byte	27                              # DW_AT_name
	.byte	4                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	9                               # Abbrev [9] 0xbb:0xd0 DW_TAG_subprogram
	.byte	0                               # DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	58                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	11953                           # DW_AT_type
                                        # DW_AT_external
	.byte	10                              # Abbrev [10] 0xca:0x9 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_location
	.byte	121                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.long	11969                           # DW_AT_type
	.byte	10                              # Abbrev [10] 0xd3:0x9 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0xdc:0x9 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	45                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0xe5:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0xee:0x9 DW_TAG_formal_parameter
	.byte	4                               # DW_AT_location
	.byte	46                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0xf7:0x9 DW_TAG_formal_parameter
	.byte	5                               # DW_AT_location
	.byte	161                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	11                              # Abbrev [11] 0x100:0xc DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\260\001"
	.byte	162                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x10c:0x9 DW_TAG_variable
	.byte	6                               # DW_AT_location
	.byte	163                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	101                             # DW_AT_decl_line
	.long	11953                           # DW_AT_type
	.byte	12                              # Abbrev [12] 0x115:0x9 DW_TAG_variable
	.byte	7                               # DW_AT_location
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	102                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	13                              # Abbrev [13] 0x11e:0x8 DW_TAG_variable
	.byte	165                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	103                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x126:0xc DW_TAG_lexical_block
	.byte	0                               # DW_AT_ranges
	.byte	12                              # Abbrev [12] 0x128:0x9 DW_TAG_variable
	.byte	8                               # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	109                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	15                              # Abbrev [15] 0x132:0x10 DW_TAG_lexical_block
	.byte	1                               # DW_AT_low_pc
	.long	.Ltmp62-.Ltmp54                 # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x138:0x9 DW_TAG_variable
	.byte	9                               # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	117                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	15                              # Abbrev [15] 0x142:0x1c DW_TAG_lexical_block
	.byte	2                               # DW_AT_low_pc
	.long	.Ltmp135-.Ltmp123               # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x148:0x9 DW_TAG_variable
	.byte	12                              # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	125                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x151:0xc DW_TAG_lexical_block
	.byte	1                               # DW_AT_ranges
	.byte	12                              # Abbrev [12] 0x153:0x9 DW_TAG_variable
	.byte	13                              # DW_AT_location
	.byte	164                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	126                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	15                              # Abbrev [15] 0x15e:0x1c DW_TAG_lexical_block
	.byte	3                               # DW_AT_low_pc
	.long	.Ltmp112-.Ltmp84                # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x164:0x9 DW_TAG_variable
	.byte	10                              # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	131                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x16d:0xc DW_TAG_lexical_block
	.byte	2                               # DW_AT_ranges
	.byte	12                              # Abbrev [12] 0x16f:0x9 DW_TAG_variable
	.byte	11                              # DW_AT_location
	.byte	164                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	132                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0x17a:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	95
	.byte	4                               # DW_AT_call_return_pc
	.byte	16                              # Abbrev [16] 0x17e:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	95
	.byte	5                               # DW_AT_call_return_pc
	.byte	16                              # Abbrev [16] 0x182:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	95
	.byte	6                               # DW_AT_call_return_pc
	.byte	16                              # Abbrev [16] 0x186:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	95
	.byte	7                               # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	17                              # Abbrev [17] 0x18b:0xc8 DW_TAG_subprogram
	.byte	8                               # DW_AT_low_pc
	.long	.Lfunc_end1-.Lfunc_begin1       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	61                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	509                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	183                             # DW_AT_type
                                        # DW_AT_external
	.byte	18                              # Abbrev [18] 0x19b:0xa DW_TAG_formal_parameter
	.byte	14                              # DW_AT_location
	.byte	121                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	509                             # DW_AT_decl_line
	.long	11969                           # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1a5:0xa DW_TAG_formal_parameter
	.byte	15                              # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	510                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1af:0xa DW_TAG_formal_parameter
	.byte	16                              # DW_AT_location
	.byte	166                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	510                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1b9:0xa DW_TAG_formal_parameter
	.byte	17                              # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	511                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1c3:0xa DW_TAG_formal_parameter
	.byte	18                              # DW_AT_location
	.byte	167                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	511                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1cd:0xa DW_TAG_formal_parameter
	.byte	19                              # DW_AT_location
	.byte	168                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	512                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1d7:0xa DW_TAG_formal_parameter
	.byte	20                              # DW_AT_location
	.byte	169                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	512                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0x1e1:0xd DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\310\001"
	.byte	170                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	512                             # DW_AT_decl_line
	.long	12768                           # DW_AT_type
	.byte	20                              # Abbrev [20] 0x1ee:0xa DW_TAG_variable
	.byte	21                              # DW_AT_location
	.byte	171                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	516                             # DW_AT_decl_line
	.long	12615                           # DW_AT_type
	.byte	20                              # Abbrev [20] 0x1f8:0xa DW_TAG_variable
	.byte	22                              # DW_AT_location
	.byte	172                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	517                             # DW_AT_decl_line
	.long	12615                           # DW_AT_type
	.byte	20                              # Abbrev [20] 0x202:0xa DW_TAG_variable
	.byte	23                              # DW_AT_location
	.byte	173                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	514                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x20c:0xa DW_TAG_variable
	.byte	24                              # DW_AT_location
	.byte	127                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	515                             # DW_AT_decl_line
	.long	183                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0x216:0x30 DW_TAG_lexical_block
	.byte	9                               # DW_AT_low_pc
	.long	.Ltmp209-.Ltmp142               # DW_AT_high_pc
	.byte	20                              # Abbrev [20] 0x21c:0xa DW_TAG_variable
	.byte	25                              # DW_AT_location
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	520                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x226:0xd DW_TAG_lexical_block
	.byte	3                               # DW_AT_ranges
	.byte	20                              # Abbrev [20] 0x228:0xa DW_TAG_variable
	.byte	26                              # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	525                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	15                              # Abbrev [15] 0x233:0x12 DW_TAG_lexical_block
	.byte	10                              # DW_AT_low_pc
	.long	.Ltmp206-.Ltmp200               # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x239:0xb DW_TAG_variable
	.byte	1                               # DW_AT_location
	.byte	86
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	528                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0x246:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	92
	.byte	11                              # DW_AT_call_return_pc
	.byte	16                              # Abbrev [16] 0x24a:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	92
	.byte	12                              # DW_AT_call_return_pc
	.byte	16                              # Abbrev [16] 0x24e:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	83
	.byte	13                              # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x253:0x21 DW_TAG_subprogram
	.byte	14                              # DW_AT_low_pc
	.long	.Lfunc_end2-.Lfunc_begin2       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	62                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	588                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	18                              # Abbrev [18] 0x25f:0xa DW_TAG_formal_parameter
	.byte	27                              # DW_AT_location
	.byte	174                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	588                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x269:0xa DW_TAG_formal_parameter
	.byte	28                              # DW_AT_location
	.byte	175                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	588                             # DW_AT_decl_line
	.long	11969                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x274:0x5f DW_TAG_subprogram
	.byte	15                              # DW_AT_low_pc
	.long	.Lfunc_end3-.Lfunc_begin3       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	63                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	11                              # Abbrev [11] 0x283:0xa DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x28d:0x9 DW_TAG_formal_parameter
	.byte	29                              # DW_AT_location
	.byte	33                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	11                              # Abbrev [11] 0x296:0xa DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x2a0:0x9 DW_TAG_formal_parameter
	.byte	30                              # DW_AT_location
	.byte	35                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x2a9:0x9 DW_TAG_variable
	.byte	31                              # DW_AT_location
	.byte	36                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x2b2:0x20 DW_TAG_lexical_block
	.byte	16                              # DW_AT_low_pc
	.long	.Ltmp224-.Ltmp219               # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x2b8:0x9 DW_TAG_variable
	.byte	32                              # DW_AT_location
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x2c1:0x10 DW_TAG_lexical_block
	.byte	16                              # DW_AT_low_pc
	.long	.Ltmp220-.Ltmp219               # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x2c7:0x9 DW_TAG_variable
	.byte	33                              # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x2d3:0x59 DW_TAG_subprogram
	.byte	17                              # DW_AT_low_pc
	.long	.Lfunc_end4-.Lfunc_begin4       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	64                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	62                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0x2e2:0x9 DW_TAG_formal_parameter
	.byte	36                              # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	62                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x2eb:0x9 DW_TAG_formal_parameter
	.byte	34                              # DW_AT_location
	.byte	33                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	62                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0x2f4:0x9 DW_TAG_formal_parameter
	.byte	37                              # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	62                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x2fd:0x9 DW_TAG_formal_parameter
	.byte	35                              # DW_AT_location
	.byte	35                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	62                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x306:0x9 DW_TAG_variable
	.byte	39                              # DW_AT_location
	.byte	36                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	62                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x30f:0x1c DW_TAG_lexical_block
	.byte	18                              # DW_AT_low_pc
	.long	.Ltmp254-.Ltmp226               # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x315:0x9 DW_TAG_variable
	.byte	38                              # DW_AT_location
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	62                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x31e:0xc DW_TAG_lexical_block
	.byte	4                               # DW_AT_ranges
	.byte	12                              # Abbrev [12] 0x320:0x9 DW_TAG_variable
	.byte	40                              # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	62                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x32c:0x41 DW_TAG_subprogram
	.byte	19                              # DW_AT_low_pc
	.long	.Lfunc_end5-.Lfunc_begin5       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.long	1368                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x338:0x6 DW_TAG_formal_parameter
	.byte	43                              # DW_AT_location
	.long	1376                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x33e:0x6 DW_TAG_formal_parameter
	.byte	41                              # DW_AT_location
	.long	1384                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x344:0x6 DW_TAG_formal_parameter
	.byte	44                              # DW_AT_location
	.long	1392                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x34a:0x6 DW_TAG_formal_parameter
	.byte	42                              # DW_AT_location
	.long	1400                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x350:0x6 DW_TAG_variable
	.byte	46                              # DW_AT_location
	.long	1408                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x356:0x16 DW_TAG_lexical_block
	.byte	20                              # DW_AT_low_pc
	.long	.Ltmp316-.Ltmp256               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x35c:0x6 DW_TAG_variable
	.byte	45                              # DW_AT_location
	.long	1417                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x362:0x9 DW_TAG_lexical_block
	.byte	5                               # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0x364:0x6 DW_TAG_variable
	.byte	47                              # DW_AT_location
	.long	1426                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x36d:0x41 DW_TAG_subprogram
	.byte	21                              # DW_AT_low_pc
	.long	.Lfunc_end6-.Lfunc_begin6       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.long	1726                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x379:0x6 DW_TAG_formal_parameter
	.byte	50                              # DW_AT_location
	.long	1734                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x37f:0x6 DW_TAG_formal_parameter
	.byte	48                              # DW_AT_location
	.long	1742                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x385:0x6 DW_TAG_formal_parameter
	.byte	51                              # DW_AT_location
	.long	1750                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x38b:0x6 DW_TAG_formal_parameter
	.byte	49                              # DW_AT_location
	.long	1758                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x391:0x6 DW_TAG_variable
	.byte	53                              # DW_AT_location
	.long	1766                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x397:0x16 DW_TAG_lexical_block
	.byte	22                              # DW_AT_low_pc
	.long	.Ltmp346-.Ltmp318               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x39d:0x6 DW_TAG_variable
	.byte	52                              # DW_AT_location
	.long	1775                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x3a3:0x9 DW_TAG_lexical_block
	.byte	6                               # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0x3a5:0x6 DW_TAG_variable
	.byte	54                              # DW_AT_location
	.long	1784                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x3ae:0x59 DW_TAG_subprogram
	.byte	23                              # DW_AT_low_pc
	.long	.Lfunc_end7-.Lfunc_begin7       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	65                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0x3bd:0x9 DW_TAG_formal_parameter
	.byte	55                              # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x3c6:0x9 DW_TAG_formal_parameter
	.byte	56                              # DW_AT_location
	.byte	33                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0x3cf:0x9 DW_TAG_formal_parameter
	.byte	57                              # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x3d8:0x9 DW_TAG_formal_parameter
	.byte	58                              # DW_AT_location
	.byte	35                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x3e1:0x9 DW_TAG_variable
	.byte	59                              # DW_AT_location
	.byte	36                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x3ea:0x1c DW_TAG_lexical_block
	.byte	24                              # DW_AT_low_pc
	.long	.Ltmp358-.Ltmp348               # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x3f0:0x9 DW_TAG_variable
	.byte	60                              # DW_AT_location
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x3f9:0xc DW_TAG_lexical_block
	.byte	7                               # DW_AT_ranges
	.byte	12                              # Abbrev [12] 0x3fb:0x9 DW_TAG_variable
	.byte	61                              # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x407:0x5a DW_TAG_subprogram
	.byte	25                              # DW_AT_low_pc
	.long	.Lfunc_end8-.Lfunc_begin8       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	66                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	66                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0x416:0x9 DW_TAG_formal_parameter
	.byte	62                              # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	66                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	11                              # Abbrev [11] 0x41f:0xa DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.byte	33                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	66                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0x429:0x9 DW_TAG_formal_parameter
	.byte	63                              # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	66                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x432:0x9 DW_TAG_formal_parameter
	.byte	64                              # DW_AT_location
	.byte	35                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	66                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x43b:0x9 DW_TAG_variable
	.byte	65                              # DW_AT_location
	.byte	36                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	66                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x444:0x1c DW_TAG_lexical_block
	.byte	26                              # DW_AT_low_pc
	.long	.Ltmp385-.Ltmp360               # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x44a:0x9 DW_TAG_variable
	.byte	66                              # DW_AT_location
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	66                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x453:0xc DW_TAG_lexical_block
	.byte	8                               # DW_AT_ranges
	.byte	12                              # Abbrev [12] 0x455:0x9 DW_TAG_variable
	.byte	67                              # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	66                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x461:0x41 DW_TAG_subprogram
	.byte	27                              # DW_AT_low_pc
	.long	.Lfunc_end9-.Lfunc_begin9       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.long	2252                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x46d:0x6 DW_TAG_formal_parameter
	.byte	68                              # DW_AT_location
	.long	2260                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x473:0x6 DW_TAG_formal_parameter
	.byte	69                              # DW_AT_location
	.long	2268                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x479:0x6 DW_TAG_formal_parameter
	.byte	70                              # DW_AT_location
	.long	2276                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x47f:0x6 DW_TAG_formal_parameter
	.byte	71                              # DW_AT_location
	.long	2284                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x485:0x6 DW_TAG_variable
	.byte	72                              # DW_AT_location
	.long	2292                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x48b:0x16 DW_TAG_lexical_block
	.byte	28                              # DW_AT_low_pc
	.long	.Ltmp394-.Ltmp387               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x491:0x6 DW_TAG_variable
	.byte	73                              # DW_AT_location
	.long	2301                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x497:0x9 DW_TAG_lexical_block
	.byte	9                               # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0x499:0x6 DW_TAG_variable
	.byte	74                              # DW_AT_location
	.long	2310                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4a2:0x5b DW_TAG_subprogram
	.byte	29                              # DW_AT_low_pc
	.long	.Lfunc_end10-.Lfunc_begin10     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	67                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	401                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0x4ae:0xa DW_TAG_formal_parameter
	.byte	75                              # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	401                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x4b8:0xa DW_TAG_formal_parameter
	.byte	76                              # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	401                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x4c2:0xa DW_TAG_formal_parameter
	.byte	77                              # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	401                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x4cc:0xa DW_TAG_formal_parameter
	.byte	78                              # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	401                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x4d6:0xa DW_TAG_formal_parameter
	.byte	79                              # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	401                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x4e0:0xa DW_TAG_formal_parameter
	.byte	80                              # DW_AT_location
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	401                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	28                              # Abbrev [28] 0x4ea:0x6 DW_TAG_call_site
	.long	628                             # DW_AT_call_origin
	.byte	30                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x4f0:0x6 DW_TAG_call_site
	.long	628                             # DW_AT_call_origin
	.byte	31                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x4f6:0x6 DW_TAG_call_site
	.long	628                             # DW_AT_call_origin
	.byte	32                              # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4fd:0x5b DW_TAG_subprogram
	.byte	33                              # DW_AT_low_pc
	.long	.Lfunc_end11-.Lfunc_begin11     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	68                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0x509:0xa DW_TAG_formal_parameter
	.byte	81                              # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x513:0xa DW_TAG_formal_parameter
	.byte	82                              # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x51d:0xa DW_TAG_formal_parameter
	.byte	83                              # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x527:0xa DW_TAG_formal_parameter
	.byte	84                              # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x531:0xa DW_TAG_formal_parameter
	.byte	85                              # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x53b:0xa DW_TAG_formal_parameter
	.byte	86                              # DW_AT_location
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	28                              # Abbrev [28] 0x545:0x6 DW_TAG_call_site
	.long	723                             # DW_AT_call_origin
	.byte	34                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x54b:0x6 DW_TAG_call_site
	.long	723                             # DW_AT_call_origin
	.byte	35                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x551:0x6 DW_TAG_call_site
	.long	723                             # DW_AT_call_origin
	.byte	36                              # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	29                              # Abbrev [29] 0x558:0x45 DW_TAG_subprogram
	.byte	28                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x560:0x8 DW_TAG_formal_parameter
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x568:0x8 DW_TAG_formal_parameter
	.byte	33                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	30                              # Abbrev [30] 0x570:0x8 DW_TAG_formal_parameter
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x578:0x8 DW_TAG_formal_parameter
	.byte	35                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	13                              # Abbrev [13] 0x580:0x8 DW_TAG_variable
	.byte	36                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	31                              # Abbrev [31] 0x588:0x14 DW_TAG_lexical_block
	.byte	13                              # Abbrev [13] 0x589:0x8 DW_TAG_variable
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	31                              # Abbrev [31] 0x591:0xa DW_TAG_lexical_block
	.byte	13                              # Abbrev [13] 0x592:0x8 DW_TAG_variable
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x59d:0x5 DW_TAG_pointer_type
	.long	1442                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x5a2:0x8 DW_TAG_typedef
	.long	1450                            # DW_AT_type
	.byte	32                              # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	24                              # DW_AT_decl_line
	.byte	8                               # Abbrev [8] 0x5aa:0x8 DW_TAG_typedef
	.long	1458                            # DW_AT_type
	.byte	31                              # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.byte	38                              # DW_AT_decl_line
	.byte	5                               # Abbrev [5] 0x5b2:0x4 DW_TAG_base_type
	.byte	30                              # DW_AT_name
	.byte	8                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	27                              # Abbrev [27] 0x5b6:0x108 DW_TAG_subprogram
	.byte	37                              # DW_AT_low_pc
	.long	.Lfunc_end12-.Lfunc_begin12     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	69                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	403                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	19                              # Abbrev [19] 0x5c2:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	403                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x5cd:0xa DW_TAG_formal_parameter
	.byte	87                              # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	403                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x5d7:0xa DW_TAG_formal_parameter
	.byte	88                              # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	403                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x5e1:0xa DW_TAG_formal_parameter
	.byte	89                              # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	403                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x5eb:0xa DW_TAG_formal_parameter
	.byte	90                              # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	403                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0x5f5:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	89
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	403                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x600:0x43 DW_TAG_inlined_subroutine
	.long	1368                            # DW_AT_abstract_origin
	.byte	38                              # DW_AT_low_pc
	.long	.Ltmp453-.Ltmp422               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	403                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x60e:0x6 DW_TAG_formal_parameter
	.byte	91                              # DW_AT_location
	.long	1376                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x614:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	1384                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x61a:0x6 DW_TAG_formal_parameter
	.byte	92                              # DW_AT_location
	.long	1392                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x620:0x6 DW_TAG_formal_parameter
	.byte	93                              # DW_AT_location
	.long	1400                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x626:0x6 DW_TAG_variable
	.byte	94                              # DW_AT_location
	.long	1408                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x62c:0x16 DW_TAG_lexical_block
	.byte	38                              # DW_AT_low_pc
	.long	.Ltmp453-.Ltmp422               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x632:0x6 DW_TAG_variable
	.byte	95                              # DW_AT_location
	.long	1417                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x638:0x9 DW_TAG_lexical_block
	.byte	10                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0x63a:0x6 DW_TAG_variable
	.byte	96                              # DW_AT_location
	.long	1426                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x643:0x3d DW_TAG_inlined_subroutine
	.long	1368                            # DW_AT_abstract_origin
	.byte	39                              # DW_AT_low_pc
	.long	.Ltmp485-.Ltmp454               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	403                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x651:0x6 DW_TAG_formal_parameter
	.byte	98                              # DW_AT_location
	.long	1376                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x657:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	1384                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x65d:0x6 DW_TAG_formal_parameter
	.byte	99                              # DW_AT_location
	.long	1392                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x663:0x6 DW_TAG_variable
	.byte	101                             # DW_AT_location
	.long	1408                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x669:0x16 DW_TAG_lexical_block
	.byte	39                              # DW_AT_low_pc
	.long	.Ltmp485-.Ltmp454               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x66f:0x6 DW_TAG_variable
	.byte	97                              # DW_AT_location
	.long	1417                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x675:0x9 DW_TAG_lexical_block
	.byte	11                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0x677:0x6 DW_TAG_variable
	.byte	100                             # DW_AT_location
	.long	1426                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x680:0x3d DW_TAG_inlined_subroutine
	.long	1368                            # DW_AT_abstract_origin
	.byte	40                              # DW_AT_low_pc
	.long	.Ltmp517-.Ltmp486               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	403                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x68e:0x6 DW_TAG_formal_parameter
	.byte	103                             # DW_AT_location
	.long	1376                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x694:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	1384                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x69a:0x6 DW_TAG_formal_parameter
	.byte	104                             # DW_AT_location
	.long	1392                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x6a0:0x6 DW_TAG_variable
	.byte	106                             # DW_AT_location
	.long	1408                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x6a6:0x16 DW_TAG_lexical_block
	.byte	40                              # DW_AT_low_pc
	.long	.Ltmp517-.Ltmp486               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x6ac:0x6 DW_TAG_variable
	.byte	102                             # DW_AT_location
	.long	1417                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x6b2:0x9 DW_TAG_lexical_block
	.byte	12                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0x6b4:0x6 DW_TAG_variable
	.byte	105                             # DW_AT_location
	.long	1426                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	29                              # Abbrev [29] 0x6be:0x45 DW_TAG_subprogram
	.byte	39                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	64                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x6c6:0x8 DW_TAG_formal_parameter
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	64                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x6ce:0x8 DW_TAG_formal_parameter
	.byte	33                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	64                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	30                              # Abbrev [30] 0x6d6:0x8 DW_TAG_formal_parameter
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	64                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x6de:0x8 DW_TAG_formal_parameter
	.byte	35                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	64                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	13                              # Abbrev [13] 0x6e6:0x8 DW_TAG_variable
	.byte	36                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	64                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	31                              # Abbrev [31] 0x6ee:0x14 DW_TAG_lexical_block
	.byte	13                              # Abbrev [13] 0x6ef:0x8 DW_TAG_variable
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	64                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	31                              # Abbrev [31] 0x6f7:0xa DW_TAG_lexical_block
	.byte	13                              # Abbrev [13] 0x6f8:0x8 DW_TAG_variable
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	64                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x703:0x108 DW_TAG_subprogram
	.byte	41                              # DW_AT_low_pc
	.long	.Lfunc_end13-.Lfunc_begin13     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	70                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	404                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	19                              # Abbrev [19] 0x70f:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	404                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x71a:0xa DW_TAG_formal_parameter
	.byte	107                             # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	404                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x724:0xa DW_TAG_formal_parameter
	.byte	108                             # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	404                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x72e:0xa DW_TAG_formal_parameter
	.byte	109                             # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	404                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x738:0xa DW_TAG_formal_parameter
	.byte	110                             # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	404                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0x742:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	89
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	404                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x74d:0x43 DW_TAG_inlined_subroutine
	.long	1726                            # DW_AT_abstract_origin
	.byte	42                              # DW_AT_low_pc
	.long	.Ltmp534-.Ltmp519               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	404                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x75b:0x6 DW_TAG_formal_parameter
	.byte	111                             # DW_AT_location
	.long	1734                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x761:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	1742                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x767:0x6 DW_TAG_formal_parameter
	.byte	112                             # DW_AT_location
	.long	1750                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x76d:0x6 DW_TAG_formal_parameter
	.byte	113                             # DW_AT_location
	.long	1758                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x773:0x6 DW_TAG_variable
	.byte	114                             # DW_AT_location
	.long	1766                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x779:0x16 DW_TAG_lexical_block
	.byte	42                              # DW_AT_low_pc
	.long	.Ltmp534-.Ltmp519               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x77f:0x6 DW_TAG_variable
	.byte	115                             # DW_AT_location
	.long	1775                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x785:0x9 DW_TAG_lexical_block
	.byte	13                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0x787:0x6 DW_TAG_variable
	.byte	116                             # DW_AT_location
	.long	1784                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x790:0x3d DW_TAG_inlined_subroutine
	.long	1726                            # DW_AT_abstract_origin
	.byte	43                              # DW_AT_low_pc
	.long	.Ltmp550-.Ltmp535               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	404                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x79e:0x6 DW_TAG_formal_parameter
	.byte	118                             # DW_AT_location
	.long	1734                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x7a4:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	1742                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x7aa:0x6 DW_TAG_formal_parameter
	.byte	119                             # DW_AT_location
	.long	1750                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x7b0:0x6 DW_TAG_variable
	.byte	121                             # DW_AT_location
	.long	1766                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x7b6:0x16 DW_TAG_lexical_block
	.byte	43                              # DW_AT_low_pc
	.long	.Ltmp550-.Ltmp535               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x7bc:0x6 DW_TAG_variable
	.byte	117                             # DW_AT_location
	.long	1775                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x7c2:0x9 DW_TAG_lexical_block
	.byte	14                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0x7c4:0x6 DW_TAG_variable
	.byte	120                             # DW_AT_location
	.long	1784                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x7cd:0x3d DW_TAG_inlined_subroutine
	.long	1726                            # DW_AT_abstract_origin
	.byte	44                              # DW_AT_low_pc
	.long	.Ltmp566-.Ltmp551               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	404                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x7db:0x6 DW_TAG_formal_parameter
	.byte	123                             # DW_AT_location
	.long	1734                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x7e1:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	1742                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x7e7:0x6 DW_TAG_formal_parameter
	.byte	124                             # DW_AT_location
	.long	1750                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x7ed:0x6 DW_TAG_variable
	.byte	126                             # DW_AT_location
	.long	1766                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x7f3:0x16 DW_TAG_lexical_block
	.byte	44                              # DW_AT_low_pc
	.long	.Ltmp566-.Ltmp551               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x7f9:0x6 DW_TAG_variable
	.byte	122                             # DW_AT_location
	.long	1775                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x7ff:0x9 DW_TAG_lexical_block
	.byte	15                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0x801:0x6 DW_TAG_variable
	.byte	125                             # DW_AT_location
	.long	1784                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x80b:0x60 DW_TAG_subprogram
	.byte	45                              # DW_AT_low_pc
	.long	.Lfunc_end14-.Lfunc_begin14     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	71                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	405                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0x817:0xa DW_TAG_formal_parameter
	.byte	127                             # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	405                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x821:0xb DW_TAG_formal_parameter
	.ascii	"\200\001"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	405                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x82c:0xb DW_TAG_formal_parameter
	.ascii	"\201\001"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	405                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x837:0xb DW_TAG_formal_parameter
	.ascii	"\202\001"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	405                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x842:0xb DW_TAG_formal_parameter
	.ascii	"\203\001"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	405                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x84d:0xb DW_TAG_formal_parameter
	.ascii	"\204\001"                      # DW_AT_location
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	405                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	28                              # Abbrev [28] 0x858:0x6 DW_TAG_call_site
	.long	942                             # DW_AT_call_origin
	.byte	46                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x85e:0x6 DW_TAG_call_site
	.long	942                             # DW_AT_call_origin
	.byte	47                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x864:0x6 DW_TAG_call_site
	.long	942                             # DW_AT_call_origin
	.byte	48                              # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x86b:0x61 DW_TAG_subprogram
	.byte	49                              # DW_AT_low_pc
	.long	.Lfunc_end15-.Lfunc_begin15     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	72                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	406                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0x877:0xb DW_TAG_formal_parameter
	.ascii	"\205\001"                      # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	406                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x882:0xb DW_TAG_formal_parameter
	.ascii	"\206\001"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	406                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x88d:0xb DW_TAG_formal_parameter
	.ascii	"\207\001"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	406                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x898:0xb DW_TAG_formal_parameter
	.ascii	"\210\001"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	406                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x8a3:0xb DW_TAG_formal_parameter
	.ascii	"\211\001"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	406                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x8ae:0xb DW_TAG_formal_parameter
	.ascii	"\212\001"                      # DW_AT_location
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	406                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	28                              # Abbrev [28] 0x8b9:0x6 DW_TAG_call_site
	.long	1031                            # DW_AT_call_origin
	.byte	50                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x8bf:0x6 DW_TAG_call_site
	.long	1031                            # DW_AT_call_origin
	.byte	51                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x8c5:0x6 DW_TAG_call_site
	.long	1031                            # DW_AT_call_origin
	.byte	52                              # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	29                              # Abbrev [29] 0x8cc:0x45 DW_TAG_subprogram
	.byte	40                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x8d4:0x8 DW_TAG_formal_parameter
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x8dc:0x8 DW_TAG_formal_parameter
	.byte	33                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	30                              # Abbrev [30] 0x8e4:0x8 DW_TAG_formal_parameter
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x8ec:0x8 DW_TAG_formal_parameter
	.byte	35                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	13                              # Abbrev [13] 0x8f4:0x8 DW_TAG_variable
	.byte	36                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	31                              # Abbrev [31] 0x8fc:0x14 DW_TAG_lexical_block
	.byte	13                              # Abbrev [13] 0x8fd:0x8 DW_TAG_variable
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	31                              # Abbrev [31] 0x905:0xa DW_TAG_lexical_block
	.byte	13                              # Abbrev [13] 0x906:0x8 DW_TAG_variable
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x911:0x11c DW_TAG_subprogram
	.byte	53                              # DW_AT_low_pc
	.long	.Lfunc_end16-.Lfunc_begin16     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	73                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	407                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	19                              # Abbrev [19] 0x91d:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	407                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x928:0xb DW_TAG_formal_parameter
	.ascii	"\213\001"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	407                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x933:0xb DW_TAG_formal_parameter
	.ascii	"\214\001"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	407                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x93e:0xb DW_TAG_formal_parameter
	.ascii	"\215\001"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	407                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x949:0xb DW_TAG_formal_parameter
	.ascii	"\216\001"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	407                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0x954:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	89
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	407                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x95f:0x49 DW_TAG_inlined_subroutine
	.long	2252                            # DW_AT_abstract_origin
	.byte	54                              # DW_AT_low_pc
	.long	.Ltmp616-.Ltmp595               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	407                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x96d:0x7 DW_TAG_formal_parameter
	.ascii	"\217\001"                      # DW_AT_location
	.long	2260                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x974:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	2268                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x97a:0x7 DW_TAG_formal_parameter
	.ascii	"\220\001"                      # DW_AT_location
	.long	2276                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x981:0x7 DW_TAG_formal_parameter
	.ascii	"\221\001"                      # DW_AT_location
	.long	2284                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x988:0x7 DW_TAG_variable
	.ascii	"\222\001"                      # DW_AT_location
	.long	2292                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x98f:0x18 DW_TAG_lexical_block
	.byte	54                              # DW_AT_low_pc
	.long	.Ltmp616-.Ltmp595               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x995:0x7 DW_TAG_variable
	.ascii	"\223\001"                      # DW_AT_location
	.long	2301                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x99c:0xa DW_TAG_lexical_block
	.byte	16                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0x99e:0x7 DW_TAG_variable
	.ascii	"\224\001"                      # DW_AT_location
	.long	2310                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x9a8:0x42 DW_TAG_inlined_subroutine
	.long	2252                            # DW_AT_abstract_origin
	.byte	55                              # DW_AT_low_pc
	.long	.Ltmp638-.Ltmp617               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	407                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x9b6:0x7 DW_TAG_formal_parameter
	.ascii	"\226\001"                      # DW_AT_location
	.long	2260                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x9bd:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	2268                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x9c3:0x7 DW_TAG_formal_parameter
	.ascii	"\227\001"                      # DW_AT_location
	.long	2276                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x9ca:0x7 DW_TAG_variable
	.ascii	"\231\001"                      # DW_AT_location
	.long	2292                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0x9d1:0x18 DW_TAG_lexical_block
	.byte	55                              # DW_AT_low_pc
	.long	.Ltmp638-.Ltmp617               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x9d7:0x7 DW_TAG_variable
	.ascii	"\225\001"                      # DW_AT_location
	.long	2301                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x9de:0xa DW_TAG_lexical_block
	.byte	17                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0x9e0:0x7 DW_TAG_variable
	.ascii	"\230\001"                      # DW_AT_location
	.long	2310                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x9ea:0x42 DW_TAG_inlined_subroutine
	.long	2252                            # DW_AT_abstract_origin
	.byte	56                              # DW_AT_low_pc
	.long	.Ltmp660-.Ltmp639               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	407                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x9f8:0x7 DW_TAG_formal_parameter
	.ascii	"\233\001"                      # DW_AT_location
	.long	2260                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x9ff:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	2268                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xa05:0x7 DW_TAG_formal_parameter
	.ascii	"\234\001"                      # DW_AT_location
	.long	2276                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xa0c:0x7 DW_TAG_variable
	.ascii	"\236\001"                      # DW_AT_location
	.long	2292                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xa13:0x18 DW_TAG_lexical_block
	.byte	56                              # DW_AT_low_pc
	.long	.Ltmp660-.Ltmp639               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xa19:0x7 DW_TAG_variable
	.ascii	"\232\001"                      # DW_AT_location
	.long	2301                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0xa20:0xa DW_TAG_lexical_block
	.byte	18                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0xa22:0x7 DW_TAG_variable
	.ascii	"\235\001"                      # DW_AT_location
	.long	2310                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0xa2d:0x74 DW_TAG_subprogram
	.byte	57                              # DW_AT_low_pc
	.long	.Lfunc_end17-.Lfunc_begin17     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	74                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	401                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0xa39:0xb DW_TAG_formal_parameter
	.ascii	"\237\001"                      # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	401                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xa44:0xb DW_TAG_formal_parameter
	.ascii	"\240\001"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	401                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xa4f:0xb DW_TAG_formal_parameter
	.ascii	"\241\001"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	401                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xa5a:0xb DW_TAG_formal_parameter
	.ascii	"\242\001"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	401                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xa65:0xb DW_TAG_formal_parameter
	.ascii	"\243\001"                      # DW_AT_location
	.byte	180                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	401                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xa70:0xb DW_TAG_formal_parameter
	.ascii	"\244\001"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	401                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0xa7b:0xd DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\300"
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	401                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	28                              # Abbrev [28] 0xa88:0x6 DW_TAG_call_site
	.long	628                             # DW_AT_call_origin
	.byte	58                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xa8e:0x6 DW_TAG_call_site
	.long	628                             # DW_AT_call_origin
	.byte	59                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xa94:0x6 DW_TAG_call_site
	.long	628                             # DW_AT_call_origin
	.byte	60                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xa9a:0x6 DW_TAG_call_site
	.long	628                             # DW_AT_call_origin
	.byte	61                              # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0xaa1:0x74 DW_TAG_subprogram
	.byte	62                              # DW_AT_low_pc
	.long	.Lfunc_end18-.Lfunc_begin18     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	75                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0xaad:0xb DW_TAG_formal_parameter
	.ascii	"\245\001"                      # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xab8:0xb DW_TAG_formal_parameter
	.ascii	"\246\001"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xac3:0xb DW_TAG_formal_parameter
	.ascii	"\247\001"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xace:0xb DW_TAG_formal_parameter
	.ascii	"\250\001"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xad9:0xb DW_TAG_formal_parameter
	.ascii	"\251\001"                      # DW_AT_location
	.byte	180                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xae4:0xb DW_TAG_formal_parameter
	.ascii	"\252\001"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0xaef:0xd DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\300"
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	28                              # Abbrev [28] 0xafc:0x6 DW_TAG_call_site
	.long	723                             # DW_AT_call_origin
	.byte	63                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xb02:0x6 DW_TAG_call_site
	.long	723                             # DW_AT_call_origin
	.byte	64                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xb08:0x6 DW_TAG_call_site
	.long	723                             # DW_AT_call_origin
	.byte	65                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xb0e:0x6 DW_TAG_call_site
	.long	723                             # DW_AT_call_origin
	.byte	66                              # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0xb15:0x14e DW_TAG_subprogram
	.byte	67                              # DW_AT_low_pc
	.long	.Lfunc_end19-.Lfunc_begin19     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	76                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	403                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	19                              # Abbrev [19] 0xb21:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	403                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xb2c:0xb DW_TAG_formal_parameter
	.ascii	"\253\001"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	403                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xb37:0xb DW_TAG_formal_parameter
	.ascii	"\254\001"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	403                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xb42:0xb DW_TAG_formal_parameter
	.ascii	"\255\001"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	403                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xb4d:0xb DW_TAG_formal_parameter
	.ascii	"\256\001"                      # DW_AT_location
	.byte	180                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	403                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xb58:0xb DW_TAG_formal_parameter
	.ascii	"\257\001"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	403                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0xb63:0xc DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	8
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	403                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0xb6f:0x3b DW_TAG_inlined_subroutine
	.long	1368                            # DW_AT_abstract_origin
	.byte	68                              # DW_AT_low_pc
	.long	.Ltmp724-.Ltmp693               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	403                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0xb7d:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	1384                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xb83:0x7 DW_TAG_formal_parameter
	.ascii	"\260\001"                      # DW_AT_location
	.long	1392                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xb8a:0x7 DW_TAG_variable
	.ascii	"\272\001"                      # DW_AT_location
	.long	1408                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xb91:0x18 DW_TAG_lexical_block
	.byte	68                              # DW_AT_low_pc
	.long	.Ltmp724-.Ltmp693               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xb97:0x7 DW_TAG_variable
	.ascii	"\262\001"                      # DW_AT_location
	.long	1417                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0xb9e:0xa DW_TAG_lexical_block
	.byte	19                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0xba0:0x7 DW_TAG_variable
	.ascii	"\261\001"                      # DW_AT_location
	.long	1426                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0xbaa:0x3b DW_TAG_inlined_subroutine
	.long	1368                            # DW_AT_abstract_origin
	.byte	69                              # DW_AT_low_pc
	.long	.Ltmp757-.Ltmp725               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	403                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0xbb8:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	1384                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xbbe:0x7 DW_TAG_formal_parameter
	.ascii	"\264\001"                      # DW_AT_location
	.long	1392                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xbc5:0x7 DW_TAG_variable
	.ascii	"\273\001"                      # DW_AT_location
	.long	1408                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xbcc:0x18 DW_TAG_lexical_block
	.byte	69                              # DW_AT_low_pc
	.long	.Ltmp757-.Ltmp725               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xbd2:0x7 DW_TAG_variable
	.ascii	"\265\001"                      # DW_AT_location
	.long	1417                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0xbd9:0xa DW_TAG_lexical_block
	.byte	20                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0xbdb:0x7 DW_TAG_variable
	.ascii	"\263\001"                      # DW_AT_location
	.long	1426                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0xbe5:0x3b DW_TAG_inlined_subroutine
	.long	1368                            # DW_AT_abstract_origin
	.byte	70                              # DW_AT_low_pc
	.long	.Ltmp790-.Ltmp758               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	403                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0xbf3:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	1384                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xbf9:0x7 DW_TAG_formal_parameter
	.ascii	"\267\001"                      # DW_AT_location
	.long	1392                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xc00:0x7 DW_TAG_variable
	.ascii	"\274\001"                      # DW_AT_location
	.long	1408                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xc07:0x18 DW_TAG_lexical_block
	.byte	70                              # DW_AT_low_pc
	.long	.Ltmp790-.Ltmp758               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xc0d:0x7 DW_TAG_variable
	.ascii	"\270\001"                      # DW_AT_location
	.long	1417                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0xc14:0xa DW_TAG_lexical_block
	.byte	21                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0xc16:0x7 DW_TAG_variable
	.ascii	"\266\001"                      # DW_AT_location
	.long	1426                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0xc20:0x42 DW_TAG_inlined_subroutine
	.long	1368                            # DW_AT_abstract_origin
	.byte	71                              # DW_AT_low_pc
	.long	.Ltmp822-.Ltmp791               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	403                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0xc2e:0x7 DW_TAG_formal_parameter
	.ascii	"\271\001"                      # DW_AT_location
	.long	1376                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xc35:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	1384                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xc3b:0x7 DW_TAG_formal_parameter
	.ascii	"\276\001"                      # DW_AT_location
	.long	1392                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xc42:0x7 DW_TAG_variable
	.ascii	"\300\001"                      # DW_AT_location
	.long	1408                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xc49:0x18 DW_TAG_lexical_block
	.byte	71                              # DW_AT_low_pc
	.long	.Ltmp822-.Ltmp791               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xc4f:0x7 DW_TAG_variable
	.ascii	"\275\001"                      # DW_AT_location
	.long	1417                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0xc56:0xa DW_TAG_lexical_block
	.byte	22                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0xc58:0x7 DW_TAG_variable
	.ascii	"\277\001"                      # DW_AT_location
	.long	1426                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0xc63:0x14e DW_TAG_subprogram
	.byte	72                              # DW_AT_low_pc
	.long	.Lfunc_end20-.Lfunc_begin20     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	77                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	404                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	19                              # Abbrev [19] 0xc6f:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	404                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xc7a:0xb DW_TAG_formal_parameter
	.ascii	"\301\001"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	404                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xc85:0xb DW_TAG_formal_parameter
	.ascii	"\302\001"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	404                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xc90:0xb DW_TAG_formal_parameter
	.ascii	"\303\001"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	404                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xc9b:0xb DW_TAG_formal_parameter
	.ascii	"\304\001"                      # DW_AT_location
	.byte	180                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	404                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xca6:0xb DW_TAG_formal_parameter
	.ascii	"\305\001"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	404                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0xcb1:0xc DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	8
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	404                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0xcbd:0x3b DW_TAG_inlined_subroutine
	.long	1726                            # DW_AT_abstract_origin
	.byte	73                              # DW_AT_low_pc
	.long	.Ltmp840-.Ltmp825               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	404                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0xccb:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	1742                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xcd1:0x7 DW_TAG_formal_parameter
	.ascii	"\306\001"                      # DW_AT_location
	.long	1750                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xcd8:0x7 DW_TAG_variable
	.ascii	"\320\001"                      # DW_AT_location
	.long	1766                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xcdf:0x18 DW_TAG_lexical_block
	.byte	73                              # DW_AT_low_pc
	.long	.Ltmp840-.Ltmp825               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xce5:0x7 DW_TAG_variable
	.ascii	"\310\001"                      # DW_AT_location
	.long	1775                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0xcec:0xa DW_TAG_lexical_block
	.byte	23                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0xcee:0x7 DW_TAG_variable
	.ascii	"\307\001"                      # DW_AT_location
	.long	1784                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0xcf8:0x3b DW_TAG_inlined_subroutine
	.long	1726                            # DW_AT_abstract_origin
	.byte	74                              # DW_AT_low_pc
	.long	.Ltmp857-.Ltmp841               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	404                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0xd06:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	1742                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xd0c:0x7 DW_TAG_formal_parameter
	.ascii	"\312\001"                      # DW_AT_location
	.long	1750                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xd13:0x7 DW_TAG_variable
	.ascii	"\321\001"                      # DW_AT_location
	.long	1766                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xd1a:0x18 DW_TAG_lexical_block
	.byte	74                              # DW_AT_low_pc
	.long	.Ltmp857-.Ltmp841               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xd20:0x7 DW_TAG_variable
	.ascii	"\313\001"                      # DW_AT_location
	.long	1775                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0xd27:0xa DW_TAG_lexical_block
	.byte	24                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0xd29:0x7 DW_TAG_variable
	.ascii	"\311\001"                      # DW_AT_location
	.long	1784                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0xd33:0x3b DW_TAG_inlined_subroutine
	.long	1726                            # DW_AT_abstract_origin
	.byte	75                              # DW_AT_low_pc
	.long	.Ltmp874-.Ltmp858               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	404                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	34                              # Abbrev [34] 0xd41:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	1742                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xd47:0x7 DW_TAG_formal_parameter
	.ascii	"\315\001"                      # DW_AT_location
	.long	1750                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xd4e:0x7 DW_TAG_variable
	.ascii	"\322\001"                      # DW_AT_location
	.long	1766                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xd55:0x18 DW_TAG_lexical_block
	.byte	75                              # DW_AT_low_pc
	.long	.Ltmp874-.Ltmp858               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xd5b:0x7 DW_TAG_variable
	.ascii	"\316\001"                      # DW_AT_location
	.long	1775                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0xd62:0xa DW_TAG_lexical_block
	.byte	25                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0xd64:0x7 DW_TAG_variable
	.ascii	"\314\001"                      # DW_AT_location
	.long	1784                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0xd6e:0x42 DW_TAG_inlined_subroutine
	.long	1726                            # DW_AT_abstract_origin
	.byte	76                              # DW_AT_low_pc
	.long	.Ltmp890-.Ltmp875               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	404                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0xd7c:0x7 DW_TAG_formal_parameter
	.ascii	"\317\001"                      # DW_AT_location
	.long	1734                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xd83:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	1742                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xd89:0x7 DW_TAG_formal_parameter
	.ascii	"\324\001"                      # DW_AT_location
	.long	1750                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xd90:0x7 DW_TAG_variable
	.ascii	"\326\001"                      # DW_AT_location
	.long	1766                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xd97:0x18 DW_TAG_lexical_block
	.byte	76                              # DW_AT_low_pc
	.long	.Ltmp890-.Ltmp875               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xd9d:0x7 DW_TAG_variable
	.ascii	"\323\001"                      # DW_AT_location
	.long	1775                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0xda4:0xa DW_TAG_lexical_block
	.byte	26                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0xda6:0x7 DW_TAG_variable
	.ascii	"\325\001"                      # DW_AT_location
	.long	1784                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0xdb1:0x74 DW_TAG_subprogram
	.byte	77                              # DW_AT_low_pc
	.long	.Lfunc_end21-.Lfunc_begin21     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	78                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	405                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0xdbd:0xb DW_TAG_formal_parameter
	.ascii	"\327\001"                      # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	405                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xdc8:0xb DW_TAG_formal_parameter
	.ascii	"\330\001"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	405                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xdd3:0xb DW_TAG_formal_parameter
	.ascii	"\331\001"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	405                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xdde:0xb DW_TAG_formal_parameter
	.ascii	"\332\001"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	405                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xde9:0xb DW_TAG_formal_parameter
	.ascii	"\333\001"                      # DW_AT_location
	.byte	180                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	405                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xdf4:0xb DW_TAG_formal_parameter
	.ascii	"\334\001"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	405                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0xdff:0xd DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\300"
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	405                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	28                              # Abbrev [28] 0xe0c:0x6 DW_TAG_call_site
	.long	942                             # DW_AT_call_origin
	.byte	78                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xe12:0x6 DW_TAG_call_site
	.long	942                             # DW_AT_call_origin
	.byte	79                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xe18:0x6 DW_TAG_call_site
	.long	942                             # DW_AT_call_origin
	.byte	80                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xe1e:0x6 DW_TAG_call_site
	.long	942                             # DW_AT_call_origin
	.byte	81                              # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0xe25:0x74 DW_TAG_subprogram
	.byte	82                              # DW_AT_low_pc
	.long	.Lfunc_end22-.Lfunc_begin22     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	79                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	406                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0xe31:0xb DW_TAG_formal_parameter
	.ascii	"\335\001"                      # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	406                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xe3c:0xb DW_TAG_formal_parameter
	.ascii	"\336\001"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	406                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xe47:0xb DW_TAG_formal_parameter
	.ascii	"\337\001"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	406                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xe52:0xb DW_TAG_formal_parameter
	.ascii	"\340\001"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	406                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xe5d:0xb DW_TAG_formal_parameter
	.ascii	"\341\001"                      # DW_AT_location
	.byte	180                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	406                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xe68:0xb DW_TAG_formal_parameter
	.ascii	"\342\001"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	406                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0xe73:0xd DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\300"
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	406                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	28                              # Abbrev [28] 0xe80:0x6 DW_TAG_call_site
	.long	1031                            # DW_AT_call_origin
	.byte	83                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xe86:0x6 DW_TAG_call_site
	.long	1031                            # DW_AT_call_origin
	.byte	84                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xe8c:0x6 DW_TAG_call_site
	.long	1031                            # DW_AT_call_origin
	.byte	85                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xe92:0x6 DW_TAG_call_site
	.long	1031                            # DW_AT_call_origin
	.byte	86                              # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0xe99:0x17a DW_TAG_subprogram
	.byte	87                              # DW_AT_low_pc
	.long	.Lfunc_end23-.Lfunc_begin23     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	80                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	407                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	19                              # Abbrev [19] 0xea5:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	407                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xeb0:0xb DW_TAG_formal_parameter
	.ascii	"\343\001"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	407                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xebb:0xb DW_TAG_formal_parameter
	.ascii	"\344\001"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	407                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xec6:0xb DW_TAG_formal_parameter
	.ascii	"\345\001"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	407                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xed1:0xb DW_TAG_formal_parameter
	.ascii	"\346\001"                      # DW_AT_location
	.byte	180                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	407                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0xedc:0xb DW_TAG_formal_parameter
	.ascii	"\347\001"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	407                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0xee7:0xc DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	24
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	407                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0xef3:0x4d DW_TAG_inlined_subroutine
	.long	2252                            # DW_AT_abstract_origin
	.byte	88                              # DW_AT_low_pc
	.long	.Ltmp945-.Ltmp923               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	407                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0xf01:0xb DW_TAG_formal_parameter
	.byte	5                               # DW_AT_location
	.byte	117
	.byte	48
	.byte	64
	.byte	34
	.byte	159
	.long	2260                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xf0c:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	2268                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xf12:0x7 DW_TAG_formal_parameter
	.ascii	"\350\001"                      # DW_AT_location
	.long	2276                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xf19:0x7 DW_TAG_formal_parameter
	.ascii	"\351\001"                      # DW_AT_location
	.long	2284                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xf20:0x7 DW_TAG_variable
	.ascii	"\361\001"                      # DW_AT_location
	.long	2292                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xf27:0x18 DW_TAG_lexical_block
	.byte	88                              # DW_AT_low_pc
	.long	.Ltmp945-.Ltmp923               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xf2d:0x7 DW_TAG_variable
	.ascii	"\362\001"                      # DW_AT_location
	.long	2301                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0xf34:0xa DW_TAG_lexical_block
	.byte	27                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0xf36:0x7 DW_TAG_variable
	.ascii	"\360\001"                      # DW_AT_location
	.long	2310                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0xf40:0x46 DW_TAG_inlined_subroutine
	.long	2252                            # DW_AT_abstract_origin
	.byte	89                              # DW_AT_low_pc
	.long	.Ltmp967-.Ltmp946               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	407                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0xf4e:0xb DW_TAG_formal_parameter
	.byte	5                               # DW_AT_location
	.byte	117
	.byte	48
	.byte	64
	.byte	34
	.byte	159
	.long	2260                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xf59:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	2268                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xf5f:0x7 DW_TAG_formal_parameter
	.ascii	"\354\001"                      # DW_AT_location
	.long	2276                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xf66:0x7 DW_TAG_variable
	.ascii	"\363\001"                      # DW_AT_location
	.long	2292                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xf6d:0x18 DW_TAG_lexical_block
	.byte	89                              # DW_AT_low_pc
	.long	.Ltmp967-.Ltmp946               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xf73:0x7 DW_TAG_variable
	.ascii	"\353\001"                      # DW_AT_location
	.long	2301                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0xf7a:0xa DW_TAG_lexical_block
	.byte	28                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0xf7c:0x7 DW_TAG_variable
	.ascii	"\352\001"                      # DW_AT_location
	.long	2310                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0xf86:0x46 DW_TAG_inlined_subroutine
	.long	2252                            # DW_AT_abstract_origin
	.byte	90                              # DW_AT_low_pc
	.long	.Ltmp989-.Ltmp968               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	407                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0xf94:0xb DW_TAG_formal_parameter
	.byte	5                               # DW_AT_location
	.byte	117
	.byte	48
	.byte	64
	.byte	34
	.byte	159
	.long	2260                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xf9f:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	2268                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xfa5:0x7 DW_TAG_formal_parameter
	.ascii	"\357\001"                      # DW_AT_location
	.long	2276                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xfac:0x7 DW_TAG_variable
	.ascii	"\364\001"                      # DW_AT_location
	.long	2292                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xfb3:0x18 DW_TAG_lexical_block
	.byte	90                              # DW_AT_low_pc
	.long	.Ltmp989-.Ltmp968               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xfb9:0x7 DW_TAG_variable
	.ascii	"\356\001"                      # DW_AT_location
	.long	2301                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0xfc0:0xa DW_TAG_lexical_block
	.byte	29                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0xfc2:0x7 DW_TAG_variable
	.ascii	"\355\001"                      # DW_AT_location
	.long	2310                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0xfcc:0x46 DW_TAG_inlined_subroutine
	.long	2252                            # DW_AT_abstract_origin
	.byte	91                              # DW_AT_low_pc
	.long	.Ltmp1011-.Ltmp990              # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	407                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0xfda:0xb DW_TAG_formal_parameter
	.byte	5                               # DW_AT_location
	.byte	117
	.byte	48
	.byte	64
	.byte	34
	.byte	159
	.long	2260                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0xfe5:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	2268                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xfeb:0x7 DW_TAG_formal_parameter
	.ascii	"\366\001"                      # DW_AT_location
	.long	2276                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xff2:0x7 DW_TAG_variable
	.ascii	"\370\001"                      # DW_AT_location
	.long	2292                            # DW_AT_abstract_origin
	.byte	15                              # Abbrev [15] 0xff9:0x18 DW_TAG_lexical_block
	.byte	91                              # DW_AT_low_pc
	.long	.Ltmp1011-.Ltmp990              # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xfff:0x7 DW_TAG_variable
	.ascii	"\365\001"                      # DW_AT_location
	.long	2301                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x1006:0xa DW_TAG_lexical_block
	.byte	30                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0x1008:0x7 DW_TAG_variable
	.ascii	"\367\001"                      # DW_AT_location
	.long	2310                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x1013:0x73 DW_TAG_subprogram
	.byte	92                              # DW_AT_low_pc
	.long	.Lfunc_end24-.Lfunc_begin24     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	81                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	11                              # Abbrev [11] 0x1022:0xa DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x102c:0xa DW_TAG_formal_parameter
	.ascii	"\371\001"                      # DW_AT_location
	.byte	33                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	11                              # Abbrev [11] 0x1036:0xa DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x1040:0xa DW_TAG_formal_parameter
	.ascii	"\372\001"                      # DW_AT_location
	.byte	35                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x104a:0xa DW_TAG_variable
	.ascii	"\373\001"                      # DW_AT_location
	.byte	36                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x1054:0x31 DW_TAG_lexical_block
	.byte	93                              # DW_AT_low_pc
	.long	.Ltmp1020-.Ltmp1015             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x105a:0xa DW_TAG_variable
	.ascii	"\374\001"                      # DW_AT_location
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x1064:0x20 DW_TAG_lexical_block
	.byte	93                              # DW_AT_low_pc
	.long	.Ltmp1016-.Ltmp1015             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x106a:0xa DW_TAG_variable
	.ascii	"\375\001"                      # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x1074:0xf DW_TAG_lexical_block
	.byte	93                              # DW_AT_low_pc
	.long	.Ltmp1016-.Ltmp1015             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x107a:0x8 DW_TAG_variable
	.byte	164                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x1086:0x73 DW_TAG_subprogram
	.byte	94                              # DW_AT_low_pc
	.long	.Lfunc_end25-.Lfunc_begin25     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	82                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	11                              # Abbrev [11] 0x1095:0xa DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x109f:0xa DW_TAG_formal_parameter
	.ascii	"\376\001"                      # DW_AT_location
	.byte	33                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	11                              # Abbrev [11] 0x10a9:0xa DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x10b3:0xa DW_TAG_formal_parameter
	.ascii	"\377\001"                      # DW_AT_location
	.byte	35                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x10bd:0xa DW_TAG_variable
	.ascii	"\200\002"                      # DW_AT_location
	.byte	36                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x10c7:0x31 DW_TAG_lexical_block
	.byte	95                              # DW_AT_low_pc
	.long	.Ltmp1029-.Ltmp1024             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x10cd:0xa DW_TAG_variable
	.ascii	"\201\002"                      # DW_AT_location
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x10d7:0x20 DW_TAG_lexical_block
	.byte	95                              # DW_AT_low_pc
	.long	.Ltmp1025-.Ltmp1024             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x10dd:0xa DW_TAG_variable
	.ascii	"\202\002"                      # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x10e7:0xf DW_TAG_lexical_block
	.byte	95                              # DW_AT_low_pc
	.long	.Ltmp1025-.Ltmp1024             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x10ed:0x8 DW_TAG_variable
	.byte	164                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x10f9:0x73 DW_TAG_subprogram
	.byte	96                              # DW_AT_low_pc
	.long	.Lfunc_end26-.Lfunc_begin26     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	83                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	11                              # Abbrev [11] 0x1108:0xa DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x1112:0xa DW_TAG_formal_parameter
	.ascii	"\203\002"                      # DW_AT_location
	.byte	33                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	11                              # Abbrev [11] 0x111c:0xa DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x1126:0xa DW_TAG_formal_parameter
	.ascii	"\204\002"                      # DW_AT_location
	.byte	35                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x1130:0xa DW_TAG_variable
	.ascii	"\205\002"                      # DW_AT_location
	.byte	36                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x113a:0x31 DW_TAG_lexical_block
	.byte	97                              # DW_AT_low_pc
	.long	.Ltmp1038-.Ltmp1033             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x1140:0xa DW_TAG_variable
	.ascii	"\206\002"                      # DW_AT_location
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x114a:0x20 DW_TAG_lexical_block
	.byte	97                              # DW_AT_low_pc
	.long	.Ltmp1034-.Ltmp1033             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x1150:0xa DW_TAG_variable
	.ascii	"\207\002"                      # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x115a:0xf DW_TAG_lexical_block
	.byte	97                              # DW_AT_low_pc
	.long	.Ltmp1034-.Ltmp1033             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x1160:0x8 DW_TAG_variable
	.byte	164                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x116c:0x6b DW_TAG_subprogram
	.byte	98                              # DW_AT_low_pc
	.long	.Lfunc_end27-.Lfunc_begin27     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	84                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	94                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0x117b:0xa DW_TAG_formal_parameter
	.ascii	"\212\002"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	94                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x1185:0xa DW_TAG_formal_parameter
	.ascii	"\210\002"                      # DW_AT_location
	.byte	33                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	94                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0x118f:0xa DW_TAG_formal_parameter
	.ascii	"\213\002"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	94                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x1199:0xa DW_TAG_formal_parameter
	.ascii	"\211\002"                      # DW_AT_location
	.byte	35                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	94                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x11a3:0xa DW_TAG_variable
	.ascii	"\215\002"                      # DW_AT_location
	.byte	36                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	94                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x11ad:0x29 DW_TAG_lexical_block
	.byte	99                              # DW_AT_low_pc
	.long	.Ltmp1068-.Ltmp1040             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x11b3:0xa DW_TAG_variable
	.ascii	"\214\002"                      # DW_AT_location
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	94                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x11bd:0x18 DW_TAG_lexical_block
	.byte	31                              # DW_AT_ranges
	.byte	12                              # Abbrev [12] 0x11bf:0xa DW_TAG_variable
	.ascii	"\216\002"                      # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	94                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x11c9:0xb DW_TAG_lexical_block
	.byte	32                              # DW_AT_ranges
	.byte	13                              # Abbrev [13] 0x11cb:0x8 DW_TAG_variable
	.byte	164                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	94                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x11d7:0x6b DW_TAG_subprogram
	.byte	100                             # DW_AT_low_pc
	.long	.Lfunc_end28-.Lfunc_begin28     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	95                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0x11e6:0xa DW_TAG_formal_parameter
	.ascii	"\217\002"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	95                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	11                              # Abbrev [11] 0x11f0:0xa DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.byte	33                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	95                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0x11fa:0xa DW_TAG_formal_parameter
	.ascii	"\220\002"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	95                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x1204:0xa DW_TAG_formal_parameter
	.ascii	"\221\002"                      # DW_AT_location
	.byte	35                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	95                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x120e:0xa DW_TAG_variable
	.ascii	"\222\002"                      # DW_AT_location
	.byte	36                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	95                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x1218:0x29 DW_TAG_lexical_block
	.byte	101                             # DW_AT_low_pc
	.long	.Ltmp1082-.Ltmp1070             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x121e:0xa DW_TAG_variable
	.ascii	"\223\002"                      # DW_AT_location
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	95                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x1228:0x18 DW_TAG_lexical_block
	.byte	33                              # DW_AT_ranges
	.byte	12                              # Abbrev [12] 0x122a:0xa DW_TAG_variable
	.ascii	"\224\002"                      # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	95                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x1234:0xb DW_TAG_lexical_block
	.byte	34                              # DW_AT_ranges
	.byte	13                              # Abbrev [13] 0x1236:0x8 DW_TAG_variable
	.byte	164                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	95                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x1242:0x6b DW_TAG_subprogram
	.byte	102                             # DW_AT_low_pc
	.long	.Lfunc_end29-.Lfunc_begin29     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	86                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	96                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0x1251:0xa DW_TAG_formal_parameter
	.ascii	"\225\002"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	96                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x125b:0xa DW_TAG_formal_parameter
	.ascii	"\226\002"                      # DW_AT_location
	.byte	33                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	96                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0x1265:0xa DW_TAG_formal_parameter
	.ascii	"\227\002"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	96                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x126f:0xa DW_TAG_formal_parameter
	.ascii	"\230\002"                      # DW_AT_location
	.byte	35                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	96                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x1279:0xa DW_TAG_variable
	.ascii	"\231\002"                      # DW_AT_location
	.byte	36                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	96                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x1283:0x29 DW_TAG_lexical_block
	.byte	103                             # DW_AT_low_pc
	.long	.Ltmp1115-.Ltmp1085             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x1289:0xa DW_TAG_variable
	.ascii	"\232\002"                      # DW_AT_location
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	96                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x1293:0x18 DW_TAG_lexical_block
	.byte	35                              # DW_AT_ranges
	.byte	12                              # Abbrev [12] 0x1295:0xa DW_TAG_variable
	.ascii	"\233\002"                      # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	96                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x129f:0xb DW_TAG_lexical_block
	.byte	36                              # DW_AT_ranges
	.byte	13                              # Abbrev [13] 0x12a1:0x8 DW_TAG_variable
	.byte	164                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	96                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x12ad:0x6b DW_TAG_subprogram
	.byte	104                             # DW_AT_low_pc
	.long	.Lfunc_end30-.Lfunc_begin30     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	87                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0x12bc:0xa DW_TAG_formal_parameter
	.ascii	"\234\002"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x12c6:0xa DW_TAG_formal_parameter
	.ascii	"\235\002"                      # DW_AT_location
	.byte	33                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0x12d0:0xa DW_TAG_formal_parameter
	.ascii	"\236\002"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x12da:0xa DW_TAG_formal_parameter
	.ascii	"\237\002"                      # DW_AT_location
	.byte	35                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x12e4:0xa DW_TAG_variable
	.ascii	"\240\002"                      # DW_AT_location
	.byte	36                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x12ee:0x29 DW_TAG_lexical_block
	.byte	105                             # DW_AT_low_pc
	.long	.Ltmp1130-.Ltmp1118             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x12f4:0xa DW_TAG_variable
	.ascii	"\241\002"                      # DW_AT_location
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x12fe:0x18 DW_TAG_lexical_block
	.byte	37                              # DW_AT_ranges
	.byte	12                              # Abbrev [12] 0x1300:0xa DW_TAG_variable
	.ascii	"\242\002"                      # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x130a:0xb DW_TAG_lexical_block
	.byte	38                              # DW_AT_ranges
	.byte	13                              # Abbrev [13] 0x130c:0x8 DW_TAG_variable
	.byte	164                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	36                              # Abbrev [36] 0x1318:0x78 DW_TAG_subprogram
	.byte	106                             # DW_AT_low_pc
	.long	.Lfunc_end31-.Lfunc_begin31     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	88                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	271                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1328:0xb DW_TAG_formal_parameter
	.ascii	"\243\002"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	271                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1333:0xb DW_TAG_formal_parameter
	.ascii	"\244\002"                      # DW_AT_location
	.byte	45                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	271                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x133e:0xb DW_TAG_formal_parameter
	.ascii	"\245\002"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	271                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1349:0xb DW_TAG_formal_parameter
	.ascii	"\246\002"                      # DW_AT_location
	.byte	46                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	271                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x1354:0xb DW_TAG_variable
	.ascii	"\247\002"                      # DW_AT_location
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	271                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	28                              # Abbrev [28] 0x135f:0x6 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.byte	107                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1365:0x6 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.byte	108                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x136b:0x6 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.byte	109                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1371:0x6 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.byte	110                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1377:0x6 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.byte	111                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x137d:0x6 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.byte	112                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1383:0x6 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.byte	113                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1389:0x6 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.byte	114                             # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x1390:0x14f DW_TAG_subprogram
	.ascii	"\200\001"                      # DW_AT_low_pc
	.long	.Lfunc_end35-.Lfunc_begin35     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	89                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	234                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0x13a0:0xa DW_TAG_formal_parameter
	.ascii	"\267\002"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	234                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x13aa:0xa DW_TAG_formal_parameter
	.ascii	"\270\002"                      # DW_AT_location
	.byte	45                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	234                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0x13b4:0xa DW_TAG_formal_parameter
	.ascii	"\271\002"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	234                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x13be:0xa DW_TAG_formal_parameter
	.ascii	"\272\002"                      # DW_AT_location
	.byte	46                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	234                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x13c8:0xa DW_TAG_variable
	.ascii	"\273\002"                      # DW_AT_location
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	238                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x13d2:0xa DW_TAG_variable
	.ascii	"\275\002"                      # DW_AT_location
	.byte	182                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	237                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x13dc:0xa DW_TAG_variable
	.ascii	"\276\002"                      # DW_AT_location
	.byte	183                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	237                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x13e6:0xa DW_TAG_variable
	.ascii	"\277\002"                      # DW_AT_location
	.byte	184                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	237                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x13f0:0xa DW_TAG_variable
	.ascii	"\300\002"                      # DW_AT_location
	.byte	185                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	237                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x13fa:0xa DW_TAG_variable
	.ascii	"\305\002"                      # DW_AT_location
	.byte	190                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	236                             # DW_AT_decl_line
	.long	12769                           # DW_AT_type
	.byte	15                              # Abbrev [15] 0x1404:0x3d DW_TAG_lexical_block
	.ascii	"\201\001"                      # DW_AT_low_pc
	.long	.Ltmp1260-.Ltmp1194             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x140b:0xa DW_TAG_variable
	.ascii	"\274\002"                      # DW_AT_location
	.byte	181                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	239                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x1415:0x2b DW_TAG_lexical_block
	.byte	39                              # DW_AT_ranges
	.byte	12                              # Abbrev [12] 0x1417:0xa DW_TAG_variable
	.ascii	"\301\002"                      # DW_AT_location
	.byte	186                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	245                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x1421:0xa DW_TAG_variable
	.ascii	"\302\002"                      # DW_AT_location
	.byte	187                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	245                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x142b:0xa DW_TAG_variable
	.ascii	"\303\002"                      # DW_AT_location
	.byte	188                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	245                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x1435:0xa DW_TAG_variable
	.ascii	"\304\002"                      # DW_AT_location
	.byte	189                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	245                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	15                              # Abbrev [15] 0x1441:0x9d DW_TAG_lexical_block
	.ascii	"\202\001"                      # DW_AT_low_pc
	.long	.Ltmp1368-.Ltmp1260             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x1448:0xa DW_TAG_variable
	.ascii	"\306\002"                      # DW_AT_location
	.byte	181                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	247                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x1452:0x2b DW_TAG_lexical_block
	.byte	40                              # DW_AT_ranges
	.byte	12                              # Abbrev [12] 0x1454:0xa DW_TAG_variable
	.ascii	"\307\002"                      # DW_AT_location
	.byte	186                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	249                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x145e:0xa DW_TAG_variable
	.ascii	"\310\002"                      # DW_AT_location
	.byte	187                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	249                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x1468:0xa DW_TAG_variable
	.ascii	"\311\002"                      # DW_AT_location
	.byte	188                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	249                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x1472:0xa DW_TAG_variable
	.ascii	"\312\002"                      # DW_AT_location
	.byte	189                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	249                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	37                              # Abbrev [37] 0x147d:0x18 DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.byte	41                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	250                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x1486:0x7 DW_TAG_formal_parameter
	.ascii	"\313\002"                      # DW_AT_location
	.long	5555                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x148d:0x7 DW_TAG_variable
	.ascii	"\314\002"                      # DW_AT_location
	.long	5563                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	37                              # Abbrev [37] 0x1495:0x18 DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.byte	42                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	250                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x149e:0x7 DW_TAG_formal_parameter
	.ascii	"\315\002"                      # DW_AT_location
	.long	5555                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x14a5:0x7 DW_TAG_variable
	.ascii	"\316\002"                      # DW_AT_location
	.long	5563                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	37                              # Abbrev [37] 0x14ad:0x18 DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.byte	43                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	250                             # DW_AT_call_line
	.byte	38                              # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x14b6:0x7 DW_TAG_formal_parameter
	.ascii	"\317\002"                      # DW_AT_location
	.long	5555                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x14bd:0x7 DW_TAG_variable
	.ascii	"\320\002"                      # DW_AT_location
	.long	5563                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	37                              # Abbrev [37] 0x14c5:0x18 DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.byte	44                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	250                             # DW_AT_call_line
	.byte	49                              # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x14ce:0x7 DW_TAG_formal_parameter
	.ascii	"\321\002"                      # DW_AT_location
	.long	5555                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x14d5:0x7 DW_TAG_variable
	.ascii	"\322\002"                      # DW_AT_location
	.long	5563                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x14df:0x48 DW_TAG_subprogram
	.byte	115                             # DW_AT_low_pc
	.long	.Lfunc_end32-.Lfunc_begin32     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.long	6048                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x14eb:0x7 DW_TAG_formal_parameter
	.ascii	"\250\002"                      # DW_AT_location
	.long	6057                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x14f2:0x7 DW_TAG_formal_parameter
	.ascii	"\251\002"                      # DW_AT_location
	.long	6066                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x14f9:0x7 DW_TAG_formal_parameter
	.ascii	"\252\002"                      # DW_AT_location
	.long	6075                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1500:0x7 DW_TAG_formal_parameter
	.ascii	"\253\002"                      # DW_AT_location
	.long	6084                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1507:0x7 DW_TAG_variable
	.ascii	"\254\002"                      # DW_AT_location
	.long	6093                            # DW_AT_abstract_origin
	.byte	28                              # Abbrev [28] 0x150e:0x6 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.byte	116                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1514:0x6 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.byte	117                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x151a:0x6 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.byte	118                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1520:0x6 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.byte	119                             # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x1527:0x48 DW_TAG_subprogram
	.byte	120                             # DW_AT_low_pc
	.long	.Lfunc_end33-.Lfunc_begin33     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.long	6411                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1533:0x7 DW_TAG_formal_parameter
	.ascii	"\255\002"                      # DW_AT_location
	.long	6420                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x153a:0x7 DW_TAG_formal_parameter
	.ascii	"\256\002"                      # DW_AT_location
	.long	6429                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1541:0x7 DW_TAG_formal_parameter
	.ascii	"\257\002"                      # DW_AT_location
	.long	6438                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1548:0x7 DW_TAG_formal_parameter
	.ascii	"\260\002"                      # DW_AT_location
	.long	6447                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x154f:0x7 DW_TAG_variable
	.ascii	"\261\002"                      # DW_AT_location
	.long	6456                            # DW_AT_abstract_origin
	.byte	28                              # Abbrev [28] 0x1556:0x6 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.byte	121                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x155c:0x6 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.byte	122                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1562:0x6 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.byte	123                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1568:0x6 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.byte	124                             # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x156f:0x3c DW_TAG_subprogram
	.byte	125                             # DW_AT_low_pc
	.long	.Lfunc_end34-.Lfunc_begin34     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.long	6775                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x157b:0x7 DW_TAG_formal_parameter
	.ascii	"\262\002"                      # DW_AT_location
	.long	6784                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1582:0x7 DW_TAG_formal_parameter
	.ascii	"\263\002"                      # DW_AT_location
	.long	6793                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1589:0x7 DW_TAG_formal_parameter
	.ascii	"\264\002"                      # DW_AT_location
	.long	6802                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1590:0x7 DW_TAG_formal_parameter
	.ascii	"\265\002"                      # DW_AT_location
	.long	6811                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1597:0x7 DW_TAG_variable
	.ascii	"\266\002"                      # DW_AT_location
	.long	6820                            # DW_AT_abstract_origin
	.byte	28                              # Abbrev [28] 0x159e:0x6 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.byte	126                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x15a4:0x6 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.byte	127                             # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	29                              # Abbrev [29] 0x15ab:0x19 DW_TAG_subprogram
	.byte	41                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	199                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	147                             # DW_AT_type
                                        # DW_AT_inline
	.byte	30                              # Abbrev [30] 0x15b3:0x8 DW_TAG_formal_parameter
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	199                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	13                              # Abbrev [13] 0x15bb:0x8 DW_TAG_variable
	.byte	43                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	201                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x15c4:0x3f DW_TAG_subprogram
	.ascii	"\203\001"                      # DW_AT_low_pc
	.long	.Lfunc_end36-.Lfunc_begin36     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.long	7197                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x15d1:0x7 DW_TAG_formal_parameter
	.ascii	"\323\002"                      # DW_AT_location
	.long	7206                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x15d8:0x7 DW_TAG_formal_parameter
	.ascii	"\324\002"                      # DW_AT_location
	.long	7215                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x15df:0x7 DW_TAG_formal_parameter
	.ascii	"\325\002"                      # DW_AT_location
	.long	7224                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x15e6:0x7 DW_TAG_formal_parameter
	.ascii	"\326\002"                      # DW_AT_location
	.long	7233                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x15ed:0x7 DW_TAG_variable
	.ascii	"\327\002"                      # DW_AT_location
	.long	7242                            # DW_AT_abstract_origin
	.byte	28                              # Abbrev [28] 0x15f4:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\204\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x15fb:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\205\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x1603:0x138 DW_TAG_subprogram
	.ascii	"\206\001"                      # DW_AT_low_pc
	.long	.Lfunc_end37-.Lfunc_begin37     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	90                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	209                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0x1613:0xa DW_TAG_formal_parameter
	.ascii	"\330\002"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	209                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x161d:0xa DW_TAG_formal_parameter
	.ascii	"\331\002"                      # DW_AT_location
	.byte	45                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	209                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	10                              # Abbrev [10] 0x1627:0xa DW_TAG_formal_parameter
	.ascii	"\332\002"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	209                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x1631:0xa DW_TAG_formal_parameter
	.ascii	"\333\002"                      # DW_AT_location
	.byte	46                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	209                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x163b:0xa DW_TAG_variable
	.ascii	"\334\002"                      # DW_AT_location
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	213                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x1645:0xa DW_TAG_variable
	.ascii	"\336\002"                      # DW_AT_location
	.byte	182                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	212                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x164f:0xa DW_TAG_variable
	.ascii	"\337\002"                      # DW_AT_location
	.byte	183                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	212                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x1659:0xa DW_TAG_variable
	.ascii	"\340\002"                      # DW_AT_location
	.byte	191                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	212                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x1663:0xa DW_TAG_variable
	.ascii	"\341\002"                      # DW_AT_location
	.byte	184                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	212                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x166d:0xa DW_TAG_variable
	.ascii	"\342\002"                      # DW_AT_location
	.byte	185                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	212                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x1677:0xa DW_TAG_variable
	.ascii	"\343\002"                      # DW_AT_location
	.byte	192                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	212                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x1681:0xa DW_TAG_variable
	.ascii	"\344\002"                      # DW_AT_location
	.byte	190                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	211                             # DW_AT_decl_line
	.long	12787                           # DW_AT_type
	.byte	15                              # Abbrev [15] 0x168b:0x12 DW_TAG_lexical_block
	.ascii	"\207\001"                      # DW_AT_low_pc
	.long	.Ltmp1436-.Ltmp1381             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x1692:0xa DW_TAG_variable
	.ascii	"\335\002"                      # DW_AT_location
	.byte	181                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	214                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	15                              # Abbrev [15] 0x169d:0x9d DW_TAG_lexical_block
	.ascii	"\210\001"                      # DW_AT_low_pc
	.long	.Ltmp1491-.Ltmp1436             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x16a4:0xa DW_TAG_variable
	.ascii	"\345\002"                      # DW_AT_location
	.byte	181                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	225                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x16ae:0x2b DW_TAG_lexical_block
	.byte	45                              # DW_AT_ranges
	.byte	12                              # Abbrev [12] 0x16b0:0xa DW_TAG_variable
	.ascii	"\346\002"                      # DW_AT_location
	.byte	186                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	227                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x16ba:0xa DW_TAG_variable
	.ascii	"\347\002"                      # DW_AT_location
	.byte	187                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	227                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x16c4:0xa DW_TAG_variable
	.ascii	"\350\002"                      # DW_AT_location
	.byte	188                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	227                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x16ce:0xa DW_TAG_variable
	.ascii	"\351\002"                      # DW_AT_location
	.byte	189                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	227                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	37                              # Abbrev [37] 0x16d9:0x18 DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.byte	46                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	228                             # DW_AT_call_line
	.byte	14                              # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x16e2:0x7 DW_TAG_formal_parameter
	.ascii	"\352\002"                      # DW_AT_location
	.long	5555                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x16e9:0x7 DW_TAG_variable
	.ascii	"\353\002"                      # DW_AT_location
	.long	5563                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	37                              # Abbrev [37] 0x16f1:0x18 DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.byte	47                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	228                             # DW_AT_call_line
	.byte	25                              # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x16fa:0x7 DW_TAG_formal_parameter
	.ascii	"\354\002"                      # DW_AT_location
	.long	5555                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1701:0x7 DW_TAG_variable
	.ascii	"\355\002"                      # DW_AT_location
	.long	5563                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	37                              # Abbrev [37] 0x1709:0x18 DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.byte	48                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	228                             # DW_AT_call_line
	.byte	36                              # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x1712:0x7 DW_TAG_formal_parameter
	.ascii	"\356\002"                      # DW_AT_location
	.long	5555                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1719:0x7 DW_TAG_variable
	.ascii	"\357\002"                      # DW_AT_location
	.long	5563                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	37                              # Abbrev [37] 0x1721:0x18 DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.byte	49                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	228                             # DW_AT_call_line
	.byte	47                              # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x172a:0x7 DW_TAG_formal_parameter
	.ascii	"\360\002"                      # DW_AT_location
	.long	5555                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1731:0x7 DW_TAG_variable
	.ascii	"\361\002"                      # DW_AT_location
	.long	5563                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x173b:0x65 DW_TAG_subprogram
	.ascii	"\211\001"                      # DW_AT_low_pc
	.long	.Lfunc_end38-.Lfunc_begin38     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	91                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0x1748:0xb DW_TAG_formal_parameter
	.ascii	"\362\002"                      # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1753:0xb DW_TAG_formal_parameter
	.ascii	"\363\002"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x175e:0xb DW_TAG_formal_parameter
	.ascii	"\364\002"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1769:0xb DW_TAG_formal_parameter
	.ascii	"\365\002"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1774:0xb DW_TAG_formal_parameter
	.ascii	"\366\002"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x177f:0xb DW_TAG_formal_parameter
	.ascii	"\367\002"                      # DW_AT_location
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	28                              # Abbrev [28] 0x178a:0x7 DW_TAG_call_site
	.long	4888                            # DW_AT_call_origin
	.ascii	"\212\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1791:0x7 DW_TAG_call_site
	.long	4888                            # DW_AT_call_origin
	.ascii	"\213\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1798:0x7 DW_TAG_call_site
	.long	4888                            # DW_AT_call_origin
	.ascii	"\214\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	38                              # Abbrev [38] 0x17a0:0x37 DW_TAG_subprogram
	.byte	44                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	272                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
                                        # DW_AT_inline
	.byte	39                              # Abbrev [39] 0x17a9:0x9 DW_TAG_formal_parameter
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	272                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	39                              # Abbrev [39] 0x17b2:0x9 DW_TAG_formal_parameter
	.byte	45                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	272                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	39                              # Abbrev [39] 0x17bb:0x9 DW_TAG_formal_parameter
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	272                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	39                              # Abbrev [39] 0x17c4:0x9 DW_TAG_formal_parameter
	.byte	46                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	272                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	40                              # Abbrev [40] 0x17cd:0x9 DW_TAG_variable
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	272                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x17d7:0x134 DW_TAG_subprogram
	.ascii	"\215\001"                      # DW_AT_low_pc
	.long	.Lfunc_end39-.Lfunc_begin39     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	92                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0x17e4:0xb DW_TAG_formal_parameter
	.ascii	"\370\002"                      # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x17ef:0xb DW_TAG_formal_parameter
	.ascii	"\371\002"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x17fa:0xb DW_TAG_formal_parameter
	.ascii	"\372\002"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1805:0xb DW_TAG_formal_parameter
	.ascii	"\373\002"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1810:0xb DW_TAG_formal_parameter
	.ascii	"\374\002"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x181b:0xb DW_TAG_formal_parameter
	.ascii	"\375\002"                      # DW_AT_location
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x1826:0x32 DW_TAG_inlined_subroutine
	.long	6048                            # DW_AT_abstract_origin
	.ascii	"\216\001"                      # DW_AT_low_pc
	.long	.Ltmp1519-.Ltmp1508             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x1835:0x7 DW_TAG_formal_parameter
	.ascii	"\376\002"                      # DW_AT_location
	.long	6057                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x183c:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6066                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1842:0x7 DW_TAG_formal_parameter
	.ascii	"\377\002"                      # DW_AT_location
	.long	6075                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1849:0x7 DW_TAG_formal_parameter
	.ascii	"\200\003"                      # DW_AT_location
	.long	6084                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1850:0x7 DW_TAG_variable
	.ascii	"\201\003"                      # DW_AT_location
	.long	6093                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x1858:0x32 DW_TAG_inlined_subroutine
	.long	6048                            # DW_AT_abstract_origin
	.ascii	"\217\001"                      # DW_AT_low_pc
	.long	.Ltmp1530-.Ltmp1520             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x1867:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	6057                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x186e:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6066                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1874:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	93
	.long	6075                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x187b:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	6084                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1882:0x7 DW_TAG_variable
	.ascii	"\202\003"                      # DW_AT_location
	.long	6093                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x188a:0x2c DW_TAG_inlined_subroutine
	.long	6048                            # DW_AT_abstract_origin
	.ascii	"\220\001"                      # DW_AT_low_pc
	.long	.Ltmp1540-.Ltmp1531             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x1899:0x7 DW_TAG_formal_parameter
	.ascii	"\203\003"                      # DW_AT_location
	.long	6057                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x18a0:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6066                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x18a6:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	48
	.long	6075                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x18ae:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	6084                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x18b6:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\221\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x18bd:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\222\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x18c4:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\223\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x18cb:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\224\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x18d2:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\225\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x18d9:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\226\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x18e0:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\227\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x18e7:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\230\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x18ee:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\231\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x18f5:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\232\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x18fc:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\233\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1903:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\234\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	38                              # Abbrev [38] 0x190b:0x37 DW_TAG_subprogram
	.byte	48                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	273                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
                                        # DW_AT_inline
	.byte	39                              # Abbrev [39] 0x1914:0x9 DW_TAG_formal_parameter
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	273                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	39                              # Abbrev [39] 0x191d:0x9 DW_TAG_formal_parameter
	.byte	45                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	273                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	39                              # Abbrev [39] 0x1926:0x9 DW_TAG_formal_parameter
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	273                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	39                              # Abbrev [39] 0x192f:0x9 DW_TAG_formal_parameter
	.byte	46                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	273                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	40                              # Abbrev [40] 0x1938:0x9 DW_TAG_variable
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	273                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x1942:0x135 DW_TAG_subprogram
	.ascii	"\235\001"                      # DW_AT_low_pc
	.long	.Lfunc_end40-.Lfunc_begin40     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	93                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0x194f:0xb DW_TAG_formal_parameter
	.ascii	"\204\003"                      # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x195a:0xb DW_TAG_formal_parameter
	.ascii	"\205\003"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1965:0xb DW_TAG_formal_parameter
	.ascii	"\206\003"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1970:0xb DW_TAG_formal_parameter
	.ascii	"\207\003"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x197b:0xb DW_TAG_formal_parameter
	.ascii	"\210\003"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1986:0xb DW_TAG_formal_parameter
	.ascii	"\211\003"                      # DW_AT_location
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x1991:0x32 DW_TAG_inlined_subroutine
	.long	6411                            # DW_AT_abstract_origin
	.ascii	"\236\001"                      # DW_AT_low_pc
	.long	.Ltmp1558-.Ltmp1546             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x19a0:0x7 DW_TAG_formal_parameter
	.ascii	"\212\003"                      # DW_AT_location
	.long	6420                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x19a7:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6429                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x19ad:0x7 DW_TAG_formal_parameter
	.ascii	"\213\003"                      # DW_AT_location
	.long	6438                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x19b4:0x7 DW_TAG_formal_parameter
	.ascii	"\214\003"                      # DW_AT_location
	.long	6447                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x19bb:0x7 DW_TAG_variable
	.ascii	"\215\003"                      # DW_AT_location
	.long	6456                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x19c3:0x32 DW_TAG_inlined_subroutine
	.long	6411                            # DW_AT_abstract_origin
	.ascii	"\237\001"                      # DW_AT_low_pc
	.long	.Ltmp1570-.Ltmp1559             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x19d2:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	93
	.long	6420                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x19d9:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6429                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x19df:0x7 DW_TAG_formal_parameter
	.ascii	"\216\003"                      # DW_AT_location
	.long	6438                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x19e6:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	6447                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x19ed:0x7 DW_TAG_variable
	.ascii	"\217\003"                      # DW_AT_location
	.long	6456                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x19f5:0x2d DW_TAG_inlined_subroutine
	.long	6411                            # DW_AT_abstract_origin
	.ascii	"\240\001"                      # DW_AT_low_pc
	.long	.Ltmp1582-.Ltmp1571             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x1a04:0x7 DW_TAG_formal_parameter
	.ascii	"\220\003"                      # DW_AT_location
	.long	6420                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x1a0b:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6429                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1a11:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\300"
	.long	6438                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1a1a:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	6447                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x1a22:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\241\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1a29:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\242\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1a30:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\243\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1a37:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\244\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1a3e:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\245\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1a45:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\246\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1a4c:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\247\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1a53:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\250\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1a5a:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\251\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1a61:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\252\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1a68:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\253\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1a6f:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\254\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	38                              # Abbrev [38] 0x1a77:0x37 DW_TAG_subprogram
	.byte	49                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	274                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
                                        # DW_AT_inline
	.byte	39                              # Abbrev [39] 0x1a80:0x9 DW_TAG_formal_parameter
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	274                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	39                              # Abbrev [39] 0x1a89:0x9 DW_TAG_formal_parameter
	.byte	45                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	274                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	39                              # Abbrev [39] 0x1a92:0x9 DW_TAG_formal_parameter
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	274                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	39                              # Abbrev [39] 0x1a9b:0x9 DW_TAG_formal_parameter
	.byte	46                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	274                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	40                              # Abbrev [40] 0x1aa4:0x9 DW_TAG_variable
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	274                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x1aae:0x10a DW_TAG_subprogram
	.ascii	"\255\001"                      # DW_AT_low_pc
	.long	.Lfunc_end41-.Lfunc_begin41     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	94                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0x1abb:0xb DW_TAG_formal_parameter
	.ascii	"\221\003"                      # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1ac6:0xb DW_TAG_formal_parameter
	.ascii	"\222\003"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1ad1:0xb DW_TAG_formal_parameter
	.ascii	"\223\003"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1adc:0xb DW_TAG_formal_parameter
	.ascii	"\224\003"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1ae7:0xb DW_TAG_formal_parameter
	.ascii	"\225\003"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1af2:0xb DW_TAG_formal_parameter
	.ascii	"\226\003"                      # DW_AT_location
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x1afd:0x32 DW_TAG_inlined_subroutine
	.long	6775                            # DW_AT_abstract_origin
	.ascii	"\256\001"                      # DW_AT_low_pc
	.long	.Ltmp1594-.Ltmp1587             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x1b0c:0x7 DW_TAG_formal_parameter
	.ascii	"\227\003"                      # DW_AT_location
	.long	6784                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x1b13:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6793                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1b19:0x7 DW_TAG_formal_parameter
	.ascii	"\230\003"                      # DW_AT_location
	.long	6802                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1b20:0x7 DW_TAG_formal_parameter
	.ascii	"\231\003"                      # DW_AT_location
	.long	6811                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1b27:0x7 DW_TAG_variable
	.ascii	"\232\003"                      # DW_AT_location
	.long	6820                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x1b2f:0x32 DW_TAG_inlined_subroutine
	.long	6775                            # DW_AT_abstract_origin
	.ascii	"\257\001"                      # DW_AT_low_pc
	.long	.Ltmp1600-.Ltmp1595             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x1b3e:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	93
	.long	6784                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x1b45:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6793                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1b4b:0x7 DW_TAG_formal_parameter
	.ascii	"\233\003"                      # DW_AT_location
	.long	6802                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1b52:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	6811                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1b59:0x7 DW_TAG_variable
	.ascii	"\234\003"                      # DW_AT_location
	.long	6820                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x1b61:0x2c DW_TAG_inlined_subroutine
	.long	6775                            # DW_AT_abstract_origin
	.ascii	"\260\001"                      # DW_AT_low_pc
	.long	.Ltmp1607-.Ltmp1601             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x1b70:0x7 DW_TAG_formal_parameter
	.ascii	"\235\003"                      # DW_AT_location
	.long	6784                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x1b77:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6793                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1b7d:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	16
	.long	6802                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1b85:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	6811                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x1b8d:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\261\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1b94:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\262\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1b9b:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\263\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1ba2:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\264\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1ba9:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\265\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1bb0:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\266\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x1bb8:0x65 DW_TAG_subprogram
	.ascii	"\267\001"                      # DW_AT_low_pc
	.long	.Lfunc_end42-.Lfunc_begin42     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	95                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0x1bc5:0xb DW_TAG_formal_parameter
	.ascii	"\236\003"                      # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1bd0:0xb DW_TAG_formal_parameter
	.ascii	"\237\003"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1bdb:0xb DW_TAG_formal_parameter
	.ascii	"\240\003"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1be6:0xb DW_TAG_formal_parameter
	.ascii	"\241\003"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1bf1:0xb DW_TAG_formal_parameter
	.ascii	"\242\003"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1bfc:0xb DW_TAG_formal_parameter
	.ascii	"\243\003"                      # DW_AT_location
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	28                              # Abbrev [28] 0x1c07:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\270\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1c0e:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\271\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1c15:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\272\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	38                              # Abbrev [38] 0x1c1d:0x37 DW_TAG_subprogram
	.byte	50                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	275                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
                                        # DW_AT_inline
	.byte	39                              # Abbrev [39] 0x1c26:0x9 DW_TAG_formal_parameter
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	275                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	39                              # Abbrev [39] 0x1c2f:0x9 DW_TAG_formal_parameter
	.byte	45                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	275                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	39                              # Abbrev [39] 0x1c38:0x9 DW_TAG_formal_parameter
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	275                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	39                              # Abbrev [39] 0x1c41:0x9 DW_TAG_formal_parameter
	.byte	46                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	275                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	40                              # Abbrev [40] 0x1c4a:0x9 DW_TAG_variable
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	275                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x1c54:0x10a DW_TAG_subprogram
	.ascii	"\273\001"                      # DW_AT_low_pc
	.long	.Lfunc_end43-.Lfunc_begin43     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	96                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0x1c61:0xb DW_TAG_formal_parameter
	.ascii	"\244\003"                      # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1c6c:0xb DW_TAG_formal_parameter
	.ascii	"\245\003"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1c77:0xb DW_TAG_formal_parameter
	.ascii	"\246\003"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1c82:0xb DW_TAG_formal_parameter
	.ascii	"\247\003"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1c8d:0xb DW_TAG_formal_parameter
	.ascii	"\250\003"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1c98:0xb DW_TAG_formal_parameter
	.ascii	"\251\003"                      # DW_AT_location
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x1ca3:0x32 DW_TAG_inlined_subroutine
	.long	7197                            # DW_AT_abstract_origin
	.ascii	"\274\001"                      # DW_AT_low_pc
	.long	.Ltmp1633-.Ltmp1626             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x1cb2:0x7 DW_TAG_formal_parameter
	.ascii	"\252\003"                      # DW_AT_location
	.long	7206                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x1cb9:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	7215                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1cbf:0x7 DW_TAG_formal_parameter
	.ascii	"\253\003"                      # DW_AT_location
	.long	7224                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1cc6:0x7 DW_TAG_formal_parameter
	.ascii	"\254\003"                      # DW_AT_location
	.long	7233                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1ccd:0x7 DW_TAG_variable
	.ascii	"\255\003"                      # DW_AT_location
	.long	7242                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x1cd5:0x32 DW_TAG_inlined_subroutine
	.long	7197                            # DW_AT_abstract_origin
	.ascii	"\275\001"                      # DW_AT_low_pc
	.long	.Ltmp1639-.Ltmp1634             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x1ce4:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	93
	.long	7206                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x1ceb:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	7215                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1cf1:0x7 DW_TAG_formal_parameter
	.ascii	"\256\003"                      # DW_AT_location
	.long	7224                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1cf8:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	7233                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1cff:0x7 DW_TAG_variable
	.ascii	"\257\003"                      # DW_AT_location
	.long	7242                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x1d07:0x2c DW_TAG_inlined_subroutine
	.long	7197                            # DW_AT_abstract_origin
	.ascii	"\276\001"                      # DW_AT_low_pc
	.long	.Ltmp1646-.Ltmp1640             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x1d16:0x7 DW_TAG_formal_parameter
	.ascii	"\260\003"                      # DW_AT_location
	.long	7206                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x1d1d:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	7215                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1d23:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	16
	.long	7224                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1d2b:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	7233                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x1d33:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\277\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1d3a:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\300\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1d41:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\301\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1d48:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\302\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1d4f:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\303\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1d56:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\304\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x1d5e:0x65 DW_TAG_subprogram
	.ascii	"\305\001"                      # DW_AT_low_pc
	.long	.Lfunc_end44-.Lfunc_begin44     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	97                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0x1d6b:0xb DW_TAG_formal_parameter
	.ascii	"\261\003"                      # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1d76:0xb DW_TAG_formal_parameter
	.ascii	"\262\003"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1d81:0xb DW_TAG_formal_parameter
	.ascii	"\263\003"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1d8c:0xb DW_TAG_formal_parameter
	.ascii	"\264\003"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1d97:0xb DW_TAG_formal_parameter
	.ascii	"\265\003"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1da2:0xb DW_TAG_formal_parameter
	.ascii	"\266\003"                      # DW_AT_location
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	28                              # Abbrev [28] 0x1dad:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\306\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1db4:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\307\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1dbb:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\310\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x1dc3:0x79 DW_TAG_subprogram
	.ascii	"\311\001"                      # DW_AT_low_pc
	.long	.Lfunc_end45-.Lfunc_begin45     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	98                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0x1dd0:0xb DW_TAG_formal_parameter
	.ascii	"\267\003"                      # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1ddb:0xb DW_TAG_formal_parameter
	.ascii	"\270\003"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1de6:0xb DW_TAG_formal_parameter
	.ascii	"\271\003"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1df1:0xb DW_TAG_formal_parameter
	.ascii	"\272\003"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1dfc:0xb DW_TAG_formal_parameter
	.ascii	"\273\003"                      # DW_AT_location
	.byte	180                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1e07:0xb DW_TAG_formal_parameter
	.ascii	"\274\003"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0x1e12:0xd DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\300"
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	28                              # Abbrev [28] 0x1e1f:0x7 DW_TAG_call_site
	.long	4888                            # DW_AT_call_origin
	.ascii	"\312\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1e26:0x7 DW_TAG_call_site
	.long	4888                            # DW_AT_call_origin
	.ascii	"\313\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1e2d:0x7 DW_TAG_call_site
	.long	4888                            # DW_AT_call_origin
	.ascii	"\314\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1e34:0x7 DW_TAG_call_site
	.long	4888                            # DW_AT_call_origin
	.ascii	"\315\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x1e3c:0x186 DW_TAG_subprogram
	.ascii	"\316\001"                      # DW_AT_low_pc
	.long	.Lfunc_end46-.Lfunc_begin46     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	99                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0x1e49:0xb DW_TAG_formal_parameter
	.ascii	"\275\003"                      # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1e54:0xb DW_TAG_formal_parameter
	.ascii	"\276\003"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1e5f:0xb DW_TAG_formal_parameter
	.ascii	"\277\003"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1e6a:0xb DW_TAG_formal_parameter
	.ascii	"\300\003"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1e75:0xb DW_TAG_formal_parameter
	.ascii	"\301\003"                      # DW_AT_location
	.byte	180                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1e80:0xb DW_TAG_formal_parameter
	.ascii	"\302\003"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0x1e8b:0xd DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\200\001"
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x1e98:0x32 DW_TAG_inlined_subroutine
	.long	6048                            # DW_AT_abstract_origin
	.ascii	"\317\001"                      # DW_AT_low_pc
	.long	.Ltmp1693-.Ltmp1682             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x1ea7:0x7 DW_TAG_formal_parameter
	.ascii	"\303\003"                      # DW_AT_location
	.long	6057                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x1eae:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6066                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1eb4:0x7 DW_TAG_formal_parameter
	.ascii	"\304\003"                      # DW_AT_location
	.long	6075                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1ebb:0x7 DW_TAG_formal_parameter
	.ascii	"\305\003"                      # DW_AT_location
	.long	6084                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1ec2:0x7 DW_TAG_variable
	.ascii	"\306\003"                      # DW_AT_location
	.long	6093                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x1eca:0x2c DW_TAG_inlined_subroutine
	.long	6048                            # DW_AT_abstract_origin
	.ascii	"\320\001"                      # DW_AT_low_pc
	.long	.Ltmp1704-.Ltmp1694             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x1ed9:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	40
	.long	6057                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x1ee1:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6066                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1ee7:0x7 DW_TAG_formal_parameter
	.ascii	"\307\003"                      # DW_AT_location
	.long	6075                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1eee:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	6084                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x1ef6:0x2d DW_TAG_inlined_subroutine
	.long	6048                            # DW_AT_abstract_origin
	.ascii	"\321\001"                      # DW_AT_low_pc
	.long	.Ltmp1715-.Ltmp1706             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x1f05:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	40
	.long	6057                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x1f0d:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6066                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1f13:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	56
	.long	6075                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1f1b:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	6084                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x1f23:0x2e DW_TAG_inlined_subroutine
	.long	6048                            # DW_AT_abstract_origin
	.ascii	"\322\001"                      # DW_AT_low_pc
	.long	.Ltmp1725-.Ltmp1717             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x1f32:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	40
	.long	6057                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x1f3a:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6066                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1f40:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\300"
	.long	6075                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1f49:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	6084                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x1f51:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\323\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1f58:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\324\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1f5f:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\325\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1f66:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\326\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1f6d:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\327\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1f74:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\330\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1f7b:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\331\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1f82:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\332\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1f89:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\333\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1f90:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\334\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1f97:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\335\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1f9e:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\336\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1fa5:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\337\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1fac:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\340\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1fb3:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\341\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1fba:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\342\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x1fc2:0x187 DW_TAG_subprogram
	.ascii	"\343\001"                      # DW_AT_low_pc
	.long	.Lfunc_end47-.Lfunc_begin47     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	100                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0x1fcf:0xb DW_TAG_formal_parameter
	.ascii	"\310\003"                      # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1fda:0xb DW_TAG_formal_parameter
	.ascii	"\311\003"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1fe5:0xb DW_TAG_formal_parameter
	.ascii	"\312\003"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1ff0:0xb DW_TAG_formal_parameter
	.ascii	"\313\003"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1ffb:0xb DW_TAG_formal_parameter
	.ascii	"\314\003"                      # DW_AT_location
	.byte	180                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2006:0xb DW_TAG_formal_parameter
	.ascii	"\315\003"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0x2011:0xd DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\220\001"
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x201e:0x32 DW_TAG_inlined_subroutine
	.long	6411                            # DW_AT_abstract_origin
	.ascii	"\344\001"                      # DW_AT_low_pc
	.long	.Ltmp1745-.Ltmp1731             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x202d:0x7 DW_TAG_formal_parameter
	.ascii	"\316\003"                      # DW_AT_location
	.long	6420                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x2034:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6429                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x203a:0x7 DW_TAG_formal_parameter
	.ascii	"\317\003"                      # DW_AT_location
	.long	6438                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x2041:0x7 DW_TAG_formal_parameter
	.ascii	"\320\003"                      # DW_AT_location
	.long	6447                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x2048:0x7 DW_TAG_variable
	.ascii	"\321\003"                      # DW_AT_location
	.long	6456                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x2050:0x2c DW_TAG_inlined_subroutine
	.long	6411                            # DW_AT_abstract_origin
	.ascii	"\345\001"                      # DW_AT_low_pc
	.long	.Ltmp1756-.Ltmp1746             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x205f:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	48
	.long	6420                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x2067:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6429                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x206d:0x7 DW_TAG_formal_parameter
	.ascii	"\322\003"                      # DW_AT_location
	.long	6438                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x2074:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	6447                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x207c:0x2e DW_TAG_inlined_subroutine
	.long	6411                            # DW_AT_abstract_origin
	.ascii	"\346\001"                      # DW_AT_low_pc
	.long	.Ltmp1766-.Ltmp1758             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x208b:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	48
	.long	6420                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x2093:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6429                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x2099:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\310"
	.long	6438                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x20a2:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	6447                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x20aa:0x2e DW_TAG_inlined_subroutine
	.long	6411                            # DW_AT_abstract_origin
	.ascii	"\347\001"                      # DW_AT_low_pc
	.long	.Ltmp1776-.Ltmp1768             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x20b9:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	48
	.long	6420                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x20c1:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6429                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x20c7:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\320"
	.long	6438                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x20d0:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	6447                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x20d8:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\350\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x20df:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\351\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x20e6:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\352\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x20ed:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\353\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x20f4:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\354\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x20fb:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\355\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2102:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\356\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2109:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\357\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2110:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\360\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2117:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\361\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x211e:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\362\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2125:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\363\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x212c:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\364\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2133:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\365\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x213a:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\366\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2141:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\367\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x2149:0x150 DW_TAG_subprogram
	.ascii	"\370\001"                      # DW_AT_low_pc
	.long	.Lfunc_end48-.Lfunc_begin48     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	101                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0x2156:0xb DW_TAG_formal_parameter
	.ascii	"\323\003"                      # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2161:0xb DW_TAG_formal_parameter
	.ascii	"\324\003"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x216c:0xb DW_TAG_formal_parameter
	.ascii	"\325\003"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2177:0xb DW_TAG_formal_parameter
	.ascii	"\326\003"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2182:0xb DW_TAG_formal_parameter
	.ascii	"\327\003"                      # DW_AT_location
	.byte	180                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x218d:0xb DW_TAG_formal_parameter
	.ascii	"\330\003"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0x2198:0xd DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\320"
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x21a5:0x2b DW_TAG_inlined_subroutine
	.long	6775                            # DW_AT_abstract_origin
	.ascii	"\371\001"                      # DW_AT_low_pc
	.long	.Ltmp1788-.Ltmp1781             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x21b4:0x7 DW_TAG_formal_parameter
	.ascii	"\331\003"                      # DW_AT_location
	.long	6784                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x21bb:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6793                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x21c1:0x7 DW_TAG_formal_parameter
	.ascii	"\332\003"                      # DW_AT_location
	.long	6802                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x21c8:0x7 DW_TAG_formal_parameter
	.ascii	"\333\003"                      # DW_AT_location
	.long	6811                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x21d0:0x32 DW_TAG_inlined_subroutine
	.long	6775                            # DW_AT_abstract_origin
	.ascii	"\372\001"                      # DW_AT_low_pc
	.long	.Ltmp1794-.Ltmp1789             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x21df:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	6784                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x21e6:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6793                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x21ec:0x7 DW_TAG_formal_parameter
	.ascii	"\335\003"                      # DW_AT_location
	.long	6802                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x21f3:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	6811                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x21fa:0x7 DW_TAG_variable
	.ascii	"\336\003"                      # DW_AT_location
	.long	6820                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x2202:0x32 DW_TAG_inlined_subroutine
	.long	6775                            # DW_AT_abstract_origin
	.ascii	"\373\001"                      # DW_AT_low_pc
	.long	.Ltmp1800-.Ltmp1795             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x2211:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	6784                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x2218:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6793                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x221e:0x7 DW_TAG_formal_parameter
	.ascii	"\337\003"                      # DW_AT_location
	.long	6802                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x2225:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	6811                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x222c:0x7 DW_TAG_variable
	.ascii	"\340\003"                      # DW_AT_location
	.long	6820                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x2234:0x2c DW_TAG_inlined_subroutine
	.long	6775                            # DW_AT_abstract_origin
	.ascii	"\374\001"                      # DW_AT_low_pc
	.long	.Ltmp1806-.Ltmp1801             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x2243:0x7 DW_TAG_formal_parameter
	.ascii	"\334\003"                      # DW_AT_location
	.long	6784                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x224a:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	6793                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x2250:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	16
	.long	6802                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x2258:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	6811                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x2260:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\375\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2267:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\376\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x226e:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\377\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2275:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\200\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x227c:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\201\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2283:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\202\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x228a:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\203\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2291:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\204\002"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x2299:0x79 DW_TAG_subprogram
	.ascii	"\205\002"                      # DW_AT_low_pc
	.long	.Lfunc_end49-.Lfunc_begin49     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	102                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0x22a6:0xb DW_TAG_formal_parameter
	.ascii	"\341\003"                      # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x22b1:0xb DW_TAG_formal_parameter
	.ascii	"\342\003"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x22bc:0xb DW_TAG_formal_parameter
	.ascii	"\343\003"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x22c7:0xb DW_TAG_formal_parameter
	.ascii	"\344\003"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x22d2:0xb DW_TAG_formal_parameter
	.ascii	"\345\003"                      # DW_AT_location
	.byte	180                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x22dd:0xb DW_TAG_formal_parameter
	.ascii	"\346\003"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0x22e8:0xd DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\300"
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	28                              # Abbrev [28] 0x22f5:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\206\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x22fc:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\207\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2303:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\210\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x230a:0x7 DW_TAG_call_site
	.long	5008                            # DW_AT_call_origin
	.ascii	"\211\002"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x2312:0x150 DW_TAG_subprogram
	.ascii	"\212\002"                      # DW_AT_low_pc
	.long	.Lfunc_end50-.Lfunc_begin50     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	103                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0x231f:0xb DW_TAG_formal_parameter
	.ascii	"\347\003"                      # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x232a:0xb DW_TAG_formal_parameter
	.ascii	"\350\003"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2335:0xb DW_TAG_formal_parameter
	.ascii	"\351\003"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2340:0xb DW_TAG_formal_parameter
	.ascii	"\352\003"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x234b:0xb DW_TAG_formal_parameter
	.ascii	"\353\003"                      # DW_AT_location
	.byte	180                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2356:0xb DW_TAG_formal_parameter
	.ascii	"\354\003"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0x2361:0xd DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\320"
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	33                              # Abbrev [33] 0x236e:0x2b DW_TAG_inlined_subroutine
	.long	7197                            # DW_AT_abstract_origin
	.ascii	"\213\002"                      # DW_AT_low_pc
	.long	.Ltmp1833-.Ltmp1826             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x237d:0x7 DW_TAG_formal_parameter
	.ascii	"\355\003"                      # DW_AT_location
	.long	7206                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x2384:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	7215                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x238a:0x7 DW_TAG_formal_parameter
	.ascii	"\356\003"                      # DW_AT_location
	.long	7224                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x2391:0x7 DW_TAG_formal_parameter
	.ascii	"\357\003"                      # DW_AT_location
	.long	7233                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x2399:0x32 DW_TAG_inlined_subroutine
	.long	7197                            # DW_AT_abstract_origin
	.ascii	"\214\002"                      # DW_AT_low_pc
	.long	.Ltmp1839-.Ltmp1834             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x23a8:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	7206                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x23af:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	7215                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x23b5:0x7 DW_TAG_formal_parameter
	.ascii	"\361\003"                      # DW_AT_location
	.long	7224                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x23bc:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	7233                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x23c3:0x7 DW_TAG_variable
	.ascii	"\362\003"                      # DW_AT_location
	.long	7242                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x23cb:0x32 DW_TAG_inlined_subroutine
	.long	7197                            # DW_AT_abstract_origin
	.ascii	"\215\002"                      # DW_AT_low_pc
	.long	.Ltmp1845-.Ltmp1840             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x23da:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	7206                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x23e1:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	7215                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x23e7:0x7 DW_TAG_formal_parameter
	.ascii	"\363\003"                      # DW_AT_location
	.long	7224                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x23ee:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	7233                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x23f5:0x7 DW_TAG_variable
	.ascii	"\364\003"                      # DW_AT_location
	.long	7242                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x23fd:0x2c DW_TAG_inlined_subroutine
	.long	7197                            # DW_AT_abstract_origin
	.ascii	"\216\002"                      # DW_AT_low_pc
	.long	.Ltmp1851-.Ltmp1846             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	446                             # DW_AT_call_line
	.byte	1                               # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x240c:0x7 DW_TAG_formal_parameter
	.ascii	"\360\003"                      # DW_AT_location
	.long	7206                            # DW_AT_abstract_origin
	.byte	34                              # Abbrev [34] 0x2413:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	7215                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x2419:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	16
	.long	7224                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x2421:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	7233                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x2429:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\217\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2430:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\220\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2437:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\221\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x243e:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\222\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2445:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\223\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x244c:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\224\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2453:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\225\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x245a:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\226\002"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x2462:0x79 DW_TAG_subprogram
	.ascii	"\227\002"                      # DW_AT_low_pc
	.long	.Lfunc_end51-.Lfunc_begin51     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	104                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0x246f:0xb DW_TAG_formal_parameter
	.ascii	"\365\003"                      # DW_AT_location
	.byte	176                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x247a:0xb DW_TAG_formal_parameter
	.ascii	"\366\003"                      # DW_AT_location
	.byte	177                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2485:0xb DW_TAG_formal_parameter
	.ascii	"\367\003"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2490:0xb DW_TAG_formal_parameter
	.ascii	"\370\003"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x249b:0xb DW_TAG_formal_parameter
	.ascii	"\371\003"                      # DW_AT_location
	.byte	180                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x24a6:0xb DW_TAG_formal_parameter
	.ascii	"\372\003"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0x24b1:0xd DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\300"
	.byte	179                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	28                              # Abbrev [28] 0x24be:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\230\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x24c5:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\231\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x24cc:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\232\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x24d3:0x7 DW_TAG_call_site
	.long	5635                            # DW_AT_call_origin
	.ascii	"\233\002"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	36                              # Abbrev [36] 0x24db:0x4f DW_TAG_subprogram
	.ascii	"\234\002"                      # DW_AT_low_pc
	.long	.Lfunc_end52-.Lfunc_begin52     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	105                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	377                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	163                             # DW_AT_type
	.byte	18                              # Abbrev [18] 0x24ec:0xb DW_TAG_formal_parameter
	.ascii	"\373\003"                      # DW_AT_location
	.byte	193                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	377                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x24f7:0xb DW_TAG_formal_parameter
	.ascii	"\374\003"                      # DW_AT_location
	.byte	194                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	377                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2502:0xb DW_TAG_variable
	.ascii	"\375\003"                      # DW_AT_location
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	377                             # DW_AT_decl_line
	.long	163                             # DW_AT_type
	.byte	28                              # Abbrev [28] 0x250d:0x7 DW_TAG_call_site
	.long	9514                            # DW_AT_call_origin
	.ascii	"\235\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2514:0x7 DW_TAG_call_site
	.long	9514                            # DW_AT_call_origin
	.ascii	"\236\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x251b:0x7 DW_TAG_call_site
	.long	9514                            # DW_AT_call_origin
	.ascii	"\237\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2522:0x7 DW_TAG_call_site
	.long	9514                            # DW_AT_call_origin
	.ascii	"\240\002"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	36                              # Abbrev [36] 0x252a:0x1a9 DW_TAG_subprogram
	.ascii	"\302\002"                      # DW_AT_low_pc
	.long	.Lfunc_end66-.Lfunc_begin66     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	119                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	328                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	163                             # DW_AT_type
	.byte	18                              # Abbrev [18] 0x253b:0xb DW_TAG_formal_parameter
	.ascii	"\312\004"                      # DW_AT_location
	.byte	193                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	328                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2546:0xb DW_TAG_formal_parameter
	.ascii	"\313\004"                      # DW_AT_location
	.byte	194                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	328                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	21                              # Abbrev [21] 0x2551:0xd DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\200\177"
	.byte	190                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	330                             # DW_AT_decl_line
	.long	12805                           # DW_AT_type
	.byte	20                              # Abbrev [20] 0x255e:0xb DW_TAG_variable
	.ascii	"\314\004"                      # DW_AT_location
	.byte	207                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	332                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2569:0xb DW_TAG_variable
	.ascii	"\315\004"                      # DW_AT_location
	.byte	208                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	332                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2574:0xb DW_TAG_variable
	.ascii	"\320\004"                      # DW_AT_location
	.byte	182                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	331                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	20                              # Abbrev [20] 0x257f:0xb DW_TAG_variable
	.ascii	"\321\004"                      # DW_AT_location
	.byte	183                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	331                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	20                              # Abbrev [20] 0x258a:0xb DW_TAG_variable
	.ascii	"\322\004"                      # DW_AT_location
	.byte	184                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	331                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2595:0xb DW_TAG_variable
	.ascii	"\323\004"                      # DW_AT_location
	.byte	185                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	331                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	20                              # Abbrev [20] 0x25a0:0xb DW_TAG_variable
	.ascii	"\341\004"                      # DW_AT_location
	.byte	210                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	331                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0x25ab:0x21 DW_TAG_lexical_block
	.ascii	"\303\002"                      # DW_AT_low_pc
	.long	.Ltmp2331-.Ltmp2252             # DW_AT_high_pc
	.byte	20                              # Abbrev [20] 0x25b2:0xb DW_TAG_variable
	.ascii	"\316\004"                      # DW_AT_location
	.byte	181                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	333                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x25bd:0xe DW_TAG_lexical_block
	.byte	51                              # DW_AT_ranges
	.byte	20                              # Abbrev [20] 0x25bf:0xb DW_TAG_variable
	.ascii	"\317\004"                      # DW_AT_location
	.byte	209                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	335                             # DW_AT_decl_line
	.long	12817                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	15                              # Abbrev [15] 0x25cc:0x60 DW_TAG_lexical_block
	.ascii	"\304\002"                      # DW_AT_low_pc
	.long	.Ltmp2383-.Ltmp2331             # DW_AT_high_pc
	.byte	40                              # Abbrev [40] 0x25d3:0x9 DW_TAG_variable
	.byte	181                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	345                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	41                              # Abbrev [41] 0x25dc:0xa DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.byte	52                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	352                             # DW_AT_call_line
	.byte	17                              # DW_AT_call_column
	.byte	41                              # Abbrev [41] 0x25e6:0xa DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.byte	53                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	352                             # DW_AT_call_line
	.byte	28                              # DW_AT_call_column
	.byte	41                              # Abbrev [41] 0x25f0:0xa DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.byte	54                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	352                             # DW_AT_call_line
	.byte	39                              # DW_AT_call_column
	.byte	41                              # Abbrev [41] 0x25fa:0xa DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.byte	55                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	352                             # DW_AT_call_line
	.byte	50                              # DW_AT_call_column
	.byte	14                              # Abbrev [14] 0x2604:0x27 DW_TAG_lexical_block
	.byte	56                              # DW_AT_ranges
	.byte	40                              # Abbrev [40] 0x2606:0x9 DW_TAG_variable
	.byte	186                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	347                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	40                              # Abbrev [40] 0x260f:0x9 DW_TAG_variable
	.byte	187                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	347                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	40                              # Abbrev [40] 0x2618:0x9 DW_TAG_variable
	.byte	188                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	347                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	40                              # Abbrev [40] 0x2621:0x9 DW_TAG_variable
	.byte	189                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	347                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	15                              # Abbrev [15] 0x262c:0xa6 DW_TAG_lexical_block
	.ascii	"\305\002"                      # DW_AT_low_pc
	.long	.Ltmp2597-.Ltmp2383             # DW_AT_high_pc
	.byte	20                              # Abbrev [20] 0x2633:0xb DW_TAG_variable
	.ascii	"\324\004"                      # DW_AT_location
	.byte	181                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	354                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x263e:0x2f DW_TAG_lexical_block
	.byte	57                              # DW_AT_ranges
	.byte	20                              # Abbrev [20] 0x2640:0xb DW_TAG_variable
	.ascii	"\325\004"                      # DW_AT_location
	.byte	186                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	356                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x264b:0xb DW_TAG_variable
	.ascii	"\326\004"                      # DW_AT_location
	.byte	187                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	356                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2656:0xb DW_TAG_variable
	.ascii	"\327\004"                      # DW_AT_location
	.byte	188                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	356                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2661:0xb DW_TAG_variable
	.ascii	"\330\004"                      # DW_AT_location
	.byte	189                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	356                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	42                              # Abbrev [42] 0x266d:0x19 DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.byte	58                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	357                             # DW_AT_call_line
	.byte	17                              # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x2677:0x7 DW_TAG_formal_parameter
	.ascii	"\331\004"                      # DW_AT_location
	.long	5555                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x267e:0x7 DW_TAG_variable
	.ascii	"\332\004"                      # DW_AT_location
	.long	5563                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	42                              # Abbrev [42] 0x2686:0x19 DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.byte	59                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	357                             # DW_AT_call_line
	.byte	28                              # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x2690:0x7 DW_TAG_formal_parameter
	.ascii	"\333\004"                      # DW_AT_location
	.long	5555                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x2697:0x7 DW_TAG_variable
	.ascii	"\334\004"                      # DW_AT_location
	.long	5563                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	42                              # Abbrev [42] 0x269f:0x19 DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.byte	60                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	357                             # DW_AT_call_line
	.byte	39                              # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x26a9:0x7 DW_TAG_formal_parameter
	.ascii	"\335\004"                      # DW_AT_location
	.long	5555                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x26b0:0x7 DW_TAG_variable
	.ascii	"\336\004"                      # DW_AT_location
	.long	5563                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	42                              # Abbrev [42] 0x26b8:0x19 DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.byte	61                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	357                             # DW_AT_call_line
	.byte	50                              # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x26c2:0x7 DW_TAG_formal_parameter
	.ascii	"\337\004"                      # DW_AT_location
	.long	5555                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x26c9:0x7 DW_TAG_variable
	.ascii	"\340\004"                      # DW_AT_location
	.long	5563                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	36                              # Abbrev [36] 0x26d3:0x41 DW_TAG_subprogram
	.ascii	"\241\002"                      # DW_AT_low_pc
	.long	.Lfunc_end53-.Lfunc_begin53     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	106                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	378                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	163                             # DW_AT_type
	.byte	18                              # Abbrev [18] 0x26e4:0xb DW_TAG_formal_parameter
	.ascii	"\376\003"                      # DW_AT_location
	.byte	193                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	378                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x26ef:0xb DW_TAG_formal_parameter
	.ascii	"\377\003"                      # DW_AT_location
	.byte	194                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	378                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x26fa:0xb DW_TAG_variable
	.ascii	"\200\004"                      # DW_AT_location
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	378                             # DW_AT_decl_line
	.long	163                             # DW_AT_type
	.byte	28                              # Abbrev [28] 0x2705:0x7 DW_TAG_call_site
	.long	9514                            # DW_AT_call_origin
	.ascii	"\242\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x270c:0x7 DW_TAG_call_site
	.long	9514                            # DW_AT_call_origin
	.ascii	"\243\002"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	36                              # Abbrev [36] 0x2714:0x41 DW_TAG_subprogram
	.ascii	"\244\002"                      # DW_AT_low_pc
	.long	.Lfunc_end54-.Lfunc_begin54     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	107                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	379                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	163                             # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2725:0xb DW_TAG_formal_parameter
	.ascii	"\201\004"                      # DW_AT_location
	.byte	193                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	379                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2730:0xb DW_TAG_formal_parameter
	.ascii	"\202\004"                      # DW_AT_location
	.byte	194                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	379                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x273b:0xb DW_TAG_variable
	.ascii	"\203\004"                      # DW_AT_location
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	379                             # DW_AT_decl_line
	.long	163                             # DW_AT_type
	.byte	28                              # Abbrev [28] 0x2746:0x7 DW_TAG_call_site
	.long	9514                            # DW_AT_call_origin
	.ascii	"\245\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x274d:0x7 DW_TAG_call_site
	.long	9514                            # DW_AT_call_origin
	.ascii	"\246\002"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	36                              # Abbrev [36] 0x2755:0x3a DW_TAG_subprogram
	.ascii	"\247\002"                      # DW_AT_low_pc
	.long	.Lfunc_end55-.Lfunc_begin55     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	108                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	380                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	163                             # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2766:0xb DW_TAG_formal_parameter
	.ascii	"\204\004"                      # DW_AT_location
	.byte	193                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	380                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2771:0xb DW_TAG_formal_parameter
	.ascii	"\205\004"                      # DW_AT_location
	.byte	194                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	380                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x277c:0xb DW_TAG_variable
	.ascii	"\206\004"                      # DW_AT_location
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	380                             # DW_AT_decl_line
	.long	163                             # DW_AT_type
	.byte	28                              # Abbrev [28] 0x2787:0x7 DW_TAG_call_site
	.long	9514                            # DW_AT_call_origin
	.ascii	"\250\002"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	36                              # Abbrev [36] 0x278f:0x90 DW_TAG_subprogram
	.ascii	"\251\002"                      # DW_AT_low_pc
	.long	.Lfunc_end56-.Lfunc_begin56     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	109                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	538                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0x27a0:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	195                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	538                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	18                              # Abbrev [18] 0x27ab:0xb DW_TAG_formal_parameter
	.ascii	"\207\004"                      # DW_AT_location
	.byte	196                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	538                             # DW_AT_decl_line
	.long	12716                           # DW_AT_type
	.byte	18                              # Abbrev [18] 0x27b6:0xb DW_TAG_formal_parameter
	.ascii	"\210\004"                      # DW_AT_location
	.byte	197                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	538                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0x27c1:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.byte	198                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	539                             # DW_AT_decl_line
	.long	12716                           # DW_AT_type
	.byte	19                              # Abbrev [19] 0x27cc:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.byte	199                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	539                             # DW_AT_decl_line
	.long	12721                           # DW_AT_type
	.byte	18                              # Abbrev [18] 0x27d7:0xb DW_TAG_formal_parameter
	.ascii	"\211\004"                      # DW_AT_location
	.byte	168                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	539                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x27e2:0xb DW_TAG_formal_parameter
	.ascii	"\212\004"                      # DW_AT_location
	.byte	200                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	539                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x27ed:0xb DW_TAG_variable
	.ascii	"\213\004"                      # DW_AT_location
	.byte	201                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	541                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x27f8:0x26 DW_TAG_lexical_block
	.ascii	"\251\002"                      # DW_AT_low_pc
	.long	.Ltmp1917-.Lfunc_begin56        # DW_AT_high_pc
	.byte	20                              # Abbrev [20] 0x27ff:0xb DW_TAG_variable
	.ascii	"\214\004"                      # DW_AT_location
	.byte	181                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	542                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x280a:0x13 DW_TAG_lexical_block
	.ascii	"\252\002"                      # DW_AT_low_pc
	.long	.Ltmp1917-.Ltmp1912             # DW_AT_high_pc
	.byte	20                              # Abbrev [20] 0x2811:0xb DW_TAG_variable
	.ascii	"\215\004"                      # DW_AT_location
	.byte	144                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	544                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	36                              # Abbrev [36] 0x281f:0x90 DW_TAG_subprogram
	.ascii	"\253\002"                      # DW_AT_low_pc
	.long	.Lfunc_end57-.Lfunc_begin57     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	110                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	555                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0x2830:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	195                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	555                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	18                              # Abbrev [18] 0x283b:0xb DW_TAG_formal_parameter
	.ascii	"\216\004"                      # DW_AT_location
	.byte	196                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	555                             # DW_AT_decl_line
	.long	12716                           # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2846:0xb DW_TAG_formal_parameter
	.ascii	"\217\004"                      # DW_AT_location
	.byte	197                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	555                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0x2851:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.byte	198                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	556                             # DW_AT_decl_line
	.long	12716                           # DW_AT_type
	.byte	19                              # Abbrev [19] 0x285c:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.byte	199                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	556                             # DW_AT_decl_line
	.long	12721                           # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2867:0xb DW_TAG_formal_parameter
	.ascii	"\220\004"                      # DW_AT_location
	.byte	168                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	556                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2872:0xb DW_TAG_formal_parameter
	.ascii	"\221\004"                      # DW_AT_location
	.byte	200                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	556                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x287d:0xb DW_TAG_variable
	.ascii	"\222\004"                      # DW_AT_location
	.byte	201                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	558                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x2888:0x26 DW_TAG_lexical_block
	.ascii	"\253\002"                      # DW_AT_low_pc
	.long	.Ltmp1934-.Lfunc_begin57        # DW_AT_high_pc
	.byte	20                              # Abbrev [20] 0x288f:0xb DW_TAG_variable
	.ascii	"\223\004"                      # DW_AT_location
	.byte	181                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	559                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x289a:0x13 DW_TAG_lexical_block
	.ascii	"\254\002"                      # DW_AT_low_pc
	.long	.Ltmp1934-.Ltmp1928             # DW_AT_high_pc
	.byte	20                              # Abbrev [20] 0x28a1:0xb DW_TAG_variable
	.ascii	"\224\004"                      # DW_AT_location
	.byte	144                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	561                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	36                              # Abbrev [36] 0x28af:0x8e DW_TAG_subprogram
	.ascii	"\255\002"                      # DW_AT_low_pc
	.long	.Lfunc_end58-.Lfunc_begin58     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	111                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	570                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0x28c0:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	195                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	570                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	18                              # Abbrev [18] 0x28cb:0xb DW_TAG_formal_parameter
	.ascii	"\225\004"                      # DW_AT_location
	.byte	196                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	570                             # DW_AT_decl_line
	.long	12716                           # DW_AT_type
	.byte	39                              # Abbrev [39] 0x28d6:0x9 DW_TAG_formal_parameter
	.byte	197                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	570                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	19                              # Abbrev [19] 0x28df:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.byte	198                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	571                             # DW_AT_decl_line
	.long	12716                           # DW_AT_type
	.byte	19                              # Abbrev [19] 0x28ea:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.byte	199                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	571                             # DW_AT_decl_line
	.long	12721                           # DW_AT_type
	.byte	18                              # Abbrev [18] 0x28f5:0xb DW_TAG_formal_parameter
	.ascii	"\226\004"                      # DW_AT_location
	.byte	168                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	571                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2900:0xb DW_TAG_formal_parameter
	.ascii	"\227\004"                      # DW_AT_location
	.byte	200                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	571                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x290b:0xb DW_TAG_variable
	.ascii	"\230\004"                      # DW_AT_location
	.byte	201                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	573                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x2916:0x26 DW_TAG_lexical_block
	.ascii	"\255\002"                      # DW_AT_low_pc
	.long	.Ltmp1950-.Lfunc_begin58        # DW_AT_high_pc
	.byte	20                              # Abbrev [20] 0x291d:0xb DW_TAG_variable
	.ascii	"\231\004"                      # DW_AT_location
	.byte	181                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	574                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x2928:0x13 DW_TAG_lexical_block
	.ascii	"\256\002"                      # DW_AT_low_pc
	.long	.Ltmp1950-.Ltmp1944             # DW_AT_high_pc
	.byte	20                              # Abbrev [20] 0x292f:0xb DW_TAG_variable
	.ascii	"\232\004"                      # DW_AT_location
	.byte	144                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	576                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	36                              # Abbrev [36] 0x293d:0x63 DW_TAG_subprogram
	.ascii	"\257\002"                      # DW_AT_low_pc
	.long	.Lfunc_end59-.Lfunc_begin59     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	112                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	318                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x294e:0xb DW_TAG_formal_parameter
	.ascii	"\233\004"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	318                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2959:0xb DW_TAG_formal_parameter
	.ascii	"\234\004"                      # DW_AT_location
	.byte	45                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	318                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2964:0xb DW_TAG_formal_parameter
	.ascii	"\235\004"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	318                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x296f:0xb DW_TAG_formal_parameter
	.ascii	"\236\004"                      # DW_AT_location
	.byte	46                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	318                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	40                              # Abbrev [40] 0x297a:0x9 DW_TAG_variable
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	320                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	28                              # Abbrev [28] 0x2983:0x7 DW_TAG_call_site
	.long	10656                           # DW_AT_call_origin
	.ascii	"\260\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x298a:0x7 DW_TAG_call_site
	.long	10656                           # DW_AT_call_origin
	.ascii	"\261\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2991:0x7 DW_TAG_call_site
	.long	10656                           # DW_AT_call_origin
	.ascii	"\262\002"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x2998:0x7 DW_TAG_call_site
	.long	10656                           # DW_AT_call_origin
	.ascii	"\263\002"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	36                              # Abbrev [36] 0x29a0:0x1f8 DW_TAG_subprogram
	.ascii	"\306\002"                      # DW_AT_low_pc
	.long	.Lfunc_end67-.Lfunc_begin67     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	120                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	278                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x29b1:0xb DW_TAG_formal_parameter
	.ascii	"\342\004"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	278                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x29bc:0xb DW_TAG_formal_parameter
	.ascii	"\343\004"                      # DW_AT_location
	.byte	45                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	278                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x29c7:0xb DW_TAG_formal_parameter
	.ascii	"\344\004"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	278                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x29d2:0xb DW_TAG_formal_parameter
	.ascii	"\345\004"                      # DW_AT_location
	.byte	46                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	278                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	21                              # Abbrev [21] 0x29dd:0xd DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\200\177"
	.byte	190                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	280                             # DW_AT_decl_line
	.long	12822                           # DW_AT_type
	.byte	43                              # Abbrev [43] 0x29ea:0xa DW_TAG_variable
	.byte	0                               # DW_AT_const_value
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	282                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x29f4:0xb DW_TAG_variable
	.ascii	"\347\004"                      # DW_AT_location
	.byte	182                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	281                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	20                              # Abbrev [20] 0x29ff:0xb DW_TAG_variable
	.ascii	"\350\004"                      # DW_AT_location
	.byte	183                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	281                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2a0a:0xb DW_TAG_variable
	.ascii	"\351\004"                      # DW_AT_location
	.byte	191                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	281                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2a15:0xb DW_TAG_variable
	.ascii	"\352\004"                      # DW_AT_location
	.byte	184                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	281                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2a20:0xb DW_TAG_variable
	.ascii	"\353\004"                      # DW_AT_location
	.byte	185                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	281                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2a2b:0xb DW_TAG_variable
	.ascii	"\354\004"                      # DW_AT_location
	.byte	192                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	281                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2a36:0xb DW_TAG_variable
	.ascii	"\355\004"                      # DW_AT_location
	.byte	211                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	281                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2a41:0xb DW_TAG_variable
	.ascii	"\356\004"                      # DW_AT_location
	.byte	212                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	281                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2a4c:0xb DW_TAG_variable
	.ascii	"\357\004"                      # DW_AT_location
	.byte	213                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	281                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2a57:0xb DW_TAG_variable
	.ascii	"\360\004"                      # DW_AT_location
	.byte	214                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	281                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2a62:0xb DW_TAG_variable
	.ascii	"\361\004"                      # DW_AT_location
	.byte	215                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	281                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2a6d:0xb DW_TAG_variable
	.ascii	"\362\004"                      # DW_AT_location
	.byte	216                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	281                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0x2a78:0x47 DW_TAG_lexical_block
	.ascii	"\307\002"                      # DW_AT_low_pc
	.long	.Ltmp2641-.Ltmp2607             # DW_AT_high_pc
	.byte	20                              # Abbrev [20] 0x2a7f:0xb DW_TAG_variable
	.ascii	"\346\004"                      # DW_AT_location
	.byte	181                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	283                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x2a8a:0x34 DW_TAG_lexical_block
	.ascii	"\310\002"                      # DW_AT_low_pc
	.long	.Ltmp2638-.Ltmp2629             # DW_AT_high_pc
	.byte	20                              # Abbrev [20] 0x2a91:0xb DW_TAG_variable
	.ascii	"\363\004"                      # DW_AT_location
	.byte	186                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	297                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2a9c:0xb DW_TAG_variable
	.ascii	"\364\004"                      # DW_AT_location
	.byte	187                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	297                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2aa7:0xb DW_TAG_variable
	.ascii	"\365\004"                      # DW_AT_location
	.byte	188                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	297                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2ab2:0xb DW_TAG_variable
	.ascii	"\366\004"                      # DW_AT_location
	.byte	189                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	297                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	15                              # Abbrev [15] 0x2abf:0xd8 DW_TAG_lexical_block
	.ascii	"\311\002"                      # DW_AT_low_pc
	.long	.Ltmp2668-.Ltmp2641             # DW_AT_high_pc
	.byte	43                              # Abbrev [43] 0x2ac6:0xa DW_TAG_variable
	.byte	0                               # DW_AT_const_value
	.byte	181                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	299                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x2ad0:0x27 DW_TAG_lexical_block
	.byte	62                              # DW_AT_ranges
	.byte	40                              # Abbrev [40] 0x2ad2:0x9 DW_TAG_variable
	.byte	186                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	301                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	40                              # Abbrev [40] 0x2adb:0x9 DW_TAG_variable
	.byte	187                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	301                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	40                              # Abbrev [40] 0x2ae4:0x9 DW_TAG_variable
	.byte	188                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	301                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	40                              # Abbrev [40] 0x2aed:0x9 DW_TAG_variable
	.byte	189                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	301                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x2af7:0x27 DW_TAG_lexical_block
	.byte	63                              # DW_AT_ranges
	.byte	40                              # Abbrev [40] 0x2af9:0x9 DW_TAG_variable
	.byte	186                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	302                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	40                              # Abbrev [40] 0x2b02:0x9 DW_TAG_variable
	.byte	187                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	302                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	40                              # Abbrev [40] 0x2b0b:0x9 DW_TAG_variable
	.byte	188                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	302                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	40                              # Abbrev [40] 0x2b14:0x9 DW_TAG_variable
	.byte	189                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	302                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	44                              # Abbrev [44] 0x2b1e:0xf DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.ascii	"\312\002"                      # DW_AT_low_pc
	.long	.Ltmp2647-.Ltmp2646             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	306                             # DW_AT_call_line
	.byte	15                              # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0x2b2d:0xf DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.ascii	"\313\002"                      # DW_AT_low_pc
	.long	.Ltmp2648-.Ltmp2647             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	306                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0x2b3c:0xf DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.ascii	"\314\002"                      # DW_AT_low_pc
	.long	.Ltmp2652-.Ltmp2651             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	305                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0x2b4b:0xf DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.ascii	"\315\002"                      # DW_AT_low_pc
	.long	.Ltmp2654-.Ltmp2653             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	305                             # DW_AT_call_line
	.byte	15                              # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0x2b5a:0xf DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.ascii	"\316\002"                      # DW_AT_low_pc
	.long	.Ltmp2658-.Ltmp2657             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	303                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0x2b69:0xf DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.ascii	"\317\002"                      # DW_AT_low_pc
	.long	.Ltmp2660-.Ltmp2659             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	303                             # DW_AT_call_line
	.byte	15                              # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0x2b78:0xf DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.ascii	"\320\002"                      # DW_AT_low_pc
	.long	.Ltmp2664-.Ltmp2663             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	304                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	44                              # Abbrev [44] 0x2b87:0xf DW_TAG_inlined_subroutine
	.long	5547                            # DW_AT_abstract_origin
	.ascii	"\321\002"                      # DW_AT_low_pc
	.long	.Ltmp2666-.Ltmp2665             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	304                             # DW_AT_call_line
	.byte	15                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	36                              # Abbrev [36] 0x2b98:0x50 DW_TAG_subprogram
	.ascii	"\264\002"                      # DW_AT_low_pc
	.long	.Lfunc_end60-.Lfunc_begin60     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	113                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	312                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2ba9:0xb DW_TAG_formal_parameter
	.ascii	"\237\004"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	312                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2bb4:0xb DW_TAG_formal_parameter
	.ascii	"\240\004"                      # DW_AT_location
	.byte	45                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	312                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2bbf:0xb DW_TAG_formal_parameter
	.ascii	"\241\004"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	312                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2bca:0xb DW_TAG_formal_parameter
	.ascii	"\242\004"                      # DW_AT_location
	.byte	46                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	312                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2bd5:0xb DW_TAG_variable
	.ascii	"\243\004"                      # DW_AT_location
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	314                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	28                              # Abbrev [28] 0x2be0:0x7 DW_TAG_call_site
	.long	10656                           # DW_AT_call_origin
	.ascii	"\265\002"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x2be8:0x5d DW_TAG_subprogram
	.ascii	"\266\002"                      # DW_AT_low_pc
	.long	.Lfunc_end61-.Lfunc_begin61     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	114                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	159                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	163                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0x2bf8:0xa DW_TAG_formal_parameter
	.ascii	"\244\004"                      # DW_AT_location
	.byte	193                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	159                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x2c02:0xa DW_TAG_formal_parameter
	.ascii	"\245\004"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	159                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x2c0c:0xa DW_TAG_variable
	.ascii	"\246\004"                      # DW_AT_location
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	159                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x2c16:0xa DW_TAG_variable
	.ascii	"\247\004"                      # DW_AT_location
	.byte	202                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	159                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0x2c20:0x24 DW_TAG_lexical_block
	.ascii	"\267\002"                      # DW_AT_low_pc
	.long	.Ltmp1997-.Ltmp1967             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x2c27:0xa DW_TAG_variable
	.ascii	"\250\004"                      # DW_AT_location
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	159                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x2c31:0x12 DW_TAG_lexical_block
	.ascii	"\270\002"                      # DW_AT_low_pc
	.long	.Ltmp1995-.Ltmp1969             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x2c38:0xa DW_TAG_variable
	.ascii	"\251\004"                      # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	159                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x2c45:0x58 DW_TAG_subprogram
	.ascii	"\271\002"                      # DW_AT_low_pc
	.long	.Lfunc_end62-.Lfunc_begin62     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	115                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	160                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	163                             # DW_AT_type
	.byte	10                              # Abbrev [10] 0x2c55:0xa DW_TAG_formal_parameter
	.ascii	"\252\004"                      # DW_AT_location
	.byte	193                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	160                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x2c5f:0xa DW_TAG_formal_parameter
	.ascii	"\253\004"                      # DW_AT_location
	.byte	178                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	160                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	12                              # Abbrev [12] 0x2c69:0xa DW_TAG_variable
	.ascii	"\254\004"                      # DW_AT_location
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	160                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x2c73:0xa DW_TAG_variable
	.ascii	"\255\004"                      # DW_AT_location
	.byte	202                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	160                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0x2c7d:0x1f DW_TAG_lexical_block
	.ascii	"\272\002"                      # DW_AT_low_pc
	.long	.Ltmp2100-.Ltmp2000             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x2c84:0xa DW_TAG_variable
	.ascii	"\256\004"                      # DW_AT_location
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	160                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	14                              # Abbrev [14] 0x2c8e:0xd DW_TAG_lexical_block
	.byte	50                              # DW_AT_ranges
	.byte	12                              # Abbrev [12] 0x2c90:0xa DW_TAG_variable
	.ascii	"\257\004"                      # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	160                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x2c9d:0xd0 DW_TAG_subprogram
	.ascii	"\273\002"                      # DW_AT_low_pc
	.long	.Lfunc_end63-.Lfunc_begin63     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	116                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	461                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	18                              # Abbrev [18] 0x2caa:0xb DW_TAG_formal_parameter
	.ascii	"\260\004"                      # DW_AT_location
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	461                             # DW_AT_decl_line
	.long	12605                           # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2cb5:0xb DW_TAG_formal_parameter
	.ascii	"\261\004"                      # DW_AT_location
	.byte	166                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	461                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2cc0:0xb DW_TAG_formal_parameter
	.ascii	"\262\004"                      # DW_AT_location
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	462                             # DW_AT_decl_line
	.long	12605                           # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2ccb:0xb DW_TAG_formal_parameter
	.ascii	"\263\004"                      # DW_AT_location
	.byte	167                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	462                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2cd6:0xb DW_TAG_formal_parameter
	.ascii	"\264\004"                      # DW_AT_location
	.byte	196                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	463                             # DW_AT_decl_line
	.long	12615                           # DW_AT_type
	.byte	15                              # Abbrev [15] 0x2ce1:0x8b DW_TAG_lexical_block
	.ascii	"\274\002"                      # DW_AT_low_pc
	.long	.Ltmp2215-.Ltmp2105             # DW_AT_high_pc
	.byte	20                              # Abbrev [20] 0x2ce8:0xb DW_TAG_variable
	.ascii	"\265\004"                      # DW_AT_location
	.byte	173                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	465                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x2cf3:0x78 DW_TAG_lexical_block
	.ascii	"\275\002"                      # DW_AT_low_pc
	.long	.Ltmp2213-.Ltmp2109             # DW_AT_high_pc
	.byte	20                              # Abbrev [20] 0x2cfa:0xb DW_TAG_variable
	.ascii	"\270\004"                      # DW_AT_location
	.byte	55                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	467                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2d05:0xb DW_TAG_variable
	.ascii	"\271\004"                      # DW_AT_location
	.byte	54                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	467                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2d10:0xb DW_TAG_variable
	.ascii	"\272\004"                      # DW_AT_location
	.byte	53                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	467                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2d1b:0xb DW_TAG_variable
	.ascii	"\273\004"                      # DW_AT_location
	.byte	52                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	467                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0x2d26:0x44 DW_TAG_lexical_block
	.ascii	"\275\002"                      # DW_AT_low_pc
	.long	.Ltmp2211-.Ltmp2109             # DW_AT_high_pc
	.byte	20                              # Abbrev [20] 0x2d2d:0xb DW_TAG_variable
	.ascii	"\266\004"                      # DW_AT_location
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	468                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x2d38:0x31 DW_TAG_lexical_block
	.ascii	"\275\002"                      # DW_AT_low_pc
	.long	.Ltmp2211-.Ltmp2109             # DW_AT_high_pc
	.byte	20                              # Abbrev [20] 0x2d3f:0xb DW_TAG_variable
	.ascii	"\267\004"                      # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	469                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x2d4a:0x1e DW_TAG_lexical_block
	.ascii	"\275\002"                      # DW_AT_low_pc
	.long	.Ltmp2211-.Ltmp2109             # DW_AT_high_pc
	.byte	20                              # Abbrev [20] 0x2d51:0xb DW_TAG_variable
	.ascii	"\274\004"                      # DW_AT_location
	.byte	42                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	471                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2d5c:0xb DW_TAG_variable
	.ascii	"\275\004"                      # DW_AT_location
	.byte	203                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	472                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	38                              # Abbrev [38] 0x2d6d:0x40 DW_TAG_subprogram
	.byte	51                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	488                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	183                             # DW_AT_type
                                        # DW_AT_inline
	.byte	39                              # Abbrev [39] 0x2d76:0x9 DW_TAG_formal_parameter
	.byte	52                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	488                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	39                              # Abbrev [39] 0x2d7f:0x9 DW_TAG_formal_parameter
	.byte	53                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	488                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	39                              # Abbrev [39] 0x2d88:0x9 DW_TAG_formal_parameter
	.byte	54                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	488                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	39                              # Abbrev [39] 0x2d91:0x9 DW_TAG_formal_parameter
	.byte	55                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	488                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	40                              # Abbrev [40] 0x2d9a:0x9 DW_TAG_variable
	.byte	56                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	492                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	40                              # Abbrev [40] 0x2da3:0x9 DW_TAG_variable
	.byte	57                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	493                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	36                              # Abbrev [36] 0x2dad:0x6f DW_TAG_subprogram
	.ascii	"\276\002"                      # DW_AT_low_pc
	.long	.Lfunc_end64-.Lfunc_begin64     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	117                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	498                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	183                             # DW_AT_type
	.byte	19                              # Abbrev [19] 0x2dbe:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	171                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	498                             # DW_AT_decl_line
	.long	12615                           # DW_AT_type
	.byte	19                              # Abbrev [19] 0x2dc9:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.byte	172                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	498                             # DW_AT_decl_line
	.long	12615                           # DW_AT_type
	.byte	18                              # Abbrev [18] 0x2dd4:0xb DW_TAG_formal_parameter
	.ascii	"\276\004"                      # DW_AT_location
	.byte	168                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	498                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	20                              # Abbrev [20] 0x2ddf:0xb DW_TAG_variable
	.ascii	"\277\004"                      # DW_AT_location
	.byte	127                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	500                             # DW_AT_decl_line
	.long	183                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0x2dea:0x31 DW_TAG_lexical_block
	.ascii	"\276\002"                      # DW_AT_low_pc
	.long	.Ltmp2231-.Lfunc_begin64        # DW_AT_high_pc
	.byte	20                              # Abbrev [20] 0x2df1:0xb DW_TAG_variable
	.ascii	"\300\004"                      # DW_AT_location
	.byte	181                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	501                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	33                              # Abbrev [33] 0x2dfc:0x1e DW_TAG_inlined_subroutine
	.long	11629                           # DW_AT_abstract_origin
	.ascii	"\277\002"                      # DW_AT_low_pc
	.long	.Ltmp2227-.Ltmp2223             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	502                             # DW_AT_call_line
	.byte	17                              # DW_AT_call_column
	.byte	25                              # Abbrev [25] 0x2e0b:0x7 DW_TAG_formal_parameter
	.ascii	"\302\004"                      # DW_AT_location
	.long	11656                           # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x2e12:0x7 DW_TAG_formal_parameter
	.ascii	"\301\004"                      # DW_AT_location
	.long	11665                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x2e1c:0x95 DW_TAG_subprogram
	.ascii	"\300\002"                      # DW_AT_low_pc
	.long	.Lfunc_end65-.Lfunc_begin65     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	118                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	165                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	68                              # DW_AT_type
	.byte	11                              # Abbrev [11] 0x2e2c:0xa DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	29                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	165                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x2e36:0xa DW_TAG_formal_parameter
	.ascii	"\303\004"                      # DW_AT_location
	.byte	204                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	165                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	11                              # Abbrev [11] 0x2e40:0xa DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.byte	34                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	165                             # DW_AT_decl_line
	.long	1437                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x2e4a:0xa DW_TAG_formal_parameter
	.ascii	"\304\004"                      # DW_AT_location
	.byte	205                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	165                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	11                              # Abbrev [11] 0x2e54:0xa DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.byte	125                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	165                             # DW_AT_decl_line
	.long	12437                           # DW_AT_type
	.byte	12                              # Abbrev [12] 0x2e5e:0xa DW_TAG_variable
	.ascii	"\305\004"                      # DW_AT_location
	.byte	138                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	167                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x2e68:0xa DW_TAG_variable
	.ascii	"\306\004"                      # DW_AT_location
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	167                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x2e72:0xa DW_TAG_variable
	.ascii	"\307\004"                      # DW_AT_location
	.byte	202                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	167                             # DW_AT_decl_line
	.long	147                             # DW_AT_type
	.byte	15                              # Abbrev [15] 0x2e7c:0x34 DW_TAG_lexical_block
	.ascii	"\301\002"                      # DW_AT_low_pc
	.long	.Ltmp2248-.Ltmp2236             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x2e83:0xa DW_TAG_variable
	.ascii	"\310\004"                      # DW_AT_location
	.byte	37                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	168                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x2e8d:0x22 DW_TAG_lexical_block
	.ascii	"\301\002"                      # DW_AT_low_pc
	.long	.Ltmp2244-.Ltmp2236             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x2e94:0xa DW_TAG_variable
	.ascii	"\311\004"                      # DW_AT_location
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	170                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	15                              # Abbrev [15] 0x2e9e:0x10 DW_TAG_lexical_block
	.ascii	"\301\002"                      # DW_AT_low_pc
	.long	.Ltmp2244-.Ltmp2236             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x2ea5:0x8 DW_TAG_variable
	.byte	206                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	172                             # DW_AT_decl_line
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	8                               # Abbrev [8] 0x2eb1:0x8 DW_TAG_typedef
	.long	11961                           # DW_AT_type
	.byte	60                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
	.byte	8                               # Abbrev [8] 0x2eb9:0x8 DW_TAG_typedef
	.long	123                             # DW_AT_type
	.byte	59                              # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.byte	44                              # DW_AT_decl_line
	.byte	32                              # Abbrev [32] 0x2ec1:0x5 DW_TAG_pointer_type
	.long	11974                           # DW_AT_type
	.byte	8                               # Abbrev [8] 0x2ec6:0x8 DW_TAG_typedef
	.long	11982                           # DW_AT_type
	.byte	160                             # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	110                             # DW_AT_decl_line
	.byte	45                              # Abbrev [45] 0x2ece:0x14b DW_TAG_structure_type
	.short	1056                            # DW_AT_byte_size
	.byte	1                               # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.byte	46                              # Abbrev [46] 0x2ed3:0x9 DW_TAG_member
	.byte	122                             # DW_AT_name
	.long	12313                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	46                              # Abbrev [46] 0x2edc:0x9 DW_TAG_member
	.byte	125                             # DW_AT_name
	.long	12313                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	66                              # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	46                              # Abbrev [46] 0x2ee5:0x9 DW_TAG_member
	.byte	126                             # DW_AT_name
	.long	12313                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.byte	112                             # DW_AT_data_member_location
	.byte	46                              # Abbrev [46] 0x2eee:0x9 DW_TAG_member
	.byte	127                             # DW_AT_name
	.long	12313                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	68                              # DW_AT_decl_line
	.byte	168                             # DW_AT_data_member_location
	.byte	46                              # Abbrev [46] 0x2ef7:0x9 DW_TAG_member
	.byte	128                             # DW_AT_name
	.long	12368                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	69                              # DW_AT_decl_line
	.byte	224                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2f00:0xa DW_TAG_member
	.byte	129                             # DW_AT_name
	.long	12313                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	70                              # DW_AT_decl_line
	.short	256                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2f0a:0xa DW_TAG_member
	.byte	130                             # DW_AT_name
	.long	12313                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	71                              # DW_AT_decl_line
	.short	312                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2f14:0xa DW_TAG_member
	.byte	131                             # DW_AT_name
	.long	12313                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	72                              # DW_AT_decl_line
	.short	368                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2f1e:0xa DW_TAG_member
	.byte	132                             # DW_AT_name
	.long	12380                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	73                              # DW_AT_decl_line
	.short	424                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2f28:0xa DW_TAG_member
	.byte	134                             # DW_AT_name
	.long	12442                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	74                              # DW_AT_decl_line
	.short	480                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2f32:0xa DW_TAG_member
	.byte	136                             # DW_AT_name
	.long	12313                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	75                              # DW_AT_decl_line
	.short	536                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2f3c:0xa DW_TAG_member
	.byte	137                             # DW_AT_name
	.long	12504                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	76                              # DW_AT_decl_line
	.short	592                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2f46:0xa DW_TAG_member
	.byte	138                             # DW_AT_name
	.long	12540                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	78                              # DW_AT_decl_line
	.short	600                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2f50:0xa DW_TAG_member
	.byte	139                             # DW_AT_name
	.long	12540                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	79                              # DW_AT_decl_line
	.short	632                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2f5a:0xa DW_TAG_member
	.byte	116                             # DW_AT_name
	.long	12573                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	81                              # DW_AT_decl_line
	.short	664                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2f64:0xa DW_TAG_member
	.byte	117                             # DW_AT_name
	.long	12632                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	83                              # DW_AT_decl_line
	.short	672                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2f6e:0xa DW_TAG_member
	.byte	140                             # DW_AT_name
	.long	12380                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	86                              # DW_AT_decl_line
	.short	680                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2f78:0xa DW_TAG_member
	.byte	141                             # DW_AT_name
	.long	12442                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	87                              # DW_AT_decl_line
	.short	736                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2f82:0xa DW_TAG_member
	.byte	142                             # DW_AT_name
	.long	12380                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	88                              # DW_AT_decl_line
	.short	792                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2f8c:0xa DW_TAG_member
	.byte	143                             # DW_AT_name
	.long	12442                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.short	848                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2f96:0xa DW_TAG_member
	.byte	144                             # DW_AT_name
	.long	12658                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.short	904                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2fa0:0xa DW_TAG_member
	.byte	148                             # DW_AT_name
	.long	12746                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	98                              # DW_AT_decl_line
	.short	960                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2faa:0xa DW_TAG_member
	.byte	149                             # DW_AT_name
	.long	12746                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.short	968                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2fb4:0xa DW_TAG_member
	.byte	150                             # DW_AT_name
	.long	12746                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	100                             # DW_AT_decl_line
	.short	976                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2fbe:0xa DW_TAG_member
	.byte	151                             # DW_AT_name
	.long	12746                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	101                             # DW_AT_decl_line
	.short	984                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2fc8:0xa DW_TAG_member
	.byte	152                             # DW_AT_name
	.long	12746                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	102                             # DW_AT_decl_line
	.short	992                             # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2fd2:0xa DW_TAG_member
	.byte	153                             # DW_AT_name
	.long	12746                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	103                             # DW_AT_decl_line
	.short	1000                            # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2fdc:0xa DW_TAG_member
	.byte	154                             # DW_AT_name
	.long	12746                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	104                             # DW_AT_decl_line
	.short	1008                            # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2fe6:0xa DW_TAG_member
	.byte	155                             # DW_AT_name
	.long	12746                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	105                             # DW_AT_decl_line
	.short	1016                            # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2ff0:0xa DW_TAG_member
	.byte	156                             # DW_AT_name
	.long	12746                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	106                             # DW_AT_decl_line
	.short	1024                            # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x2ffa:0xa DW_TAG_member
	.byte	157                             # DW_AT_name
	.long	12746                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	107                             # DW_AT_decl_line
	.short	1032                            # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x3004:0xa DW_TAG_member
	.byte	158                             # DW_AT_name
	.long	12746                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	108                             # DW_AT_decl_line
	.short	1040                            # DW_AT_data_member_location
	.byte	47                              # Abbrev [47] 0x300e:0xa DW_TAG_member
	.byte	159                             # DW_AT_name
	.long	12746                           # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	109                             # DW_AT_decl_line
	.short	1048                            # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	48                              # Abbrev [48] 0x3019:0xc DW_TAG_array_type
	.long	12325                           # DW_AT_type
	.byte	49                              # Abbrev [49] 0x301e:0x6 DW_TAG_subrange_type
	.long	12364                           # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	8                               # Abbrev [8] 0x3025:0x8 DW_TAG_typedef
	.long	12333                           # DW_AT_type
	.byte	123                             # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	26                              # DW_AT_decl_line
	.byte	32                              # Abbrev [32] 0x302d:0x5 DW_TAG_pointer_type
	.long	12338                           # DW_AT_type
	.byte	50                              # Abbrev [50] 0x3032:0x1a DW_TAG_subroutine_type
	.long	68                              # DW_AT_type
                                        # DW_AT_prototyped
	.byte	51                              # Abbrev [51] 0x3037:0x5 DW_TAG_formal_parameter
	.long	1437                            # DW_AT_type
	.byte	51                              # Abbrev [51] 0x303c:0x5 DW_TAG_formal_parameter
	.long	68                              # DW_AT_type
	.byte	51                              # Abbrev [51] 0x3041:0x5 DW_TAG_formal_parameter
	.long	1437                            # DW_AT_type
	.byte	51                              # Abbrev [51] 0x3046:0x5 DW_TAG_formal_parameter
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	52                              # Abbrev [52] 0x304c:0x4 DW_TAG_base_type
	.byte	124                             # DW_AT_name
	.byte	8                               # DW_AT_byte_size
	.byte	7                               # DW_AT_encoding
	.byte	48                              # Abbrev [48] 0x3050:0xc DW_TAG_array_type
	.long	12325                           # DW_AT_type
	.byte	49                              # Abbrev [49] 0x3055:0x6 DW_TAG_subrange_type
	.long	12364                           # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	48                              # Abbrev [48] 0x305c:0xc DW_TAG_array_type
	.long	12392                           # DW_AT_type
	.byte	49                              # Abbrev [49] 0x3061:0x6 DW_TAG_subrange_type
	.long	12364                           # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	8                               # Abbrev [8] 0x3068:0x8 DW_TAG_typedef
	.long	12400                           # DW_AT_type
	.byte	133                             # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
	.byte	32                              # Abbrev [32] 0x3070:0x5 DW_TAG_pointer_type
	.long	12405                           # DW_AT_type
	.byte	53                              # Abbrev [53] 0x3075:0x20 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	51                              # Abbrev [51] 0x3076:0x5 DW_TAG_formal_parameter
	.long	1437                            # DW_AT_type
	.byte	51                              # Abbrev [51] 0x307b:0x5 DW_TAG_formal_parameter
	.long	1437                            # DW_AT_type
	.byte	51                              # Abbrev [51] 0x3080:0x5 DW_TAG_formal_parameter
	.long	1437                            # DW_AT_type
	.byte	51                              # Abbrev [51] 0x3085:0x5 DW_TAG_formal_parameter
	.long	1437                            # DW_AT_type
	.byte	51                              # Abbrev [51] 0x308a:0x5 DW_TAG_formal_parameter
	.long	68                              # DW_AT_type
	.byte	51                              # Abbrev [51] 0x308f:0x5 DW_TAG_formal_parameter
	.long	12437                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3095:0x5 DW_TAG_pointer_type
	.long	68                              # DW_AT_type
	.byte	48                              # Abbrev [48] 0x309a:0xc DW_TAG_array_type
	.long	12454                           # DW_AT_type
	.byte	49                              # Abbrev [49] 0x309f:0x6 DW_TAG_subrange_type
	.long	12364                           # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	8                               # Abbrev [8] 0x30a6:0x8 DW_TAG_typedef
	.long	12462                           # DW_AT_type
	.byte	135                             # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	28                              # DW_AT_decl_line
	.byte	32                              # Abbrev [32] 0x30ae:0x5 DW_TAG_pointer_type
	.long	12467                           # DW_AT_type
	.byte	53                              # Abbrev [53] 0x30b3:0x25 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	51                              # Abbrev [51] 0x30b4:0x5 DW_TAG_formal_parameter
	.long	1437                            # DW_AT_type
	.byte	51                              # Abbrev [51] 0x30b9:0x5 DW_TAG_formal_parameter
	.long	1437                            # DW_AT_type
	.byte	51                              # Abbrev [51] 0x30be:0x5 DW_TAG_formal_parameter
	.long	1437                            # DW_AT_type
	.byte	51                              # Abbrev [51] 0x30c3:0x5 DW_TAG_formal_parameter
	.long	1437                            # DW_AT_type
	.byte	51                              # Abbrev [51] 0x30c8:0x5 DW_TAG_formal_parameter
	.long	1437                            # DW_AT_type
	.byte	51                              # Abbrev [51] 0x30cd:0x5 DW_TAG_formal_parameter
	.long	68                              # DW_AT_type
	.byte	51                              # Abbrev [51] 0x30d2:0x5 DW_TAG_formal_parameter
	.long	12437                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x30d8:0x5 DW_TAG_pointer_type
	.long	12509                           # DW_AT_type
	.byte	50                              # Abbrev [50] 0x30dd:0x1f DW_TAG_subroutine_type
	.long	68                              # DW_AT_type
                                        # DW_AT_prototyped
	.byte	51                              # Abbrev [51] 0x30e2:0x5 DW_TAG_formal_parameter
	.long	1437                            # DW_AT_type
	.byte	51                              # Abbrev [51] 0x30e7:0x5 DW_TAG_formal_parameter
	.long	68                              # DW_AT_type
	.byte	51                              # Abbrev [51] 0x30ec:0x5 DW_TAG_formal_parameter
	.long	1437                            # DW_AT_type
	.byte	51                              # Abbrev [51] 0x30f1:0x5 DW_TAG_formal_parameter
	.long	68                              # DW_AT_type
	.byte	51                              # Abbrev [51] 0x30f6:0x5 DW_TAG_formal_parameter
	.long	12437                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	48                              # Abbrev [48] 0x30fc:0xc DW_TAG_array_type
	.long	12552                           # DW_AT_type
	.byte	49                              # Abbrev [49] 0x3101:0x6 DW_TAG_subrange_type
	.long	12364                           # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3108:0x5 DW_TAG_pointer_type
	.long	12557                           # DW_AT_type
	.byte	50                              # Abbrev [50] 0x310d:0x10 DW_TAG_subroutine_type
	.long	163                             # DW_AT_type
                                        # DW_AT_prototyped
	.byte	51                              # Abbrev [51] 0x3112:0x5 DW_TAG_formal_parameter
	.long	1437                            # DW_AT_type
	.byte	51                              # Abbrev [51] 0x3117:0x5 DW_TAG_formal_parameter
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x311d:0x5 DW_TAG_pointer_type
	.long	12578                           # DW_AT_type
	.byte	53                              # Abbrev [53] 0x3122:0x1b DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	51                              # Abbrev [51] 0x3123:0x5 DW_TAG_formal_parameter
	.long	12605                           # DW_AT_type
	.byte	51                              # Abbrev [51] 0x3128:0x5 DW_TAG_formal_parameter
	.long	68                              # DW_AT_type
	.byte	51                              # Abbrev [51] 0x312d:0x5 DW_TAG_formal_parameter
	.long	12605                           # DW_AT_type
	.byte	51                              # Abbrev [51] 0x3132:0x5 DW_TAG_formal_parameter
	.long	68                              # DW_AT_type
	.byte	51                              # Abbrev [51] 0x3137:0x5 DW_TAG_formal_parameter
	.long	12615                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x313d:0x5 DW_TAG_pointer_type
	.long	12610                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x3142:0x5 DW_TAG_const_type
	.long	1442                            # DW_AT_type
	.byte	32                              # Abbrev [32] 0x3147:0x5 DW_TAG_pointer_type
	.long	12620                           # DW_AT_type
	.byte	48                              # Abbrev [48] 0x314c:0xc DW_TAG_array_type
	.long	68                              # DW_AT_type
	.byte	49                              # Abbrev [49] 0x3151:0x6 DW_TAG_subrange_type
	.long	12364                           # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3158:0x5 DW_TAG_pointer_type
	.long	12637                           # DW_AT_type
	.byte	50                              # Abbrev [50] 0x315d:0x15 DW_TAG_subroutine_type
	.long	183                             # DW_AT_type
                                        # DW_AT_prototyped
	.byte	51                              # Abbrev [51] 0x3162:0x5 DW_TAG_formal_parameter
	.long	12615                           # DW_AT_type
	.byte	51                              # Abbrev [51] 0x3167:0x5 DW_TAG_formal_parameter
	.long	12615                           # DW_AT_type
	.byte	51                              # Abbrev [51] 0x316c:0x5 DW_TAG_formal_parameter
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	48                              # Abbrev [48] 0x3172:0xc DW_TAG_array_type
	.long	12670                           # DW_AT_type
	.byte	49                              # Abbrev [49] 0x3177:0x6 DW_TAG_subrange_type
	.long	12364                           # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x317e:0x5 DW_TAG_pointer_type
	.long	12675                           # DW_AT_type
	.byte	50                              # Abbrev [50] 0x3183:0x29 DW_TAG_subroutine_type
	.long	68                              # DW_AT_type
                                        # DW_AT_prototyped
	.byte	51                              # Abbrev [51] 0x3188:0x5 DW_TAG_formal_parameter
	.long	12437                           # DW_AT_type
	.byte	51                              # Abbrev [51] 0x318d:0x5 DW_TAG_formal_parameter
	.long	12716                           # DW_AT_type
	.byte	51                              # Abbrev [51] 0x3192:0x5 DW_TAG_formal_parameter
	.long	68                              # DW_AT_type
	.byte	51                              # Abbrev [51] 0x3197:0x5 DW_TAG_formal_parameter
	.long	12716                           # DW_AT_type
	.byte	51                              # Abbrev [51] 0x319c:0x5 DW_TAG_formal_parameter
	.long	12721                           # DW_AT_type
	.byte	51                              # Abbrev [51] 0x31a1:0x5 DW_TAG_formal_parameter
	.long	68                              # DW_AT_type
	.byte	51                              # Abbrev [51] 0x31a6:0x5 DW_TAG_formal_parameter
	.long	68                              # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x31ac:0x5 DW_TAG_pointer_type
	.long	127                             # DW_AT_type
	.byte	32                              # Abbrev [32] 0x31b1:0x5 DW_TAG_pointer_type
	.long	12726                           # DW_AT_type
	.byte	8                               # Abbrev [8] 0x31b6:0x8 DW_TAG_typedef
	.long	12734                           # DW_AT_type
	.byte	147                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	25                              # DW_AT_decl_line
	.byte	8                               # Abbrev [8] 0x31be:0x8 DW_TAG_typedef
	.long	12742                           # DW_AT_type
	.byte	146                             # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.byte	39                              # DW_AT_decl_line
	.byte	5                               # Abbrev [5] 0x31c6:0x4 DW_TAG_base_type
	.byte	145                             # DW_AT_name
	.byte	5                               # DW_AT_encoding
	.byte	2                               # DW_AT_byte_size
	.byte	32                              # Abbrev [32] 0x31ca:0x5 DW_TAG_pointer_type
	.long	12751                           # DW_AT_type
	.byte	53                              # Abbrev [53] 0x31cf:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	51                              # Abbrev [51] 0x31d0:0x5 DW_TAG_formal_parameter
	.long	1437                            # DW_AT_type
	.byte	51                              # Abbrev [51] 0x31d5:0x5 DW_TAG_formal_parameter
	.long	1437                            # DW_AT_type
	.byte	51                              # Abbrev [51] 0x31da:0x5 DW_TAG_formal_parameter
	.long	12437                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	54                              # Abbrev [54] 0x31e0:0x1 DW_TAG_pointer_type
	.byte	48                              # Abbrev [48] 0x31e1:0x12 DW_TAG_array_type
	.long	147                             # DW_AT_type
	.byte	49                              # Abbrev [49] 0x31e6:0x6 DW_TAG_subrange_type
	.long	12364                           # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	49                              # Abbrev [49] 0x31ec:0x6 DW_TAG_subrange_type
	.long	12364                           # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	48                              # Abbrev [48] 0x31f3:0x12 DW_TAG_array_type
	.long	147                             # DW_AT_type
	.byte	49                              # Abbrev [49] 0x31f8:0x6 DW_TAG_subrange_type
	.long	12364                           # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	49                              # Abbrev [49] 0x31fe:0x6 DW_TAG_subrange_type
	.long	12364                           # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	48                              # Abbrev [48] 0x3205:0xc DW_TAG_array_type
	.long	147                             # DW_AT_type
	.byte	49                              # Abbrev [49] 0x320a:0x6 DW_TAG_subrange_type
	.long	12364                           # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0x3211:0x5 DW_TAG_pointer_type
	.long	147                             # DW_AT_type
	.byte	48                              # Abbrev [48] 0x3216:0x12 DW_TAG_array_type
	.long	147                             # DW_AT_type
	.byte	49                              # Abbrev [49] 0x321b:0x6 DW_TAG_subrange_type
	.long	12364                           # DW_AT_type
	.byte	8                               # DW_AT_count
	.byte	49                              # Abbrev [49] 0x3221:0x6 DW_TAG_subrange_type
	.long	12364                           # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
.Ldebug_info_end0:
	.section	.debug_rnglists,"",@progbits
	.long	.Ldebug_list_header_end1-.Ldebug_list_header_start1 # Length
.Ldebug_list_header_start1:
	.short	5                               # Version
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
	.long	64                              # Offset entry count
.Lrnglists_table_base0:
	.long	.Ldebug_ranges0-.Lrnglists_table_base0
	.long	.Ldebug_ranges1-.Lrnglists_table_base0
	.long	.Ldebug_ranges2-.Lrnglists_table_base0
	.long	.Ldebug_ranges3-.Lrnglists_table_base0
	.long	.Ldebug_ranges4-.Lrnglists_table_base0
	.long	.Ldebug_ranges5-.Lrnglists_table_base0
	.long	.Ldebug_ranges6-.Lrnglists_table_base0
	.long	.Ldebug_ranges7-.Lrnglists_table_base0
	.long	.Ldebug_ranges8-.Lrnglists_table_base0
	.long	.Ldebug_ranges9-.Lrnglists_table_base0
	.long	.Ldebug_ranges10-.Lrnglists_table_base0
	.long	.Ldebug_ranges11-.Lrnglists_table_base0
	.long	.Ldebug_ranges12-.Lrnglists_table_base0
	.long	.Ldebug_ranges13-.Lrnglists_table_base0
	.long	.Ldebug_ranges14-.Lrnglists_table_base0
	.long	.Ldebug_ranges15-.Lrnglists_table_base0
	.long	.Ldebug_ranges16-.Lrnglists_table_base0
	.long	.Ldebug_ranges17-.Lrnglists_table_base0
	.long	.Ldebug_ranges18-.Lrnglists_table_base0
	.long	.Ldebug_ranges19-.Lrnglists_table_base0
	.long	.Ldebug_ranges20-.Lrnglists_table_base0
	.long	.Ldebug_ranges21-.Lrnglists_table_base0
	.long	.Ldebug_ranges22-.Lrnglists_table_base0
	.long	.Ldebug_ranges23-.Lrnglists_table_base0
	.long	.Ldebug_ranges24-.Lrnglists_table_base0
	.long	.Ldebug_ranges25-.Lrnglists_table_base0
	.long	.Ldebug_ranges26-.Lrnglists_table_base0
	.long	.Ldebug_ranges27-.Lrnglists_table_base0
	.long	.Ldebug_ranges28-.Lrnglists_table_base0
	.long	.Ldebug_ranges29-.Lrnglists_table_base0
	.long	.Ldebug_ranges30-.Lrnglists_table_base0
	.long	.Ldebug_ranges31-.Lrnglists_table_base0
	.long	.Ldebug_ranges32-.Lrnglists_table_base0
	.long	.Ldebug_ranges33-.Lrnglists_table_base0
	.long	.Ldebug_ranges34-.Lrnglists_table_base0
	.long	.Ldebug_ranges35-.Lrnglists_table_base0
	.long	.Ldebug_ranges36-.Lrnglists_table_base0
	.long	.Ldebug_ranges37-.Lrnglists_table_base0
	.long	.Ldebug_ranges38-.Lrnglists_table_base0
	.long	.Ldebug_ranges39-.Lrnglists_table_base0
	.long	.Ldebug_ranges40-.Lrnglists_table_base0
	.long	.Ldebug_ranges41-.Lrnglists_table_base0
	.long	.Ldebug_ranges42-.Lrnglists_table_base0
	.long	.Ldebug_ranges43-.Lrnglists_table_base0
	.long	.Ldebug_ranges44-.Lrnglists_table_base0
	.long	.Ldebug_ranges45-.Lrnglists_table_base0
	.long	.Ldebug_ranges46-.Lrnglists_table_base0
	.long	.Ldebug_ranges47-.Lrnglists_table_base0
	.long	.Ldebug_ranges48-.Lrnglists_table_base0
	.long	.Ldebug_ranges49-.Lrnglists_table_base0
	.long	.Ldebug_ranges50-.Lrnglists_table_base0
	.long	.Ldebug_ranges51-.Lrnglists_table_base0
	.long	.Ldebug_ranges52-.Lrnglists_table_base0
	.long	.Ldebug_ranges53-.Lrnglists_table_base0
	.long	.Ldebug_ranges54-.Lrnglists_table_base0
	.long	.Ldebug_ranges55-.Lrnglists_table_base0
	.long	.Ldebug_ranges56-.Lrnglists_table_base0
	.long	.Ldebug_ranges57-.Lrnglists_table_base0
	.long	.Ldebug_ranges58-.Lrnglists_table_base0
	.long	.Ldebug_ranges59-.Lrnglists_table_base0
	.long	.Ldebug_ranges60-.Lrnglists_table_base0
	.long	.Ldebug_ranges61-.Lrnglists_table_base0
	.long	.Ldebug_ranges62-.Lrnglists_table_base0
	.long	.Ldebug_ranges63-.Lrnglists_table_base0
.Ldebug_ranges0:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp14-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp19-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp36-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp50-.Lfunc_begin0          #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges1:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp127-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp128-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp129-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp132-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges2:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp88-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp89-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp92-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp95-.Lfunc_begin0          #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp98-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp109-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges3:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp162-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp166-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp186-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp190-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges4:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp226-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp228-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp229-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp230-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp231-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp232-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp233-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp234-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp235-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp236-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp237-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp238-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp239-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp240-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp241-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp242-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp243-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp244-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp245-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp246-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp247-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp248-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp249-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp250-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp251-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp254-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges5:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp256-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp258-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp259-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp260-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp261-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp262-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp263-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp264-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp265-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp266-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp267-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp268-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp269-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp270-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp271-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp272-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp273-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp274-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp275-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp276-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp277-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp278-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp279-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp280-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp281-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp282-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp283-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp284-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp285-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp286-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp287-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp288-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp289-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp290-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp291-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp292-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp293-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp294-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp295-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp296-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp297-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp298-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp299-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp300-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp301-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp302-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp303-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp304-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp305-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp306-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp307-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp308-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp309-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp310-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp311-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp312-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp313-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp316-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges6:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp318-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp320-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp321-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp322-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp323-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp324-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp325-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp326-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp327-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp328-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp329-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp330-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp331-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp332-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp333-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp334-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp335-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp336-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp337-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp338-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp339-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp340-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp341-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp342-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp343-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp346-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges7:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp350-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp352-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp353-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp354-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp355-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp358-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges8:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp361-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp362-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp363-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp364-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp365-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp366-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp367-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp368-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp369-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp370-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp371-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp372-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp373-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp374-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp375-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp376-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp377-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp378-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp379-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp380-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp381-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp382-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp383-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp385-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges9:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp390-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp391-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp392-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp394-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges10:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp422-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp424-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp425-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp426-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp427-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp428-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp429-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp430-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp431-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp432-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp433-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp434-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp435-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp436-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp437-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp438-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp439-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp440-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp441-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp442-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp443-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp444-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp445-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp446-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp447-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp448-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp449-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp450-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp451-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp453-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges11:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp454-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp456-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp457-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp458-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp459-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp460-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp461-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp462-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp463-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp464-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp465-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp466-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp467-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp468-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp469-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp470-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp471-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp472-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp473-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp474-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp475-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp476-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp477-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp478-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp479-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp480-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp481-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp482-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp483-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp485-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges12:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp486-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp488-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp489-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp490-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp491-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp492-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp493-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp494-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp495-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp496-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp497-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp498-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp499-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp500-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp501-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp502-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp503-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp504-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp505-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp506-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp507-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp508-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp509-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp510-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp511-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp512-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp513-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp514-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp515-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp517-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges13:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp519-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp521-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp522-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp523-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp524-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp525-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp526-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp527-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp528-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp529-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp530-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp531-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp532-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp534-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges14:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp535-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp537-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp538-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp539-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp540-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp541-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp542-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp543-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp544-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp545-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp546-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp547-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp548-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp550-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges15:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp551-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp553-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp554-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp555-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp556-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp557-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp558-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp559-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp560-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp561-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp562-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp563-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp564-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp566-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges16:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp595-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp603-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp604-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp608-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp609-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp616-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges17:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp617-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp625-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp626-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp630-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp631-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp638-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges18:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp639-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp647-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp648-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp652-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp653-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp660-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges19:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp693-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp694-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp695-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp696-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp697-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp698-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp699-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp700-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp701-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp702-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp703-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp704-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp705-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp706-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp707-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp708-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp709-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp710-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp711-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp712-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp713-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp714-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp715-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp716-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp717-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp718-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp719-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp720-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp721-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp724-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges20:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp725-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp727-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp728-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp729-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp730-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp731-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp732-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp733-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp734-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp735-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp736-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp737-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp738-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp739-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp740-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp741-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp742-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp743-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp744-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp745-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp746-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp747-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp748-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp749-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp750-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp751-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp752-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp753-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp754-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp757-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges21:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp758-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp760-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp761-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp762-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp763-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp764-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp765-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp766-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp767-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp768-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp769-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp770-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp771-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp772-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp773-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp774-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp775-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp776-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp777-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp778-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp779-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp780-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp781-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp782-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp783-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp784-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp785-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp786-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp787-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp790-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges22:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp791-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp793-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp794-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp795-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp796-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp797-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp798-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp799-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp800-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp801-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp802-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp803-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp804-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp805-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp806-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp807-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp808-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp809-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp810-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp811-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp812-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp813-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp814-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp815-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp816-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp817-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp818-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp819-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp820-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp822-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges23:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp825-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp826-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp827-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp828-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp829-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp830-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp831-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp832-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp833-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp834-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp835-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp836-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp837-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp840-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges24:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp841-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp843-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp844-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp845-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp846-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp847-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp848-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp849-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp850-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp851-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp852-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp853-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp854-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp857-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges25:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp858-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp860-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp861-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp862-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp863-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp864-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp865-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp866-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp867-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp868-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp869-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp870-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp871-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp874-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges26:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp875-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp877-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp878-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp879-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp880-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp881-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp882-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp883-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp884-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp885-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp886-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp887-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp888-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp890-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges27:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp923-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp931-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp932-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp936-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp937-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp945-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges28:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp946-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp954-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp955-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp959-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp960-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp967-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges29:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp968-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp976-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp977-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp981-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp982-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp989-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges30:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp990-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp998-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp999-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1003-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1004-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges31:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1040-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1042-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1043-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1044-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1045-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1046-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1047-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1048-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1049-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1050-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1051-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1052-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1053-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1054-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1055-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1056-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1057-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1058-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1059-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1060-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1061-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1062-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1063-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1064-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1065-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1068-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges32:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1040-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1042-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1043-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1044-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1045-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1046-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1047-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1048-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1049-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1050-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1051-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1052-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1053-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1054-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1055-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1056-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1057-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1058-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1059-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1060-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1061-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1062-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1063-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1064-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1065-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1068-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges33:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1070-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1072-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1073-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1074-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1075-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1076-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1077-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1078-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1082-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges34:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1070-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1072-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1073-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1074-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1075-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1076-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1077-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1078-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1082-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges35:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1085-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1086-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1087-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1088-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1089-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1090-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1091-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1092-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1093-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1094-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1095-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1096-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1097-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1098-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1099-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1100-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1101-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1102-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1103-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1104-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1105-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1106-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1107-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1108-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1109-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1115-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges36:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1085-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1086-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1087-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1088-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1089-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1090-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1091-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1092-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1093-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1094-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1095-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1096-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1097-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1098-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1099-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1100-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1101-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1102-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1103-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1104-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1105-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1106-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1107-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1108-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1109-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1115-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges37:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1118-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1120-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1121-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1122-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1124-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1125-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1126-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1130-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges38:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1118-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1119-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1120-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1121-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1122-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1124-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1125-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1126-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1130-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges39:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1200-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1210-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1217-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1228-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1234-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1243-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1251-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1260-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges40:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1260-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1268-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1287-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1297-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1315-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1324-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1341-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1349-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges41:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1268-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1273-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1297-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1301-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1324-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1329-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1349-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1354-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges42:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1273-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1277-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1301-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1305-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1329-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1333-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1354-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1358-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges43:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1278-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1281-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1306-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1309-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1334-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1337-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1359-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1362-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges44:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1281-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1285-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1310-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1315-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1338-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1341-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1363-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1367-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges45:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1436-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1444-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1464-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1472-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges46:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1444-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1449-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1472-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1476-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges47:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1449-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1453-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1476-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1480-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges48:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1454-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1457-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1481-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1484-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges49:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1457-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1461-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1484-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1488-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges50:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2000-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2016-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2017-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2029-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2030-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2041-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2042-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2053-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2054-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2064-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2065-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2077-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2078-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2100-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges51:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2252-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2261-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2262-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2271-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2272-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2280-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2281-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2291-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2292-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2300-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2301-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2310-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2311-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2331-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges52:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2331-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2332-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2335-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2336-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges53:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2332-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2333-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2336-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2337-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges54:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2333-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2337-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2338-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges55:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2335-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2339-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2340-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges56:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2343-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2360-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2367-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2382-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges57:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2383-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2393-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2409-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2418-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2436-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2446-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2463-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2471-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2489-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2498-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2516-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2525-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2543-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2551-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2569-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2578-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges58:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2393-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2396-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2418-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2423-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2446-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2451-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2471-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2476-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2498-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2503-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2525-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2530-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2551-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2556-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2578-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2583-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges59:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2396-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2400-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2423-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2427-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2451-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2455-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2476-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2480-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2503-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2507-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2530-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2534-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2556-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2560-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2583-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2587-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges60:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2401-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2404-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2428-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2431-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2456-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2459-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2481-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2484-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2508-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2511-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2535-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2538-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2561-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2564-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2588-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2591-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges61:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2404-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2408-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2432-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2436-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2460-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2463-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2485-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2488-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2512-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2515-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2538-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2542-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2565-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2568-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2592-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2596-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges62:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2641-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2642-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2643-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2644-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges63:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2642-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2643-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2644-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2645-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2650-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2655-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2656-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2661-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2662-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_list_header_end1:
	.section	.debug_str_offsets,"",@progbits
	.long	872                             # Length of String Offsets Set
	.short	5
	.short	0
.Lstr_offsets_base0:
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)" # string offset=0
.Linfo_string1:
	.asciz	"x264_src/common/pixel.c"       # string offset=105
.Linfo_string2:
	.asciz	"/home/yjs/workspace/x264-test/src" # string offset=129
.Linfo_string3:
	.asciz	"ssim_c1"                       # string offset=163
.Linfo_string4:
	.asciz	"int"                           # string offset=171
.Linfo_string5:
	.asciz	"ssim_c2"                       # string offset=175
.Linfo_string6:
	.asciz	"unsigned int"                  # string offset=183
.Linfo_string7:
	.asciz	"PIXEL_16x16"                   # string offset=196
.Linfo_string8:
	.asciz	"PIXEL_16x8"                    # string offset=208
.Linfo_string9:
	.asciz	"PIXEL_8x16"                    # string offset=219
.Linfo_string10:
	.asciz	"PIXEL_8x8"                     # string offset=230
.Linfo_string11:
	.asciz	"PIXEL_8x4"                     # string offset=240
.Linfo_string12:
	.asciz	"PIXEL_4x8"                     # string offset=250
.Linfo_string13:
	.asciz	"PIXEL_4x4"                     # string offset=260
.Linfo_string14:
	.asciz	"PIXEL_4x2"                     # string offset=270
.Linfo_string15:
	.asciz	"PIXEL_2x4"                     # string offset=280
.Linfo_string16:
	.asciz	"PIXEL_2x2"                     # string offset=290
.Linfo_string17:
	.asciz	"long"                          # string offset=300
.Linfo_string18:
	.asciz	"intptr_t"                      # string offset=305
.Linfo_string19:
	.asciz	"unsigned short"                # string offset=314
.Linfo_string20:
	.asciz	"__uint16_t"                    # string offset=329
.Linfo_string21:
	.asciz	"uint16_t"                      # string offset=340
.Linfo_string22:
	.asciz	"__uint32_t"                    # string offset=349
.Linfo_string23:
	.asciz	"uint32_t"                      # string offset=360
.Linfo_string24:
	.asciz	"unsigned long"                 # string offset=369
.Linfo_string25:
	.asciz	"__uint64_t"                    # string offset=383
.Linfo_string26:
	.asciz	"uint64_t"                      # string offset=394
.Linfo_string27:
	.asciz	"float"                         # string offset=403
.Linfo_string28:
	.asciz	"x264_pixel_sad_8x16"           # string offset=409
.Linfo_string29:
	.asciz	"pix1"                          # string offset=429
.Linfo_string30:
	.asciz	"unsigned char"                 # string offset=434
.Linfo_string31:
	.asciz	"__uint8_t"                     # string offset=448
.Linfo_string32:
	.asciz	"uint8_t"                       # string offset=458
.Linfo_string33:
	.asciz	"i_stride_pix1"                 # string offset=466
.Linfo_string34:
	.asciz	"pix2"                          # string offset=480
.Linfo_string35:
	.asciz	"i_stride_pix2"                 # string offset=485
.Linfo_string36:
	.asciz	"i_sum"                         # string offset=499
.Linfo_string37:
	.asciz	"y"                             # string offset=505
.Linfo_string38:
	.asciz	"x"                             # string offset=507
.Linfo_string39:
	.asciz	"x264_pixel_sad_8x8"            # string offset=509
.Linfo_string40:
	.asciz	"x264_pixel_sad_4x4"            # string offset=528
.Linfo_string41:
	.asciz	"abs2"                          # string offset=547
.Linfo_string42:
	.asciz	"a"                             # string offset=552
.Linfo_string43:
	.asciz	"s"                             # string offset=554
.Linfo_string44:
	.asciz	"x264_pixel_satd_16x8"          # string offset=556
.Linfo_string45:
	.asciz	"i_pix1"                        # string offset=577
.Linfo_string46:
	.asciz	"i_pix2"                        # string offset=584
.Linfo_string47:
	.asciz	"sum"                           # string offset=591
.Linfo_string48:
	.asciz	"x264_pixel_satd_8x16"          # string offset=595
.Linfo_string49:
	.asciz	"x264_pixel_satd_8x8"           # string offset=616
.Linfo_string50:
	.asciz	"x264_pixel_satd_4x8"           # string offset=636
.Linfo_string51:
	.asciz	"ssim_end1"                     # string offset=656
.Linfo_string52:
	.asciz	"s1"                            # string offset=666
.Linfo_string53:
	.asciz	"s2"                            # string offset=669
.Linfo_string54:
	.asciz	"ss"                            # string offset=672
.Linfo_string55:
	.asciz	"s12"                           # string offset=675
.Linfo_string56:
	.asciz	"vars"                          # string offset=679
.Linfo_string57:
	.asciz	"covar"                         # string offset=684
.Linfo_string58:
	.asciz	"x264_pixel_ssd_wxh"            # string offset=690
.Linfo_string59:
	.asciz	"__int64_t"                     # string offset=709
.Linfo_string60:
	.asciz	"int64_t"                       # string offset=719
.Linfo_string61:
	.asciz	"x264_pixel_ssim_wxh"           # string offset=727
.Linfo_string62:
	.asciz	"x264_pixel_init"               # string offset=747
.Linfo_string63:
	.asciz	"x264_pixel_sad_16x16"          # string offset=763
.Linfo_string64:
	.asciz	"x264_pixel_sad_16x8"           # string offset=784
.Linfo_string65:
	.asciz	"x264_pixel_sad_8x4"            # string offset=804
.Linfo_string66:
	.asciz	"x264_pixel_sad_4x8"            # string offset=823
.Linfo_string67:
	.asciz	"x264_pixel_sad_x3_16x16"       # string offset=842
.Linfo_string68:
	.asciz	"x264_pixel_sad_x3_16x8"        # string offset=866
.Linfo_string69:
	.asciz	"x264_pixel_sad_x3_8x16"        # string offset=889
.Linfo_string70:
	.asciz	"x264_pixel_sad_x3_8x8"         # string offset=912
.Linfo_string71:
	.asciz	"x264_pixel_sad_x3_8x4"         # string offset=934
.Linfo_string72:
	.asciz	"x264_pixel_sad_x3_4x8"         # string offset=956
.Linfo_string73:
	.asciz	"x264_pixel_sad_x3_4x4"         # string offset=978
.Linfo_string74:
	.asciz	"x264_pixel_sad_x4_16x16"       # string offset=1000
.Linfo_string75:
	.asciz	"x264_pixel_sad_x4_16x8"        # string offset=1024
.Linfo_string76:
	.asciz	"x264_pixel_sad_x4_8x16"        # string offset=1047
.Linfo_string77:
	.asciz	"x264_pixel_sad_x4_8x8"         # string offset=1070
.Linfo_string78:
	.asciz	"x264_pixel_sad_x4_8x4"         # string offset=1092
.Linfo_string79:
	.asciz	"x264_pixel_sad_x4_4x8"         # string offset=1114
.Linfo_string80:
	.asciz	"x264_pixel_sad_x4_4x4"         # string offset=1136
.Linfo_string81:
	.asciz	"x264_pixel_ssd_16x16"          # string offset=1158
.Linfo_string82:
	.asciz	"x264_pixel_ssd_16x8"           # string offset=1179
.Linfo_string83:
	.asciz	"x264_pixel_ssd_8x16"           # string offset=1199
.Linfo_string84:
	.asciz	"x264_pixel_ssd_8x8"            # string offset=1219
.Linfo_string85:
	.asciz	"x264_pixel_ssd_8x4"            # string offset=1238
.Linfo_string86:
	.asciz	"x264_pixel_ssd_4x8"            # string offset=1257
.Linfo_string87:
	.asciz	"x264_pixel_ssd_4x4"            # string offset=1276
.Linfo_string88:
	.asciz	"x264_pixel_satd_16x16"         # string offset=1295
.Linfo_string89:
	.asciz	"x264_pixel_satd_8x4"           # string offset=1317
.Linfo_string90:
	.asciz	"x264_pixel_satd_4x4"           # string offset=1337
.Linfo_string91:
	.asciz	"x264_pixel_satd_x3_16x16"      # string offset=1357
.Linfo_string92:
	.asciz	"x264_pixel_satd_x3_16x8"       # string offset=1382
.Linfo_string93:
	.asciz	"x264_pixel_satd_x3_8x16"       # string offset=1406
.Linfo_string94:
	.asciz	"x264_pixel_satd_x3_8x8"        # string offset=1430
.Linfo_string95:
	.asciz	"x264_pixel_satd_x3_8x4"        # string offset=1453
.Linfo_string96:
	.asciz	"x264_pixel_satd_x3_4x8"        # string offset=1476
.Linfo_string97:
	.asciz	"x264_pixel_satd_x3_4x4"        # string offset=1499
.Linfo_string98:
	.asciz	"x264_pixel_satd_x4_16x16"      # string offset=1522
.Linfo_string99:
	.asciz	"x264_pixel_satd_x4_16x8"       # string offset=1547
.Linfo_string100:
	.asciz	"x264_pixel_satd_x4_8x16"       # string offset=1571
.Linfo_string101:
	.asciz	"x264_pixel_satd_x4_8x8"        # string offset=1595
.Linfo_string102:
	.asciz	"x264_pixel_satd_x4_8x4"        # string offset=1618
.Linfo_string103:
	.asciz	"x264_pixel_satd_x4_4x8"        # string offset=1641
.Linfo_string104:
	.asciz	"x264_pixel_satd_x4_4x4"        # string offset=1664
.Linfo_string105:
	.asciz	"x264_pixel_hadamard_ac_16x16"  # string offset=1687
.Linfo_string106:
	.asciz	"x264_pixel_hadamard_ac_16x8"   # string offset=1716
.Linfo_string107:
	.asciz	"x264_pixel_hadamard_ac_8x16"   # string offset=1744
.Linfo_string108:
	.asciz	"x264_pixel_hadamard_ac_8x8"    # string offset=1772
.Linfo_string109:
	.asciz	"x264_pixel_ads4"               # string offset=1799
.Linfo_string110:
	.asciz	"x264_pixel_ads2"               # string offset=1815
.Linfo_string111:
	.asciz	"x264_pixel_ads1"               # string offset=1831
.Linfo_string112:
	.asciz	"x264_pixel_sa8d_16x16"         # string offset=1847
.Linfo_string113:
	.asciz	"x264_pixel_sa8d_8x8"           # string offset=1869
.Linfo_string114:
	.asciz	"x264_pixel_var_16x16"          # string offset=1889
.Linfo_string115:
	.asciz	"x264_pixel_var_8x8"            # string offset=1910
.Linfo_string116:
	.asciz	"ssim_4x4x2_core"               # string offset=1929
.Linfo_string117:
	.asciz	"ssim_end4"                     # string offset=1945
.Linfo_string118:
	.asciz	"pixel_var2_8x8"                # string offset=1955
.Linfo_string119:
	.asciz	"pixel_hadamard_ac"             # string offset=1970
.Linfo_string120:
	.asciz	"sa8d_8x8"                      # string offset=1988
.Linfo_string121:
	.asciz	"pf"                            # string offset=1997
.Linfo_string122:
	.asciz	"sad"                           # string offset=2000
.Linfo_string123:
	.asciz	"x264_pixel_cmp_t"              # string offset=2004
.Linfo_string124:
	.asciz	"__ARRAY_SIZE_TYPE__"           # string offset=2021
.Linfo_string125:
	.asciz	"ssd"                           # string offset=2041
.Linfo_string126:
	.asciz	"satd"                          # string offset=2045
.Linfo_string127:
	.asciz	"ssim"                          # string offset=2050
.Linfo_string128:
	.asciz	"sa8d"                          # string offset=2055
.Linfo_string129:
	.asciz	"mbcmp"                         # string offset=2060
.Linfo_string130:
	.asciz	"mbcmp_unaligned"               # string offset=2066
.Linfo_string131:
	.asciz	"fpelcmp"                       # string offset=2082
.Linfo_string132:
	.asciz	"fpelcmp_x3"                    # string offset=2090
.Linfo_string133:
	.asciz	"x264_pixel_cmp_x3_t"           # string offset=2101
.Linfo_string134:
	.asciz	"fpelcmp_x4"                    # string offset=2121
.Linfo_string135:
	.asciz	"x264_pixel_cmp_x4_t"           # string offset=2132
.Linfo_string136:
	.asciz	"sad_aligned"                   # string offset=2152
.Linfo_string137:
	.asciz	"var2_8x8"                      # string offset=2164
.Linfo_string138:
	.asciz	"var"                           # string offset=2173
.Linfo_string139:
	.asciz	"hadamard_ac"                   # string offset=2177
.Linfo_string140:
	.asciz	"sad_x3"                        # string offset=2189
.Linfo_string141:
	.asciz	"sad_x4"                        # string offset=2196
.Linfo_string142:
	.asciz	"satd_x3"                       # string offset=2203
.Linfo_string143:
	.asciz	"satd_x4"                       # string offset=2211
.Linfo_string144:
	.asciz	"ads"                           # string offset=2219
.Linfo_string145:
	.asciz	"short"                         # string offset=2223
.Linfo_string146:
	.asciz	"__int16_t"                     # string offset=2229
.Linfo_string147:
	.asciz	"int16_t"                       # string offset=2239
.Linfo_string148:
	.asciz	"intra_mbcmp_x3_16x16"          # string offset=2247
.Linfo_string149:
	.asciz	"intra_satd_x3_16x16"           # string offset=2268
.Linfo_string150:
	.asciz	"intra_sad_x3_16x16"            # string offset=2288
.Linfo_string151:
	.asciz	"intra_mbcmp_x3_8x8c"           # string offset=2307
.Linfo_string152:
	.asciz	"intra_satd_x3_8x8c"            # string offset=2327
.Linfo_string153:
	.asciz	"intra_sad_x3_8x8c"             # string offset=2346
.Linfo_string154:
	.asciz	"intra_mbcmp_x3_4x4"            # string offset=2364
.Linfo_string155:
	.asciz	"intra_satd_x3_4x4"             # string offset=2383
.Linfo_string156:
	.asciz	"intra_sad_x3_4x4"              # string offset=2401
.Linfo_string157:
	.asciz	"intra_mbcmp_x3_8x8"            # string offset=2418
.Linfo_string158:
	.asciz	"intra_sa8d_x3_8x8"             # string offset=2437
.Linfo_string159:
	.asciz	"intra_sad_x3_8x8"              # string offset=2455
.Linfo_string160:
	.asciz	"x264_pixel_function_t"         # string offset=2472
.Linfo_string161:
	.asciz	"i_width"                       # string offset=2494
.Linfo_string162:
	.asciz	"i_height"                      # string offset=2502
.Linfo_string163:
	.asciz	"i_ssd"                         # string offset=2511
.Linfo_string164:
	.asciz	"d"                             # string offset=2517
.Linfo_string165:
	.asciz	"align"                         # string offset=2519
.Linfo_string166:
	.asciz	"stride1"                       # string offset=2525
.Linfo_string167:
	.asciz	"stride2"                       # string offset=2533
.Linfo_string168:
	.asciz	"width"                         # string offset=2541
.Linfo_string169:
	.asciz	"height"                        # string offset=2547
.Linfo_string170:
	.asciz	"buf"                           # string offset=2554
.Linfo_string171:
	.asciz	"sum0"                          # string offset=2558
.Linfo_string172:
	.asciz	"sum1"                          # string offset=2563
.Linfo_string173:
	.asciz	"z"                             # string offset=2568
.Linfo_string174:
	.asciz	"cpu"                           # string offset=2570
.Linfo_string175:
	.asciz	"pixf"                          # string offset=2574
.Linfo_string176:
	.asciz	"fenc"                          # string offset=2579
.Linfo_string177:
	.asciz	"pix0"                          # string offset=2584
.Linfo_string178:
	.asciz	"i_stride"                      # string offset=2589
.Linfo_string179:
	.asciz	"scores"                        # string offset=2598
.Linfo_string180:
	.asciz	"pix3"                          # string offset=2605
.Linfo_string181:
	.asciz	"i"                             # string offset=2610
.Linfo_string182:
	.asciz	"a0"                            # string offset=2612
.Linfo_string183:
	.asciz	"a1"                            # string offset=2615
.Linfo_string184:
	.asciz	"a2"                            # string offset=2618
.Linfo_string185:
	.asciz	"a3"                            # string offset=2621
.Linfo_string186:
	.asciz	"t0"                            # string offset=2624
.Linfo_string187:
	.asciz	"t1"                            # string offset=2627
.Linfo_string188:
	.asciz	"t2"                            # string offset=2630
.Linfo_string189:
	.asciz	"t3"                            # string offset=2633
.Linfo_string190:
	.asciz	"tmp"                           # string offset=2636
.Linfo_string191:
	.asciz	"b0"                            # string offset=2640
.Linfo_string192:
	.asciz	"b1"                            # string offset=2643
.Linfo_string193:
	.asciz	"pix"                           # string offset=2646
.Linfo_string194:
	.asciz	"stride"                        # string offset=2650
.Linfo_string195:
	.asciz	"enc_dc"                        # string offset=2657
.Linfo_string196:
	.asciz	"sums"                          # string offset=2664
.Linfo_string197:
	.asciz	"delta"                         # string offset=2669
.Linfo_string198:
	.asciz	"cost_mvx"                      # string offset=2675
.Linfo_string199:
	.asciz	"mvs"                           # string offset=2684
.Linfo_string200:
	.asciz	"thresh"                        # string offset=2688
.Linfo_string201:
	.asciz	"nmv"                           # string offset=2695
.Linfo_string202:
	.asciz	"sqr"                           # string offset=2699
.Linfo_string203:
	.asciz	"b"                             # string offset=2703
.Linfo_string204:
	.asciz	"i_stride1"                     # string offset=2705
.Linfo_string205:
	.asciz	"i_stride2"                     # string offset=2715
.Linfo_string206:
	.asciz	"diff"                          # string offset=2725
.Linfo_string207:
	.asciz	"sum4"                          # string offset=2730
.Linfo_string208:
	.asciz	"sum8"                          # string offset=2735
.Linfo_string209:
	.asciz	"t"                             # string offset=2740
.Linfo_string210:
	.asciz	"dc"                            # string offset=2742
.Linfo_string211:
	.asciz	"a4"                            # string offset=2745
.Linfo_string212:
	.asciz	"a5"                            # string offset=2748
.Linfo_string213:
	.asciz	"b2"                            # string offset=2751
.Linfo_string214:
	.asciz	"a6"                            # string offset=2754
.Linfo_string215:
	.asciz	"a7"                            # string offset=2757
.Linfo_string216:
	.asciz	"b3"                            # string offset=2760
	.section	.debug_str_offsets,"",@progbits
	.long	.Linfo_string0
	.long	.Linfo_string1
	.long	.Linfo_string2
	.long	.Linfo_string3
	.long	.Linfo_string4
	.long	.Linfo_string5
	.long	.Linfo_string6
	.long	.Linfo_string7
	.long	.Linfo_string8
	.long	.Linfo_string9
	.long	.Linfo_string10
	.long	.Linfo_string11
	.long	.Linfo_string12
	.long	.Linfo_string13
	.long	.Linfo_string14
	.long	.Linfo_string15
	.long	.Linfo_string16
	.long	.Linfo_string17
	.long	.Linfo_string18
	.long	.Linfo_string19
	.long	.Linfo_string20
	.long	.Linfo_string21
	.long	.Linfo_string22
	.long	.Linfo_string23
	.long	.Linfo_string24
	.long	.Linfo_string25
	.long	.Linfo_string26
	.long	.Linfo_string27
	.long	.Linfo_string28
	.long	.Linfo_string29
	.long	.Linfo_string30
	.long	.Linfo_string31
	.long	.Linfo_string32
	.long	.Linfo_string33
	.long	.Linfo_string34
	.long	.Linfo_string35
	.long	.Linfo_string36
	.long	.Linfo_string37
	.long	.Linfo_string38
	.long	.Linfo_string39
	.long	.Linfo_string40
	.long	.Linfo_string41
	.long	.Linfo_string42
	.long	.Linfo_string43
	.long	.Linfo_string44
	.long	.Linfo_string45
	.long	.Linfo_string46
	.long	.Linfo_string47
	.long	.Linfo_string48
	.long	.Linfo_string49
	.long	.Linfo_string50
	.long	.Linfo_string51
	.long	.Linfo_string52
	.long	.Linfo_string53
	.long	.Linfo_string54
	.long	.Linfo_string55
	.long	.Linfo_string56
	.long	.Linfo_string57
	.long	.Linfo_string58
	.long	.Linfo_string59
	.long	.Linfo_string60
	.long	.Linfo_string61
	.long	.Linfo_string62
	.long	.Linfo_string63
	.long	.Linfo_string64
	.long	.Linfo_string65
	.long	.Linfo_string66
	.long	.Linfo_string67
	.long	.Linfo_string68
	.long	.Linfo_string69
	.long	.Linfo_string70
	.long	.Linfo_string71
	.long	.Linfo_string72
	.long	.Linfo_string73
	.long	.Linfo_string74
	.long	.Linfo_string75
	.long	.Linfo_string76
	.long	.Linfo_string77
	.long	.Linfo_string78
	.long	.Linfo_string79
	.long	.Linfo_string80
	.long	.Linfo_string81
	.long	.Linfo_string82
	.long	.Linfo_string83
	.long	.Linfo_string84
	.long	.Linfo_string85
	.long	.Linfo_string86
	.long	.Linfo_string87
	.long	.Linfo_string88
	.long	.Linfo_string89
	.long	.Linfo_string90
	.long	.Linfo_string91
	.long	.Linfo_string92
	.long	.Linfo_string93
	.long	.Linfo_string94
	.long	.Linfo_string95
	.long	.Linfo_string96
	.long	.Linfo_string97
	.long	.Linfo_string98
	.long	.Linfo_string99
	.long	.Linfo_string100
	.long	.Linfo_string101
	.long	.Linfo_string102
	.long	.Linfo_string103
	.long	.Linfo_string104
	.long	.Linfo_string105
	.long	.Linfo_string106
	.long	.Linfo_string107
	.long	.Linfo_string108
	.long	.Linfo_string109
	.long	.Linfo_string110
	.long	.Linfo_string111
	.long	.Linfo_string112
	.long	.Linfo_string113
	.long	.Linfo_string114
	.long	.Linfo_string115
	.long	.Linfo_string116
	.long	.Linfo_string117
	.long	.Linfo_string118
	.long	.Linfo_string119
	.long	.Linfo_string120
	.long	.Linfo_string121
	.long	.Linfo_string122
	.long	.Linfo_string123
	.long	.Linfo_string124
	.long	.Linfo_string125
	.long	.Linfo_string126
	.long	.Linfo_string127
	.long	.Linfo_string128
	.long	.Linfo_string129
	.long	.Linfo_string130
	.long	.Linfo_string131
	.long	.Linfo_string132
	.long	.Linfo_string133
	.long	.Linfo_string134
	.long	.Linfo_string135
	.long	.Linfo_string136
	.long	.Linfo_string137
	.long	.Linfo_string138
	.long	.Linfo_string139
	.long	.Linfo_string140
	.long	.Linfo_string141
	.long	.Linfo_string142
	.long	.Linfo_string143
	.long	.Linfo_string144
	.long	.Linfo_string145
	.long	.Linfo_string146
	.long	.Linfo_string147
	.long	.Linfo_string148
	.long	.Linfo_string149
	.long	.Linfo_string150
	.long	.Linfo_string151
	.long	.Linfo_string152
	.long	.Linfo_string153
	.long	.Linfo_string154
	.long	.Linfo_string155
	.long	.Linfo_string156
	.long	.Linfo_string157
	.long	.Linfo_string158
	.long	.Linfo_string159
	.long	.Linfo_string160
	.long	.Linfo_string161
	.long	.Linfo_string162
	.long	.Linfo_string163
	.long	.Linfo_string164
	.long	.Linfo_string165
	.long	.Linfo_string166
	.long	.Linfo_string167
	.long	.Linfo_string168
	.long	.Linfo_string169
	.long	.Linfo_string170
	.long	.Linfo_string171
	.long	.Linfo_string172
	.long	.Linfo_string173
	.long	.Linfo_string174
	.long	.Linfo_string175
	.long	.Linfo_string176
	.long	.Linfo_string177
	.long	.Linfo_string178
	.long	.Linfo_string179
	.long	.Linfo_string180
	.long	.Linfo_string181
	.long	.Linfo_string182
	.long	.Linfo_string183
	.long	.Linfo_string184
	.long	.Linfo_string185
	.long	.Linfo_string186
	.long	.Linfo_string187
	.long	.Linfo_string188
	.long	.Linfo_string189
	.long	.Linfo_string190
	.long	.Linfo_string191
	.long	.Linfo_string192
	.long	.Linfo_string193
	.long	.Linfo_string194
	.long	.Linfo_string195
	.long	.Linfo_string196
	.long	.Linfo_string197
	.long	.Linfo_string198
	.long	.Linfo_string199
	.long	.Linfo_string200
	.long	.Linfo_string201
	.long	.Linfo_string202
	.long	.Linfo_string203
	.long	.Linfo_string204
	.long	.Linfo_string205
	.long	.Linfo_string206
	.long	.Linfo_string207
	.long	.Linfo_string208
	.long	.Linfo_string209
	.long	.Linfo_string210
	.long	.Linfo_string211
	.long	.Linfo_string212
	.long	.Linfo_string213
	.long	.Linfo_string214
	.long	.Linfo_string215
	.long	.Linfo_string216
	.section	.debug_addr,"",@progbits
	.long	.Ldebug_addr_end0-.Ldebug_addr_start0 # Length of contribution
.Ldebug_addr_start0:
	.short	5                               # DWARF version number
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
.Laddr_table_base0:
	.quad	.Lfunc_begin0
	.quad	.Ltmp54
	.quad	.Ltmp123
	.quad	.Ltmp84
	.quad	.Ltmp15
	.quad	.Ltmp38
	.quad	.Ltmp46
	.quad	.Ltmp58
	.quad	.Lfunc_begin1
	.quad	.Ltmp142
	.quad	.Ltmp200
	.quad	.Ltmp163
	.quad	.Ltmp187
	.quad	.Ltmp201
	.quad	.Lfunc_begin2
	.quad	.Lfunc_begin3
	.quad	.Ltmp219
	.quad	.Lfunc_begin4
	.quad	.Ltmp226
	.quad	.Lfunc_begin5
	.quad	.Ltmp256
	.quad	.Lfunc_begin6
	.quad	.Ltmp318
	.quad	.Lfunc_begin7
	.quad	.Ltmp348
	.quad	.Lfunc_begin8
	.quad	.Ltmp360
	.quad	.Lfunc_begin9
	.quad	.Ltmp387
	.quad	.Lfunc_begin10
	.quad	.Ltmp400
	.quad	.Ltmp401
	.quad	.Ltmp402
	.quad	.Lfunc_begin11
	.quad	.Ltmp413
	.quad	.Ltmp414
	.quad	.Ltmp415
	.quad	.Lfunc_begin12
	.quad	.Ltmp422
	.quad	.Ltmp454
	.quad	.Ltmp486
	.quad	.Lfunc_begin13
	.quad	.Ltmp519
	.quad	.Ltmp535
	.quad	.Ltmp551
	.quad	.Lfunc_begin14
	.quad	.Ltmp572
	.quad	.Ltmp573
	.quad	.Ltmp574
	.quad	.Lfunc_begin15
	.quad	.Ltmp585
	.quad	.Ltmp586
	.quad	.Ltmp587
	.quad	.Lfunc_begin16
	.quad	.Ltmp595
	.quad	.Ltmp617
	.quad	.Ltmp639
	.quad	.Lfunc_begin17
	.quad	.Ltmp667
	.quad	.Ltmp668
	.quad	.Ltmp669
	.quad	.Ltmp670
	.quad	.Lfunc_begin18
	.quad	.Ltmp682
	.quad	.Ltmp683
	.quad	.Ltmp684
	.quad	.Ltmp685
	.quad	.Lfunc_begin19
	.quad	.Ltmp693
	.quad	.Ltmp725
	.quad	.Ltmp758
	.quad	.Ltmp791
	.quad	.Lfunc_begin20
	.quad	.Ltmp825
	.quad	.Ltmp841
	.quad	.Ltmp858
	.quad	.Ltmp875
	.quad	.Lfunc_begin21
	.quad	.Ltmp897
	.quad	.Ltmp898
	.quad	.Ltmp899
	.quad	.Ltmp900
	.quad	.Lfunc_begin22
	.quad	.Ltmp912
	.quad	.Ltmp913
	.quad	.Ltmp914
	.quad	.Ltmp915
	.quad	.Lfunc_begin23
	.quad	.Ltmp923
	.quad	.Ltmp946
	.quad	.Ltmp968
	.quad	.Ltmp990
	.quad	.Lfunc_begin24
	.quad	.Ltmp1015
	.quad	.Lfunc_begin25
	.quad	.Ltmp1024
	.quad	.Lfunc_begin26
	.quad	.Ltmp1033
	.quad	.Lfunc_begin27
	.quad	.Ltmp1040
	.quad	.Lfunc_begin28
	.quad	.Ltmp1070
	.quad	.Lfunc_begin29
	.quad	.Ltmp1085
	.quad	.Lfunc_begin30
	.quad	.Ltmp1118
	.quad	.Lfunc_begin31
	.quad	.Ltmp1133
	.quad	.Ltmp1134
	.quad	.Ltmp1136
	.quad	.Ltmp1137
	.quad	.Ltmp1139
	.quad	.Ltmp1140
	.quad	.Ltmp1142
	.quad	.Ltmp1143
	.quad	.Lfunc_begin32
	.quad	.Ltmp1157
	.quad	.Ltmp1158
	.quad	.Ltmp1160
	.quad	.Ltmp1161
	.quad	.Lfunc_begin33
	.quad	.Ltmp1171
	.quad	.Ltmp1172
	.quad	.Ltmp1174
	.quad	.Ltmp1175
	.quad	.Lfunc_begin34
	.quad	.Ltmp1185
	.quad	.Ltmp1186
	.quad	.Lfunc_begin35
	.quad	.Ltmp1194
	.quad	.Ltmp1260
	.quad	.Lfunc_begin36
	.quad	.Ltmp1372
	.quad	.Ltmp1373
	.quad	.Lfunc_begin37
	.quad	.Ltmp1381
	.quad	.Ltmp1436
	.quad	.Lfunc_begin38
	.quad	.Ltmp1497
	.quad	.Ltmp1498
	.quad	.Ltmp1499
	.quad	.Lfunc_begin39
	.quad	.Ltmp1508
	.quad	.Ltmp1520
	.quad	.Ltmp1531
	.quad	.Ltmp1511
	.quad	.Ltmp1512
	.quad	.Ltmp1514
	.quad	.Ltmp1515
	.quad	.Ltmp1521
	.quad	.Ltmp1522
	.quad	.Ltmp1524
	.quad	.Ltmp1526
	.quad	.Ltmp1532
	.quad	.Ltmp1533
	.quad	.Ltmp1535
	.quad	.Ltmp1537
	.quad	.Lfunc_begin40
	.quad	.Ltmp1546
	.quad	.Ltmp1559
	.quad	.Ltmp1571
	.quad	.Ltmp1549
	.quad	.Ltmp1550
	.quad	.Ltmp1552
	.quad	.Ltmp1554
	.quad	.Ltmp1560
	.quad	.Ltmp1561
	.quad	.Ltmp1564
	.quad	.Ltmp1566
	.quad	.Ltmp1573
	.quad	.Ltmp1575
	.quad	.Ltmp1577
	.quad	.Ltmp1579
	.quad	.Lfunc_begin41
	.quad	.Ltmp1587
	.quad	.Ltmp1595
	.quad	.Ltmp1601
	.quad	.Ltmp1590
	.quad	.Ltmp1592
	.quad	.Ltmp1596
	.quad	.Ltmp1598
	.quad	.Ltmp1603
	.quad	.Ltmp1606
	.quad	.Lfunc_begin42
	.quad	.Ltmp1615
	.quad	.Ltmp1616
	.quad	.Ltmp1617
	.quad	.Lfunc_begin43
	.quad	.Ltmp1626
	.quad	.Ltmp1634
	.quad	.Ltmp1640
	.quad	.Ltmp1629
	.quad	.Ltmp1631
	.quad	.Ltmp1635
	.quad	.Ltmp1637
	.quad	.Ltmp1642
	.quad	.Ltmp1645
	.quad	.Lfunc_begin44
	.quad	.Ltmp1654
	.quad	.Ltmp1655
	.quad	.Ltmp1656
	.quad	.Lfunc_begin45
	.quad	.Ltmp1668
	.quad	.Ltmp1669
	.quad	.Ltmp1670
	.quad	.Ltmp1671
	.quad	.Lfunc_begin46
	.quad	.Ltmp1682
	.quad	.Ltmp1694
	.quad	.Ltmp1706
	.quad	.Ltmp1717
	.quad	.Ltmp1684
	.quad	.Ltmp1685
	.quad	.Ltmp1687
	.quad	.Ltmp1689
	.quad	.Ltmp1696
	.quad	.Ltmp1697
	.quad	.Ltmp1699
	.quad	.Ltmp1701
	.quad	.Ltmp1707
	.quad	.Ltmp1709
	.quad	.Ltmp1711
	.quad	.Ltmp1712
	.quad	.Ltmp1718
	.quad	.Ltmp1719
	.quad	.Ltmp1721
	.quad	.Ltmp1722
	.quad	.Lfunc_begin47
	.quad	.Ltmp1731
	.quad	.Ltmp1746
	.quad	.Ltmp1758
	.quad	.Ltmp1768
	.quad	.Ltmp1734
	.quad	.Ltmp1736
	.quad	.Ltmp1738
	.quad	.Ltmp1741
	.quad	.Ltmp1747
	.quad	.Ltmp1748
	.quad	.Ltmp1750
	.quad	.Ltmp1753
	.quad	.Ltmp1759
	.quad	.Ltmp1760
	.quad	.Ltmp1762
	.quad	.Ltmp1763
	.quad	.Ltmp1769
	.quad	.Ltmp1770
	.quad	.Ltmp1772
	.quad	.Ltmp1773
	.quad	.Lfunc_begin48
	.quad	.Ltmp1781
	.quad	.Ltmp1789
	.quad	.Ltmp1795
	.quad	.Ltmp1801
	.quad	.Ltmp1785
	.quad	.Ltmp1787
	.quad	.Ltmp1790
	.quad	.Ltmp1792
	.quad	.Ltmp1796
	.quad	.Ltmp1798
	.quad	.Ltmp1803
	.quad	.Ltmp1805
	.quad	.Lfunc_begin49
	.quad	.Ltmp1814
	.quad	.Ltmp1815
	.quad	.Ltmp1816
	.quad	.Ltmp1817
	.quad	.Lfunc_begin50
	.quad	.Ltmp1826
	.quad	.Ltmp1834
	.quad	.Ltmp1840
	.quad	.Ltmp1846
	.quad	.Ltmp1830
	.quad	.Ltmp1832
	.quad	.Ltmp1835
	.quad	.Ltmp1837
	.quad	.Ltmp1841
	.quad	.Ltmp1843
	.quad	.Ltmp1848
	.quad	.Ltmp1850
	.quad	.Lfunc_begin51
	.quad	.Ltmp1859
	.quad	.Ltmp1860
	.quad	.Ltmp1861
	.quad	.Ltmp1862
	.quad	.Lfunc_begin52
	.quad	.Ltmp1870
	.quad	.Ltmp1872
	.quad	.Ltmp1874
	.quad	.Ltmp1876
	.quad	.Lfunc_begin53
	.quad	.Ltmp1883
	.quad	.Ltmp1886
	.quad	.Lfunc_begin54
	.quad	.Ltmp1892
	.quad	.Ltmp1894
	.quad	.Lfunc_begin55
	.quad	.Ltmp1901
	.quad	.Lfunc_begin56
	.quad	.Ltmp1912
	.quad	.Lfunc_begin57
	.quad	.Ltmp1928
	.quad	.Lfunc_begin58
	.quad	.Ltmp1944
	.quad	.Lfunc_begin59
	.quad	.Ltmp1954
	.quad	.Ltmp1955
	.quad	.Ltmp1956
	.quad	.Ltmp1957
	.quad	.Lfunc_begin60
	.quad	.Ltmp1964
	.quad	.Lfunc_begin61
	.quad	.Ltmp1967
	.quad	.Ltmp1969
	.quad	.Lfunc_begin62
	.quad	.Ltmp2000
	.quad	.Lfunc_begin63
	.quad	.Ltmp2105
	.quad	.Ltmp2109
	.quad	.Lfunc_begin64
	.quad	.Ltmp2223
	.quad	.Lfunc_begin65
	.quad	.Ltmp2236
	.quad	.Lfunc_begin66
	.quad	.Ltmp2252
	.quad	.Ltmp2331
	.quad	.Ltmp2383
	.quad	.Lfunc_begin67
	.quad	.Ltmp2607
	.quad	.Ltmp2629
	.quad	.Ltmp2641
	.quad	.Ltmp2646
	.quad	.Ltmp2647
	.quad	.Ltmp2651
	.quad	.Ltmp2653
	.quad	.Ltmp2657
	.quad	.Ltmp2659
	.quad	.Ltmp2663
	.quad	.Ltmp2665
.Ldebug_addr_end0:
	.ident	"clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)"
	.section	".note.GNU-stack","",@progbits
	.section	.debug_line,"",@progbits
.Lline_table_start0:
